{
    "title": "ld-uClibc.so.0: No Such file or directory when running qemu-mipsel-static",
    "link": "https://reverseengineering.stackexchange.com/questions/24634/ld-uclibc-so-0-no-such-file-or-directory-when-running-qemu-mipsel-static",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  BLUF: When executing\n  <code>\n   sudo chroot . ./qemu-mipsel-static ./bin/busybox\n  </code>\n  from the squashfs-root folder the error\n  <code>\n   /lib/ld-uClibc.so.0: No such file or directory\n  </code>\n  is returned. Failing to figure out how to fix the error.\n </p>\n <p>\n  I am in the early stages of analyzing a firmware update for a consumer router. Busybox is included with the firmware and I am trying to see what I can run with it in an emulated environment.\n </p>\n <p>\n  I see that a version of the uClibc library is included with the firmware:\n  <code>\n   /lib/ld-uClibc-0.9.29.so\n  </code>\n </p>\n <p>\n  I tried symlinking ld-uClibc-0.9.29.so to ld-uClibc.so.0 but I receive\n  <code>\n   ln: failed to create symbolic link 'ld-uClibc.so.0': Operation not permitted\n  </code>\n  so my understanding of the symbolic linking process in this context is certainly coming up short.\n </p>\n <p>\n  How can I get qemu-mipsel-static to recognize the library? Do I need to install a different library?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "4k",
    "tags": [
        "qemu"
    ],
    "user": "garv",
    "time": "Apr 6, 2020 at 20:35",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You need to pass the path to the device files directory using the\n  <code>\n   -L\n  </code>\n  switch\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Apr 7, 2020 at 22:13",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The issue turned out that the directories I was working in were mounted as a share in a VirtualBox guest. By default symbolic linking is not enabled on a shared folder as the host OS might not be able to understand a symbolic link. More information can be found here in the second comment:\n  <a href=\"https://www.virtualbox.org/ticket/18572?cversion=0&cnum_hist=2\" rel=\"nofollow noreferrer\">\n   https://www.virtualbox.org/ticket/18572?cversion=0&cnum_hist=2\n  </a>\n </p>\n <p>\n  My problem was solved once enabling symbolic linking for my shared drive and then creating a symbolic link from squashfs-root/lib/ld-uClibc-0.9.29.so to squashfs-root/lib/ld-uClic.so.0\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "garv",
            "time": "Apr 8, 2020 at 20:16",
            "is_accepted": true,
            "comments": []
        }
    ]
}