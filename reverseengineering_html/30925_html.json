{
    "title": "Identify two structs in IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/30925/identify-two-structs-in-ida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  When decompiling an exe file, I have defined two structs\n  <code>\n   struct A\n  </code>\n  and\n  <code>\n   struct B\n  </code>\n  that are of the same structure. They appeared under different contexts, thus I assumed that they were different structs. However, as the contexts merge, I realize that these are in fact the same struct.\n </p>\n <p>\n  Now I would like to get rid of\n  <code>\n   struct B\n  </code>\n  and replace all its occurance with\n  <code>\n   struct A\n  </code>\n  . Is it possible to do that without manually changing everything?\n </p>\n <p>\n  I know that I can define\n  <code>\n   struct B\n  </code>\n  as containing just one\n  <code>\n   struct A\n  </code>\n  as its member, but this feels less optimal and creates unnecessary syntax in decompiled code.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "369",
    "tags": [
        "ida",
        "struct"
    ],
    "user": "WhatsUp",
    "time": "Sep 26, 2022 at 15:06",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can do that through the \"local types\" window (\n  <code>\n   View -> Open subviews -> Local types\n  </code>\n  ). Right-click on the structure and select\n  <code>\n   Map to another type\n  </code>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "Rolf Rolles",
            "time": "Sep 26, 2022 at 17:30",
            "is_accepted": true,
            "comments": [
                {
                    "user": "WhatsUp",
                    "text": "<span class=\"comment-copy\">Thank you , this works fine.</span>",
                    "time": null
                }
            ]
        }
    ]
}