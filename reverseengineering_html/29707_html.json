{
    "title": "How to hook to a system function",
    "link": "https://reverseengineering.stackexchange.com/questions/29707/how-to-hook-to-a-system-function",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  How to hook to external library function, such as OpenGL for example.\n </p>\n <p>\n  I have a function used by the program I am trying to change behaviour of. The function is:\n </p>\n <pre><code>lVar17 = glfwCreateWindow(uVar22,uVar25,pplVar29,uVar30,0);\n</code></pre>\n <p>\n  Now, I want to change that function without changing the caller function. I.e. the caller function and the call above will remain exactly the same, but the glfwCreateWindow will return something different, i.e. it will be re-written like this:\n </p>\n <pre><code>glfwCreateWindow (uVar22,uVar25,pplVar29,uVar30,0) {\n\n    GLFWwindow* window = glfwCreateWindow(uVar22,uVar25,pplVar29,uVar30,0);\n    HWND hwnd = FindWindow(NULL, WindowName);\n    GLFWwindow* atchdHwd = glfwAttachWin32Window(hwnd, window); \n    return atchdHwd;\n}\n</code></pre>\n <p>\n  Any way of doing this?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "524",
    "tags": [
        "c++",
        "dll",
        "function-hooking",
        "dll-injection"
    ],
    "user": "Irbis77",
    "time": "Dec 11, 2021 at 15:42",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Two possibilities:\n </p>\n <ol>\n  <li>\n   Patch the\n   <code>\n    call\n   </code>\n   instruction to point to a destination of your choosing, such as a \"code cave\" between the end of the\n   <code>\n    .text\n   </code>\n   section and the subsequent section. Write your function there, or\n   <code>\n    jmp\n   </code>\n   to your DLL / a piece of allocated memory containing your function.\n  </li>\n  <li>\n   Overwrite the IAT entry for\n   <code>\n    glfwCreateWindow\n   </code>\n   , and point it to your new function. Note that this will affect all calls to that function. If you want to affect only individual call sites, you can, for example, check the return address of the caller to ensure that it's the specific call site that you want.\n  </li>\n </ol>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Rolf Rolles",
            "time": "Dec 11, 2021 at 19:41",
            "is_accepted": true,
            "comments": []
        }
    ]
}