{
    "title": "\"unknown publisher\" after adding new PE section",
    "link": "https://reverseengineering.stackexchange.com/questions/25673/unknown-publisher-after-adding-new-pe-section",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm starting to learn about reverse engineering and I'm currently encountering a problem with a game I'm trying to patch. I needed more space to insert instructions in my program so I followed the method described here:\n  <a href=\"https://stackoverflow.com/questions/35685589/how-do-i-make-space-for-my-code-cave-in-a-windows-pe-32bit-executable\">\n   https://stackoverflow.com/questions/35685589/how-do-i-make-space-for-my-code-cave-in-a-windows-pe-32bit-executable\n  </a>\n  and added a new section where I could put my new instructions. Then when I run the program, the instructions are properly executed, no crash happening.\n </p>\n <p>\n  My issue is that when I'm launching the game, I get a popup asking if I want to \"allow this app from an unknown publisher to make changes to your device\", which is annoying. If I display the \"Details\" tab in the properties of the file, most of the information (such as File Description, File version...) are missing when they were there before the patch. Is it an expected consequence of adding a new section at the end of the executable? It looks like those information are inside the .rsrc section.\nAnd is there something I can do to fix it so I don't get the popup?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "136",
    "tags": [
        "pe",
        "section"
    ],
    "user": "An29",
    "time": "Aug 14, 2020 at 17:44",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  By adding an additional section you have broken the\n  <a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/install/authenticode\" rel=\"nofollow noreferrer\">\n   Authenticode signature\n  </a>\n  .\n </p>\n <p>\n  There is a great primer about how signatures work and are validated on\n  <a href=\"https://blog.trailofbits.com/2020/05/27/verifying-windows-binaries-without-windows/\" rel=\"nofollow noreferrer\">\n   this blog\n  </a>\n  , which says:\n </p>\n <blockquote>\n  <p>\n   Integrity: Each Authenticode signature includes a cryptographic hash of the signed binary. This hash is compared against the binaryâ€™s in-memory representation at load time, preventing malicious modifications.\n  </p>\n </blockquote>\n <p>\n  Technically it prevents\n  <em>\n   all\n  </em>\n  modifications, not just malicious ones. Crucially, the Authenticode signature covers all data except (\n  <em>\n   also see Note 1\n  </em>\n  ):\n </p>\n <ul>\n  <li>\n   The PE checksum.\n  </li>\n  <li>\n   The certificate data directory entry.\n  </li>\n  <li>\n   The certificate table (and signatures).\n  </li>\n </ul>\n <p>\n  <a href=\"https://blog.reversinglabs.com/blog/breaking-the-windows-authenticode-security-model\" rel=\"nofollow noreferrer\">\n   This article\n  </a>\n  discusses various ways of potentially breaking the Authenticode model (but none are likely to help what you are trying to do).\n </p>\n <p>\n  Authenticode is designed to stop what you are attempting: modifying the executable without providing a warning. Other runtime code injection techniques are not prevented (except perhaps in device drivers), so you could potentially modify the code in a different way.\n </p>\n <hr/>\n <p>\n  Note 1 - The PE \"overlay\" was historically not covered, but see Microsoft's\n  <a href=\"https://msrc-blog.microsoft.com/2013/12/10/ms13-098-update-to-enhance-the-security-of-authenticode/\" rel=\"nofollow noreferrer\">\n   details about MS13-098\n  </a>\n  and\n  <a href=\"https://docs.microsoft.com/en-us/security-updates/SecurityAdvisories/2014/2915720?redirectedfrom=MSDN\" rel=\"nofollow noreferrer\">\n   security advisory 2915720\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "David",
            "time": "Aug 15, 2020 at 8:25",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If changing the signature won't affect the game (i.e. no part of the game checks the publisher, which is rare) you can simply create your own certificate, install it and use it to resign the application after the changes. Alternatively, you can remove it.\n </p>\n <p>\n  Authenticode signature is the cryptographic way to prove that the binaries haven't been tampered with after publishing. If you sign the application again, you become the publisher.\n </p>\n <p>\n  You can start from\n  <a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/install/authenticode\" rel=\"nofollow noreferrer\">\n   MSDN\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Yennefer",
            "time": "Aug 15, 2020 at 8:04",
            "is_accepted": false,
            "comments": []
        }
    ]
}