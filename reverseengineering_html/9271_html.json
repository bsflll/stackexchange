{
    "title": "Decoding A/C IR Codes",
    "link": "https://reverseengineering.stackexchange.com/questions/9271/decoding-a-c-ir-codes",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I captured infrared codes from an air conditioner remote to realize each code contains the entire state (i.e. temperature, mode, fan speed, etc.) every time a button is pressed. I believe this is so if one or more button press are missed the system remains in sync (ex.: hide the IR emitter and press the temp up a few times).\n </p>\n <p>\n  Now instead of capturing every possible combination by cycling through all the modes and options and pressing all the buttons one by one I thought it might be wiser to try to understand the logic behind managing the state myself.\n </p>\n <p>\n  Below are some codes captured in the same mode/fan speed. Only the temperature, on/off and louver function were triggered. I divided bits to isolate the groups I could identify.\n </p>\n <ul>\n  <li>\n   First group appears to be constant across and includes an init code showing as \"2\" (the constant sections below may contain other settings like mode/fan speed which were not captured)\n  </li>\n  <li>\n   Second group is the power button (on-20/off-20 is the on/off button pressed at 20 degrees)\n  </li>\n  <li>\n   Third group is constant\n  </li>\n  <li>\n   Fourth group is the temperature truncated at 4 bits (and the bits are reversed - I am assuming endianess)\n  </li>\n  <li>\n   Fifth group is constant\n  </li>\n  <li>\n   Sixth group is the louver on/off (3 bits)\n  </li>\n  <li>\n   Seventh group is constant\n  </li>\n  <li>\n   Eighth group appears to be a checksum (not sure)\n  </li>\n </ul>\n <p>\n  I think it should be trivial enough identifying each group but what I am not sure about is the last group which appears to be a checksum, but what kind of checksum, and a checksum of which group?\n </p>\n <pre><code>*FUNC********* *1***************************************** 2 *3*********** *4** *5***** *6* *7******************************** *8******\n16:            2001110110010110010011011011111111111111111 0 1101100111111 0000 1111111 111 1111111111111111111111111111111111 00101101\n17:            2001110110010110010011011011111111111111111 0 1101100111111 1000 1111111 111 1111111111111111111111111111111111 10101101\n18:            2001110110010110010011011011111111111111111 0 1101100111111 0100 1111111 111 1111111111111111111111111111111111 01101101\n19:            2001110110010110010011011011111111111111111 0 1101100111111 1100 1111111 111 1111111111111111111111111111111111 11101101\n20:            2001110110010110010011011011111111111111111 0 1101100111111 0010 1111111 111 1111111111111111111111111111111111 00011101\n21:            2001110110010110010011011011111111111111111 0 1101100111111 1010 1111111 111 1111111111111111111111111111111111 10011101\n22:            2001110110010110010011011011111111111111111 0 1101100111111 0110 1111111 111 1111111111111111111111111111111111 01011101\n23:            2001110110010110010011011011111111111111111 0 1101100111111 1110 1111111 111 1111111111111111111111111111111111 11011101\n24:            2001110110010110010011011011111111111111111 0 1101100111111 0001 1111111 111 1111111111111111111111111111111111 00111101\n25:            2001110110010110010011011011111111111111111 0 1101100111111 1001 1111111 111 1111111111111111111111111111111111 10111101\n26:            2001110110010110010011011011111111111111111 0 1101100111111 0101 1111111 111 1111111111111111111111111111111111 01111101\n27:            2001110110010110010011011011111111111111111 0 1101100111111 1101 1111111 111 1111111111111111111111111111111111 11111101\n28:            2001110110010110010011011011111111111111111 0 1101100111111 0011 1111111 111 1111111111111111111111111111111111 00000011\n29:            2001110110010110010011011011111111111111111 0 1101100111111 1011 1111111 111 1111111111111111111111111111111111 10000011\n30:            2001110110010110010011011011111111111111111 0 1101100111111 0111 1111111 111 1111111111111111111111111111111111 01000011\n\nON-20:         2001110110010110010011011011111111111111111 0 1101100111111 0010 1111111 111 1111111111111111111111111111111111 00011101\nOFF-20:        2001110110010110010011011011111111111111111 1 1101100111111 0010 1111111 111 1111111111111111111111111111111111 00111101\n\nLOUVER-ON-20:  2001110110010110010011011011111111111111111 0 1101100111111 0010 1111111 000 1111111111111111111111111111111111 00000001\nLOUVER-OFF-20: 2001110110010110010011011011111111111111111 0 1101100111111 0010 1111111 111 1111111111111111111111111111111111 00011101\n</code></pre>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "242",
    "tags": [
        "functions",
        "machine-code"
    ],
    "user": "dranger003",
    "time": "Jul 1, 2015 at 20:23",
    "comments": [
        {
            "user": "Jason Geffner",
            "text": "<html><body><span class=\"comment-copy\">\n You say these are bits, but each of your codes starts with\n <code>\n  2\n </code>\n .\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "dranger003",
            "text": "<html><body><span class=\"comment-copy\">\n The first code is an init code but the other ones should be bits. IR works by sending combinations of HIGH/LOW pulse width modulations so there could be more than two variations (this is what the first code is, a third variation).\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Spektre",
            "text": "<html><body><span class=\"comment-copy\">\n how many IR LEDs are there? sometimes there are 2 each with different band ... also are the PWM ratios fixed? if not then some info can be PWM modulated (not bit in that case) also the checksum could be time stamp sort the numbers by time of receive and look if the time is increasing (it could be used to avoid reflections mess up settings but for light that seems not be likely)\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "dranger003",
            "text": "<html><body><span class=\"comment-copy\">\n Interesting. There is only 1 IR LED and the PWM is fixed at ~ 38kHz. I think these are definitely bits as the temperatures are matching the bits except they are reversed.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}