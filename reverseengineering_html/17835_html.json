{
    "title": "print [B byte array in frida js script",
    "link": "https://reverseengineering.stackexchange.com/questions/17835/print-b-byte-array-in-frida-js-script",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm learning frida and trying to hook a function that looks like:\n </p>\n <pre><code>`.method public final fn()[B`\n</code></pre>\n <p>\n  It returns a byte array. Here's my code:\n </p>\n <pre><code>Java.perform(function () {\n    var test = Java.use(\"com...\");\n    test.fn.overload().implementation = function () {\n        var ret = this.fn();\n        console.log(\"how to write here?\");\n        return ret;\n    };\n});\n</code></pre>\n <p>\n  How to print the\n  <code>\n   ret\n  </code>\n  variable returned by the function? It's a\n  <em>\n   byte[]\n  </em>\n  . I tried\n  <code>\n   console.log\n  </code>\n  but it only prints a\n  <em>\n   [object]\n  </em>\n  , and\n  <code>\n   hexdump\n  </code>\n  complains\n  <em>\n   'expected a pointer'\n  </em>\n  . How can I print the array?\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 6,
    "views": "25k",
    "tags": [
        "android",
        "function-hooking"
    ],
    "user": "aj3423",
    "time": "Mar 28, 2018 at 19:19",
    "comments": [
        {
            "user": "sudhackar",
            "text": "<html><body><span class=\"comment-copy\">\n <a href=\"https://stackoverflow.com/a/957652/2967945\">\n  stackoverflow.com/a/957652/2967945\n </a>\n should work for you. It might have a length field.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Thorbj√∏rn Ravn Andersen",
            "text": "<html><body><span class=\"comment-copy\">\n If you know it is a string you can pass it to a String constructor.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n </p>\n <pre><code>var ret = this.fn();\nvar buffer = Java.array('byte', ret);\nconsole.log(buffer.length);\nvar result = \"\";\nfor(var i = 0; i < buffer.length; ++i){\n    result+= (String.fromCharCode(buffer[i]));\n}\nconsole.log(result);\n</code></pre>\n</div>\n</body></html>",
            "votes": "10",
            "user": "perror",
            "time": "Mar 29, 2018 at 10:59",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Robert",
                    "text": "<span class=\"comment-copy\">But this only works for arrays with byte values that represent printable characters. Wouldn't it be better to just print the array in hex representation using something like <code>result+= (buffer[i] &amp; 0xff).toString(16);</code>?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Frida's java byte array element representation is signed number currently. Therefore, your byte array may contain negative number. We should edit accepted answer to reflect this:\n </p>\n <pre><code>var buffer = Java.array('byte', ret);\nvar result = \"\";\nfor(var i = 0; i < buffer.length; ++i){\n    result += (String.fromCharCode(buffer[i] & 0xff)); // here!!\n}\nconsole.log(result);\n</code></pre>\n <p>\n  Related\n  <a href=\"https://stackoverflow.com/a/9609447/9304999\">\n   https://stackoverflow.com/a/9609447/9304999\n  </a>\n  and\n  <a href=\"https://github.com/frida/frida/issues/289\" rel=\"nofollow noreferrer\">\n   https://github.com/frida/frida/issues/289\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "rosshjb",
            "time": "Oct 6, 2019 at 4:03",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <strong>\n   One liner\n  </strong>\n  <code>\n   console.log(Java.use(\"java.util.Arrays\").toString(ret))\n  </code>\n  ;\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "AMRTS",
            "time": "Feb 26, 2022 at 10:44",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <h1>\n  Dump byte-array as hex (Android only)\n </h1>\n <p>\n  If you are using\n  <strong>\n   Frida on Android\n  </strong>\n  there is an alternative, using the Android built-in Apache commons codec Hex encoder. As far as I know all Android versions should include the class\n  <code>\n   org.apache.commons.codec.binary.Hex\n  </code>\n  . Unfortunately the version available in Android does not directly output a String, hence you also have to use\n  <code>\n   java.lang.String\n  </code>\n  class:\n </p>\n <pre><code>function encodeHex(byteArray) {\n    const HexClass = Java.use('org.apache.commons.codec.binary.Hex');\n    const StringClass = Java.use('java.lang.String');\n    const hexChars = HexClass.encodeHex(byteArray);\n    return StringClass.$new(hexChars).toString();\n}\n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Robert",
            "time": "Feb 28, 2022 at 13:22",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <strong>\n   Easy:\n  </strong>\n </p>\n <pre><code>var stringClass = Java.use(\"java.lang.String\");\nvar stringInstance = stringClass.$new(ret);\nconsole.log('look = ' + stringInstance.toString())\n</code></pre>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Mkurbanov",
            "time": "Dec 8, 2023 at 7:53",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  the up to date method to do this is as follows\n </p>\n <pre><code>let barr = Java.cast(\"byte\", ret);\nconsole.log(barr);\n</code></pre>\n <p>\n  create a javascript byte array binding then print it\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "ahmed mani",
            "time": "Jan 8 at 0:37",
            "is_accepted": false,
            "comments": []
        }
    ]
}