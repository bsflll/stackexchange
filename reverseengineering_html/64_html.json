{
    "title": "What is a good tools to reverse the effects of Minify on JavaScript?",
    "link": "https://reverseengineering.stackexchange.com/questions/64/what-is-a-good-tools-to-reverse-the-effects-of-minify-on-javascript",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Are there any scripts and/or online tools that can reverse the effects of minification?\n </p>\n <p>\n  I'm specifically looking to unminify a minified JavaScript file.  Variable renaming is not a big issue, I want it sufficiently readable to be able to analyze the execution.\n </p>\n</div>\n</body></html>",
    "votes": "33",
    "answers": 5,
    "views": "26k",
    "tags": [
        "obfuscation",
        "javascript"
    ],
    "user": "WPrecht",
    "time": "Mar 20, 2013 at 18:23",
    "comments": [
        {
            "user": "user187",
            "text": "<html><body><span class=\"comment-copy\">\n Just before anyone goes all downvoty,\n <a href=\"http://blog.stackoverflow.com/2011/07/its-ok-to-ask-and-answer-your-own-questions/\">\n  it's OK to ask and answer your own question\n </a>\n . It's cool, actually, and helps the site! Good question, WPrecht :-)\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "WPrecht",
            "text": "<html><body><span class=\"comment-copy\">\n Thanks. I had assumed we were to do stuff like this in the closed beta to help seed the site.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n @Keelan: unfortunately some people disagree.\n <a href=\"https://reverseengineering.stackexchange.com/questions/137\">\n  Point in case\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "SamB",
            "text": "<html><body><span class=\"comment-copy\">\n @0xC0000022L Er ... that's deleted. Is that your case?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n @SamB not the fact that it's deleted. No. It has been deleted within the last six years (in fact it got deleted about one month after it got closed which was approximately at the time of my comment). With enough reputation you'd still be able to see it, though.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <p>\n   I'm specifically looking to unminify a minified JavaScript file. Variable renaming is not a big issue, I want it sufficiently readable to be able to analyze the execution.\n  </p>\n </blockquote>\n <p>\n  Your question title indicates merely reversing minified code, and not necessarily understanding it. But if you are attempting to gain an understanding of it, Opera Dragonfly sounds like a tool you may find very useful...\n </p>\n <p>\n  I have always used Dragonfly for analyzing minified code. In addition to having a pretty printer, it also has incredibly handy analysis functionality.\n </p>\n <p>\n  Here is jQuery.min in all it's minified glory...\n  <img alt=\"jQuery, in all its minified glory.\" src=\"https://i.sstatic.net/HEuPT.jpg\"/>\n </p>\n <p>\n  The button I circled here is the pretty printer which suddenly turns the code into something like this:\n  <img alt=\"Beautified jQuery.min\" src=\"https://i.sstatic.net/AD0in.jpg\"/>\n </p>\n <p>\n  Which is a nice start, but it is still very difficult to understand without some idea of what it looks like during execution.\n </p>\n <p>\n  First you need to determine what part of a minified file's functionality you are trying to understand.\n  <i>\n   Event\n  </i>\n  breakpoints are incredibly handy for this because you can set them for almost any user input, or on an element's load. For example, if I wanted to see what happens in jQuery when a mouseover event occurs, I could add an event breakpoint for \"mouseover\". That way I can see where the entry point into the code is when I move my mouse over a specific element.\n </p>\n <p>\n  When your code hits a breakpoint, you get into a mode where you can, like in many DOM debuggers, interact with the current state of the code you are inspecting. But you are able to do it by hovering the mouse over sections of code so it's really quite easy to keep the code context in mind.\n </p>\n <p>\n  <img alt=\"Event breakpoint and analysis.\" src=\"https://i.sstatic.net/fSuow.jpg\"/>\n </p>\n <p>\n  You can also inspect scope and who references what from the \"State\" sub-tab in the Scripts tab in the same way as you can with the source window. So you can see if a variable overrides another, or if fancy closure magic is happening somewhere, or what scope a variable actually originated from. Also if you look at a DOM element, you can mouse over that to highlight it on the page. (See last picture.)\n </p>\n <p>\n  <img alt=\"State tab.\" src=\"https://i.sstatic.net/vYUmG.jpg\"/>\n </p>\n <p>\n  The Dragonfly console also has this mouseover functionality... Also everything has tab completion, so you can execute any code from any state, inspect at any level of execution, reassign variables, run tests, or just navigate around with [Tab] completion to do just about anything to figure out what the code you are looking at does.\n  <img alt=\"Console tab.\" src=\"https://i.sstatic.net/876G2.jpg\"/>\n </p>\n <p>\n  Opera's inspector will definitely aid in reversing and understanding minified or obfuscated code.\n </p>\n</div>\n</body></html>",
            "votes": "22",
            "user": "Archenoth",
            "time": "Mar 21, 2013 at 6:55",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Erran Morad",
                    "text": "<span class=\"comment-copy\">So minifiers replace function names, variables etc with short meaningless names? Is it possible to get the original code back under any circumstances of is it impossible ?</span>",
                    "time": null
                },
                {
                    "user": "Archenoth",
                    "text": "<span class=\"comment-copy\">Unfortunately not. Without access to the original code itself, there's no way to know what anything used to be named. (Also, this was written a pretty long time ago before Opera switched it's internals, so it's not really accurate. Currently the best debugger imo is actually in Chrome now--a lot has changed since 2013)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I prefer to use the pretty printer inbuilt in Google Chrome's Developer Tools.\n </p>\n <p>\n  Here is the minified Code:\n  <img alt=\"enter image description here\" src=\"https://i.sstatic.net/PVsC6.png\"/>\n </p>\n <p>\n  On pressing the pretty print button, you get the following:\n  <img alt=\"enter image description here\" src=\"https://i.sstatic.net/lco7Z.png\"/>\n </p>\n</div>\n</body></html>",
            "votes": "16",
            "user": "Devdatta Tengshe",
            "time": "Mar 21, 2013 at 5:16",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Erran Morad",
                    "text": "<span class=\"comment-copy\">So minifiers replace function names, variables etc with short meaningless names? Is it possible to get the original code back under any circumstances of is it impossible ?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  A good place to start is\n  <a href=\"http://jsbeautifier.org/\">\n   JSBeautifier\n  </a>\n  . In general, it depends on the minify method that was used.  This one formats the code and has lots of options.  It can also unpack \"packed\" scripts (packed with Dean Edward's\n  <a href=\"http://dean.edwards.name/packer/\">\n   packer\n  </a>\n  ).  A handy variant of this code is available as a Firefox plugin\n  <a href=\"https://addons.mozilla.org/en-US/firefox/addon/javascript-deminifier/\">\n   Javascript Deminifier\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "8",
            "user": "WPrecht",
            "time": "Mar 20, 2013 at 18:40",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Erran Morad",
                    "text": "<span class=\"comment-copy\">So minifiers replace function names, variables etc with short meaningless names? Is it possible to get the original code back under any circumstances of is it impossible ?</span>",
                    "time": null
                },
                {
                    "user": "WPrecht",
                    "text": "<span class=\"comment-copy\">If the function and variable names have been replaced, there's no way back to their original names.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I recently tried\n  <a href=\"http://www.jsnice.org/\" rel=\"noreferrer\">\n   http://www.jsnice.org/\n  </a>\n  on 50+KB of a single minified JavaScript file containing lots of dynamic modification code that Cordova's runtime refused to execute (for an app targeted at Windows Phone 8.1 and Windows 10). The results were amazing as it recognises matching code fragments that are available unminified from thousands of opensource projects. I hope it helps you and others in future.\n </p>\n</div>\n</body></html>",
            "votes": "6",
            "user": "JulianHarty",
            "time": "Feb 10, 2017 at 18:21",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Stuart P. Bentley",
                    "text": "<span class=\"comment-copy\">jsnice is the best. Minification isn't worth much when the variable names aren't refactored back, and none of the other items on this list will do that for you.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"https://unminify.com/\" rel=\"nofollow noreferrer\">\n   https://unminify.com/\n  </a>\n  Free tool to unminify (unpack, deobfuscate) JavaScript, CSS, HTML, XML and JSON code, making it readable and pretty.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Guest",
            "time": "Jan 26, 2022 at 12:33",
            "is_accepted": false,
            "comments": []
        }
    ]
}