{
    "title": "Ghidra is mishandling a field access",
    "link": "https://reverseengineering.stackexchange.com/questions/25724/ghidra-is-mishandling-a-field-access",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a program which decompiles in Ghidra to include the line\n </p>\n <pre><code>temp_5f2f2f81bc = *(CPedIntelligence **)(&DAT_000010c0 + (longlong)pCVar2);\n</code></pre>\n <p>\n  <code>\n   temp_5f2f2f81bc\n  </code>\n  is a\n  <code>\n   CPedIntelligence*\n  </code>\n  .\n  <code>\n   pCVar2\n  </code>\n  is a\n  <code>\n   CPed*\n  </code>\n  , and\n  <code>\n   CPed\n  </code>\n  has a\n  <code>\n   CPedIntelligence*\n  </code>\n  located at offset\n  <code>\n   0x10c0\n  </code>\n  . So this\n  <em>\n   should\n  </em>\n  decompile as\n  <code>\n   temp_5f2f2f81bc = pCVar2->intelligence;\n  </code>\n  . Is there a way to tell Ghidra \"no,\n  <code>\n   pCVar2\n  </code>\n  should not be cast to longlong?\"\n </p>\n <p>\n  I've noticed this occurring other times as well, and it generally seems to be associated with a structure stored in a register (here,\n  <code>\n   pCVar2\n  </code>\n  is stored in\n  <code>\n   R13\n  </code>\n  ). In the function's local variables, though,\n  <code>\n   pCVar2\n  </code>\n  is listed as being stored in\n  <code>\n   HASH:5f32eb8...\n  </code>\n  The register is never used in the function\n  <em>\n   except\n  </em>\n  as the storage for this\n  <code>\n   CPed*\n  </code>\n  , so if I could forcibly tell the decompiler \"this register has this type throughout the entire function\" then that'd help. I tried using scripting to create a local variable stored in\n  <code>\n   R13\n  </code>\n  , but the decompiler didn't pick up on it.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "244",
    "tags": [
        "windows",
        "decompilation",
        "ghidra"
    ],
    "user": "cpast",
    "time": "Aug 22, 2020 at 18:06",
    "comments": [],
    "answers_data": []
}