{
    "title": "getting ecx register from caller",
    "link": "https://reverseengineering.stackexchange.com/questions/21250/getting-ecx-register-from-caller",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  i need to get the ecx register from the function that is calling my function (__fastcall convention)\n </p>\n <p>\n  i've been trying to get ecx by adding 0x8 to ebp since from my understanding ebp + 0x4 = return address and upwards from that it's stack arguments.\n </p>\n <p>\n  here's what i've been doing\n </p>\n <pre><code>uintptr_t _framePointer, _framePointerOld;\n__asm\n{\n    mov _framePointer, ebp\n}\n\n_framePointerOld= *reinterpret_cast< uintptr_t* >( _framePointer);\n\nvoid* ecx_of_caller = *reinterpret_cast< void** >( _framePointerOld+ 0x12 );\n</code></pre>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "54",
    "tags": [
        "assembly"
    ],
    "user": "nelariou",
    "time": "Apr 30, 2019 at 23:51",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This makes very little sense.\n </p>\n <p>\n  If you are a __factcall function the first parameter in is your ECX register just use it..\nIf you are trying to access the first parameter of your parent calling function, then you have zero ability from the knowledge they where __factcall function or you are/are not a __fastcall function how that value has been saved or stored..\n </p>\n <p>\n  Unless you have their code disassembled, at which point you should be able to tell exactly what you have to read to get that value.. as long as it's not been destroyed already.\n </p>\n <pre><code>__fastcall func(int parm1){\n    int local = parm1+1;\n    int result = call_your_fucntion(local);\n    int do_some_thing_else = parm1 + result;\n    ...\n}\n</code></pre>\n <p>\n  in this case because parm1 is used after the call it has to be saved in some fashion, where if it's not needed after your call, that register could already have been reallocated to store some other transient value.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Simeon Pilgrim",
            "time": "May 1, 2019 at 1:20",
            "is_accepted": false,
            "comments": []
        }
    ]
}