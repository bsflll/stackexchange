{
    "title": "Retrieving args from open syscall",
    "link": "https://reverseengineering.stackexchange.com/questions/29936/retrieving-args-from-open-syscall",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The arguments being passed to the open syscall at runtime in a program I'm debugging seem to be as follows:\n </p>\n <pre><code>open(\"SOMESTRING\", 0xa01, 0x1b6);\n</code></pre>\n <p>\n  These were retrieved using lldb on OSX 12.1 Monterey by setting a breakpoint at the open syscall and then printing out the args like this:\n </p>\n <pre><code>(lldb) x/s $rdi\n0x6000022b4150: \"SOMESTRING\"\n(lldb) p/x $rsi\n(unsigned long) $5 = 0x0000000000000a01\n(lldb) p/x $rdx\n(unsigned long) $6 = 0x00000000000001b6\n</code></pre>\n <p>\n  Using 'man 2 open', I'm reading a description of the arguments and then I'm going to the appropriate header files to check the hex value of each flag to try to determine what the parameters mean. The problem is, nothing seems to be matching up.\n </p>\n <p>\n  From the open manpage:\n </p>\n <pre><code> The flags specified for the oflag argument must include exactly one of the following file access modes:\n\n   O_RDONLY        open for reading only\n   O_WRONLY        open for writing only\n   O_RDWR          open for reading and writing\n\n In addition any combination of the following values can be or'ed in oflag:\n\n   O_NONBLOCK      do not block on open or for data to become available\n   O_APPEND        append on each write\n   O_CREAT         create file if it does not exist\n   O_TRUNC         truncate size to 0\n   O_EXCL          error if O_CREAT and the file exists\n   O_SHLOCK        atomically obtain a shared lock\n   O_EXLOCK        atomically obtain an exclusive lock\n   O_DIRECTORY     restrict open to a directory\n   O_NOFOLLOW      do not follow symlinks\n   O_SYMLINK       allow open of symlinks\n   O_EVTONLY       descriptor requested for event notifications only\n   O_CLOEXEC       mark as close-on-exec\n   O_NOFOLLOW_ANY  do not follow symlinks in the entire path.\n</code></pre>\n <p>\n  Now when I head over to fcntl.h, and look at the value for these flags, none of them have the hex value 0xa00. I'm failing to see how OR'ing any of these flags together would ever reproduce a value of 0xa01. I'm having similar trouble with the mode arg. Could anyone help me understand what I'm doing wrong?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "113",
    "tags": [
        "arguments",
        "syscall"
    ],
    "user": "JohnnyBoy",
    "time": "Jan 26, 2022 at 15:17",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  should be some thing like this compiles fine in\n  <a href=\"https://godbolt.org/z/bzEofj5n5\" rel=\"nofollow noreferrer\">\n   godbolt.org\n  </a>\n </p>\n <pre><code>#include <fcntl.h>\nint main (void) {\n    open(\n        \"foo\",\n        //1      | 0x200   | 0x800 \n        O_WRONLY | O_TRUNC | O_NONBLOCK,\n        //0x100 | 0x80    | 0x40    | 0x20    | 0x4     | 0x2\n        S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH \n        );\n}\n</code></pre>\n <p>\n  disassembled\n </p>\n <pre><code>main:\n push   rbp\n mov    rbp,rsp\n mov    edx,0x1b6\n mov    esi,0xa01\n mov    edi,0x402004\n mov    eax,0x0\n call   401030 <open@plt>\n mov    eax,0x0\n pop    rbp\n ret    \n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "blabb",
            "time": "Jan 26, 2022 at 21:27",
            "is_accepted": true,
            "comments": [
                {
                    "user": "JohnnyBoy",
                    "text": "<span class=\"comment-copy\">Thank you very much for this.</span>",
                    "time": null
                }
            ]
        }
    ]
}