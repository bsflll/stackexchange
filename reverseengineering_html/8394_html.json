{
    "title": "Windows 7 x86 reboot process",
    "link": "https://reverseengineering.stackexchange.com/questions/8394/windows-7-x86-reboot-process",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I know that there are differently methods to do a reboot.\n </p>\n <p>\n  I'm working on a simple hyper-visor and I have a little problem when I want to reboot a multi-processor aware x86 Windows 7 Guest. \nThe main steps the OS does seem to be: Task Switch - Task Switch - Triple Fault. This happens on all CPUs except one which does not initiate a Task Switch at all and hangs somewhere. The last exit I get from it is a CPUID with EAX = 1 so I really don't know (yet) where or why it does not get to do a Task Switch like all the others. I'm a bit stuck on understanding this - maybe some details about what should normally happen will help me.\n </p>\n <p>\n  What is the actual method that is used for a reboot by a x86 Windows 7?\n </p>\n <p>\n  <strong>\n   EDIT\n  </strong>\n  I figured this out a few days ago, but I haven't got time to update the post. I'm not going to answer my own question because I don't think this is a full and definitive answer, but for someone who might have the same problem this will make things a bit easier.\n </p>\n <p>\n  Turns out, that the missing CPU was halted. The flow is, more ore less, this: Task Switch, Triple Fault (for n-1 CPUs) and halt (for the n-th CPU). After this there should be an init on each one and then everything is reset.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "332",
    "tags": [
        "windows",
        "x86"
    ],
    "user": "user3002428",
    "time": "Mar 11, 2015 at 13:32",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  See my findings below based on some quick analysis in IDA, but take it all with a grain of salt. There may be other scenarios that would cause Windows 7 to reboot through other mechanisms when performing a planned reboot. Perhaps others on this site can contribute with their expertise...\n </p>\n <p>\n  â€‹\n </p>\n <p>\n  At the lowest level, Windows calls\n  <a href=\"https://msdn.microsoft.com/en-us/library/windows/hardware/ff546622%28v=vs.85%29.aspx\" rel=\"nofollow\">\n   <code>\n    hal!HalReturnToFirmware()\n   </code>\n  </a>\n  , which calls\n  <code>\n   hal!HalpReboot()\n  </code>\n  ,\n  <a href=\"http://doxygen.reactos.org/da/d2a/halx86_2generic_2reboot_8c_a99d2b319b30dfc7561f1ceec89827e21.html#a99d2b319b30dfc7561f1ceec89827e21\" rel=\"nofollow\">\n   which is pretty well documented in ReactOS\n  </a>\n  .\n </p>\n <p>\n  In both Windows 7 and ReactOS, the final instructions that actually cause the reboot are effectively:\n </p>\n <pre><code>mov al, 0xFE\nout 0x64, al\n</code></pre>\n <p>\n  This writes the system reset command to the keyboard controller's IO port.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Jason Geffner",
            "time": "Mar 5, 2015 at 23:50",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user3002428",
                    "text": "<span class=\"comment-copy\">From what I've seen there's a difference even between single processor and multi processor version (no task switch on the single CPU version). I'm not getting to the part with the keyboard controller.</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">FWIW, <a href=\"http://doxygen.reactos.org/da/d2a/halx86_2generic_2reboot_8c_a40e0f3e50d8bd61a78d907a93bd12017.html#a40e0f3e50d8bd61a78d907a93bd12017\" rel=\"nofollow noreferrer\">here's the reset via keyboard controller in ReactOS</a>.</span>",
                    "time": null
                },
                {
                    "user": "user3002428",
                    "text": "<span class=\"comment-copy\">I found it from following your links from the answer. From the source code alone it seems that only the BSP should execute that function. Is this right?</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">To confirm or disconfirm that would likely take more time than I want to invest in this ;)</span>",
                    "time": null
                },
                {
                    "user": "user3002428",
                    "text": "<span class=\"comment-copy\">The question is open if somebody knows the answer. I'll update it if I find it in the meantime.</span>",
                    "time": null
                }
            ]
        }
    ]
}