{
    "title": "Read a struct from memory",
    "link": "https://reverseengineering.stackexchange.com/questions/2789/read-a-struct-from-memory",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to load a struct defined in a program that i'm reading the memory of, so I can use it to define objects in my python debugger (in windows).\n </p>\n <p>\n  What format do structs take in memory, and what information can i get from finding the struct.\nIs it possible to find the offsets for all attributes, and all objects linking to the struct?\n </p>\n <p>\n  I'd prefer to be able to do this without using breakpoints, but I can use them if there is no other way.\n </p>\n</div>\n</body></html>",
    "votes": "7",
    "answers": 1,
    "views": "2k",
    "tags": [
        "windows",
        "python",
        "c",
        "struct"
    ],
    "user": "yarbelk",
    "time": "Sep 14, 2013 at 6:29",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You should rather ask your questions with some kind of example output so that answers are not based on guesswork.\n </p>\n <p>\n  Does\n  <em>\n   iam loading the struct\n  </em>\n  mean\n </p>\n <ul>\n  <li>\n   I wrote a program where I am employing OpenProcess() ReadProcessMemory()\n  </li>\n </ul>\n <p>\n  or does it mean\n </p>\n <ul>\n  <li>\n   i am opening the raw file with FILE * fp ; fopen(\"c:\\XXX\",\"wb\") fread(fp); or load it in say ollydbg or in a hexeditor\n  </li>\n </ul>\n <p>\n  Assuming you use\n  <code>\n   ReadProcessMemory\n  </code>\n  the buffer you provided will be filled with bytes. It is up to you to cast it to proper type for accessing various members of the struct \n(yes you need a valid prototype of the structure beforehand).\n </p>\n <p>\n  A pseudo form could be like this\n </p>\n <pre><code>type result;\nBYTE foo[0x100];\nMystruct *blah;\nint s1;\nPSTR s2;\nresult = ReadProcessMemory(where,howmuch,destination,VerifiactionPointer)\nblah = (MyStruct *)destination;\ns1 = blah->someint;\ns2 = blah->somestring;\n</code></pre>\n <p>\n  Memory you see will always contain hex bytes that are indistinguishable from one another. It is like clay in the hands of a potter.\n </p>\n <p>\n  Only the artisan can give it form. Clay by itself can never become a statue or a finely crafted teapot.\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "ixje",
            "time": "Sep 14, 2013 at 18:33",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Hanan",
                    "text": "<span class=\"comment-copy\">It worth noting that structs in memory could be larger than what they should be according to the source code, unless <code>pack</code> where used in the definition of the struct they maybe aligned in memory hence be larger in size.</span>",
                    "time": null
                }
            ]
        }
    ]
}