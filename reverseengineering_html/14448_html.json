{
    "title": "How to programatically extract function names, function arguments and strings from a .NET binary?",
    "link": "https://reverseengineering.stackexchange.com/questions/14448/how-to-programatically-extract-function-names-function-arguments-and-strings-fr",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  My goal is to\n </p>\n <ol>\n  <li>\n   extract function names,\n  </li>\n  <li>\n   the libraries they come from (if the functions were imported),\n  </li>\n  <li>\n   function arguments, and\n  </li>\n  <li>\n   strings\n  </li>\n </ol>\n <p>\n  from a .NET binary. How can I do this?\nIs this possible using tools like\n  <a href=\"http://www.telerik.com/products/decompiler.aspx\" rel=\"nofollow noreferrer\">\n   JustDecompile\n  </a>\n  or\n  <a href=\"http://www.red-gate.com/products/dotnet-development/reflector/\" rel=\"nofollow noreferrer\">\n   .NET Reflector\n  </a>\n  ? Do they offer an API that allows to do this?\n </p>\n <p>\n  I noticed IDA's Function Window is populated, but the Strings Window is not. In addition, I guess it would be easier (e.g. to get function arguments) to use a tool that does decompilation...\n </p>\n <p>\n  PS:\nThe code is not obfuscated, it is not malware but regular software.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "857",
    "tags": [
        "windows",
        "tools",
        ".net",
        "decompiler"
    ],
    "user": "langlauf.io",
    "time": "Jan 19, 2017 at 19:55",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"https://github.com/0xd4d/dnlib\" rel=\"nofollow noreferrer\">\n   dnlib\n  </a>\n  , used by the very powerful\n  <a href=\"https://github.com/0xd4d/dnSpy\" rel=\"nofollow noreferrer\">\n   dnSpy\n  </a>\n  (.net disassembler), is an open source .net library to analyse .net modules & assemblies which may be what you are looking for.\n </p>\n <p>\n  They also have an example similar to your use case:\n </p>\n <p>\n  <a href=\"https://github.com/0xd4d/dnlib/blob/master/Examples/Example1.cs\" rel=\"nofollow noreferrer\">\n   Opens mscorlib.dll and then prints out all types in the assembly, including the number of methods, fields, properties and events each type has.\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "jg0",
            "time": "Jan 20, 2017 at 1:57",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  A while back i wrote this cheapo dependency tool. It's on my GitHub.\n  <a href=\"https://github.com/marshalcraft/CheapoDllDependencyTool?files=1\" rel=\"nofollow noreferrer\">\n   https://github.com/marshalcraft/CheapoDllDependencyTool?files=1\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "marshal craft",
            "time": "Jan 21, 2017 at 4:39",
            "is_accepted": false,
            "comments": []
        }
    ]
}