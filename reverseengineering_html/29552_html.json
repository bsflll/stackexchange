{
    "title": "What is happening with this *param_1?",
    "link": "https://reverseengineering.stackexchange.com/questions/29552/what-is-happening-with-this-param-1",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am a bit of a starter, so bear with me as I can't find the answer through Google (a common thing in Ghidra work I noticed so far).\n </p>\n <p>\n  I have a function that seems to read like it is a Constructor.\nBut I am having trouble what it is doing, mainly because I think I don't understand the C language that well.\n </p>\n <p>\n  The code I am confused about is this:\n </p>\n <p>\n  The code as C:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/FCkwV.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"The code as C\" src=\"https://i.sstatic.net/FCkwV.png\"/>\n  </a>\n </p>\n <p>\n  The code as ASM:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/9m6DR.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"The code as ASM\" src=\"https://i.sstatic.net/9m6DR.png\"/>\n  </a>\n </p>\n <p>\n  Sorry for using screenshots, I couldn't get the ASM to reasonably copy and paste into here.\n </p>\n <p>\n  <code>\n   *param_1\n  </code>\n  , is set to a specific address. What this * in front of the variable means, I can't really find besides people saying \"You shouldn't do that in C code!\"\n </p>\n <p>\n  What it then starts doing is nulling out some variables in an array or struct that\n  <code>\n   param_1\n  </code>\n  apparently is now (going by the ASM,\n  <code>\n   param_1 == ECX\n  </code>\n  and so probably\n  <code>\n   _this_\n  </code>\n  ?) the rest seems irrelevant for now.\n </p>\n <p>\n  What is at\n  <code>\n   0x497e68\n  </code>\n  ? It is an address, that then points towards another bit of code at\n  <code>\n   0x438170\n  </code>\n  . And while this\n  <code>\n   0x497e68\n  </code>\n  address is references 4 times, all of them do so in a similar manner, and thus I never see a direct \"CALL\" to this indirect method. The method itself is simply calling _free on ECX. It's not special.\n </p>\n <p>\n  So what is going on here? Is there a reasonable explanation as to why this is happening? And what should I actually be reading here?\nAnd if so, is there then a way I can convince Ghidra to present this in a more sensible way?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "851",
    "tags": [
        "x86",
        "c",
        "ghidra",
        "local-variables"
    ],
    "user": "Smileynator",
    "time": "Nov 14, 2021 at 8:06",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n it is like int bar = 5: . int* myintarr [4]={ &bar,null,null,null};\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Ian Cook",
            "text": "<html><body><span class=\"comment-copy\">\n You are probably looking at code that was originally\n <code>\n  C++\n </code>\n rather than\n <code>\n  C\n </code>\n .\n <code>\n  0x497e68\n </code>\n is the address of the virtual function table or vtable. This is an array of function pointers.\n <code>\n  *param_1\n </code>\n is the same as\n <code>\n  param_1[0]\n </code>\n and is set of the address of the vtable.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}