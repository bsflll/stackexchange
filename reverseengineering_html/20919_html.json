{
    "title": "how watchpoint on register works",
    "link": "https://reverseengineering.stackexchange.com/questions/20919/how-watchpoint-on-register-works",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <code>\n   GDB\n  </code>\n  has an option to set watchpoint on register*, how does it work ? what happens during context switching ? why the only implementation is for\n  <a href=\"https://chromium.googlesource.com/chromiumos/third_party/gdb/+/refs/heads/master/gdb/mips-linux-nat.c\" rel=\"nofollow noreferrer\">\n   mips\n  </a>\n  ?\n </p>\n <p>\n  Is there a way to make it work for\n  <code>\n   lldb\n  </code>\n  also ?\n </p>\n <ul>\n  <li>\n   *\n   <code>\n    watch $eax == 0x0000ffff\n   </code>\n  </li>\n </ul>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "gdb",
        "debuggers",
        "lldb"
    ],
    "user": "James W.",
    "time": "Mar 19, 2019 at 13:46",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can probably find the details in GDB’s source code but I\n  <em>\n   think\n  </em>\n  it just single-steps the program until the condition matches. IIRC this is done for any condition that can’t be handled by a hardware breakpoint.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Mar 19, 2019 at 15:49",
            "is_accepted": false,
            "comments": [
                {
                    "user": "James W.",
                    "text": "<span class=\"comment-copy\">there is a link to GDB source code in the question, can you explain how it's not effected by context switch ?</span>",
                    "time": null
                },
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">@Iddo: The hardware registers are not sensitive to context switching. Usually, they are just ignored by the OS.</span>",
                    "time": null
                },
                {
                    "user": "James W.",
                    "text": "<span class=\"comment-copy\">can you please provide a prove for that statement ? and why only implementation are for MIPS ?</span>",
                    "time": null
                }
            ]
        }
    ]
}