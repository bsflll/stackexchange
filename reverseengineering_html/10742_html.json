{
    "title": "Can I set a basic block's parent in IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/10742/can-i-set-a-basic-blocks-parent-in-ida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I got a function whose control flow is kinda screwed... like this:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/JGPVA.png\" rel=\"noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/JGPVA.png\"/>\n  </a>\n </p>\n <p>\n  As you can see, the basic blocks at the top left aren't connected to anything; however, if I check the text disasm, this is what I see:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/WJJTe.png\" rel=\"noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/WJJTe.png\"/>\n  </a>\n </p>\n <p>\n  As you can see, IDA believes that the call doesn't ever return, puts the discontinued line there, and the control flow gets broken (as the next basic block doesn't have a parent).\n </p>\n <p>\n  Is there any way I can manually link the basic blocks, or better, make IDA stop believing that the call doesn't return?\n </p>\n <p>\n  <strong>\n   EDIT\n  </strong>\n  :\nThe function\n  <em>\n   does\n  </em>\n  return, and doesn't break the rest of places it's used:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/O3ntw.png\" rel=\"noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/O3ntw.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "8",
    "answers": 4,
    "views": "1k",
    "tags": [
        "ida"
    ],
    "user": "rev",
    "time": "Aug 29, 2015 at 14:30",
    "comments": [
        {
            "user": "NirIzr",
            "text": "<html><body><span class=\"comment-copy\">\n Could you give trying to\n <i>\n  reanalyze program\n </i>\n a go? That's at options -> General -> Analysis -> reanalyze program\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Krypton",
            "text": "<html><body><span class=\"comment-copy\">\n have you figured this out?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "rev",
            "text": "<html><body><span class=\"comment-copy\">\n @Krypton haven't done it myself but I heard it can be done with the cpp SDK\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The following picture shows a similar case (Ida V6.3):\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/1uK79.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/1uK79.jpg\"/>\n  </a>\n </p>\n <p>\n  with the corresponding useless graph view:\n  <a href=\"https://i.sstatic.net/LYKTq.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/LYKTq.jpg\"/>\n  </a>\n </p>\n <p>\n  Obviously, Ida is completely disturbed.\nWhat worked for me in this case, was the following simple procedure:\n </p>\n <ol>\n  <li>\n   Undefine Function and code => Ida will show the byte code only\n  </li>\n  <li>\n   Select the whole undefined area and re-define as code (\"C\"-key)\n  </li>\n  <li>\n   Re-define as function.\n  </li>\n </ol>\n <p>\n  Thre resulting graph view now looks decent:\n  <a href=\"https://i.sstatic.net/8mw3k.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/8mw3k.jpg\"/>\n  </a>\n </p>\n <p>\n  This helped here, it might however not be a remedy in all similar cases.\n </p>\n <p>\n  <strong>\n   Remark\n  </strong>\n  : In this particular case, undefining and re-defining the function without undefining the code as well did NOT work.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It is possible to define a function as \"return\" or \"no return\".\n </p>\n <p>\n  To do it you should find your called function, right click on it, choose \"edit function\" and unmark \"Does not return\" checkbox.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "w s",
            "time": "Aug 29, 2015 at 14:26",
            "is_accepted": false,
            "comments": [
                {
                    "user": "rev",
                    "text": "<span class=\"comment-copy\">Sorry, I forgot to add that, but the function isn't marked as 'Does not return'. I edited the post btw</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">May be it is one of functions which is called by your not returning function ?</span>",
                    "time": null
                },
                {
                    "user": "rev",
                    "text": "<span class=\"comment-copy\">But the function <i>does</i> return, it's just a <code>printf</code> like function which <b>returns</b> a pointer to a formatted string instead of printing it to stdout, so I'm really sure it can't be that it's 'not returning'</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">I'd be glad to see a binary if possible. It is really strange.</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">BTW, do you get something interesting if you patch this call with nops ?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Uhm... you could do the other way around. Try this: in the address of the basic block that should be connected from that call statement you say, press Alt+F11 (change callee) and put the address where the call statement is.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "joxeankoret",
            "time": "Aug 25, 2016 at 16:44",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can try to set the type of function\n  <em>\n   va\n  </em>\n  (using hotkey Y). Then if that has no effect, you can try to undefine the function, and re-define that func to force IDA re-analyse.\n </p>\n <p>\n  If you have HexRays decompiler, you can call the decompiler in this function and then click into function\n  <em>\n   va\n  </em>\n  , and then return to the original function.\n </p>\n <p>\n  Those above are tricks for IDA to force the analysis to be launched.\nI have testeds them on binaries of different CTFs. And in most siturations they worked.\n </p>\n <p>\n  P.S.:Sorry for my poor English\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Misty",
            "time": "May 26, 2016 at 4:48",
            "is_accepted": false,
            "comments": []
        }
    ]
}