{
    "title": "What is patched by LX 16:32 fixup record",
    "link": "https://reverseengineering.stackexchange.com/questions/31917/what-is-patched-by-lx-1632-fixup-record",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In LX format description in section\n3.13 Fixup Record Table, when describing\n  <code>\n   SRC = DB Source type field\n  </code>\n  there is such an option:\n </p>\n <p>\n  <code>\n   06h = 16:32 Pointer fixup (48-bits).\n  </code>\n </p>\n <p>\n  <strong>\n   1. How many bytes does this fixup change and how?\n  </strong>\n  I found a particular example of such fixup, it points to 2nd byte of a certain jump instruction:\n </p>\n <p>\n  <code>\n   66EA665544332211  jmp dword 0x1122:0x33445566\n  </code>\n </p>\n <p>\n  I assume it at least changes 4-byte offset (33445566), but does it also change 16 bit selector (1122)?\n </p>\n <p>\n  <strong>\n   2. Where can I find more in-depth description of different fixup kinds?\n  </strong>\n  IBM doc seems to assume it to be common knowledge.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "79",
    "tags": [
        "x86"
    ],
    "user": "Uprooted",
    "time": "May 30, 2023 at 8:08",
    "comments": [
        {
            "user": "fpmurphy",
            "text": "<html><body><span class=\"comment-copy\">\n For more information about LX (16-bit Linear Executable) fixup types, see\n <a href=\"http://www.textfiles.com/programming/FORMATS/lxexe.txt\" rel=\"nofollow noreferrer\">\n  textfiles.com/programming/FORMATS/lxexe.txt\n </a>\n in the section entitled \"Fixup Record Table\"\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  For such fixup both selector and offset parts are patched so that they point to the actual location of the fixup's target.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Jun 4, 2023 at 21:10",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Uprooted",
                    "text": "<span class=\"comment-copy\">I suppose you're right, yet it's unclear where selector comes from, fixup record contains only 'target' field for 32 bit offset part. I should ask another question with concrete fixup data.</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">selector comes from wherever the target segment was actually loaded in the memory</span>",
                    "time": null
                }
            ]
        }
    ]
}