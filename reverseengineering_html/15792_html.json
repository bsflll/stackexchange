{
    "title": "Basic assembly query [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/15792/basic-assembly-query",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed.\n        </b>\n        This question is\n        <a href=\"/help/closed-questions\">\n         off-topic\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       Questions on\n       <b>\n        software development\n       </b>\n       are off-topic here, but can be asked on\n       <a href=\"http://stackoverflow.com/about\">\n        Stack Overflow\n       </a>\n       .\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2017-07-09 14:02:48Z\">\n        7 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/15792/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  I wrote a program which will add two numbers in assembly.\nWhen I do a system call for\n  <code>\n   scanf()\n  </code>\n  , the instruction looks like this:\n </p>\n <pre><code>mov rcx, num1\n</code></pre>\n <p>\n  Note: I have defined\n  <code>\n   num1\n  </code>\n  in the\n  <code>\n   bss\n  </code>\n  section as:\n </p>\n <pre><code>num1 resb 10\n</code></pre>\n <p>\n  And, when I try to move this value to say\n  <code>\n   rax\n  </code>\n  the instruction looks like:\n </p>\n <pre><code>mov rax, [num1]\n</code></pre>\n <p>\n  From what I have learned, anything inside square brackets must only be computed in case of\n  <code>\n   rm32\n  </code>\n  . So, more like going to memory location but not reading what's in the memory.\n </p>\n <p>\n  How is this bracket helping here ?\n </p>\n <p>\n  Why do we need the memory location when we can have the direct value?\n </p>\n <p>\n  And my next instruction is:\n </p>\n <pre><code>sub rax, '00'\n</code></pre>\n <p>\n  <code>\n   rax\n  </code>\n  contains an address of\n  <code>\n   num1\n  </code>\n  . Shouldn't we be doing math to the value\n  <code>\n   num1\n  </code>\n  and not on the address ?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "602",
    "tags": [
        "ida",
        "assembly",
        "intel"
    ],
    "user": "Atply",
    "time": "7 years ago",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n just because it's about assembler does not mean it's RE\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Atply",
            "text": "<html><body><span class=\"comment-copy\">\n Agreed. But it's related.  That's the reason I posted it here.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  First of all, you are using the Intel syntax for the x86/amd64 assembly. So, in this syntax the brackets (\n  <code>\n   [.]\n  </code>\n  ) stands for a dereference of the address it contains.\n </p>\n <p>\n  If you know C programming,\n  <code>\n   [var]\n  </code>\n  (in assembly) is exactly similar to '*var'.\n </p>\n <p>\n  In fact, the only small difficulty you have to handle here is that the\n  <code>\n   num1\n  </code>\n  that you defined is already an address (I am speaking now about the nasm syntax and NOT about the Intel asm syntax).\n </p>\n <p>\n  So,\n  <code>\n   move rcx, num1\n  </code>\n  means that you copy the address of\n  <code>\n   num1\n  </code>\n  to\n  <code>\n   rcx\n  </code>\n  .\n </p>\n <p>\n  And,\n  <code>\n   move rax, [num1]\n  </code>\n  means that you copy the content of\n  <code>\n   num1\n  </code>\n  to\n  <code>\n   rax\n  </code>\n  .\n </p>\n <p>\n  You may refer to this\n  <a href=\"https://stackoverflow.com/questions/8145243/x86-asm-linux-using-the-bss-section\">\n   SO question\n  </a>\n  which might explain your problem.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "perror",
            "time": "Jul 9, 2017 at 11:45",
            "is_accepted": false,
            "comments": []
        }
    ]
}