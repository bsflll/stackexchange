{
    "title": "Audio file compression identification",
    "link": "https://reverseengineering.stackexchange.com/questions/11197/audio-file-compression-identification",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I've been working on reversing file formats from the game of star wars episode 1: the phantom menace.\n </p>\n <p>\n  I have managed to extract the audio files from the .lab file in which they were contained. I cannot however play the audio files.\n </p>\n <p>\n  The files are provided at the end of the question.\n </p>\n <p>\n  I managed to find some of the decompressed files in the game's cache (which do play) and so I have a selection of audio files in both compressed and uncompressed form.\n </p>\n <p>\n  The compression ratio is about 66%; i.e. the compressed file is 1/3 of the size of the uncompressed size.\n </p>\n <p>\n  This is an example of the uncompressed and compressed form of the data. (From BDm8906.wav and BDM8906.wv)\n </p>\n <p>\n  The first 32 bytes of the uncompressed file (Magic is riff) BDm8906.wav\n </p>\n <pre><code>52 49 46 46 DA 77 00 00 57 41 56 45 66 6D 74 20\n10 00 00 00 01 00 01 00 22 56 00 00 44 AC 00 00\n</code></pre>\n <p>\n  The first 32 bytes of the compressed file (Magic is INDYWV) BDM8906.wv\n </p>\n <pre><code>49 4E 44 59 57 56 22 56 00 00 10 00 00 00 01 00 \n00 00 F1 2B 00 00 00 00 00 00 B6 77 00 00 00 00\n</code></pre>\n <p>\n  From looking a few of the compressed files I have found that:\n </p>\n <p>\n  The first 16 bytes are always the same.\nThe next 4 bytes are the size of the compressed file.\nThe next 6 bytes are always zero.\n </p>\n <p>\n  Here's a more detailed look at the hexdump of the compressed file:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/FDpGy.jpg\" rel=\"noreferrer\">\n   https://i.sstatic.net/FDpGy.jpg\n  </a>\n </p>\n <p>\n  (SE will not let me upload it).\n </p>\n <p>\n  From byte 25 (start counting at 0) to the end of the file is always different. The number of bytes from here to the end of the file is the size of the compressed file indicated earlier.\n </p>\n <p>\n  Attempts to decompress:\n </p>\n <p>\n  1) Thorough googleing. One other guy on the lucas forums and on the xentax forums attempts to decompress it without success. It is not wavepack.\n </p>\n <p>\n  2) Trying common compression algorithms on the uncompressed files. Compress, lzma, gzip do not even come close to the compression ratio reported.\n </p>\n <p>\n  3) Binwalk on the binary:\n </p>\n <pre><code>DECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n0             0x0             Microsoft executable, portable (PE)\n715764        0xAEBF4         YAFFS filesystem\n721564        0xB029C         YAFFS filesystem\n746196        0xB62D4         LZMA compressed data, properties: 0x64, dictionary size: 33554432 bytes, uncompressed size: 16777216 bytes\n</code></pre>\n <p>\n  When I run binwalk on windows I get that it includes DMC (\n  <a href=\"https://en.wikipedia.org/wiki/Dynamic_Markov_compression\" rel=\"noreferrer\">\n   https://en.wikipedia.org/wiki/Dynamic_Markov_compression\n  </a>\n  )\n </p>\n <p>\n  4) Dissembling the Binary and trying to find the location of the decompression code - this is quite difficult\n </p>\n <p>\n  A sample (two files, one encrypted one unencrypted) can be found here:\n </p>\n <p>\n  <a href=\"https://www.dropbox.com/sh/jvljza0v76mvl56/AAC41MenYP57dVHgAXY-DkSsa?dl=0\" rel=\"noreferrer\">\n   https://www.dropbox.com/sh/jvljza0v76mvl56/AAC41MenYP57dVHgAXY-DkSsa?dl=0\n  </a>\n </p>\n <p>\n  How can I figure out what it is using?\n </p>\n <p>\n  Thanks\n </p>\n <p>\n  Edit\nAccording to reaper, decompressed file:\n </p>\n <p>\n  22.05 sample rate\n16 bits per sample\n15323 samples\n694 ms\n </p>\n <p>\n  whatever the game does has decoded it into 15323 16 bit integers\n </p>\n</div>\n</body></html>",
    "votes": "8",
    "answers": 1,
    "views": "1k",
    "tags": [
        "unpacking",
        "file-format"
    ],
    "user": "RNs_Ghost",
    "time": "Nov 3, 2015 at 16:54",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "<html><body><span class=\"comment-copy\">\n First thing i'd do is run the game with ProcMon. Check where it reads from the .lab file and where it writes the .wav file. Check the stack at these calls to find out which functions from the binary call it. The whole thing is probably quite similar to my answer to\n <a href=\"http://reverseengineering.stackexchange.com/questions/9168/reversing-encryption-by-analysing-executable/9171#9171\">\n  this\n </a>\n .\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jason Geffner",
            "text": "<html><body><span class=\"comment-copy\">\n INDYWV appears to be a proprietary audio file format used by LucasArts. The game Star Wars: X-Wing Alliance also uses INDYWV files. Best bet is to do what @GuntramBlohm said above.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Aron",
            "text": "<html><body><span class=\"comment-copy\">\n I don't know if this is the answer you're looking for, but you can use an application called SCRUMM Revisited to decompress the SW TPM music  (and sound effect) files to .WAV format\n <a href=\"http://jsg.id.au/scumm/scummrev/index.html\" rel=\"nofollow noreferrer\">\n  jsg.id.au/scumm/scummrev/index.html\n </a>\n the music files are in the \\music directory with a .IMC extension, and the .LAB files contain many sound effects.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Aron",
            "text": "<html><body><span class=\"comment-copy\">\n By the way, the main theme is called \"SQSTALK2.IMC\"\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I was looking at the same problem and couldn't find a solution anywhere, so I implemented it myself!\n </p>\n <p>\n  smlu (Crt Vavros) had already started working on the format for his\n  <a href=\"https://github.com/smlu/Urgon\" rel=\"nofollow noreferrer\">\n   Indiana Jones and the Infernal Machine Mod Tools\n  </a>\n  but sadly the format was slightly different: Indiana Jones files use WVSM decompression but on Phantom Menace the dialog files are compressed with a variant of ADPCM algorithm.\nMy approach was to use Ghidra to disassemble and locate the algorithm, and also x64dbg for debugging.\n </p>\n <p>\n  I published everything on my github:\n  <a href=\"https://github.com/justedni/indywvtowav\" rel=\"nofollow noreferrer\">\n   IndyWV to WAV converter\n  </a>\n </p>\n <p>\n  I know it's a very old thread, but I hope this can help anyone who would like to extract the dialog files from Star Wars Episode 1: The Phantom Menace! And if anyone is aware of other games that also use that format, I'd be interested to know!\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "justedni",
            "time": "May 6, 2024 at 7:54",
            "is_accepted": false,
            "comments": []
        }
    ]
}