{
    "title": "How to set virtual `T` register programmatically in IDA Python?",
    "link": "https://reverseengineering.stackexchange.com/questions/21990/how-to-set-virtual-t-register-programmatically-in-ida-python",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It is trivial to do it with\n  <code>\n   Alt+G\n  </code>\n  command from GUI.\n </p>\n <p>\n  However, when I set multiple breakpoints programmatically, IDA doesn't recognize them as \"thumb\" mode ones and sets\n  <code>\n   T\n  </code>\n  value at breakpoint address to\n  <code>\n   0\n  </code>\n  . When IDA tries to use ARM mode instead of Thumb, it is guaranteed to crash.\n </p>\n <p>\n  Setting\n  <code>\n   T\n  </code>\n  value 50 times manually is supposed to be too slow.\n </p>\n <p>\n  So, I try to set\n  <code>\n   T = 1\n  </code>\n  programmatically.\n </p>\n <p>\n  However, I have no idea how to do that.\n </p>\n <p>\n  I tried this:\n </p>\n <pre><code>idaapi.set_sreg_at_next_code(function_pointer, function_pointer + 2, idaapi.str2reg(\"T\"), 1)\n</code></pre>\n <p>\n  And this:\n </p>\n <pre><code>idaapi.set_default_sreg_value(idaapi.getseg(function_pointer), idaapi.str2reg(\"T\"), 1)\n</code></pre>\n <p>\n  IDA simply ignores both calls, no error occurs, but\n  <code>\n   T\n  </code>\n  value doesn't change.\n </p>\n <p>\n  Does anyone know how to change virtual\n  <code>\n   T\n  </code>\n  segment register value with IDAPython in ARM mode?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "741",
    "tags": [
        "ida",
        "idapython"
    ],
    "user": "Vitalii",
    "time": "Aug 28, 2019 at 14:46",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I found solution myself. Correct code follows:\n </p>\n <pre><code>idaapi.split_sreg_range(instruction_pointer, idaapi.str2reg(\"T\"), required_t_value, idaapi.SR_user)\n</code></pre>\n <p>\n  where\n  <code>\n   instruction_pointer\n  </code>\n  is instruction address which mode you want to change, and\n  <code>\n   required_t_value\n  </code>\n  is new mode (\n  <code>\n   1\n  </code>\n  for Thumb,\n  <code>\n   0\n  </code>\n  for ARM), and\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Vitalii",
            "time": "Aug 29, 2019 at 9:19",
            "is_accepted": false,
            "comments": []
        }
    ]
}