{
    "title": "Comparison between orginal and modified DLL files with x64dbg",
    "link": "https://reverseengineering.stackexchange.com/questions/19011/comparison-between-orginal-and-modified-dll-files-with-x64dbg",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Is it possible to find the modifications between a original DLL file and a modified one using x64dbg?\n </p>\n <p>\n  And, if I can't do it with x64dbg, what tool would be better than a debugger to find the modifications done on assembly code between the two files?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 2,
    "views": "10k",
    "tags": [
        "dll",
        "x64dbg",
        "bin-diffing"
    ],
    "user": "pharaon",
    "time": "Aug 8, 2018 at 8:42",
    "comments": [
        {
            "user": "Kerim Can Kalıpcıoğlu",
            "text": "<html><body><span class=\"comment-copy\">\n Do you want to compare two DLL files or do you want to see run-time patches on a DLL file?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "pharaon",
            "text": "<html><body><span class=\"comment-copy\">\n i have original DLL file and the patched version of it and i want to know which line been patched\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You shouldn't use a debugger to search for differences. You should use a diff tool. Of course, most diff tools work on ASCII text, but there are some that deal with binary files.\n </p>\n <p>\n  Some examples:\n </p>\n <ul>\n  <li>\n   <a href=\"https://radareorg.github.io/blog/posts/binary-diffing/\" rel=\"nofollow noreferrer\">\n    radiff2\n   </a>\n  </li>\n  <li>\n   <a href=\"https://mh-nexus.de/en/hxd/\" rel=\"nofollow noreferrer\">\n    HxD\n   </a>\n  </li>\n </ul>\n <p>\n  There are more and you probably will find one that matches exactly your need.\nIf you would like to see your modifications in a nice visual manner with already bytes being presented as opcodes there are some options too. I haven't used them (so can't give you my recommendations) but there are at least two that I know of:\n </p>\n <ul>\n  <li>\n   <a href=\"https://www.zynamics.com/binnavi.html\" rel=\"nofollow noreferrer\">\n    BinNavi\n   </a>\n  </li>\n  <li>\n   <a href=\"https://github.com/filcab/patchdiff2\" rel=\"nofollow noreferrer\">\n    PatchDiff 2\n   </a>\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "4",
            "user": "thedemons",
            "time": "Nov 29, 2022 at 7:19",
            "is_accepted": false,
            "comments": [
                {
                    "user": "pharaon",
                    "text": "<span class=\"comment-copy\">how am i suppose to install patchdiff 2 with IDA and use it,there is no installation or using guide</span>",
                    "time": null
                },
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">Compile and then put in plugins folder as you would do with any other plugin</span>",
                    "time": null
                },
                {
                    "user": "pharaon",
                    "text": "<span class=\"comment-copy\">i tried that already but got too many errors and undefined variables, is there a compiled one?</span>",
                    "time": null
                },
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">I’ll try to see if I can get that compiling</span>",
                    "time": null
                },
                {
                    "user": "pharaon",
                    "text": "<span class=\"comment-copy\">would be really great help</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In Windows, perhaps the simplest possibility is the built-in File Compare command with its /B (binary) switch, to be used from the command-line. It lists all different bytes together with their file offset.\n </p>\n <p>\n  Usage:\n </p>\n <p>\n  fc /B filepath1 filepath2\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "josh",
            "time": "Aug 8, 2018 at 12:15",
            "is_accepted": false,
            "comments": [
                {
                    "user": "pharaon",
                    "text": "<span class=\"comment-copy\">i want to see the opcode different not the binarry</span>",
                    "time": null
                },
                {
                    "user": "josh",
                    "text": "<span class=\"comment-copy\">The file compare gives you the file offsets of the differences in your binaries. From these you can easily get the opcode diffs in a debugger. Should be no problem at all.</span>",
                    "time": null
                },
                {
                    "user": "pharaon",
                    "text": "<span class=\"comment-copy\">always give me this error, FC: cannot open C:\\PROGRAM - No such file or folder</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">quote your path like fc /b \"c:\\prxxx\\yyy ddd\" \"d:\\xx xx xx\\yyy   yyy\"  spaces are treated as delimiters for most of the console apps  so it cant find your file that has a space in the path</span>",
                    "time": null
                },
                {
                    "user": "pharaon",
                    "text": "<span class=\"comment-copy\">hundred lines of binaries and last line is FC: \"c:\\prxxx\\yyy ddd\" longer than \"d:\\xx xx xx\\yyy yyy\"</span>",
                    "time": null
                }
            ]
        }
    ]
}