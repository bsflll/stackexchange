{
    "title": "Go back to the function call address",
    "link": "https://reverseengineering.stackexchange.com/questions/20532/go-back-to-the-function-call-address",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  My question is simple : When I enter into a function call, I can't go back to this same call. Is there a functionality which could permit me to do this in x64dbg?\nOr for example if we want to trace back from a chosen address...\nI hope I am clear enough...\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "4k",
    "tags": [
        "x64dbg"
    ],
    "user": "Bob36180",
    "time": "Feb 4, 2019 at 11:39",
    "comments": [
        {
            "user": "mrexodia",
            "text": "<html><body><span class=\"comment-copy\">\n You cannot really trace back a program, however you can press “-“ in x64dbg to go to the previous address. With regards to calls you can also just look at the stack. From your question it’s not quite clear what you are trying to achieve (are you manually stepping or are you debugging a crash for example?)\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Bob36180",
            "text": "<html><body><span class=\"comment-copy\">\n I wasn't very clear, indeed... Sorry for that ! And thanks for the answer, it solved my problem and it is very useful...\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Raymond W. Farris",
            "text": "<html><body><span class=\"comment-copy\">\n No, is exist, in x64dbg you can go back by pressing minus (-)\n <a href=\"https://i.ibb.co/YcJ5X1g/Untitled.png\" rel=\"nofollow noreferrer\">\n  i.ibb.co/YcJ5X1g/Untitled.png\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You have two options, assuming the function is not inlined:\n </p>\n <ul>\n  <li>\n   at the beginning of the function look at the stack, it should point to the caller. In some cases it can be possible to optimise the invocation of the function and instead of using\n   <code>\n    call\n   </code>\n   use\n   <code>\n    jmp\n   </code>\n   . For example when one function is a subset of another or in recursive functions.\n  </li>\n  <li>\n   I don't think it's possible via\n   <code>\n    x64dbg\n   </code>\n   but you could record a trace of the entire execution and then replay the bits you're interested in and check the callers. For this you could use e.g.\n   <a href=\"https://rr-project.org/\" rel=\"nofollow noreferrer\">\n    https://rr-project.org/\n   </a>\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "4",
            "user": "zxxc",
            "time": "Feb 4, 2019 at 13:09",
            "is_accepted": false,
            "comments": [
                {
                    "user": "mrexodia",
                    "text": "<span class=\"comment-copy\">It is possible to record an execution trace with x64dbg. See the Trace tab.</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@mrexodia is this identical to record&amp;replay functionality?</span>",
                    "time": null
                },
                {
                    "user": "mrexodia",
                    "text": "<span class=\"comment-copy\">Not sure what that is. If you’re referring to the WinDbg TTD, kinda but to be honest I wouldn’t use it to trace really big functions since it’s kinda slow to record a trace. It can show the program state at each step though if that’s what you mean.</span>",
                    "time": null
                }
            ]
        }
    ]
}