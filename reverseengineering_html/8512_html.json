{
    "title": "ldd doesn't show dynamic libraries",
    "link": "https://reverseengineering.stackexchange.com/questions/8512/ldd-doesnt-show-dynamic-libraries",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying understand how some parts of a closed source program distributed as a stripped binary implemented. When I run\n  <code>\n   ldd\n  </code>\n  on the program, it prints only 4-5 most basic C libraries as dynamic dependencies. (e.g.\n  <code>\n   libc\n  </code>\n  ,\n  <code>\n   glib\n  </code>\n  ,\n  <code>\n   gobject\n  </code>\n  etc.) However, when I run it in gdb or attach gdb to it and run\n  <code>\n   info sharedlibrary\n  </code>\n  , it prints a huge list of libraries. Indeed, that program clearly uses GTK for GUI, for example, but gtk libraries are missing in\n  <code>\n   ldd\n  </code>\n  output and shown in\n  <code>\n   info sharedlibrary\n  </code>\n  output.\n </p>\n <p>\n  I was wondering does it work and how did they achieve this. Any ideas?\n </p>\n <p>\n  Thanks.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "gdb",
        "libraries",
        "dynamic-linking"
    ],
    "user": "osa1",
    "time": "Mar 22, 2015 at 2:13",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  They can load their dynamic libraries dynamically by using\n  <code>\n   dlopen\n  </code>\n  and\n  <code>\n   dlsym\n  </code>\n  functions.\nHere is the\n  <a href=\"http://linux.die.net/man/3/dlsym\" rel=\"nofollow\">\n   man page of dlsym\n  </a>\n  and\n  <a href=\"http://christopherpoole.github.io/dynamically-linking-shared-objects-in-c++/\" rel=\"nofollow\">\n   usage example\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "w s",
            "time": "Mar 22, 2015 at 7:33",
            "is_accepted": true,
            "comments": [
                {
                    "user": "osa1",
                    "text": "<span class=\"comment-copy\">You're definitely correct, I set breakpoints on <code>dlopen</code> and <code>dlsym</code>, and it stopped at <code>dlopen</code>. When I <code>print (char*) $rdi</code> it printed \"libcairo.so\". Now, my question is, why would they do that? Those libraries export huge number of symbols, are they manually linking all of them? Any ideas why would I want this?</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">They probably do it for cross-platform compatibility reasons.</span>",
                    "time": null
                }
            ]
        }
    ]
}