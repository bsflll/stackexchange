{
    "title": "Detect interesting testcases",
    "link": "https://reverseengineering.stackexchange.com/questions/18857/detect-interesting-testcases",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Suppose I have a ton of test cases and my target is closed-source. Well, I need to know which test cases discover new path in the execution of my target and which are duplicated. I know I have to use DBI frameworks such as\n  <a href=\"https://www.dynamorio.org/\" rel=\"nofollow noreferrer\">\n   DynamoRIO\n  </a>\n  ,\n  <a href=\"https://software.intel.com/en-us/articles/pin-a-dynamic-binary-instrumentation-tool\" rel=\"nofollow noreferrer\">\n   Intel Pin\n  </a>\n  and others. But, I cannot figure out how to use them, in the other words, I got confused to how I should save trace map and check them for a ton of test cases!?\n </p>\n <p>\n  Another question is, how can we figure out a test case is good and interesting during fuzzing test? Just discovering new path?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "100",
    "tags": [
        "binary-analysis",
        "dynamic-analysis",
        "instrumentation",
        "fuzzing"
    ],
    "user": "alex",
    "time": "Nov 20, 2018 at 9:31",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you want to discover new test cases (or check that a test case is valuable) on a binary, the good way to go is to use tools such as\n  <a href=\"https://klee.github.io/\" rel=\"nofollow noreferrer\">\n   KLEE\n  </a>\n  (see this\n  <a href=\"https://klee.github.io/tutorials/testing-function/\" rel=\"nofollow noreferrer\">\n   small tutorial\n  </a>\n  ).\n </p>\n <p>\n  The point is too use\n  <a href=\"http://www.sti.uniurb.it/events/sfm14esm/slides/albert.pdf\" rel=\"nofollow noreferrer\">\n   symbolic execution\n  </a>\n  to try to cover a maximum of the possible execution paths which are in the binary.\n </p>\n <p>\n  So, I would advise you to take a deeper look at the\n  <a href=\"https://web.eecs.umich.edu/~weimerw/2011-6610/reading/p213-godefroid.pdf\" rel=\"nofollow noreferrer\">\n   symbolic execution approach\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "perror",
            "time": "Jul 21, 2018 at 17:53",
            "is_accepted": false,
            "comments": [
                {
                    "user": "NirIzr",
                    "text": "<span class=\"comment-copy\">Although symbolic execution is <i>one way</i> of measuring the value of test cases, it is not the only one. For example, coverage measures are also a valid approach (that fits OPs intentions of using a dynamic instrumentation tools).</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">AFL comes to mind ...</span>",
                    "time": null
                },
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">yes, definitely!</span>",
                    "time": null
                }
            ]
        }
    ]
}