{
    "title": "Handle Ioctl call while running with qemu",
    "link": "https://reverseengineering.stackexchange.com/questions/27954/handle-ioctl-call-while-running-with-qemu",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am using qemu to emulate a binary like this\n </p>\n <p>\n  <code>\n   qemu -strace XXXXX\n  </code>\n  .\n </p>\n <p>\n  I saw that the first 2 system calls of this process were\n  <code>\n   TCGETS\n  </code>\n  to stdin and stdout. From man pages\n </p>\n <pre><code>Get and set terminal attributes\n      TCGETS Argument: struct termios *argp\n              Equivalent to tcgetattr(fd, argp).\n              Get the current serial port settings.\n</code></pre>\n <p>\n  And after those 2 syscall the process got\n  <code>\n   SIGSEGV\n  </code>\n  .\n </p>\n <p>\n  Is there any simple way to handle those syscall so the process continues without a segfault?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "89",
    "tags": [
        "linux",
        "gdb",
        "qemu"
    ],
    "user": "Lpoiu0099",
    "time": "Jul 6, 2021 at 6:05",
    "comments": [],
    "answers_data": []
}