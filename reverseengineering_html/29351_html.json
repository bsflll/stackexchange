{
    "title": "What is the meaning of SYSTEM_INFO.wProcessorLevel?",
    "link": "https://reverseengineering.stackexchange.com/questions/29351/what-is-the-meaning-of-system-info-wprocessorlevel",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am performing some RE on a malware sample, and they are checking the value of SYSTEM_INFO[32] which is\n  <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/ns-sysinfoapi-system_info\" rel=\"nofollow noreferrer\">\n   SYSTEM_INFO.wProcessorLevel\n  </a>\n  . The description MS provides is not clear to me. The malware checks if this value is 0x0 and exits immediately. Sources online say this is to avoid malware inspection environments - when I read this value on my Windows10 PC (not in a VM, just a basic VS script), it returns 0x6. Can someone shed some light on the meaning of this SYSTEM_INFO offset?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "195",
    "tags": [
        "malware",
        "documentation"
    ],
    "user": "RiskyDiablo",
    "time": "Sep 29, 2021 at 13:55",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  for\n  <strong>\n   intel\n  </strong>\n  wProcessorArchitecture\n  \n\n  wProcessorLevel indicates if the family is one of\n </p>\n <pre><code>386--------------->(3) ,   \n486--------------->(4) ,  \npentium----------->(5) ,   \npentium2&above---->(6)\n</code></pre>\n <p>\n  for other architectures they return different information\n </p>\n <p>\n  on my current device\n </p>\n <pre><code>:\\>wmic cpu get Caption,Level,Name\nCaption                                Level  Name\nIntel64 Family 6 Model 142 Stepping 9  6      Intel(R) Core(TM) i3-7020U CPU @ 2.30GHz\n</code></pre>\n <p>\n  or some c snippet\n </p>\n <pre><code>#include <windows.h>\n#include <stdio.h>\n\nint main(void) {\n    SYSTEM_INFO sysinf ={0};\n    GetSystemInfo(&sysinf);\n    printf(\"%-30s = %x\n\" , \"wProcessorArchitecture\",sysinf.wProcessorArchitecture ); //9 amd64\n    printf(\"%-30s = %x\n\" , \"wProcessorLevel\" ,sysinf.wProcessorLevel ); //6 pent2&above (core i3)\n    printf(\"%-30s = %u\n\" , \"dwProcessorType\" ,sysinf.dwProcessorType ); // 8664 AMD64\n    return 0;\n}\n</code></pre>\n <p>\n  may be the malware runs selectively and infects only specific machine\n </p>\n <p>\n  or as igorsk commented some emulation environments might be returning 0\n </p>\n <p>\n  like instead of GeniuneIntel vmware or hyper-v used to return thier names which could be used to detect if running inside vms\n </p>\n <blockquote>\n  <p>\n   On machines running off of Microsoft’s Hyper-V or VMware this string\nwill be “Microsoft HV” or “VMwareVMware”.\n  </p>\n </blockquote>\n</div>\n</body></html>",
            "votes": "2",
            "user": "blabb",
            "time": "Sep 30, 2021 at 3:24",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">my guess is that 0 is returned by some lazy emulation environments.</span>",
                    "time": null
                }
            ]
        }
    ]
}