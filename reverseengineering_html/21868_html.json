{
    "title": "JTAG Dumped Flash is scrambled",
    "link": "https://reverseengineering.stackexchange.com/questions/21868/jtag-dumped-flash-is-scrambled",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I dumped the flash memory of an old ARM9 Chip running VxWorks using the SEGGER J-Link and the\n  <code>\n   savebin\n  </code>\n  command from J-Link Commander.\n </p>\n <p>\n  Here is an example of a line of HTML stored on memory.\n </p>\n <pre><code><!DOC^YPE H^MN PUNLOC \"///W?C//NTN NTOL 4.01//EN\" \"nt~p>//ww.w?.oro/^R/h~mn4/s~roc~.ntn\">\n</code></pre>\n <p>\n  What it should be\n </p>\n <pre><code><!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n</code></pre>\n <p>\n  The pattern of error that I see is the last 4 bits of every other byte is replaced with different bits.\n </p>\n <p>\n  So the two bytes CT(43 54) in DOCTYPE become C^ (43 5E). The first 2 bits of the two bytes are always correct but the last 4 are not.\n </p>\n <p>\n  My question is, what is causing this systematic error? Is it a problem with the JTAG configuration or some ECC or something thing else completely?\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 0,
    "views": "146",
    "tags": [
        "binary-analysis",
        "jtag",
        "firmware-analysis"
    ],
    "user": "user3547018",
    "time": "Aug 12, 2019 at 17:07",
    "comments": [
        {
            "user": "w s",
            "text": "<html><body><span class=\"comment-copy\">\n It looks like problem in jtag configuration or usage. Did you try to get some copies  of the binary and check differences between the copies ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user3547018",
            "text": "<html><body><span class=\"comment-copy\">\n I think you are right, the problem is some jtag configuration error. I am switching to openOCD for more control over settings but I am not sure what I should change exactly. Unfortunately I do not have access to a copy of the unchanged binary but I have found enough strings to see that the errors are consistent throughout the whole binary.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user3547018",
            "text": "<html><body><span class=\"comment-copy\">\n So I tried using openOCD and got the same result. I am now leaning towards the pattern being a ECC i am not sure which one yet.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}