{
    "title": "What is the meaning of IDA Pro's Local Variable Syntax?",
    "link": "https://reverseengineering.stackexchange.com/questions/17549/what-is-the-meaning-of-ida-pros-local-variable-syntax",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  IDA Pro uses a syntax like\n  <code>\n   Var_A4 = dword ptr -0A4h\n  </code>\n  when declaring stack variables at the top of a x86 assembly routine as shown:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/7baWZ.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/7baWZ.png\"/>\n  </a>\n </p>\n <p>\n  However, I would expect it to refer to such local variables and arguments using an EBP offset syntax. What is the meaning of the dword ptr syntax and why is this syntax used?\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 1,
    "views": "3k",
    "tags": [
        "ida"
    ],
    "user": "the_endian",
    "time": "Feb 27, 2018 at 5:51",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  an argument is positive from stackpointer (esp+xxx) \na local is negative from stackpointer (esp-xxx)\n </p>\n <p>\n  ida renames all locals ie\n  <strong>\n   DWORD ptr ss:[esp-xx]\n  </strong>\n  as\n  <strong>\n   var_xxx\n  </strong>\n  \n\n  and all argumts ie\n  <strong>\n   DWORD PTR SS:[esp+xxx]\n  </strong>\n  as\n  <strong>\n   arg_XX\n  </strong>\n </p>\n <p>\n  you can mass rename them with a script or use K keyboard shortcut to see a single instance\n </p>\n <p>\n  i had a few posts on how you can mass rename it\n  <a href=\"https://reverseengineering.stackexchange.com/questions/14043/stack-variable-information-removed-in-ida-pro-free-version/14044#14044\">\n   here\n  </a>\n  and\n  <a href=\"https://stackoverflow.com/questions/23199403/differences-in-ollydbg-and-ida-pro-for-movsx-edx-byte-ptr-especx8-command/23604013#23604013\">\n   here\n  </a>\n </p>\n <p>\n  EDIT\n </p>\n <p>\n  or you can change the ANALYSIS kernel option 1 \nuncheck create stack var\n </p>\n <p>\n  or open ida.cfg and change the analysis option = 0xffff to 0xfbff and ida wont create those vars and args\n </p>\n <pre><code>:\\>echo %cd%\nE:\\IDA_FREE_5\\cfg\n\n:\\>grep -n ANA.*FBFF *\nida.cfg:194:ANALYSIS        = 0xFBFF // This value is combination of the bits defined\n</code></pre>\n</div>\n</body></html>",
            "votes": "9",
            "user": "blabb",
            "time": "Feb 27, 2018 at 19:10",
            "is_accepted": false,
            "comments": []
        }
    ]
}