{
    "title": "VerifyError after editingg class file with dirtJOE",
    "link": "https://reverseengineering.stackexchange.com/questions/3787/verifyerror-after-editingg-class-file-with-dirtjoe",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm using\n  <a href=\"http://dirty-joe.com/\" rel=\"nofollow\">\n   dirtyJOE\n  </a>\n  to edit a method of a class file.\n </p>\n <p>\n  The original class file had some encryption method calls and such.\nI've changed the byte-code of the method ldc (byte-code:\n  <code>\n   12 1E\n  </code>\n  )\nto load true and return(byte-code:\n  <code>\n   12 1E\n  </code>\n  )\n </p>\n <p>\n  apparently, Java's verifier is upset with my changes and it complains of verification error:\n </p>\n <p>\n  java.lang.VerifyError: Expecting a stack map frame in method\n  <em>\n   [methodName]\n  </em>\n  at offset 2\nat..\nat..\n </p>\n <p>\n  I was wondering if there is a way to fool the jvm to think that there is a stack map frame?\n </p>\n <p>\n  thank you\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "630",
    "tags": [
        "java",
        "byte-code"
    ],
    "user": "aclowkay",
    "time": "Mar 5, 2014 at 17:04",
    "comments": [
        {
            "user": "Antimony",
            "text": "<html><body><span class=\"comment-copy\">\n Could you post the classfile you're trying to edit please?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If the original class was not using StackMapTables, then there should be no problem, assuming you modified the bytecode correctly. Even if it is using them, it is usually possible to just remove them and revert to the old behavior. Assuming that the class does not use\n  <code>\n   invokedynamic\n  </code>\n  , you can just change the version back to\n  <code>\n   49.0\n  </code>\n  and delete the StackMapTable attributes.\n </p>\n <p>\n  Unfortunately, version 51.0 mandates usage of StackMapTable, which is a pain to create when manually editing bytecode. If your class actually is making use of 51.0 features (i.e.\n  <code>\n   invokedynamic\n  </code>\n  ) then your only option is to create the appropriate stack frames. In a simple case like this, you could do it by hand, but in general you're best off using a tool to generate the stack frames automatically.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Antimony",
            "time": "Mar 4, 2014 at 21:45",
            "is_accepted": true,
            "comments": [
                {
                    "user": "aclowkay",
                    "text": "<span class=\"comment-copy\">Could you please reference me to ways of achieving what you mentioned?.(Changing the version and creating stack frames)</span>",
                    "time": null
                },
                {
                    "user": "Antimony",
                    "text": "<span class=\"comment-copy\">@user Well that depends on how you're editing the files of course. I'm not familiar with DirtyJOE, but I could tell you how to do it in Krakatau. I imagine DirtyJOE has similar features.</span>",
                    "time": null
                },
                {
                    "user": "aclowkay",
                    "text": "<span class=\"comment-copy\">Yes, I would like to know how to do that with Krakatau</span>",
                    "time": null
                },
                {
                    "user": "Antimony",
                    "text": "<span class=\"comment-copy\">@user The easiest way is to disassemble it, change the version number at the top of the assembly file to 49 0 and then reassemble. If you want to preserve debugging information, you also need to comment out lines 273-274 of disassembler.py. If you want to remove stack frames as well as changing the version, add the line <code>return {}</code> to the top of the getStackMapTable function.</span>",
                    "time": null
                },
                {
                    "user": "aclowkay",
                    "text": "<span class=\"comment-copy\">Sorry for very late response. but it worked. thanks</span>",
                    "time": null
                }
            ]
        }
    ]
}