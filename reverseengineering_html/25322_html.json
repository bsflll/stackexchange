{
    "title": "Extracting Info from Ghidra Listing Window",
    "link": "https://reverseengineering.stackexchange.com/questions/25322/extracting-info-from-ghidra-listing-window",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have written a script which extracts all the assembly code from a PE using this code in ghidra\n </p>\n <pre><code>instructionList = []\nfor instr in currentProgram.getListing().getInstructions(True):\n    instructionList.append(instr)\n</code></pre>\n <p>\n  but the issue is that, is changes all the .DLL calls in the assembly code.\nFor example, if the listing window shows\n </p>\n <pre><code>CALL        dword ptr [->MSVCRT.DLL::signal] \n</code></pre>\n <p>\n  The output I get is\n </p>\n <pre><code>CALL dword ptr [EBP + -0x14]\n</code></pre>\n <p>\n  Is there a way to get the assembly code exactly as it is in the listing window\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 2,
    "views": "383",
    "tags": [
        "disassembly",
        "ghidra"
    ],
    "user": "Sajjad Zulphekari",
    "time": "Jun 17, 2020 at 11:41",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  So, the answer was provided in the OP's\n  <a href=\"https://github.com/NationalSecurityAgency/ghidra/issues/1994\" rel=\"nofollow noreferrer\">\n   ticket #1994\n  </a>\n  , just transferring it here for the future seekers:\n </p>\n <pre><code>from ghidra.program.model.listing import CodeUnitFormat, CodeUnitFormatOptions\ncodeUnitFormat = CodeUnitFormat(CodeUnitFormatOptions(CodeUnitFormatOptions.ShowBlockName.ALWAYS,CodeUnitFormatOptions.ShowNamespace.ALWAYS,\"\",True,True,True,True,True,True,True))\n\ninstructionList = []\nfor instr in currentProgram.getListing().getInstructions(True):\n    instructionList.append(codeUnitFormat.getRepresentationString(inst))\n</code></pre>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Paweł Łukasik",
            "time": "Jun 18, 2020 at 12:49",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I came up with this after I read the post but couldn't find a way to make it neat and clean\n </p>\n <p>\n  just recording the thought process as pawel created an answer that is nice\n </p>\n <pre><code>>>> inst = currentProgram.listing.getCodeUnitAt(currentAddress)\n>>> print (inst,inst.getReferencesFrom()[1])\n(CALL qword ptr [0x1c0007050], ->NTOSKRNL.EXE::EtwRegister)\n</code></pre>\n <p>\n  edit a regex substitute hack is what I was thinking of before abandoning it like below\n </p>\n <pre><code>>>> re.sub(\"\\[.*\\]\",'['+inst.getReferencesFrom()[1].toString()+']',inst.toString())\n    u'CALL qword ptr [->NTOSKRNL.EXE::EtwRegister]'\n</code></pre>\n</div>\n</body></html>",
            "votes": "2",
            "user": "blabb",
            "time": "Jun 18, 2020 at 17:57",
            "is_accepted": false,
            "comments": []
        }
    ]
}