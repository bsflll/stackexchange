{
    "title": "Reverse engineer the update-binary file in Android recovery update packages",
    "link": "https://reverseengineering.stackexchange.com/questions/15811/reverse-engineer-the-update-binary-file-in-android-recovery-update-packages",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to understand how to disassemble or at least get a readable copy of the update-binary file located in /META-INF/com/google/android/. It is a modified version for a smartwatch, which contains the key used by the manufacturer to temporarily unlock the bootloader and let the system update properly. I searched on the net but I did not find anything related to this.\nHave you got any idea of how could I extract that key form the binary file? The architecture is MIPS.\n </p>\n <p>\n  Thank you in advance!!\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "1k",
    "tags": [
        "android",
        "mips",
        "decompile"
    ],
    "user": "sn0wst0rm",
    "time": "Jul 12, 2017 at 22:39",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n what is the name of the file? Does it have any discernible structure? does the dex code reference it in any way?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I think it's a MIPS ELF binary. Maybe you can use\n  <a href=\"https://www.hex-rays.com/products/ida/\" rel=\"nofollow noreferrer\">\n   IDA Pro\n  </a>\n  (Win/Linux) or\n  <a href=\"https://www.hopperapp.com/\" rel=\"nofollow noreferrer\">\n   Hopper\n  </a>\n  (Mac/Linux) or\n  <a href=\"https://www.pnfsoftware.com/jeb2/mips\" rel=\"nofollow noreferrer\">\n   JEB\n  </a>\n  (Win/Mac/Linux) to poke around.  If you have a clue about the length or parts of the key, then you could try to search for relevant strings.\n </p>\n <p>\n  I've never tried it myself (MIPS), but maybe the approach helps you. ;)\n  \n\n  Cheers!\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "j04n",
            "time": "Sep 19, 2017 at 12:34",
            "is_accepted": false,
            "comments": []
        }
    ]
}