{
    "title": "find equation based on multiple sets of 2 variables and results",
    "link": "https://reverseengineering.stackexchange.com/questions/17928/find-equation-based-on-multiple-sets-of-2-variables-and-results",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm currently trying to reverse engineer a few equations used in a game, and have collected what seems to be all the relevant data.\n </p>\n <p>\n  In the example below, result speed is definitely based solely on the variables of thrust and weight. note that the game does use variables, but rounds the number\n </p>\n <pre><code>thrust | weight | speed\n       |        |\n   428 | 13575  | 188\n   617 | 13575  | 209\n   536 | 23850  | 152\n   995 | 35750  | 175\n   698 | 17475  | 202\n  1373 |  8575  | 278\n</code></pre>\n <p>\n  Is it possible for me to use this data to find the equation through any means except brute force? I've looked around but only found things which used a single variable.There also seems to be diminishing returns on thrust, apart from the increase in weight which comes with it.\n </p>\n <p>\n  Not sure how to tag this\n </p>\n <p>\n  I originally asked this here (\n  <a href=\"https://math.stackexchange.com/questions/2727993/find-equation-based-on-multiple-sets-of-2-variables-and-results\">\n   https://math.stackexchange.com/questions/2727993/find-equation-based-on-multiple-sets-of-2-variables-and-results\n  </a>\n  ), and one of the responses suggested I bring the question here.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 2,
    "views": "218",
    "tags": [
        "static-analysis"
    ],
    "user": "ignaeon",
    "time": "Apr 8, 2018 at 21:23",
    "comments": [
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n I was not entirely convinced your question fits on this site (and – hah – I might even have referred you to\n <a href=\"https://math.stackexchange.com\">\n  Mathematics\n </a>\n ), but on the other hand, as we already have coffee pads and license plates, this one should fit as well :) First thought: have you considered reverse-engineering the executable? If not, can you put up a download link so someone else might have a go at it? It\n <i>\n  could\n </i>\n be easier than finding out the relationship between these numbers.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "sudhackar",
            "text": "<html><body><span class=\"comment-copy\">\n mathematically speaking you can always fit a curve with another. The results get better when you have a large set of values. In your case, the best way would be to track down the function doing the arithmetic.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Ian Cook",
            "text": "<html><body><span class=\"comment-copy\">\n Can you tell us more about the physics of the game.  Is it vertical motion (e.g. a rocket against gravity) or horizontal motion (e.g. a car against friction and air resistance)?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Dan",
            "text": "<html><body><span class=\"comment-copy\">\n Just understand that depending on how realistic the game is, there are other (hidden) parts of the calculation.  For example, there is opposing aerodynamic drag in real life, which IIRC increases with the square of the velocity (e.g. 4x as much drag at 10 mph compared to 20 mph).  Aero drag would be part of the speed calculation, counteracting the thrust force, but it's not linear (obviously).  RE'ing the binary (as others have said) is the best. If not, try accounting for the aero drag, and you might get close.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  While it\n  <em>\n   may\n  </em>\n  be possible to come up with some equation and find out the coefficients from the sample values, they may also be connected in some non-obvious way, so the best solution would be to track down the code which calculates the speed and see how exactly it uses thrust and weight.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Apr 9, 2018 at 8:26",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The best approach would be to actually RE the binary but since we don't have I'll propose an alternative approach.\n </p>\n <p>\n  We could use sat solver like\n  <a href=\"https://github.com/Z3Prover/z3\" rel=\"nofollow noreferrer\">\n   z3\n  </a>\n  to find out the solution for us.\n </p>\n <p>\n  Having script like this:\n </p>\n <pre><code>from collections import namedtuple\nDataPoint = namedtuple('DataPoint', 'thrust weight speed')\n\ndata = [DataPoint(428, 13575, 188),\n    DataPoint(617, 13575, 209),\n    DataPoint(636, 23850, 152),\n    DataPoint(995, 35750, 175),\n    DataPoint(698, 17474, 202),\n    DataPoint(1373, 8575, 278)]\n\nfrom z3 import *\n\na = Int('a')\nb = Int('b')\n\ns = Solver()\nfor e in data:\n  s.add(a*e.thrust+b*e.weight==e.speed)\n\nprint(s.check())\n</code></pre>\n <p>\n  unfortunately for us, when running the above we get:\n </p>\n <blockquote>\n  <p>\n   ➜  17928 python sol.py\n   \n\n   unsat\n  </p>\n </blockquote>\n <p>\n  There's is no solution the equation that is linear - but you have an model you can work on if you might have an idea what type of equation it should be. The first problem with those data is that we do not know the unit. Speed equal to 188, but what? Is it km/h or knots? Or something else a bit more imaginary for the purpose of the game?\n </p>\n <p>\n  It the game touches a bit of the reality we might want to refer to the physics. There's a\n  <a href=\"https://en.wikipedia.org/wiki/Thrust-to-weight_ratio\" rel=\"nofollow noreferrer\">\n   thrust-to-weight\n  </a>\n  ratio in aviation that might help you to deduce something from it (maybe there's some correlation between thrust, weight and speed) but to know that maybe we need to ask on\n  <a href=\"http://aviation.stackexchange.com\">\n   Aviation\n  </a>\n  ?\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Paweł Łukasik",
            "time": "Apr 9, 2018 at 11:56",
            "is_accepted": false,
            "comments": []
        }
    ]
}