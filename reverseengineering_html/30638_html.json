{
    "title": "How to speed up finding a function from pseudocode in IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/30638/how-to-speed-up-finding-a-function-from-pseudocode-in-ida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a function with the pseudocode of\n </p>\n <pre><code>__int64 __fastcall sub_7FF7067A01F0(__int64 a1, __int64 a2, unsigned int a3)\n{\n  if ( qword_7FF709F91498 )\n    return (*(__int64 (__fastcall **)(ID2D1Geometry *, __int64, __int64, _QWORD))(*(_QWORD *)qword_7FF709F91498 + 24i64))(\n             qword_7FF709F91498,\n             a1,\n             a2,\n             a3);\n  else\n    return sub_7FF7067A0450(a1);\n}\n</code></pre>\n <p>\n  Considering there don't appear to be any strings I could easily search for , would there been any other possible way to speed up the process of finding this in IDA without going through lots of functions (for example , anything IDA could search for or anything that could be quickly identified?\n </p>\n <p>\n  Any assistance would be greatly appreciated. Thank you.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "305",
    "tags": [
        "ida",
        "c++",
        "functions"
    ],
    "user": "CoolNite",
    "time": "Jul 14, 2022 at 20:41",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n What do you mean by “finding”? The function name is right there, what is there to find?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "CoolNite",
            "text": "<html><body><span class=\"comment-copy\">\n @IgorSkochinsky i'm trying to find this function in a later version of the software i originally found it in\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  There's little in that function that could serve as a signature. The function itself consists of a single if-else statement with a direct and indirect call. The direct call could possibly be inlined in different compilations, as could the function itself (unless it's only ever called via function pointer).\n </p>\n <p>\n  The most distinguishing characteristic of this function is that it checks a global\n  <code>\n   QWORD\n  </code>\n  against\n  <code>\n   NULL\n  </code>\n  , and invokes its virtual function at\n  <code>\n   +0x18\n  </code>\n  (passing through arguments #0-#2 as arguments #1-3 to the indirect call). That's a reasonable pattern, but also not so easy to find using IDA's standard search interfaces (though perhaps easier to find with a Hex-Rays plugin), and moreover, is likely to have false positives if the program uses a similar pattern to implement other functionality.\n </p>\n <p>\n  I'd say the best things to look at would be:\n </p>\n <ol>\n  <li>\n   <code>\n    sub_7FF7067A0450\n   </code>\n   . Does it have any better characteristics, such as: is it called within a few functions of a named export; does it have any unique strings, API calls, code sequences, etc., or do any of its nearby called/calling functions have any of those things?\n  </li>\n  <li>\n   Callers of\n   <code>\n    sub_7FF7067A01F0\n   </code>\n   (same questions as above).\n  </li>\n  <li>\n   Look for other references to\n   <code>\n    qword_7FF709F91498\n   </code>\n   . Presumably this pointer starts as\n   <code>\n    NULL\n   </code>\n   , and at least one location writes a non-\n   <code>\n    NULL\n   </code>\n   value to it. Is there anything unique about the location(s) that write to it? If so, you can find the write to\n   <code>\n    qword_7FF709F91498\n   </code>\n   , and then use cross-references to find the function in your question. I'd start with the writes before moving on to other locations that read from\n   <code>\n    qword_7FF709F91498\n   </code>\n   , though either could work.\n  </li>\n  <li>\n   Since this is a global variable, maybe it's statically initialized by the runtime system prior to\n   <code>\n    main\n   </code>\n   ? That could give you an easy way to find the constructor of this object, at which point, cross-references could help.\n  </li>\n </ol>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Rolf Rolles",
            "time": "Jul 15, 2022 at 19:10",
            "is_accepted": true,
            "comments": []
        }
    ]
}