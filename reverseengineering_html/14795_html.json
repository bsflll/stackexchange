{
    "title": "How to add standard symbolic constants with bitwise operators (like ORs)",
    "link": "https://reverseengineering.stackexchange.com/questions/14795/how-to-add-standard-symbolic-constants-with-bitwise-operators-like-ors",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am working with IDA and I have the\n  <code>\n   OpenProcess\n  </code>\n  function receiving\n  <code>\n   dwDesireAccess\n  </code>\n  of\n  <code>\n   0x410\n  </code>\n  :\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/y0thX.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/y0thX.png\"/>\n  </a>\n </p>\n <p>\n  According to\n  <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms684880(v=vs.85).aspx\" rel=\"nofollow noreferrer\">\n   MSDN\n  </a>\n  we can see that\n  <code>\n   0x410\n  </code>\n  is the result of\n  <code>\n   OR\n  </code>\n  between two access rights:\n </p>\n <pre><code>PROCESS_QUERY_INFORMATION (0x0400)\nPROCESS_VM_READ (0x0010)\n</code></pre>\n <p>\n  How can I set a standard symbolic constant such as\n  \n\n  <code>\n   PROCESS_QUERY_INFORMATION | PROCESS_VM_READ\n  </code>\n  ?\n </p>\n <p>\n  I must do it manually (with \"Manual...\")?\n </p>\n <p>\n  This is only what I have:\n  \n\n  <a href=\"https://i.sstatic.net/3aiqX.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/3aiqX.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 1,
    "views": "3k",
    "tags": [
        "ida",
        "debugging-symbols"
    ],
    "user": "E235",
    "time": "Mar 2, 2017 at 18:52",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You could create a\n  <a href=\"https://www.hex-rays.com/products/ida/support/idadoc/500.shtml\" rel=\"noreferrer\">\n   bitfield enum\n  </a>\n  . Since the enum containing\n  <code>\n   PROCESS_VM_READ\n  </code>\n  already exists in the MSSDK type library, we are going to copy that and modify it to become a bitfield.\n </p>\n <ol>\n  <li>\n   <p>\n    Go to the enums subview, then right click and\n    <strong>\n     Add enum...\n    </strong>\n    (press\n    <kbd>\n     Insert\n    </kbd>\n    on Windows).\n    <img alt=\"enter image description here\" src=\"https://i.sstatic.net/XX7h8.png\"/>\n   </p>\n  </li>\n  <li>\n   <p>\n    Click\n    <strong>\n     Add standard enum by symbol name\n    </strong>\n    .\n    \n\n    <img alt=\"enter image description here\" src=\"https://i.sstatic.net/j3goo.png\"/>\n   </p>\n  </li>\n  <li>\n   <p>\n    Find\n    <code>\n     PROCESS_VM_READ\n    </code>\n    , then click\n    <strong>\n     OK\n    </strong>\n    .\n    \n\n    <img alt=\"enter image description here\" src=\"https://i.sstatic.net/I7Zvl.png\"/>\n   </p>\n  </li>\n  <li>\n   <p>\n    A new enum called\n    <code>\n     MACRO_PROCESS\n    </code>\n    should be added. Expand it (\n    <kbd>\n     Ctrl\n    </kbd>\n    <kbd>\n     Numpad +\n    </kbd>\n    or right click â†’\n    <strong>\n     Unhide\n    </strong>\n    )\n   </p>\n  </li>\n  <li>\n   <p>\n    Delete the enum member\n    <code>\n     PROCESS_ALL_ACCESS\n    </code>\n    (press\n    <kbd>\n     U\n    </kbd>\n    when selecting it).\n    \n\n    <img alt=\"enter image description here\" src=\"https://i.sstatic.net/07xY0.png\"/>\n   </p>\n  </li>\n  <li>\n   <p>\n    Right click and choose\n    <strong>\n     Edit enum...\n    </strong>\n    (\n    <kbd>\n     Ctrl\n    </kbd>\n    <kbd>\n     E\n    </kbd>\n    ).\n   </p>\n  </li>\n  <li>\n   <p>\n    Check\n    <strong>\n     Bitfield\n    </strong>\n    , then click\n    <strong>\n     OK\n    </strong>\n    . (This step will fail if you don't perform step 5)\n    <img alt=\"enter image description here\" src=\"https://i.sstatic.net/Oplkv.png\"/>\n   </p>\n  </li>\n </ol>\n <p>\n  Now the MACRO_PROCESS bitfield should appear when you hit\n  <kbd>\n   M\n  </kbd>\n  on 410h, and should appear as something like\n </p>\n <pre><code>mov     eax, PROCESS_VM_READ or PROCESS_QUERY_INFORMATION\n</code></pre>\n</div>\n</body></html>",
            "votes": "6",
            "user": "kennytm",
            "time": "Mar 3, 2017 at 6:51",
            "is_accepted": true,
            "comments": [
                {
                    "user": "E235",
                    "text": "<span class=\"comment-copy\">great answer ! Why you delete <code>PROCESS_ALL_ACCESS</code> ?</span>",
                    "time": null
                },
                {
                    "user": "kennytm",
                    "text": "<span class=\"comment-copy\">@E235: See step 7's description.</span>",
                    "time": null
                },
                {
                    "user": "E235",
                    "text": "<span class=\"comment-copy\">Any idea why it will fail ?  I want to understand because maybe I will have a case when I will need also this last parameter.</span>",
                    "time": null
                },
                {
                    "user": "Eran Zimmerman Gonen",
                    "text": "<span class=\"comment-copy\">I think the problem is the intersecting masks (which I think default to the values themselves). If in the code you ever have the value 1F0FFFh, it will be replaced by a bitwise OR of all other constants. You could also define it as a standalone constant (e.g. an enum containing only that, might be a better way). Unless there are some hidden options here, this bitfields feature feels a bit unfinished (unless you don't have any duplicates or intersections).</span>",
                    "time": null
                }
            ]
        }
    ]
}