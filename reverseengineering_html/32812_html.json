{
    "title": "Why does the value stored in a register change after an x/s call? (GDB)",
    "link": "https://reverseengineering.stackexchange.com/questions/32812/why-does-the-value-stored-in-a-register-change-after-an-x-s-call-gdb",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have run the following commands at a breakpoint in gdb and I don't understand how the x/d $rdx commands returns two different values, one before and one after x/s $rdx is executed. To my understanding x is just for reading values?\n </p>\n <pre><code>(gdb) x/d $rdx\n0x555555559180: -6681\n(gdb) x/s $rdx\n0x555555559180: \"\\347\\345\\377\\377\\221\\345\\377\\377\\261\\345\\377\\377\\270\\345\\377\\377\\277\\345\\377\\377\\306\\345\\377\\377\\315\\345\\377\\377\\324\\345\\377\\377\\002\"\n(gdb) x/d $rdx\n0x555555559180: -25\n</code></pre>\n <p>\n  I guess it's more likely I'm misunderstanding something in terms of the x command and how it works so any info on that would be really helpful.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "57",
    "tags": [
        "gdb"
    ],
    "user": "GS343597",
    "time": "Mar 17, 2024 at 13:23",
    "comments": [
        {
            "user": "Yotamz",
            "text": "<html><body><span class=\"comment-copy\">\n This is a secondary issue, but\n <code>\n  x $rdx\n </code>\n reads from the memory address pointed to by\n <code>\n  rdx\n </code>\n . To read the value stored in\n <code>\n  rdx\n </code>\n as decimal use gdb's\n <code>\n  print\n </code>\n command:\n <code>\n  p/d $rdx\n </code>\n .\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <code>\n   x/d\n  </code>\n  reads the value starting at some address and display it as decimal.\n </p>\n <p>\n  If you don't specify a size,\n  <code>\n   x\n  </code>\n  will use the default or the last size used.\n </p>\n <p>\n  Your first\n  <code>\n   x/d\n  </code>\n  reads the default size - a word (typically 4-bytes).\n </p>\n <p>\n  Then\n  <code>\n   x/s\n  </code>\n  reads a string, that is\n  <em>\n   1\n  </em>\n  string.\n </p>\n <p>\n  The last\n  <code>\n   x/d\n  </code>\n  then reads one byte, as\n  <em>\n   1\n  </em>\n  was the last size used.\n </p>\n <p>\n  To avoid this, specify a size for the command:\n </p>\n <p>\n  For example:\n  <code>\n   x/wd\n  </code>\n  will read a word-sized value as decimal and\n  <code>\n   x/bx\n  </code>\n  will read one byte value as hex.\n </p>\n <p>\n  Numeric notation is also accepted:\n </p>\n <p>\n  <code>\n   x/8bx\n  </code>\n  will read 8 bytes as hex.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Yotamz",
            "time": "Mar 17, 2024 at 20:00",
            "is_accepted": true,
            "comments": [
                {
                    "user": "GS343597",
                    "text": "<span class=\"comment-copy\">Thanks a lot for the clarification!</span>",
                    "time": null
                }
            ]
        }
    ]
}