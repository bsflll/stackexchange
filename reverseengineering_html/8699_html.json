{
    "title": "Patching jmp instructions on amd64 with IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/8699/patching-jmp-instructions-on-amd64-with-ida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  For experimentation, while waiting for vendor to fix bug, wanted to try and eliminate a crash that occurs on occasion. Up till now I've only done patching replacing existing code, not trying to insert additional code.\n </p>\n <p>\n  Original\n </p>\n <pre><code>.text:000000018000A260                 cmp     [rax], r12d <- RAX=0, crashes program\n.text:000000018000A263                 jz      short loc_18000A271\n.text:000000018000A265                 cmp     dword ptr [rax], 6\n.text:000000018000A268                 jnz     short loc_18000A276\n.text:000000018000A26A                 cmp     ecx, 40h\n</code></pre>\n <p>\n  And further on:\n </p>\n <pre><code>.text:000000018000A21B                 mov     rcx, [rsp+388h+var_350]\n.text:000000018000A220                 call    cs:WindowsDeleteString\n.text:000000018000A226                 mov     [rsp+388h+var_350], r15\n.text:000000018000A22B                 mov     rbx, [rsp+388h+var_348]\n</code></pre>\n <p>\n  I want to insert some new instruction, changing to jmp to patched code\n </p>\n <pre><code>.text:000000018000A260                 jmp     <patched code>\n</code></pre>\n <p>\n  Patched Code Idea - I can't find much suitable place to insert code - so was thinking of shortening some non-essential strings in .rdata section to insert this code - Is there any issue with this? Essentially what I am trying to do is if RAX = 0 , skip over the use of [rax]\n </p>\n <pre><code>cmp rax,0\njz .text:000000018000A21B ; The code point past using [rax]\ncmp [rax], r12d\njmp .text:000000018000A263 ; Continue program execution normally\n</code></pre>\n <p>\n  Now it seems IDA \"Assemble\" doesn't always work, for example cmp rax,0 it says \"Invalid Operand\" So I had to patch bytes instead\n </p>\n <pre><code>48 83 F8 00 = cmp rax,0\n</code></pre>\n <p>\n  Is there a way to get the \"assemble\" in IDA to reference my jump locations, using the location references in IDA. Or is there a suggested method to calculate how to build my jmp/jz instructions.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "4k",
    "tags": [
        "ida",
        "assembly"
    ],
    "user": "chentiangemalc",
    "time": "Apr 15, 2015 at 7:05",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <p>\n   Patched Code Idea - I can't find much suitable place to insert code -\n  so was thinking of shortening some non-essential strings in .rdata\n  section to insert this code - Is there any issue with this?\n  </p>\n </blockquote>\n <p>\n  You should not use the .rdata section as it's usually not not marked for execution of code. If you ignore this you will trigger DEP and changing the segment to allow code executions is obviously not recommended as well.\n </p>\n <p>\n  I would suggest to add a segment, extend the current segment or find some empty space in the current segment (maybe there's align bytes at the end).\n </p>\n <blockquote>\n  <p>\n   Is there a way to get the \"assemble\" in IDA to reference my jump\n  locations, using the location references in IDA. Or is there a\n  suggested method to calculate how to build my jmp/jz instructions.\n  </p>\n </blockquote>\n <p>\n  You can just take the difference between the two virtual addresses and use a relative jump (0xE9).\n </p>\n <blockquote>\n  <p>\n   Now it seems IDA \"Assemble\" doesn't always work, for example cmp rax,0\n  it says \"Invalid Operand\"\n  </p>\n </blockquote>\n <p>\n  This feature is not supported for AMD64 according to Hex Rays:\n </p>\n <blockquote>\n  <p>\n   The assembler command is supported for only a few processors, only a\n  few instructions. We do not plan to extend this feature, sorry\n  </p>\n </blockquote>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Remko",
            "time": "Apr 15, 2015 at 7:05",
            "is_accepted": true,
            "comments": [
                {
                    "user": "chentiangemalc",
                    "text": "<span class=\"comment-copy\">Thanks, I used the 100h align bytes that were at the end of the .text fsegment, converting to \"code\" using Edit-&gt;Code menu, allowing me to patch bytes and use assemble. Using assemble jz/jmp near ptr loc_000000018000A21B  the correct jmp was injected.</span>",
                    "time": null
                }
            ]
        }
    ]
}