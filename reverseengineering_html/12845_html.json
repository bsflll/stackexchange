{
    "title": "How can I control a USB device if I have a driver for it, but no application?",
    "link": "https://reverseengineering.stackexchange.com/questions/12845/how-can-i-control-a-usb-device-if-i-have-a-driver-for-it-but-no-application",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a\n  <a href=\"http://www.andor.com/scientific-cameras/apogee-camera-range/accessories/filter-wheels\" rel=\"nofollow\">\n   Apogee filter-wheel\n  </a>\n  which is connected via USB and the driver for it.\n </p>\n <p>\n  However, as far as I could find out the device only comes with a driver but no application to control it. The filter wheels are apparently usually bundled with a camera and both are apparently meant to be controlled together via commercial 3rd party software. I don't have this 3rd party software and I also don't want to use it if I can avoid it.\n </p>\n <p>\n  My only experience with USB devices/applications/drivers was quite long ago and that device (a USB-controllable power socket) used a HID-protocol which made is quite easy to use it.\n </p>\n <p>\n  Is there a way to take a look into the driver to see what functionality it offers and how to use it? E.g. like looking at a DLL with depends.exe to find exposed functions? I found a\n  <a href=\"http://www.randomfactory.com/downloads/\" rel=\"nofollow\">\n   Linux library\n  </a>\n  that deals with those devices but this seems also mostly about the cameras.\n </p>\n <p>\n  Any advice how I could access the filter wheel on Windows 7? I just want to turn the filter wheel.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "103",
    "tags": [
        "windows",
        "usb",
        "driver"
    ],
    "user": null,
    "time": "Jun 6, 2016 at 13:07",
    "comments": [
        {
            "user": "theB",
            "text": "<html><body><span class=\"comment-copy\">\n Looking at\n <a href=\"http://www.astro.louisville.edu/software/sbig/archive/xmccd-4.1/xmccd-4.1e/libapogee/src\" rel=\"nofollow noreferrer\">\n  this test file (\n  <code>\n   test_filter.cpp\n  </code>\n  )\n </a>\n from the University of Louisville astronomy department, it looks pretty straight forward to adapt, but it all depends on what functions the drivers actually export, and on your level of programming skill.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Spektre",
            "text": "<html><body><span class=\"comment-copy\">\n find the DLL from the driver you have to use as an API. Then open it in any DLL or PE explorer utility like\n <a href=\"http://www.nirsoft.net/utils/dll_export_viewer.html\" rel=\"nofollow noreferrer\">\n  nirsoft.net/utils/dll_export_viewer.html\n </a>\n You will see all exported functions. You could try to create a header file for it but if it uses COM classes or any hidden stuff you re out of luck. Also if the names are not mangled you re in trouble. The best thing you hope for is find header file for the dll (some drivers ship them along the dll). And then experimentate with device init/enum/usage\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "katzenversteher",
            "text": "<html><body><span class=\"comment-copy\">\n Thank you very much, I'll try to find the DLL and the exported functions.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}