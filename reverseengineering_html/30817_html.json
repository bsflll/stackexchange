{
    "title": "How do i loop this CreateThread call in Assembly to get 4 threads instead of only one?",
    "link": "https://reverseengineering.stackexchange.com/questions/30817/how-do-i-loop-this-createthread-call-in-assembly-to-get-4-threads-instead-of-onl",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"https://i.sstatic.net/5VnZr.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/5VnZr.png\"/>\n  </a>\n  Knowledge in C++ Assembly and some reverse engineering experience\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "149",
    "tags": [
        "assembly"
    ],
    "user": "Shark Laser",
    "time": "Aug 24, 2022 at 14:36",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  See\n  <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createthread\" rel=\"nofollow noreferrer\">\n   Microsoft's API page on CreateThread.\n  </a>\n </p>\n <p>\n  The six pushes right before the call correspond to the arguments\n </p>\n <pre><code> HANDLE CreateThread(\n  [in, optional]  LPSECURITY_ATTRIBUTES   lpThreadAttributes,\n  [in]            SIZE_T                  dwStackSize,\n  [in]            LPTHREAD_START_ROUTINE  lpStartAddress,\n  [in, optional]  __drv_aliasesMem LPVOID lpParameter,\n  [in]            DWORD                   dwCreationFlags,\n  [out, optional] LPDWORD                 lpThreadId\n);\n</code></pre>\n <p>\n  If you're creating four threads, you'll want to also construct some sort of table for storing the pointers to the thread handles, which I think are returned in EAX. If that memory has not already been allocated, you'll want to precede this code by a call to\n  <a href=\"https://docs.microsoft.com/en-us/windows/win32/memory/comparing-memory-allocation-methods\" rel=\"nofollow noreferrer\">\n   malloc or some other memory allocation function.\n  </a>\n </p>\n <p>\n  So, to summarize,\n </p>\n <ol>\n  <li>\n   Allocate memory in the size of 4 * (the size of a pointer) to store the handles that are returned by the CreateThread method,\n  </li>\n  <li>\n   Loop the creation of the thread, starting at 0x610ab9, and\n  </li>\n  <li>\n   Store the resulting handles at the appropriate offsets into the memory you allocated in step 1.\n  </li>\n </ol>\n</div>\n</body></html>",
            "votes": "1",
            "user": "dingo_kinznerhook",
            "time": "Aug 25, 2022 at 19:39",
            "is_accepted": false,
            "comments": []
        }
    ]
}