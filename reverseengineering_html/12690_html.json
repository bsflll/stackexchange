{
    "title": "x64 Memory Pointer and Addressing modes [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/12690/x64-memory-pointer-and-addressing-modes",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed\n        </b>\n        . This question needs\n        <a href=\"/help/closed-questions\">\n         details or clarity\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       <b>\n        Want to improve this question?\n       </b>\n       Add details and clarify the problem by\n       <a href=\"/posts/12690/edit\">\n        editing this post\n       </a>\n       .\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2016-05-25 05:52:27Z\">\n        8 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/12690/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  I'm working through example from a Windows disassembly training guide. In the exercise\n  <strong>\n   <em>\n    rax is set to a byte ptr\n   </em>\n  </strong>\n  , then\n  <strong>\n   <em>\n    rbx a word ptr\n   </em>\n  </strong>\n  . I notice the next byte of memory is skipped before\n  <strong>\n   <em>\n    rcx is to a dword ptr\n   </em>\n  </strong>\n  . Why did a byte of memory get skipped? Is there some alignment requirement?\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/pz5rR.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Addressing modes\" src=\"https://i.sstatic.net/pz5rR.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "259",
    "tags": [
        "disassembly",
        "debugging",
        "windbg"
    ],
    "user": "dcrearer",
    "time": "8 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The main reason to align the data is for performance (some architectures will fault on misaligned data, but since you tagged this with windbg, we will assume amd/intel x64 + windows).\n </p>\n <p>\n  Quoting from the AMD64 Architecture Programmerâ€™s Manual Volume 1:\n </p>\n <blockquote>\n  <p>\n   The AMD64 architecture does not impose data-alignment requirements for\n  accessing data in memory. However, depending on the location of the\n  misaligned operand with respect to the width of the data bus and other aspects of the hardware implementation (such as\n  store-to-load forwarding mechanisms), a misaligned memory access can\n  require more bus cycles than an aligned access. For maximum\n  performance, avoid misaligned memory accesses.\n  </p>\n </blockquote>\n <p>\n  Ideally the word-sized data (pointed via rbx) would be 2-byte aligned, but as noted above, it is not required.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "josh poley",
            "time": "May 18, 2016 at 19:31",
            "is_accepted": true,
            "comments": []
        }
    ]
}