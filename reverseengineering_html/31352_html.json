{
    "title": "deobfuscate Dexgaurd obfuscated code",
    "link": "https://reverseengineering.stackexchange.com/questions/31352/deobfuscate-dexgaurd-obfuscated-code",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I was reversing an\n  <code>\n   apk\n  </code>\n  . the\n  <code>\n   code\n  </code>\n  detects whether the\n  <code>\n   apk\n  </code>\n  is running on a rooted device or not. if it is rooted or an emulator it will stop and close out. so this is the snippet code which I think it was obfuscated with DexGuard not really sure if it is.\n </p>\n <pre><code>v0_4 = (int)(((Integer)((Class)withOrigin.read(((char)(-1 - Long.compare(ExpandableListView.getPackedPositionForChild(0, 0), 0L))), 476 - View.combineMeasuredStates(0, 0), 18 - Long.compare(Process.getElapsedCpuTime(), 0L))).getMethod(\"RemoteActionCompatParcelizer\", Context.class, Integer.TYPE).invoke(null, v0_3, ((int)1))));\n</code></pre>\n <p>\n  so the method\n  <code>\n   RemoteActionCompatParcelizer\n  </code>\n  is the method determining whether rooted or not I believe. as such the\n  <code>\n   withOrigin.read\n  </code>\n  intercepted with\n  <code>\n   frida\n  </code>\n  returns\n  <code>\n   o.a\n  </code>\n  so tried to with jadx-gui find the package\n  <code>\n   o.a\n  </code>\n  as the method\n  <code>\n   RemoteActionCompatParcelizer\n  </code>\n  is apparently defined in this package but not found in the tree o and there are a bunch of other classes in it.\n </p>\n <p>\n  so what next steps can I take to solve these obfuscations?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "348",
    "tags": [
        "android",
        "obfuscation",
        "deobfuscation",
        "apk"
    ],
    "user": "hanan",
    "time": "Jan 4, 2023 at 15:45",
    "comments": [],
    "answers_data": []
}