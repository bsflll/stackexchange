{
    "title": "How to calculate Opcode Length from Ollydbg",
    "link": "https://reverseengineering.stackexchange.com/questions/23242/how-to-calculate-opcode-length-from-ollydbg",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Suppose I reverse a dll, and searching for a Function, say for instance Send(), I have reversed the ws2_32.dll now How Can i calculate the number of bytes from there to know that i need 5 bytes of instruction using say ollydbg or immunity debugger??\n </p>\n <p>\n  I am very new to this and I do not want to use a disassembly library like Minhook and Microsoft Detours. Just something done manually.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "369",
    "tags": [
        "assembly"
    ],
    "user": "Tom",
    "time": "Feb 13, 2020 at 14:26",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n can you rephrase Your question ollydbg shows the opcodes for each instruction also it shows the address of current instruction and address of next instruction  either count the opcode bytes or subtract  current addr from next addr  to get current instructions length\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jon",
            "text": "<html><body><span class=\"comment-copy\">\n Minhook and Detours aren't disassembly libraries\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n There is nothing to\n <i>\n  calculate\n </i>\n . There is no rhyme or reason to the length of x86/x64 opcodes. If you want the length of an opcode, you'll going to have to look up\n <i>\n  that specific opcode\n </i>\n . Make sure to get any argument types correct; a simple jump\n <code>\n  jz\n </code>\n can be from 2 to up to -- I\n <i>\n  think\n </i>\n -- 5 bytes long.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In Ollydbg it shows the opcodes to the left of the instructions you are currently looking at, inside of the disassembly view.\n </p>\n <p>\n  There isn't anything to calculate, its\n  <em>\n   already there\n  </em>\n  . You can just extract that then get the length through what opcode range you are looking at.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Graham",
            "time": "Feb 14, 2020 at 16:48",
            "is_accepted": false,
            "comments": []
        }
    ]
}