{
    "title": "PE Format - How can I delete IMAGE_IAT_DIRECTORY and the app still runs fine?",
    "link": "https://reverseengineering.stackexchange.com/questions/25493/pe-format-how-can-i-delete-image-iat-directory-and-the-app-still-runs-fine",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I’m doing a small research regarding PE files and while I drilled every related question or the documentation itself I couldn’t explain this issue.\n </p>\n <p>\n  Why can I go to CFF explorer or some other PE editing software and nullify the IMAGE_IAT_DIRECTORY in the OptionalHeader and the program will still run fine?\n </p>\n <p>\n  As far as I understood, the loader will iterate the array of PIMAGE_THUNK_DATA pointed by OriginalFirstThunk, will parse the symbol, and then will overwrite the memory pointed by FirstThunk with the corresponding function address.\n </p>\n <p>\n  I also understood that the IMAGE_IAT_DIRECTORY Will serve as a container for these function pointer arrays, for each corresponding FirstThunk in each IMAGE_IMPORT_DESCRIPTOR.\nWhen is it needed for an IAT directory to exist? Can it be that a lack of this directory will prevent an file from starting?\n </p>\n <p>\n  Thanks!\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "44",
    "tags": [
        "windows",
        "binary-analysis",
        "pe",
        "windows-10",
        "pe32"
    ],
    "user": "FigureItOut",
    "time": "Jul 14, 2020 at 7:42",
    "comments": [],
    "answers_data": []
}