{
    "title": "Malware analysis - AntiDebugging - Malware slows down the PC while being debugged",
    "link": "https://reverseengineering.stackexchange.com/questions/11017/malware-analysis-antidebugging-malware-slows-down-the-pc-while-being-debugge",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As part of my work, I'm debugging a malware found and his behavior is pretty basic after execution:\n </p>\n <ol>\n  <li>\n   Being executed\n  </li>\n  <li>\n   Decrypt a lot of data from memory and obtain a new PE (from memory)\n  </li>\n  <li>\n   Create a child process in suspended state\n  </li>\n  <li>\n   Dump the new data obtained into the Created child process\n  </li>\n  <li>\n   SetThreadContext\n  </li>\n  <li>\n   ResumeThread\n  </li>\n </ol>\n <p>\n  Now one issue i was thinking about, is the fact i dont know what the\n  <code>\n   EntryPoint\n  </code>\n  is so i dont know what part of the memory bytes i would change to\n  <code>\n   EB FE\n  </code>\n  (JMP < ToSelf >) To be able to debug the process from the start\n </p>\n <p>\n  Once the new process is created and im attaching a debugger to it - OLLYDbg for that case (And the process is on\n  <em>\n   Pause\n  </em>\n  state) Pressing\n  <code>\n   F8 - step over\n  </code>\n  causing the application to have a huge delay of like 10 seconds untill the Opcode is finished - which makes no sense.\nAlso if i watch the newly created process on\n  <code>\n   Sysinternals - ProcessExplorer\n  </code>\n  I can see that after i press F8 the CPU usage of that process is very high 50-90 for all that time, until the opcode is finished. Which also results in all of the computer to run very slowly\n </p>\n <p>\n  What could cause that? and how would i be able to bypass that?\n </p>\n <p>\n  It does not happen if i dont debug the process.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "281",
    "tags": [
        "windows",
        "ollydbg",
        "malware",
        "anti-debugging"
    ],
    "user": "0xAK",
    "time": "Oct 4, 2015 at 11:10",
    "comments": [
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n Have you changed\n <code>\n  EB FE\n </code>\n back to the original opcodes? Instead of pressing  F8 you can try to\n <code>\n  Resume All Threads\n </code>\n .\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n does attaching to a suspended child process succeed ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xAK",
            "text": "<html><body><span class=\"comment-copy\">\n @ExtremeCoders, Yes ofcourse i remembered.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xAK",
            "text": "<html><body><span class=\"comment-copy\">\n @blabb, and yes it succeedes, basically OllyDbg creates a new thread for him self for debugging the process\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n oh ollydbg 2.01 resumes the thread from supended state when attaching to a suspended process i dont think that behaviour is a standard behaviour windbg  or ollydbg 1.10 never succeded in attaching to a suspended process  and that is how it should be i think well in such case you\n <b>\n  CANT\n </b>\n resume from your parent thread i think and may cause inconsistent result i would bet\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}