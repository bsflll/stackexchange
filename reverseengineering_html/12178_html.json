{
    "title": "Virtual Method that returns <this>?",
    "link": "https://reverseengineering.stackexchange.com/questions/12178/virtual-method-that-returns-this",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In my vtable i found a method that simply returns ecx.\nNow im confused as to what this tries to accomplish ? \nIs this a known useful sequence ?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 3,
    "views": "178",
    "tags": [
        "ida",
        "c++"
    ],
    "user": "Blob31",
    "time": "Mar 8, 2016 at 17:37",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The C++ compiler of Visual Studio uses\n  <code>\n   ecx\n  </code>\n  as the default register for\n  <code>\n   this\n  </code>\n  pointer, a virtual method which returns\n  <code>\n   ecx\n  </code>\n  then actually returns\n  <code>\n   this\n  </code>\n  or\n  <code>\n   *this\n  </code>\n  . For example, you can test the following code:\n </p>\n <pre><code>class A\n{\npublic:\n  virtual A getmyself() { return *this; }\n  virtual A* getmyselfpointer() { return this; }\n}\n</code></pre>\n <p>\n  The generated assembly code for\n  <code>\n   getmyself\n  </code>\n  (the same for\n  <code>\n   getmyselfpointer\n  </code>\n  ) is\n </p>\n <pre><code>getmyself:\n  mov     eax, ecx\n  retn\n</code></pre>\n <p>\n  This detail is not true for\n  <code>\n   clang\n  </code>\n  or\n  <code>\n   gcc\n  </code>\n  since they do not use\n  <code>\n   ecx\n  </code>\n  as default register for\n  <code>\n   this\n  </code>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Ta Thanh Dinh",
            "time": "Mar 9, 2016 at 16:30",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It could be a method that at a high-level is intended to return a\n  <a href=\"https://en.wikipedia.org/wiki/Covariance_and_contravariance_(computer_science)\" rel=\"nofollow\">\n   covariant\n  </a>\n  object pointer.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Jason Geffner",
            "time": "Mar 8, 2016 at 17:59",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If it would be ARM I'd say that it is constructor or destructor (see\n  <a href=\"https://stackoverflow.com/questions/15452133/arm-c-abi-constructor-destructor-return-values\">\n   this answer\n  </a>\n  for more details). As a part of more general pattern I had seen such a things in a multi-platform applications where the main code of the function was\n  <code>\n   #ifdef\n  </code>\n  'ed out and only return value was left for compatibility with other platforms/build configurations.\n </p>\n <p>\n  Did you see calls to this function?\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Community",
            "time": "May 23, 2017 at 12:37",
            "is_accepted": false,
            "comments": []
        }
    ]
}