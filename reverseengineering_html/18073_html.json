{
    "title": "Understanding what is represented by function pointers to a block of hex",
    "link": "https://reverseengineering.stackexchange.com/questions/18073/understanding-what-is-represented-by-function-pointers-to-a-block-of-hex",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm working on a disassembly project for my class where I'm trying to bypass a license check, but when I throw the executable into Binary Ninja this is what I see:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/26zvR.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"Function pointers within binary ninja\" src=\"https://i.sstatic.net/26zvR.jpg\"/>\n  </a>\n </p>\n <p>\n  And when I look at those pointers, they are all pointing to the same block of hex:\n  <a href=\"https://i.sstatic.net/Dp61f.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"Block of hex\" src=\"https://i.sstatic.net/Dp61f.jpg\"/>\n  </a>\n </p>\n <p>\n  I'm not sure what to make of it, or even how to interpret it. Any advice would be appreciated.\n </p>\n</div>\n</body></html>",
    "votes": "-1",
    "answers": 1,
    "views": "167",
    "tags": [
        "disassembly",
        "assembly",
        "binary-analysis",
        "static-analysis",
        "hex"
    ],
    "user": "user3213722",
    "time": "Jun 17, 2020 at 9:54",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This looks like an import table. I.e. it holds the information about the functions which are called from the other dynamic libraries.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Anton Kukoba",
            "time": "Apr 24, 2018 at 8:14",
            "is_accepted": false,
            "comments": []
        }
    ]
}