{
    "title": "What are the differences between metamorphic, oligomorphic and polymorphic malware?",
    "link": "https://reverseengineering.stackexchange.com/questions/1696/what-are-the-differences-between-metamorphic-oligomorphic-and-polymorphic-malwa",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Malware use several methods to evade anti-virus software, one is to change their code when they are replicating. I saw mainly three type of techniques in the wild which are:\n  <em>\n   metamorphic malware\n  </em>\n  ,\n  <em>\n   oligomorphic malware\n  </em>\n  and\n  <em>\n   polymorphic malware\n  </em>\n  (I might have missed one). What are the main differences between theses techniques and what do they do ?\n </p>\n</div>\n</body></html>",
    "votes": "9",
    "answers": 2,
    "views": "7k",
    "tags": [
        "obfuscation",
        "malware"
    ],
    "user": "perror",
    "time": "Apr 10, 2013 at 8:34",
    "comments": [
        {
            "user": "Ange",
            "text": "<html><body><span class=\"comment-copy\">\n <a href=\"http://security.stackexchange.com/questions/4619/oligomorphism-vs-polymorphism-vs-metamorphism-in-malware\" title=\"oligomorphism vs polymorphism vs metamorphism in malware\">\n  security.stackexchange.com/questions/4619/â€¦\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "perror",
            "text": "<html><body><span class=\"comment-copy\">\n Are you sure we can't do better than this (short) answer ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "perror",
            "text": "<html><body><span class=\"comment-copy\">\n Still the difference between metamorphic and polymorphic are unclear to me... If someone can come with a better definition, I take it.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In order of increasing complexity: oligomorphic, polymorphic, metamorphic.\n </p>\n <p>\n  The first two terms are generally applied to decryptors.  We (anti-virus industry) define them this way: oligomorphic - decryptor with few variable elements, which does not affect the size or shape of the code.  It means that the variable elements are usually fixed-size instructions, but it can also apply to the register initialization.\n </p>\n <h1>\n  Oligomorphic example\n </h1>\n <pre><code>std ;fake, might be replaced by cld / nop / xchg ax, cx / ...\nmov cx, size\nmov ax, ax ;fake, might be replaced by mov bx, bx / or cx, cx / ...\nmov si, decrypt_src\ncld ;fake\nmov di, decrypt_dst\nor ax, ax ;fake\nmov bl, key\nand bp, bp ;fake\ndecrypt:\nxor [di], bl\nxchg dx, ax ;fake\ninc di\ncld ;fake\nloop decrypt\n</code></pre>\n <p>\n  In this case, the\n  <code>\n   di\n  </code>\n  register could be exchanged with\n  <code>\n   si\n  </code>\n  , for example.  Very simple replacement.\n </p>\n <h1>\n  Polymorphic\n </h1>\n <p>\n  decryptor with potentially highly variable elements, which does affect the size and/or shape of the code.  It means that all kinds of changes can be applied, including subroutine creation, large blocks of garbage instructions, code \"islands\", or even algorithmic register initialisation (example\n  <a href=\"http://pferrie.host22.com/papers/bounds.pdf\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  ).\n </p>\n <h1>\n  Metamorphic\n </h1>\n <p>\n  highly variable elements are applied directly to the body.  There is generally no decryptor in this case.  The same techniques for polymorphism are applied to the code itself.  The most famous example of this is the Simile virus from 2002 (details\n  <a href=\"http://pferrie.host22.com/papers/simile.pdf\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  ).  There's a detailed paper on the subject with actual examples\n  <a href=\"http://pferrie.host22.com/papers/metamorp.pdf\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  )\n </p>\n</div>\n</body></html>",
            "votes": "7",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <ul>\n  <li>\n   polymorphic code (the generic term) different (different encryption key) code but same result\n  </li>\n  <li>\n   <p>\n    oligomorphic code: pattern-based polymorphism\n   </p>\n   <ul>\n    <li>\n     <a href=\"http://corkami.blogspot.de/2010/01/between-hammer-and-anvil.html\" rel=\"nofollow\">\n      example\n     </a>\n     :\n    </li>\n   </ul>\n   <p>\n    2 different executions of some oligomorphic code:\n   </p>\n   <pre><code>MOV ECX,FC07379C    PUSH 40\nXOR ECX,FC0737DC    PUSH Tada\nPUSH ECX            NOP\nNOP                 PUSH Helloworld\nPUSH Tada           PUSH 0\nNOP                 NOP\nMOV ECX,F8477840    CALL MessageBoxA\nXOR ECX,F80779BC    MOV ECX,0A2EF248\nPUSH ECX            XOR ECX,0A2EF248\nNOP                 PUSH ECX\nPUSH 0              CALL ExitProcess\nCALL MessageBoxA\nPUSH 0\nPUSH 00400136\nPUSH ExitProcess\nCALL $ + 5\nRETN\n</code></pre>\n  </li>\n  <li>\n   <a href=\"http://en.wikipedia.org/wiki/Metamorphic_code\" rel=\"nofollow\">\n    metamorphic\n   </a>\n   code: polymorphism with auto-mutation - the result is slightly different\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "5",
            "user": "Ange",
            "time": "Apr 10, 2013 at 19:02",
            "is_accepted": false,
            "comments": []
        }
    ]
}