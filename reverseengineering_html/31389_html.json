{
    "title": "What computer components improve the speed of disassembly in IDA Pro and plugins like BinDiff?",
    "link": "https://reverseengineering.stackexchange.com/questions/31389/what-computer-components-improve-the-speed-of-disassembly-in-ida-pro-and-plugins",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I’m disassembling binaries in\n  <strong>\n   IDA Pro\n  </strong>\n  .\n </p>\n <ul>\n  <li>\n   It usually takes\n   <strong>\n    15+ minutes\n   </strong>\n   just to pre-process/open one binary,\n  </li>\n  <li>\n   Then another\n   <strong>\n    20-30 min\n   </strong>\n   before IDA is fully done disassembling and finally becomes idle.\n  </li>\n  <li>\n   Another\n   <strong>\n    10+ mins\n   </strong>\n   to search for all string references.\n  </li>\n  <li>\n   Further, something like\n   <strong>\n    BinDiff\n   </strong>\n   usually takes\n   <strong>\n    50-60+ mins\n   </strong>\n   each time I run it when comparing 2 disassembled .i64 files.\n  </li>\n </ul>\n <p>\n  What computer components are most important in these processes? Is it the CPU, RAM, storage/SSD, GPU, or some combo of those?\n </p>\n <p>\n  I have an i7-9750H (2.60GHz, up to 4.50GHz with Turbo Boost, 6 Cores, 12MB Cache), 16 GB 2666MHz DDR4, an M.2 PCIe-NVMe SSD, and NVIDIA GeForce GTX 1650 Max-Q 4GB.\n </p>\n <p>\n  I saw a similar question here (\n  <a href=\"https://reverseengineering.stackexchange.com/questions/14053/is-there-a-way-to-improve-disassembler-speed\">\n   Is there a way to improve disassembler speed?\n  </a>\n  ), but I believe this is not a duplicate question because my binaries are much smaller and I’m still having these massive time delays. I’m wondering if any of these specific components could be holding me back and which would produce the highest throughout difference with regard to upgrading. Is it RAM size, RAM clock, CPU clock speed, CPU core count, CPU thread count, SSD read, write speed, or something else?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "348",
    "tags": [
        "ida",
        "disassembly",
        "ida-plugin"
    ],
    "user": "Jacob Wheeler",
    "time": "Jan 17, 2023 at 10:20",
    "comments": [
        {
            "user": "Rolf Rolles",
            "text": "<html><body><span class=\"comment-copy\">\n How big are these binaries? (Disk size and number of functions are the metrics I'm most interested in; you can find the latter in the functions window,\n <code>\n  Shift-F3\n </code>\n ). How big is the address space for these binaries? IDA doesn't report this directly, but you can compute it by pressing\n <code>\n  CTRL-S\n </code>\n to bring up the Segments window, and then subtracting the final\n <code>\n  End\n </code>\n value by the first\n <code>\n  Start\n </code>\n value.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "w s",
            "text": "<html><body><span class=\"comment-copy\">\n Which OS are you using? If it is Windows of any kind, did you try to disable antivirus software?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n ... and if Linux, are you running IDA natively. While I haven't had\n <i>\n  this magnitude\n </i>\n of a performance impact, there could be some from running IDA in Wine. And if on Windows you may want to check for other resource hogs (MS Teams and other Electron-based apps are big contenders). Additionally you could use\n <code>\n  Image File Execution Options\n </code>\n to raise or lower CPU and I/O priority by process name (e.g. to favor IDA) or use a solution such as Process Lasso (although I think there is no gratis offer for it).\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}