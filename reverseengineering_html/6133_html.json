{
    "title": "Creating shared object library to switch out loaded methods",
    "link": "https://reverseengineering.stackexchange.com/questions/6133/creating-shared-object-library-to-switch-out-loaded-methods",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Is it possible to create a dynamic library\n  <code>\n   libXXX.so\n  </code>\n  with android ndk that has a function that switches out methods in loaded classes in the dvm and call it from any apk ?\n </p>\n <p>\n  There are functions within\n  <code>\n   libdvm.so\n  </code>\n  to find loaded classes that could be used. Is this not as useful as I think it is or am I missing how difficult it is ?\n </p>\n <p>\n  The only example I found of someone doing this is explained in this blog post:\n </p>\n <ul>\n  <li>\n   <a href=\"http://shadowwhowalks.blogspot.com/2013/02/android-replacing-system-classes.html\" rel=\"nofollow\">\n    Android hacking: replacing system classes methods with your own\n   </a>\n   , by Andrey Petrov.\n  </li>\n </ul>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "78",
    "tags": [
        "c",
        "android",
        "function-hooking"
    ],
    "user": "0x41",
    "time": "Aug 29, 2014 at 6:43",
    "comments": [
        {
            "user": "RoraÎ–",
            "text": "<html><body><span class=\"comment-copy\">\n You're talking about a binary replacement of the library?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}