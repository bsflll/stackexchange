{
    "title": "otool , nm, dsdump and jtool not able to list mach-o binary's symbols",
    "link": "https://reverseengineering.stackexchange.com/questions/25703/otool-nm-dsdump-and-jtool-not-able-to-list-mach-o-binarys-symbols",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have encountered this twice recently where I am trying to list the external symbols for an iOS mach-o binary and none of the tools can provide any output.  The following is an example of the output from jtool:\n </p>\n <pre><code>jtool -S BinaryName -arch arm64\n             U \n             U \n             U \n             U \n             U \n             U \n             U \n             U \n</code></pre>\n <p>\n  This particular binary was a fat binary hence having to pass it the arch but I also tried thinning it and running the command on just the arm64.  The previous binary I had encountered this was not a fat binary though. Unfortunately I can't actually share either of the binaries, which I appreciate makes it harder to answer, as they are from a client.\n </p>\n <p>\n  I thought I had a reasonable understanding of the mach-o format although very inexperienced reversing.\n </p>\n <p>\n  I don't know if this is a trick I'm not aware of, how are these symbols resolved at runtime if they can't be parsed by any of these tools?  Is there a way to \"undo\" this and list the symbols normally without running the binary?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "340",
    "tags": [
        "symbols",
        "mach-o"
    ],
    "user": "Jon",
    "time": "Aug 19, 2020 at 15:34",
    "comments": [
        {
            "user": "BadSugar",
            "text": "<html><body><span class=\"comment-copy\">\n First of all, it's very hard to answer without seeing the binary. Second, it's possible that you didn't thinned the binary correctly, as\n <a href=\"https://stackoverflow.com/a/40997366/12941478\">\n  someone\n </a>\n suggested that only using xcode working.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jon",
            "text": "<html><body><span class=\"comment-copy\">\n Hi @PiPony. Yes I appreciate it is much more difficult without the binary.  Unfortunately this was a client's app that I wasn't able to share, if I come across another instance that I can do though I will provide more details.  Regarding your second point, I had tried with a number of different tools, on the fat and thinned binary, all of which gave the same results.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}