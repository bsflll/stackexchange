{
    "title": "Why does the PowerPC Compiler emit a clclr instruction before calling a function?",
    "link": "https://reverseengineering.stackexchange.com/questions/6299/why-does-the-powerpc-compiler-emit-a-clclr-instruction-before-calling-a-function",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I disassemble my own written code in C to PowerPC assembly, and I can't understand why\n  <code>\n   crclr\n  </code>\n  occurrs before the call to the\n  <code>\n   printf\n  </code>\n  function.\n </p>\n <p>\n  <strong>\n   C code\n  </strong>\n </p>\n <pre><code>int main()\n{\n     int a, b, c;\n     a = 10;\n     b = 2;\n     c = a * b;\n     printf(\"%d\", c);\n     return 0;\n}\n</code></pre>\n <p>\n  <strong>\n   PowerPC assembly code\n  </strong>\n </p>\n <pre><code>stwu r1, -0x10(r1)\nmflr r0\nstw r0, 0x14(r1)\nlis r3, unk_38@h\naddi r3, r3, unk_38@l\nli r4, 0x14\ncrclr 4*cr1+eq\nbl printf\nli r3, 0\nlwz r0, 0x14(r1)\nmtlr r0\naddi r1, r1, 0x10\nblr\n\nunk_38:\n   .byte 0x25 # %\n   .byte 0x64 # d\n</code></pre>\n <p>\n  Could anyone please tell me why?\n </p>\n <p>\n  Thanks in advance :)\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "692",
    "tags": [
        "disassembly",
        "powerpc"
    ],
    "user": "Hossein Mobasher",
    "time": "Sep 24, 2014 at 9:14",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This might be an artifact of compiler optimization. Note the\n  <code>\n   li r4,0x14\n  </code>\n  instruction - the compiler optimizes your\n  <code>\n   2*10\n  </code>\n  calculation and loads the result,\n  <code>\n   20\n  </code>\n  , into\n  <code>\n   r4\n  </code>\n  directly. However, doing the calculation would modify some status bits, which the\n  <code>\n   li\n  </code>\n  doesn't, so the compiler tries to do the same modification using\n  <code>\n   crclr\n  </code>\n  , and the optimizer isn't smart enough to realize that this isn't really neccesary when it precedes a function call.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Guntram Blohm",
            "time": "Sep 24, 2014 at 9:27",
            "is_accepted": false,
            "comments": []
        }
    ]
}