{
    "title": "Getting Memory Map in OllyDbg using OllyScript",
    "link": "https://reverseengineering.stackexchange.com/questions/13953/getting-memory-map-in-ollydbg-using-ollyscript",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Is there any command in OllyScript that can fetch me table shown in Memory Map window of OllyDbg. (Memory window comes up when you click on \"M\" icon.) It shows address, size, Owner, Section, Contains, Type, Access, Initial, and Mapped as. But I only need Address, Size, Owner, contains. So even if I can somehow get these details it would be fine.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "589",
    "tags": [
        "ollydbg",
        "ollyscript"
    ],
    "user": "Shan",
    "time": "Jan 6, 2017 at 10:49",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  if you are comfortable with text parsing\n  \n\n  right_click-> copy to clipboard->wholetable\n  \n\n  paste to foo.txt and print the required columns with awk\n </p>\n <pre><code>awk \"{print $1,$2,$3,$5}\" memor.txt | head -n 6\nMemory map\nAddress Size Owner Contains\n00010000 00010000 > Heap\n00030000 00004000 > Map\n00040000 00002000 > Map\n00050000 00001000 > Priv\n</code></pre>\n <p>\n  update\n </p>\n <p>\n  use windbg !address command with -c \"cmdstr\" option as pasted below\n </p>\n <p>\n  <code>\n   %1 to %7\n  </code>\n  are place holders respectively for\n  \n\n  <code>\n   base,end,size .type , state,protection and usage\n  </code>\n  \n\n  that !address command understand and replaces in the\n  <code>\n   command string\n  </code>\n </p>\n <pre><code>0:000> !address -c:\".printf \\\"%8x\\\\t%8x\\\\t%7\\\\t        %4\\\n\\\" , %1 , %3\"\n       0       10000    Free            \n   10000       10000    Heap            MEM_MAPPED\n   20000       10000    Free            \n   30000        4000    Other           MEM_MAPPED\n   34000        c000    Free            \n   40000        2000    Other           MEM_MAPPED\n   42000        e000    Free            \n   50000        1000    Other           MEM_PRIVATE\n   51000       5f000    Free            \n   b0000       3c000    Stack           MEM_PRIVATE\n   ec000        1000    Stack           MEM_PRIVATE\n   ed000        3000    Stack           MEM_PRIVATE\n   f0000       67000    MappedFile          MEM_MAPPED\n  157000       19000    Free            \n  170000        6000    Heap            MEM_PRIVATE\n  176000       fa000    Heap            MEM_PRIVATE\n  270000      920000    Free            \n  b90000        1000    Image           MEM_IMAGE\n  b91000       53000    Image           MEM_IMAGE\n  be4000        5000    Image           MEM_IMAGE\n  be9000       67000    Image           MEM_IMAGE\n  c50000    6ccc0000    Free            \n6d910000        1000    Image           MEM_IMAGE\n</code></pre>\n</div>\n</body></html>",
            "votes": "0",
            "user": "blabb",
            "time": "Nov 30, 2016 at 6:43",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Shan",
                    "text": "<span class=\"comment-copy\">I have to repeat the procedure many times. So I am looking for a method/tool/automation/anything that can do this automatically. After that I need to take dumps of some sections.  It need not necessarily be Ollydbg. Anything which gives me this mapping and can take required dumps.</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">i updated the answer see</span>",
                    "time": null
                },
                {
                    "user": "Shan",
                    "text": "<span class=\"comment-copy\">Hi, This is quite helpful. Thanks. Now I will find the command to take the dump of sections, and pass the addresses to them. :)</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">If it answered your query maybe you can mark it as such and or upvote so that others who look can find it easily</span>",
                    "time": null
                },
                {
                    "user": "Shan",
                    "text": "<span class=\"comment-copy\">Yes, I did that already. But I am do not have the required reputation points for my upvote to be publicly displayed. :/</span>",
                    "time": null
                }
            ]
        }
    ]
}