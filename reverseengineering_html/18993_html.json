{
    "title": "debugger trap with angr",
    "link": "https://reverseengineering.stackexchange.com/questions/18993/debugger-trap-with-angr",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Let's suppose this (very ugly) c code:\n </p>\n <pre><code>#include <stdio.h>\n#include <string.h>\n#include <signal.h>\n\nchar sav_argv[100];\n\nvoid on_sigtrap(int signo)\n{\n    if (strcmp(sav_argv, \"hello\") == 0)\n    {\n        printf(\"OK!\n\");\n    } else {\n        printf(\"NOK\n\");\n    }\n}\n\nint main(int argc, char *argv[])\n{\n    memset(sav_argv,100,0);\n    memcpy(sav_argv,argv[1],100);\n    signal(SIGTRAP,on_sigtrap);\n    __asm__(\"int3\");\n    return 0;\n}\n</code></pre>\n <p>\n  I have compiled this c program with gcc (linux 64 bits elf).\n </p>\n <p>\n  What i want to do is to solve it with an angr python script.\nIt does work if i remove the debuger trap but it does not work with debuger trap.\n </p>\n <p>\n  Is there a way to make angr work on this c program ?\n </p>\n <p>\n  Thanks\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "490",
    "tags": [
        "anti-debugging",
        "angr"
    ],
    "user": "Bob5421",
    "time": "Aug 6, 2018 at 10:12",
    "comments": [
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n You can use a\n <a href=\"https://docs.angr.io/docs/simprocedures.html\" rel=\"nofollow noreferrer\">\n  hook\n </a>\n on the\n <code>\n  int3\n </code>\n .\n <a href=\"http://angr.io/api-doc/angr.html#angr.project.Project.hook\" rel=\"nofollow noreferrer\">\n  Docs\n </a>\n .\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Bob5421",
            "text": "<html><body><span class=\"comment-copy\">\n Good idea but what should i put in hook function? How can i call handler ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n Look in the Control Flow section. You can put a\n <code>\n  jump(addr)\n </code>\n to transfer control to the handler.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Bob5421",
            "text": "<html><body><span class=\"comment-copy\">\n is it a jump or a call in this case ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n Will likely be a call.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}