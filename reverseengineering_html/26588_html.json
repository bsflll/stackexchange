{
    "title": "Reverse engineer compressed iOS app file",
    "link": "https://reverseengineering.stackexchange.com/questions/26588/reverse-engineer-compressed-ios-app-file",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to find out the compression method used by an iOS app used for music notation to store its files. The files of its OSX counterpart are zipped files. You cannot create files in the iOS app, but you can upload them using the desktop application to the application's cloud server and from there download them to your iOS device for offline viewing. My findings so far:\n </p>\n <ul>\n  <li>\n   The header of the files is\n   <code>\n    58 54 5A 00\n   </code>\n   , which isn't listed in any file signatures table I have searched in\n  </li>\n  <li>\n   The usual suspects, commands\n   <code>\n    file\n   </code>\n   and\n   <code>\n    binwalk\n   </code>\n   , do not identify the format\n  </li>\n  <li>\n   The entropy histogram is flat\n  </li>\n  <li>\n   Each time I download the same file from the server to the iOS device, a file of the exact same size but with different content (apart from the header 58 54 5A 00`) gets saved.\n  </li>\n  <li>\n   Altering hex values\n   <ul>\n    <li>\n     last two bytes: file is read normally by the iOS app\n    </li>\n    <li>\n     third byte from the end: app becomes unresponsive when opening the folder the file is in. Since each file is shown as a thumbnail of the musical score I suspect this byte has something to do with the thumbnail.\n    </li>\n    <li>\n     Any other random byte: thumbnail is shown correctly, app doesn't crash, but a blank page appears when the file is opened\n    </li>\n   </ul>\n  </li>\n </ul>\n <p>\n  The following files are actually all the same file downloaded from the server 4 times.\n </p>\n <ul>\n  <li>\n   <a href=\"https://filebin.net/sjvkyh4b0rhhtu3e/458090245844041-10874673.mscze?t=dyjjgue5\" rel=\"noreferrer\">\n    Version_1\n   </a>\n  </li>\n  <li>\n   <a href=\"https://filebin.net/sjvkyh4b0rhhtu3e/458090245844041-10874673.mscze_2?t=dyjjgue5\" rel=\"noreferrer\">\n    Version_2\n   </a>\n  </li>\n  <li>\n   <a href=\"https://filebin.net/sjvkyh4b0rhhtu3e/458090245844041-10874673.mscze_3?t=dyjjgue5\" rel=\"noreferrer\">\n    Version_3\n   </a>\n  </li>\n  <li>\n   <a href=\"https://filebin.net/sjvkyh4b0rhhtu3e/458090245844041-10874673.mscze_4?t=dyjjgue5\" rel=\"noreferrer\">\n    Version_4\n   </a>\n  </li>\n </ul>\n <strike>\n  I have produced three files, the first contains \"A\", the second \"AA\", the third \"AAA\". The first set of files comes from iOS, the second from OSX.\n  <ul>\n   <li>\n    <a href=\"https://filebin.net/cb71khvjz0f5fdhj/A.mscze?t=pivu15hs\" rel=\"noreferrer\">\n     FileA_iOS\n    </a>\n   </li>\n   <li>\n    <a href=\"https://filebin.net/cb71khvjz0f5fdhj/AA.mscze?t=pivu15hs\" rel=\"noreferrer\">\n     FileAA_iOS\n    </a>\n   </li>\n   <li>\n    <a href=\"https://filebin.net/cb71khvjz0f5fdhj/AAA.mscze?t=pivu15hs\" rel=\"noreferrer\">\n     FileAAA_iOS\n    </a>\n   </li>\n   <li>\n    <a href=\"https://filebin.net/cb71khvjz0f5fdhj/Screenshot_iOS.jpeg?t=pivu15hs\" rel=\"noreferrer\">\n     Screenshot_iOS\n    </a>\n   </li>\n   <li>\n    <a href=\"https://filebin.net/cb71khvjz0f5fdhj/A.mscz?t=pivu15hs\" rel=\"noreferrer\">\n     FileA_OSX\n    </a>\n   </li>\n   <li>\n    <a href=\"https://filebin.net/cb71khvjz0f5fdhj/AA.mscz?t=pivu15hs\" rel=\"noreferrer\">\n     FileAA_OSX\n    </a>\n   </li>\n   <li>\n    <a href=\"https://filebin.net/cb71khvjz0f5fdhj/AAA.mscz?t=pivu15hs\" rel=\"noreferrer\">\n     FileAAA_OSX\n    </a>\n   </li>\n   <li>\n    <a href=\"https://filebin.net/cb71khvjz0f5fdhj/Screenshot_OSX.png?t=pivu15hs\" rel=\"noreferrer\">\n     Screenshot_OSX\n    </a>\n   </li>\n  </ul>\n  <p>\n  </p>\n </strike>\n .\n</div>\n</body></html>",
    "votes": "7",
    "answers": 1,
    "views": "364",
    "tags": [
        "file-format",
        "ios",
        "decompress",
        "unknown-data"
    ],
    "user": "Dimitris",
    "time": "Dec 25, 2020 at 18:14",
    "comments": [
        {
            "user": "pythonpython",
            "text": "<html><body><span class=\"comment-copy\">\n Screen shot of the app where you're inputting the text. 9k for one sentence is pretty big.   Try creating a file with only the letter 'a' as input, and then create another file with 'aa' as the input. How much do the two files differ in size? Then create a file with 'aaa', does it vary from file 'aa' by the same amount?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Dimitris",
            "text": "<html><body><span class=\"comment-copy\">\n I have edited the question with more information and a different set of files with screenshots . All three iOS files are exactly 4400 bytes.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "pythonpython",
            "text": "<html><body><span class=\"comment-copy\">\n If you create another file with only A in it, are the byte values in that file the same as the earlier file with only A in it?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "pythonpython",
            "text": "<html><body><span class=\"comment-copy\">\n First 3 bytes decode to XTZ. Is that meaningful?    The byte value 0x82 (Decimal 130) occurs 16 times in each file.    Can you explain the relation of these files to this app:\n <a href=\"https://apps.apple.com/us/app/musescore-sheet-music/id835731296\" rel=\"nofollow noreferrer\">\n  apps.apple.com/us/app/musescore-sheet-music/id835731296\n </a>\n You are uploading the OSX files into the IOS App and the IOS App stores them in the mscze format?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Dimitris",
            "text": "<html><body><span class=\"comment-copy\">\n - No the byte values are not the same. I guess there is a timestamp in the file saved  - The header XTZ is not meaningful, neither the byte value you mentioned  - It is indeed the musescore app these files belong to  - The desktop application uploads the files to  musescore's servers and from there they are downloaded to the iOS device\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I think these files are encrypted rather than compressed.\n </p>\n <p>\n  I've run\n  <code>\n   file\n  </code>\n  at all offsets from start and found format consistent across the files at the same offset.\n </p>\n <p>\n  The files have only a constant value in the first 4 bytes. The rest is high entropy.\n </p>\n <p>\n  The same content saved at different times produces a different binary file each time.\n </p>\n <p>\n  File sizes are similar in previous instances when content was different in size, indicating padding of some sort.\n </p>\n <p>\n  I think this is may\n  <a href=\"https://developer.apple.com/library/archive/documentation/General/Conceptual/iCloudDesignGuide/Chapters/iCloudFundametals.html\" rel=\"nofollow noreferrer\">\n   how IOS handles file security for some apps\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "pythonpython",
            "time": "Dec 27, 2020 at 20:25",
            "is_accepted": false,
            "comments": []
        }
    ]
}