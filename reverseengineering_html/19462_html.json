{
    "title": "Working with 16bit offsets and segments in Radare2",
    "link": "https://reverseengineering.stackexchange.com/questions/19462/working-with-16bit-offsets-and-segments-in-radare2",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a simple DOS COM program which I want to analyse using Radare2:\n </p>\n <pre><code>  USE16\n  ORG 100h\n\n  mov ax, cs\n  dec ax\n  mov ds, ax\n\n  mov dx, message+10h\n  mov ah, 9\n  int 21h\n  ret\n\nmessage:   db \"Hello there!$\"\n</code></pre>\n <p>\n  (Use\n  <code>\n   yasm\n  </code>\n  or\n  <code>\n   echo \"jMhIjti6HQG0Cc0hw0hlbGxvIHRoZXJlISQ=\" | base64 -d > test.com\n  </code>\n  to compile it to a binary.)\n </p>\n <p>\n  When I load the binary using\n  <code>\n   r2 -b16 test.com\n  </code>\n  radare shows that I'm at\n  <code>\n   0000:0000\n  </code>\n  .\n </p>\n <p>\n  How can I tell radare that the actual program address should be\n  <code>\n   0000:0100\n  </code>\n  ?\n </p>\n <p>\n  Also how can I tell radare that the offset loaded into the\n  <code>\n   dx\n  </code>\n  register points to\n  <code>\n   message\n  </code>\n  ? In other words, can I tell radare that\n  <code>\n   dx\n  </code>\n  is an offset using a segment that starts at\n  <code>\n   0000:0100 - 0x10\n  </code>\n  ?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "radare2",
        "dos"
    ],
    "user": "zxxc",
    "time": "Sep 26, 2018 at 18:15",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can use\n  <code>\n   -m 0x100\n  </code>\n  to load the binary at a specific address, as can be seen in\n  <code>\n   r2 -h\n  </code>\n  output:\n </p>\n <blockquote>\n  <p>\n   -m [addr]    map file at given address (loadaddr)\n  </p>\n </blockquote>\n <p>\n  So you can do something like this:\n </p>\n <pre><code>$ r2 -m 0x100 -b 16 test.com\n\n[0000:0100]> aa\n[x] Analyze all flags starting with sym. and entry0 (aa)\n[0000:0100]> pdf\n╭ (fcn) fcn.00000100 13\n│   fcn.00000100 ();\n│           0000:0100      8cc8           mov ax, cs\n│           0000:0102      48             dec ax\n│           0000:0103      8ed8           mov ds, ax\n│           0000:0105      ba1d01         mov dx, 0x11d                ; 285\n│           0000:0108      b409           mov ah, 9\n│           0000:010a      cd21           int 0x21                     ; '!'\n╰           0000:010c      c3             ret\n</code></pre>\n <p>\n  Regarding your second question, the bytes that interpreted as\n  <code>\n   mov dx, 0x11d\n  </code>\n  are\n  <code>\n   ba1d01\n  </code>\n  . As you can see, 0x01d1 is hard coded so r2 won't add\n  <code>\n   message +\n  </code>\n  to it.\n </p>\n <p>\n  You can create a flag using\n  <code>\n   f str.message 13 @ 0x10d\n  </code>\n  but it would probably not  be helpful in your case.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Megabeets",
            "time": "Sep 26, 2018 at 18:51",
            "is_accepted": true,
            "comments": [
                {
                    "user": "zxxc",
                    "text": "<span class=\"comment-copy\">Thanks. I tried <code>-m</code> before but it felt a bit hacky. I thought there is a way of manually defining sections/segments where I could specify what is the base address of the section and then instruct <code>r2</code> to use that section after <code>0000:0103</code>.</span>",
                    "time": null
                },
                {
                    "user": "zxxc",
                    "text": "<span class=\"comment-copy\">Interestingly, when I do <code>r2 -m 0x110 -b 16 test.com</code>, then <code>f str.message 13 @ 0x11d</code> and then <code>aa</code>, the message will be displayed in the comment and the disassembly becomes <code>mov dx, str.message</code>. Not a solution since code offsets are wrong but it feels so close. :)</span>",
                    "time": null
                },
                {
                    "user": "zxxc",
                    "text": "<span class=\"comment-copy\">Thanks, I accepted the answer since I think you covered everything and nobody seems to know better. Looks like <code>radare2</code> in its current version is not the right tool to disassemble old 16-bit DOS executables.</span>",
                    "time": null
                }
            ]
        }
    ]
}