{
    "title": "Understanding Motorola ColdFire instructions.",
    "link": "https://reverseengineering.stackexchange.com/questions/8263/understanding-motorola-coldfire-instructions",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a coldfire sequence from IDAPro that looks like this:\n </p>\n <pre><code>sub_29be8:\n\nvar_8 = -8\nvar_2 = -2\narg_0 = 8\narg_6 = $E\n\nlink a6, #-4;  \nmove.l a2, -(sp)\nmovea.l arg_0(a6),a2\ntst.w arg_6(a6)\nbne.s loc_29c00\nbset #5, $1e(a2)\nbra.s loc_29c14\n\n....\n</code></pre>\n <p>\n  In the documentation\n  <a href=\"http://www.depeca.uah.es/depeca/repositorio/asignaturas/20602/InstructionSet.pdf\" rel=\"nofollow\">\n   here\n  </a>\n  , I'm having some issues with understanding what exactly the documentation is saying.\n </p>\n <p>\n  <code>\n   LINK Ay,#<displacement> W \nSP – 4→SP; //subtract SP by 4 and set into SP\nAy → (SP); //set address pointed to in Ay and set into value of SP\nSP→Ay, SP + dn → SP  //set SP into Ay, add the offset specified by <displacement> and set into SP\n  </code>\n </p>\n <p>\n  Are ALL of these steps executed for the\n  <code>\n   LINK\n  </code>\n  instruction, or are these the possibilities based on some processor states that I haven't found out about yet?  (This appears to be setting up the stack for a function call.)\n </p>\n <p>\n  The next question I have about the sequence is the second instruction,\n  <code>\n   move.l a2, -(sp)\n  </code>\n </p>\n <p>\n  This appears to be moving a\n  <code>\n   longword\n  </code>\n  from a2 into the stack pointer, HOWEVER the negation looks odd to me.  It appears to be \"move address in a2 into SP and then multiply its value by -1\" but I could also see the parenthesis being used as specifying an order of operations to be applied to the address.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "630",
    "tags": [
        "ida",
        "motorola"
    ],
    "user": "avgvstvs",
    "time": "Feb 17, 2015 at 20:56",
    "comments": [
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n Your second question is explained in (uh) about\n <i>\n  any\n </i>\n 68K documentation: it's just a pre-decrement. If you are familiar with x86 code: it's a push, but to\n <i>\n  any\n </i>\n A-register, and 'you' need to decrement the address yourself, or it'll just store the new value.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "avgvstvs",
            "text": "<html><body><span class=\"comment-copy\">\n @Jongware, I'm using the ColdFire User Manual, and the only reference to \"predecrement\" in the entire 700+ pages was a description of the algorithm used by the MASK instruction.  I had to dig up a different \"programmer's reference\" to get more detail.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "avgvstvs",
            "text": "<html><body><span class=\"comment-copy\">\n Gave me the answer to\n <code>\n  LINK\n </code>\n as well.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Answer to the\n  <code>\n   LINK\n  </code>\n  question was provided on page 119\n  <a href=\"http://www.freescale.com/files/dsp/doc/ref_manual/CFPRM.pdf\" rel=\"nofollow\">\n   here\n  </a>\n  .\n </p>\n <p>\n  Pre/Post decrement operations are described on page 44.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "avgvstvs",
            "time": "Feb 17, 2015 at 21:24",
            "is_accepted": false,
            "comments": []
        }
    ]
}