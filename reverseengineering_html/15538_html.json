{
    "title": "LEA assembly instruction",
    "link": "https://reverseengineering.stackexchange.com/questions/15538/lea-assembly-instruction",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am reading through the '\n  <em>\n   Practical Malware Analysis\n  </em>\n  ' book and got to page 74 which says:\n </p>\n <blockquote>\n  <p>\n   <code>\n    lea ebx, [eax*4+4]\n   </code>\n   is the functional equivalent of\n   <code>\n    ebx = (eax+1)* 5\n   </code>\n   where\n   <code>\n    eax\n   </code>\n   is a number.\n  </p>\n </blockquote>\n <p>\n  As of my understanding,\n  <code>\n   lea ebx, [eax*4 + 4]\n  </code>\n  should multiply\n  <code>\n   eax\n  </code>\n  value by 4, add 4 to it and then store it back in\n  <code>\n   ebx\n  </code>\n  , which is different than\n  <code>\n   (eax+1) * 5\n  </code>\n  .\n </p>\n <p>\n  Is that a typo? Or I got things wrong?\n </p>\n <p>\n  I think it should be:\n  <code>\n   ebx = (eax+1) * 4\n  </code>\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "1k",
    "tags": [
        "disassembly",
        "assembly",
        "x86"
    ],
    "user": "Ahmad Kouraiem",
    "time": "Jun 13, 2017 at 12:30",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This is a typo. The instruction\n  <code>\n   lea ebx,[eax*4+4]\n  </code>\n  will set\n  <code>\n   ebx\n  </code>\n  to\n  <code>\n   4*eax+4\n  </code>\n  or\n  <code>\n   4*(eax+1)\n  </code>\n  .\n </p>\n <p>\n  I believe I found a revision online of that book which has:\n </p>\n <blockquote>\n  <p>\n   For example, it is common to see an instruction such as lea ebx, [eax*5+5], where eax is a number, rather than a memory address. This instruction is the functional equivalent of ebx = (eax+1)*5, ...\n  </p>\n </blockquote>\n <p>\n  so it seems as though it was corrected at some point. Note that, technically,\n  <code>\n   lea ebx, [eax*5+5]\n  </code>\n  is really implemented as\n  <code>\n   lea ebx, [eax*4+eax+5]\n  </code>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "6",
            "user": "cimarron",
            "time": "Jun 13, 2017 at 4:43",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Ahmad Kouraiem",
                    "text": "<span class=\"comment-copy\">The question is:   lea ebx, [eax*4+4] is the same as ebx = (eax+1)*5</span>",
                    "time": null
                }
            ]
        }
    ]
}