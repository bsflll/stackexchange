{
    "title": "Function pointer and symbols in Ghidra",
    "link": "https://reverseengineering.stackexchange.com/questions/30525/function-pointer-and-symbols-in-ghidra",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am using Ghidra and I see that when it uses function pointers it never shows the paraments that are being sent to the function(In IDA pro, it always show the parameters). How can I fix that it will show them ?\n </p>\n <p>\n  As well as, there are many windows function that Ghidra does not recognize them and so it does not show function paraments(I am working on windows machine), even though I download the PDB file for the current file I check (Again, in IDA pro it shows the paraments without any problems), any ideas ?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "987",
    "tags": [
        "windows",
        "ghidra"
    ],
    "user": "rom",
    "time": "Jun 17, 2022 at 12:32",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I think (part of) the problem is that Ghidra doesn't ship with data type libraries for the Windows API by default, while IDA Pro does. You can download the relevant Ghidra DataType archives for example here\n  <a href=\"https://github.com/0x6d696368/ghidra-data/tree/master/typeinfo\" rel=\"nofollow noreferrer\">\n   https://github.com/0x6d696368/ghidra-data/tree/master/typeinfo\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Florian Magin",
            "time": "Jun 18, 2022 at 12:13",
            "is_accepted": false,
            "comments": [
                {
                    "user": "rom",
                    "text": "<span class=\"comment-copy\">Thanks ! @Florian Magin. Do you know how to solve the the function pointer problem ?</span>",
                    "time": null
                },
                {
                    "user": "Florian Magin",
                    "text": "<span class=\"comment-copy\">Did you try the datatype archives? I can imagine that this problem should also disappear if there the signature of some function contains the information that one argument is a function pointer (that itself has a signature again). It's important to note that you need to add the data type archive and then run the full auto analysis (again) so all analysis steps can utilize this information. If the problem is something more concrete, please extend your initial question with details. I am also not familiar with how exactly Ghidra handles PDBs</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@FlorianMagin this would be a great addition for the <a href=\"https://reverseengineering.stackexchange.com/questions/tagged/ghidra\">ghidra</a> <a href=\"https://reverseengineering.stackexchange.com/tags/ghidra/info\">tag wiki</a>. If you have more of these and feel like sharing, please edit them in. Thanks.</span>",
                    "time": null
                }
            ]
        }
    ]
}