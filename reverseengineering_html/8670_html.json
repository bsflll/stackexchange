{
    "title": "Kernel debugging - how to set breakpoint at DriverEntry?",
    "link": "https://reverseengineering.stackexchange.com/questions/8670/kernel-debugging-how-to-set-breakpoint-at-driverentry",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm sorry for my bad English. I'm a beginner in Reverse Engineering. I have a problem like this. I was given two files, one is driver's .inf file and the other is driver's .sys file. My mission is to debug this driver and understand its functionality(driver doesn't have physical device). I use 2 machines, one is the host machine which is actually my real computer and a XP virtual machine(VMware). I also use VirtualKD and Windbg. I want to set breakpoint at its DriverEntry.\n </p>\n <p>\n  When I installed driver, I noticed that it ran automatically right after being installed. So I can't set breakpoint at DriverEntry. I restarted virtual machine and set breakpoint in Windbg with all the following commands:\n  \n\n  bu Driver!DriverEntry (Driver is driver's ClassName, I saw it in .inf file)\n  \n\n  bu Drv!DriverEntry (Drv is its service name when installed)\n  \n\n  bu drv!DriverEntry (drv is sys file name, drv.sys)\n  \n\n  But Windbg didn't catch any breakpoints. I saw Windbg printed out some infos, I don't know whether it made breakpoints could not catch:\n </p>\n <blockquote>\n  <blockquote>\n   <hr/>\n   <p>\n    *\n    * A driver is mapping physical memory 0064F000->006D0FFF\n    * that it does not own.  This can cause internal CPU corruption.\n    * A checked build will stop in the kernel debugger\n    * so this problem can be fully debugged.\n    *\n   </p>\n   <hr/>\n  </blockquote>\n  <p>\n   ERROR: DavReadRegistryValues/RegQueryValueExW(4). WStatus = 5\n  ERROR: DavReadRegistryValues/RegQueryValueExW(5). WStatus = 5\n  ERROR: DavReadRegistryValues/RegQueryValueExW(6). WStatus = 5\n  CodeSet_Init: no ICU\n  watchdog!WdUpdateRecoveryState: Recovery enabled.\n  </p>\n </blockquote>\n <p>\n  \n\n  My second thought was I rolled back my virtual machine and set breakpoints before installing driver. But Windbg said that it could not resolve those breakpoints. And of course it cannot hit any of them.\n  \n\n  \n\n  I really don't know how to set this driver's entry. Please help me. Thank you.\n  \n\n  \n\n  P/S: probably this driver can communicate with other app through pipe. How can I debug it without infecting its communication?\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 3,
    "views": "13k",
    "tags": [
        "debugging",
        "windbg",
        "kernel-mode",
        "virtual-machines",
        "driver"
    ],
    "user": "user1680791",
    "time": "Apr 9, 2015 at 15:20",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can follow the steps in the comments on this site:\n </p>\n <p>\n  <a href=\"http://windbg.info/doc/1-common-cmds.html\" rel=\"nofollow\">\n   http://windbg.info/doc/1-common-cmds.html\n  </a>\n </p>\n <p>\n  This roughly equals to what Igor suggested.\n </p>\n</div>\n</body></html>",
            "votes": "-1",
            "user": "iii",
            "time": "Apr 9, 2015 at 17:43",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user1680791",
                    "text": "<span class=\"comment-copy\">I see that they wrote \"click Arguments and enter the name of the driver in question\". In my case, is that ClassName, sys file name or service name?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  you can try breaking on driver load instead on just the entry:\n </p>\n <pre><code>sxe ld drv.sys\n</code></pre>\n <p>\n  This will stop windbg when the image gets loaded, so you'll be able to set breakpoints using raw addresses if all else fails.\n </p>\n</div>\n</body></html>",
            "votes": "6",
            "user": "Igor Skochinsky",
            "time": "Apr 9, 2015 at 16:47",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user1680791",
                    "text": "<span class=\"comment-copy\">You mean I need to set breakpoint at its actual address in memory, right? But how can I know its raw addresses?</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">Igor, could you please verify whether the <code>.sys</code> is really necessary or even allowed? For the life of me I was unable to recreate it <i>with</i> the <code>.sys</code> extension. Works fine without.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  patch the Address of Entry Point with a\n  <code>\n   (0xcc aka int 3)\n  </code>\n  and load the driver AddrOfEntryPoint  normally points to either DriverEntry or GsDriverEntry\n </p>\n <p>\n  when broken you need to replace 0xcc by original byte and reset eip back by a byte\n </p>\n <pre><code>use eb <address> originalbyte enter \nr eip = <addresss>\n</code></pre>\n <p>\n  here is the entry point of beep.sys which points to Beep!driverEntry\n </p>\n <pre><code>lkd> lm m beep\nstart    end        module name\nf7b0e000 f7b0f080   Beep       (pdb symbols)          f:\\symbols\\beep.pdb\\65DC45B439164E4C9DEFF20E161DC74C1\\beep.pdb\nlkd> ? by(beep+3c) \nEvaluate expression: 208 = 000000d0\nlkd> ? dwo(beep+dwo(beep+3c)+28)\nEvaluate expression: 1644 = 0000066c\nlkd> .printf \"%y\n\" , beep+66c\nBeep!DriverEntry (f7b0e66c)\nlkd>\n</code></pre>\n</div>\n</body></html>",
            "votes": "3",
            "user": "blabb",
            "time": "Apr 9, 2015 at 22:21",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user1680791",
                    "text": "<span class=\"comment-copy\">After changing the byte of Entry point, should I have to restart the virtual machine? As I said, it ran automatically whenever the virtual machine reboot.</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">there are various kinds of start for a driver right from boot start to demand start i cant say what your driver start mode is you have to ascertain it and do appropriate action to reload the driver if it was demand start net stop blah net start blah should unload and reload the dll if it was boot start you can see the current control set registry entry  and modify it to dmand start or use sc.exe to query and modify the config you can reboot from windbg itself with ,reboot command thats a vast area have fun finding out if you patched and you realoaded the driver you will break in debugger</span>",
                    "time": null
                },
                {
                    "user": "AminM",
                    "text": "<span class=\"comment-copy\">@blabb how do i patch the Address of Entry Point ???</span>",
                    "time": null
                }
            ]
        }
    ]
}