{
    "title": "How to interpret this __ctype_b based predicate?",
    "link": "https://reverseengineering.stackexchange.com/questions/31175/how-to-interpret-this-ctype-b-based-predicate",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am getting this simplified function from the decomplication results of Ghidra, and I am having a hard time interpreting what the predicate would evaluate to since I do not have access to\n  <code>\n   __ctype_b\n  </code>\n  structure, in other words, what is this predicate indicating (eg. no blank spaces, digits only, ect...) ?\n </p>\n <pre><code>int myFunc(char myChar) {\n\n    if ((*(unsigned short*)((char)myChar * 2 + __ctype_b) >> 6 & 1) == 0) {\n        return true;\n    } else {\n        return false;\n    }\n\n}\n</code></pre>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "118",
    "tags": [
        "disassembly",
        "decompilation",
        "c",
        "ghidra"
    ],
    "user": "Anis LOUNIS aka AnixPasBesoin",
    "time": "Nov 25, 2022 at 14:04",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <code>\n   _ctype\n  </code>\n  is a common name for an array with flags used for implementing the\n  <code>\n   is...\n  </code>\n  family of C runtime function-like macros from\n  <code>\n   ctype.h\n  </code>\n  (\n  <code>\n   isupper\n  </code>\n  ,\n  <code>\n   islower\n  </code>\n  ,\n  <code>\n   isalpha\n  </code>\n  ,\n  <code>\n   isdigit\n  </code>\n  and so on). For example, see\n  <a href=\"https://github.com/syracuse-mscs-2019/simplescalar/blob/master/glibc-1.09/locale/C-ctype_ct.c\" rel=\"nofollow noreferrer\">\n   this file\n  </a>\n  from early glibc:\n </p>\n <pre><code>CONST unsigned short int __ctype_b_C[] =\n  {\n    0,\n    _IScntrl,\n    _IScntrl,\n    _IScntrl,\n    _IScntrl,\n    _IScntrl,\n    _IScntrl,\n    _IScntrl,\n    _IScntrl,\n    _IScntrl,\n    _IScntrl|_ISspace|_ISblank,\n</code></pre>\n <p>\n  If we assume that __ctype_b is an array of shorts, the function seems to be equivalent to:\n </p>\n <pre><code>return (__ctype_b[myChar]>>6 & 1)==0;\n</code></pre>\n <p>\n  or\n </p>\n <pre><code>return (__ctype_b[myChar]& (1<<6))==0;\n</code></pre>\n <p>\n  If the bits in the table use\n  <a href=\"https://github.com/syracuse-mscs-2019/simplescalar/blob/master/sslittle-na-sstrix/include/ctype.h\" rel=\"nofollow noreferrer\">\n   standard values\n  </a>\n  ,\n  <code>\n   1<<6\n  </code>\n  corresponds to the\n  <code>\n   _ISpunct\n  </code>\n  flag, so the function seems to return\n  <code>\n   !ispunct(myChar)\n  </code>\n  ;\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Nov 25, 2022 at 21:54",
            "is_accepted": true,
            "comments": []
        }
    ]
}