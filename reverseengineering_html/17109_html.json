{
    "title": "Functions without a prologue and epilogue?",
    "link": "https://reverseengineering.stackexchange.com/questions/17109/functions-without-a-prologue-and-epilogue",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I was just wondering what exactly causes a function without a prologue/epilogue to be generated? If a program is compiled with just stdcall/cdecl convention, why is it that there are some calls which lead to a subroutine that doesn't have the typical push ebp -> mov ebp,esp. Are these just sanity checks generated by the compiler? Are these subroutines important? Or is that impossible to say without actually analysing it? For example, would a compiler produce a call to a subroutine which moves one value into eax and then returns or would that be the programmer changing the binary of the executable?\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 2,
    "views": "2k",
    "tags": [
        "functions"
    ],
    "user": "Xymistic",
    "time": "Jan 4, 2018 at 6:44",
    "comments": [
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n Do you know what the purpose is from a prologue/epilogue?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user2073973",
            "text": "<html><body><span class=\"comment-copy\">\n What this prologue code does is save the stack frame address. Later on at the end of the function, in the epilogue code, the stack frame gets restored again. You can disable this behaviour in the compiler flags if you wish.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Ciro Santilli OurBigBook.com",
            "text": "<html><body><span class=\"comment-copy\">\n Related:\n <a href=\"https://stackoverflow.com/questions/43310704/creating-a-c-function-without-compiler-generated-prologue-epilogue-ret-instruc\" title=\"creating a c function without compiler generated prologue epilogue ret instruc\">\n  stackoverflow.com/questions/43310704/…\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The prologue and epilogue are\n  <em>\n   not required\n  </em>\n  by the CPU to execute functions, so most compilers only generate them when necessary, or optimization is not enabled. In particular,\n  <em>\n   leaf\n  </em>\n  functions (those that don't call other functions) do not usually need a prolog (unless required by the ABI) and the compiler may safely omit it.\n </p>\n</div>\n</body></html>",
            "votes": "7",
            "user": "Igor Skochinsky",
            "time": "Jan 5, 2018 at 13:37",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Frame-Pointer Omission compiler option:\n  <a href=\"https://msdn.microsoft.com/en-us/library/2kxx5t2c.aspx\" rel=\"nofollow noreferrer\">\n   https://msdn.microsoft.com/en-us/library/2kxx5t2c.aspx\n  </a>\n </p>\n <p>\n  For gcc see -fomit-frame-pointer\n  <a href=\"https://gcc.gnu.org/onlinedocs/gcc-4.5.2/gcc/Optimize-Options.html\" rel=\"nofollow noreferrer\">\n   https://gcc.gnu.org/onlinedocs/gcc-4.5.2/gcc/Optimize-Options.html\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Anton Kukoba",
            "time": "Jan 5, 2018 at 9:39",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Jongware",
                    "text": "<span class=\"comment-copy\">That is quite specific for Microsoft's compiler – which indicates that without, it will generate a prologue/epilogue <i>even when not needed</i>. I dare say there is another, better reason.</span>",
                    "time": null
                },
                {
                    "user": "Anton Kukoba",
                    "text": "<span class=\"comment-copy\">No, it disables prologue/epilogue generation it /Oy specified. And this is default behavior for the Release build. But you may specify /Oy- if you still want prologues in release code.</span>",
                    "time": null
                }
            ]
        }
    ]
}