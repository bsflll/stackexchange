{
    "title": "App prints debug strings but no OutputDebugString used",
    "link": "https://reverseengineering.stackexchange.com/questions/6473/app-prints-debug-strings-but-no-outputdebugstring-used",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  An application I'm reversing frequently outputs debug strings. Some of them could aid me in locating the code I'm looking for, but somehow, the app doesn't seem the be using OutputDebugString at all (I've used IDA's Imports window, Olly's Search for intermodular calls, and\n  <code>\n   dumpbin /IMPORTS\n  </code>\n  ). The program only imports native Windows DLLs and one custom library which does call the function, but I've checked it and all its debug strings are internal stuff, there's no exported logging function for my exe.\n </p>\n <p>\n  Additionally, the debug strings being printed cannot be found inside the exe (again, tried both Olly and IDA).\n </p>\n <p>\n  Is it possible that the call is somehow hidden by not using WinAPI? Since the program is in no way protected, I find the use of any such techniques highly unlikely, but could that be why I can't find anything using \"ordinary\" methods?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 3,
    "views": "944",
    "tags": [
        "windows",
        "debuggers"
    ],
    "user": "user4520",
    "time": "Oct 15, 2014 at 19:08",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <strong>\n   Ollydbg\n  </strong>\n </p>\n <p>\n  <kbd>\n   Alt\n  </kbd>\n  +\n  <kbd>\n   O\n  </kbd>\n  -> events -> check mark break on debug string on break\n </p>\n <p>\n  Hit\n  <kbd>\n   Alt\n  </kbd>\n  +\n  <kbd>\n   K\n  </kbd>\n  to view call stack\n </p>\n <p>\n  <strong>\n   WinDbg\n  </strong>\n </p>\n <pre><code>sx- -c \"kc\" out\n</code></pre>\n <p>\n  This will print the call stack automatically on each and every DebugString.\n </p>\n <pre><code>0:000> g\n\nThis is from Win32Api\nGoing deeper now\n\nkernel32!RaiseException\nkernel32!OutputDebugStringA\ndbgprints!wmain\ndbgprints!__tmainCRTStartup\nkernel32!BaseProcessStart\nhello from ntdll!DbgPrint \n\n\nntdll!vDbgPrintExWithPrefix\nntdll!DbgPrint\ndbgprints!wmain\ndbgprints!__tmainCRTStartup\nkernel32!BaseProcessStart\n(5d8.950): Unknown exception - code eaceba5e (first chance)\nThis String is from RaiseException argument 1\n</code></pre>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Thomas Weller",
            "time": "Nov 14, 2014 at 1:50",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user4520",
                    "text": "<span class=\"comment-copy\">Found it using <i>only</i> OllyDbg and your method - I guess the \"Accept\" goes to you sir.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Some debuggers can pause the program when it prints a debug message. Then you can go up the stack trace and see whence it is coming.\n </p>\n <p>\n  <img alt=\"enter image description here\" src=\"https://i.sstatic.net/6Z1HG.png\"/>\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Oct 16, 2014 at 10:26",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Set a breakpoint on\n  <code>\n   OutputDebugString()\n  </code>\n  ; when the breakpoint hits, check the callstack to find the source of the call.\n </p>\n <blockquote>\n  <p>\n   I can't, that's the point - it doesn't seem to be called, yet the\n  strings are output.\n  </p>\n </blockquote>\n <p>\n  Then the strings aren't being output by the executable. Attach WinDbg to your system and set breakpoints on\n  <code>\n   nt!DbgPrint\n  </code>\n  and\n  <code>\n   nt!DbgPrintEx\n  </code>\n  ; when the breakpoint hits, check the callstack to find the source of the call.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Jason Geffner",
            "time": "Oct 15, 2014 at 19:19",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user4520",
                    "text": "<span class=\"comment-copy\">I can't, that's the point - it doesn't seem to be called, yet the strings are output.</span>",
                    "time": null
                },
                {
                    "user": "user4520",
                    "text": "<span class=\"comment-copy\">About the edit: that's what I was talking about - thanks :)</span>",
                    "time": null
                }
            ]
        }
    ]
}