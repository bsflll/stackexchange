{
    "title": "automatically find the object \"this\" refers to in js",
    "link": "https://reverseengineering.stackexchange.com/questions/26509/automatically-find-the-object-this-refers-to-in-js",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Im quite new to javascript and sometimes I find it really hard to find what object a keyword 'this' refers to. Is there a code editor that is able to do that for me? Or any other advice that could help me :)\nThanks!\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "91",
    "tags": [
        "javascript"
    ],
    "user": "Hukei",
    "time": "Dec 11, 2020 at 14:44",
    "comments": [
        {
            "user": "pythonpython",
            "text": "<html><body><span class=\"comment-copy\">\n Paste some code you're having trouble with. That will make it easier for people to help you.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "R4444",
            "text": "<html><body><span class=\"comment-copy\">\n I think your are looking for\n <code>\n  alert(this.constructor.name);\n </code>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  There's a\n  <a href=\"https://www.w3schools.com/js/js_this.asp\" rel=\"nofollow noreferrer\">\n   great resource on W3Schools\n  </a>\n  .\n </p>\n <p>\n  In summary:\n </p>\n <p>\n  It (this) has different values depending on where it is used:\n </p>\n <ul>\n  <li>\n   <p>\n    In a method,\n    <strong>\n     this\n    </strong>\n    refers to the owner object.\n   </p>\n  </li>\n  <li>\n   <p>\n    Alone,\n    <strong>\n     this\n    </strong>\n    refers to the global object.\n   </p>\n  </li>\n  <li>\n   <p>\n    In a function,\n    <strong>\n     this\n    </strong>\n    refers to the global object.\n   </p>\n  </li>\n  <li>\n   <p>\n    In a function, in strict mode,\n    <strong>\n     this\n    </strong>\n    is undefined.\n   </p>\n  </li>\n  <li>\n   <p>\n    In an event,\n    <strong>\n     this\n    </strong>\n    refers to the element that received the event.\n   </p>\n  </li>\n  <li>\n   <p>\n    Methods like call(), and apply() can refer\n    <strong>\n     this\n    </strong>\n    to any object.\n   </p>\n  </li>\n </ul>\n <p>\n  Answered with regard to\n  <a href=\"https://stackoverflow.com/questions/3179861/javascript-get-function-body\">\n   getting function name here\n  </a>\n  and with regard to\n  <a href=\"https://stackoverflow.com/questions/2648293/how-to-get-the-function-name-from-within-that-function\">\n   getting function body here\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "pythonpython",
            "time": "Dec 13, 2020 at 1:44",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Hukei",
                    "text": "<span class=\"comment-copy\">Hi, thanks for your answer, but I know how it is used and what i'm looking for is an automatic way to reveal the corresponding object in a long and hard (obfuscated) code. Sorry if I wasn't clear.</span>",
                    "time": null
                },
                {
                    "user": "pythonpython",
                    "text": "<span class=\"comment-copy\">It's evaluated at runtime, so looking at the code won't tell you anything. The code needs to be executed to understand what <b>this</b> means. Functions are mutable in javascript and can be defined (created) at runtime. You can have a function which creates functions through lambdas. To say ' I wan't to know what <b>this</b> means in a program ' is to say ' I want to know how the program is evaluated up to the point where this line of code is called.' The only way to know that is to evaluate the code.</span>",
                    "time": null
                }
            ]
        }
    ]
}