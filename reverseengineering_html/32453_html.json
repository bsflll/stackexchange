{
    "title": "After loading additional files into an IDA database: can I process it, including applying PDB etc?",
    "link": "https://reverseengineering.stackexchange.com/questions/32453/after-loading-additional-files-into-an-ida-database-can-i-process-it-including",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  After loading an additional binary (\n  <code>\n   .dll\n  </code>\n  ) file into an IDA database, is there a way to run it through a similar routine as would happen if the DLL had been loaded standalone?\n </p>\n <p>\n  What I am aiming for is that the main IDB created from an\n  <code>\n   .exe\n  </code>\n  which ordinarily would load said\n  <code>\n   .dll\n  </code>\n  is processed in a way that resolves exports of the DLL and sort of ties them to the imports of the EXE etc. (Not all of the imports are static imports, though!)\n </p>\n <p>\n  Is this at all aided by IDA in some way, or does this require a plugin or scripting?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "95",
    "tags": [
        "ida"
    ],
    "user": "0xC0000022L",
    "time": "Oct 29, 2023 at 21:35",
    "comments": [
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<html><body><span class=\"comment-copy\">\n I believe the best way to accomplish this is by actually using IDA's debugger (as opposed to loading an additional binary) to get it to make references between DLLs and the executable.  This is because that process is typically handled by the loaders via the\n <code>\n  import_module\n </code>\n api (not exposed via IDAPython). I think it is intended to be manually performed by each loader using\n <code>\n  set_import_name\n </code>\n and\n <code>\n  set_import_ordinal\n </code>\n with a netnode (like \"$ imports\"). Also, IDA's SDK includes the pe loader headers which could be reusable.  Perhaps someone else has a better answer, but hopefully this helps.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}