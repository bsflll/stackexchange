{
    "title": "HackRF One - Replay Attack on Garage Door does not work (12 DIP switches)",
    "link": "https://reverseengineering.stackexchange.com/questions/27745/hackrf-one-replay-attack-on-garage-door-does-not-work-12-dip-switches",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <strong>\n   TL;DR solution\n  </strong>\n </p>\n <ul>\n  <li>\n   Setting 4MHz sample rate and 2Mhz bandwidth in the capture tab (according to the Nyquist theorem the sample rate has to be double the bandwidth)\n  </li>\n  <li>\n   Using the length of a DIP switch position in samples as the samples/symbol parameter\n  </li>\n  <li>\n   Using the DC correction filter\n  </li>\n  <li>\n   Using the generator tab to generate a new refined signal like so:\n   <a href=\"https://i.sstatic.net/orW3A.png\" rel=\"nofollow noreferrer\">\n    <img alt=\"enter image description here\" src=\"https://i.sstatic.net/orW3A.png\"/>\n   </a>\n  </li>\n </ul>\n <hr/>\n <p>\n  My colleagues and I have taken on a HackRF project for university, using HackRF One. One of the targets is garage door controllers.\n </p>\n <p>\n  We own two controllers with DIP switches for the\n  <em>\n   same\n  </em>\n  door, one has 10 switches while the other one has 12.\n </p>\n <p>\n  The controller has a PIC16C54 chip, broadcasting at 27.015Mhz.\n </p>\n <p>\n  Using hackrf and Universal Radio Hacker we were able to obtain signals from both controllers (top is 10 switches, bottom is 12):\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/8KBbE.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/8KBbE.png\"/>\n  </a>\n  We can easily recognize that there is a long wait period after every signal. The DIP switches are\n  <code>\n   0000111110\n  </code>\n  and\n  <code>\n   0000111110000\n  </code>\n  on the 10-switch and 12-switch controller respectively.\n </p>\n <p>\n  We were able to notice that the long parts of the signal correspond to 0s and the short bursts (probably including some of the 'silence' after them in order to be the same length) are 1s. At this point I am expecting the signal to  be like this:\n </p>\n <p>\n  <code>\n   0 1111 0 1111 0 1111 0 1111 0 1100 0 1100 0 1100 0 1100 0 1100 0 1111 0 1100 0 1100\n  </code>\n </p>\n <p>\n  where\n  <code>\n   1111\n  </code>\n  is a dip switch set to 0 and\n  <code>\n   1100\n  </code>\n  is a dip switch set to one.\n </p>\n <p>\n  Our efforts to replay the signal for the garage door have been futile, even directly in front of it. We tried to import the data in Audacity and normalize the signal in order to get the most power out of it but Universal Radio Hacker does not import it properly from a RAW 8-bit unsigned PCM 48KHz format (this is the expected format\n  <a href=\"https://ham.stackexchange.com/questions/5450/hackrf-one-expected-hackrf-transfer-t-file-format-and-its-creation\">\n   right\n  </a>\n  ?).\n </p>\n <p>\n  Despite not succeeding in the replay attack with the captured signal from URH without using audacity, the following questions arose:\n </p>\n <ul>\n  <li>\n   Why are there two short burst (1s) instead of the expected zeroes in the end of the signal?\n  </li>\n  <li>\n   The 10 switches controller has a signal without the two zeroes at the start. The garage code should be 10bit then (?)\n  </li>\n  <li>\n   Why does setting the 12 switch controller's last 2 switches to 1 instead of 0 not open the door?\n  </li>\n </ul>\n <p>\n  Are we missing something even more important here?\n </p>\n <p>\n  <strong>\n   Edit:\n  </strong>\n  the door is not rolling code since we are capturing the same signal on every press (and it's a 30 years old door)\n </p>\n <p>\n  <strong>\n   Edit (2):\n  </strong>\n  The signal with autodetect parameters is the following:\n </p>\n <blockquote>\n  <p>\n   11111111111111111111111111111111111111111111\n011101110111011101\n   <strong>\n    1\n   </strong>\n   001001001001\n   <strong>\n    1\n   </strong>\n   0011101\n   <strong>\n    1\n   </strong>\n   00100\n11111111111111111111111111111111111111111111\n011101110111011101_001001001001_0011101_00100\n11111111111111111111111111111111111111111111\n011101110111011101_001001001001_0011101_001(00)\n  </p>\n </blockquote>\n <p>\n  <a href=\"https://i.sstatic.net/rcd9y.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/rcd9y.png\"/>\n  </a>\n </p>\n <p>\n  But I believe 2000 samples/Symbol is better since it yields:\n </p>\n <blockquote>\n  <p>\n   111111111111111111111111111111111110110110110110100100100100100110100100\n111111111111111111111111111111111110110110110110100100100100100110100100\n111111111111111111111111111111111110110110110110100100100100100110100100\n  </p>\n </blockquote>\n <p>\n  The problem is, URH replays samples not bits, so why does the replay not work?\n </p>\n <p>\n  <strong>\n   Edit (3):\n  </strong>\n  I\n  <a href=\"https://www.reddit.com/r/hackrf/comments/lf3ddv/best_antenna_to_use_for_key_fobs_and_garage_doors/\" rel=\"nofollow noreferrer\">\n   read\n  </a>\n  that the antennas that come with HackRF are not useful for transmitting in that frequency (27.015Mhz), is this true?\n </p>\n <p>\n  <strong>\n   Edit (4):\n  </strong>\n  After fiddling around with the URH filters I got some good parameters for the capture of a long press I had named \"repeat\". The same information is repetitively transmitted for the duration of the press.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/NOxaJ.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/NOxaJ.png\"/>\n  </a>\n  which resulted in getting from this:\n  <a href=\"https://i.sstatic.net/YEpGX.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/YEpGX.png\"/>\n  </a>\n  to this:\n  <a href=\"https://i.sstatic.net/ypzw4.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/ypzw4.png\"/>\n  </a>\n </p>\n <p>\n  I have not yet tested the attack. Does the way the signal gets decoded into bits change the way it gets repeated? do the parameters affect repetition too? what about the filters?\n </p>\n <p>\n  Update: Test through the repeat option in Interpretation tab failed (check edit 4).\n </p>\n <p>\n  <strong>\n   Edit (4):\n  </strong>\n  I just realized I can use the Generator tab...\n  <a href=\"https://i.sstatic.net/TdG9L.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/TdG9L.png\"/>\n  </a>\n </p>\n <p>\n  Will test tomorrow and update accordingly!\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/zap9o.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/zap9o.png\"/>\n  </a>\n </p>\n <p>\n  5k samples/symbol gives desired decoding mentioned by @roscoe but doesn't work for generation\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/Gf0BC.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/Gf0BC.png\"/>\n  </a>\n </p>\n <p>\n  <strong>\n   Edit (6):\n  </strong>\n  Setting the\n  <strong>\n   sample rate to 4M and bandwidth to 2M during recording\n  </strong>\n  yielded the following:\n  <a href=\"https://i.sstatic.net/xPcgl.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/xPcgl.png\"/>\n  </a>\n  Autodetect seems to have gotten the right values, samples per symbol was manually set to 4000 since that is the approximate width of a symbol:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/yh4CW.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/yh4CW.png\"/>\n  </a>\n </p>\n <p>\n  Simply replaying the signal didn't work,\n  <strong>\n   but generating a new signal from the Generator tab with autodetect parameters DID !\n  </strong>\n  <a href=\"https://i.sstatic.net/orW3A.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/orW3A.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "6",
    "answers": 1,
    "views": "2k",
    "tags": [
        "hardware",
        "protocol"
    ],
    "user": "John St",
    "time": "May 31, 2021 at 10:47",
    "comments": [
        {
            "user": "user10216038",
            "text": "<html><body><span class=\"comment-copy\">\n Modern garage door openers use\n <a href=\"https://en.wikipedia.org/wiki/Rolling_code\" rel=\"nofollow noreferrer\">\n  Rolling Code\n </a>\n to prevent replay attacks.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "defalt",
            "text": "<html><body><span class=\"comment-copy\">\n There's not enough information to know what type of encoding digital signal is using. Use preplay attack instead. Jam and capture 1st signal. Release 1st signal while jam & store 2nd signal. Now you have an unused 2nd signal to unlock the door.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "John St",
            "text": "<html><body><span class=\"comment-copy\">\n I'm pretty sure it's the same since we have captured several times and the exact same signal appears\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I believe both keyfobs send the same data which is\n </p>\n <pre><code>1111 0000 0100\n</code></pre>\n <p>\n  Second keyfob is repeating signal 3 times.\n </p>\n <p>\n  DIP encoding to signal would be byte by byte with swapped nibbles.\n </p>\n <pre><code>00001111 10 =>  11 11 00 00 01\n</code></pre>\n <p>\n  <a href=\"https://i.sstatic.net/VNjf3.png\" rel=\"noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/VNjf3.png\"/>\n  </a>\n </p>\n <p>\n  Try to use\n  <strong>\n   Autodetect parameters\n  </strong>\n  in URH.\n </p>\n</div>\n</body></html>",
            "votes": "7",
            "user": "roscoe",
            "time": "May 27, 2021 at 19:14",
            "is_accepted": true,
            "comments": [
                {
                    "user": "John St",
                    "text": "<span class=\"comment-copy\">So the lack of signal does not have to be decoded into 0s? This seems to be right then. Also, any idea why the replay attack is not working? Tried several times with different captures (all of them were the same signal).</span>",
                    "time": null
                },
                {
                    "user": "roscoe",
                    "text": "<span class=\"comment-copy\">No - parameters should not affect how signal is transmitted (however it is important that record parameters should be valid, i.e. number of samples - see: <a href=\"https://en.wikipedia.org/wiki/Nyquist_frequency#:~:text=In%20signal%20processing%2C%20the%20Nyquist,rate%20(samples%20per%20second).\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/…</a>)</span>",
                    "time": null
                },
                {
                    "user": "roscoe",
                    "text": "<span class=\"comment-copy\">Correct. If code is not changing, first try to resend recorded signal. If it works - then try to analyze it.</span>",
                    "time": null
                },
                {
                    "user": "John St",
                    "text": "<span class=\"comment-copy\">IT WORKED!!! simply recording and replaying didn't but generating a clean signal did! Thanks a lot for your help!</span>",
                    "time": null
                },
                {
                    "user": "roscoe",
                    "text": "<span class=\"comment-copy\">You welcome!!!!</span>",
                    "time": null
                }
            ]
        }
    ]
}