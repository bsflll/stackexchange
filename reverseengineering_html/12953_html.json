{
    "title": "is it possible to use ROP without buffer overflow [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/12953/is-it-possible-to-use-rop-without-buffer-overflow",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed\n        </b>\n        . This question needs\n        <a href=\"/help/closed-questions\">\n         details or clarity\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       <b>\n        Want to improve this question?\n       </b>\n       Add details and clarify the problem by\n       <a href=\"/posts/12953/edit\">\n        editing this post\n       </a>\n       .\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2016-07-04 19:20:06Z\">\n        8 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/12953/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  i try to write ROP attack , but it need buffer overflow function. is there any way to write ROP to exploite normal binary.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "470",
    "tags": [
        "disassembly"
    ],
    "user": "RKS",
    "time": "8 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Sure, the only necessary thing here is to control the return address of the current stack-frame and be able to build a '\n  <em>\n   stack-pivot\n  </em>\n  '. Once you have that you can write your ROP approximately anywhere in memory (as long as you can reach it from the return address that you control). For example, you have some attacks that write their ROP in the heap (not in the stack) or in newly allocated memory pages.\n </p>\n <p>\n  So, the usual ways to control the return addresses are:\n </p>\n <ul>\n  <li>\n   Buffer-overflows (but you do not want to use this);\n  </li>\n  <li>\n   Heap-overflows (heap-spray, use after free, ...);\n  </li>\n  <li>\n   Format string bugs.\n  </li>\n </ul>\n <p>\n  There might be others but these are the ones I consider as '\n  <em>\n   classics\n  </em>\n  ' to control return address of a function.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "perror",
            "time": "Jun 29, 2016 at 13:50",
            "is_accepted": false,
            "comments": []
        }
    ]
}