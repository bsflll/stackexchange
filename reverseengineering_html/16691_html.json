{
    "title": "Log EIP while in a certain memory range?",
    "link": "https://reverseengineering.stackexchange.com/questions/16691/log-eip-while-in-a-certain-memory-range",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm looking for a means to log EIP of a process while it is within a certain memory range.  I've dabbled a little bit in x64dbg's logging functionality, but was unsuccessful in getting a memory range conditional working.\n </p>\n <p>\n  Open to ideas.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "510",
    "tags": [
        "debugging",
        "x86",
        "x64dbg"
    ],
    "user": "Mudsy",
    "time": "Nov 2, 2017 at 14:45",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have one solution after mucking around for a while, I'm sure I can find something better, in the meantime however here you go.\n </p>\n <p>\n  Using the 'Memory Map' Tab you can create a memory breakpoint on code sections\n </p>\n <p>\n  Right click on a section->Memory Breakpoint->Execute->Restore\n </p>\n <p>\n  Then you can edit the breakpoint condition to be something like this\n(I am using a 64 bit process)\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/YeemF.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Editing memory execute breakpoints to log EIP/RIP\" src=\"https://i.sstatic.net/YeemF.png\"/>\n  </a>\n </p>\n <p>\n  I just figured out how to reduce the range of this.\n </p>\n <p>\n  You can use Log Condition like this:\n </p>\n <p>\n  <code>\n   00007FF6D2F71000 < rip < 00007FF6D2F72000\n  </code>\n </p>\n <p>\n  which is symbolically\n </p>\n <p>\n  <code>\n   start_address < eip < end_address\n  </code>\n </p>\n <p>\n  or\n </p>\n <p>\n  <code>\n   start_address < rip < end_address\n  </code>\n </p>\n <p>\n  It works pretty well. I'll update if I find any better alternatives\n </p>\n <p>\n  EDIT:\n </p>\n <p>\n  <a href=\"https://x64dbg.readthedocs.io/en/latest/introduction/Expression-functions.html\" rel=\"nofollow noreferrer\">\n   https://x64dbg.readthedocs.io/en/latest/introduction/Expression-functions.html\n  </a>\n  <a href=\"https://x64dbg.readthedocs.io/en/latest/introduction/Expressions.html\" rel=\"nofollow noreferrer\">\n   https://x64dbg.readthedocs.io/en/latest/introduction/Expressions.html\n  </a>\n </p>\n <p>\n  Read some of the docs for the cool stuff you can do\n </p>\n <p>\n  I managed to get it to log only call instructions, and print the address and instruction using\n </p>\n <p>\n  <code>\n   dis.iscall(rip)\n  </code>\n  in Break Condition and\n </p>\n <p>\n  <code>\n   {rip}:{i:rip}\n  </code>\n  in Log Expression\n </p>\n <p>\n  Thanks for asking this question, this is actually really useful stuff I never thought of before.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Samson",
            "time": "Nov 3, 2017 at 0:03",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Mudsy",
                    "text": "<span class=\"comment-copy\">That's exactly what I wanted.  Thanks for the help!</span>",
                    "time": null
                }
            ]
        }
    ]
}