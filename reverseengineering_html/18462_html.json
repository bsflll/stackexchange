{
    "title": "Help me to understand disassembly MFC or Win32",
    "link": "https://reverseengineering.stackexchange.com/questions/18462/help-me-to-understand-disassembly-mfc-or-win32",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to reverse engineer an application. I don't understand is this MFC framework.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/j6vDE.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/j6vDE.jpg\"/>\n  </a>\n </p>\n <p>\n  Should i learn MFC to understand the following code.\nor is it Win32 code developing. But how Win32 works with resource and it's content. \nLike if i want to have an dialog i have to create an dialog in resource section.\nThis is what we learn when we learn MFC framework. \nBut looking at the snap shoot what source code is it ? is it raw source code if so then you how Win32 resource work together.\nCan you give me the guide line what framework and programming tactic used in following disassembly (snap shoot).\n </p>\n <p>\n  ps: Guide suggestion appreciated.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "711",
    "tags": [
        "disassembly",
        "assembly",
        "mfc"
    ],
    "user": "ReverserT",
    "time": "Jun 5, 2018 at 16:42",
    "comments": [
        {
            "user": "NirIzr",
            "text": "<html><body><span class=\"comment-copy\">\n Yes, you should learn about MFC if you would like to reverse engineer MFC applications. Voting to close as off topic because OP clearly did not spend the time to investigate the material he's asking about.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Frankly, both will be necessary and helpful in the long run. If you deal with the Win32 subsystem, knowing about the Win32 API is an excellent preparation for reverse engineering WTL or MFC based applications. Knowing about those frameworks in turn will help you identify patterns and leave the unimportant stuff alone.\n <b>\n  NB:\n </b>\n if I understand you correctly you are trying to gauge if the program uses MFC or pure Win32 based purely on the static imports. That's not possible. You might want to amend your question to include\n <i>\n  actual\n </i>\n bits of disassembly.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  By this screenshot it's not really clear if it's MFC or not, due to MFC can be linked statically. And when MFC is linked statically you won't see any MFC function name in the imports window. Nevertheless, if IDA detects static MFC library it tries to apply MFC signatures msmfc*.sig So you should check the signatures window in IDA too and see if it found anything. Also you may try to apply MFC signatures manually, because IDA might failed to detect it. If applying the signature gave you 200 or more library functions detected, then yes, there's MFC code in the app.\n </p>\n <p>\n  p.s. all the UI frameworks have to use API from user32.dll and gdi32.dll in order to work in Windows. So you'll find the those imports, no matter the UI framework, that was used in the app.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Anton Kukoba",
            "time": "Jun 6, 2018 at 10:27",
            "is_accepted": false,
            "comments": []
        }
    ]
}