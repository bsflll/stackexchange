{
    "title": "Call to variable address",
    "link": "https://reverseengineering.stackexchange.com/questions/2326/call-to-variable-address",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have come across the following instructions:\n </p>\n <pre><code>mov ecx, [ebp + var_4]\nimul ecx, 4\ncall dword_1423d4[ecx]\n</code></pre>\n <p>\n  Can someone explain to me what it possibly means or point me in the right direction? Why is the call made to a variable?\n </p>\n</div>\n</body></html>",
    "votes": "6",
    "answers": 2,
    "views": "226",
    "tags": [
        "disassembly"
    ],
    "user": "Cream Cracker",
    "time": "Jun 25, 2013 at 16:56",
    "comments": [
        {
            "user": "PSS",
            "text": "<html><body><span class=\"comment-copy\">\n Calls function by reference out of an array of pointers?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Cream Cracker",
            "text": "<html><body><span class=\"comment-copy\">\n @PSS what it means?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <code>\n   dword_1423d4\n  </code>\n  is a pointer to a global array of 32-bit function pointers.\n </p>\n <p>\n  <code>\n   var_4\n  </code>\n  is an index into this array.\n </p>\n <p>\n  The\n  <code>\n   call\n  </code>\n  instruction calls the function at index\n  <code>\n   var_4\n  </code>\n  in the\n  <code>\n   dword_1423d4\n  </code>\n  function array.\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "Jason Geffner",
            "time": "Jun 25, 2013 at 16:50",
            "is_accepted": true,
            "comments": [
                {
                    "user": "peter ferrie",
                    "text": "<span class=\"comment-copy\">it's a common representation of a \"switch()\" statement when the values are linear.  The var_4 is the parameter to the switch(), the dword_1423d4 is the table of case handlers.</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">@peterferrie - From my experience, <code>switch</code> statements are typically compiled to use <code>jmp</code>, not <code>call</code>, but I suppose a compiler might choose the latter in some circumstances.</span>",
                    "time": null
                },
                {
                    "user": "QAZ",
                    "text": "<span class=\"comment-copy\">I agree with Jason, it is unlikely (although not guaranteed) to be a switch statement due to the call and no jmp. Possibly a custom function dispatcher or something.</span>",
                    "time": null
                },
                {
                    "user": "Jonathon Reinhart",
                    "text": "<span class=\"comment-copy\">Also agree with @JasonGeffner. I've never seen a <code>switch</code> statement (or anything aside from a real function call, for that matter) on x86 implemented with a <code>call</code> instruction.</span>",
                    "time": null
                },
                {
                    "user": "Jonathon Reinhart",
                    "text": "<span class=\"comment-copy\">By the way @JasonGeffner, I thought your <a href=\"http://www.blackhat.com/html/bh-us-11/training/bh-us-11-training_sl-advmal.html\" rel=\"nofollow noreferrer\">name sounded familiar</a> from BlackHat a couple years back.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  What immediately comes to mind is some type of virtualization layer accessing an IAT or IVT.  I absolutely agree with the previous answer that this is a call to a function vector in an array of function pointers.  I also agree that it does not look like a switch statement.  That's what takes me down the interrupt vector table/address table.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "David Hoelzer",
            "time": "Jul 13, 2013 at 22:01",
            "is_accepted": false,
            "comments": [
                {
                    "user": "asheeshr",
                    "text": "<span class=\"comment-copy\">Would you please add more details into your answer? How is it different from the answer above? At the moment, it reads like a kudos to Jason's answer. If that is what you intended, you can show your agreement with another answer by clicking on the upvote button next to it. Posting a separate answer is not needed.</span>",
                    "time": null
                },
                {
                    "user": "David Hoelzer",
                    "text": "<span class=\"comment-copy\">I must have missed a reference to an interrupt vector or address table in his answer.</span>",
                    "time": null
                }
            ]
        }
    ]
}