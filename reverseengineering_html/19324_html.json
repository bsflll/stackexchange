{
    "title": "How does U-Boot get from this environment to booting Linux?",
    "link": "https://reverseengineering.stackexchange.com/questions/19324/how-does-u-boot-get-from-this-environment-to-booting-linux",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to gain a root access to my ZTE F680 router. I already have a serial connection and able to interrupt the U-Boot autoboot. The problem I'm having is understanding how given the following environment, is U-Boot able to boot Linux whereas when I try to run the same commands in its shell it fails. The environment:\n </p>\n <pre><code>CASset=max\nEMAC=EMAC0\nMACMODE=GMII\nMALLOC_len=5\nMPmode=SMP\namp_enable=no\nautoload=no\nbaudrate=115200\nboot_order=hd_scr hd_img pxe net_img net_scr\nbootargs_dflt=$console $mtdparts $bootargs_root nfsroot=$serverip:$rootpath ip=$ipaddr:$serverip$bootargs_end $mvNetConfig video=dovefb:lcd0:$lcd0_params clcd.lcd0_enable=$lcd0_enable clcd.lcd_panel=$lcd_panel\nbootargs_end=:10.4.50.254:255.255.255.0:AvantaLP:eth0:none\nbootargs_root=root=/dev/nfs rw\nbootcmd=setenv bootargs console=ttyS0,115200 root=/dev/ram0 rw load_ramdisk=1 rdinit=/sbin/init mv_switch_config=none memsize=$(memsize) mem=$(memsize); bootm 0x2000100;\nbootdelay=3\nbootfile=uboot.bin\nbootsize=0x60000\ncacheShare=no\nconsole=console=ttyS0,115200\ndevice_partition=0:1\ndisL2Cache=yes\ndisL2Prefetch=yes\ndisaMvPnp=no\neeeEnable=no\nenaClockGating=no\nenaCpuStream=no\nenaDCPref=yes\nenaFPU=yes\nenaICPref=yes\nenaMonExt=no\nenaWrAllo=no\neth1addr=00:50:43:00:02:02\neth1mtu=1500\neth2addr=00:50:43:00:00:02\neth2mtu=1500\neth3addr=00:50:43:02:00:00\neth3mtu=1500\nethact=egiga0\nethaddr=00:50:43:00:02:02\nethmtu=1500\nethprime=egiga0\nfdt_addr=2040000\nflashsize=134217728\nfullfile=upgrade.bin\nide_path=/\nimage_name=uImage\ninitrd_name=uInitrd\nipaddr=192.168.1.1\nkernel_addr_r=2080000\nkernelsize=0x16000000\nlcd0_enable=0\nlcd0_params=640x480-16@60\nlcd_panel=0\nlinuzfile=vmlinuz.bin\nloadaddr=0x02000000\nloads_echo=0\nmemsize=253M\nmtddevname=boot\nmtddevnum=0\nmtdids=nand0=mvebu-nand\nmtdparts=mtdparts=mvebu-nand:1536k@0(boot),512k(env),20m(kernel0),20m(kernel1),6m(others),4m(parameter),8m(usercfg),4m(middleware),4m(wlan)\nmvNetConfig=mv_switch_config=none\nmv_pon_addr=00:50:43:02:00:00\nnandEcc=1bit\nnand_erasesize=20000\nnand_oobsize=40\nnand_writesize=800\nnetbsd_en=no\nnetdev=mii0\nnetmask=255.255.255.0\nnetretry=no\npartition=nand0,0\npcieTune=no\npexMode=RC\npxe_files_load=:default.arm-armadaxp-db:default.arm-armadaxp:default.arm\npxefile_addr_r=3100000\nramdisk_addr_r=2880000\nrcvr_image=rootfs.squashfs.rcvr.img\nrootfile=rootfs.img\nrootpath=/srv/nfs/\nsata_delay_reset=0\nsata_dma_mode=yes\nscript_addr_r=3000000\nscript_name=boot.scr\nserverip=192.168.1.100\nsetL2CacheWT=no\nsilent=0\nstandalone=fsload 0x2000000 $image_name;setenv bootargs $console $mtdparts root=/dev/mtdblock0 rw ip=$ipaddr:$serverip$bootargs_end; bootm 0x2000000;\nstderr=serial\nstdin=serial\nstdout=serial\nversioninfo=U-Boot V2.0.10T5 0x1600000 0x1 0x82 0x87\nvxworks_en=no\nyuk_ethaddr=00:00:00:EE:51:81\n\nEnvironment size: 2586/131068 bytes\n</code></pre>\n <p>\n  From what I gatered, the\n  <a href=\"https://github.com/umiddelb/armhf/wiki/Get-more-out-of-%22Das-U-Boot%22#stage-2-u-boot\" rel=\"nofollow noreferrer\">\n   stage 2\n  </a>\n  should load the\n  <code>\n   boot.scr\n  </code>\n  script and then execute\n  <code>\n   bootcmd\n  </code>\n  . But trying to do this in shell fails. Trying to run\n  <code>\n   boot.scr\n  </code>\n  claims there's no valid image at this address and loading it with\n  <code>\n   fsload\n  </code>\n  fails with:\n </p>\n <pre><code>### JFFS2 loading 'boot.scr' to 0x3000000\nScanning JFFS2 FS:  done.\nfind_inode failed for name=boot.scr\nload: Failed to find inode\n</code></pre>\n <p>\n  The partition table does exist:\n </p>\n <pre><code>=> mtdparts\nmtdparts\n\ndevice nand0 <mvebu-nand>, # parts = 9\n #: name        size        offset      mask_flags\n 0: boot                0x000000180000      0x000000000000      0\n 1: env                 0x000000080000      0x000000180000      0\n 2: kernel0             0x000001400000      0x000000200000      0\n 3: kernel1             0x000001400000      0x000001600000      0\n 4: others              0x000000600000      0x000002a00000      0\n 5: parameter           0x000000400000      0x000003000000      0\n 6: usercfg             0x000000800000      0x000003400000      0\n 7: middleware          0x000000400000      0x000003c00000      0\n 8: wlan                0x000000400000      0x000004000000      0\n</code></pre>\n <p>\n  but listing any of them with\n  <code>\n   ls\n  </code>\n  gives no results:\n </p>\n <pre><code>=> ls\nScanning JFFS2 FS:  done.\n</code></pre>\n <p>\n  I'm wondering if maybe U-Boot has been compiled without some commands (i.e.\n  <code>\n   fdt\n  </code>\n  command is missing) or some hardcoded boot sequence? If I don't interrupt the autoboot it looks like this:\n </p>\n <pre><code>Hit any key to stop autoboot:  0\nflash block_size is 0x20000\nflash size(search addredd) is 0x8000000\nsearch.c,372,do_search: search->result[index].entry = 0x200100\nsearch.c,372,do_search: search->result[index].entry = 0x1600100\ndo_search ending\ndo_startup() start\nselect=0x1\nsearch->result[select].entry=1600100\nsearch->result[1].entry = 0x1600100\ndo_startup() ending\ndo_settings() start\ndo_setting versioninfo\nbtNumbers is V2.0.10T5\n## Booting kernel from Legacy Image at 02000100 ...\n   Image Name:   Linux Kernel Image\n   Created:      2017-10-25   9:10:20 UTC\n   Image Type:   ARM Linux Kernel Image (gzip compressed)\n   Data Size:    15128571 Bytes = 14.4 MiB\n   Load Address: 00008000\n   Entry Point:  00008000\n   Verifying Checksum ... OK\n   Uncompressing Kernel Image ... OK\n|-->setup versioninfo tag...versioninfo is U-Boot V2.0.10T5 0x1600000 0x1 0x82 0x87\n\nStarting kernel ...\n</code></pre>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "832",
    "tags": [
        "embedded"
    ],
    "user": "suda",
    "time": "Sep 12, 2018 at 22:15",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Almost two years later I had to do it again and this time I documented my process!\nLooks like U-Boot has a script (probably custom for ZTE) that scans the NAND memory in search for an image and then loads it in memory. This part is visible in logs here:\n </p>\n <pre><code>search.c,372,do_search: search->result[index].entry = 0x200100\nsearch.c,372,do_search: search->result[index].entry = 0x1600100\ndo_search ending\ndo_startup() start\nselect=0x1\nsearch->result[select].entry=1600100\nsearch->result[1].entry = 0x1600100\ndo_startup() ending\n</code></pre>\n <p>\n  I'm not sure how I can call this script but I managed to load the image manually. First I took note of the addresses: image in flash:\n </p>\n <pre><code>search->result[select].entry=1600100\n</code></pre>\n <p>\n  and memory where it's jumped to:\n </p>\n <pre><code>## Booting kernel from Legacy Image at 02000100 ...\n</code></pre>\n <p>\n  As loading has to be aligned with the page, I ended up loading from\n  <code>\n   0x1600000\n  </code>\n  into\n  <code>\n   0x2000000\n  </code>\n  . Only missing part was the size for the\n  <a href=\"https://www.denx.de/wiki/view/DULG/UBootCmdGroupNand\" rel=\"nofollow noreferrer\">\n   <code>\n    nand load\n   </code>\n  </a>\n  command but I assumed the whole partition would be enough so I just took the value from\n  <code>\n   mtdparts\n  </code>\n  command and ended up with:\n </p>\n <pre><code>> nand read 0x2000000 0x1600000 0x1400000\n</code></pre>\n <p>\n  Now with the image loaded I could just\n  <code>\n   run bootcmd\n  </code>\n  but I wanted to gain root access so I made a small tweak to the\n  <code>\n   bootargs\n  </code>\n  by adding\n  <code>\n   single\n  </code>\n  to boot it in single user mode:\n </p>\n <pre><code>> setenv bootargs console=ttyS0,115200 root=/dev/ram0 rw load_ramdisk=1 rdinit=/sbin/init mv_switch_config=none memsize=$(memsize) mem=$(memsize) single\n> bootm 0x2000100\n</code></pre>\n <p>\n  I hope this answer is useful for the two people who upvoted this question and for any\n  <a href=\"https://xkcd.com/979/\" rel=\"nofollow noreferrer\">\n   future visitor\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "suda",
            "time": "Sep 17, 2020 at 21:34",
            "is_accepted": true,
            "comments": []
        }
    ]
}