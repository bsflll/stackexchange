{
    "title": "How should I name static functions in IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/17503/how-should-i-name-static-functions-in-ida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In C a static function is scoped to a source file so you can have multiple static functions with the same name as long as they are in different files.\n </p>\n <p>\n  Does IDA have a way to express this or do I have to add a prefix to names myself? I know I can mark functions as being static and associate a sourcefile with a range (using\n  <code>\n   add_sourcefile\n  </code>\n  ) but this doesn't seem to resolve naming conflicts.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "323",
    "tags": [
        "ida"
    ],
    "user": "ChrisD",
    "time": "Feb 20, 2018 at 12:27",
    "comments": [
        {
            "user": "w s",
            "text": "<html><body><span class=\"comment-copy\">\n Are you working with an executable with debug information ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "ChrisD",
            "text": "<html><body><span class=\"comment-copy\">\n @ws yes but the debug information is limited and in a weird format so I had to write a script to extract the info.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If I am understanding you correctly, what you're looking for is this IDA plugin...\n </p>\n <pre><code>for api_row in api_matrix:\n    l = api_row[0]\n    print l\n    apis = api_row[1:]\n    for api in apis:\n        ref_addrs = CodeRefsTo(LocByName(api),0)\n        for ref in ref_addrs:\n            func_addr = LocByName(GetFunctionName(ref))\n            func_name = GetFunctionName(ref)\n            if l not in func_name:\n                MakeNameEx(func_addr , l + '_' + func_name , SN_NOWARN)\n\nprint \"complete\"\n</code></pre>\n <p>\n  Credits goes to:\n  <a href=\"http://hooked-on-mnemonics.blogspot.fr/2012/06/automated-generic-function-naming-in.html\" rel=\"nofollow noreferrer\">\n   http://hooked-on-mnemonics.blogspot.fr/2012/06/automated-generic-function-naming-in.html\n  </a>\n </p>\n <p>\n  I recommend reading that article to learn how to use it. ^\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Graham Best",
            "time": "Feb 20, 2018 at 19:17",
            "is_accepted": false,
            "comments": []
        }
    ]
}