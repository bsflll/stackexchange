{
    "title": "Bypass SSL pinning for android application",
    "link": "https://reverseengineering.stackexchange.com/questions/31732/bypass-ssl-pinning-for-android-application",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to analyze the network traffic from an android application for research purpose. I tried few approaches but unable to achieve the results. I am using\n  <a href=\"https://www.genymotion.com\" rel=\"nofollow noreferrer\" title=\"Easy way to install rooted android emulator\">\n   rooted android emulator\n  </a>\n  .\n </p>\n <ol>\n  <li>\n   I tried to setup\n   <a href=\"https://mitmproxy.org\" rel=\"nofollow noreferrer\" title=\"Open source interactive proxy\">\n    MITMproxy\n   </a>\n   and the\n   <a href=\"https://frida.re/docs/android\" rel=\"nofollow noreferrer\" title=\"Dynamic code instrumentation toolkit\">\n    Frida\n   </a>\n   to watch the\nnetwork traffic from app. But unfortunately SSL pinning is not\nallowing me to do so.\n  </li>\n  <li>\n   Tried to use Android 5 and 6 ,but the app was incompatible with older versions of\nOS. So I decompiled the app using\n   <a href=\"https://www.kali.org/tools/apktool/\" rel=\"nofollow noreferrer\" title=\"A tool for reverse engineering Android apps\">\n    apktool\n   </a>\n   and tried change minsdkversion,\ntargetsdkversion in manifest file but was not able to build APK again.\n  </li>\n  <li>\n   I did not found the older version of APK which could have been installed on Android 5.\n  </li>\n  <li>\n   I came to know about the\n   <a href=\"https://play.google.com/store/apps/details?id=com.Xposed_Installer.Apk&hl=en_IN&gl=US\" rel=\"nofollow noreferrer\" title=\"Customize your OS without flashing to custom ROMs or rooting\">\n    Exposed installer\n   </a>\n   which can be use to\nwork around SSL pinning. But unfortunately there portal is not responding to get\nrequired archives.\n  </li>\n </ol>\n <hr/>\n <p>\n  In first approach,I used MITMproxy and Frida. I followed the following steps:\n </p>\n <ol>\n  <li>\n   Did basic setup, installed emulator,\n   <a href=\"https://developer.android.com/studio/command-line/adb\" rel=\"nofollow noreferrer\" title=\"CLI tool to communicate with device\">\n    ADB\n   </a>\n   , Frida, Mitm-proxy,added CA certificate to device and downloaded frida-script.\n  </li>\n </ol>\n <pre class=\"lang-js prettyprint-override\"><code>setTimeout(function(){\n Java.perform(function (){\n     console.log(\"\");\n     console.log(\"[.] Cert Pinning Bypass/Re-Pinning\");\n\n     var CertificateFactory = Java.use(\"java.security.cert.CertificateFactory\");\n     var FileInputStream = Java.use(\"java.io.FileInputStream\");\n     var BufferedInputStream = Java.use(\"java.io.BufferedInputStream\");\n     var X509Certificate = Java.use(\"java.security.cert.X509Certificate\");\n     var KeyStore = Java.use(\"java.security.KeyStore\");\n     var TrustManagerFactory = Java.use(\"javax.net.ssl.TrustManagerFactory\");\n     var SSLContext = Java.use(\"javax.net.ssl.SSLContext\");\n\n     // Load CAs from an InputStream\n     console.log(\"[+] Loading our CA...\")\n     var cf = CertificateFactory.getInstance(\"X.509\");\n     \n     try {\n         var fileInputStream = FileInputStream.$new(\"/data/local/tmp/cert-der.crt\");\n     }\n     catch(err) {\n         console.log(\"[o] \" + err);\n     }\n     \n     var bufferedInputStream = BufferedInputStream.$new(fileInputStream);\n     var ca = cf.generateCertificate(bufferedInputStream);\n     bufferedInputStream.close();\n\n     var certInfo = Java.cast(ca, X509Certificate);\n     console.log(\"[o] Our CA Info: \" + certInfo.getSubjectDN());\n\n     // Create a KeyStore containing our trusted CAs\n     console.log(\"[+] Creating a KeyStore for our CA...\");\n     var keyStoreType = KeyStore.getDefaultType();\n     var keyStore = KeyStore.getInstance(keyStoreType);\n     keyStore.load(null, null);\n     keyStore.setCertificateEntry(\"ca\", ca);\n     \n     // Create a TrustManager that trusts the CAs in our KeyStore\n     console.log(\"[+] Creating a TrustManager that trusts the CA in our KeyStore...\");\n     var tmfAlgorithm = TrustManagerFactory.getDefaultAlgorithm();\n     var tmf = TrustManagerFactory.getInstance(tmfAlgorithm);\n     tmf.init(keyStore);\n     console.log(\"[+] Our TrustManager is ready...\");\n\n     console.log(\"[+] Hijacking SSLContext methods now...\")\n     console.log(\"[-] Waiting for the app to invoke SSLContext.init()...\")\n\n     SSLContext.init.overload(\"[Ljavax.net.ssl.KeyManager;\", \"[Ljavax.net.ssl.TrustManager;\", \"java.security.SecureRandom\").implementation = function(a,b,c) {\n         console.log(\"[o] App invoked javax.net.ssl.SSLContext.init...\");\n         SSLContext.init.overload(\"[Ljavax.net.ssl.KeyManager;\", \"[Ljavax.net.ssl.TrustManager;\", \"java.security.SecureRandom\").call(this, a, tmf.getTrustManagers(), c);\n         console.log(\"[+] SSLContext initialized with our custom TrustManager!\");\n     }\n });\n},0);\n</code></pre>\n <ol start=\"2\">\n  <li>\n   Connected to device using ADB. And found out the arch version of device. To install\ncorrect frida-server.\n  </li>\n </ol>\n <pre class=\"lang-sh prettyprint-override\"><code> adb shell getprop ro.product.cpu.abi\n</code></pre>\n <ol start=\"3\">\n  <li>\n   Pushed required files and CA certificate to the emulator with appropriate permissions.\n  </li>\n </ol>\n <pre class=\"lang-sh prettyprint-override\"><code> $ adb push frida-server /data/local/tmp\n $ adb shell chmod 777 /data/local/tmp/frida-server\n $ adb push cacert.der /data/local/tmp/cert-der.crt\n $ adb push fridascript.js /data/local/tmp\n</code></pre>\n <ol start=\"4\">\n  <li>\n   Started Frida on emulator.\n  </li>\n </ol>\n <pre class=\"lang-sh prettyprint-override\"><code> $ adb shell\n $ su\n $ /data/local/tmp/frida-server &\n</code></pre>\n <ol start=\"5\">\n  <li>\n   Listed and located the application.\n  </li>\n </ol>\n <pre class=\"lang-sh prettyprint-override\"><code>  $ frida-ps -U\n  $ frida-ps -aU | grep -i \"app-name\"\n</code></pre>\n <ol start=\"6\">\n  <li>\n   Hook fridascript.js into target application\n  </li>\n </ol>\n <pre class=\"lang-sh prettyprint-override\"><code> $ frida -U -f com.app-name.android -l ./fridascript.js\n</code></pre>\n <p>\n  Here is output,\n  \n\n </p>\n <pre class=\"lang-sh prettyprint-override\"><code> $  frida -U -f <app-name> -l ./fridascript.js \n     ____\n    / _  |   Frida 16.0.11 - A world-class dynamic instrumentation toolkit\n   | (_| |\n    > _  |   Commands:\n   /_/ |_|       help      -> Displays the help system\n   . . . .       object?   -> Display information about 'object'\n   . . . .       exit/quit -> Exit\n   . . . .\n   . . . .   More info at https://frida.re/docs/home/\n   . . . .\n   . . . .   Connected to Galaxy S4 (id=192.xxx.xx.xxx:5555)\nSpawned `<app-name>`. Resuming main thread!                  \n[Galaxy S4::<app-name> ]->\n[.] Cert Pinning Bypass/Re-Pinning\n[+] Loading our CA...\n[o] Our CA Info: O=mitmproxy, CN=mitmproxy\n[+] Creating a KeyStore for our CA...\n[+] Creating a TrustManager that trusts the CA in our KeyStore...\n[+] Our TrustManager is ready...\n[+] Hijacking SSLContext methods now...\n[-] Waiting for the app to invoke SSLContext.init()...\n</code></pre>\n <p>\n  The Frida keeps waiting for the SSL context. I did clicked buttons on the app to invoke APIs but did not get any response. Could you please help me to watch the network traffic from android application. Really looking forward to hear from you guys.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "589",
    "tags": [
        "android",
        "frida",
        "sniffing",
        "api-reversing",
        "proxy"
    ],
    "user": "suplesh",
    "time": "Apr 3, 2023 at 5:54",
    "comments": [
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n Please do not post terminal output as screen shot that makes it really hard to read. As you already have frida-server running you want to take a look onto the tool objection for the PC side. It includes e.g. a good anti-pinning Frida script. May be it works better than the script you have.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "suplesh",
            "text": "<html><body><span class=\"comment-copy\">\n Hi @Robert thanks for the suggestion. I tried with\n <a href=\"https://github.com/sensepost/objection\" rel=\"nofollow noreferrer\">\n  objection\n </a>\n .\n <code>\n  $ objection -g <app-name com.xx.xx> explore\n </code>\n then\n <code>\n  $ android sslpinning disable\n </code>\n also\n <code>\n  $ android root disable\n </code>\n . Now I can intercept request for login into app but not able log in . It fails with message 'You could not login at this time. please try again' . May be the app have some mechanism to identify such activities. How should I proceed?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n Check the network traffic if the error comes from the server. If not decompile the app and try to understand the reasons why the error is displayed. Depending on how the app has been implemented that can get pretty hard and consume a lot of time even if you are skilled in Android/Java reversing. I hope for you that your \"enemy\" is not too hard...\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Usama Awan",
            "text": "<html><body><span class=\"comment-copy\">\n Can i bypass Facebook ssl pinning using frida?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}