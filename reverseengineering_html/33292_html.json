{
    "title": "Can one binary use both lazy binding and non-lazy binding?",
    "link": "https://reverseengineering.stackexchange.com/questions/33292/can-one-binary-use-both-lazy-binding-and-non-lazy-binding",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I inspected\n  <code>\n   /bin/rm\n  </code>\n  binary on macOS with the next command:\n  <code>\n   otool -l /bin/rm  | grep symbol_ptr -A5\n  </code>\n  and I've got the next output:\n </p>\n <pre class=\"lang-none prettyprint-override\"><code>   segname __DATA\n      addr 0x0000000100004000\n      size 0x0000000000000008\n    offset 16384\n     align 2^3 (8)\n--\n  sectname __la_symbol_ptr\n   segname __DATA\n      addr 0x0000000100004028\n      size 0x0000000000000148\n    offset 16424\n     align 2^3 (8)\n</code></pre>\n <p>\n  I know the following:\n  <code>\n   __nl_symbol_ptr\n  </code>\n  : Non lazy (bind at load) symbol pointer\n  <code>\n   __la_symbol_ptr\n  </code>\n  : Lazy (bind on use) symbol pointer\n </p>\n <p>\n  Does it mean that\n  <code>\n   /bin/rm\n  </code>\n  binary uses both Lazy and Non lazy bindings?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "41",
    "tags": [
        "debugging",
        "binary-analysis",
        "binary",
        "binary-format",
        "macos"
    ],
    "user": "pacman",
    "time": "Oct 28, 2024 at 8:26",
    "comments": [],
    "answers_data": []
}