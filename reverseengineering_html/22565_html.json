{
    "title": "OllyDbg: Constant does not fit into operand",
    "link": "https://reverseengineering.stackexchange.com/questions/22565/ollydbg-constant-does-not-fit-into-operand",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to assemble this instruction:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/l2Fy4.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/l2Fy4.png\"/>\n  </a>\n </p>\n <p>\n  I'm not being able to do it..\n </p>\n <p>\n  When I test with MOV AX,55000 I get this error:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/6K4dR.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/6K4dR.png\"/>\n  </a>\n </p>\n <p>\n  I tested before in Cheat Engine, and this is working as AOB injection: MOV AX,#55000\n </p>\n <p>\n  So if I test with the same syntax, ollydbg can't recognize it:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/lwqIz.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/lwqIz.png\"/>\n  </a>\n </p>\n <p>\n  I don't know how to assemble that instruction correctly:\n </p>\n <p>\n  MOV AX,55000 instead of MOV AX,WORD PTR DS:[EBX+A4]\n </p>\n <p>\n  In Cheat Engine it's working perfectly.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "81",
    "tags": [
        "assembly",
        "ollydbg"
    ],
    "user": "kuhi",
    "time": "Jun 17, 2020 at 9:54",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  OllyDbg is interpreting numbers as hex by default. But\n  <code>\n   0x55000\n  </code>\n  is larger than\n  <code>\n   0xFFFF\n  </code>\n  so it cannot be stored in a 16bit register, which\n  <code>\n   ax\n  </code>\n  is, hence it complains.\n </p>\n <p>\n  If you meant the decimal number 55000, I think you can enter it as \"55000.\" with the trailing dot. If that doesn't work enter the number as hex:\n </p>\n <pre><code>mov ax, 0D6D8\n</code></pre>\n <p>\n  The leading 0 is necessary otherwise the first character would be a letter and OllyDbg would not recognize it as a number.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Johann Aydinbas",
            "time": "Nov 18, 2019 at 3:02",
            "is_accepted": true,
            "comments": [
                {
                    "user": "kuhi",
                    "text": "<span class=\"comment-copy\">thank you :) both options worked</span>",
                    "time": null
                }
            ]
        }
    ]
}