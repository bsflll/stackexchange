{
    "title": "Is there an equivalent of 'Run trace' as in OllyDbg for IDA PRO?",
    "link": "https://reverseengineering.stackexchange.com/questions/2486/is-there-an-equivalent-of-run-trace-as-in-ollydbg-for-ida-pro",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have been looking for the equivalent of the \"Run Trace\" option of OllyDbg in IDA Pro. Can anyone mention if there is one and how to use it ?\n </p>\n</div>\n</body></html>",
    "votes": "14",
    "answers": 1,
    "views": "4k",
    "tags": [
        "ida",
        "ollydbg",
        "ida-plugin"
    ],
    "user": "Higet",
    "time": "Oct 14, 2013 at 8:16",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  IDA Pro offers two tracing options:\n </p>\n <ol>\n  <li>\n   <strong>\n    Instruction tracing\n   </strong>\n   <kbd>\n    Debugger->Tracing->Instruction Tracing\n   </kbd>\n   It is very slow tracing process, since IDA monitors registers and has to record the address, the instruction, and changes values of registers, that were changed by the instruction.\n  </li>\n  <li>\n   <strong>\n    Function tracing\n   </strong>\n   <kbd>\n    Debugger->Tracing->Function Tracing\n   </kbd>\n   . It is a subcategory of instruction tracing, where only function calls are logged.\n  </li>\n </ol>\n <p>\n  There are also three types of tracing events: execution traces, write traces, and read/write traces.\n </p>\n <p>\n  A trace in IDA Pro could by replayed by using\n  <em>\n   Trace replayer\n  </em>\n  . It is located within\n  <em>\n   Debuggers\n  </em>\n  submenu. You could switch to\n  <em>\n   Trace-replayer\n  </em>\n  by going to\n  <kbd>\n   Debugger->Switch Debugger...->Trace replayer\n  </kbd>\n </p>\n <p>\n  <img alt=\"enter image description here\" src=\"https://i.sstatic.net/0Hbix.png\"/>\n </p>\n <p>\n  One thing to remember that you have to have trace created before you can replay it. In order to create a trace you will need to do the following:\n </p>\n <ol>\n  <li>\n   Set a breakpoint at the point where you want you trace started.\n  </li>\n  <li>\n   Run the program with the debugger of your choice.\n  </li>\n  <li>\n   Whenever it breaks, select desired tracing\n   <em>\n    style\n   </em>\n   (Instruction or Function)\n  </li>\n  <li>\n   Run as far as necessary. You could set a second breakpoint to stop the trace.\n  </li>\n  <li>\n   You can optionally save the trace.\n  </li>\n  <li>\n   Replay the trace by switching debugger to\n   <em>\n    Trace replayer\n   </em>\n   .\n  </li>\n </ol>\n</div>\n</body></html>",
            "votes": "15",
            "user": "PSS",
            "time": "Jul 16, 2013 at 1:54",
            "is_accepted": true,
            "comments": []
        }
    ]
}