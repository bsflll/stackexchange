{
    "title": "Ida Pro: Get original type of typedef from local types with the IDA C++ API",
    "link": "https://reverseengineering.stackexchange.com/questions/32920/ida-pro-get-original-type-of-typedef-from-local-types-with-the-ida-c-api",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I've been poking around with the IDA C++ SDK and I'm writing something to dump all local types into a json file. I have it all working but typedefs. Example\n  <code>\n   typedef int BOOL\n  </code>\n  I'm trying to get the original type of the typedef all methods I have tried so far only give me\n  <code>\n   BOOL\n  </code>\n  for the typedef name and the original type. I've tried the\n  <code>\n   get_final_type_name\n  </code>\n  function,\n  <code>\n   get_realtype(true)\n  </code>\n  which caused crashes and some others which gave the same result as\n  <code>\n   get_final_type_name\n  </code>\n  . Is there an easy way to do this?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "64",
    "tags": [
        "c++",
        "idapro-sdk"
    ],
    "user": "Duckos Mods",
    "time": "Apr 26, 2024 at 21:07",
    "comments": [
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<html><body><span class=\"comment-copy\">\n In Python, at least, you'll need to use\n <code>\n  get_numbered_type\n </code>\n or\n <code>\n  get_named_type\n </code>\n . That'll get you the fields that you can use with\n <code>\n  tinfo_t.deserialize\n </code>\n . If you already have the \"typeref\" that you want as a\n <code>\n  tinfo_t\n </code>\n , you'll need to distinguish whether it's a named-type or ordinal-type and then use\n <code>\n  get_type_name\n </code>\n or\n <code>\n  get_ordinal\n </code>\n (respectively). With that, you can then\n <code>\n  get_numbered_type\n </code>\n or\n <code>\n  get_named_type\n </code>\n . It's also probably worth noting that you can use\n <code>\n  replace_ordinal_typerefs\n </code>\n to replace ordinals in your type with a named type (prolly affecting lookup performance).\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}