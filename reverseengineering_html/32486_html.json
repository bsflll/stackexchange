{
    "title": "how to set flag in windbg",
    "link": "https://reverseengineering.stackexchange.com/questions/32486/how-to-set-flag-in-windbg",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Let's say we have 2 functions funcA and funcB, funcA is the upstream of funcB. I want to view certain values and call stack in funcB only if funcA satisfies certain conditions. I can't achieve this through conditional breakpoint in funcB since I don't know how to access the value I want with registers in funcB. The approach I think of it's add conditional break point both in funcA and funcB. In funcA, I set the flag when certain conditions satisfy. In funcB, I check the flag, print certain values if it's set, and reset the flag. But I don't know how to do this in Windbg. Can I define some variables to hold the flag?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "53",
    "tags": [
        "windbg"
    ],
    "user": "anonymous bear",
    "time": "Nov 10, 2023 at 0:00",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n Set a double conditional like .if (funca.x<=>z) {bu funcb} .else{ bc funcb}\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<html><body><span class=\"comment-copy\">\n You can use the pseudo-registers (\n <code>\n  $t0\n </code>\n through\n <code>\n  $t19\n </code>\n ) to store how you're accessing things. Their state can be saved with the\n <code>\n  .push /r\n </code>\n and\n <code>\n  .pop /r\n </code>\n commands if you need to nest for some reason. If you want to use full names or even store a whole expression to evaluate, you can also use aliases which get pasted into your expressions using\n <code>\n  ${ }\n </code>\n such as\n <code>\n  ${youraliasname}\n </code>\n . To assign an integer to an alias, you'll need to assign it with\n <code>\n  as /x\n </code>\n or you can expand it by assigning to a temporary register. Also, you can use\n <code>\n  ${/d:youraliasname}\n </code>\n in your expression to see if it has been defined.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}