{
    "title": "Reverse engineering TP-Link TD-W8961N",
    "link": "https://reverseengineering.stackexchange.com/questions/13664/reverse-engineering-tp-link-td-w8961n",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  After following the tutorial\n  <a href=\"http://www.devttys0.com/2011/05/reverse-engineering-firmware-linksys-wag120n/\" rel=\"nofollow\">\n   here\n  </a>\n  , I decided I would try and reverse engineer my router's firmware. My router is the TP-Link TD-W8961N and the firmware version is V2.\n </p>\n <p>\n  I have been trying to figure this out for a while now, but have had no luck. The firmware does not contain any obvious filesystem, bootloader or kernel that can be extracted.\n </p>\n <p>\n  From the binwalk analysis, it seems that the router is running ThreadX on MIPS architecture.\n </p>\n <p>\n  Executing\n  <code>\n   binwalk -eM TDW8961N\n  </code>\n  , I get\n </p>\n <pre><code>DECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n63643         0xF89B          ZyXEL rom-0 configuration block, name: \"dbgarea\", compressed size: 0, uncompressed size: 0, data offset from start of block: 16\n63892         0xF994          ZyXEL rom-0 configuration block, name: \"dbgarea\", compressed size: 0, uncompressed size: 0, data offset from start of block: 16\n85043         0x14C33         LZMA compressed data, properties: 0x5D, dictionary size: 8388608 bytes, uncompressed size: 66696 bytes\n118036        0x1CD14         Unix path: /usr/share/tabset/vt100:\\\n118804        0x1D014         ZyXEL rom-0 configuration block, name: \"spt.dat\", compressed size: 0, uncompressed size: 0, data offset from start of block: 16\n118824        0x1D028         ZyXEL rom-0 configuration block, name: \"autoexec.net\", compressed size: 25972, uncompressed size: 11886, data offset from start of block: 16\n128002        0x1F402         GIF image data, version \"89a\", 200 x 50\n136194        0x21402         GIF image data, version \"89a\", 560 x 50\n253333        0x3DD95         Neighborly text, \"neighbor of your ADSL Router that will forward the packet to the destination. On the LAN, the gateway </font>e destination. On the LAN, the gateway </font>\"\n349586        0x55592         Copyright string: \"Copyright (c) 2001 - 2015 TP-LINK TECHNOLOGIES CO., LTD.\"\n386471        0x5E5A7         Copyright string: \"Copyright &copy; 2015 TP-LINK Technologies Co., Ltd. All rights reserved.\"\n386489        0x5E5B9         TP-Link firmware header, firmware version: 17256.26992.22113, image version: \" Co., Ltd. All rights reserved.\", product ID: 0x6E42746E, product version: 1131375727, kernel load address: 0x72002223, kernel entry point: 0x46463939, kernel offset: 4475203, kernel length: 1347765096, rootfs offset: 1768969317, rootfs length: 2020868163, bootloader offset: 1347747908, bootloader length: 1229148245\n806847        0xC4FBF         LZMA compressed data, properties: 0x5D, dictionary size: 8388608 bytes, uncompressed size: 2853276 bytes\n\n\nScan Time:     2016-10-07 22:29:27\nTarget File:   /home/aaron/Desktop/tools/firmware/TD-W8961N/_TD-W8961N-0.extracted/14C33\nMD5 Checksum:  feac8e40efcca119826f811501b36502\nSignatures:    344\n\nDECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n\n\nScan Time:     2016-10-07 22:29:27\nTarget File:   /home/aaron/Desktop/tools/firmware/TD-W8961N/_TD-W8961N-0.extracted/C4FBF\nMD5 Checksum:  78c0c10cba8fba3ce1c194461ac40fa4\nSignatures:    344\n\nDECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n2141288       0x20AC68        Neighborly text, \"neighbor loss) fail\"\n2144380       0x20B87C        ZyXEL rom-0 configuration block, name: \"autoexec.net\", compressed size: 25972, uncompressed size: 11886, data offset from start of block: 8313\n2157896       0x20ED48        Neighborly text, \"neighbordown: can't shutdown OSPF task completely\"\n2168474       0x21169A        ZyXEL rom-0 configuration block, name: \"spt.dat\", compressed size: 769, uncompressed size: 259, data offset from start of block: 28805\n2249704       0x2253E8        HTML document footer\n2250021       0x225525        HTML document header\n2253724       0x22639C        XML document, version: \"1.0\"\n2320029       0x23669D        Base64 standard index table\n2332534       0x239776        ZyXEL rom-0 configuration block, name: \"autoexec.net\", compressed size: 25972, uncompressed size: 11886, data offset from start of block: 131\n2332646       0x2397E6        Copyright string: \"Copyright (c) 1994 - 2004 ZyXEL Communications Corp.\"\n2332699       0x23981B        Copyright string: \"Copyright (c) 2001 - 2006 TrendChip Technologies Corp.\"\n2332754       0x239852        Copyright string: \"Copyright (c) 2001 - 2006 \"\n2333095       0x2399A7        ZyXEL rom-0 configuration block, name: \"dbgarea\", compressed size: 0, uncompressed size: 0, data offset from start of block: 16\n2344978       0x23C812        eCos RTOS string reference: \"ecost\"\n2393676       0x24864C        SHA256 hash constants, big endian\n2395752       0x248E68        Base64 standard index table\n2436753       0x252E91        ZyXEL rom-0 configuration block, name: \"autoexec.net\", compressed size: 25972, uncompressed size: 11886, data offset from start of block: 135\n2454640       0x257470        ZyXEL rom-0 configuration block, name: \"autoexec.net\", compressed size: 25972, uncompressed size: 11886, data offset from start of block: 131\n2495500       0x26140C        Base64 standard index table\n2537620       0x26B894        XML document, version: \"1.0\"\n2544124       0x26D1FC        XML document, version: \"1.0\"\n2545312       0x26D6A0        XML document, version: \"1.0\"\n2546280       0x26DA68        XML document, version: \"1.0\"\n2551100       0x26ED3C        XML document, version: \"1.0\"\n2555276       0x26FD8C        XML document, version: \"1.0\"\n2558548       0x270A54        XML document, version: \"1.0\"\n2563936       0x271F60        XML document, version: \"1.0\"\n2569916       0x2736BC        XML document, version: \"1.0\"\n2572052       0x273F14        XML document, version: \"1.0\"\n2579160       0x275AD8        XML document, version: \"1.0\"\n2595692       0x279B6C        XML document, version: \"1.0\"\n2605172       0x27C074        XML document, version: \"1.0\"\n2613932       0x27E2AC        XML document, version: \"1.0\"\n2615368       0x27E848        XML document, version: \"1.0\"\n2627752       0x2818A8        XML document, version: \"1.0\"\n2648491       0x2869AB        Copyright string: \"copyright\"\n2658067       0x288F13        Copyright string: \"copyright\" >\"\n2759380       0x2A1AD4        CRC32 polynomial table, big endian\n2827145       0x2B2389        Unix path: /wifi_uni_mac/ROM/nic/hal/MT7603/hal_rom.c\n2827593       0x2B2549        Unix path: /wifi_uni_mac/ROM/nic/hal/MT7603/hal_pwr_mgt_rom.c\n2828329       0x2B2829        Unix path: /wifi_uni_mac/mgmt/mt7603/rlm_phy.c\n2828385       0x2B2861        Unix path: /wifi_uni_mac/mgmt/mt7603/rlm_sensor.c\n2852324       0x2B85E4        Copyright string: \"Copyright (c) 1996-2010 Express Logic Inc. * ThreadX MIPS32_34Kx/Green Hills Version G5.4.5.0 SN: 3182-197-0401 *\"\n</code></pre>\n <p>\n  This creates two files\n  <code>\n   14C33\n  </code>\n  which, when running binwalk, gives no results and\n  <code>\n   C4FBF\n  </code>\n  which gives a similar output as\n  <code>\n   binwalk TDW8961N\n  </code>\n  . It also creates lots of xml files which are similar.\n </p>\n <p>\n  I opened the files 14C33 and C4FBF in a hex editor and noticed that the first two bytes were\n  <code>\n   3C 08\n  </code>\n  . Running\n  <code>\n   file\n  </code>\n  on these two files returns\n  \n\n  \n\n  <code>\n   14C33: data\n  </code>\n  \n\n  <code>\n   C4FBF: data\n  </code>\n  \n\n </p>\n <p>\n  I Googled these two bytes and came to\n  <a href=\"https://groups.google.com/forum/#!msg/comp.compression/_y2Wwn_Vq_E/SKOF7iE12PEJ\" rel=\"nofollow\">\n   this\n  </a>\n  page where I found that a zlib stream can start with\n  <code>\n   08 3C\n  </code>\n  , although not common. After reading this, I changed the first two bytes so that they read\n  <code>\n   08 3C\n  </code>\n  and\n  <code>\n   file 14C33\n  </code>\n  returned\n  \n\n  \n\n  <code>\n   14C33: zlib compressed data\n  </code>\n  \n\n  \n\n </p>\n <p>\n  I did the same thing with the file\n  <code>\n   C4FBF\n  </code>\n  and when I try to decompress it, it fails. Using gzip, I get\n  <code>\n   unknown suffix -- ignored\n  </code>\n  . I also tried with uncompress and pigz, but they gave similar errors.\n </p>\n <p>\n  Is there something wrong with the\n  <code>\n   zlib compressed data\n  </code>\n  , is\n  <code>\n   file\n  </code>\n  giving a false positive or is there a custom compression algorithm? Also, I don't understand why there is a reference to both eCos and ThreadX OSes. And for the bootloader and kernel offset, is it the offset when the bootloader and kernel are loaded into memory?\n </p>\n <p>\n  The firmware can be downloaded at tp-link.com/en/download/TD-W8961N_V2.html#Firmware\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 1,
    "views": "6k",
    "tags": [
        "firmware",
        "mips"
    ],
    "user": "Aaron Garton",
    "time": "Oct 7, 2016 at 21:00",
    "comments": [
        {
            "user": "master master",
            "text": "<html><body><span class=\"comment-copy\">\n hi Aaron Garton i have TD-W8961N v2 and i want to edit the firmware if you success in extracting file system of TD-W8961N please send file to me\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I found the answer.\n </p>\n <p>\n  The router runs ZynOS and needed to be extracted using\n  <a href=\"https://github.com/dev-zzo/router-tools\" rel=\"nofollow noreferrer\">\n   router-tools\n  </a>\n </p>\n <p>\n  Once downloaded, I ran the command\n  \n\n </p>\n <p>\n  <code>\n   python zynos.py unpack TDW8961N\n  </code>\n  to unpack the router frimware. All I had to do now was use\n  <code>\n   binwalk -Y file\n  </code>\n  to find out the architecture and then load the files into IDA and disassemble using\n </p>\n <p>\n  <a href=\"https://wiki.openwrt.org/doku.php?id=oldwiki:openwrtdocs:hardware:zyxel:p_335wt\" rel=\"nofollow noreferrer\">\n   https://wiki.openwrt.org/doku.php?id=oldwiki:openwrtdocs:hardware:zyxel:p_335wt\n  </a>\n  to figure out where to start the ROM.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Aaron Garton",
            "time": "Nov 26, 2016 at 18:36",
            "is_accepted": true,
            "comments": []
        }
    ]
}