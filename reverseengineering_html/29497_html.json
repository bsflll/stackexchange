{
    "title": "Decompile a NodeJS compiled program maybe by NEXE",
    "link": "https://reverseengineering.stackexchange.com/questions/29497/decompile-a-nodejs-compiled-program-maybe-by-nexe",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I recently got idiotly scammed one of my discord account but kept the malware in case.\n </p>\n <p>\n  Curious, I would love today to break into the executable to fetch any information about the scammer.\n </p>\n <p>\n  I decompiled the program using IDA, and found out it was a NodeJS program.\nHowever, I still can't find the actual code of the scammer that took my token... I am sure he is calling a webhook, connecting to a bot or something that leave his token in it.\n </p>\n <p>\n  I can see in IDA multiple calls to a folder named\n  <code>\n   .nexe/\n  </code>\n  which looks to me like the name of the compiler used:\n  <a href=\"https://github.com/nexe/nexe\" rel=\"nofollow noreferrer\">\n   nexe\n  </a>\n  .\n </p>\n <p>\n  Does anyone have tips to decompile a NodeJS application? I'm barely new in the reverse engineering, so if anybody could let me tips to decompile it...\n </p>\n <p>\n  I don't know if nexe obfuscates the code, if there is better decompiler apps for NodeJS executable.\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 1,
    "views": "11k",
    "tags": [
        "decompilation",
        "decompile",
        "decompiler"
    ],
    "user": "suiram",
    "time": "Nov 10, 2021 at 20:04",
    "comments": [
        {
            "user": "cloudberry",
            "text": "<html><body><span class=\"comment-copy\">\n I've also been investigating the same thing. Coincidentally, I also got my discord account hacked on November 3 (the same day you posted this question) by a wrapped NodeJS Windows executable. Just to be transparent, the malicious file that I ran was called HerosHour. I ran the\n <code>\n  .exe\n </code>\n through a hex dump and saved just the human-readable ASCII text to a file. This does give you all of the JS code, but it also includes all of the NodeJS framework, as well as any dependencies. It's quite hard to read, but the source is definitely in there. Would you like to collaborate with me?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "John_H_Smith",
            "text": "<html><body><span class=\"comment-copy\">\n Same here - decompiling with Ghidra worked.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "cloudberry",
            "text": "<html><body><span class=\"comment-copy\">\n @John_H_Smith, how's your progress with Ghidra? After digging through the ASCII dump, I may have found out the the Author's first name and the name of his project. Although that doesn't give much information. Some global NPM packages were pointing to files on his Desktop.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user39531",
            "text": "<html><body><span class=\"comment-copy\">\n Has any progress been made on this? I have an incident that matches the same behavior and characteristics described above. Please let me know if I can be of any assistance. Discord: joseph5etr#7719\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "drhayes",
            "text": "<html><body><span class=\"comment-copy\">\n I think I just got hit by something very similar, wrapped NodeJS binary from the account of someone I know. I'm new to reverse engineering too -- I can see the JS code in there via a hex editor but was wondering if there was a more sophisticated way to look at this thing. Ghidra seems promising, just don't know how to use it yet.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Here is the most complete source code of this malware I can find. its malware known as piratestealer:\n  <a href=\"https://github.com/teddybearsz/shitasssrcdonttouchitpleasepleaseplease/tree/ddc994942e2c0a79fc5d5e54d4a0e158fa0e5d51/src/\" rel=\"nofollow noreferrer\">\n   https://github.com/teddybearsz/shitasssrcdonttouchitpleasepleaseplease/tree/ddc994942e2c0a79fc5d5e54d4a0e158fa0e5d51/src/\n  </a>\n </p>\n <p>\n  So in a gist, PirateStealer (written in node.js and compiled with nexe) is an evolution of ksgrabber (written in C#) which was made by Stanley-GF on GitHub\n  <a href=\"https://github.com/masamesa/KSGrabber-MalwareAnalysis\" rel=\"nofollow noreferrer\">\n   https://github.com/masamesa/KSGrabber-MalwareAnalysis\n  </a>\n  (see\n  <a href=\"https://github.com/masamesa/KSGrabber-MalwareAnalysis/issues/1\" rel=\"nofollow noreferrer\">\n   https://github.com/masamesa/KSGrabber-MalwareAnalysis/issues/1\n  </a>\n  )\n </p>\n <p>\n  Take a look at the twitter links here:\n </p>\n <p>\n  <a href=\"https://twitter.com/MasaMesa_/status/1435179217248034819\" rel=\"nofollow noreferrer\">\n   https://twitter.com/MasaMesa_/status/1435179217248034819\n  </a>\n  <a href=\"https://twitter.com/MasaMesa_/status/1469617216261926916\" rel=\"nofollow noreferrer\">\n   https://twitter.com/MasaMesa_/status/1469617216261926916\n  </a>\n  and the flowchart below.\n </p>\n <p>\n  PirateStealer was made by\n  <a href=\"https://github.com/Stanley-GF\" rel=\"nofollow noreferrer\">\n   Stanley-GF\n  </a>\n  ,\n  <a href=\"https://github.com/bytixo\" rel=\"nofollow noreferrer\">\n   bytixo\n  </a>\n  ,\n  <a href=\"https://github.com/Minehacker765\" rel=\"nofollow noreferrer\">\n   Minehacker765\n  </a>\n  , and\n  <a href=\"https://github.com/syndrvme\" rel=\"nofollow noreferrer\">\n   syndrvme\n  </a>\n  on GitHub.\n </p>\n <p>\n  A LOT of the endpoints supporting this were taken down.\n  <a href=\"https://stealer.re/\" rel=\"nofollow noreferrer\">\n   https://stealer.re/\n  </a>\n  seems to be back up after going down for a bit, so they probably have updated their\n  <code>\n   /injection\n  </code>\n  endpoint which loads in JS that gets bundled into discord (and/or betterDIscord)'s\n  <code>\n   .asar\n  </code>\n  file.\n </p>\n <p>\n  I have submitted abuse reports to AWS, an ISP (congent) that had a CIDR block in poland\n  <a href=\"https://bgp.he.net/ip/95.214.54.208\" rel=\"nofollow noreferrer\">\n   https://bgp.he.net/ip/95.214.54.208\n  </a>\n  , that was hosting this file at the path\n  <code>\n   /injection\n  </code>\n  <a href=\"https://gist.github.com/AskAlice/2fe11591adc820d038529e7c0908d0fd\" rel=\"nofollow noreferrer\">\n   https://gist.github.com/AskAlice/2fe11591adc820d038529e7c0908d0fd\n  </a>\n </p>\n <p>\n  A domain name primefa.xyz that was being queried for during runtime which resolved to the IP mentioned above, but is no longer as ICANN put the domain on hold after reports to the .xyz TLD in Las Vegas.\n </p>\n <p>\n  <a href=\"https://github.com/stanley-gf/piratestealer\" rel=\"nofollow noreferrer\">\n   https://github.com/stanley-gf/piratestealer\n  </a>\n </p>\n <p>\n  Stanley leads on more than he puts out. His GitHub profile claims he is 13 and regrets making the malware, but from screenshots obtained by a friend of mine, he was working on getting his endpoints back up when they were taken down due to abuse reports.\n </p>\n <p>\n  On stealer.re you can input a webhook and a\n  <code>\n   .ico\n  </code>\n  file, and it will build you an EXE that you can use.\n </p>\n <p>\n  If you look at the webhooks that the /injection payload sends, and then make a GET request to it without any parameters, it will show you this\n </p>\n <p>\n  <a href=\"https://p9iprsfdr7.execute-api.us-east-2.amazonaws.com/default/EmailChanged\" rel=\"nofollow noreferrer\">\n   https://p9iprsfdr7.execute-api.us-east-2.amazonaws.com/default/EmailChanged\n  </a>\n </p>\n <p>\n  <code>\n   How did you manage to find the url vmro? Join: https://discord.gg/NmatMp9K5V and I gib u party vmro!\n  </code>\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/V45Kj.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/V45Kj.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "MarianD",
            "time": "Dec 15, 2021 at 20:03",
            "is_accepted": false,
            "comments": []
        }
    ]
}