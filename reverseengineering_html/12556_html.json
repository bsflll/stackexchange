{
    "title": "Analyzing an APK without tools [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/12556/analyzing-an-apk-without-tools",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed\n        </b>\n        . This question needs\n        <a href=\"/help/closed-questions\">\n         details or clarity\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       <b>\n        Want to improve this question?\n       </b>\n       Add details and clarify the problem by\n       <a href=\"/posts/12556/edit\">\n        editing this post\n       </a>\n       .\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2016-05-02 11:02:01Z\">\n        8 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/12556/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  I know you can unpack APKs with apktool and the likes, however we're doing an exercise at uni where we're supposed to get some info like permissions declared and permissions used from some APKs without using tools. Not really sure where to start. I'm guessing I'll need to unzip and apply some public-private signing.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "253",
    "tags": [
        "android",
        "apk"
    ],
    "user": "Michiel Ariens",
    "time": "8 years ago",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "<html><body><span class=\"comment-copy\">\n You need to be a bit more specific what your problem is. Yes, an APK is a zip file, so you can unzip it. But isn't\n <code>\n  unzip\n </code>\n a tool as well? No, you don't need to apply any signing as long as you aren't trying to generate a new modified APK. To see permissions, you need to check Android.xml, but inside an APK, this isn't a text XML file, it has a binary encoding. Are you allowed to use a tool to convert that back to readble XML?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Amazing exercise.\n </p>\n <p>\n  Here are the steps you can do broadly:\n </p>\n <ol>\n  <li>\n   Unzip the\n   <code>\n    apk\n   </code>\n   file (APK files are compressed\n   <code>\n    zip\n   </code>\n   files)\n  </li>\n  <li>\n   All the\n   <code>\n    xml\n   </code>\n   files including the\n   <code>\n    AndroidManifest.xml\n   </code>\n   are encoded in a binary format, also better known as\n   <code>\n    AXML\n   </code>\n  </li>\n  <li>\n   Parse the\n   <code>\n    AXML\n   </code>\n   files by writing your own scripts. See examples\n   <a href=\"https://github.com/lunny/axmlParser\" rel=\"nofollow\">\n    AXML Parser in GO\n   </a>\n   and\n   <a href=\"https://github.com/secmobi/android-utils/blob/master/axml/AxmlParser.c\" rel=\"nofollow\">\n    AXML Parser in C\n   </a>\n  </li>\n  <li>\n   you would find\n   <code>\n    classes.dex\n   </code>\n   file which is a\n   <code>\n    DEX\n   </code>\n   file or better known as Dalvik Executable\n  </li>\n  <li>\n   The\n   <a href=\"http://pallergabor.uw.hu/androidblog/dalvik_opcodes.html\" rel=\"nofollow\">\n    Dalvik opcode\n   </a>\n   might come handy, if you can read the hex-version of the dexfile and write your own script\n  </li>\n  <li>\n   If you have installed android sdk properly, there is a tool\n   <code>\n    dexdump\n   </code>\n   which comes by default in it\n  </li>\n  <li>\n   <p>\n    In order to use the tool the following command can help\n   </p>\n   <pre><code>$ dexdump -d classes.dex\n000418: 2b02 0c00 0000               |0000: packed-switch v2,0000000c // +0x0c\n00041e: 12f0                         |0003: const/4 v0, #int -1 // #ff\n000420: 0f00                         |0004: return v0\n000422: 1220                         |0005: const/4 v0, #int 2 // #2\n000424: 28fe                         |0006: goto 0004 // -0002\n000426: 1250                         |0007: const/4 v0, #int 5 // #5\n000428: 28fc                         |0008: goto 0004 // -0004\n00042a: 1260                         |0009: const/4 v0, #int 6 // #6\n00042c: 28fa                         |000a: goto 0004 // -0006\n00042e: 0000                         |000b: nop // spacer\n000430: 0001 0300 faff ffff 0500 ... |000c: packed-switch-data (10 units)\n</code></pre>\n  </li>\n </ol>\n</div>\n</body></html>",
            "votes": "1",
            "user": "perror",
            "time": "Apr 29, 2016 at 11:39",
            "is_accepted": true,
            "comments": []
        }
    ]
}