{
    "title": "How does the OS distinguish between executable types",
    "link": "https://reverseengineering.stackexchange.com/questions/4789/how-does-the-os-distinguish-between-executable-types",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Executable files created through managed framework like .Net have\n  <code>\n   .exe\n  </code>\n  extension whereas application created through languages like C++ also has\n  <code>\n   .exe\n  </code>\n  extension. How does the OS knows whether to run the application through managed framework like .Net or directly ?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "258",
    "tags": [
        "windows",
        "executable"
    ],
    "user": "ZafarYousafi",
    "time": "Jul 26, 2014 at 2:42",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The COM Descriptor Data Directory (DD 14) is used to lookup the COR20 structure. This is how you can tell the difference between a managed executable and a native executable.\n </p>\n <p>\n  See\n  <a href=\"https://reverseengineering.stackexchange.com/questions/1614/determining-if-a-file-is-managed-code-or-not/\">\n   this question\n  </a>\n  for more information. Also see this introduction to the\n  <a href=\"http://www.ntcore.com/files/dotnetformat.htm\" rel=\"nofollow noreferrer\">\n   dotnet file format\n  </a>\n  for an overview.\n </p>\n</div>\n</body></html>",
            "votes": "7",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": true,
            "comments": []
        }
    ]
}