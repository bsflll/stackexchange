{
    "title": "Need help with searching for reference for a string in IDA Pro [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/12456/need-help-with-searching-for-reference-for-a-string-in-ida-pro",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed\n        </b>\n        . This question needs to be more\n        <a href=\"/help/closed-questions\">\n         focused\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       <b>\n        Want to improve this question?\n       </b>\n       Update the question so it focuses on one problem only by\n       <a href=\"/posts/12456/edit\">\n        editing this post\n       </a>\n       .\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2016-04-26 17:24:26Z\">\n        9 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/12456/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  I have a little problem, i have loaded some firmware to IDA and it didn't analyze it correctly so i did located and tagged all the strings manyaly but it didn't helped me to find the references to them in the code.\nHow can i search for references to some memory locations (strings) in IDA ?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "strings"
    ],
    "user": "Igor.N",
    "time": "9 years ago",
    "comments": [
        {
            "user": "tmr232",
            "text": "<html><body><span class=\"comment-copy\">\n Can you provide more information? Perhaps the processor?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "josh",
            "text": "<html><body><span class=\"comment-copy\">\n Your question might be a duplicate. Look here: (\n <a href=\"http://reverseengineering.stackexchange.com/questions/9319/how-do-i-use-ida-for-heap-search-for-specific-types-and-values/9346#9346\" title=\"how do i use ida for heap search for specific types and values\">\n  reverseengineering.stackexchange.com/questions/9319/â€¦\n </a>\n ).\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This is a long shot, but i\n  <em>\n   assume\n  </em>\n  what happened is something like this:\n </p>\n <p>\n  Your firmware does not have any ELF or similar headers (this isn't really a problem, it's expected to be this way), but is supposed to be loaded at a specific location in memory, which is\n  <strong>\n   not\n  </strong>\n  0. Or, maybe it\n  <em>\n   does\n  </em>\n  have some headers, which IDA fails to recognize, so it loads those headers at 0, and the real binary a few bytes behind where it should be.\n </p>\n <p>\n  For the sake of this example, let's assume the firmware is supposed to be loaded at address\n  <code>\n   0x1000\n  </code>\n  , while IDA loaded it at\n  <code>\n   0x0000\n  </code>\n  - you can specify the load address when you first open the binary; if you don't change it, the default is 0.\n </p>\n <p>\n  Now, a string that is supposed to be at address\n  <code>\n   0x1234\n  </code>\n  in the running binary will be located at\n  <code>\n   0x0234\n  </code>\n  in your IDA database. But the processor instruction in your code will still use\n  <code>\n   0x1234\n  </code>\n  . But because IDA doesn't find anything sensible there, it will just assume it's a number, or maybe there is something there, but it won't be your string, so IDA might put a label at that point, but it won't recognize the connection with your string.\n </p>\n <p>\n  So what you really should do is try and find out if a) the firmware has some headers that don't belong to the binary, in which case you should remove them before analyzing, and b) which address the firmware belongs to, and make sure you state that address when analyzing.\n </p>\n <p>\n  I'm afraid your work with locating and tagging the strings manually was in vain; IDA does have commands to relocate a binary and adjust references, but these assume the binary is loaded/analyzed/crossreferenced correctly in the first place. Relocating your binary now won't help you as those crossreferences just aren't there.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Guntram Blohm",
            "time": "Apr 16, 2016 at 21:20",
            "is_accepted": false,
            "comments": [
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">It isn't a long shot, it is a very standard situation, but marking strings can be useful. If you can find some assembly instruction which may point to the string (such as ADDR in Arm) you can do the following - collect all such commands you have in the code IDA recognized as such. Collect addresses of these strings. Find a common delta between current string address in which you have more hits to starts of strings with ADDR arguments, and this will probably help you to calculate a new base address of the binary.</span>",
                    "time": null
                }
            ]
        }
    ]
}