{
    "title": "OSX where does getconf read its value",
    "link": "https://reverseengineering.stackexchange.com/questions/6513/osx-where-does-getconf-read-its-value",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm not experienced at reverse engineering at all. I hope this basic question is suitable for this site. Basically I want to know where the value\n  <code>\n   DARWIN_USER_CACHE_DIR\n  </code>\n  is read from. I'm trying to trace the system calls like this:\n </p>\n <pre><code>sudo bash dtruss /usr/bin/getconf DARWIN_USER_CACHE_DIR -h -f -a\n</code></pre>\n <p>\n  So, it would follow any forked processes too. But, I cannot see any calls that would indicate where it originates from.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "793",
    "tags": [
        "osx"
    ],
    "user": "Newbie",
    "time": "Oct 21, 2014 at 11:35",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Note: I don't know much about OSX, and wouldn't have answered if there had been another answer after 24 hours.\n </p>\n <p>\n  According to\n  <a href=\"https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/getconf.1.html\" rel=\"nofollow\">\n   Apple\n  </a>\n  ,\n  <code>\n   getconf\n  </code>\n  uses\n  <code>\n   sysconf\n  </code>\n  and\n  <code>\n   confstr\n  </code>\n  to find these configuration values, with\n  <a href=\"https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man3/confstr.3.html#//apple_ref/doc/man/3/confstr\" rel=\"nofollow\">\n   confstr\n  </a>\n  handling\n  <code>\n   DARWIN_USER_CACHE_DIR\n  </code>\n  . The\n  <code>\n   confstr\n  </code>\n  library function might well hard-code these values - if you check the glibc source, you see the glibc version of\n  <code>\n   confstr\n  </code>\n  hardcodes\n  <code>\n   CS_PATH\n  </code>\n  as well.\n </p>\n <p>\n  However, the\n  <code>\n   confstr\n  </code>\n  manual page also states it can return error code\n  <code>\n   EIO\n  </code>\n  if there is an \"I/O error communicating with opendirectoryd(8)\". Which means these values might be opendirectory attributes as well. Check your dtruss output if there are any socket calls; if there aren't, the attributes are probably hard-coded in libc; else, these paths are probably hidden in the opendirectory configuration somewhere.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Guntram Blohm",
            "time": "Oct 22, 2014 at 15:39",
            "is_accepted": false,
            "comments": []
        }
    ]
}