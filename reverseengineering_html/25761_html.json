{
    "title": "How to track output parameters in disassembly?",
    "link": "https://reverseengineering.stackexchange.com/questions/25761/how-to-track-output-parameters-in-disassembly",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have the following disassembly of winload!CmpFindNlsData function and I need to check the output parameters of this function.\nP.S.:\n  <code>\n   CmpFindNLSData(int a1<eax>, int a2, PUNICODE_STRING pAnsiFileName, PUNICODE_STRING pOemFileName, PUNICODE_STRING pustrDefaultLanguage, PUNICODE_STRING pustrOemHalFontName)\n  </code>\n  could be the declaration of this function. This is my first attempt at reverse engineering, could someone please guide through the steps I could take up to define the algorithm of this function.\n </p>\n <pre><code>winload!CmpFindNLSData:\n00893c10 8bff            mov     edi,edi\n00893c12 55              push    ebp\n00893c13 8bec            mov     ebp,esp\n00893c15 83ec40          sub     esp,40h\n00893c18 53              push    ebx\n00893c19 56              push    esi\n00893c1a 57              push    edi\n00893c1b 8d45e0          lea     eax,[ebp-20h]\n00893c1e 8bf1            mov     esi,ecx\n00893c20 50              push    eax\n00893c21 33db            xor     ebx,ebx\n00893c23 8975ec          mov     dword ptr [ebp-14h],esi\n00893c26 83cfff          or      edi,0FFFFFFFFh\n00893c29 895dcc          mov     dword ptr [ebp-34h],ebx\n00893c2c 52              push    edx\n00893c2d 56              push    esi\n00893c2e 897dc8          mov     dword ptr [ebp-38h],edi\n00893c31 897dd0          mov     dword ptr [ebp-30h],edi\n00893c34 895dd4          mov     dword ptr [ebp-2Ch],ebx\n00893c37 897de0          mov     dword ptr [ebp-20h],edi\n00893c3a 895de4          mov     dword ptr [ebp-1Ch],ebx\n00893c3d 897dc0          mov     dword ptr [ebp-40h],edi\n00893c40 895dc4          mov     dword ptr [ebp-3Ch],ebx\n00893c43 895de8          mov     dword ptr [ebp-18h],ebx\n00893c46 ff5604          call    dword ptr [esi+4]\n00893c49 85c0            test    eax,eax\n00893c4b 0f845d010000    je      winload!CmpFindNLSData+0x19e (00893dae)\n00893c51 8d4df4          lea     ecx,[ebp-0Ch]\n00893c54 8bd0            mov     edx,eax\n00893c56 51              push    ecx\n00893c57 68b8208e00      push    offset winload!CmpControlString (008e20b8)\n00893c5c 8bce            mov     ecx,esi\n00893c5e e869510000      call    winload!CmpFindSubKeyByNameWithStatus (00898dcc)\n00893c63 8d45e0          lea     eax,[ebp-20h]\n00893c66 50              push    eax\n00893c67 56              push    esi\n00893c68 ff5608          call    dword ptr [esi+8]\n00893c6b 397df4          cmp     dword ptr [ebp-0Ch],edi\n00893c6e 0f843a010000    je      winload!CmpFindNLSData+0x19e (00893dae)\n00893c74 8d45e0          lea     eax,[ebp-20h]\n00893c77 50              push    eax\n00893c78 ff75f4          push    dword ptr [ebp-0Ch]\n00893c7b 56              push    esi\n00893c7c ff5604          call    dword ptr [esi+4]\n00893c7f 85c0            test    eax,eax\n00893c81 0f8427010000    je      winload!CmpFindNLSData+0x19e (00893dae)\n00893c87 8d4df4          lea     ecx,[ebp-0Ch]\n00893c8a 8bd0            mov     edx,eax\n00893c8c 51              push    ecx\n00893c8d 68f8208e00      push    offset winload!CmpNlsString (008e20f8)\n00893c92 8bce            mov     ecx,esi\n00893c94 e833510000      call    winload!CmpFindSubKeyByNameWithStatus (00898dcc)\n00893c99 8d45e0          lea     eax,[ebp-20h]\n00893c9c 50              push    eax\n00893c9d 56              push    esi\n00893c9e ff5608          call    dword ptr [esi+8]\n00893ca1 397df4          cmp     dword ptr [ebp-0Ch],edi\n00893ca4 0f8404010000    je      winload!CmpFindNLSData+0x19e (00893dae)\n00893caa 8d45e0          lea     eax,[ebp-20h]\n00893cad 50              push    eax\n00893cae ff75f4          push    dword ptr [ebp-0Ch]\n00893cb1 56              push    esi\n00893cb2 ff5604          call    dword ptr [esi+4]\n00893cb5 85c0            test    eax,eax\n00893cb7 0f84f1000000    je      winload!CmpFindNLSData+0x19e (00893dae)\n00893cbd 8d4df4          lea     ecx,[ebp-0Ch]\n00893cc0 8bd0            mov     edx,eax\n00893cc2 51              push    ecx\n00893cc3 6808218e00      push    offset winload!CmpCodePageString (008e2108)\n00893cc8 8bce            mov     ecx,esi\n00893cca e8fd500000      call    winload!CmpFindSubKeyByNameWithStatus (00898dcc)\n00893ccf 8d45e0          lea     eax,[ebp-20h]\n00893cd2 50              push    eax\n00893cd3 56              push    esi\n00893cd4 ff5608          call    dword ptr [esi+8]\n00893cd7 397df4          cmp     dword ptr [ebp-0Ch],edi\n00893cda 0f84ce000000    je      winload!CmpFindNLSData+0x19e (00893dae)\n00893ce0 8d45e0          lea     eax,[ebp-20h]\n00893ce3 50              push    eax\n00893ce4 ff75f4          push    dword ptr [ebp-0Ch]\n00893ce7 56              push    esi\n00893ce8 ff5604          call    dword ptr [esi+4]\n00893ceb 85c0            test    eax,eax\n00893ced 0f84bb000000    je      winload!CmpFindNLSData+0x19e (00893dae)\n00893cf3 6870228e00      push    offset winload!CmpAcpString (008e2270)\n00893cf8 8bd0            mov     edx,eax\n00893cfa 8bce            mov     ecx,esi\n00893cfc e885330000      call    winload!CmpFindValueByName (00897086)\n00893d01 8bf8            mov     edi,eax\n00893d03 8d45e0          lea     eax,[ebp-20h]\n00893d06 50              push    eax\n00893d07 56              push    esi\n00893d08 ff5608          call    dword ptr [esi+8]\n00893d0b 83ffff          cmp     edi,0FFFFFFFFh\n00893d0e 0f849a000000    je      winload!CmpFindNLSData+0x19e (00893dae)\n00893d14 8d45d0          lea     eax,[ebp-30h]\n00893d17 50              push    eax\n00893d18 57              push    edi\n00893d19 56              push    esi\n00893d1a ff5604          call    dword ptr [esi+4]\n00893d1d 85c0            test    eax,eax\n00893d1f 0f8489000000    je      winload!CmpFindNLSData+0x19e (00893dae)\n00893d25 8d4dc8          lea     ecx,[ebp-38h]\n00893d28 8bd7            mov     edx,edi\n00893d2a 51              push    ecx\n00893d2b 8d4df8          lea     ecx,[ebp-8]\n00893d2e 51              push    ecx\n00893d2f 50              push    eax\n00893d30 8bce            mov     ecx,esi\n00893d32 e8c7340000      call    winload!CmpValueToData (008971fe)\n00893d37 8bf8            mov     edi,eax\n00893d39 8d45d0          lea     eax,[ebp-30h]\n00893d3c 50              push    eax\n00893d3d 56              push    esi\n00893d3e 897ddc          mov     dword ptr [ebp-24h],edi\n00893d41 ff5608          call    dword ptr [esi+8]\n00893d44 85ff            test    edi,edi\n00893d46 7466            je      winload!CmpFindNLSData+0x19e (00893dae)\n00893d48 8b55f8          mov     edx,dword ptr [ebp-8]\n00893d4b 33c9            xor     ecx,ecx\n00893d4d 33c0            xor     eax,eax\n00893d4f 668955da        mov     word ptr [ebp-26h],dx\n00893d53 66894dd8        mov     word ptr [ebp-28h],cx\n00893d57 c745f002000000  mov     dword ptr [ebp-10h],2\n00893d5e 663bc2          cmp     ax,dx\n00893d61 731d            jae     winload!CmpFindNLSData+0x170 (00893d80)\n00893d63 8b75f0          mov     esi,dword ptr [ebp-10h]\n00893d66 0fb7c1          movzx   eax,cx\n00893d69 d1e8            shr     eax,1\n00893d6b 66391c47        cmp     word ptr [edi+eax*2],bx\n00893d6f 740c            je      winload!CmpFindNLSData+0x16d (00893d7d)\n00893d71 6603ce          add     cx,si\n00893d74 66894dd8        mov     word ptr [ebp-28h],cx\n00893d78 663bca          cmp     cx,dx\n00893d7b 72e9            jb      winload!CmpFindNLSData+0x156 (00893d66)\n00893d7d 8b75ec          mov     esi,dword ptr [ebp-14h]\n00893d80 8b5d08          mov     ebx,dword ptr [ebp+8]\n00893d83 6a36            push    36h\n00893d85 58              pop     eax\n00893d86 663907          cmp     word ptr [edi],ax\n00893d89 750c            jne     winload!CmpFindNLSData+0x187 (00893d97)\n00893d8b c745e801000000  mov     dword ptr [ebp-18h],1\n00893d92 e992000000      jmp     winload!CmpFindNLSData+0x219 (00893e29)\n00893d97 8d45e0          lea     eax,[ebp-20h]\n00893d9a 50              push    eax\n00893d9b ff75f4          push    dword ptr [ebp-0Ch]\n00893d9e 56              push    esi\n00893d9f ff5604          call    dword ptr [esi+4]\n00893da2 85c0            test    eax,eax\n00893da4 7513            jne     winload!CmpFindNLSData+0x1a9 (00893db9)\n00893da6 8d45c8          lea     eax,[ebp-38h]\n00893da9 50              push    eax\n00893daa 56              push    esi\n00893dab ff5608          call    dword ptr [esi+8]\n00893dae 32c0            xor     al,al\n00893db0 5f              pop     edi\n00893db1 5e              pop     esi\n00893db2 5b              pop     ebx\n00893db3 8be5            mov     esp,ebp\n00893db5 5d              pop     ebp\n00893db6 c20c00          ret     0Ch\n00893db9 8d4dd8          lea     ecx,[ebp-28h]\n00893dbc 8bd0            mov     edx,eax\n00893dbe 51              push    ecx\n00893dbf 8bce            mov     ecx,esi\n00893dc1 e8c0320000      call    winload!CmpFindValueByName (00897086)\n00893dc6 8bf8            mov     edi,eax\n00893dc8 8d45c8          lea     eax,[ebp-38h]\n00893dcb 50              push    eax\n00893dcc 56              push    esi\n00893dcd ff5608          call    dword ptr [esi+8]\n00893dd0 33c0            xor     eax,eax\n00893dd2 8945dc          mov     dword ptr [ebp-24h],eax\n00893dd5 8d45e0          lea     eax,[ebp-20h]\n00893dd8 50              push    eax\n00893dd9 56              push    esi\n00893dda ff5608          call    dword ptr [esi+8]\n00893ddd 83ffff          cmp     edi,0FFFFFFFFh\n00893de0 74cc            je      winload!CmpFindNLSData+0x19e (00893dae)\n00893de2 8d45d0          lea     eax,[ebp-30h]\n00893de5 50              push    eax\n00893de6 57              push    edi\n00893de7 56              push    esi\n00893de8 ff5604          call    dword ptr [esi+4]\n00893deb 85c0            test    eax,eax\n00893ded 74bf            je      winload!CmpFindNLSData+0x19e (00893dae)\n00893def 8d4dc0          lea     ecx,[ebp-40h]\n00893df2 8bd7            mov     edx,edi\n00893df4 51              push    ecx\n00893df5 8d4df8          lea     ecx,[ebp-8]\n00893df8 51              push    ecx\n00893df9 50              push    eax\n00893dfa 8bce            mov     ecx,esi\n00893dfc e8fd330000      call    winload!CmpValueToData (008971fe)\n00893e01 894304          mov     dword ptr [ebx+4],eax\n00893e04 85c0            test    eax,eax\n00893e06 7408            je      winload!CmpFindNLSData+0x200 (00893e10)\n00893e08 8d45c0          lea     eax,[ebp-40h]\n00893e0b 50              push    eax\n00893e0c 56              push    esi\n00893e0d ff5608          call    dword ptr [esi+8]\n00893e10 8d45d0          lea     eax,[ebp-30h]\n00893e13 50              push    eax\n00893e14 56              push    esi\n00893e15 ff5608          call    dword ptr [esi+8]\n00893e18 33c0            xor     eax,eax\n00893e1a 394304          cmp     dword ptr [ebx+4],eax\n00893e1d 748f            je      winload!CmpFindNLSData+0x19e (00893dae)\n00893e1f 8b45f8          mov     eax,dword ptr [ebp-8]\n00893e22 66894302        mov     word ptr [ebx+2],ax\n00893e26 668903          mov     word ptr [ebx],ax\n00893e29 8d45e0          lea     eax,[ebp-20h]\n00893e2c 50              push    eax\n00893e2d ff75f4          push    dword ptr [ebp-0Ch]\n00893e30 56              push    esi\n00893e31 ff5604          call    dword ptr [esi+4]\n00893e34 85c0            test    eax,eax\n00893e36 0f8472ffffff    je      winload!CmpFindNLSData+0x19e (00893dae)\n00893e3c 6848228e00      push    offset winload!CmpOemCpString (008e2248)\n00893e41 8bd0            mov     edx,eax\n00893e43 8bce            mov     ecx,esi\n00893e45 e83c320000      call    winload!CmpFindValueByName (00897086)\n00893e4a 8bf8            mov     edi,eax\n00893e4c 8d45e0          lea     eax,[ebp-20h]\n00893e4f 50              push    eax\n00893e50 56              push    esi\n00893e51 ff5608          call    dword ptr [esi+8]\n00893e54 83ffff          cmp     edi,0FFFFFFFFh\n00893e57 0f8451ffffff    je      winload!CmpFindNLSData+0x19e (00893dae)\n00893e5d 8d45d0          lea     eax,[ebp-30h]\n00893e60 50              push    eax\n00893e61 57              push    edi\n00893e62 56              push    esi\n00893e63 ff5604          call    dword ptr [esi+4]\n00893e66 85c0            test    eax,eax\n00893e68 0f8440ffffff    je      winload!CmpFindNLSData+0x19e (00893dae)\n00893e6e 8d4dc8          lea     ecx,[ebp-38h]\n00893e71 8bd7            mov     edx,edi\n00893e73 51              push    ecx\n00893e74 8d4df8          lea     ecx,[ebp-8]\n00893e77 51              push    ecx\n00893e78 50              push    eax\n00893e79 8bce            mov     ecx,esi\n00893e7b e87e330000      call    winload!CmpValueToData (008971fe)\n00893e80 8bf8            mov     edi,eax\n00893e82 8d45d0          lea     eax,[ebp-30h]\n00893e85 50              push    eax\n00893e86 56              push    esi\n00893e87 897ddc          mov     dword ptr [ebp-24h],edi\n00893e8a ff5608          call    dword ptr [esi+8]\n00893e8d 85ff            test    edi,edi\n00893e8f 0f8419ffffff    je      winload!CmpFindNLSData+0x19e (00893dae)\n00893e95 8b55f8          mov     edx,dword ptr [ebp-8]\n00893e98 33c9            xor     ecx,ecx\n00893e9a 33c0            xor     eax,eax\n00893e9c 668955da        mov     word ptr [ebp-26h],dx\n00893ea0 66894dd8        mov     word ptr [ebp-28h],cx\n00893ea4 663bc2          cmp     ax,dx\n00893ea7 7322            jae     winload!CmpFindNLSData+0x2bb (00893ecb)\n00893ea9 8b75f0          mov     esi,dword ptr [ebp-10h]\n00893eac 33db            xor     ebx,ebx\n00893eae 0fb7c1          movzx   eax,cx\n00893eb1 d1e8            shr     eax,1\n00893eb3 66391c47        cmp     word ptr [edi+eax*2],bx\n00893eb7 740c            je      winload!CmpFindNLSData+0x2b5 (00893ec5)\n00893eb9 6603ce          add     cx,si\n00893ebc 66894dd8        mov     word ptr [ebp-28h],cx\n00893ec0 663bca          cmp     cx,dx\n00893ec3 72e9            jb      winload!CmpFindNLSData+0x29e (00893eae)\n00893ec5 8b75ec          mov     esi,dword ptr [ebp-14h]\n00893ec8 8b5d08          mov     ebx,dword ptr [ebp+8]\n00893ecb 6a36            push    36h\n00893ecd 58              pop     eax\n00893ece 663907          cmp     word ptr [edi],ax\n00893ed1 8b7d0c          mov     edi,dword ptr [ebp+0Ch]\n00893ed4 0f8496000000    je      winload!CmpFindNLSData+0x360 (00893f70)\n00893eda 8d45e0          lea     eax,[ebp-20h]\n00893edd 50              push    eax\n00893ede ff75f4          push    dword ptr [ebp-0Ch]\n00893ee1 56              push    esi\n00893ee2 ff5604          call    dword ptr [esi+4]\n00893ee5 85c0            test    eax,eax\n00893ee7 0f84b9feffff    je      winload!CmpFindNLSData+0x196 (00893da6)\n00893eed 8d4dd8          lea     ecx,[ebp-28h]\n00893ef0 8bd0            mov     edx,eax\n00893ef2 51              push    ecx\n00893ef3 8bce            mov     ecx,esi\n00893ef5 e88c310000      call    winload!CmpFindValueByName (00897086)\n00893efa 894508          mov     dword ptr [ebp+8],eax\n00893efd 8d45c8          lea     eax,[ebp-38h]\n00893f00 50              push    eax\n00893f01 56              push    esi\n00893f02 ff5608          call    dword ptr [esi+8]\n00893f05 8d45e0          lea     eax,[ebp-20h]\n00893f08 50              push    eax\n00893f09 56              push    esi\n00893f0a ff5608          call    dword ptr [esi+8]\n00893f0d 8b4508          mov     eax,dword ptr [ebp+8]\n00893f10 83f8ff          cmp     eax,0FFFFFFFFh\n00893f13 0f8495feffff    je      winload!CmpFindNLSData+0x19e (00893dae)\n00893f19 8d4dd0          lea     ecx,[ebp-30h]\n00893f1c 51              push    ecx\n00893f1d 50              push    eax\n00893f1e 56              push    esi\n00893f1f ff5604          call    dword ptr [esi+4]\n00893f22 85c0            test    eax,eax\n00893f24 0f8484feffff    je      winload!CmpFindNLSData+0x19e (00893dae)\n00893f2a 8b5508          mov     edx,dword ptr [ebp+8]\n00893f2d 8d4dc0          lea     ecx,[ebp-40h]\n00893f30 51              push    ecx\n00893f31 8d4df8          lea     ecx,[ebp-8]\n00893f34 51              push    ecx\n00893f35 50              push    eax\n00893f36 8bce            mov     ecx,esi\n00893f38 e8c1320000      call    winload!CmpValueToData (008971fe)\n00893f3d 894704          mov     dword ptr [edi+4],eax\n00893f40 85c0            test    eax,eax\n00893f42 7408            je      winload!CmpFindNLSData+0x33c (00893f4c)\n00893f44 8d45c0          lea     eax,[ebp-40h]\n00893f47 50              push    eax\n00893f48 56              push    esi\n00893f49 ff5608          call    dword ptr [esi+8]\n00893f4c 8d45d0          lea     eax,[ebp-30h]\n00893f4f 50              push    eax\n00893f50 56              push    esi\n00893f51 ff5608          call    dword ptr [esi+8]\n00893f54 33c9            xor     ecx,ecx\n00893f56 394f04          cmp     dword ptr [edi+4],ecx\n00893f59 0f844ffeffff    je      winload!CmpFindNLSData+0x19e (00893dae)\n00893f5f 8b45f8          mov     eax,dword ptr [ebp-8]\n00893f62 66894702        mov     word ptr [edi+2],ax\n00893f66 668907          mov     word ptr [edi],ax\n00893f69 394de8          cmp     dword ptr [ebp-18h],ecx\n00893f6c 7412            je      winload!CmpFindNLSData+0x370 (00893f80)\n00893f6e eb02            jmp     winload!CmpFindNLSData+0x362 (00893f72)\n00893f70 33c9            xor     ecx,ecx\n00893f72 33c0            xor     eax,eax\n00893f74 894b04          mov     dword ptr [ebx+4],ecx\n00893f77 668903          mov     word ptr [ebx],ax\n00893f7a 894f04          mov     dword ptr [edi+4],ecx\n00893f7d 668907          mov     word ptr [edi],ax\n00893f80 8b4d10          mov     ecx,dword ptr [ebp+10h]\n00893f83 b001            mov     al,1\n00893f85 6a14            push    14h\n00893f87 5a              pop     edx\n00893f88 c741044c1a8e00  mov     dword ptr [ecx+4],offset winload!`string' (008e1a4c)\n00893f8f 66895102        mov     word ptr [ecx+2],dx\n00893f93 668911          mov     word ptr [ecx],dx\n00893f96 e915feffff      jmp     winload!CmpFindNLSData+0x1a0 (00893db0)\n00893f9b cc              int     3\n</code></pre>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "380",
    "tags": [
        "disassembly",
        "windows",
        "functions",
        "calling-conventions"
    ],
    "user": "Bhavya Singh",
    "time": "Aug 28, 2020 at 8:55",
    "comments": [
        {
            "user": "morsisko",
            "text": "<html><body><span class=\"comment-copy\">\n Breakpoint at the start or end of the function and look at the values of parameters, to check where the parameters are (stack/registers) you need to determine the call convention of this function.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The function's Disassembly Does Not Match the prototype\n  \n\n  This function takes only 3 arguments which can be ascertained with the first/multiple failure Exits\n </p>\n <pre><code>if(!foo) { return false;}\n00893c49 85c0            test    eax,eax  <<<< if(!foo)\n00893c4b 0f845d010000    je      winload!CmpFindNLSData+0x19e (00893dae)  \n|  \n00893dae 32c0            xor     al,al <<<<<<<    bool False\n00893db0 5f              pop     edi  \n00893db1 5e              pop     esi  \n00893db2 5b              pop     ebx  \n00893db3 8be5            mov     esp,ebp  \n00893db5 5d              pop     ebp  \n00893db6 c20c00          ret     0Ch  <<<<<<<<<< pops 3 arguments\n</code></pre>\n <p>\n  we can also confirm the arguments Access in x86 by looking   for ebp+ patterns (beware FPO )\n </p>\n <p>\n  copy pasting the disassembly from your query and grepping for ebp+8\n  \n\n  yields only access to (ebp + [0x8,0xc,0x10]) so this function definitely takes only 3 arguments or 5 if this is _fastcall (ecx,edx)\n </p>\n <pre><code>:\\>wc -l nlsdatadis.txt\n350 nlsdatadis.txt\n\n:\\>grep ebp+ nlsdatadis.txt\n00893d80 8b5d08          mov     ebx,dword ptr [ebp+8] <<<\n00893ec8 8b5d08          mov     ebx,dword ptr [ebp+8]\n00893ed1 8b7d0c          mov     edi,dword ptr [ebp+0Ch] <<<\n00893efa 894508          mov     dword ptr [ebp+8],eax\n00893f0d 8b4508          mov     eax,dword ptr [ebp+8]\n00893f2a 8b5508          mov     edx,dword ptr [ebp+8]\n00893f80 8b4d10          mov     ecx,dword ptr [ebp+10h] <<<<\n</code></pre>\n <p>\n  we can infer that the last/3rd argument is a PUNICODE_STRING by looking at the Disassembly that Accesses [ebp+10]\n </p>\n <pre><code>00893f80 8b4d10          mov     ecx,dword ptr [ebp+10h]\n00893f83 b001            mov     al,1   <<<<<<< bool TRUE\n00893f85 6a14            push    14h    <<<< str length\n00893f87 5a              pop     edx\n00893f88 c741044c1a8e00  mov     dword ptr [ecx+4],offset winload!`string' (008e1a4c)   \n<<< pointer to Buffer\n00893f8f 66895102        mov     word ptr [ecx+2],dx  << (max len)\n00893f93 668911          mov     word ptr [ecx],dx    << (len)     \n00893f96 e915feffff      jmp     winload!CmpFindNLSData+0x1a0 (00893db0) << again    \njumps to Exit that is described above with True as Return)\n</code></pre>\n <p>\n  2nd Argument is also PUNICODE_STRING (ebp+0c,edi)\nist Argument is Some function pointer or the this call convention's this\n </p>\n <p>\n  as ebp+8 is modified several times by mov\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "blabb",
            "time": "Aug 29, 2020 at 21:56",
            "is_accepted": true,
            "comments": []
        }
    ]
}