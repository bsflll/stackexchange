{
    "title": "Working with multi-threaded program but can not find created thread",
    "link": "https://reverseengineering.stackexchange.com/questions/8607/working-with-multi-threaded-program-but-can-not-find-created-thread",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  i am analyzing a piece of code in which the main thread does the following steps:\n </p>\n <p>\n  First, it calls CreateProcess() to create a a process in suspended state. Then it changes the starting address of the thread by using a combination of GetThreadContext & SetThreadContext. The new start address of the thread is now 00401E1D. And at the end, it calls ResumeThread() start the thread.\n </p>\n <p>\n  So, what I did was: I set a BP at ResumeThread(), let it run, after hitting the BP I step over the ResumeThread()-function and open the window where all threads are listed by clicking on the big \"T\"-button in Ollydbg.\n </p>\n <p>\n  But there is only the main thread, not the newly started thread. \nAnd now I have a couple of questions:\n </p>\n <pre><code> 1st question: Why it is not in the list ?\n\n 2nd question: How can I find it?\n\n 3th question: \n In the main thread, I can not step to 00401E1D \n (starting address of the new thread) because ollydbg somehow \n  terminates itself. Maybe there is some anti-debugging tricks or \n  things like that. I do not know, because I did not analyze it yet\n  in detail. So, the question is: Is there a way to analyze the \n  new thread starting at 00401E1D in a separate ollydbg-session ?\n  Is it possible ?\n</code></pre>\n <p>\n  best regards,\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ollydbg",
        "thread",
        "process"
    ],
    "user": "user3097712",
    "time": "Mar 31, 2015 at 15:31",
    "comments": [
        {
            "user": "user45891",
            "text": "<html><body><span class=\"comment-copy\">\n The newly created thread is in another process - do you debug that one too? Also that technique is at least very similar to RunPE, so the usual techniques should apply.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user3097712",
            "text": "<html><body><span class=\"comment-copy\">\n No, I have not debugged the other process. How can I do that?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In addition to creating the child process,\n  <code>\n   CreateProcess()\n  </code>\n  also causes the creation of the child process's primary thread. Your post makes it sound like the calls to\n  <code>\n   GetThreadContext()\n  </code>\n  ,\n  <code>\n   SetThreadContext()\n  </code>\n  , and\n  <code>\n   ResumeThread()\n  </code>\n  all act on that primary thread.\n </p>\n <blockquote>\n  <p>\n   1st question: Why it is not in the list ?\n  </p>\n </blockquote>\n <p>\n  As you said in your post, you are seeing the process's main (primary) thread, on which the\n  <code>\n   *Thread*()\n  </code>\n  API functions above acted. No additional threads are created so you shouldn't expect to see additional threads in OllyDbg's view.\n </p>\n <blockquote>\n  <p>\n   2nd question: How can I find it?\n  </p>\n </blockquote>\n <p>\n  N/A\n </p>\n <blockquote>\n  <p>\n   Is there a way to analyze the new thread starting at 00401E1D in a separate ollydbg-session ?\n  </p>\n </blockquote>\n <p>\n  Yes -- check the \"Debug child processes\" checkbox in OllyDbg's options:\n </p>\n <p>\n  <img alt=\"OllyDbg\" src=\"https://i.sstatic.net/GDxO5.png\"/>\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Jason Geffner",
            "time": "Mar 31, 2015 at 15:39",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user3097712",
                    "text": "<span class=\"comment-copy\">wow, what an answer. But which version of ollydbg do you use? I go to Options -&gt; Debugging Options -&gt; Events, but I have only the following options (see picture before your answer)</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\"><a href=\"http://www.ollydbg.de/odbg201.zip\" rel=\"nofollow noreferrer\">ollydbg.de/odbg201.zip</a></span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">ollydbg 1,10 does not have  debug child process option if you want that options you can try using modified command line plugin (openrce downloads)</span>",
                    "time": null
                },
                {
                    "user": "user3097712",
                    "text": "<span class=\"comment-copy\">ok, thank you. But first, i will try to work with ollydbg v2.01. Now, I have the following problem: when i open the sample with ollydbg v2.01, then I get the following message: \"Debugged application has modified the debugging registers. Maybe it called ZwContinue() or SetDebugContext(). The modifications are saved to the log.\" . What does that mean? how can I solve this problem ?</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">That's a separate question for a separate post. One question per post, please.</span>",
                    "time": null
                }
            ]
        }
    ]
}