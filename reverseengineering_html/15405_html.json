{
    "title": "Unknown record type in Intel Hex file",
    "link": "https://reverseengineering.stackexchange.com/questions/15405/unknown-record-type-in-intel-hex-file",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I was working on a USB thumbwheel bootloader and  reading in a number of records successfully, but around 2000 bytes it throws a check_sum error.  I initially figured it had to be my code, but having finally nailed down the offending records in the Hex file, I am even more puzzled.\n </p>\n <p>\n  Here are a few extracts (below) of the lines of code in the hex file that is causing the problem.  They all show the data length field as zero. Now to be best of my knowledge the only type of file in the INTEL HEX format that should have a data length of zero should be the end of file record, the very last one which has a format of:  :00000001FF  // End oF File Record.  The two zeros after the colon \":\" indicating the number of bytes in the data field â€“ zero - since there are none in an EOF record.\n </p>\n <p>\n  However, extracted from my code are following 3 examples of code with \":00\" that are not end of file records and in searching the internet, I can find no indication of what they may be.\n </p>\n <p>\n  Yes, the code compiles and hex code I load runs fine on the board.\n </p>\n <pre><code>:1094F00044E3400B000000703EE5400B00000070AC\n:009500006B  <<<< not EOF record so what is it?\n:102F1C0081BF1E3C00F2C283C418027C81BF1E3CE0\n.\n\n:105B5400FFFF0234748822A40800E00300000070F0\n:005B640041  <<<<not EOF record so what is it?\n:104E5C00F4FFBD270000BFAF0400B9AF8594400F2D\n.\n:104F5C000400B98F0000BF8F0800E0030C00BD27D0\n:004F6C0045  <<<<<<<not EOF record so what is it?\n:020000041D01DC\n.\n:020000041FC01B\n:102FF000000007C07505000003E606000FF00F1182\n:00000001FF  // End of File Record\n</code></pre>\n <p>\n  Thanks in advance\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "493",
    "tags": [
        "decompilation"
    ],
    "user": "user1542771",
    "time": "May 24, 2017 at 17:40",
    "comments": [
        {
            "user": "Jim Nickerson",
            "text": "<html><body><span class=\"comment-copy\">\n How was this hex file produced ? Maybe this zero length type 0 record is in here to mess with those who try to make use of hex files they have no rights to.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  There is nothing violating the\n  <a href=\"https://en.wikipedia.org/wiki/Intel_HEX#Record_types\" rel=\"nofollow noreferrer\">\n   intel hex format\n  </a>\n  as far as I can see.\n </p>\n <p>\n  The end of file record\n </p>\n <pre><code>:000000_01_FF\n</code></pre>\n <p>\n  has a record type of \"01\" (fourth byte), indicating end of file, whereas\n </p>\n <pre><code>:009500_00_6B\n</code></pre>\n <p>\n  is a data record (fourth byte = 00) starting at address 0x0095 containing 0 bytes. I suspect your ihex generator uses this as a sort of indicator for an address change in the subsequent lines.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": null,
            "time": "Apr 10, 2018 at 18:17",
            "is_accepted": false,
            "comments": []
        }
    ]
}