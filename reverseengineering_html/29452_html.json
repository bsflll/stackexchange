{
    "title": "How is lite hash rate (LHR) of Nvidia implemented?",
    "link": "https://reverseengineering.stackexchange.com/questions/29452/how-is-lite-hash-rate-lhr-of-nvidia-implemented",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Nvidia limited some of their GPUs with\n  <a href=\"https://blogs.nvidia.com/blog/2021/05/18/lhr/\" rel=\"nofollow noreferrer\">\n   LHR\n  </a>\n  to decrease the performance of Ethereum mining. What in detail is LHR doing? It seems to limit non sequential memory operations (which is actually not what hash algorithms do since they only use registers.)\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "363",
    "tags": [
        "memory",
        "hardware",
        "driver",
        "hash-functions"
    ],
    "user": "David Jonsson",
    "time": "Oct 26, 2021 at 9:31",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This is mostly speculative, since Nvidia didn't go into details about the implementation details. All I could find was this quote:\n </p>\n <blockquote>\n  <p>\n   RTX 3060 software drivers are designed to detect specific attributes of the Ethereum cryptocurrency mining algorithm, and limit the hash rate, or cryptocurrency mining efficiency, by around 50 percent.\n  </p>\n </blockquote>\n <p>\n  However following Occam's razor - the simplest solution will probably constitute an mechanism to detect SHA3 (Ethereum's\n  <a href=\"https://eth.wiki/en/concepts/ethash/ethash\" rel=\"nofollow noreferrer\">\n   chosen\n  </a>\n  hash function) loops (Either by some kind of code analysis or dynamically during execution of said code) and actively limit GPU processing capabilities.\n </p>\n <p>\n  Although technically, depending on implementation approach, this may not be limited to Ethereum mining, this seems desirable as Nvidia makes an effort at preventing crypto-mining altogether.\n </p>\n <p>\n  If you want to further investigate this matter, you can start by reviewing the solutions made by miners to circumvent that limitation. For example, by reading the source code of\n  <a href=\"https://github.com/NebuTech/NBMiner\" rel=\"nofollow noreferrer\">\n   NBMiner\n  </a>\n  which claims to have reached 68% utilization.\n </p>\n <p>\n  According to certain\n  <a href=\"https://www.pcworld.com/article/395041/nvidia-lhr-explained-what-is-a-lite-hash-rate-gpu.html\" rel=\"nofollow noreferrer\">\n   sources\n  </a>\n  the limitation may be (at least partially) software based (and not hardware based). If that's the case, one might also reverse engineer the drivers provided by Nvidia in order to gain more understanding of the mechanisms used to implement LHR.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "NirIzr",
            "time": "Oct 26, 2021 at 9:31",
            "is_accepted": false,
            "comments": [
                {
                    "user": "David Jonsson",
                    "text": "<span class=\"comment-copy\">No, it cannot affect specifically the hash algorithm. It is said to limit arbitrary memory accesses. The hash calculation is done purely in the ALU. Ethereum is doing a lot of memory reads and writes since it is doing hashes of previously stored hashes. There are two versions of LHR. I link to the latest version.</span>",
                    "time": null
                }
            ]
        }
    ]
}