{
    "title": "Decompiling and Recompiling APK leads to crash using Apktool",
    "link": "https://reverseengineering.stackexchange.com/questions/31048/decompiling-and-recompiling-apk-leads-to-crash-using-apktool",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Decompiling and recompiling an apk causes it to crash. My goal is simply to insert a method into smali code that prints a stacktrace, but even decompiling and recompiling with no changes causes the modified apk to crash. Apktool says everything goes fine, but when the recompiled apk is installed it crashes instantly.\n </p>\n <p>\n  <a href=\"https://pastebin.com/zBJWdWYg\" rel=\"nofollow noreferrer\">\n   the decompiled and recompiled apk's log\n  </a>\n </p>\n <p>\n  <a href=\"https://pastebin.com/Ay0m8ns4\" rel=\"nofollow noreferrer\">\n   log of the unmodified version installed from Play Store\n  </a>\n </p>\n <p>\n  It seems as if Apktool doesn't properly recompile.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "1k",
    "tags": [
        "decompilation",
        "android",
        "apk"
    ],
    "user": "Sid",
    "time": "Dec 18, 2022 at 23:50",
    "comments": [
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n I would first test if the app works at all if you only resign it (without de- and recompiling). If the app checks it's own signature it can intentionally force and app crash if it detects that the signature was changed. So the problem may be unrelated to apktool.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Sid",
            "text": "<html><body><span class=\"comment-copy\">\n Can confirm that simply resigning the apk causes the app to crash, so it seems that the app is checking the signature. How can I solve this?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n Search for the code that checks the signature. It may be implemented in Dex code or in native (.so files) code.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Ehab Alaa",
            "text": "<html><body><span class=\"comment-copy\">\n So for me only resigning the apk and installing causes no problems,so where could be the issue if i decompile it and compile it back without any modifications? I resigned it using apk easy tool\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You are likely working with a split-config application and you're only re-signing and installing the base APK. You need to also install additional APKs from the bundle (also known as XAPK).\nDetails here:\n  <a href=\"https://developer.android.com/guide/app-bundle/#dynamic_delivery\" rel=\"nofollow noreferrer\">\n   https://developer.android.com/guide/app-bundle/#dynamic_delivery\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "ernakto",
            "time": "Dec 18, 2022 at 19:36",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Robert",
                    "text": "<span class=\"comment-copy\">Your answer is a valuable information for apktool users, however as written in the comments even resigning the APK without using apktool triggers the problem. Therefore apktool is not the problem here.</span>",
                    "time": null
                },
                {
                    "user": "Sid",
                    "text": "<span class=\"comment-copy\">This has become my personal project for a while now, and I can confirm that this answer is incorrect. This app seems to be a rebranded version of another app, which definitely checks its own signature: <a href=\"https://github.com/nalajcie/tuya-sign-hacking\" rel=\"nofollow noreferrer\">github.com/nalajcie/tuya-sign-hacking</a>. In addition, I've been installing both apks even before this question was asked, because if one is left out, adb install gets angry.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As commented by Robert, the answer for me in this case was that the signature was being checked by the app itself, and the app was causing the crash as a result of detecting modification to the app. If you want to solve this problem, get ready for a long project. If the developers of the app care even a little about the security of their app, they can make it incredibly difficult to modify the app. I would recommend looking up reverse engineering tools such as Ghidra and Frida that might be able to help you.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Sid",
            "time": "Dec 20, 2022 at 16:19",
            "is_accepted": true,
            "comments": []
        }
    ]
}