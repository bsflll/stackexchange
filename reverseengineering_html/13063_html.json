{
    "title": "My Radare2 Installation Not Working As Expected",
    "link": "https://reverseengineering.stackexchange.com/questions/13063/my-radare2-installation-not-working-as-expected",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  So I am trying to learn radare2 by following an on-line guide, but from what I have seen there and on other sites, my\n  <code>\n   r2\n  </code>\n  behavior is wacky.\n </p>\n <p>\n  The author's disassembly looks like\n  <a href=\"https://gist.githubusercontent.com/samsymons/e24e0b7ff24a641231bc/raw/6cdfbae632eae76244e0716b3e3ee1f582083b74/crackme0x00a.asm\" rel=\"nofollow noreferrer\">\n   this\n  </a>\n  , with neat little arrows and helpful strings that appear to the right of the code.\n </p>\n <p>\n  My disassembly, however, looks like\n  <a href=\"https://imgur.com/fvpgiAn\" rel=\"nofollow noreferrer\">\n   this\n  </a>\n  , with strange, fat arrows and and no string comments, which are rather critical for this particular crackme challenge. Instead, I used the\n  <code>\n   iz\n  </code>\n  command, but the string\n  <code>\n   \"g00dJ0B!\"\n  </code>\n  displayed without the\n  <code>\n   !\n  </code>\n  which is pretty weird and certainly not helpful, because that string is the password I was looking for.\n </p>\n <p>\n  Finally, the author gets this output from his memory read:\n </p>\n <pre><code>[0x080483e0]> px @ sym.pass.1964\noffset -   0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF\n0x0804a040  7700 0000 3000 0000 7700 0000 6700 0000  w...0...w...g...\n0x0804a050  7200 0000 6500 0000 6100 0000 7400 0000  r...e...a...t...\n0x0804a060  0000 0000 4743 433a 2028 5562 756e 7475  ....GCC: (Ubuntu\n0x0804a070  2f4c 696e 6172 6f20 342e 362e 312d 3975  Linaro 4.6.1-9u\n0x0804a080  6275 6e74 7533 2920 342e 362e 3100 002e  buntu3) 4.6.1...\n0x0804a090  7379 6d74 6162 002e 7374 7274 6162 002e  symtab..strtab..\n0x0804a0a0  7368 7374 72                             shstr\n</code></pre>\n <p>\n  ...while I get this when using the same command:\n </p>\n <pre><code>[0x080483e0]> px @ sym.pass.1964\n- offset -   0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF\n0x0804a040  ffff ffff ffff ffff ffff ffff ffff ffff  ................\n0x0804a050  ffff ffff ffff ffff ffff ffff ffff ffff  ................\n0x0804a060  ffff ffff ffff ffff ffff ffff ffff ffff  ................\n0x0804a070  ffff ffff ffff ffff ffff ffff ffff ffff  ................\n0x0804a080  ffff ffff ffff ffff ffff ffff ffff ffff  ................\n0x0804a090  ffff ffff ffff ffff ffff ffff ffff ffff  ................\n0x0804a0a0  ffff ffff ffff ffff ffff ffff ffff ffff  ................\n</code></pre>\n <p>\n  I would appreciate any help with in resolving these issues very much, thank you!\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "210",
    "tags": [
        "radare2"
    ],
    "user": "user16765",
    "time": "Jul 18, 2016 at 7:17",
    "comments": [
        {
            "user": "user16765",
            "text": "<html><body><span class=\"comment-copy\">\n The guide is at\n <a href=\"https://samsymons.com/blog/reverse-engineering-with-radare2-part-1/\" rel=\"nofollow noreferrer\">\n  samsymons.com/blog/reverse-engineering-with-radare2-part-1\n </a>\n for those who are wondering. You can tell it's a good one by the lack of 1337speek.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I got it! Just needed to re-download using Git because the radare2 in my repos was old. Haha. Alright, happy hacking ladies and gentleman.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "user16765",
            "time": "Jul 17, 2016 at 18:05",
            "is_accepted": false,
            "comments": []
        }
    ]
}