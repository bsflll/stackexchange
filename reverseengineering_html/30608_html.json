{
    "title": "What is j__ftol2_sse_excpt in IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/30608/what-is-j-ftol2-sse-excpt-in-ida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I was inspecting the c-pseudocode for a PE executable in IDA.\n </p>\n <p>\n  I found some function called\n  <code>\n   j__ftol2_sse_excpt()\n  </code>\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/FEUBe.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"c-pseudocode function calls\" src=\"https://i.sstatic.net/FEUBe.png\"/>\n  </a>\n </p>\n <p>\n  When I open that function I see that the function is calling another function named\n  <code>\n   _ftol2_sse_excpt\n  </code>\n  .\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/ZBXWD.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"c-Pseudocode of that function\" src=\"https://i.sstatic.net/ZBXWD.png\"/>\n  </a>\n </p>\n <p>\n  When I open that function, I saw this(I can't understand it)\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/uo0r5.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"c-pseudocode of that function which is called by j__ftol2_sse_excpt()\" src=\"https://i.sstatic.net/uo0r5.png\"/>\n  </a>\n </p>\n <p>\n  Dissassembly around function calls:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/cmGUG.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Disassembly of original function calls\" src=\"https://i.sstatic.net/cmGUG.png\"/>\n  </a>\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/PTn5l.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Disassembly of the function\" src=\"https://i.sstatic.net/PTn5l.png\"/>\n  </a>\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/kHlCT.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Disassembly of the function which is called by j__ftol2_sse_excpt()__1\" src=\"https://i.sstatic.net/kHlCT.png\"/>\n  </a>\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/kTIEQ.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Disassembly of the function which is called by j__ftol2_sse_excpt()__2\" src=\"https://i.sstatic.net/kTIEQ.png\"/>\n  </a>\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/D1Wzt.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Disassembly of the function which is called by j__ftol2_sse_excpt()__3\" src=\"https://i.sstatic.net/D1Wzt.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "236",
    "tags": [
        "ida",
        "disassembly",
        "assembly"
    ],
    "user": "Galaxy226",
    "time": "Jul 9, 2022 at 5:09",
    "comments": [
        {
            "user": "raspiduino",
            "text": "<html><body><span class=\"comment-copy\">\n From what I found on the Internet, for example\n <a href=\"https://stackoverflow.com/questions/15247949/ftol2-sse-are-there-faster-options\">\n  this\n </a>\n ,\n <a href=\"https://social.msdn.microsoft.com/Forums/vstudio/en-US/cb53d9ff-66e5-483d-9b90-681c524fc106/what-is-ftol2asm-?forum=vclanguage\" rel=\"nofollow noreferrer\">\n  this\n </a>\n and\n <a href=\"https://lists.osgeo.org/pipermail/gdal-dev/2009-March/020078.html\" rel=\"nofollow noreferrer\">\n  this\n </a>\n , it seems that\n <code>\n  _ftol2_sse_excpt\n </code>\n is a standard function from msvcrt and is used to round a number from float to int.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <code>\n   j_\n  </code>\n  prefix is used by IDA for functions which do not do anything besides jumping to another function, likely the real implementation. So the real function you need is\n  <code>\n   ftol2_sse_excpt\n  </code>\n  .\n </p>\n <p>\n  This function doesn’t seem to be documented anywhere but the name is very close to\n  <code>\n   ftol\n  </code>\n  which is the standard CRT function for converting a\n  <code>\n   float\n  </code>\n  to a\n  <code>\n   long int\n  </code>\n  .\n </p>\n <p>\n  According to\n  <a href=\"https://www.masmforum.com/board/index.php?topic=15743.0\" rel=\"nofollow noreferrer\">\n   this MASM forum post\n  </a>\n  :\n </p>\n <blockquote>\n  <p>\n   ftol2_sse is an internal C function that is called when a cast or conversion is made from a floating point variable to an integer. It was first used in VC 2005 (8.0).  Before that it was ftol_sse and before that ftol.\n  </p>\n </blockquote>\n <p>\n  The\n  <code>\n   _excpt\n  </code>\n  suffix probably means it can raise an exception (e.g. if called with a NaN value).\n </p>\n <p>\n  Because the function is internal, the function prototype is not known and the decompiler did not detect the arguments, probably because they’re passed in FPU registers and not on stack. If the function is really equivalent to\n  <code>\n   ftol\n  </code>\n  , you can try renaming it to that and the decompiler should recognize it. Alternatively, you can try specifying a manual function prototype using\n  <code>\n   __usercall\n  </code>\n  calling convention.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Igor Skochinsky",
            "time": "Jul 9, 2022 at 12:00",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Viktor",
                    "text": "<span class=\"comment-copy\">Like <code>j_</code> prefix, are there some other types of prefixes or suffixes which are used by IDA under specific disassembly. Please, can you provide/list them? Thank you.</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@Viktor that's a subject for a whole another question but here's some of  them: <a href=\"https://hex-rays.com/blog/igors-tip-of-the-week-34-dummy-names/\" rel=\"nofollow noreferrer\">hex-rays.com/blog/igors-tip-of-the-week-34-dummy-names</a></span>",
                    "time": null
                }
            ]
        }
    ]
}