{
    "title": "How do I view a kernel routine in Windows",
    "link": "https://reverseengineering.stackexchange.com/questions/11154/how-do-i-view-a-kernel-routine-in-windows",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I've been reading a book about reverse engineering assembly code, and although it is very informative, It has questions such as decompile KeReadyThread- Im pretty good at assembly, and want to give it a shot, but how exactly do i view the assembly code of this kernel or any others? thanks\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "637",
    "tags": [
        "assembly"
    ],
    "user": "Bruce",
    "time": "Oct 21, 2015 at 20:29",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you have windbg installed you can use the Local kernel Debugging\n  \n\n  Facility to view the Disassembly of any kernel Routine.\nIn OS > WinXP you may need to enable\n  <code>\n   /debug\n  </code>\n  in\n  <code>\n   bcdsettings\n  </code>\n  (boot configuration).\n </p>\n <p>\n  <strong>\n   <code>\n    C:\\>kd -kl -c \"uf nt!KeReadyThread;q\" | grep -i -A 20 ke.*\n   </code>\n   :\n  </strong>\n </p>\n <pre><code>nt!KeReadyThread:\n804fb7de 8bff            mov     edi,edi\n804fb7e0 55              push    ebp\n804fb7e1 8bec            mov     ebp,esp\n804fb7e3 53              push    ebx\n804fb7e4 ff1514774d80    call    dword ptr [nt!_imp__KeRaiseIrqlToDpcLevel (804d\n7714)]\n804fb7ea 8b4d08          mov     ecx,dword ptr [ebp+8]\n804fb7ed 8ad8            mov     bl,al\n804fb7ef e82e510000      call    nt!KiReadyThread (80500922)\n804fb7f4 8acb            mov     cl,bl\n804fb7f6 e86d5f0400      call    nt!KiUnlockDispatcherDatabase (80541768)\n804fb7fb 5b              pop     ebx\n804fb7fc 5d              pop     ebp\n804fb7fd c20400          ret     4\nquit:\n</code></pre>\n</div>\n</body></html>",
            "votes": "2",
            "user": "perror",
            "time": "Oct 21, 2015 at 21:25",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Bruce",
                    "text": "<span class=\"comment-copy\">Thanks, i will try this- wish my book explained more about how the authors got the data</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Hmmmm not sure on windows but on iOS you have to download the ipsw (firmware file) then unzip it then decrypt it then find the executables you want to look at, I'd imagine windows would be similar but I don't know for sure\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "user13911",
            "time": "Oct 21, 2015 at 20:52",
            "is_accepted": false,
            "comments": []
        }
    ]
}