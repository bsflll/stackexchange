{
    "title": "Dolphin Emulator Android port modifications",
    "link": "https://reverseengineering.stackexchange.com/questions/16099/dolphin-emulator-android-port-modifications",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am modifying the\n  <a href=\"https://play.google.com/store/apps/details?id=org.dolphinemu.dolphinemu&hl=en\" rel=\"nofollow noreferrer\">\n   Dolphin Emulator Alpha\n  </a>\n  for android, but I'm having some trouble with a string in it's\n  <code>\n   smali\n  </code>\n  code. The value I am having trouble with is\n  <code>\n   dolphin-emu\n  </code>\n  , it is the name of the folder that houses the emulators data and files. So far I have olny found two files containing the string, a configuration file in the\n  <code>\n   assets\n  </code>\n  folder, and a smali script. The issue is that even afyer changing both strings to\n  <code>\n   Dolphin Emulator\n  </code>\n  , the folder is still generated as\n  <code>\n   dolphin-emu\n  </code>\n  . I have scoured the application for\n  <strong>\n   any\n  </strong>\n  other references to this string and cannot find any more. How is the folder being generated with this name if I have replaced the string that represents it?\n </p>\n <p>\n  I am using\n  <a href=\"https://play.google.com/store/apps/details?id=com.gmail.heagoo.apkeditor.pro&hl=en\" rel=\"nofollow noreferrer\">\n   APK Editor Pro\n  </a>\n  to modify the app, this is the method I almost always use. I've been modding android apps for years and have modded hundreds of them, but this one has me truly stumped. I've used every method I have developed over the years to hunt it down and nothing works. Using the built-in search function, I have searched for these strings to see if it is \"split\" or possibly even hidden:\n </p>\n <pre><code>\"dolphin-emu\"\n\"dolphin\n\"/dolphin\nemu\"\nemu/\"\n\"DOLPHIN-EMU\"\nect...\n</code></pre>\n <p>\n  Nothing else turns up, the app\n  <em>\n   is not\n  </em>\n  obfuscated or protected, and I can't find anything else that could potentialy hold the string I am trying to mod. Initially this was about simply changing the value, but now I just want to figure out how this is happening. Even uninstalling then re-installing after modifying the APK did not work, I thought that it may be possible for a settings file in the apps data folder to \"remember\" where the folder was stored. I've\n  <strong>\n   <em>\n    never\n   </em>\n  </strong>\n  had this much trouble locating and modifying a string in an app before.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "488",
    "tags": [
        "android",
        "strings",
        "local-variables",
        "binary-editing"
    ],
    "user": "Mr. Mendelli",
    "time": "Aug 16, 2017 at 2:27",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n isn't the project open source?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Mr. Mendelli",
            "text": "<html><body><span class=\"comment-copy\">\n Yes, but even still, knowing what causes this is very perplexing to me and I would like to find out how to modify the string in the current build. I'll tinker with the source to see If I can trace the source there in the mean time.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  After I did some more digging in the APK, I found what handles the fylesystem for the emulator. It is the\n  <code>\n   libmain.so\n  </code>\n  binary. Because it is handled by this file, modifying it is next to imposdible, this is because\n  <code>\n   .so\n  </code>\n  files are akin to windiws\n  <code>\n   .dll\n  </code>\n  binaries and are signed. Since modifying the file is not really an option, the only alternative answer to changing the emulators filesystem is to re-build it from the\n  <a href=\"https://github.com/dolphin-emu/dolphin\" rel=\"nofollow noreferrer\">\n   source code\n  </a>\n  .\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/hZI1y.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"The values were located using a hex editor.\" src=\"https://i.sstatic.net/hZI1y.jpg\"/>\n  </a>\n </p>\n <p>\n  This is the first instance I have found something like this in an android app. Usually modifying file paths can be achieved through decompiling and modifying the\n  <code>\n   DEX\n  </code>\n  . Because of this, looking into the\n  <code>\n   .so\n  </code>\n  binaries was the\n  <em>\n   last\n  </em>\n  place I looked.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Mr. Mendelli",
            "time": "Aug 23, 2017 at 18:59",
            "is_accepted": true,
            "comments": []
        }
    ]
}