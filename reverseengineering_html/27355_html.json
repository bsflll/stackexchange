{
    "title": "Radare2 does not reload payload correctly",
    "link": "https://reverseengineering.stackexchange.com/questions/27355/radare2-does-not-reload-payload-correctly",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm new to Radare2 so i'm trying to learn it by doing some basic buffer overflows. My problem is that, when i try to load some payloads, the stack seems to fake them in some differents ways...\n </p>\n <p>\n  For example, trying to load the input by invoking a simple python script\n </p>\n <pre><code>import struct\n\ndef p (x):\n    return struct.pack('<I',x)\n\nparam = \"\"\nparam += \"A\"*30\n\nparam += p(0xb7e40db0)\nparam += p(0xb7e349e0)\nparam += p(0xb7f61b0b)\n\nprint param\n</code></pre>\n <p>\n  And using this for run it.\n </p>\n <p>\n  <code>\n   r2 -d bufferoverflow `python payload.py`\n  </code>\n </p>\n <p>\n  I get this stack when overflows.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/FXAZM.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/FXAZM.png\"/>\n  </a>\n </p>\n <p>\n  I don't use to get any problem by running it this way\n </p>\n <p>\n  However, when i've set some breakpoints, customize some views in order to be more confortable, I've try to reload the file by using \"dor\" and \"doo\" commands from Radare2\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/UcPL3.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/UcPL3.png\"/>\n  </a>\n </p>\n <p>\n  But now Radare2 seems to start faking the stack with some random values...\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/xW0TR.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/xW0TR.png\"/>\n  </a>\n </p>\n <p>\n  I'm not sure if it's a problem of mine because i'm doing it the wrong way, or if it's caused by a Radare2 behavior that i don't know.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/o1r5M.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/o1r5M.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "202",
    "tags": [
        "radare2",
        "stack"
    ],
    "user": "saltmorejo",
    "time": "Mar 30, 2021 at 12:37",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I think it's intended behavior as this normal mode (no value prefixes - see later) is probably valid for ascii parameters. Here you are passing a payload that can contain ascii controlling bytes and might cause trouble.\n </p>\n <p>\n  From the broken payload it's clearly visible that there's a missing byte\n  <code>\n   0x0d\n  </code>\n  and this is causing your problems. But why is it missing?\n </p>\n <p>\n  Let's look at the code that sets the values from the new process from rarun2 profile (so basically from\n  <code>\n   dor\n  </code>\n  command in this case).\n </p>\n <p>\n  The profile is being parsed with the following code (\n  <code>\n   libr\\socket\\run.c\n  </code>\n  ):\n </p>\n <pre><code>R_API bool r_run_parse(RRunProfile *pf, const char *profile) {\n    r_return_val_if_fail (pf && profile, false);\n    char *p, *o, *str = strdup (profile);\n    if (!str) {\n        return false;\n    }\n    r_str_replace_char (str, '\\r',0); // <------ (1)\n    p = str;\n    while (p) {\n        if ((o = strchr (p, '\n'))) {\n            *o++ = 0;\n        }\n    r_run_parseline (pf, p);\n    p = o;\n    }\n    free (str);\n    return true;\n}\n</code></pre>\n <p>\n  <code>\n   str\n  </code>\n  is our rarun2 profile (what is passed to\n  <code>\n   dor\n  </code>\n  ) and char\n  <code>\n   '\\r'\n  </code>\n  is in fact\n  <code>\n   0xd\n  </code>\n  . It is being removed from the input on line (1) before it's being passed to\n  <code>\n   r_run_parseline\n  </code>\n  that does parsing and setting process environment variables (like args).\n </p>\n <p>\n  Not sure why the line is there - it might be to unify line endings? (windows/linux)\n </p>\n <p>\n  What can be done to overcome this? Modify your script and use one of the value prefixes. If your script instead of raw bytes prints hexpair strings you can use\n  <code>\n   :\n  </code>\n  to parse it and correctly be passed to your program. So change you script to print like this\n  <code>\n   41414141.....\n  </code>\n </p>\n <p>\n  and then from\n  <code>\n   r2\n  </code>\n  use\n  <code>\n   :\n  </code>\n  to indicate that the input is a hexpair string.\n </p>\n <pre><code>dor arg1=:`!python payload.py`\ndoo\n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Paweł Łukasik",
            "time": "Apr 12, 2021 at 22:56",
            "is_accepted": true,
            "comments": [
                {
                    "user": "saltmorejo",
                    "text": "<span class=\"comment-copy\">I appreciate your answer so much. That's just what i was looking about.</span>",
                    "time": null
                }
            ]
        }
    ]
}