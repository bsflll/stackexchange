{
    "title": "How to get dynamically changing xrefs with IDAPython",
    "link": "https://reverseengineering.stackexchange.com/questions/27283/how-to-get-dynamically-changing-xrefs-with-idapython",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  There is a situation where the number of xrefs for a function is dynamically increasing due to the dynamic creation of memory with execution rights attached by VirtualAlloc.\n  \n\n  I want to get the xrefs of the function, and in this situation, if I check manually in the UI, I get 8 references, but if I use IDAPython to get CodeRefsTo/XrefsTo, I only get 3.\n  \n\n  This is probably due to the fact that IDAPython does not allow xrefs to be applied to code regions dynamically allocated by VirtualAlloc, or because the cache is not updated. What is the best way to get dynamically changing xrefs with IDAPython ? Can you give me some ideas?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "193",
    "tags": [
        "ida",
        "idapython"
    ],
    "user": "rou qwers",
    "time": "Mar 22, 2021 at 11:17",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Unfortunately i can not write a comment thus i have to write an answer if i want to reply. Maybe you could write a script to scan the memory for that functions address or even scan for the bytes of call functionaddr using idc.find_binary. Ofc that would only work if there are no offsets used.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "crush3dice",
            "time": "Mar 22, 2021 at 11:37",
            "is_accepted": false,
            "comments": [
                {
                    "user": "rou qwers",
                    "text": "<span class=\"comment-copy\">Thank you for your comment. I already know the address of that function(function A), so I want to get dynamically not the function(function A) but the many other caller’s address that reference(xrefs) that the function(function A) address with IDApython.</span>",
                    "time": null
                },
                {
                    "user": "crush3dice",
                    "text": "<span class=\"comment-copy\">yes but idapython has the module idc. So knowing the address of the function that you want the xrefs to you could search for the bytesequence of \"call functionaddress\". That should atleast yield you some of the calls to it. I dont know how to perform the ida-internal x-ref scan though in idapython.</span>",
                    "time": null
                },
                {
                    "user": "rou qwers",
                    "text": "<span class=\"comment-copy\">Thank you for your comment. After that, I could solved the problem by using \"plan_and_wait()\".　Your idea will be great too. Thank you.</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@rouqwers please add an answer if you found a solution so others can benefit from it</span>",
                    "time": null
                },
                {
                    "user": "rou qwers",
                    "text": "<span class=\"comment-copy\">Hi Igor, I've included an answer.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  My question was resolved by doing the following.\nThis is an answer.\n </p>\n <p>\n  If you want to update xrefs, at any given time, do the following.\n  \n\n  \n\n </p>\n <pre><code>plan_and_wait(minaddress, maxaddress)\n</code></pre>\n <p>\n  It was effective to narrow down the scope of the project to a certain extent, because doing it in all areas would have been time consuming.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "rou qwers",
            "time": "Mar 25, 2021 at 4:58",
            "is_accepted": true,
            "comments": []
        }
    ]
}