{
    "title": ".exe file to .class, decompiled to .java, how to put back to .class?",
    "link": "https://reverseengineering.stackexchange.com/questions/19758/exe-file-to-class-decompiled-to-java-how-to-put-back-to-class",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to reverse engineer a very complex\n  <code>\n   .exe\n  </code>\n  to alter its behavior.\n </p>\n <p>\n  Ran\n  <a href=\"https://github.com/katjahahn/JWScan\" rel=\"nofollow noreferrer\">\n   JWScan\n  </a>\n  that tells me it's been wrapped with Jar2Exe (which I also saw during debugging).\n </p>\n <p>\n  Looking at the complex exe with the Task Manager, it seems like it spawns 4 child threads:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/k4BER.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/k4BER.png\"/>\n  </a>\n </p>\n <p>\n  Likely, it's an application that controls some HTML/JavaScript browsers through Java: indeed, I can see all the HTML/JS files in a resources folder, but the logic is still in the exe/Java.\n </p>\n <p>\n  Multithreading makes it a pain to debug with x64dbg (combined with the fact that I can't really read machine code): haven't been able to pinpoint the part of the code I'm looking for in 2 days, even while comparing it with the same exe debugged in a vm (wanted behavior in vm, unwanted behavior in host: compare and find the difference) and even though it triggers writings to a log file I can monitor.\n </p>\n <p>\n  So, today I tried the obvious: WinRAR extract the .exe. That gives me some .class files that can be decompiled in CFR and read (no obfuscation). One of these .class files happen to have the code I'm looking for. Being able to edit just a few bits of this .class file would be sufficient.\n </p>\n <p>\n  Unfortunately, the amount of missing code is massive: there are imports to classes that are not there. Recompiling the code is not possible since, I assume, the compiler would need all the referenced imports.\n </p>\n <p>\n  How can I proceed? Is there any way to pinpoint the location of .class into the .exe and edit it? Or to reflect changes made to the .class into the .exe?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "2k",
    "tags": [
        "java",
        "x64dbg"
    ],
    "user": "Saturnix",
    "time": "Oct 30, 2018 at 16:39",
    "comments": [
        {
            "user": "mrexodia",
            "text": "<html><body><span class=\"comment-copy\">\n You should check the command line and environment variables of the process. Usually some form of the -classpath option will be inside the executable pointing you to the missing class files.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I would recommend using a Java bytecode disassembler/assembler pair like\n  <a href=\"https://github.com/Storyyeller/Krakatau\" rel=\"nofollow noreferrer\">\n   Krakatau\n  </a>\n  . You will have to learn how Java bytecode works, but the advantage is that it works even for obfuscated applications. By editing directly at the bytecode level, you can make changes without worrying about missing imports or non-Java features or compiler or decompiler bugs or anything like that.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Antimony",
            "time": "Oct 31, 2018 at 1:22",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Saturnix",
                    "text": "<span class=\"comment-copy\">Thanks for the tip, didn’t know this program. There’s a problem though: it appears to me it can only work on .class/.jar files, and not pack them back to .exe - is that the case?</span>",
                    "time": null
                },
                {
                    "user": "Antimony",
                    "text": "<span class=\"comment-copy\">@Saturnix Yes, it is only designed for working with classfiles</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In addition to what Antimony mentioned, you may also consider using\n  <a href=\"http://set.ee/jbe/\" rel=\"nofollow noreferrer\">\n   Java Bytecode Editor\n  </a>\n  . I've had success with this in the past.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Daniel Sloof",
            "time": "Oct 31, 2018 at 10:02",
            "is_accepted": false,
            "comments": []
        }
    ]
}