{
    "title": "How to recognize PE sections containing code?",
    "link": "https://reverseengineering.stackexchange.com/questions/11311/how-to-recognize-pe-sections-containing-code",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Generally, what is the criterion by which to decide whether a PE section contains code or not?\n </p>\n <p>\n  Specifically, is a\n  <code>\n   .text\n  </code>\n  or\n  <code>\n   .code\n  </code>\n  section\n  <strong>\n   always\n  </strong>\n  considered to contain code? And what is the relationship between the\n  <code>\n   IMAGE_SCN_CNT_CODE\n  </code>\n  flag (0x00000020) and\n  <code>\n   IMAGE_SCN_MEM_EXECUTE\n  </code>\n  flag (0x20000000) - can we consider a section with at least one of those two as definitely containing code?\n </p>\n <p>\n  Is there a hard static rule to recognize code sections?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "windows",
        "pe",
        "section"
    ],
    "user": "nedim",
    "time": "Nov 11, 2015 at 16:00",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <p>\n   Specifically, is a\n   <code>\n    .text\n   </code>\n   or\n   <code>\n    .code\n   </code>\n   section\n   <strong>\n    always\n   </strong>\n   considered to contain code?\n  </p>\n </blockquote>\n <p>\n  No.\n </p>\n <blockquote>\n  <p>\n   And what is the relationship between the\n   <code>\n    IMAGE_SCN_CNT_CODE\n   </code>\n   flag (0x00000020) and\n   <code>\n    IMAGE_SCN_MEM_EXECUTE\n   </code>\n   flag (0x20000000)\n  </p>\n </blockquote>\n <p>\n  The former is ignored by the Windows PE loader. The latter is used by the Windows PE loader such that if the flag is set then the pages for that section are marked as executable in memory (via\n  <a href=\"https://en.wikipedia.org/wiki/NX_bit\">\n   https://en.wikipedia.org/wiki/NX_bit\n  </a>\n  ).\n </p>\n <blockquote>\n  <p>\n   can we consider a section with at least one of those two as definitely containing code?\n  </p>\n </blockquote>\n <p>\n  Not\n  <strong>\n   always\n  </strong>\n  , no.\n </p>\n <blockquote>\n  <p>\n   Generally, what is the criterion by which to decide whether a PE section contains code or not?\n  </p>\n </blockquote>\n <p>\n  While the\n  <code>\n   .text\n  </code>\n  /\n  <code>\n   .code\n  </code>\n  sections will\n  <em>\n   usually\n  </em>\n  contain code, and a section with the\n  <code>\n   IMAGE_SCN_MEM_EXECUTE\n  </code>\n  flag will\n  <em>\n   usually\n  </em>\n  contain code, the only real way to say that a section definitely contains code is if the CPU actually executes code in that section at runtime.\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "Jason Geffner",
            "time": "Nov 11, 2015 at 16:07",
            "is_accepted": true,
            "comments": [
                {
                    "user": "nedim",
                    "text": "<span class=\"comment-copy\">I just turned the <code>IMAGE_SCN_MEM_EXECUTE</code> flag off on the only PE section which had it and the sample executable still runs with no problems. What am I missing here?</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">Is <a href=\"http://windows.microsoft.com/en-us/windows7/Change-Data-Execution-Prevention-settings?SignedIn=1\" rel=\"nofollow noreferrer\">DEP enabled</a> for your sample executable?</span>",
                    "time": null
                },
                {
                    "user": "nedim",
                    "text": "<span class=\"comment-copy\">DEP is enabled on Windows programs only and this one does not belong to that group. Does this mean that Windows does not care whether code will get executed from non-executable sections if DEP is off for the given PE file? And if DEP was on?</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">With DEP disabled for your application (as is currently the case), it means that the process will be able to execute code in pages that don't have the executable-flag set (as you said, \"the sample executable still runs with no problems\"). With DEP enabled for your application, it means that the process will crash when trying to execute code in pages that don't have the executable-flag set.</span>",
                    "time": null
                },
                {
                    "user": "nedim",
                    "text": "<span class=\"comment-copy\">I understand that DEP will prevent the execution, but it is really counterintuitive that Windows PE loader does not care whether the address pointed to by the entry point resides in an executable section or not. It feels like the creators of PE and the loader did their best to enable malware to hide.</span>",
                    "time": null
                }
            ]
        }
    ]
}