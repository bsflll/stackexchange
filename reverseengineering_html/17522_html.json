{
    "title": "Commands to step into and step over, outside of visual pane mode",
    "link": "https://reverseengineering.stackexchange.com/questions/17522/commands-to-step-into-and-step-over-outside-of-visual-pane-mode",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The\n  <a href=\"https://radare.gitbooks.io/radare2book/content/introduction/basic_debugger_session.html\" rel=\"nofollow noreferrer\">\n   Radare book\n  </a>\n  says\n </p>\n <blockquote>\n  <p>\n   Use\n   <kbd>\n    F7\n   </kbd>\n   or s to\n   <em>\n    step into\n   </em>\n   and\n   <kbd>\n    F8\n   </kbd>\n   or S to\n   <em>\n    step over\n   </em>\n   current instruction.\n  </p>\n </blockquote>\n <p>\n  But, I don't see it telling you how to do this with the\n  <code>\n   d\n  </code>\n  command. When I run\n  <code>\n   d?\n  </code>\n  I see\n </p>\n <pre><code>ds[?]                   Step, over, source line\ndc[?]                   Continue execution\n</code></pre>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "7k",
    "tags": [
        "debugging",
        "radare2"
    ],
    "user": "Evan Carroll",
    "time": "Dec 11, 2018 at 23:05",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I did't find this to be too intuitive, but the answer is\n  <code>\n   ds\n  </code>\n  . Now it makes sense though:\n  <code>\n   ds\n  </code>\n  expands to a bunch of stuff,\n </p>\n <pre><code>[0x55673eccb5fa]> ds?\n|Usage: ds Step commands\n| ds               Step one instruction\n| ds <num>         Step <num> instructions\n| dsb              Step back one instruction\n| dsf              Step until end of frame\n| dsi <cond>       Continue until condition matches\n| dsl              Step one source line\n| dsl <num>        Step <num> source lines\n| dso <num>        Step over <num> instructions\n| dsp              Step into program (skip libs)\n| dss <num>        Skip <num> step instructions\n| dsu[?]<address>  Step until address\n| dsui[r] <instr>  Step until an instruction that matches `instr`, use dsuir for regex match\n| dsue <esil>      Step until esil expression matches\n| dsuf <flag>      Step until pc == flag matching name\n</code></pre>\n <p>\n  While\n  <em>\n   really\n  </em>\n  cool, there are a tons of ways to\n  <code>\n   step\n  </code>\n  and they're all organized under\n  <code>\n   ds\n  </code>\n  .\n </p>\n <ul>\n  <li>\n   <kbd>\n    F7\n   </kbd>\n   is step into, or\n   <code>\n    ds\n   </code>\n  </li>\n  <li>\n   <kbd>\n    F8\n   </kbd>\n   is step over, or\n   <code>\n    dso\n   </code>\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Evan Carroll",
            "time": "Feb 23, 2018 at 0:47",
            "is_accepted": true,
            "comments": []
        }
    ]
}