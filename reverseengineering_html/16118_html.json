{
    "title": "Disassembling MIPS 32 version 1 binary with the Radare2 Framework",
    "link": "https://reverseengineering.stackexchange.com/questions/16118/disassembling-mips-32-version-1-binary-with-the-radare2-framework",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to disassemble a MIPS 32 version 1 binary with the Radare2 framework.\n </p>\n <p>\n  Here is the full output of the\n  <code>\n   file\n  </code>\n  command:\n </p>\n <pre><code>ELF 32-bit LSB executable, MIPS, MIPS32 version 1 (SYSV), dynamically linked, \ninterpreter /lib/ld-uClibc.so.0, stripped\n</code></pre>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "3k",
    "tags": [
        "disassembly",
        "binary-analysis",
        "elf",
        "radare2",
        "mips"
    ],
    "user": "John Thomson",
    "time": "Aug 17, 2017 at 9:10",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  First of all, make sure you run the latest version of radare2 from git repository:\n </p>\n <pre><code>$ git clone https://github.com/radare/radare2.git\n$ cd radare2\n$ ./sys/install.sh\n</code></pre>\n <p>\n  If you donâ€™t want to install the git version or you want the binaries for another machine (Windows, OS X, iOS, etc) check out the\n  <a href=\"http://radare.org/r/down.html\" rel=\"nofollow noreferrer\">\n   download page\n  </a>\n  at the radare2 website.\n </p>\n <p>\n  To open\n  <code>\n   MIPS\n  </code>\n  binary with radare2, simply use the following command:\n </p>\n <pre><code>radare2 -a mips -b 32 ./file\n</code></pre>\n <ul>\n  <li>\n   <code>\n    -a\n   </code>\n   arch - set asm.arch (x86, ppc, arm, mips, bf, java, ...)\n  </li>\n  <li>\n   <code>\n    -b\n   </code>\n   bits - set asm.bits (16, 32, 64)\n  </li>\n </ul>\n <p>\n  Don't forget to read the manual (\n  <code>\n   man r2\n  </code>\n  ), it's all there.\n </p>\n <p>\n  For more relative information you can watch Andrew McDonnell's\n  <a href=\"https://www.youtube.com/watch?v=R3sGlzXfEkU\" rel=\"nofollow noreferrer\">\n   talk\n  </a>\n  called \"\n  <em>\n   Reverse engineering embedded software using radare2\n  </em>\n  \" (slides:\n  <a href=\"http://rada.re/get/r2embed-auckland2015.pdf\" rel=\"nofollow noreferrer\">\n   link\n  </a>\n  ).\n </p>\n <p>\n  If you feel that you need more basic information about radare2 and how to use it, I recommend the following sources:\n </p>\n <ol>\n  <li>\n   <a href=\"https://www.gitbook.com/book/radare/radare2book/details\" rel=\"nofollow noreferrer\">\n    Radare2 Book\n   </a>\n  </li>\n  <li>\n   <a href=\"https://www.gitbook.com/book/monosource/radare2-explorations/details\" rel=\"nofollow noreferrer\">\n    Radare2 Explorations\n   </a>\n  </li>\n  <li>\n   <a href=\"https://www.youtube.com/watch?v=fnpBy3wWabA\" rel=\"nofollow noreferrer\">\n    Radare Demystified\n   </a>\n   (Talk)\n  </li>\n </ol>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Megabeets",
            "time": "Aug 16, 2017 at 22:21",
            "is_accepted": true,
            "comments": [
                {
                    "user": "John Thomson",
                    "text": "<span class=\"comment-copy\">Thanks for the response Megabeets but my system can run MIPS code and I don't have qemu installed. Wouldn't that command (radare2 -a mips -b 32 ./file) try to run the file because of the ./?</span>",
                    "time": null
                },
                {
                    "user": "Megabeets",
                    "text": "<span class=\"comment-copy\">The command will not execute the file. In order to execute the file (i.e open it in debug mode) you need to pass the <code>-d</code> flag to radare. The command mentioned before will open the binary in read-only mode and will help you to conduct static analysis. The prepended \"./\" just means that the file is in the current folder. You can avoid it and simply call it with <code>r2 -a mips -b 32 filename</code></span>",
                    "time": null
                }
            ]
        }
    ]
}