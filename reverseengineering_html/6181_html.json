{
    "title": "iat errors in rebuilt executable",
    "link": "https://reverseengineering.stackexchange.com/questions/6181/iat-errors-in-rebuilt-executable",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have rebuilt the iat table of a UPX packed to the point where there are no invalid thunks (All \"Yes\"), I then fix the dump though when I open the final fixed executable in impRec I get invalid thunks which I originally sorted alongside some new invalid thunks. I'm getting the same results with multiple versions of UPX, this is the final hurdle for me in fully unpacking the packed executables, where am I going wrong.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 3,
    "views": "2k",
    "tags": [
        "iat"
    ],
    "user": "user28130",
    "time": "Sep 5, 2014 at 16:49",
    "comments": [
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n Does the rebuilt file run properly without crashing ? Also if you have already fixed the IAT, why are you reopening it in ImpRec ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user28130",
            "text": "<html><body><span class=\"comment-copy\">\n I'm reopening it just to verify if all the imports were resolved correctly after I fixed the dump with all resolved imports.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Try using\n  <a href=\"https://github.com/NtQuery/Scylla\" rel=\"nofollow\">\n   Scylla\n  </a>\n  for import reconstruction as ImpRec is outdated (The last update is from 2011, and form a third-party) and known for having problems nowadays.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "jvoisin",
            "time": "Oct 8, 2014 at 13:22",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  upx - d didnt work ? for some, when rebuilding the import can be a forwarded import, which sometimes doesnt resolve correctly, this happened a lot in cracks made on vista and higher (typically the SetLastError api)\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "evlncrn8",
            "time": "Sep 5, 2014 at 17:40",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user28130",
                    "text": "<span class=\"comment-copy\">I'm using windows and unpacking some unpackmes. I understand what you mean about forward imports not resolving correctly but I managed to resolve all import thunks correctly using ImpRec though when I fix the dump and open the unpacked executable in ImpRec I get unresolved pointers and errors that I supposedly fixed before when I was rebuilding the dump.</span>",
                    "time": null
                },
                {
                    "user": "evlncrn8",
                    "text": "<span class=\"comment-copy\">hmm, are you sure you're rebuilding the right iat? as imprec sort of autoscans, so it might see the packer iat first, then the real one...</span>",
                    "time": null
                },
                {
                    "user": "user28130",
                    "text": "<span class=\"comment-copy\">I open it up once I am at the oep and have made changes to resolve pointers, this seems to work though confused as to why unpacked executable when opened in ImpRec later shows invalid thunks.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Import REConstructor rebuilds the Import Table,\n  <em>\n   not\n  </em>\n  the Import Address Table.\n </p>\n <p>\n  If you want to verify that Import REConstructor worked correctly, you'd be better off examining the resulting EXE with an Import Table tool such as\n  <a href=\"http://www.dependencywalker.com/\" rel=\"nofollow\">\n   Dependency Walker\n  </a>\n  . There's no point in examining the resulting EXE (once it's loaded) with Import REConstructor because its displayed output is based on the runtime Import Address Table, which was never rebuilt.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Jason Geffner",
            "time": "Sep 6, 2014 at 15:34",
            "is_accepted": false,
            "comments": []
        }
    ]
}