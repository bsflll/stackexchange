{
    "title": "Is reverse engineering and using parts of a closed source application legal?",
    "link": "https://reverseengineering.stackexchange.com/questions/60/is-reverse-engineering-and-using-parts-of-a-closed-source-application-legal",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Is it legal to reverse engineer certain features of a closed source application and then integrate those features into a closed or open source application that may be either a commercial or non-commercial application ?\n </p>\n <hr/>\n <p>\n  Brownie points for an answer covering the situation in India.\n </p>\n</div>\n</body></html>",
    "votes": "48",
    "answers": 4,
    "views": "46k",
    "tags": [
        "law"
    ],
    "user": "asheeshr",
    "time": "Mar 22, 2013 at 19:45",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <h2>\n  In the United States\n </h2>\n <p>\n  The short answer is no for the purposes you've stated in your question, but keep reading to see exactly what is allowed. Also worth reading are the two links included herein.\n </p>\n <p>\n  In the U.S., Section 103(f) of the Digital Millennium Copyright Act (DMCA) (\n  <a href=\"http://www.law.cornell.edu/uscode/text/17/1201\" rel=\"noreferrer\">\n   17 USC ยง 1201 (f)\n  </a>\n  - Reverse Engineering) specifically states that it is legal to reverse engineer and circumvent the protection to achieve interoperability between computer programs (such as information transfer between applications). Interoperability is defined in paragraph 4 of Section 103(f).\n </p>\n <p>\n  It is also often lawful to reverse-engineer an artifact or process as long as it is obtained legitimately. If the software is patented, it doesn't necessarily need to be reverse-engineered, as patents require a public disclosure of invention. It should be mentioned that, just because a piece of software is patented, that does not mean the entire thing is patented; there may be parts that remain undisclosed.\n </p>\n <p>\n  Also of note is that in the U.S. most End-User License Agreements (EULAs) specifically prohibit reverse-engineering. Courts have found such contractual prohibitions to override the copyright law which expressly permits it (\n  <a href=\"https://law.resource.org/pub/us/case/reporter/F3/320/320.F3d.1317.01-1109.01-1108.html\" rel=\"noreferrer\">\n   <em>\n    Bowers v. Baystate Technologies\n   </em>\n   , 320 F.3d 1317 (Fed. Cir. 2003)\n  </a>\n  ).\n </p>\n <p>\n  In other words, for your purposes, it sounds like it would be illegal to integrate features from a reverse-engineered program into another program for commercial or non-commercial use. If you were trying to enable interoperability (again, see Section 103(f), noted above), that would be different.\n </p>\n <h2>\n  <strong>\n   In India\n  </strong>\n </h2>\n <p>\n  From what I can find, the direct reverse engineering of software, in whole or in part, for use in your own software for commercial use, is protected under copyright. The protected reasons for reverse engineering are similar to those in the United States. According to the article\n  <a href=\"http://kvtrust.blogspot.com/2007/09/trade-secret-contract-and-reverse.html\" rel=\"noreferrer\">\n   Trade Secret, Contract and Reverse Engineering\n  </a>\n  (also note end note 5), the copyright act broadly protects actions (including reverse engineering) for the following purposes:\n </p>\n <ul>\n  <li>\n   Obtaining information essential for achieving interoperability of an independently created computer program with other programs if such information is not otherwise readily available.\n  </li>\n  <li>\n   Determining the ideas and principles underlying any element of the program for which the computer program was supplied.\n  </li>\n  <li>\n   Making copies or adaptations of a legally obtained copy of the computer program for non-commercial, personal use.\n  </li>\n </ul>\n <p>\n  Additionally, due to section 23 of the Indian Contract Act, which handles all contracts including License Agreements, a contract is declared void if it goes against public policy. Section 52 of the Copyright Act declares public policy concerning reverse engineering, which is that it is permitted in a limited way. A contract (or EULA), prohibiting reverse engineering in software to the extent permitted by the Copyright Act, may not stand in a court of law.\n </p>\n <p>\n  Section 52, subsections (aa) through (ad) of the Copyright Act explain these protected acts (see\n  <a href=\"http://copyright.gov.in/Documents/CopyrightRules1957.pdf\" rel=\"noreferrer\">\n   Indian Copyright Act 1957\n  </a>\n  , page 33, along with section 18 of\n  <a href=\"http://copyright.lawmatters.in/2012/06/impact-of-2012-amendments-to-copyright.html\" rel=\"noreferrer\">\n   these revisions from 2012\n  </a>\n  ). Another source (though possibly a bit outdated) is\n  <a href=\"http://www.123helpme.com/view.asp?id=36962\" rel=\"noreferrer\">\n   Software Patent and Copyright Laws in India\n  </a>\n  (a paper) with its footnotes.\n </p>\n</div>\n</body></html>",
            "votes": "34",
            "user": "JMcAfreak",
            "time": "Nov 7, 2014 at 18:14",
            "is_accepted": true,
            "comments": [
                {
                    "user": "jww",
                    "text": "<span class=\"comment-copy\">I think this would be easy enough to sidestep: <i>\"... it would be illegal to integrate features from a reverse-engineered program into another program for commercial or non-commercial use.\"</i> About all that would take is an anonymous account to dump the information into public domain. Then, incorporate the information that was \"found on the web\" into the app. Tor and a few other technologies make it rather easy to remain anonymous. RSA Data Security's RC4 and the <a href=\"https://groups.google.com/d/msg/sci.crypt/JsO3xEATGFA/_HcLTJxgVIgJ\" rel=\"nofollow noreferrer\">anonymous posting of ARC4</a> would probably be a good model.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Article 6 of the 1991 EU Computer Programs Directive allows reverse engineering for the purposes of interoperability, but prohibits it for the purposes of creating a competing product, and also prohibits the public release of information obtained through reverse engineering of software (\n  <a href=\"http://en.wikipedia.org/wiki/Reverse_engineering#European_Union\">\n   source\n  </a>\n  ).\n </p>\n <p>\n  That makes the answer NO, at least for the EU (you didn't state the country to which your question applies).\n </p>\n</div>\n</body></html>",
            "votes": "24",
            "user": "Remko",
            "time": "Mar 20, 2013 at 13:29",
            "is_accepted": false,
            "comments": [
                {
                    "user": "jyz",
                    "text": "<span class=\"comment-copy\">I know a company in US that make use of RE to interoperability applications, so I'm affraid it's legal in US (just guessing).</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@jyzuz: enabling interoperability is one thing. Taking chunks of code from the competitor's application is another.</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@Igor Skochinsky: strictly speaking there is no way to take a chunk of code. Even with your Hex-Rays plugin, which I trust as an employee you have access to, doesn't give 100% accuracy. But of course it would provide means to disclose implementation details. So it's a bit difficult.</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@0xC0000022L: I was speaking figuratively. I did not mean \"copy raw bytes\" but more like \"extract the algorithms and use them unchanged\". Or use e.g. decompiled .NET code.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I still maintain that the question is too open-ended as it stands.\n </p>\n <h1>\n  A broader perspective\n </h1>\n <p>\n  I think RCE always includes the aspect of ethics. Just like a nuclear scientist possesses a wealth of specialized information that can be used for good and bad, so does the reverse engineer.\n </p>\n <p>\n  Strictly speaking implementing\n  <em>\n   a feature\n  </em>\n  is fishy. Very fishy indeed.\n  <a href=\"https://en.wikipedia.org/wiki/ReactOS\" rel=\"noreferrer\">\n   ReactOS\n  </a>\n  would be a good example of how to deal with that situation. The method is called \"clean room reverse engineering\". Even more fishy would be to re-implement something based on the implementation details but without the\n  <a href=\"https://en.wikipedia.org/wiki/Clean_room_design\" rel=\"noreferrer\">\n   clean room\n  </a>\n  approach.\n </p>\n <h2>\n  Clean room reverse engineering\n </h2>\n <p>\n  Roughly the point here is that one party looks at the original implementation and code (the reverse engineer). S/he documents the implementation details. As you can imagine this may be important in cases such as ReactOS which strives for binary compatibility. If you read the book \"The Old New Thing\" by Raymond Chen you will understand immediately what I mean.\n </p>\n <p>\n  Another party (the developer, so to speak - important point is that those parties are indeed different individuals, I think schizophrenia doesn't count, though) then uses that documentation of the implementation details and re-implements it. Now,\n  <a href=\"https://en.wikipedia.org/wiki/IANAL\" rel=\"noreferrer\">\n   IANAL\n  </a>\n  , but given ReactOS which thrives on contributions of developers from all over the world hasn't been sued to nirvana, so I suspect this is legally alright. Whether you\n  <em>\n   or others\n  </em>\n  deem it ethical is another thing.\n </p>\n <h2>\n  However ...\n </h2>\n <p>\n  ... what I don't understand from your question: why\n  <em>\n   re-implement\n  </em>\n  something that exists in proprietary form? Sure, to provide interoperability (say\n  <a href=\"https://en.wikipedia.org/wiki/OpenOffice\" rel=\"noreferrer\">\n   OOo\n  </a>\n  reading the MS Office formats) this makes sense. But overall isn't it smarter to use\n  <strong>\n   ideas\n  </strong>\n  from the existing application and implement these? Probably extending them and surpassing the existing function in features and functionality?\n </p>\n <p>\n  The problem with ideas is that there are countries with software patents and the big players are lobbying heavily even in jurisdictions such as the EU to get legislation passed to allow software patents openly. For now they only exist in niches of existing legislation and due to the fact that the officials of the EPO (and national POs) aren't necessarily the most knowledgeable in new technologies.\n </p>\n <p>\n  You should be on the safe side with interoperability\n  <em>\n   for the most part\n  </em>\n  , even with FLOSS, again drawing from the de facto state where projects such as OpenOffice.org and LibreOffice weren't sued to nirvana either. The same holds for Samba, where Microsoft even invited developers of the project to talk to the Microsoft developers.\n </p>\n <p>\n  Your best course of action will be to seek legal advice in your country. It doesn't mean that this applies to other jurisdictions as well, but it will give you a start.\n </p>\n <h1>\n  In Germany\n </h1>\n <p>\n  Although the EU directive mentioned by Remko exists, in Germany the copyright holders have pushed through quite extensive changes to the \"Urheberrecht\" (abbrev: UrhG), which isn't quite identical with copyright from countries whose legislation is based on\n  <a href=\"https://en.wikipedia.org/wiki/Common_Law\" rel=\"noreferrer\">\n   Common Law\n  </a>\n  (notably the USA). These changes also resulted in the addition of so so called\n  <a href=\"https://de.wikipedia.org/wiki/Hackerparagraph\" rel=\"noreferrer\">\n   \"Hackerparagraph\"\n  </a>\n  in the penal code (ยง 202c, StGB).\n </p>\n <p>\n  That paragraph stipulates (free form translation of the Legalese, original text in the above linked Wikipedia article):\n </p>\n <ul>\n  <li>\n   (1) Whoever prepares a punishable crime according to ยง 202a or ยง 202b by producing or acquiring, selling, ceding access to publishing or otherwise making available passwords, security codes - allowing access to data (\n   <em>\n    ยง 202a subparagraph 2\n   </em>\n   ) - or computer programs whose purpose is the perpetration of such act, will be punished with imprisonment up to one year or a fine.\n  </li>\n </ul>\n <p>\n  This is the most important part and you can see why Germans take \"pride\" in the body of judicial literature which allegedly surpasses the amounts of literature to be found in the biggest libraries.\n </p>\n <p>\n  Anyway, the problem should be obvious and if it isn't I shall duly point it out. The problem is that there is no definition in the law what comprises such tool. Is IDA Pro such a tool? What about OllyDbg? What about WinDbg? What about GDB or Immunity Debugger? What about Metasploit? There are literally so many possibilities for violating that law that organizations such as the\n  <a href=\"https://en.wikipedia.org/wiki/Chaos_Computer_Club\" rel=\"noreferrer\">\n   CCC\n  </a>\n  and its members and sympathizers have criticized it many times over. To no avail.\n </p>\n <p>\n  TL;DR: in Germany this is an even more slippery slope. It even resulted in cases where books became virtually useless in the German edition because the author is liable under the Hackerparagraph.\n </p>\n</div>\n</body></html>",
            "votes": "14",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I think questions beginning with the clause \"Is it legal to...\" can only ever be correctly answered with certainty in a court of law. And as @0xC0000022L mentioned, you'd need to start by specifying which country you're asking about.\n </p>\n <p>\n  Short of going to court, I think such questions can only ever be answered correctly with the phrase, \"It depends.\"\n </p>\n <p>\n  From the other answers, it seems well-known within this community that reverse engineering something is very closely connected to both\n  <a href=\"http://www.copyright.gov/regstat/2013/regstat03202013.html\">\n   copyright law\n  </a>\n  and the\n  <a href=\"https://www.eff.org/issues/cfaa\">\n   Computer Fraud and Abuse Act\n  </a>\n  , both of which (as the links attest) are hotly contested right now in the US.\n </p>\n <p>\n  Harvard Law School has recently published a\n  <a href=\"http://boingboing.net/2013/03/04/copyrightx-a-massively-open-o.html\">\n   massively open online course on copyright\n  </a>\n  . The professor\n  <a href=\"http://www.tfisher.org/PTK.htm\">\n   published a book\n  </a>\n  on copyright reform in 2004. He also started\n  <a href=\"http://www.tfisher.org/Disclosure.htm\">\n   Noank Media, Inc. in 2007\n  </a>\n  to try and implement one of the ideas in his book in China. Although his MOOC lectures and readings are all available globally, I'm taking this course through\n  <a href=\"https://www.edx.org/\">\n   edX\n  </a>\n  right now, and even with the benefit of several law students to help answer questions, there's still a\n  <em>\n   tremendous\n  </em>\n  amount of information and ambiguity to consider (even limiting the scope of my answer here to copyright and not dealing with the CFAA). As @JMcAfreak wrote, the DMCA also applies, and my guess is that there are several other laws that could also potentially apply to your question in the US.\n </p>\n <p>\n  What I've learned after 8 weeks in this course is that you'd need to spend at least 12 weeks reading case law before really being able to answer the question you pose here. And as Aaron Swartz discovered, the stakes are incredibly high, and computer programmers and reverse engineers (who may routinely do someโpotentially illegalโact thousands or millions of times through the use of a computer program) are especially vulnerable to multiple counts of illegal acts where the penalties add up very quickly.\n </p>\n <p>\n  If you're considering doing something that makes you ask the question, then you also need to consider who might be most motivated to pursue you for illegal activity as a result, and if that's a wealthy individual or business entity, then you probably shouldn't risk it. If Shepard Fairey had used a reference photograph for\n  <a href=\"http://en.wikipedia.org/wiki/Shepard_Fairey#Legal_issues_with_appropriation_and_fair_use\">\n   his Obama HOPE poster\n  </a>\n  owned by an entity less affluent than the Associated Press, then I'm sure that situation would have ended very differently for him.\n </p>\n</div>\n</body></html>",
            "votes": "9",
            "user": "Kevin Ford The Submariner",
            "time": "Apr 5, 2013 at 1:34",
            "is_accepted": false,
            "comments": [
                {
                    "user": "dyasta",
                    "text": "<span class=\"comment-copy\">\"What I've learned after 8 weeks in this course is that you'd need to spend at least 12 weeks reading case law before really being able to answer the question you pose here.\" - Amen to that. Nobody really knows, and, as you state, it depends on who might come after you. With this level of ambiguity, larger entities can beat you into financial submission and not even need to win their case.</span>",
                    "time": null
                },
                {
                    "user": "JMcAfreak",
                    "text": "<span class=\"comment-copy\">The DMCA changes the entire playing field for software. U.S. Copyright law has had a very significant number of cases that have shaped the definition of Derivative Works and Fair Use (including reverse engineering of software, the most prominent case being <i>Sega Enterprises Ltd. v. Accolade, Inc.</i>, 977 F.2d 1510 (9th Cir. 1992)). Since the passing of the DMCA, though, there hasn't been much, if any, litigation on fair use and derivative works in the field of computer software. I'm actually currently researching Derivative Works and Fair Use, so I'll keep you posted.</span>",
                    "time": null
                }
            ]
        }
    ]
}