{
    "title": "Mutable parts of PE files in memory",
    "link": "https://reverseengineering.stackexchange.com/questions/12783/mutable-parts-of-pe-files-in-memory",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I currently try to figure out, what actually happens to a\n  <code>\n   PE File\n  </code>\n  in memory. To reword it: How could\n  <code>\n   PE files\n  </code>\n  differ, when they run on different computers and what are the mutable parts of a PE file, when they are loaded into memory?\n </p>\n <p>\n  My overall goal is to understand, what a\n  <strong>\n   normalization process of memory dumps\n  </strong>\n  of specific processes could look like (as mentioned\n  <a href=\"https://www.google.com/patents/US20090313700\" rel=\"nofollow\">\n   here\n  </a>\n  for example).\n </p>\n <p>\n  <strong>\n   My understanding so far:\n  </strong>\n </p>\n <ul>\n  <li>\n   Sections getting mapped to different locations\n  </li>\n  <li>\n   Sections get page-aligned\n  </li>\n  <li>\n   IAT gets updated\n  </li>\n  <li>\n   Base relocations are performed\n  </li>\n </ul>\n <p>\n  Did I miss anything?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "144",
    "tags": [
        "pe",
        "memory-dump"
    ],
    "user": "knx",
    "time": "Jun 2, 2016 at 15:28",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n i think it talks about code that has equivalent operations what you mention are standard changes i think with normalization in that article it could mean  add eax , 1 = inc eax  is normalised?? as  plus()  or a plus() label is assigned when all equivalent instructions are met in a sequence well cant stand the legalese so just glanced around\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Vitaly Osipov",
            "text": "<html><body><span class=\"comment-copy\">\n I believe PE file format and how it works is excessively documented\n <a href=\"https://www.google.com.au/search?q=pe+file+in+memory\" rel=\"nofollow noreferrer\">\n  google.com.au/search?q=pe+file+in+memory\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "knx",
            "text": "<html><body><span class=\"comment-copy\">\n As @blabb already mentioned, i try to figure out, how the normalization process is performed. Perhaps the \"basic\" normalization of PE loader based changes lead to confusion. Sorry!\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "peter ferrie",
            "text": "<html><body><span class=\"comment-copy\">\n the TLS section will have its index assigned\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}