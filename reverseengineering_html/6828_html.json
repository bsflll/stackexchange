{
    "title": "Hints to reverse engineering a QT software",
    "link": "https://reverseengineering.stackexchange.com/questions/6828/hints-to-reverse-engineering-a-qt-software",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am facing a little bit of problem during reverse a QT application with Ollydbg or IDA.\n </p>\n <p>\n  This software use a protection schema to indetify the number of click made on a QList. After a random amount of click on list rows replace the content of the list with a blank string. That's give me troubles because the protection is dinamic.\n </p>\n <p>\n  Someone of you can point me to some hints to work with QT application or explain me how to identify an event (signal/slot) and work on it please?\n </p>\n <p>\n  Any help will be appreciated, i have searching a lot but there aren't tutorial or documentation about QT reversing...\n </p>\n <p>\n  Thanks\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 2,
    "views": "11k",
    "tags": [
        "ida",
        "ollydbg",
        "patch-reversing",
        "qt"
    ],
    "user": "itseeder",
    "time": "Dec 15, 2014 at 8:51",
    "comments": [
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n These documents should get you started\n <a href=\"http://www.ntcore.com/files/qtrev.htm\" rel=\"nofollow noreferrer\">\n  1\n </a>\n , and\n <a href=\"https://tuts4you.com/download.php?view.3216\" rel=\"nofollow noreferrer\">\n  2\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "itseeder",
            "text": "<html><body><span class=\"comment-copy\">\n Thanks, already read these. But i need something more deep in assembly to understand properly.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I would try another approach, without using Olly or IDA, get Cheat Engine, attach it to your software and give X clicks. Search that int value on C.E., and increment while searching too.\n  \n\n  Cheat Engine will \"catch\" the variable faster than searching through regular debuggers.\nSet the var to 0 and lock it.\n  \n\n  Yes, I know C.E. is not a reversing tool, but in this case, and given your RE experience, seems the most fit.\n  \n\n  Or, send the link/.exe and I'm willing to help you.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Filipe YaBa Polido",
            "time": "Jan 13, 2015 at 22:29",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Jaffer Wilson",
                    "text": "<span class=\"comment-copy\">How to contact you,Filipe Yaba Polido?</span>",
                    "time": null
                },
                {
                    "user": "Filipe YaBa Polido",
                    "text": "<span class=\"comment-copy\">@JafferWilson I'll e-mail you in a second.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Take a look at the file Properties->Details of \"QtCore4.dll\" it uses to see what Qt version it is.\n  \n\n  Go to\n  <a href=\"http://www.qt.io/download/\" rel=\"nofollow\">\n   Qt website download page\n  </a>\n  and get the matching version.\n  \n\n  There are both full source and compiled distributions there.\n  \n\n  You will probably have to rebuild it to match your application's compile settings.\n  \n\n  For instance if you see the application is using \"msvcr100.dll\" then you know it's using \"Visual Studio 2010\".\n  \n\n  This way you might be able to build compatible import libs to use from an injected DLL, and the example/samples should be close to your target for examination.\n </p>\n <p>\n  You should read up on at least the basics of Qt.\n </p>\n <p>\n  You say it's using a QList then take a look here:\n  <a href=\"http://qt-project.org/doc/qt-4.8/qlist.html\" rel=\"nofollow\">\n   http://qt-project.org/doc/qt-4.8/qlist.html\n  </a>\n  \n\n  Although that is not a widget, it must be some sort of list or list view type based on your description.\n </p>\n <p>\n  Look at the Qt imports in the application.  Like at instances of the \"QWidget\" ctor for example to find out where various widgets are being created.\n </p>\n <p>\n  If you can inject a DLL you can probe by setting a hotkey to call static methods \"QApplication::allWidgets()\" or \"QApplication::topLevelWidgets()\" to get list of all the controls with info facilitated from accessors like \"windowTitle()\", etc.\n </p>\n <p>\n  The logical/obvious places to look are at the control that is being manipulated, and the mouse click signals/events that it has setup.\n </p>\n <p>\n  You just got to start digging in and break things down. \nDon't know your experience level, but in reversing often\n  <strong>\n   \"the hard way\"\n  </strong>\n  is the right and, or, the only way..\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Sirmabus",
            "time": "Jan 12, 2015 at 10:47",
            "is_accepted": false,
            "comments": []
        }
    ]
}