{
    "title": "Radare's `aaaa` and -AA what does it do, exactly?",
    "link": "https://reverseengineering.stackexchange.com/questions/19895/radares-aaaa-and-aa-what-does-it-do-exactly",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  When I run\n  <code>\n   aaa\n  </code>\n  , Radare tells me,\n </p>\n <pre><code>[x] Use -AA or aaaa to perform additional experimental analysis.\n</code></pre>\n <p>\n  But what does\n  <code>\n   aaaa\n  </code>\n  do? It's not documented under\n  <code>\n   aa?\n  </code>\n  nor\n  <code>\n   aaa?\n  </code>\n  nor\n </p>\n <pre><code>[0x000028e0]> aaa?\nUsage: See aa? for more help\n[0x000028e0]> aaaa?\nUsage: See aa? for more help\n</code></pre>\n <p>\n  And\n  <code>\n   man radare\n  </code>\n  isn't more useful only saying,\n </p>\n <pre><code> -A  run 'aaa' command before prompt or patch to analyze all referenced code. Use -AA to run aaaa\n</code></pre>\n <p>\n  <code>\n   radare --help\n  </code>\n  , says\n </p>\n <pre><code> -A run 'aaa' command to analyze all referenced code\n</code></pre>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "3k",
    "tags": [
        "radare2",
        "static-analysis"
    ],
    "user": "Evan Carroll",
    "time": "Nov 16, 2018 at 2:22",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  When you execute the\n  <code>\n   aaa\n  </code>\n  command, radare is showing you what are the steps it takes. Each step has the command responsible for it inside parentheses.\n </p>\n <pre><code>[0x00000000]> aaa\n[x] Analyze all flags starting with sym. and entry0 (aa)\n[x] Analyze function calls (aac)\n[x] Analyze len bytes of instructions for references (aar)\n[x] Constructing a function name for fcn.* and sym.func.* functions (aan)\n[x] Type matching analysis for all functions (afta)\n[x] Use -AA or aaaa to perform additional experimental analysis.\n</code></pre>\n <p>\n  As you can see,\n  <code>\n   aaa\n  </code>\n  is a command which is executing other commands. It also prints a short description of what each command is doing. A little bit more detailed information can be found under\n  <code>\n   aa?\n  </code>\n  . So, to append this information together:\n </p>\n <ul>\n  <li>\n   aa - alias for\n   <code>\n    af@@ sym.*;af@entry0;afva\n   </code>\n  </li>\n  <li>\n   aac - analyze function calls (\n   <code>\n    af @@ `pi len~call[1]`\n   </code>\n   )\n  </li>\n  <li>\n   aar - analyze len bytes of instructions for references\n  </li>\n  <li>\n   aan - autoname functions that either start with\n   <code>\n    fcn.*\n   </code>\n   or\n   <code>\n    sym.func.*\n   </code>\n  </li>\n  <li>\n   afta - do type matching analysis for all functions\n  </li>\n </ul>\n <p>\n  Similar to\n  <code>\n   aaa\n  </code>\n  , this information is being printed when\n  <code>\n   aaaa\n  </code>\n  is executed.\n </p>\n <pre><code>[0x00000000]> aaaa\n[x] Analyze all flags starting with sym. and entry0 (aa)\n[x] Analyze function calls (aac)\n[x] Analyze len bytes of instructions for references (aar)\n[x] Constructing a function name for fcn.* and sym.func.* functions (aan)\n[x] Enable constraint types analysis for variables\n</code></pre>\n <p>\n  The main change of\n  <code>\n   aaaa\n  </code>\n  is \"[x] Enable constraint types analysis for variables\". This basically enables the\n  <code>\n   anal.types.constraint\n  </code>\n  configuration variable.\n </p>\n <pre><code>[0x00000000]> e? anal.types.constraint\nanal.types.constraint: Enable constraint types analysis for variables\n</code></pre>\n <hr/>\n <p>\n  On a personal note here, I would suggest not to use\n  <code>\n   aaaa\n  </code>\n  since it is quite buggy sometimes and probably would not be necessary.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Megabeets",
            "time": "Nov 16, 2018 at 5:27",
            "is_accepted": true,
            "comments": []
        }
    ]
}