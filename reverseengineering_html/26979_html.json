{
    "title": "Defining frame manually windbg",
    "link": "https://reverseengineering.stackexchange.com/questions/26979/defining-frame-manually-windbg",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I wonder why defining frame manually keeps failing on range error.\nAs far as I understand the syntax is :\n </p>\n <p>\n  <code>\n   .frame /c = BASE STACK RIP\n  </code>\n  where if inside MyFunc there is a call OtherFunc, the RIP should  be the next instruction after\n  <code>\n   call OtherFunc\n  </code>\n  , say in\n  <code>\n   MyFunc+0x14\n  </code>\n  .\n </p>\n <p>\n  And the stack looks like this\n </p>\n <pre><code>              MyFunc+0x14  \nBASE/STACK -> ..\n              ..\nSTACK/BASE -> ..\n              RetFromMyFunc \n</code></pre>\n <p>\n  and STACK/BASE refer to those addresses in stack. I couldn't figure out which is which but tried both options and many others. Why does it fail?\nIt is x64 of course.\n </p>\n <p>\n  Thanks.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "145",
    "tags": [
        "windbg"
    ],
    "user": "eyal karni",
    "time": "Feb 10, 2021 at 17:24",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Are You Providing all the three overrides\n  \n\n  this command is  for looking at locals of a different frame\n  \n\n  this command will work better or correct with an application having its private pdb\n </p>\n <p>\n  here is a simulated range error look how esp,ebp,eip changes in register display\n </p>\n <pre><code>0:000> r\neax=00000000 ebx=00000000 ecx=001af7dc edx=779a70f4 esi=fffffffe edi=00000000\neip=77a005a6 esp=001af7f8 ebp=001af824 iopl=0         nv up ei pl zr na pe nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246\nntdll!LdrpDoDebuggerBreak+0x2c:\n77a005a6 cc              int     3\n\n0:000> .frame /c /r = @ebp+1000 @esp-0x1000 @eip+0x300\n\n00 001b0824 00000000 ntdll!LdrpCheckAppDirType+0xa4\neax=00000000 ebx=00000000 ecx=001af7dc edx=779a70f4 esi=fffffffe edi=00000000\neip=77a008a6 esp=001ae7f8 ebp=001b0824 iopl=0         nv up ei pl zr na pe nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246\nntdll!LdrpCheckAppDirType+0xa4:\n77a008a6 7408            je      ntdll!LdrpCheckAppDirType+0xae (77a008b0) [br=1]\n\n0:000> k\n  *** Stack trace for last set context - .thread/.cxr resets it\nChildEBP RetAddr\n001b0824 00000000 ntdll!LdrpCheckAppDirType+0xa4\n\n0:000> .cxr\nResetting default scope\n\n0:000> k\nChildEBP RetAddr\n001af824 779e0e00 ntdll!LdrpDoDebuggerBreak+0x2c\n001af984 779c60a7 ntdll!LdrpInitializeProcess+0x11a9\n001af9d4 779c3659 ntdll!_LdrpInitialize+0x78\n001af9e4 00000000 ntdll!LdrInitializeThunk+0x10\n\n0:000> .frame /c /r = @ebp+1000 @esp-0x1000\n                                           ^ Range error in '.frame /c /r = @ebp+1000 @esp-0x1000 '\n\n0:000> .frame /c /r = @ebp+1000 @esp-0x1000 @eip-500\n\n00 001b0824 00000000 ntdll!LdrpLogDllRelocationEtwEvent+0x77\neax=00000000 ebx=00000000 ecx=001af7dc edx=779a70f4 esi=fffffffe edi=00000000\neip=77a000a6 esp=001ae7f8 ebp=001b0824 iopl=0         nv up ei pl zr na pe nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246\nntdll!LdrpLogDllRelocationEtwEvent+0x77:\n77a000a6 7f83            jg      ntdll!LdrpCorProcessImports+0x25 (77a0002b) \n[br=0]\n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "blabb",
            "time": "Feb 9, 2021 at 20:14",
            "is_accepted": false,
            "comments": []
        }
    ]
}