{
    "title": "Annotating the Stack in GDB?",
    "link": "https://reverseengineering.stackexchange.com/questions/1983/annotating-the-stack-in-gdb",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Is there a GUI (or even a script for the CLI) for GDB that will annotate views of the stack with saved registers, each of the frames, etc?  It should be possible to gather this information on each call and add it to a view of the stack.  Currently, I just end up looking at the stack with something like\n  <code>\n   x/40wx $esp\n  </code>\n  , which isn't amazingly enlightening.\n </p>\n</div>\n</body></html>",
    "votes": "9",
    "answers": 1,
    "views": "980",
    "tags": [
        "debuggers",
        "gdb"
    ],
    "user": "David",
    "time": "May 2, 2013 at 12:56",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Which version of GDB? Can the versions be assumed to support Python already or not? Also, only particular registers get saved with a call. Have you checked whether the\n <code>\n  frame\n </code>\n or the\n <code>\n  backtrace\n </code>\n command shows what you are interested in? Automating traversal of the frames should be possible.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As 0xC0000022L was mentioning it in the comments to your question, GDB already has such features through the\n  <code>\n   info frame\n  </code>\n  command (shorthand\n  <code>\n   i f\n  </code>\n  ) and the\n  <code>\n   backtrace\n  </code>\n  command (shorthand\n  <code>\n   bt\n  </code>\n  ).\n </p>\n <pre><code>(gdb) info frame\nStack level 0, frame at 0x7fffffffe250:\n rip = 0x400517 in foo (hello.c:6); saved rip 0x400531\n called by frame at 0x7fffffffe260\n source language c.\n Arglist at 0x7fffffffe240, args: val=10\n Locals at 0x7fffffffe240, Previous frame's sp is 0x7fffffffe250\n Saved registers:\n  rbp at 0x7fffffffe240, rip at 0x7fffffffe248\n(gdb) backtrace\n#0  foo (val=10) at hello.c:6\n#1  0x0000000000400531 in main () at hello.c:12\n(gdb)\n</code></pre>\n <p>\n  You may find some other commands about stack exploration in the GDB manual:\n  <a href=\"http://sourceware.org/gdb/current/onlinedocs/gdb/Stack.html\" rel=\"nofollow noreferrer\">\n   Examining the stack\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "6",
            "user": "perror",
            "time": "May 30, 2023 at 14:52",
            "is_accepted": false,
            "comments": []
        }
    ]
}