{
    "title": "How to switch to \"Graph View\" in IDA Pro while debugging with WinDbg inside a system DLL?",
    "link": "https://reverseengineering.stackexchange.com/questions/14264/how-to-switch-to-graph-view-in-ida-pro-while-debugging-with-windbg-inside-a-sy",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  While debugging inside a loaded\n  <code>\n   exe\n  </code>\n  process (using\n  <code>\n   IDA Pro\n  </code>\n  as a disassembler, and\n  <code>\n   WinDbg\n  </code>\n  as a debugger) I can right click the code view and select\n  <code>\n   Graph view\n  </code>\n  :\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/IC3DL.png\" rel=\"noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/IC3DL.png\"/>\n  </a>\n </p>\n <p>\n  That will switch it to this nice code-flow view that is much easier to read:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/ESTGC.png\" rel=\"noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/ESTGC.png\"/>\n  </a>\n </p>\n <p>\n  But if I step into a system DLL (in this case\n  <code>\n   mshtml.dll\n  </code>\n  ) I can't seem to get that same\n  <code>\n   Graph view\n  </code>\n  command, and instead I get this generic view:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/HIJDJ.png\" rel=\"noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/HIJDJ.png\"/>\n  </a>\n </p>\n <p>\n  So I was wondering, if there's a way to enable\n  <code>\n   Graph view\n  </code>\n  for a system DLL as well?\n </p>\n</div>\n</body></html>",
    "votes": "6",
    "answers": 1,
    "views": "29k",
    "tags": [
        "ida",
        "disassembly",
        "windows",
        "debuggers"
    ],
    "user": "c00000fd",
    "time": "Dec 28, 2016 at 6:24",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  IDA can only display functions in graph mode, so in order to see that code as a graph, you must:\n </p>\n <h3>\n  Find the start of the function\n </h3>\n <p>\n  Search for a prologue, such as\n  <code>\n   push ebp\n  </code>\n  ,\n  <code>\n   mov ebp, esp\n  </code>\n  <sup>\n   1\n  </sup>\n  , and find the start of the function. If it gets hard, you can always load debug symbols\n  <sup>\n   2\n  </sup>\n  and find the start like that.\n </p>\n <p>\n  1: Actually, most Microsoft DLLs are compiled with the hotpatch option, which means that the prologue is prefixed with\n  <code>\n   mov edi, edi\n  </code>\n  (\n  <a href=\"https://blogs.msdn.microsoft.com/oldnewthing/20110921-00/?p=9583\" rel=\"noreferrer\">\n   here's why\n  </a>\n  ), so searching for that instruction should be very easy.\n </p>\n <p>\n  2: In the WinDbg command line, write\n  <code>\n   .symfix\n  </code>\n  to fix the symbols path and\n  <code>\n   .reload /f mshtml.dll\n  </code>\n  to reload the symbols for that module. Alternatively, go to\n  <code>\n   Debugger\n  </code>\n  ->\n  <code>\n   Debugger windows\n  </code>\n  ->\n  <code>\n   Modules list\n  </code>\n  , find\n  <code>\n   mshtml.dll\n  </code>\n  in the window, right-click it and choose \"Load debug symbols\". Then, simply use the\n  <code>\n   Functions\n  </code>\n  window or the status bar to find the start of the function.\n </p>\n <h3>\n  Make it a function\n </h3>\n <p>\n  Put the cursor at the start, and press\n  <kbd>\n   P\n  </kbd>\n  . Now press\n  <kbd>\n   Space\n  </kbd>\n  and you'll be in graph mode!\n </p>\n</div>\n</body></html>",
            "votes": "11",
            "user": "Martin",
            "time": "Dec 29, 2016 at 19:59",
            "is_accepted": true,
            "comments": [
                {
                    "user": "c00000fd",
                    "text": "<span class=\"comment-copy\">Thanks for the info. What I didn't realize is that it takes <code>Ida Pro</code> some time before \"Graph view\" option becomes available, i.e. it evidently needs to scan the module after symbols are loaded. After that it will work just fine!</span>",
                    "time": null
                }
            ]
        }
    ]
}