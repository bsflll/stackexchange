{
    "title": "How can I use radare2 to list all xrefs to a string?",
    "link": "https://reverseengineering.stackexchange.com/questions/29800/how-can-i-use-radare2-to-list-all-xrefs-to-a-string",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  radare2 can list all strings with\n  <code>\n   iz\n  </code>\n  , and list all functions with\n  <code>\n   afl\n  </code>\n  .  How can I use radar2e to list the XREFs for each string? That is, for each string, which funcs reference it?\n </p>\n <p>\n  I'd like to be able to do this for all strings and also for select strings (one by one).\n </p>\n <p>\n  Likewise: How can I find xrefs (call sites) to a given func? E.g. \"Show me all funcs (or addresses) that call\n  <code>\n   sym.imp.system\n  </code>\n  \"?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "disassembly",
        "radare2"
    ],
    "user": "SRobertJames",
    "time": "Dec 30, 2021 at 22:21",
    "comments": [
        {
            "user": "shluvme",
            "text": "<html><body><span class=\"comment-copy\">\n <code>\n  axt @sym.imp.system\n </code>\n will give you all addresses that reference that import\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <pre><code>[0x140012e60]> ps @ 0x1400143f8\nUsage: r2 -c '!*r2p x' # run commands via r2pipe\n\n[0x140012e60]> axt 0x1400143f8\nmain 0x140001253 [DATA] lea rdx, str.Usage:_r2__c__r2p_x__run_commands_via_r2pipe_n\n[0x140012e60]> pd 6 @ 0x140001253-10\n|           0x140001249      00ff           add bh, bh\n|           0x14000124b      1500300100     adc eax, 0x13000\n|           0x140001250      488bc8         mov rcx, rax               ; int64_t arg1\n|           0x140001253      488d159e3101.  lea rdx, str.Usage:_r2__c__r2p_x__run_commands_via_r2pipe_n ; 0x1400143f8 ; \"Usage: r2 -c '!*r2p x' # run commands via r2pipe\n\" ; int64_t arg2\n|           0x14000125a      e8b1fdffff     call fcn.140001010\n|           0x14000125f      c74424600100.  mov dword [var_60h], 1\n[0x140012e60]>  \n\n                                                    \n</code></pre>\n <p>\n  <a href=\"https://reverseengineering.stackexchange.com/questions/11597/find-reference-to-string-in-radare2\">\n   similar answer here\n  </a>\n </p>\n <p>\n  Edit:\n </p>\n <p>\n  type ps? for help on ps\n  \n\n  any command in radare2 if appended with a ?( question mark ) will print the help on usage\n </p>\n <pre><code>C:\\>r2 -qq -c \"ps?;q\" -\nUsage: ps[bijqpsuwWxz+] [N]  Print String\n| ps       print string\n| ps+[j]   print libc++ std::string (same-endian, ascii, zero-terminated)\n| psb      print strings in current block\n| psi      print string inside curseek\n| psj      print string in JSON format\n| psp[j]   print pascal string\n| psq      alias for pqs\n| pss      print string in screen (wrap width)\n| psu[zj]  print utf16 unicode (json)\n| psw[j]   print 16bit wide string\n| psW[j]   print 32bit wide string\n| psx      show string with escaped chars\n| psz[j]   print zero-terminated string\n</code></pre>\n <p>\n  so ps does a print string\n </p>\n <p>\n  so search for an arbitrary string inside the binary whose address we would like to look for reference\n  \n\n  (do not ask what iz~6 does below learn yourself )\n </p>\n <pre><code>C:\\>r2 -qq -c \"iz~:6;q\" f:\\radare2\\bin\\radare2.exe\n3   0x000131f8 0x1400143f8 49  50   .rdata  ascii   Usage: r2 -c '!*r2p x' # run commands via r2pipe\n\n</code></pre>\n <p>\n  so the file address of an arbitrary string inside the arbitrary binary is\n  <strong>\n   0x000131f8\n  </strong>\n  \n\n  virtual address of the arbitrary string inside the arbitrary binary is\n  <strong>\n   0x1400143f8\n  </strong>\n </p>\n <p>\n  we are trying to find if any xrefs exist to this address using the command axt\n  \n\n  (to learn yourself do a? b? c? d? to know what commands exist and what subcommands exist )\n </p>\n <pre><code>C:\\>r2 -qq -c \"axt?;q\" -\nUsage: axt[?gq*]  find data/code references to this address\n| axtj [addr]  find data/code references to this address and print in json format\n| axtg [addr]  display commands to generate graphs according to the xrefs\n| axtq [addr]  find and list the data/code references in quiet mode\n| axt* [addr]  same as axt, but prints as r2 commands\n</code></pre>\n <p>\n  so axt address will show if any xrefs exist\n </p>\n <p>\n  lets learn something new here\n  \n\n  ( try to learn why  I am not using the address as shown above ?.\n  \n\n  what is the backtick doing and more importantly where you can find it using ? in radare2 help.\n  \n\n  what does the [] (square brackets do ?\n  \n\n  how the whole things get magically converted to  an apparent address\n </p>\n <pre><code>[0x140012e60]> axt `iz~:6[2]`\nmain 0x140001253 [DATA] lea rdx, str.Usage:_r2__c__r2p_x__run_commands_via_r2pipe_n\n[0x140012e60]>  \n</code></pre>\n</div>\n</body></html>",
            "votes": "2",
            "user": "blabb",
            "time": "Jan 1, 2022 at 4:55",
            "is_accepted": false,
            "comments": [
                {
                    "user": "SRobertJames",
                    "text": "<span class=\"comment-copy\">Thank you.  Can you please explain what each of those three commands does, so that I can learn? Especially what is the point of the first <code>ps</code>, which just seems to display a usage message.</span>",
                    "time": null
                }
            ]
        }
    ]
}