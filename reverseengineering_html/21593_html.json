{
    "title": "How Do i create a simple Detour Library",
    "link": "https://reverseengineering.stackexchange.com/questions/21593/how-do-i-create-a-simple-detour-library",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Quite new to Reverse Engineering and making Detour Functions, Just need some form of clarification here, i am trying to make a Simple x86 Detour library and i have worked on something using some Sources i saw on the Internet.\nNow i have a challenge with the simple MessageBox does not trigger errors at the same time , it fails to hook as i get this Execption\n </p>\n <pre><code>Exception thrown at 0x0F2B3839 (vcruntime140d.dll) in SHook.exe: 0xC0000005: Access violation writing location 0x75C51F70.\n</code></pre>\n <p>\n  On this Line\n </p>\n <pre><code>memcpy(original, FunctionAddress, TrampolineLength);\n</code></pre>\n <p>\n  My source code looks like this  :\n </p>\n <p>\n  <strong>\n   SHook.h\n  </strong>\n </p>\n <pre><code>#pragma once\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <Windows.h>\n#include \"hde32.h\"\n\nclass SHook\n{\nprivate :\n    LPVOID FunctionAddress;\n    DWORD TrampolineLength = 0, OriginalProtection;\n    hde32s disam;\n    BYTE Jump[5] = { 0xE9, 0x00, 0x00, 0x00, 0x00 };\npublic:\n    BOOL SetHook(LPCSTR dll, LPCSTR name, LPVOID proxy, LPVOID original, PDWORD length);\n};\n</code></pre>\n <p>\n  Now\n  <strong>\n   SHook.cpp\n  </strong>\n </p>\n <pre><code>#include \"SHook.h\"\n\nBOOL SHook::SetHook(LPCSTR dll, LPCSTR name, LPVOID proxy, LPVOID original, PDWORD length)\n{\n    LPVOID FunctionAddress;\n    DWORD TrampolineLength = 0, OriginalProtection;\n    hde32s disam;\n    BYTE Jump[5] = { 0xE9, 0x00, 0x00, 0x00, 0x00 };\n\n    FunctionAddress = GetProcAddress(GetModuleHandleA(dll), name);\n    if (!FunctionAddress)\n        return FALSE;\n\n    //disassemble length of each instruction, until we have 5 or more bytes worth\n    while (TrampolineLength < 5)\n    {\n        LPVOID InstPointer = (LPVOID)((DWORD)FunctionAddress + TrampolineLength);\n        TrampolineLength += hde32_disasm(InstPointer, &disam);\n    }\n\n    //Build the trampoline buffer\n    memcpy(original, FunctionAddress, TrampolineLength); //shoots error here\n    *(DWORD*)(Jump + 1) = ((DWORD)FunctionAddress + TrampolineLength) - ((DWORD)original + TrampolineLength + 5);\n    memcpy((LPVOID)((DWORD)original + TrampolineLength), Jump, 8);\n\n    //Make sure the function is writable\n    if (!VirtualProtect(FunctionAddress, TrampolineLength, PAGE_EXECUTE_READWRITE, &OriginalProtection))\n        return FALSE;\n\n    //Build and atomically write the hook\n    *(DWORD*)(Jump + 1) = (DWORD)proxy - (DWORD)FunctionAddress - 5;\n    //SafeMemcpyPadded(FunctionAddress, Jump, 5);\n\n    //Restore the original page protection\n    VirtualProtect(FunctionAddress, TrampolineLength, OriginalProtection, &OriginalProtection);\n\n    //Clear CPU instruction cache\n    FlushInstructionCache(GetCurrentProcess(), FunctionAddress, TrampolineLength);\n\n    *length = TrampolineLength;\n    return TRUE;\n}\n</code></pre>\n <p>\n  And the implementation is looking like this\n </p>\n <p>\n  <strong>\n   MessageBoxTest.cpp\n  </strong>\n </p>\n <pre><code>#include <stdio.h>\n#include <Windows.h>\n#include <intrin.h>\n#include <string>\n#include \"SHook.h\"\n\ntypedef int (WINAPI* TdefOldMessageBoxA)(HWND hWnd, LPCSTR lpText, LPCTSTR lpCaption, UINT uType);\nTdefOldMessageBoxA myOldMessageBoxA;\n\nSHook shook;\nint WINAPI HookMessageBoxA(HWND hWnd, LPCSTR lpText, LPCTSTR lpCaption, UINT uType) \n{\n    MessageBoxA(NULL, \"Hooked\", \"Hooked\", MB_OK);\n    return myOldMessageBoxA(hWnd, lpText, lpCaption, uType);\n}\n\nvoid EstablishHook()\n{\n        myOldMessageBoxA = (TdefOldMessageBoxA)& MessageBoxA;\n        shook.SetHook(\"user32.dll\",\"MessageBoxA\", (LPVOID)&HookMessageBoxA, myOldMessageBoxA,0);\n}\n\nint main() \n{\n    EstablishHook();\n}\n</code></pre>\n <p>\n  Please Can someone give a clarification what i did miss pls\n </p>\n <p>\n  I am trying to understand what i missed there? Please i do need some form of help here\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "381",
    "tags": [
        "c++",
        "function-hooking"
    ],
    "user": "Josh",
    "time": "Jul 1, 2019 at 11:29",
    "comments": [
        {
            "user": "Johann Aydinbas",
            "text": "<html><body><span class=\"comment-copy\">\n <code>\n  original\n </code>\n seems to point to\n <code>\n  MessageBoxA\n </code>\n so you write to non-writable memory.\n <code>\n  VirtualProtect\n </code>\n will fix that (as you use afterwards) but this is a logical flaw in your code.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Josh",
            "text": "<html><body><span class=\"comment-copy\">\n @JohannAydinbas Pls very new to things like this , just need a help of some sort with the line i should correct, say a snippet would be fine\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "eric.m",
            "text": "<html><body><span class=\"comment-copy\">\n Why do you want to create your own library? Take a look at\n <a href=\"https://github.com/microsoft/Detours\" rel=\"nofollow noreferrer\">\n  Microsoft's Detour\n </a>\n library, it probably does everything you want.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}