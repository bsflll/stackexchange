{
    "title": "In IDA, cannot find xrefs to string in ARM little-endian bootloader/firmware",
    "link": "https://reverseengineering.stackexchange.com/questions/24565/in-ida-cannot-find-xrefs-to-string-in-arm-little-endian-bootloader-firmware",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In this\n  <a href=\"https://github.com/ExtReMLapin/Foretrex601_Research/raw/master/Unknown.bin\" rel=\"nofollow noreferrer\">\n   firmware\n  </a>\n  that is ARM Little endian.\n </p>\n <p>\n  There is two strings :\n </p>\n <pre><code>0x00006953 : Foretrex 701\n0x00006960 : Foretrex 601\n</code></pre>\n <p>\n  The issue, is there is no direct Xreft to any of thoses strings ?\n </p>\n <p>\n  For the firmware, it's pretty much the same.\n </p>\n <p>\n  <img alt=\"\" src=\"https://i.sstatic.net/fuD10.png\"/>\n </p>\n <p>\n  As IDA cannot find the entry point, to start analyzing the binary (after setting CPU to arm little endian) select all the code (with CTRL+SHIFT+PAGE_DOWN) press C, then \"Analyze\"\n </p>\n <p>\n  <img alt=\"\" src=\"https://i.sstatic.net/J3Ohq.png\"/>\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "401",
    "tags": [
        "ida",
        "binary-analysis",
        "arm"
    ],
    "user": "Lapin",
    "time": "Mar 30, 2020 at 1:12",
    "comments": [
        {
            "user": "w s",
            "text": "<html><body><span class=\"comment-copy\">\n Do you know what is the base address of the firmware ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Lapin",
            "text": "<html><body><span class=\"comment-copy\">\n No at all, first time I open up a ARM binary (or even a firmware) in IDA, should I get the adresses of all the strings, compare it to the known pointers and try to find an offset that matches the most possible (if not \"all\") strings ? Or is there a better way ?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As suggested in one of the answers, it's because of the base address, I used\n  <a href=\"https://github.com/sgayou/rbasefind\" rel=\"nofollow noreferrer\">\n   rbasefind\n  </a>\n  to find the base_address of the firmware, and edited it to find the address of the bootloader as there was only two strings plus 11 false string positives.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Lapin",
            "time": "Mar 30, 2020 at 16:54",
            "is_accepted": true,
            "comments": []
        }
    ]
}