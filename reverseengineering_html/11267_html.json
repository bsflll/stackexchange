{
    "title": "what is IAT? and how to find the end of the IAT in packed exe?",
    "link": "https://reverseengineering.stackexchange.com/questions/11267/what-is-iat-and-how-to-find-the-end-of-the-iat-in-packed-exe",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I recently started to study RE in my free time. I started to look at lena151\nfree tutorials and now I'm on packers/protectors.\n </p>\n <p>\n  Now i reached to the part that he show how to manually find the end of IAT\nand he said \"you see, we can easy spot the end of the of the IAT, it's on\n 493854...\"\n </p>\n <pre><code>0049380C  D0 E9 5F 73 C0 4A 65 73 70 68 65 73 A0 61 66 73  ׀י_sְJesphes afs\n0049381C  50 C4 64 73 D0 66 65 73 40 6B 66 73 00 00 00 00  Pִds׀fes@kfs....\n0049382C  C0 41 7E 75 10 0A 7A 75 00 00 00 00 00 F3 64 75  ְA~u\u0010.zu.....ףdu\n0049383C  00 00 00 00 10 F4 00 77 00 6A 01 77 10 69 01 77  ....\u0010פ.w.jw\u0010iw\n0049384C  00 00 00 00 6E 17 00 10 00 00 00 00 6B 65 72 6E  ....n.\u0010....kern\n0049385C  65 6C 33 32 2E 64 6C 6C 00 00 00 00 44 65 6C 65  el32.dll....Dele\n0049386C  74 65 43 72 69 74 69 63 61 6C 53 65 63 74 69 6F  teCriticalSectio\n0049387C  6E 00 00 00 4C 65 61 76 65 43 72 69 74 69 63 61  n...LeaveCritica\n</code></pre>\n <p>\n  Now I don't udnerstand how he know where the end of the IAT just from looking\non the dump?\n </p>\n <p>\n  Also, I didn't completely understood what is IAT, \nany help will be great :-)\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "4k",
    "tags": [
        "unpacking",
        "iat"
    ],
    "user": "Smiled_One",
    "time": "Nov 7, 2015 at 14:38",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <p>\n   I didn't completely understood what is IAT, any help will be great :-)\n  </p>\n </blockquote>\n <p>\n  The IAT is the Import Address Table. It's an an array of pointers to statically-imported API function addresses. The IAT entries gets populated at runtime.\n </p>\n <p>\n  The format of the IAT is typically as follows, with all functions from a particular DLL grouped together, with a null-pointer separating each DLL's list of function addresses:\n </p>\n <p>\n  <code>\n   <pointer to DLL #1's function A>, <pointer to DLL #1's function B>, <pointer to DLL #1's function C>, 0x00000000, <pointer to DLL #2's function D>, <pointer to DLL #2's function E>, ..., 0x00000000\n  </code>\n </p>\n <p>\n  Note that this format isn't required, but it's the most common format.\n </p>\n <blockquote>\n  <p>\n   Now I don't udnerstand how he know where the end of the IAT just from looking on the dump?\n  </p>\n </blockquote>\n <p>\n  I highlighted each IAT function below (with mspaint), with a different color for each DLL grouping. At virtual address\n  <code>\n   0x0049380C\n  </code>\n  we see the function addresses\n  <code>\n   0x735FE9D0\n  </code>\n  ,\n  <code>\n   0x73654AC0\n  </code>\n  , etc. You can tell that they're likely from the same DLL because:\n </p>\n <ol>\n  <li>\n   There's no null-pointer separating them, and\n  </li>\n  <li>\n   They're all in the same address range (\n   <code>\n    0x735F0000\n   </code>\n   -\n   <code>\n    0x7366FFFF\n   </code>\n   )\n  </li>\n </ol>\n <p>\n  <a href=\"https://i.sstatic.net/s75RT.png\" rel=\"noreferrer\">\n   <img alt=\"IAT\" src=\"https://i.sstatic.net/s75RT.png\"/>\n  </a>\n </p>\n <p>\n  The DWORD at\n  <code>\n   0x00493850\n  </code>\n  (after the null-pointer at\n  <code>\n   0x0049384C\n  </code>\n  ) is\n  <code>\n   0x1000176E\n  </code>\n  , so you can look up that address in your debugger and see if there's DLL code loaded at that address. If not,\n  <code>\n   0x0049384C\n  </code>\n  would mark the end of the IAT. If so,\n  <code>\n   0x00493854\n  </code>\n  would mark the end of the IAT since the data at\n  <code>\n   0x00493858\n  </code>\n  is the beginning of an ASCII string and clearly not a valid function pointer.\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "Jason Geffner",
            "time": "Nov 7, 2015 at 19:30",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Smiled_One",
                    "text": "<span class=\"comment-copy\">Thanks a lot. Now I see that the data in <code>0x00493858</code> is really ASCII string like you said. Should that be enough? Becuase on the names tab I see there is something that called \"ShowUpdateDialog\". It sound like a dll but its an export type not an import.</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\"><i>\"Should that be enough?\"</i> - If you already know that the highlighted function addresses above are part of the IAT, then yes, the logic above should be enough to find the end of the IAT.</span>",
                    "time": null
                }
            ]
        }
    ]
}