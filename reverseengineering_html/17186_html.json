{
    "title": "Find functions that constantly calls another",
    "link": "https://reverseengineering.stackexchange.com/questions/17186/find-functions-that-constantly-calls-another",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"https://i.sstatic.net/JQgAw.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/JQgAw.jpg\"/>\n  </a>\n </p>\n <p>\n  Here is a brief list of all the places where this particular function gets called in IDA Pro.\nWhat this function does is return 1/60=0.01666 (the game tick's timestep) from a pointer, which value is used in the physics calculations of the game.\n </p>\n <p>\n  I want to find where is this function constantly getting called in order to determine where I should look to analyse just the relevant code, instead of going through the entire list 1 by 1.\nI know I have to do this while debugging and I need the fastest way to narrow down the list.\n </p>\n <p>\n  <strong>\n   Edit after ~4 years lol:\n  </strong>\n </p>\n <p>\n  You can hook the function and call\n  <a href=\"https://learn.microsoft.com/en-us/cpp/intrinsics/returnaddress?view=msvc-170\" rel=\"nofollow noreferrer\">\n   _ReturnAddress\n  </a>\n  , at least for MSVC.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "161",
    "tags": [
        "functions"
    ],
    "user": "nukeulater",
    "time": "Sep 20, 2022 at 13:59",
    "comments": [
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n What tool are you using? It would really be useful to know that.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n @usr2564301 looks like IDA...\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'd solve this by running the target in a debugger and putting a logging bp on the function (OllyDbg has them, should be Ctrl+F2 if I remember correctly) that just writes out the return address from the stack.\n </p>\n <p>\n  That will spam your log and you quickly should see which return address appears the most.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Johann Aydinbas",
            "time": "Feb 13, 2018 at 17:58",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If this is for a game and you want to approach this via dynamic analysis, my personal approach is to use\n  <a href=\"https://github.com/cheat-engine/cheat-engine/releases\" rel=\"nofollow noreferrer\">\n   Cheat Engine\n  </a>\n  , then in the\n  <em>\n   Memory Viewer\n  </em>\n  window, click\n  <em>\n   Tools\n  </em>\n  ->\n  <em>\n   Dissect Code\n  </em>\n  .\n </p>\n <p>\n  You can now go to the prologue of that function you're interested in, then see all the calls that lead to the function (they'll be grouped via multiple lines just above the first instruction of the sub-routine). You can then double-click on any of those calls to go to that particular call's location and start having a field day researching from there.\n </p>\n <p>\n  I'm sure there is either in-built functionality or plug-ins you can use to essentially achieve the same sort of code analysis to find all calls to  thing statically via x64dbg, IDA, etc.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "dsasmblr",
            "time": "Jan 12, 2018 at 23:24",
            "is_accepted": false,
            "comments": []
        }
    ]
}