{
    "title": "idapython find functions that contain a loop",
    "link": "https://reverseengineering.stackexchange.com/questions/6175/idapython-find-functions-that-contain-a-loop",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  How can I color functions that contain loops in IDApython ?\n </p>\n <p>\n  If the end of the basic block can jump to start of basic block it's good enough, even in the rare case this is not a loop. But how do i implement this ?\n </p>\n <p>\n  <strong>\n   EDIT\n  </strong>\n  : This is not good cause the loop can span multiple basic blocks. \nOr, maybe if the\n  <code>\n   ecx\n  </code>\n  register is used ? I don't care if I have some false positives ?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "binary-analysis",
        "idapython"
    ],
    "user": "Vision",
    "time": "Sep 5, 2014 at 6:30",
    "comments": [
        {
            "user": "Willem Hengeveld",
            "text": "<html><body><span class=\"comment-copy\">\n Maybe searching for code xref where  frm > to  will find you already a narrow enough set of possible targets\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Ta Thanh Dinh",
            "text": "<html><body><span class=\"comment-copy\">\n You may find\n <a href=\"http://reverseengineering.stackexchange.com/questions/3498/detecting-recursive-functions-in-ida/\">\n  this quesion\n </a>\n useful. It is about finding recursive calls using IDA. Both answers are awesome.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  There is an IDA plugin called Loop Detection that does that, it comes with source code and a paper explaining how it works. Have a look at\n  <code>\n   loop_detection.cpp\n  </code>\n  and refer to the paper for an explanation of how it works.\n </p>\n <p>\n  Plugin with source code :\n  <a href=\"http://www.openrce.org/downloads/details/9/Loop_Detection\">\n   http://www.openrce.org/downloads/details/9/Loop_Detection\n  </a>\n  Paper:\n  <a href=\"http://www.uninformed.org/?v=1&a=2&t=pdf\">\n   http://www.uninformed.org/?v=1&a=2&t=pdf\n  </a>\n </p>\n <p>\n  Looking for uses of\n  <code>\n   ecx\n  </code>\n  is not a good approach as this register is often used for other purposes. A better approach is to look for back edges between blocks.\n </p>\n</div>\n</body></html>",
            "votes": "7",
            "user": "ekse",
            "time": "Sep 5, 2014 at 19:57",
            "is_accepted": false,
            "comments": []
        }
    ]
}