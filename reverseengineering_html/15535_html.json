{
    "title": "IDA Pro debugging: follow child process",
    "link": "https://reverseengineering.stackexchange.com/questions/15535/ida-pro-debugging-follow-child-process",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm reverse engineering a malware that creates a number of child processes and I'm trying to do dynamic analysis of the ELF binary with IDA Pro and IDA's Local Linux Debugger, but I can't get IDA to attach to the child process.\n </p>\n <p>\n  Is there some way to force IDA to follow the child process instead of the parent one?\n </p>\n <p>\n  I've tried using gdbserver which seems to lack the follow-fork-mode functionality of gdb and I couldn't find any information on child processes and the IDA Pro Linux Debugger.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "5k",
    "tags": [
        "ida",
        "debugging",
        "linux",
        "elf",
        "dynamic-analysis"
    ],
    "user": "m-strasser",
    "time": "Jun 12, 2017 at 18:43",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  AFAIK IDA does not have that feature, so you'll have to do that yourself by breakpointing or stepping to calls to process creation functions (usually\n  <a href=\"https://linux.die.net/man/2/execve\" rel=\"nofollow noreferrer\">\n   <code>\n    execve\n   </code>\n  </a>\n  ,\n  <a href=\"https://linux.die.net/man/2/fork\" rel=\"nofollow noreferrer\">\n   <code>\n    fork\n   </code>\n  </a>\n  , etc), and then forcibly debugging them either by using other IDA instances or creating gdb instances.\n </p>\n <p>\n  You won't be able to debug multiple processes in a single IDA instance.\n </p>\n <p>\n  If you want to debug such processes, you could replace the execve with spawning the process yourself, attaching to the process, etc. There are\n  <a href=\"https://stackoverflow.com/questions/377195/how-to-debug-the-entry-point-of-fork-exec-process-in-gdb/43099366#43099366\">\n   plenty\n  </a>\n  of\n  <a href=\"https://stackoverflow.com/questions/6199270/how-do-i-debug-the-child-process-after-fork-in-gdb\">\n   answers\n  </a>\n  online, if you're not limiting to IDA specifically.\n </p>\n <p>\n  Once you debugged a process, a common trick you could use is to put the debugged process into a\n  <code>\n   JMP $-2\n  </code>\n  infinite loop (\n  <code>\n   EB FC\n  </code>\n  on x86 CPUs), detach your original debugger, re-attach with IDA and restore the original instruction sequence you replaced with\n  <code>\n   JMP $-2\n  </code>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "NirIzr",
            "time": "Jun 13, 2017 at 15:17",
            "is_accepted": false,
            "comments": [
                {
                    "user": "m-strasser",
                    "text": "<span class=\"comment-copy\">Thanks for your answer, but could you explain a bit more what you mean by \"forcibly debugging them\"?</span>",
                    "time": null
                },
                {
                    "user": "NirIzr",
                    "text": "<span class=\"comment-copy\">I didn't mean anything special, just the usual attaching and following childs in GDB</span>",
                    "time": null
                }
            ]
        }
    ]
}