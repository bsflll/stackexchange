{
    "title": "Unable To break TLS callback function using ollydbg",
    "link": "https://reverseengineering.stackexchange.com/questions/13226/unable-to-break-tls-callback-function-using-ollydbg",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  while trying to debug a binary which have TLS callback functionality,i am not getting any result.i have put \"System entry breakpoint\" as in ollydbg Event option.Binary breaks as system breakpoint reached.but i am viewing the calls imported by Ntdll.dll\n </p>\n <p>\n  I am attaching a screenshot for the reference\n  <a href=\"https://i.sstatic.net/UH2xD.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"ollydbg picture\" src=\"https://i.sstatic.net/UH2xD.jpg\"/>\n  </a>\n  i already got the TLS section by IDA PRO,and got the address in the range 400000 but when viewing olly,i can see the address starting from 7.check the picture\n  <a href=\"https://i.sstatic.net/jfxxv.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"IDA pro TLS callback hint\" src=\"https://i.sstatic.net/jfxxv.jpg\"/>\n  </a>\n  .\nAnd below are the sample Assembly when started by olly\n </p>\n <pre><code>77420542    8975 FC         MOV DWORD PTR [EBP-4],ESI\n77420545    EB 0E           JMP SHORT ntdll.77420555\n77420547    33C0            XOR EAX,EAX\n77420549    40              INC EAX\n7742054A    C3              RET\n7742054B    8B65 E8         MOV ESP,DWORD PTR [EBP-18]\n7742054E    C745 FC FEFFFFF>MOV DWORD PTR [EBP-4],-2\n77420555    E8 DF22FBFF     CALL ntdll.773D2839\n7742055A    C3              RET\n7742055B    90              NOP\n7742055C    90              NOP\n7742055D    90              NOP\n7742055E    90              NOP\n7742055F    90              NOP\n77420560    8BFF            MOV EDI,EDI\n77420562    55              PUSH EBP\n77420563    8BEC            MOV EBP,ESP\n77420565    83EC 10         SUB ESP,10\n77420568    803D EC02FE7F 0>CMP BYTE PTR [7FFE02EC],0\n7742056F    74 11           JE SHORT ntdll.77420582\n77420571    8B45 0C         MOV EAX,DWORD PTR [EBP+C]\n77420574    8160 68 FFFEFFF>AND DWORD PTR [EAX+68],FDFFFEFF\n</code></pre>\n <p>\n  It will be great if anyone can help\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 2,
    "views": "2k",
    "tags": [
        "ida",
        "ollydbg",
        "decompilation",
        "malware"
    ],
    "user": "Bikash Dash",
    "time": "Aug 7, 2016 at 19:06",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n System breakpoint is not tls callback\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Bikash Dash",
            "text": "<html><body><span class=\"comment-copy\">\n That i know w s.but how i will reach upto TLS callback function.Because i want to analyze that.Now the code halts at somewhere in ntdll.dll\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  you need to stop on one of these functions and single step from there in latest os\n  \n\n  if you were on xp-sp3 you could toggle peb->NtGlobalFlag to show Loader snaps\n  \n\n  one of the DebugPrint Messages on the spew is entry point for Tls Callback\n </p>\n <p>\n  (take a look at old Ntglobalflag plugin for odbg110 for refreshing about how tls works and how the pluging caught the callback\n </p>\n <p>\n  the following call stack is from win7   set a break on one of them and you should be good to go\n </p>\n <pre><code>Call stack of main thread\nStack     Data      Procedure\n0012FA20  7761D8F1  /ntdll.LdrpCallInitRoutine\n0012FA24  00402000  |  Arg1 = mytls.<TLS_Callback_1>\n0012FA28  00400000  |  Arg2 = mytls.400000\n0012FA2C  00000001  |  Arg3 = 1\n0012FA30  00000000  \\  Arg4 = 0\n0012FA64  775B166B  /ntdll.LdrpCallTlsInitializers\n0012FA68  00000001  |  Arg1 = 1\n0012FA6C  006020F0  \\  Arg2 = 6020F0\n0012FB50  77606175  /ntdll.LdrpRunInitializeRoutines\n0012FB54  0012FD24  \\  Arg1 = 12FD24\n0012FCB4  77606077  /ntdll.LdrpInitializeProcess\n0012FCB8  0012FD24  |  Arg1 = 12FD24\n0012FCBC  775A0000  \\  Arg2 = ntdll.<STRUCT IMAGE_DOS_HEADER>\n0012FD04  77603663  /ntdll.LdrpInitialize\n0012FD08  0012FD24  |  Arg1 = 12FD24\n0012FD0C  775A0000  \\  Arg2 = ntdll.<STRUCT IMAGE_DOS_HEADER>\n</code></pre>\n <p>\n  i dont remember right but look into ollydbg 2.01 log window if there is a\n  <code>\n   tls callback iirc it showed where it was in ollydbg 2.01\n  </code>\n </p>\n <p>\n  it seems you are using ollydbg 1.01 from your screen shot (odbg2.01 has an option to set a breakpoint on tls callbacks\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "blabb",
            "time": "Aug 8, 2016 at 12:23",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Bikash Dash",
                    "text": "<span class=\"comment-copy\">HI blabb,Thanks for your message.but i didn't see any member as you said in the message.I didn't find Any TLS member in the stack.can you be elaborate more regarding this,which can helpful to me.i am using windows 7 as the os</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  i got the answer after spending some time by going each and evry call.i got the address of TLS callback address in the range 400000.Basically the file is using relocation,that's why it is showing address at 0012FA20. Remove Relocatable option using CFF explorer.and we can reach upto TLS callback address.\nIt is also can be seen by using command\n </p>\n <blockquote>\n  <p>\n   <strong>\n    ALT+M\n   </strong>\n   in ollydbg.so that we can see at what memory address PE section is mapped.\n  Thanks All\n  </p>\n </blockquote>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Bikash Dash",
            "time": "Sep 2, 2016 at 12:31",
            "is_accepted": false,
            "comments": []
        }
    ]
}