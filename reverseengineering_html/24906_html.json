{
    "title": "static analysis for identifying backdoors",
    "link": "https://reverseengineering.stackexchange.com/questions/24906/static-analysis-for-identifying-backdoors",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am doing a research in identifying backdoors in windows .exe files. Currently I found some methods to detect.\n1.String search in .exe\n2.find Reffrence .dll and win32 Api calls using import table\n </p>\n <p>\n  What are the other static analysis methods to detect backdoors?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "53",
    "tags": [
        "static-analysis",
        "executable"
    ],
    "user": "EsH Harshana",
    "time": "May 3, 2020 at 16:28",
    "comments": [
        {
            "user": "w s",
            "text": "<html><body><span class=\"comment-copy\">\n It depends on your definition of a backdoor. Example: Is intentionally inserted vulnerability a backdoor you are trying to detect ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "EsH Harshana",
            "text": "<html><body><span class=\"comment-copy\">\n yes.Reverse shells,etc\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}