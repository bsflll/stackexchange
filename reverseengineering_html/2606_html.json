{
    "title": "Hex-Rays Decompiler: Which magic variable to select?",
    "link": "https://reverseengineering.stackexchange.com/questions/2606/hex-rays-decompiler-which-magic-variable-to-select",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The Hex-rays decompiler demo video shows that you can select what to replace Windows magic variables (1,2,3, etc) with:\n  <a href=\"http://www.ccso.com/files/hexraysdemo.swf\" rel=\"nofollow\">\n   http://www.ccso.com/files/hexraysdemo.swf\n  </a>\n </p>\n <p>\n  But how do you know what the numbers should be replaced with in the first place?\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 1,
    "views": "633",
    "tags": [
        "ida"
    ],
    "user": "user8005",
    "time": "Aug 9, 2013 at 15:15",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Those magic numbers are Enums \nsince these are window Api you can either look them up in\n  <code>\n   include files\n  </code>\n  or look up the function in MSDN documentation online\n </p>\n <p>\n  take the first example DllEntryPoint which typically is a wrong name by Ida (it should be DllMain)\n </p>\n <pre><code>google DllMain site:msdn.microsoft.com\n</code></pre>\n <p>\n  first page first hit\n </p>\n <p>\n  <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms682583%28v=vs.85%29.aspx\" rel=\"nofollow\">\n   http://msdn.microsoft.com/en-us/library/windows/desktop/ms682583%28v=vs.85%29.aspx\n  </a>\n </p>\n <p>\n  You can see it is documented as\n </p>\n <pre><code>BOOL WINAPI DllMain(\n  _In_  HINSTANCE hinstDLL,\n  _In_  DWORD fdwReason,\n  _In_  LPVOID lpvReserved\n);\n</code></pre>\n <p>\n  the second parameter command is documented to contain\n </p>\n <pre><code>fdwReason [in]\n\n    The reason code that indicates why the DLL entry-point function is being called. This parameter can be one of the following values.\n    Value   Meaning\n\n    DLL_PROCESS_ATTACH\n    1\n    DLL_PROCESS_DETACH\n    0\n    DLL_THREAD_ATTACH\n    2 \n    DLL_THREAD_DETACH\n    3\n</code></pre>\n <p>\n  there you have the magic numbers\nin this specific case the document also contains the 1,2,3\nbut if the document didn't contain the values\n </p>\n <p>\n  you have to look into include files in sdk or wdk as the case may be\n </p>\n <p>\n  this specific magic number is defined in winnt.h in platform sdk\n </p>\n <pre><code>C:\\Program Files\\Microsoft SDKs\\Windows\\v7.1\\Include>pss DLL_THREAD_DETACH\n\nC:\\Program Files\\Microsoft SDKs\\Windows\\v7.1\\Include>python c:\\python27\\scripts\\\npss -i DLL_THREAD_DETACH\n.\\WinNT.h\n13666:#define DLL_THREAD_DETACH    3\n\n\nC:\\Program Files\\Microsoft SDKs\\Windows\\v7.1\\Include>\n</code></pre>\n <p>\n  each function will have parameters and each parameter can contain certain values\nand if the parameter is not opaque then it will have documentation of the parameters in \nMSDN help\n </p>\n <p>\n  you need to read the documentation of the function its parameters and decide what those magic numbers are to be replaced with up\n </p>\n <p>\n  second example OpenMutex()\n </p>\n <p>\n  msdn shows that the parameter documentation as\n </p>\n <p>\n  Parameters\n </p>\n <pre><code>dwDesiredAccess [in]\n\n    The access to the mutex object. Only the SYNCHRONIZE access right is required to use a mutex; to change the mutex's security, specify MUTEX_ALL_ACCESS. The function fails if the security descriptor of the specified object does not permit the requested access for the calling process. For a list of access rights, see Synchronization Object Security and Access Rights.  \n</code></pre>\n <p>\n  follow the list of access right link to see what is the value of MUTEX_ALL_ACCESS\n </p>\n <p>\n  or check include file for the trail\n </p>\n <pre><code>C:\\Program Files\\Microsoft SDKs\\Windows\\v7.1\\Include>python c:\\python27\\scripts\\\npss -i mutex_all_access\n.\\WinBase.h\n560:#define MUTEX_ALL_ACCESS MUTANT_ALL_ACCESS\n\n\nC:\\Program Files\\Microsoft SDKs\\Windows\\v7.1\\Include>pss mutant_all_access\n\nC:\\Program Files\\Microsoft SDKs\\Windows\\v7.1\\Include>python c:\\python27\\scripts\\\npss -i mutant_all_access\n.\\WinBase.h\n560:#define MUTEX_ALL_ACCESS MUTANT_ALL_ACCESS\n\n.\\WinNT.h\n8557:#define MUTANT_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE|\\\n\n\nC:\\Program Files\\Microsoft SDKs\\Windows\\v7.1\\Include>grep -i mutant_all_access -\nA 3 -B 3 WinNT.h\n\n#define MUTANT_QUERY_STATE      0x0001\n\n#define MUTANT_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE|\\\n                          MUTANT_QUERY_STATE)\n\n#define SEMAPHORE_MODIFY_STATE      0x0002\n\nC:\\Program Files\\Microsoft SDKs\\Windows\\v7.1\\Include>\n</code></pre>\n</div>\n</body></html>",
            "votes": "4",
            "user": "blabb",
            "time": "Aug 9, 2013 at 17:00",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user8005",
                    "text": "<span class=\"comment-copy\">How does that prevent you from making mistakes, like all the time?</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">absolutely doesn't prevent making mistakes in fact those who can make such mistakes will simply drag you down to their level and beat you with their vastly superior experience</span>",
                    "time": null
                }
            ]
        }
    ]
}