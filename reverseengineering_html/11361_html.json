{
    "title": "Understanding decoding communications over interfaces",
    "link": "https://reverseengineering.stackexchange.com/questions/11361/understanding-decoding-communications-over-interfaces",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm currently in the middle of trying to decode the communication of an hydrometer. Thanks to a\n  <a href=\"https://reverseengineering.stackexchange.com/questions/11348/reverse-engineering-an-hydrometers-bluetooth-communication\">\n   previous question\n  </a>\n  made in this site I was able to find a\n  <a href=\"http://www.diehl.com/fileadmin/diehl-metering/dlc/Water/HYDRUS_CommunicationDescription_EN.pdf\" rel=\"nofollow noreferrer\">\n   PDF\n  </a>\n  describing the communication of a different hydrometer from the same company. I suspect the type of communication is equal or similar for both products.\n </p>\n <p>\n  From what I understand I first need to define the response I want to have by sending a 10 bytes frame:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/5ioHG.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/5ioHG.png\"/>\n  </a>\n </p>\n <p>\n  And then request a response with a 5 bytes frame:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/p02BK.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/p02BK.png\"/>\n  </a>\n </p>\n <p>\n  By checking the appendix 1, I choose, for application reset byte, the value \"0x00\":\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/KaoSh.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Application reset\" src=\"https://i.sstatic.net/KaoSh.png\"/>\n  </a>\n </p>\n <p>\n  But I don't know the meaning of the bytes:\n </p>\n <ol>\n  <li>\n   C-field\n  </li>\n  <li>\n   Address\n  </li>\n  <li>\n   Cl-field\n  </li>\n  <li>\n   Checksum\n  </li>\n </ol>\n <p>\n  Even without knowing the meaning of those fields, I tried defining and requesting a response, but I'm struggling to interpret the data, probably because I don't know the meaning of DIF and VIF columns:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/jBVWh.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/jBVWh.png\"/>\n  </a>\n </p>\n <p>\n  Summing up, by any chance could I get an explanation of the fields:\n </p>\n <ol>\n  <li>\n   C-field\n  </li>\n  <li>\n   Address\n  </li>\n  <li>\n   CL-field\n  </li>\n  <li>\n   checksum\n  </li>\n  <li>\n   DIF\n  </li>\n  <li>\n   VIF\n  </li>\n </ol>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "385",
    "tags": [
        "encryption",
        "serial-communication",
        "encodings",
        "protocol"
    ],
    "user": "Rui Lima",
    "time": "Apr 13, 2017 at 12:49",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  A comment in your previous question pointed out that your hydrometer likely uses the M-Bus or Meter-Bus protocol, and your fields in question are all thoroughly explained in the\n  <a href=\"http://www.m-bus.com/files/MBDOC48.PDF\" rel=\"nofollow\">\n   documentation of said protocol (PDF)\n  </a>\n </p>\n <p>\n  The C-Field is the control field and defines what function is being performed (page 23 of the above PDF). It is an 8-bit value where the lowest 4 bits determine the type of transfer (e.g., long frame, data request, etc.) and the highest 4 bits serve as control flags for various operations.\n </p>\n <p>\n  The address determines which device you're talking to. The M-Bus protocol specifies a master/slave setup where one device can talk to many connected devices on the same local network. This is necessary because it's used in metering applications where a single controller might want to be able to query data from and send data to a large number of interconnected devices. In your case, the documentation uses an address of 0xFD or 253 which specifies that the address is handled on the network layer (which makes sense given you are communicating over Bluetooth).\n </p>\n <p>\n  The CI[sic] field is the \"Control Information\" field; it communicates which type of data is being transmitted (page 31 of the above PDF). The example you posted uses a CI of 0x50, which indicates an application reset. The following byte specifies the \"type\" of reset requested, with 0x00 representing a full application-layer reset. When reset, it appears that the device responds with its relevant parameters as specified in your posted image.\n </p>\n <p>\n  The checksum is used to verify the integrity of the transmitted or received data. These are fairly standard in serial communication protocols and generally straightforward to calculate. Calculating the M-Bus checksum requires adding up the raw values of the fields in the frame starting from the C-field and ending after the transmitted data (though this depends on the type and length of the frame, so for short frames, some fields may not be relevant). This calculation, as well as code to calculate it, are easily found with a cursory search.\n </p>\n <p>\n  DIF and VIF stand for Data Information Field and Value Information Field. The DIF tells you what type of data you got (so from the Diehl PDF you posted, 0xC corresponds to volume, 0xB to flow rate, etc.) The VIF gives units and multiplier so that you can tell what units the specific parameters are in (e.g., liters, m\n  <sup>\n   3\n  </sup>\n  , etc.)\n </p>\n <p>\n  I suggest that you take a look at that PDF, as it is very thorough in explaining the protocol and comes directly from the source of the protocol itself.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Cheibriados",
            "time": "Nov 20, 2015 at 15:25",
            "is_accepted": true,
            "comments": []
        }
    ]
}