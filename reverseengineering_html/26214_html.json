{
    "title": "Determine if there is a cross reference using idapython given a specific address",
    "link": "https://reverseengineering.stackexchange.com/questions/26214/determine-if-there-is-a-cross-reference-using-idapython-given-a-specific-address",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to end up in something like the following using idapython to determine if given a specific address there is an xref (without caring where the XREF comes from)\n </p>\n <pre><code>ea_start = #\nea_end = #\nfor ea in range(ea_start,ea_end):\n    if hasXREF(ea):\n        doSomething()\n\n\ndef hasXREF(addr):\n    \n    if [something]:\n        return true\n    else\n        return false\n</code></pre>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "878",
    "tags": [
        "ida",
        "idapython",
        "script"
    ],
    "user": "Shad3",
    "time": "Nov 1, 2020 at 21:56",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Take a look at this link:\n  <a href=\"https://www.hex-rays.com/products/ida/support/idapython_docs/idautils-module.html#XrefsTo\" rel=\"nofollow noreferrer\">\n   https://www.hex-rays.com/products/ida/support/idapython_docs/idautils-module.html#XrefsTo\n  </a>\n </p>\n <p>\n  You can use the function:\n  <code>\n   XrefsTo(ea, flags=0)\n  </code>\n  .\n </p>\n <p>\n  From the description, it\n  <code>\n   Return all references to address ea\n  </code>\n  .\n </p>\n <p>\n  And\n  <code>\n   XrefsFrom(ea, flags=0)\n  </code>\n  , which\n  <code>\n   Return all references from address 'ea'\n  </code>\n </p>\n <p>\n  You should have anything for your script now :)\n </p>\n <p>\n  I have an example of a working IDA Python script that you can use as a reference here (It count the number of XrefTo per functions of a binary):\n  <a href=\"https://github.com/GuillaumeOrlando/MalwareAnalysisArtifacts/blob/master/IDA_Scripts/XrefChecker.py\" rel=\"nofollow noreferrer\">\n   https://github.com/GuillaumeOrlando/MalwareAnalysisArtifacts/blob/master/IDA_Scripts/XrefChecker.py\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Guillaume",
            "time": "Nov 1, 2020 at 22:19",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can use the\n  <a href=\"https://www.hex-rays.com/products/ida/support/sdkdoc/group___f_f__.html\" rel=\"nofollow noreferrer\">\n   <em>\n    flags\n   </em>\n  </a>\n  which are attached to each address and, among other info, store information about whether the address has any xrefs to it.\n </p>\n <pre><code>def hasXREF(addr):        \n    return has_xref(get_flags(addr))\n</code></pre>\n <p>\n  BTW, instead of inspecting every address it's better and faster to inspect only head bytes (starts of instructions or data items) which are returned by the\n  <a href=\"https://www.hex-rays.com/wp-content/static/products/ida/support/idapython_docs/idautils-module.html#Heads\" rel=\"nofollow noreferrer\">\n   <code>\n    idautils.Heads()\n   </code>\n  </a>\n  iterator.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Nov 1, 2020 at 22:52",
            "is_accepted": false,
            "comments": []
        }
    ]
}