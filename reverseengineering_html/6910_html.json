{
    "title": "Well-known JSON obfuscator that puts the string \"Salted12\" in front of obfuscated files?",
    "link": "https://reverseengineering.stackexchange.com/questions/6910/well-known-json-obfuscator-that-puts-the-string-salted12-in-front-of-obfuscate",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have an application that pulls some JSON definition files from the internet. In former versions of the application, these files were genuine json files; now, in a later version, they seem to be encrypted/obfuscated. The files that get downloaded now seem to be base64-encoded; decoding them leads to binary files that have the String\n  <code>\n   Salted12\n  </code>\n  plus 8 more ascii characters in front of them.\n </p>\n <p>\n  Examples:\n </p>\n <pre><code>Salted12OBWfTKpl<B4>{J<E0> <D1>...\nSalted12DPEPlodlks^Q^H]^Q<88><A6><D5>...\nSalted12WeuyYPkh<D6>\"<F9>^I^_6^Q<AB><ED>^Y\nSalted12hJhPiiUX<E7>Yu<D9><DB><9F><D9><BD>\n</code></pre>\n <p>\n  I assume the 8 extra bytes are some kind of encryption key (or, maybe the 16 leading bytes are the key, and the devs chose fixed the first 8 bytes)\n </p>\n <p>\n  Comparing the size of old versions of the json files with the new ones suggests the new ones are uncompressed, and have a 1:1 character encryption after the header bytes:\n </p>\n <pre><code>File       old size      new size\n1.93.json     10999         10864\nedit.json      2135          2160\nnext.json       252           976\n</code></pre>\n <p>\n  (The change in number of bytes isn't the same for all files, but as the contents have probably changed with the new version, this is to be expected).\n </p>\n <p>\n  Now my question is: Is there a standard, \"well-known\", library/framework that obfuscates JSON like this, or will i have to reverse the application to find out how the encryption works?\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 0,
    "views": "3k",
    "tags": [
        "obfuscation",
        "encryption"
    ],
    "user": "Guntram Blohm",
    "time": "Dec 28, 2014 at 17:33",
    "comments": [
        {
            "user": "Hybris95",
            "text": "<html><body><span class=\"comment-copy\">\n If this can help, I found similar json files in the Flutter app for Android.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "TkTech",
            "text": "<html><body><span class=\"comment-copy\">\n What's the name of the app?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Ilmari Karonen",
            "text": "<html><body><span class=\"comment-copy\">\n This looks vaguely similar (but not identical) to the\n <a href=\"http://justsolve.archiveteam.org/wiki/OpenSSL_salted_format\" rel=\"nofollow noreferrer\">\n  OpenSSL salted encryption format\n </a>\n which begins with\n <code>\n  Salted__\n </code>\n (instead of\n <code>\n  Salted12\n </code>\n ) followed by 8 random bytes (not ASCII characters) of salt.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}