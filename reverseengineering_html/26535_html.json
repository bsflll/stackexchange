{
    "title": "How can I see when a library is being called in Android?",
    "link": "https://reverseengineering.stackexchange.com/questions/26535/how-can-i-see-when-a-library-is-being-called-in-android",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Apologies for a beginner-esque question, but I am reverse engineering an Android application, that is most probably using the\n  <code>\n   libusbhost.so\n  </code>\n  library to interface with USB devices via Java Native Interface.\n </p>\n <p>\n  How would I go about doing so?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "android",
        "java",
        "usb",
        "libraries"
    ],
    "user": "Timotej Leginus",
    "time": "Dec 14, 2020 at 8:44",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It is a bit unclear what do you mean by \"library being called\". If you want to know when the library is loaded, you may look for references to\n  <code>\n   System.loadLibrary(string)\n  </code>\n  or\n  <code>\n   System.load(string)\n  </code>\n  java functions. You might for example hook it using\n  <a href=\"https://frida.re/docs/android/\" rel=\"nofollow noreferrer\">\n   Frida\n  </a>\n  .\n </p>\n <p>\n  If you want to see when particular functions exported by the\n  <code>\n   libusbhost.so\n  </code>\n  are called, you also may use Frida. There is prebuild tool called\n  <a href=\"https://frida.re/docs/frida-trace/\" rel=\"nofollow noreferrer\">\n   frida-trace\n  </a>\n  . For example using\n  <code>\n   frida-trace -U -i “Java_*” [package_name]\n  </code>\n  , will print out all the calls to JNI native functions from your app, along with their timestamp.\n </p>\n <p>\n  If you want to alter the parameters of the called functions, modify the way they work, or replace their return values - you may find the\n  <a href=\"https://frida.re/docs/javascript-api/#interceptor\" rel=\"nofollow noreferrer\">\n   Frida Interceptor\n  </a>\n  module useful.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "morsisko",
            "time": "Dec 14, 2020 at 18:23",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Timotej Leginus",
                    "text": "<span class=\"comment-copy\">Thank you very much! Apologies for not explaining myself clearly; I meant seeing when a method from a library is called. Frida is a cool looking tool, from what I read about it, this will really help me, I won't doubt! Thank you!</span>",
                    "time": null
                },
                {
                    "user": "Timotej Leginus",
                    "text": "<span class=\"comment-copy\">I suppose I am having a problem. I haven't rooted my phone, therefore, I used the frida-gadget. My problem is, it's always stopping with the error message <code>Failed to start tracing: script is destroyed Server terminated</code> I think it's probably due to me repackaging the app, and then using it. It probably has some problems with that, because it destroys the process immediately (from logcat, what I've seen)</span>",
                    "time": null
                },
                {
                    "user": "morsisko",
                    "text": "<span class=\"comment-copy\">Unfortunately I've never used the frida-gadget. I've been always using the raw frida server on rooted phone and it works without any problems. This way you don't need to repackage the apk.</span>",
                    "time": null
                },
                {
                    "user": "Timotej Leginus",
                    "text": "<span class=\"comment-copy\">Rooted my phone. frida-server works fine, I need to go on with reverse engineering now :p</span>",
                    "time": null
                }
            ]
        }
    ]
}