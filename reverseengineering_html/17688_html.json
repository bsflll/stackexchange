{
    "title": "How to patch a binary file and save it? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/17688/how-to-patch-a-binary-file-and-save-it",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed\n        </b>\n        . This question needs to be more\n        <a href=\"/help/closed-questions\">\n         focused\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       <b>\n        Want to improve this question?\n       </b>\n       Update the question so it focuses on one problem only by\n       <a href=\"/posts/17688/edit\">\n        editing this post\n       </a>\n       .\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2018-03-14 13:34:53Z\">\n        7 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/17688/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  I have an ARM executable binary file and I want to patch it at precise virtual addresses. Is there any safe (and automated) way to perform this task ?\n </p>\n <p>\n  Any scripts or tools are welcome!\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "4k",
    "tags": [
        "disassembly",
        "patching",
        "binary-editing"
    ],
    "user": "ida",
    "time": "7 years ago",
    "comments": [
        {
            "user": "user23611",
            "text": "<html><body><span class=\"comment-copy\">\n You need to know information about the .text because the executable code is classicaly store in this section if the binary is not obsucated or custom compiled. I think you need to learn about what is a binary file and how it is loaded in memory.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "ida",
            "text": "<html><body><span class=\"comment-copy\">\n I talking about embedded my binary not run on linux/windows\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user23611",
            "text": "<html><body><span class=\"comment-copy\">\n But there is no OS in your  embedded system? Expose the system entirely? Maybe you are working with a firmware, if it document, learn about what is the file format of the binary and how it is loaded in memory, the basic !! If there is not doc, it's more hard and time consuming, full reverse\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you are on Linux a simple group of commands as\n  <code>\n   readelf\n  </code>\n  ,\n  <code>\n   printf()\n  </code>\n  and\n  <code>\n   dd\n  </code>\n  can do the job.\n </p>\n <p>\n  For example, if you have the binary\n  <code>\n   MyBin\n  </code>\n  in ELF format and you want to patch the following condition located at\n  <code>\n   0x418966\n  </code>\n  in memory :\n </p>\n <pre><code>jnz     loc_418706 ; 0x418966: 0f 85 9a fd ff ff\n</code></pre>\n <p>\n  Firstly you must to find information about the\n  <code>\n   .text\n  </code>\n  section of the binary file:\n </p>\n <pre><code>$ readelf --wide -S MyBin | grep '.text\\|Name\\|Off'\n  [Nr] Name              Type            Address          Off    Size   ES Flg Lk Inf Al\n  [13] .text             PROGBITS        0000000000414670 014670 0dfa82 00  AX  0   0 16\n</code></pre>\n <p>\n  Here:\n </p>\n <ul>\n  <li>\n   the\n   <code>\n    .text\n   </code>\n   section start in the binary file at\n   <code>\n    0x014670\n   </code>\n   ;\n  </li>\n  <li>\n   the\n   <code>\n    .text\n   </code>\n   section is loaded in memory at\n   <code>\n    0x414670\n   </code>\n   .\n  </li>\n </ul>\n <p>\n  Then you must compute the instruction offset in the binary file relative to the\n  <code>\n   .text\n  </code>\n  section:\n </p>\n <pre><code>0x418966 - 0x414670 = 0x0042f6\n0x014670 + 0x0042f6 = 0x018966\n</code></pre>\n <p>\n  Or with a shell one-liner:\n </p>\n <pre><code>$ text_addr=0000000000414670; inst_addr=418966; text_off=014670; \\\n  python -c 'print(0x'$inst_addr' - 0x'$text_addr' + 0x'$text_off')'\n100710\n</code></pre>\n <p>\n  Here the instruction to patch is located at\n  <code>\n   0x18966\n  </code>\n  in the binary file.\n </p>\n <p>\n  Finally, I patch the binary with a nop and a near jump (\n  <code>\n   jmp e9 [cd]\n  </code>\n  ).\n </p>\n <pre><code>printf '\\x90\\xe9' | dd of=MyBin bs=1 seek=100710 count=3 conv=notrunc\n</code></pre>\n</div>\n</body></html>",
            "votes": "3",
            "user": "perror",
            "time": "Feb 18, 2020 at 8:39",
            "is_accepted": false,
            "comments": [
                {
                    "user": "ida",
                    "text": "<span class=\"comment-copy\">why do I need the  .text section?  do you know tool for windows?</span>",
                    "time": null
                }
            ]
        }
    ]
}