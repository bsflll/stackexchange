{
    "title": "Hex string to number",
    "link": "https://reverseengineering.stackexchange.com/questions/30221/hex-string-to-number",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to reverse engineer a datalogger file (parker\n  <code>\n   .scpo\n  </code>\n  I believe).\nI think it must be a 16bit format but I cant get the numbers to line up.\nData is stored in the form of a hex string I believe. First 100 characters here:\n </p>\n <pre><code>  BBFEBBFEBC09BC09BBFEBBFEBC09BC09BC09BC09BBE7BBFEBBFEBBFEBC09BBFEBC09BBFEBBFEBC15BBFEBBFEBBFEBBFEBBF2[continued...]\n</code></pre>\n <p>\n  Luckily I also have an export of this particular file, the corresponding values are here:\n </p>\n <pre><code>0.036,0.036,0.04,0.04,0.036,0.036,0.04,0.04,0.04,0.04,0.027,0.036,0.036,0.036,0.04,0.036,0.04,0.036,0.036,0.045,0.036,0.036,0.036,0.036,0.031,0.031,0.027,0.013,-0.033,-0.028,0.004,0.013,0.018,0.031,0.027,0.04,0.059,0.059,0.068,0.073,0.054,0.045,0.04,0.036,0.027,0.027,0.036,0.031,0.031,0.022[continued...]\n</code></pre>\n <p>\n  I also found the following metadata that I believe relates to this channel, last three entries are data series the first of which is above:\n </p>\n <pre><code>objVersion : 1\nSMType : SMP\ninputType : IN1\nPriority : 1\nColorSerialized : 1\nName : ...\nSensor : eSCPT\nAttention : 5\nAlarm : 10\nScaling : eFS\nLowerScaling : 0\nUpperScaling : 0\nUnit : bar\nLowerRange : -1\nUpperRange : 15\nSignalUnit : V\nLowerSignalRange : -0.2\nUpperSignalRange : 3\nCalcFormula : None\nCAN_VID : None\nCAN_REV : None\nCAN_PCODE : None\nCAN_SER : None\nSlopeDin : eRising\nLogicalDOUTOperation : e1A\nDOUTTriggerA : eLevel\nConditionA : None\nDOUTTriggerB : eLevel\nConditionB : None\nSlopeDout : eRising\n\n\nobjVersion: 1\nSMType: SMP\ninputType: IN1\ninterval: 16\nactValuesSerializedSMP: BBFEBBFEBC09BC09BBFEBBFEBC09BC09BC09BC09BBE7BBFEBBFEBBFEBC09BBFEBC09BBFEBBFEBC15BBFEBBFEBBFEBBFEBBF2[continued...]\nminValuesSerializedSMP: BBDCBBD0BBE7BBDCBBE7BBDCBBDCBBE7BBE7BBF2BBE7BBE7BBE7BBDCBBFEBBF2BBFEBBF2BBF2BBF2BBFEBBE7BBF2BBE7BBE7[continued...]\nmaxValuesSerializedSMP: BC15BC09BC15BC09BC09BC15BC09BC15BC15BC09BC09BC20BC20BC15BC15BC20BC20BC20BC2CBC20BC20BC20BC15BC20BC09[continued...]\n</code></pre>\n <p>\n  Somewhere it mentions 1 decimal place which made me think fixed point or\n  <code>\n   bcd\n  </code>\n  .\n </p>\n <p>\n  Does anyone recognize this encoding, are there any keywords that might help me in the right direction?\nAre there any resources that I could look at that may help.\nIf there are any relevant tags please either add them or let me know.\n </p>\n <p>\n  Things I have already tried:\n </p>\n <ul>\n  <li>\n   Big and little endian floats and ints (16bit) (\n   <code>\n    h\n   </code>\n   ,\n   <code>\n    H\n   </code>\n   ,\n   <code>\n    e\n   </code>\n   in python struct module)\n  </li>\n  <li>\n   BCD (\n   <a href=\"https://stackoverflow.com/a/71626800/2121419\">\n    from this answer on SO\n   </a>\n   ) as well as reversed\n  </li>\n </ul>\n <p>\n  Things that I have considered and not (completely) explored:\n </p>\n <ul>\n  <li>\n   Scaling the values but some of the range values in the header/metadata\n  </li>\n  <li>\n   Some sort of operation using\n   <code>\n    LogicalDOUTOperation\n   </code>\n   from the metadata.\n  </li>\n  <li>\n   What is SMP Encoding\n  </li>\n </ul>\n <p>\n  Complete Data:\n </p>\n <ul>\n  <li>\n   <a href=\"https://pastebin.com/7xday1bf\" rel=\"nofollow noreferrer\">\n    Encoded Values\n   </a>\n  </li>\n  <li>\n   <a href=\"https://pastebin.com/wEDmWr9V\" rel=\"nofollow noreferrer\">\n    Actual Values\n   </a>\n  </li>\n </ul>\n <p>\n  First 20 points:\n </p>\n <ul>\n  <li>\n   <p>\n    <a href=\"https://i.sstatic.net/M3fhJ.png\" rel=\"nofollow noreferrer\">\n     <img alt=\"Encoded Values\" src=\"https://i.sstatic.net/M3fhJ.png\"/>\n    </a>\n   </p>\n  </li>\n  <li>\n   <p>\n    <a href=\"https://i.sstatic.net/ERM47.png\" rel=\"nofollow noreferrer\">\n     <img alt=\"Actual Values\" src=\"https://i.sstatic.net/ERM47.png\"/>\n    </a>\n   </p>\n  </li>\n </ul>\n <p>\n  Taking the encoded Value\n  <code>\n   X\n  </code>\n  and the actual value\n  <code>\n   Y\n  </code>\n  :\nthe following appears to hold:\n  <code>\n   AX+B = Y\n  </code>\n  where\n  <code>\n   A\n  </code>\n  and\n  <code>\n   B\n  </code>\n  are\n  <code>\n   9/23000 = 0.00039130....\n  </code>\n  and\n  <code>\n   -18.79591...\n  </code>\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "195",
    "tags": [
        "hex"
    ],
    "user": "L Selter",
    "time": "Apr 6, 2022 at 15:56",
    "comments": [
        {
            "user": "sudhackar",
            "text": "<html><body><span class=\"comment-copy\">\n Can you control the values that are being encoded? Try encoding some powers of two that have a simple representation in binary. I tried both\n <code>\n  bfloat16\n </code>\n and 'float16` - both don't apply on your data\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "L Selter",
            "text": "<html><body><span class=\"comment-copy\">\n @sudhackar Unfortunately no, we have some old datalogger files lying around, but do not regularly use this type of logger.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "sudhackar",
            "text": "<html><body><span class=\"comment-copy\">\n Please attach the complete series and I can do some exponent based analysis to rule out if the data is transformed in any way\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "sudhackar",
            "text": "<html><body><span class=\"comment-copy\">\n In the current state of the values posted the hex values tend to increase linearly -\n <code>\n  0.027 : BBE7, 0.031 : BBF2, 0.036 : BBFE, 0.040 : BC09, 0.045 : BBF2\n </code>\n Any more data will help me confirm more.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "L Selter",
            "text": "<html><body><span class=\"comment-copy\">\n Thank you @Sudhacker, I have attached graph for first 20 points, and pastebins for a complete series.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}