{
    "title": "When I start up a remote thread in an application, why does it always crash when it tries to access data in the thread structure?",
    "link": "https://reverseengineering.stackexchange.com/questions/13229/when-i-start-up-a-remote-thread-in-an-application-why-does-it-always-crash-when",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm  on\n  <em>\n   OS X 10.10 64 bit (x86_64)\n  </em>\n  and created a chunk of memory called code with\n  <code>\n   vm_allocate\n  </code>\n  .  I allocate a chunk of memory for a stack.  I load a library to memory and determine an entry point to the library.  I write the library to my code buffer using\n  <code>\n   vm_write\n  </code>\n  , no problems there.\n </p>\n <p>\n  I setup the registers and call\n  <code>\n   thread_create_running\n  </code>\n  and run remote thread into another process.\n </p>\n <p>\n  Over in the other process the thread starts.  I'm using\n  <em>\n   lldb\n  </em>\n  and have it setup so when my thread starts it\n  <em>\n   breaks on that entry point\n  </em>\n  I see my code.  I step through the code.\n </p>\n <p>\n  However it crashes when it tries to do the\n  <code>\n   _pthread_set_self\n  </code>\n  .  If I step into\n  <code>\n   pthread_set_self\n  </code>\n  , it crashes in\n  <code>\n   _pthread_mutex_lock\n  </code>\n  at the following instruction:\n </p>\n <pre><code>movq %gs:0x0, %rax\n</code></pre>\n <p>\n  (Note:\n  <code>\n   gs\n  </code>\n  is\n  <code>\n   0x00000000\n  </code>\n  prior to the instruction where the crash occurs)\n </p>\n <p>\n  It's my understanding this instruction is an operation to retrieve the first segment of\n  <code>\n   gs\n  </code>\n  from a thread segment structure and move it into the\n  <code>\n   rax\n  </code>\n  register.\n </p>\n <p>\n  <strong>\n   My question is what do I need to do to prevent the crash that ensues upon execution of this instruction?\n  </strong>\n  Upon execution of this instruction I see\n  <code>\n   EXC_BAD_ACCESS\n  </code>\n  in\n  <code>\n   pthread_mutex_lock\n  </code>\n  .\n </p>\n <p>\n  I tried putting in the code to\n  <code>\n   pthread_mutex_init\n  </code>\n  , followed by\n  <code>\n   pthread_mutex_lock\n  </code>\n  then\n  <code>\n   pthread_set_self\n  </code>\n  .  However when it hits the first\n  <code>\n   pthread_mutex_lock\n  </code>\n  , i get the same issue.  It dies at the same spot.\n </p>\n <p>\n  Any ideas?\n </p>\n <p>\n  My target app to which i don't have source code, is multi-threaded.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "442",
    "tags": [
        "osx",
        "thread",
        "lldb",
        "injection"
    ],
    "user": "Div",
    "time": "Aug 8, 2016 at 5:51",
    "comments": [
        {
            "user": "Lupe",
            "text": "<html><body><span class=\"comment-copy\">\n Did you ever figure this out? I'm having the exact same problem.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}