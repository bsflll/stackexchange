{
    "title": "Antidebug/reverse engineering targeted for libraries [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/14370/antidebug-reverse-engineering-targeted-for-libraries",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed\n        </b>\n        . This question needs to be more\n        <a href=\"/help/closed-questions\">\n         focused\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       <b>\n        Want to improve this question?\n       </b>\n       Update the question so it focuses on one problem only by\n       <a href=\"/posts/14370/edit\">\n        editing this post\n       </a>\n       .\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2017-01-19 02:24:01Z\">\n        8 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/14370/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  So I'm reading about antidebug and anti-reverse engineering techniques, but these cover, in all the docs I've seen, just executables.\n </p>\n <p>\n  Are there any resources that target\n  <em>\n   specifically\n  </em>\n  shared and static libraries?\n </p>\n <p>\n  If not, are the techniques for executables mainly applicable for static/dynamic libraries?\n </p>\n <p>\n  Thanks!\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "186",
    "tags": [
        "debugging",
        "binary-analysis",
        "c",
        "anti-debugging",
        "libraries"
    ],
    "user": "senseiwa",
    "time": "8 years ago",
    "comments": [
        {
            "user": "NirIzr",
            "text": "<html><body><span class=\"comment-copy\">\n It should be pretty straight forward to adjust anti-debugging techniques from executables to libraries. Which parts are you having difficulties with?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "senseiwa",
            "text": "<html><body><span class=\"comment-copy\">\n Apparently I can use the tutorials for executable. I have (now) no difficulties. I needed to assess the feasibility before embarking in this effort.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  To the best of my knowledge theoretically most obfuscation techniques are also applicable to libraries, but there are considerable downsides: Slowdown and increased support-difficulties. Please note if a program does something, there is always a way to find out how it archived it when you control the execution environment.\n </p>\n <p>\n  I'd advise you to keep any business logic you want to protect out of libraries by keeping the libraries generic. If your business model concerns the distribution of logic you want to keep a secret - its a pretty bad situation.\n </p>\n <p>\n  If you really want to offer some confidential functionality and performance is not an issue, think about offering it on the server side.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Nordwald",
            "time": "Jan 12, 2017 at 8:53",
            "is_accepted": true,
            "comments": [
                {
                    "user": "senseiwa",
                    "text": "<span class=\"comment-copy\">I agree, but what if I need in my business to offer secret functionalities on a client? I know this is bad, but are there additional recommendations?</span>",
                    "time": null
                },
                {
                    "user": "Nordwald",
                    "text": "<span class=\"comment-copy\">When performance isn't of utmost importance, you can still apply anti-reversing obfuscation. These may slow down, but experienced reversers will always be able to find out what is happening.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I think all anti-debug and anti-reversing techniques are also applicable to shared and static libraries. Shared libraries are still code, just placed in a different file format. I guess people don't talk much about anti-reversing techniques in library codes since the techniques are the same.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "yellowbyte",
            "time": "Jan 11, 2017 at 21:12",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Nordwald",
                    "text": "<span class=\"comment-copy\">I tend to disagree, since symbols are important and most obfuscation has influence on the performance which is unfavorably in case of shared libraries which do heavy lifting.</span>",
                    "time": null
                },
                {
                    "user": "yellowbyte",
                    "text": "<span class=\"comment-copy\">I see. Good point.</span>",
                    "time": null
                }
            ]
        }
    ]
}