{
    "title": "how to print non printable address using python",
    "link": "https://reverseengineering.stackexchange.com/questions/32807/how-to-print-non-printable-address-using-python",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  i have been doin ctf challenge and came across a problem when i have to push the address of a function into eip{instruction pointer} by overflowing the buffer but the main problem here is that the address of the function is 0x401199 and in other to push the address i have to push it in reverse order like \\x99\\x11\\x40\\x00 and i have been using python to do so , but the main problem here is that some the these value like \\x99 and \\x11 are associated with non printable character and i cannot guess any other method to do so please some one with time can clear my request\n </p>\n <p>\n  i hope i explained my query briefly\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "64",
    "tags": [
        "ida",
        "linux"
    ],
    "user": "Zishan Ansari",
    "time": "Mar 14, 2024 at 20:50",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You're describing encoding a Python int into bytes. In this case, the int is a 32-bit unsigned integer.\n </p>\n <p>\n  Use\n  <a href=\"https://docs.python.org/3/library/struct.html#struct.pack\" rel=\"nofollow noreferrer\">\n   struct.pack\n  </a>\n  for this:\n </p>\n <pre class=\"lang-py prettyprint-override\"><code>>>> struct.pack(\"<I\", 0x401199)\nb'\\x99\\x11@\\x00'\n</code></pre>\n <ul>\n  <li>\n   <code>\n    <\n   </code>\n   means\n   <code>\n    little endian\n   </code>\n   (=smallest byte goes first)\n  </li>\n  <li>\n   <code>\n    I\n   </code>\n   means\n   <code>\n    unsigned int\n   </code>\n   (=32-bit on most desktop platforms)\n  </li>\n </ul>\n <p>\n  For the reasons you've describing, these bytes cannot generally be converted into a string:\n  <code>\n   b'\\x99\\x11@\\x00'\n  </code>\n  is not a valid utf-8 encoding.\n </p>\n <p>\n  For converting bytes into strings, use the\n  <a href=\"https://docs.python.org/3/library/binascii.html\" rel=\"nofollow noreferrer\">\n   <code>\n    binascii\n   </code>\n  </a>\n  module (+\n  <code>\n   .encode\n  </code>\n  to convert\n  <code>\n   bytes\n  </code>\n  into a Python string)\n </p>\n <p>\n  For example:\n </p>\n <pre class=\"lang-py prettyprint-override\"><code>>> binascii.b2a_hex(b'\\x99\\x11@\\x00').decode()\n'99114000'\n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "maarten",
            "time": "Mar 15, 2024 at 17:04",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Zishan Ansari",
                    "text": "<span class=\"comment-copy\">thanks for the help but didnot work! i added struck.pack but now python return bytes not str when use struct,pack but cannot concatenate with the padding  i am trying to</span>",
                    "time": null
                },
                {
                    "user": "maarten",
                    "text": "<span class=\"comment-copy\">The python str type is for readable text, byte is for binary data. Your payload needs to meet certain specifications such as having a specific byte length, having some data at specific offset.</span>",
                    "time": null
                },
                {
                    "user": "maarten",
                    "text": "<span class=\"comment-copy\">That said, you can convert a byte string to text, and ignore errors by doing: <code>b\"\\x99\\x11@\\x00\".decode(errors=\"ignore\")</code></span>",
                    "time": null
                }
            ]
        }
    ]
}