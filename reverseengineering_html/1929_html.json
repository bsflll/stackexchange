{
    "title": "How can I control the Hex-Rays decompiler plugin from IDA with scripts?",
    "link": "https://reverseengineering.stackexchange.com/questions/1929/how-can-i-control-the-hex-rays-decompiler-plugin-from-ida-with-scripts",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to use IDA with the Hex-Rays decompiler plugin as part of automated static analysis, possibly on a large number of files without opening each one and telling it to produce a C file individually.\n </p>\n <p>\n  Ideally, I'd like to run IDA from the command line, and get the decompilation based on initial autoanalysis as output.  This way I can run it as part of\n  <a href=\"http://sourceforge.net/projects/mastiff/\">\n   Mastiff\n  </a>\n  or grep for certain functions in a set of binaries.   By my reading of\n  <a href=\"http://www.hexblog.com/?p=53\">\n   On batch analysis\n  </a>\n  from the Hex Blog, what I need is an IDA script that interacts with the decompiler plugin, but I can't figure out how to actually do so.\n </p>\n <p>\n  So this leaves me with 2 subquestions:\n </p>\n <ul>\n  <li>\n   How can I tell the Hex-Rays decompiler to \"Produce C file\" (decompile all functions) from a script?\n  </li>\n  <li>\n   Does that script need to be IDC, or is IDAPython possible?\n  </li>\n </ul>\n</div>\n</body></html>",
    "votes": "9",
    "answers": 1,
    "views": "6k",
    "tags": [
        "ida",
        "ida-plugin",
        "idapython"
    ],
    "user": "nopnopgoose",
    "time": "Apr 25, 2013 at 14:13",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  [Back in 2013] the decompiler did not have a scripting API. So you had these choices:\n </p>\n <ul>\n  <li>\n   <a href=\"http://www.hexblog.com/?p=126\" rel=\"nofollow\">\n    Add necessary functions to IDC\n   </a>\n   using a native plugin that calls the decompiler API.\n  </li>\n  <li>\n   Use\n   <code>\n    ctypes\n   </code>\n   or similar to call the C++ API directly from Python. I posted a small PoC script doing it to the Hex-Rays forum a couple years ago.\n  </li>\n  <li>\n   If you just want to have the decompiled text, you can use\n   <a href=\"https://www.hex-rays.com/products/decompiler/manual/batch.shtml\" rel=\"nofollow\">\n    the command line option\n   </a>\n   .\n  </li>\n </ul>\n <p>\n  <a href=\"https://www.hex-rays.com/products/ida/6.6/index.shtml\" rel=\"nofollow\">\n   IDA 6.6 (released in June 2014)\n  </a>\n  added official Python bindings for the decompiler, so it now can be scripted from Python. For sample code, see\n  <code>\n   vds*.py\n  </code>\n  scripts in the\n  <a href=\"https://github.com/idapython/src/tree/master/examples\" rel=\"nofollow\">\n   IDAPython repository\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "6",
            "user": "Igor Skochinsky",
            "time": "May 19, 2016 at 11:35",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">Comments are not for extended discussion; this conversation has been <a href=\"https://chat.stackexchange.com/rooms/93139/discussion-on-answer-by-igor-skochinsky-how-can-i-control-the-hex-rays-decompile\">moved to chat</a>.</span>",
                    "time": null
                }
            ]
        }
    ]
}