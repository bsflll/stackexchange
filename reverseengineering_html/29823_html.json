{
    "title": "CR16C architecture code pointers in Ghidra?",
    "link": "https://reverseengineering.stackexchange.com/questions/29823/cr16c-architecture-code-pointers-in-ghidra",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  On CompactRISC CR16C architecture, because instructions only start at even-numbered addresses, code pointers (as used by JAL, JUMP, Jcond) are shifted one bit to the right. These are distinct from data pointers, which are byte-addressable and just contain the target address without any bit shifting.\n </p>\n <p>\n  Does Ghidra have any additional pointer type that can be used to distinguish between these code pointers and data pointers?\n </p>\n <p>\n  Example of how this currently looks, using the standard pointer type for both:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/m8JUv.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/m8JUv.png\"/>\n  </a>\n </p>\n <p>\n  (field1 is a code pointer, with the comment indicating the address it should be, and field2 is a data pointer)\n </p>\n <p>\n  I tried creating a function definition and setting the type as a pointer to that, but it still kept pointing to the wrong address. So, alternatively, could this behaviour be a bug?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "119",
    "tags": [
        "ghidra",
        "pointer"
    ],
    "user": "zzt",
    "time": "Jan 6, 2022 at 9:18",
    "comments": [],
    "answers_data": []
}