{
    "title": "How to automatically rename some IDA functions from a given list?",
    "link": "https://reverseengineering.stackexchange.com/questions/11874/how-to-automatically-rename-some-ida-functions-from-a-given-list",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a text file which contains a list of function name and address pairs, structured like this :\n </p>\n <pre><code>194C:841B LoadMessage\n194C:8429 ShowDialog\n...\n</code></pre>\n <p>\n  Is there a way (eg: script, automation, ...) to automatically rename all relation functions of the IDA disassembly according the text file ?\n </p>\n</div>\n</body></html>",
    "votes": "7",
    "answers": 1,
    "views": "10k",
    "tags": [
        "ida",
        "idapython",
        "automation",
        "script"
    ],
    "user": "tigrou",
    "time": "Jan 28, 2016 at 12:44",
    "comments": [
        {
            "user": "w s",
            "text": "<html><body><span class=\"comment-copy\">\n What does this form of address mean ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "tigrou",
            "text": "<html><body><span class=\"comment-copy\">\n This is a segmented address from an old DOS 16 bit program.  See here :\n <a href=\"https://en.wikipedia.org/wiki/X86_memory_segmentation\" rel=\"nofollow noreferrer\">\n  en.wikipedia.org/wiki/X86_memory_segmentation\n </a>\n We can consider it contains 32 bit regular addresses if it make it easier.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This way to automate things called IDAPython, its documentation is\n  <a href=\"https://www.hex-rays.com/products/ida/support/idapython_docs/\" rel=\"noreferrer\">\n   here\n  </a>\n  :\n </p>\n <p>\n  1 - Save this script somewhere, remember where.\n </p>\n <pre><code>#Not used, not debbugged, not ran even once\n#Use on your own risk, beware errors\n\nimport idaapi\nimport idautils\nimport idc\n\ndef do_rename(l):\n    splitted = l.split()\n    straddr = splitted[0]\n    strname = splitted[1].replace(\"\\r\", \"\").replace(\"\n\", \"\")\n\n    if straddr.find(\":\") != -1: #assuming form segment:offset\n        #removing segment, offset should be unique, if it isn't so, we should handle it differently\n        straddr = straddr.split(\":\")[1]\n\n    eaaddr = int(straddr, 16)\n    idc.MakeCode(eaaddr)\n    idc.MakeFunction(eaaddr)\n    idc.MakeNameEx(int(straddr, 16), strname, idc.SN_NOWARN)\n\n\nif __name__ == \"__main__\":\n    f = open( \"your_file_name\", \"r\")\n    for l in f:\n        do_rename(l)\n    f.close()\n</code></pre>\n <p>\n  In IDA, open File-->Script file, chose the script and run it.\nNote that you should insert your file name and verify that the address is converted well.\n </p>\n <p>\n  Hope it gives some kind of direction.\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "w s",
            "time": "Jan 28, 2016 at 13:39",
            "is_accepted": true,
            "comments": [
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">Keep me posted :)</span>",
                    "time": null
                },
                {
                    "user": "tigrou",
                    "text": "<span class=\"comment-copy\">It worked like a charm. The only change i made was in the way the linear address is calculated : <code>eaaddr = int(address[0], 16) * 16 + int(address[1], 16) + offset</code>. Offset is calculated from a C function that IDA was able to find itself and for which i know the address : <code>offset = LocByName(\"_system\") - 0x189B</code></span>",
                    "time": null
                }
            ]
        }
    ]
}