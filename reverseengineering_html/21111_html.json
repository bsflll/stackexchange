{
    "title": "De-obfuscating code ran through JScrambler 3x via Eval() functions",
    "link": "https://reverseengineering.stackexchange.com/questions/21111/de-obfuscating-code-ran-through-jscrambler-3x-via-eval-functions",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am relatively new to JS and de-obfuscation in general and I am having difficulties reversing some complicated JS. I know the code itself is obsfucated via jscrambler 3-4x and therefore is ran through the eval() function the same amount of times to reconstruct and execute the code.\n </p>\n <p>\n  Are there any good sources around creating de-obfuscators in this context? it appears most sources I have looked at only talk about code being ran through the eval function once.\n </p>\n <p>\n  Thank you for any help!\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "1k",
    "tags": [
        "decompilation",
        "deobfuscation",
        "javascript"
    ],
    "user": "Impensus",
    "time": "Apr 10, 2019 at 14:57",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If I'm not mistaken, jscrambler has built-in capabilities against de-obfuscators. If you look at their docs you'll see that they were already doing this at version 3. Since they are an enterprise tool (unlike most JS obfuscators), it's likely there isn't any source for this.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Ashley Green",
            "time": "Apr 11, 2019 at 13:51",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Impensus",
                    "text": "<span class=\"comment-copy\">The difficulties I am having is that because JS isn't meant to be obfuscated, there are not too many public deobfuscators  that are effective for the complicated source I am using. What I was wondering is if there are any documents on writing your own or potentially any private/paid JS deobfuscators out there.</span>",
                    "time": null
                }
            ]
        }
    ]
}