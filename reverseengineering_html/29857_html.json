{
    "title": "How can i reconstruct a full PE from a memory injected PE that only has IAT + sections content?",
    "link": "https://reverseengineering.stackexchange.com/questions/29857/how-can-i-reconstruct-a-full-pe-from-a-memory-injected-pe-that-only-has-iat-se",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a injected PE (kernel mode rootkit to be exact) that only has the IAT table, which basically only stores the addresses of some kernel functions in an array which is referenced inside its code, then this is followed by some data section which stores strings, and after that comes the functions.\n </p>\n <p>\n  My question is that after i dump this injected mini PE, what is the easiest way that i convert it to a real PE in order to analyse it easier with IDA (or even better, a full working PE/.sys file that i can actually load and debug) ?\n </p>\n <p>\n  Also lets assume that i have found its entrypoint.\n </p>\n <p>\n  So, is there any tool for this?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "281",
    "tags": [
        "ida",
        "windows",
        "malware",
        "pe",
        "kernel-mode"
    ],
    "user": "OneAndOnly",
    "time": "Jan 12, 2022 at 13:51",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Hi ... hmm, this sounds like eliciting opinions (\"easiest way\"). You'd have to undo the section alignment and return to file alignment, that part is trivial. Then you'd have to record the base address and use that to undo relocations (if any). But since you state it's a rootkit, are you sure you are even getting to see everything there is to see from user mode? Have you considered setting Windows to create a full dump (\n <code>\n  pagefile.sys\n </code>\n must be set to system-managed before and rebooted once after the change) and analyze that? The kernel view of memory should be more complete.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "OneAndOnly",
            "text": "<html><body><span class=\"comment-copy\">\n @0xC0000022L The view of it is complete i am sure of that, also i am attached to the remote kernel using IDA pro. So right now i am mostly looking to see if there is any tool available that can help me with this or not. Obviously i can write a very complex script that creates a PE from this dump, but if someone has already written it, there is no point, since it is very common for malwares to remove many parts of their PE headers and only keep those that are needed.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n How about\n <a href=\"https://reverseengineering.stackexchange.com/q/25516/245\">\n  this Q&A\n </a>\n (OllyDumpEx)? Or\n <a href=\"https://www.aldeid.com/wiki/LordPE\" rel=\"nofollow noreferrer\">\n  LordPE\n </a>\n (download links in archive.org should work)? Or\n <a href=\"https://github.com/NtQuery/Scylla\" rel=\"nofollow noreferrer\">\n  Scylla\n </a>\n ? There are many options out there. I think most emphasize the reconstruction of the import table, though, because this (along with relocations) is the tougher nut to crack, compared to fixing section vs. file alignment.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Oh, fascinating. Hadn't realized IDA also facilitates remote kernel debugging.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}