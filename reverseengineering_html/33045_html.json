{
    "title": "Why some anti-debugging/malware does `wmiadap.exe /f /t /r`?",
    "link": "https://reverseengineering.stackexchange.com/questions/33045/why-some-anti-debugging-malware-does-wmiadap-exe-f-t-r",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It seems some possibly legit software, but also malware\n  <a href=\"https://www.google.com/search?q=%22wmiadap.exe+%2Ff+%2Ft+%2Fr%22\" rel=\"nofollow noreferrer\">\n   does\n  </a>\n  <code>\n   wmiadap.exe /f /t /r\n  </code>\n  . Apparently it's part of their anti-debugging attempts. (On Linux some such software I've seen drops a\n  <code>\n   coredump_filter\n  </code>\n  instead, in\n  <code>\n   /proc\n  </code>\n  .)\n </p>\n <p>\n  I've looked at the\n  <a href=\"https://learn.microsoft.com/en-us/windows/win32/wmisdk/wmiadap\" rel=\"nofollow noreferrer\">\n   Win docs\n  </a>\n  for\n  <code>\n   wmiadap\n  </code>\n  but I don't quite understand the point:\n </p>\n <blockquote>\n  <p>\n   The WmiPerfClass provider updates WMI Performance Counter Classes only when a new performance object is added. You still can run Wmiadap with the /r switch to parse the Windows Driver Model drivers to create performance objects. The /f switch still forces an update of the WMI classes from the performance libraries.\n  </p>\n </blockquote>\n <p>\n  The\n  <code>\n   /t\n  </code>\n  flag is not documented (there, by MS).\n </p>\n <p>\n  How does that\n  <code>\n   wmiadap.exe /f /t /r\n  </code>\n  help with anti-debugging?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "200",
    "tags": [
        "windows",
        "anti-debugging"
    ],
    "user": "got trolled too much this week",
    "time": "Jun 24, 2024 at 0:47",
    "comments": [
        {
            "user": "got trolled too much this week",
            "text": "<html><body><span class=\"comment-copy\">\n I suspect it's because ProcMon (rather than a typical debugger) uses a filter driver.\n <a href=\"https://medium.com/@demonia/how-i-managed-to-bypass-process-monitor-detection-for-anti-debuggers-and-riot-games-95d06261c1ad\" rel=\"nofollow noreferrer\">\n  medium.com/@demonia/â€¦\n </a>\n I'm not sure how effective the method is though. Remains to be tested.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}