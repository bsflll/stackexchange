{
    "title": "Finding AES Key in binary using Ghidra and FindCrypt",
    "link": "https://reverseengineering.stackexchange.com/questions/29315/finding-aes-key-in-binary-using-ghidra-and-findcrypt",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I would like to learn more about RE.\n </p>\n <p>\n  I wrote a simple program on a STM32F107 which does nothing else than encrypting and decrypting a text once using AES128-ECB.\n </p>\n <p>\n  Here is the C code (I intentionally left out the key so far):\n </p>\n <pre><code>    struct AES_ctx TestAes;\nuint8_t key[16] =\n        { MY_KEY_IS_HERE };\nuint8_t InputText[16] =\n        { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0xa, 0xb, 0xc, 0xd, 0xe, 0xf, 0 };\nAES_init_ctx(&TestAes, key);\nAES_ECB_encrypt(&TestAes, InputText);\nAES_ECB_decrypt(&TestAes, InputText);\n</code></pre>\n <p>\n  Now I want to find the 16 byte private key in my binary.\n </p>\n <p>\n  When I open the binary in a hex editor and search for my key I find all 16 bytes in a row.\n </p>\n <p>\n  I loaded the binary in Ghidra, installed\n  <a href=\"https://github.com/TorgoTorgo/ghidra-findcrypt\" rel=\"nofollow noreferrer\">\n   FindCrypt\n  </a>\n  before and now run the analysis.\n </p>\n <p>\n  FindCrypt now finds AES_Decrytion_SBox_Inverse and AES_Ecryption_SBox.\n </p>\n <p>\n  But both are not my AES key but the SBox. How does it go on after that? In all tutorials I find it looks quite simple, because the Functions Finder finds the AES functions - but since the project is Bare Metal this will probably not work.\n </p>\n <p>\n  I thought FindCrypt looks for some kind of hex pattern which could result in a key...\n </p>\n <p>\n  I have\n  <a href=\"https://easyupload.io/pbvoyu\" rel=\"nofollow noreferrer\">\n   attached\n  </a>\n  the binary. endian is little, architecture is ARM Cortex (I think?!)\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/inNrx.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Ghidra FindCrypt Analysis\" src=\"https://i.sstatic.net/inNrx.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "3k",
    "tags": [
        "disassembly",
        "ghidra",
        "decryption"
    ],
    "user": "guenthernagel",
    "time": "Sep 20, 2021 at 15:49",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  FindCrypt is not supposed to find your key, it's supposed to find fixed, known constants associated with well-known cryptographic algorithms. You can see the byte patterns it's looking for in its\n  <a href=\"https://github.com/TorgoTorgo/ghidra-findcrypt/blob/master/FindCrypt/data/database.json\" rel=\"noreferrer\">\n   database.json\n  </a>\n  . It has done exactly what it was supposed to do. Your job as a reverse engineer is to look at the cross-references to the tables that it found and see if you can determine the key being passed as argument to the encryption or decryption routines.\n </p>\n</div>\n</body></html>",
            "votes": "7",
            "user": "Rolf Rolles",
            "time": "Sep 21, 2021 at 4:59",
            "is_accepted": false,
            "comments": []
        }
    ]
}