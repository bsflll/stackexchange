{
    "title": "Sniffing https traffic of an android app",
    "link": "https://reverseengineering.stackexchange.com/questions/15935/sniffing-https-traffic-of-an-android-app",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to do a challenge: automise some tasks that I do in a game so I can get the max of points.\n </p>\n <p>\n  To do that, I need to know the url called and the parameters that are used in the Game. After setting a genymotion station and made a proxy, I've discovered that the game won't start if the certificate doesn't match with the one that is set in the app.\n </p>\n <p>\n  So my question is how I can go further?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "15k",
    "tags": [
        "android",
        "apk",
        "sniffing",
        "https-protocol"
    ],
    "user": "rsabir",
    "time": "Jul 28, 2017 at 10:06",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you're a Windows user, as a matter of dynamic analysis, you could try using an emulator like\n  <a href=\"http://www.bluestacks.com/\" rel=\"nofollow noreferrer\">\n   BlueStacks\n  </a>\n  , then inspect your system network traffic with a program like\n  <a href=\"http://www.telerik.com/fiddler\" rel=\"nofollow noreferrer\">\n   Fiddler\n  </a>\n  or\n  <a href=\"https://www.wireshark.org/\" rel=\"nofollow noreferrer\">\n   WireShark\n  </a>\n  .\n </p>\n <p>\n  Additionally, you could use a program like\n  <a href=\"https://github.com/cheat-engine/cheat-engine\" rel=\"nofollow noreferrer\">\n   Cheat Engine\n  </a>\n  to open the BlueStacks process and scan its memory for strings related to URLs. As an aside, you could statically analyze the APK by unpacking/decompressing it, then comb through its files looking for relevant strings.\n </p>\n <p>\n  Back to Cheat Engine, you could ultimately write a script in Assembly or Lua to automate certain tasks--or you could just change certain values in memory if there is weak server validation (or none at all).\n </p>\n <p>\n  Perhaps a significantly easier solution all around is to use something like\n  <a href=\"https://www.autoitscript.com/site/autoit/\" rel=\"nofollow noreferrer\">\n   AutoIt\n  </a>\n  , which would allow you to script mouse movements and keystrokes. At that rate, all you have to do is install the game in the emulator, then script whatever process(es) you need to script for automation.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "dsasmblr",
            "time": "Jul 28, 2017 at 15:52",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Anteino",
                    "text": "<span class=\"comment-copy\">Would you recommend using the emulator from the android sdk instead of bluestacks? I'm doing a similar project but the specific app does not run on bluestacks.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you can emulate the application, you could try to look at the hooking method :) for example take a look to:\n </p>\n <ul>\n  <li>\n   <p>\n    <a href=\"https://forum.xda-developers.com/xposed\" rel=\"nofollow noreferrer\">\n     xposed framework\n    </a>\n    -  a simple\n    <a href=\"https://blog.squareroots.de/en/2015/12/seccon-2015-online-ctf-reverse-engineering-android-apk-1/\" rel=\"nofollow noreferrer\">\n     example\n    </a>\n    - and\n    <a href=\"https://github.com/rovo89/XposedBridge/wiki/Development-tutorial\" rel=\"nofollow noreferrer\">\n     another\n    </a>\n   </p>\n  </li>\n  <li>\n   <p>\n    <a href=\"https://www.frida.re/docs/examples/android/\" rel=\"nofollow noreferrer\">\n     frida\n    </a>\n    - Itâ€™s a dynamic code instrumentation toolkit\n   </p>\n  </li>\n </ul>\n <p>\n  Xposed Framework requires root access to install.\n  \n\n  Also Frida require a rooted phone.\n  \n\n  Then you can edit for example the parameters of the function which controls the certificate\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "invictus85",
            "time": "Jul 28, 2017 at 14:42",
            "is_accepted": false,
            "comments": [
                {
                    "user": "rsabir",
                    "text": "<span class=\"comment-copy\">Is your suggestions work for an app that is downloaded from the play store?</span>",
                    "time": null
                },
                {
                    "user": "invictus85",
                    "text": "<span class=\"comment-copy\">Yes, if you are able to emulate it, otherwise you need a rooted phone</span>",
                    "time": null
                },
                {
                    "user": "invictus85",
                    "text": "<span class=\"comment-copy\">Try to look this <a href=\"http://repo.xposed.info/module/kmod.xposed\" rel=\"nofollow noreferrer\">repo.xposed.info/module/kmod.xposed</a></span>",
                    "time": null
                }
            ]
        }
    ]
}