{
    "title": "Arm hex firmware reverse",
    "link": "https://reverseengineering.stackexchange.com/questions/17419/arm-hex-firmware-reverse",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  it has been a couple of months that I'm working on the firmware produced by a\n  <a href=\"http://www.brookaccessory.com/\" rel=\"nofollow noreferrer\">\n   company\n  </a>\n  that makes (not licensed) gamepad console adapters.\nOne of my goal was to understand how they bypassed (hacked) the SHA authorization process involved in the new consoles licensed game-pad communication.\n </p>\n <p>\n  Note: I found a very interested response from\n  <strong>\n   SYS_V\n  </strong>\n  user:\n  <a href=\"https://reverseengineering.stackexchange.com/questions/15006/approach-to-extract-useful-information-from-binary-file/15025#15025\">\n   Approach to extract useful information from binary file\n  </a>\n  that helped me a lot, but I still struggling with the reverse.\n </p>\n <p>\n  Here the facts:\n </p>\n <ol>\n  <li>\n   <p>\n    By looking at one of their\n    <a href=\"https://cdn7.bigcommerce.com/s-ajh2rr5h/images/stencil/1280x1280/products/999/5939/Brook_Universal_Fighting_Board__48294.1457603057.jpg\" rel=\"nofollow noreferrer\">\n     circuit board\n    </a>\n    and by doing some reverse engineering on their software update programs, I'm 95% sure that the uC is a Nuvoton M452RG6AE/M452RE6A (ARM-Cortex M4).\n    <a href=\"http://www.nuvoton.com/hq/products/microcontrollers/arm-cortex-m4-mcus/?__locale=en\" rel=\"nofollow noreferrer\">\n     Here\n    </a>\n    the datasheet.\n   </p>\n  </li>\n  <li>\n   <p>\n    The company stores the firmware on a public\n    <a href=\"ftp://219.84.35.58/brookhex/\" rel=\"nofollow noreferrer\">\n     ftp\n    </a>\n    .\nSome of them are encrypted (with a non canonical algorithm). \nThe no encrypted firmware are the ones included in the P2_P3P4, P2_X1, P3P4_NEO folders.\n   </p>\n   <p>\n    Some firmware have the LD and AP words as part of their filename. This made me wonder that, probably, they include the bootloader.\n   </p>\n   <p>\n    I'm stuck here.\n   </p>\n   <p>\n    My other goal is to find the way to reverse the encryption algorithm and make the firmware \"readable\".\n   </p>\n  </li>\n  <li>\n   <p>\n    A guy on\n    <a href=\"https://gist.github.com/poliva/d404fafb78ea4200cd3f7232f6caacaa\" rel=\"nofollow noreferrer\">\n     github\n    </a>\n    published the firmware upgrade process with a mac.\nBy looking at these files and reversing the update program, it seems that the update program client send the firmware to the uC encrypted.\nThe bootloader writes the payload on a external i2C memory.\nOnce the firmware upload is completed, the bootloader calculates the checksum and it sends to the update program client for cross checking.\nIf the checksum is valid, the update program client send the \"\n    <strong>\n     0xa6(statusA CMD)\n    </strong>\n    \" to the bootloader that will read the firmware from i2C memory, decrypt and write on the APROM section.\n   </p>\n  </li>\n  <li>\n   <p>\n    It is possible to reverse the not encrypted firwmares with IDA (I'm not familiar with radare), by setting the CPU to ARM-v7M. Some parts are decompiled well, some other are detected as\n    <strong>\n     unk\n    </strong>\n    by IDA and I don't know if there are data or code parts.\n   </p>\n  </li>\n </ol>\n <p>\n  Someone wants to help me out or suggest me something that may help me for proceeding with the reversing?\n </p>\n <p>\n  Update:\n </p>\n <p>\n  For the point #1 and #4, in my question, I was referring to this file\n  <a href=\"ftp://219.84.35.58/brookhex/P2_P3P4/ZPJ0J010_V21_20170627_LD-6EAD_AP-746E.hex\" rel=\"nofollow noreferrer\">\n   V21_LD_AP\n  </a>\n  (md5sum: 5e19b55bb46bb642faebcb19478cec92) and this file\n  <a href=\"ftp://219.84.35.58/brookhex/P2_P3P4/ZPJ0J010_V21_20170627_AP-99F8.hex\" rel=\"nofollow noreferrer\">\n   V21_AP\n  </a>\n  (md5sum: 344facf48a617364d74ad17351678deb) (this version file doesn't contain the LD word in the filename).\n </p>\n <p>\n  My goal is trying to decrypt this\n  <a href=\"ftp://219.84.35.58/brookhex/FightingBoard/ZP003030_V22_20180209_1124_AP-1B1B_auth.hex\" rel=\"nofollow noreferrer\">\n   file\n  </a>\n  .\n </p>\n <p>\n  I'm pretty sure that they use the same encryption algorithm for every firmware. \nHowever, some firmware are released in both ways: encrypted and decrypted. \nAn example is possible to find under the P2_X1 folder (see the firmware V16 versions).\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "2k",
    "tags": [
        "firmware",
        "arm",
        "encryption"
    ],
    "user": "Avok78",
    "time": "Feb 9, 2018 at 18:59",
    "comments": [
        {
            "user": "julian",
            "text": "<html><body><span class=\"comment-copy\">\n What is the specific firmware image you are looking at? Please provide the name, location in the FTP server, and md5sum\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Avok78",
            "text": "<html><body><span class=\"comment-copy\">\n Hi, I edited my original question. However I'm not allowed to post more than 8 links.  This company releases many firmware for every adapter that they produce. These firmware can be decrypted and/or encrypted.  For instance, this file:\n <a href=\"ftp://219.84.35.58/brookhex/P2_X1/ZPK0J020_V16_20161206_AP-3378_auth.hex\" rel=\"nofollow noreferrer\">\n  219.84.35.58/brookhex/P2_X1/â€¦\n </a>\n and this file\n <a href=\"ftp://219.84.35.58/brookhex/P2_X1/ZPK0J020_V16_20161206_AP-D7D1.hex\" rel=\"nofollow noreferrer\">\n  219.84.35.58/brookhex/P2_X1/ZPK0J020_V16_20161206_AP-D7D1.hex\n </a>\n are the same but one is encrypted and the other one not. My goal is to understand the encryption algorithm that they use.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "julian",
            "text": "<html><body><span class=\"comment-copy\">\n Thank you for making those changes. You are providing quite a bit of information - which is good - but not all of it is strictly relevant to the main difficulty you are facing, which is decrypting file\n <code>\n  ZP0***_auth.hex\n </code>\n . It would be great if you could focus as much as you can on details surrounding this particular file - the exact device, board, processor, and everything you know about this particular file specifically. The question would be more clear if one part focused just on the encrypted file and the another part provided the additional related information.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Avok78",
            "text": "<html><body><span class=\"comment-copy\">\n Hi, thanks for you interest. in my opinion, they use the same uC for every product that, as I said, it should a Nuvoton M452RG6AE/M452RE6A (ARM-Cortex M4 - V7M). Since I was not able to decrypt the firmware that I'm interested, I focused my attention on the files that are not encrypted and also on the software update, to try to discover something.  But so far, no luck :-(\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "julian",
            "text": "<html><body><span class=\"comment-copy\">\n I think I understand. Have you identified the bootloader for the device?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}