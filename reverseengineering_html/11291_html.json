{
    "title": "What is array of applicable components?",
    "link": "https://reverseengineering.stackexchange.com/questions/11291/what-is-array-of-applicable-components",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have been digging around and I found a bunch of code that always repeat instructions and my friend suggested that it's calculation of text and he said delphi parameters use eax,edx and ecx.\nI would like to know what is array of Applicable components according to its use in the following code?\n </p>\n <p>\n  Can someone tell me what's happening in this code, is it really calculation of text?\n </p>\n <p>\n  Why  005A6D9D push dword ptr [ebx+esi*4+0C]  puts 00000018 on the stack  instead of 00000011?\n </p>\n <p>\n  Here is the piece of the code\n </p>\n <pre><code> 005A6D66 mov ebx,dword ptr [ebx+esi*4+1DC] \n 005A6D6D push ebx \n 005A6D6E imul ebx,edx,2E2B \n 005A6D74 imul edi,eax,91B7C \n 005A6D7A lea edi,[edi*8+5FD208]; gvar_005FD208:array[101] of TApplicableComponents \n 005A6D81 push dword ptr [edi+ebx*4+4] \n 005A6D85 imul ebx,edx,2E2B \n 005A6D8B imul edi,eax,91B7C \n 005A6D91 lea edi,[edi*8+5FD208]; gvar_005FD208:array[101] of TApplicableComponents \n 005A6D98 lea ebx,[edi+ebx*4] \n 005A6D9B push ebx \n 005A6D9C pop ebx \n 005A6D9D push dword ptr [ebx+esi*4+0C] \n 005A6DA1 imul edx,edx,2E2B \n 005A6DA7 imul eax,eax,91B7C \n 005A6DAD lea eax,[eax*8+5FD208]; gvar_005FD208:array[101] of TApplicableComponents \n 005A6DB4 lea eax,[eax+edx*4] \n 005A6DB7 mov ecx,dword ptr [eax+esi*4+10] \n 005A6DBB pop edx \n 005A6DBC pop eax \n 005A6DBD call 005A3FA8 \n</code></pre>\n <p>\n  Thanks in advance\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "61",
    "tags": [
        "patch-reversing",
        "delphi"
    ],
    "user": "D.Trap",
    "time": "Nov 9, 2015 at 18:35",
    "comments": [],
    "answers_data": []
}