{
    "title": "Finding the h.264 stream in a bytestream",
    "link": "https://reverseengineering.stackexchange.com/questions/9067/finding-the-h-264-stream-in-a-bytestream",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a bytestream that contains h.264 bytestream packets in it. How can I find it?\n </p>\n <p>\n  Output from stream:\n  <a href=\"https://mega.co.nz/#!3llAnLaQ!pc1JPDpDOP6948F2x44LqeYm-p5CDnb91Da334rt4fY\" rel=\"nofollow\">\n   https://mega.co.nz/#!3llAnLaQ!pc1JPDpDOP6948F2x44LqeYm-p5CDnb91Da334rt4fY\n  </a>\n </p>\n <p>\n  The first 13 bytes don't have anything to do with the data, the next one always starts with 0x01, then 0x0000, then four unknown bytes, then 0x000000, the sequence number again, four more unknowns, and finally 0x00. This is being transmitted a UDP packet. The data seems to always be 1460 bytes long. The extra 0's at the end are an issue with my code and can be ignored.\n </p>\n <p>\n  There's a h.264 bytestream in there somewhere, I just don't know where/how to find it. It might be wrapped in a container or protocol or protobuf (unlikely but possible). Does anybody either see how to pick out the stream or recognize this as some known protocol? I can provide my code if needed but right now its a disgusting mess, more of a proof of concept.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "456",
    "tags": [
        "file-format",
        "encodings",
        "protocol",
        "binary-format",
        "communication"
    ],
    "user": "Fred Heinecke",
    "time": "Jun 5, 2015 at 1:11",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "<html><body><span class=\"comment-copy\">\n It's very unlikely this can be decoded without reversing the client program - where does this bytestream come from, which client program is supposed to read it?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}