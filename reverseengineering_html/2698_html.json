{
    "title": "Find out whether additional keys are being used when encrypting data",
    "link": "https://reverseengineering.stackexchange.com/questions/2698/find-out-whether-additional-keys-are-being-used-when-encrypting-data",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Assume I use a software to encrypt data. How would I go about to find out with IDA or other RCE tools as to whether there is more than one key used during the encryption?\n </p>\n <p>\n  I am talking asymmetric encryption here, and it is possible that the software in question hides one or more master keys (or makes use of some already elsewhere on the system) and I want to find that out. How can I approach that task?\n </p>\n <p>\n  NB: you may assume I have determined the various algorithms in use.\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 2,
    "views": "216",
    "tags": [
        "disassembly",
        "encryption"
    ],
    "user": "0xC0000022L",
    "time": "Aug 27, 2013 at 12:45",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Assuming the you are speaking about strong encryption, most of the algorithms are supposed to be\n  <a href=\"http://en.wikipedia.org/wiki/Ciphertext_indistinguishability\" rel=\"nofollow\">\n   indistinguishable\n  </a>\n  even if you provided either the key or the clear text. So, it should not be possible to know that a given key is used  just by looking at the result.\n </p>\n <p>\n  One example of this is the field of\n  <a href=\"http://en.wikipedia.org/wiki/Kleptography\" rel=\"nofollow\">\n   Kleptography\n  </a>\n  where:\n </p>\n <blockquote>\n  <p>\n   [...] the outputs of the infected cryptosystem are computationally indistinguishable from the outputs of the corresponding uninfected cryptosystem. Hence, in black-box implementations (e.g., smartcards) the attack is likely to go entirely unnoticed.\n  </p>\n </blockquote>\n <p>\n  As you may have noticed, the Kleptography is safe only on black-box implementations, so there indeed room for detection in white-box attacks.\n </p>\n <p>\n  But, I have not enough experience in this topic to give you general advices about it. Except the fact that you should start to look at real World implementation of cryptographic backdoors before trying to detect it. You may want to explore some of these links:\n </p>\n <ul>\n  <li>\n   <a href=\"http://www.infosecurity-magazine.com/view/30852/the-dark-side-of-cryptography-kleptography-in-blackbox-implementations/\" rel=\"nofollow\">\n    The Dark Side of Cryptography: Kleptography in Black-Box Implementations\n   </a>\n   , by Bernhard Esslinger and Patrick Vacek.\n  </li>\n  <li>\n   <a href=\"http://eprint.iacr.org/2002/183\" rel=\"nofollow\">\n    Simple backdoors to RSA key generation\n   </a>\n   , by Claude Cr√©peau and Alain Slakmon.\n  </li>\n  <li>\n   <a href=\"http://www.cryptovirology.com/cryptovfiles/research.html\" rel=\"nofollow\">\n    Papers about Cryptovirology\n   </a>\n  </li>\n  <li>\n   <a href=\"http://www.iis.sinica.edu.tw/papers/mn/8101-F.pdf\" rel=\"nofollow\">\n    A Comprehensive Study of Backdoors for RSA Key Generation\n   </a>\n   , by Ting-Yu Lin, Hung-Min Sun and Mu-En Wu.\n  </li>\n </ul>\n <p>\n  And so on...\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "perror",
            "time": "Aug 29, 2013 at 14:41",
            "is_accepted": true,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">I realize the issue about ciphertexts, but I'm talking about finding out in the program whether it encrypts it against more than the key I am giving it ;)</span>",
                    "time": null
                },
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">If I understand well (tell me if I am wrong), you want to check it there is no backdooring process within the program in order to create a master key to access the clear text in addition to your own private key.</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">that's correct.</span>",
                    "time": null
                },
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">But, I am sure that you might get better answer in the Crypto Stack-Exchange website ! Just try to use the correct vocabulary and they will try to answer. :)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Statically, use IDA to find all cross-references to the \"various algorithms in use\" to determine how they find the keys they use.\n </p>\n <p>\n  Dynamically, use a debugger to set breakpoints on the \"various algorithms in use\", thereby allowing you to examine the callstacks and determine how they find the keys they use.\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "Jason Geffner",
            "time": "Aug 27, 2013 at 15:12",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">Well, dynamically is probably not a good idea, because I could overlook some mechanism whereby the program behaves different under debugger from when run normally (as some malware does).</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">Some code might compute the addresses of the algorithm functions dynamically, so IDA might miss their cross-references. Unless you have the time to do a full static-analysis of the entire program, it's usually best to do your analysis both statically and dynamically to try to cover your bases.</span>",
                    "time": null
                }
            ]
        }
    ]
}