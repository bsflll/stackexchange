{
    "title": "How to break when specific text is found",
    "link": "https://reverseengineering.stackexchange.com/questions/16159/how-to-break-when-specific-text-is-found",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In this line of code:\n </p>\n <pre><code>mov        eax,dword ptr [eax+8];\n</code></pre>\n <p>\n  <code>\n   eax+8\n  </code>\n  contains a long string of text, I want to find out where it originally came from.\n </p>\n <p>\n  In either OllyDbg or x32dbg, how can I break when\n  <code>\n   eax\n  </code>\n  contains a certain word e.g. \"haxxor\"\n </p>\n <p>\n  Thanks!\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 2,
    "views": "7k",
    "tags": [
        "ollydbg",
        "debugging",
        "breakpoint",
        "x64dbg"
    ],
    "user": "Raz Razman",
    "time": "Aug 22, 2017 at 10:30",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You are searching for\n  <a href=\"https://en.wikipedia.org/wiki/Breakpoint#Breakpoint_conditions\" rel=\"noreferrer\">\n   Conditional Breakpoints\n  </a>\n </p>\n <h2>\n  OllyDBG\n </h2>\n <p>\n  It's possible to set a conditional breakpoint in both OllyDbg 1.01 and 2.00\n </p>\n <p>\n  <strong>\n   Conditional Breakpoint\n  </strong>\n </p>\n <blockquote>\n  <p>\n   Displays dialog window asking user to set or modify parameters of\n  simple conditional INT3 breakpoints at one or more addresses\n  addr[naddr] in the memory of the debugged process. [Source:\n   <a href=\"http://www.ollydbg.de/Help/Condbreakpoint.htm\" rel=\"noreferrer\">\n    Official Documentation]\n   </a>\n  </p>\n </blockquote>\n <p>\n  If you want to set a conditional breakpoint when EAX points to \"haxxor\", press\n  <kbd>\n   Shift\n  </kbd>\n  +\n  <kbd>\n   F2\n  </kbd>\n  and then enter:\n  <code>\n   UNICODE[EAX] == \"haxxor\"\n  </code>\n </p>\n <p>\n  <strong>\n   Conditional Log Breakpoint\n  </strong>\n </p>\n <blockquote>\n  <p>\n   Displays dialog window asking user to set or modify parameters of\n  conditional logging INT3 breakpoints at one or more addresses\n  addr[naddr] in the memory of the debugged process. Logging breakpoint\n  may conditionally pause execution, protocol expressions, function\n  arguments or returned value etc. [Source:\n   <a href=\"http://www.ollydbg.de/Help/Condlogbreakpoint.htm\" rel=\"noreferrer\">\n    Official Documentation]\n   </a>\n  </p>\n </blockquote>\n <p>\n  This option has more functionality and allows you to see outputs on the\n  <code>\n   log\n  </code>\n  window (\n  <kbd>\n   Alt\n  </kbd>\n  +\n  <kbd>\n   L\n  </kbd>\n  )\n  \n\n  Press\n  <kbd>\n   Shift\n  </kbd>\n  +\n  <kbd>\n   F4\n  </kbd>\n  and then enter:\n  <code>\n   UNICODE[EAX] == \"haxxor\"\n  </code>\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/LKG6I.png\" rel=\"noreferrer\">\n   <img alt=\"Condional Log Breakpoint window\" src=\"https://i.sstatic.net/LKG6I.png\"/>\n  </a>\n </p>\n <p>\n  Modify the dialog settings to fit best to your needs.\n </p>\n <hr/>\n <h2>\n  x64dbg\n </h2>\n <p>\n  Currently, as far as I know, there's no support for conditional breakpoints on strings. The feature is planned though and I hope we'll get to see it soon. Meantime, check\n  <a href=\"https://github.com/pastaCLS/cndsteroids\" rel=\"noreferrer\">\n   cndSteroids\n  </a>\n  plugin which you may find helpful.\n </p>\n <p>\n  More information about Conditional Breakpoints on x64dbg you can find in the\n  <a href=\"https://x64dbg.readthedocs.io/en/latest/introduction/ConditionalBreakpoint.html\" rel=\"noreferrer\">\n   official documentation\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "7",
            "user": "Megabeets",
            "time": "Aug 22, 2017 at 9:31",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Raz Razman",
                    "text": "<span class=\"comment-copy\">Am I correct in saying this adds a conditional breakpoint on this line only, ie when eax at this exact location contains this string then break? I am trying to find the original of this value, ie at line #7752606 I know eax contains this string, but where and when did that value come from</span>",
                    "time": null
                },
                {
                    "user": "mrexodia",
                    "text": "<span class=\"comment-copy\">Just for the record, there is a better string matching plugin available now: <a href=\"https://github.com/x64dbg/strmatch\" rel=\"nofollow noreferrer\">github.com/x64dbg/strmatch</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <strong>\n   NOTE!\n  </strong>\n  I realized afterward that it was about Ollydbg... Anyway, I stick to my answer... GDB is great!\n </p>\n <hr/>\n <p>\n  GDB is a wonderful debugger! In fact, and only a few people knows about it, it gives access to all the usual libc functions.\n </p>\n <p>\n  For example, in your case, you may find interesting to set up a conditional on a breakpoint like that (by using\n  <code>\n   strcmp()\n  </code>\n  ):\n </p>\n <pre><code>break *0xdeadbeef if strcmp(*($eax+8), \"haxxor\") == 0\n</code></pre>\n <p>\n  This line will stop if you are executing the instruction located at\n  <code>\n   0xdeadbeef\n  </code>\n  and that the value of the string located at\n  <code>\n   $eax+8\n  </code>\n  is\n  <code>\n   \"haxxor\"\n  </code>\n  .\n </p>\n <p>\n  If you want to break whenever the value of the string is '\"haxxor\"', then it will be a bit more difficult. Personally, I would set a watchpoint to each character with a condition such as:\n </p>\n <pre><code>watch *0xdeadbeef if *0xdeadbeef == 'h'\n</code></pre>\n <p>\n  And thus, for each character of the string.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "perror",
            "time": "Aug 22, 2017 at 9:33",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Ruslan",
                    "text": "<span class=\"comment-copy\">It's worth noting that calling functions in this way does leave all the side effects it can, first of all changes of data in the proximity of the stack pointer (due to local variables and return address)(not in the stack per se though). This may or may not matter to particular debugging session. Also, this can result in spurious signals like <code>SIGSEGV</code> on *nix/Access Violation on Windows, unless you <code>set unwindonsignal on</code> (e.g. when <code>EAX</code> has bad pointer in your first breakpoint example).</span>",
                    "time": null
                },
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">Yes, this is more or less like attaching a debug code to the running program \"on-line\". So, it may break the whole thing. Thanks for mentioning it!</span>",
                    "time": null
                }
            ]
        }
    ]
}