{
    "title": "Bypassing copy protection in microcontrollers using glitching",
    "link": "https://reverseengineering.stackexchange.com/questions/1698/bypassing-copy-protection-in-microcontrollers-using-glitching",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The ATmega microcontrollers generally have two lock bits, LB1 and LB2. One prevents further programming, and the other prevents the flash being read back. If both are set, the chip needs to be erased before it can be programmed again. This prevents the flash memory being read out and reverse engineered. Similar mechanisms can be found on many other microcontroller families.\n </p>\n <p>\n  Certain other processors have widely documented bypasses e.g. PIC 18F452, where an individual block can be erased and firmware be written to read out other blocks (\n  <a href=\"http://www.openpcd.org/images/HID-iCLASS-security.pdf\">\n   documented\n  </a>\n  in \"Heart of Darkness - exploring the uncharted backwaters of HID iCLASSTM security\").\n </p>\n <p>\n  From time to time, forum posts are made by companies offering their services to read out protected ATmega chips. There are also sites, generally .ru, that offer these services. Price tends to be around $500-$1500 with a turnaround time of a few weeks.\n </p>\n <p>\n  I suspect at these costs, they are not decapsulating the chip and using a laser probe to reset the fuse bits. I have queried if they return the chip undamaged, but did not get a response.\n </p>\n <p>\n  In this\n  <a href=\"http://www.cl.cam.ac.uk/~sps32/mcu_lock.html\">\n   research\n  </a>\n  (\"Copy Protection in Modern Microcontrollers\"), it is mentioned in the section \"Non-Invasive Attacks on Microcontrollers\" that many microcontrollers can have copy protection bypassed using clock, power or data glitching. However, I have not seen any practical examples or further research in this area.\n </p>\n <p>\n  Several years ago, glitching was very popular to bypass protection on the smart cards used in satellite TV receivers, but again, I have not found much information here outside of some circuit diagrams of the glitchers.\n </p>\n <p>\n  Does anyone have any further information on using glitching to bypass copy protection?\n </p>\n</div>\n</body></html>",
    "votes": "52",
    "answers": 5,
    "views": "33k",
    "tags": [
        "hardware",
        "copy-protection"
    ],
    "user": "Cybergibbons",
    "time": "Apr 10, 2013 at 10:57",
    "comments": [
        {
            "user": "zetavolt",
            "text": "<html><body><span class=\"comment-copy\">\n I hate making these congratulatory, unproductive statements, but AWESOME question.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user3508",
            "text": "<html><body><span class=\"comment-copy\">\n The\n <a href=\"http://RussianSemiResearch.com\" rel=\"nofollow noreferrer\">\n  RussianSemiResearch\n </a>\n company can read many MCUs with protection.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user12494",
            "text": "<html><body><span class=\"comment-copy\">\n Well, if locking is implemented properly, you cannot play around with boot loader to change lock bits and back read code. But at same time people have written to get avr unlocked for 500$, How do they achieve this? any idea?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Kerim Can Kalıpcıoğlu",
            "text": "<html><body><span class=\"comment-copy\">\n In this YouTube channel she do lots of practical examples about glitching and explaining every step, it may help you:\n <a href=\"https://www.youtube.com/channel/UCaEgw3321ct_PE4PJvdhXEQ\" rel=\"nofollow noreferrer\">\n  youtube.com/channel/UCaEgw3321ct_PE4PJvdhXEQ\n </a>\n .\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Sparkette",
            "text": "<html><body><span class=\"comment-copy\">\n If anyone knows a method for the Intel 87C54 microcontroller, I'd love to hear it.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  What kind of further information are you looking for? I assume your goal is to read out the flash contents of an ATmega microcontroller. You found information on how the glitchers work, now I guess you want a confirmation that this is generally possible before committing to building one? In that case yes it's possible. I can't provide you any papers because it's based on practical experience (not necessarily on an ATmega mcu).\n </p>\n <p>\n  Since there is generally no way to provide the core clock to an embedded board yourself (unlike with smartcards) you'll have to do either power,laser or electromagnetic glitching. Assuming you'll do power you basically have to replace the core power source of the target by one provided by you. In this you can inject your power glitches (negative or positive).\n </p>\n <p>\n  There are many reasons why the copy protection might be bypassed all depending on the implementation of the protection mechanism. Some moments in time you can try are:\n </p>\n <ul>\n  <li>\n   <strong>\n    Just after a cold reset.\n   </strong>\n   Say the value of the copy protection bit is stored in OTP. A system performs some initialization just after reset. This can include the transfer of the protection bit value to an internal register. Glitching during this moment in time can for example 'cancel out' the transfer, change the value on the bus or prevent the value from being stored into the destination register.\n  </li>\n  <li>\n   <strong>\n    Anytime during run-time\n   </strong>\n   . Glitching during run-time can affect any register. It's a wild shot but fun things can happen (hello JTAG unlock!)\n  </li>\n  <li>\n   <strong>\n    During permission checking\n   </strong>\n   . If flash reading is protected, this means it has to verify at some point if you have permission. If you can affect the outcome of this decision it can grant you access to retrieve the contents\n  </li>\n  <li>\n   And there are many more you can think of, but also many reasons to what can prevent success (e.g. permanent physical disconnection of the JTAG interface  with antifuses etc)\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "16",
            "user": "ixje",
            "time": "Apr 11, 2013 at 7:59",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Cybergibbons",
                    "text": "<span class=\"comment-copy\">Thanks for the answer. I wasn't specifically wanting to bypass an ATmega, it was just an example of a microncontroller where there is no commonly known method. I was really looking for a practical hardware and software example of this - everything seems very wordy.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It's not directly targeted at bypassing copy protection, but there is substantial research in glitching embedded systems via fault injection by Jasper van Woudenberg.  Applications of his research include manipulating branch decisions and leaking instructions and crypto keys, so there are likely avenues to apply it to your target as well.\n </p>\n <p>\n  Slides from his talk in 2012 may be found here:\n  <a href=\"http://www.riscure.com/news-events/fault-injection-attacks-on-embedded-chips\" rel=\"nofollow\">\n   http://www.riscure.com/news-events/fault-injection-attacks-on-embedded-chips\n  </a>\n  (more publications by the company may be found\n  <a href=\"http://www.riscure.com/news-events?f=publications\" rel=\"nofollow\">\n   here\n  </a>\n  )\n </p>\n <p>\n  He very recently\n  <a href=\"http://www.infiltratecon.com/speakers.html#jasper\" rel=\"nofollow\">\n   gave a talk at Infiltrate 2013\n  </a>\n  that touched heavily in this area, so keep a look out for for slides and video from that.\n </p>\n <p>\n  Additionally, it may be worthwhile to learn about the\n  <a href=\"http://free60.org/wiki/Reset_Glitch_Hack\" rel=\"nofollow\">\n   Xbox 360 glitch hack\n  </a>\n  and the process involved there.\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "Igor Skochinsky",
            "time": "Jun 29, 2016 at 13:01",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Mellowcandle",
                    "text": "<span class=\"comment-copy\">Xbox glitch hack link is dead</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In order to read out the flash contents for an Atmel AVR ATmega MCU，you can break the master chip. It doesn't return the chip undamaged, but provides the code and program.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Gilles 'SO- stop being evil'",
            "time": "Aug 15, 2013 at 12:54",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Cybergibbons",
                    "text": "<span class=\"comment-copy\">Do you been decapping the chip and read the flash visually or using a laser? This is possible, but not the question I am asking.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This isn't really an answer to your question, but a different approach I've been thinking of for few hours.\n </p>\n <p>\n  From my experience, the locking of the\n  <code>\n   JTAG\n  </code>\n  port is done by software, by setting a specific register to a specific value. this information can easily be obtained from the manual of the microcontroller.\n </p>\n <p>\n  My idea is to attack from the software side, not the hardware.\n </p>\n <p>\n  <strong>\n   Assumptions:\n  </strong>\n </p>\n <ol>\n  <li>\n   <p>\n    The device allows in-field firmware update using USB, UART, etc.\n   </p>\n  </li>\n  <li>\n   <p>\n    The firmware is not encrypted (well, from my experience it sometimes isn't).\n   </p>\n  </li>\n </ol>\n <p>\n  My idea, is to alter the firmware file, and inject the specific opcode that clears the locking register.\n </p>\n <p>\n  This is only an idea, I never tried it before, but I guess it's possible....\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Mellowcandle",
            "time": "Apr 11, 2013 at 11:28",
            "is_accepted": false,
            "comments": [
                {
                    "user": "nneonneo",
                    "text": "<span class=\"comment-copy\">If the locking is implemented correctly, it should be impossible to change the firmware without a reset.</span>",
                    "time": null
                },
                {
                    "user": "Mellowcandle",
                    "text": "<span class=\"comment-copy\">I can't speak for all microcontrollers, But in Atmel's SAM3 (Arm Cortex M3) it's a bit which can be changed back and forth.</span>",
                    "time": null
                },
                {
                    "user": "nneonneo",
                    "text": "<span class=\"comment-copy\">That's not much of a lock then, is it? I don't believe that's the case for their AVR controllers.</span>",
                    "time": null
                },
                {
                    "user": "Mellowcandle",
                    "text": "<span class=\"comment-copy\">you're right regarding AVR's, as stated here: <a href=\"http://electronics.stackexchange.com/questions/53282/protecting-avr-flash-from-reading-through-isp\" title=\"protecting avr flash from reading through isp\">electronics.stackexchange.com/questions/53282/…</a></span>",
                    "time": null
                },
                {
                    "user": "Cybergibbons",
                    "text": "<span class=\"comment-copy\">As this isn't about glitching, I don't think this should be an answer here.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have seen one of this companies in China, I have seen a lot of microscopes, so I assume the decapsulating the chip and do some modifications on the chip.\n </p>\n</div>\n</body></html>",
            "votes": "-1",
            "user": "WalterH",
            "time": "Oct 5, 2015 at 19:03",
            "is_accepted": false,
            "comments": []
        }
    ]
}