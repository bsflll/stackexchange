{
    "title": "How to get file back from generated sha256 checksum?",
    "link": "https://reverseengineering.stackexchange.com/questions/15552/how-to-get-file-back-from-generated-sha256-checksum",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The title seems little crazy, but I think that it is possible. Just think about it. If you create text file like this:\n </p>\n <pre><code>Hello world!\n</code></pre>\n <p>\n  You get this checksum:\n </p>\n <pre><code>0ba904eae8773b70c75333db4de2f3ac45a8ad4ddba1b242f0b3cfc199391dd8\n</code></pre>\n <p>\n  But if you change any letter like this:\n </p>\n <pre><code>Hallo world!\n</code></pre>\n <p>\n  You get this:\n </p>\n <pre><code>bf1adae4567d9fb6b3bfb30cbf4dfdd2503e89a831cf3472c399b39fb9c73289\n</code></pre>\n <p>\n  That means, that if I change any letter I always get another checksum, so there must be any way to get source file back.\n </p>\n <p>\n  My question is: Is there any way to get source file back without creating all possible combinations and checking checksum?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 2,
    "views": "5k",
    "tags": [
        "encryption",
        "hash-functions"
    ],
    "user": null,
    "time": "Jun 14, 2017 at 15:52",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This is actually one of the main attributes of\n  <a href=\"https://en.wikipedia.org/wiki/Cryptographic_hash_function\" rel=\"nofollow noreferrer\">\n   Cryptographic Hash Functions\n  </a>\n  . As mentioned in the wiki page, they are designed so they cannot be reversed:\n </p>\n <blockquote>\n  <p>\n   It is infeasible to generate a message from its hash value except by trying all possible messages\n  </p>\n </blockquote>\n <p>\n  Additionally, the property which dictates a small change in the\n  <em>\n   message\n  </em>\n  will result in a completely different output value is also a requirement of cryptographic hashes:\n </p>\n <blockquote>\n  <p>\n   a small change to a message should change the hash value so extensively that the new hash value appears uncorrelated with the old hash value\n  </p>\n </blockquote>\n <p>\n  The only ways to actually achieve that is by trying all possibilities (which is intentionally impossible with today's computing power) or finding a weakness in the hashing mechanism.\n </p>\n <p>\n  Nowadays,\n  <a href=\"https://en.wikipedia.org/wiki/MD5\" rel=\"nofollow noreferrer\">\n   MD5\n  </a>\n  and\n  <a href=\"https://en.wikipedia.org/wiki/SHA-1\" rel=\"nofollow noreferrer\">\n   SHA1\n  </a>\n  are considered\n  <strong>\n   broken\n  </strong>\n  because of such weaknesses (see\n  <a href=\"https://en.wikipedia.org/wiki/MD5#Security\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  and\n  <a href=\"https://en.wikipedia.org/wiki/SHA-1#Cryptanalysis_and_validation\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  respectively)\n </p>\n <p>\n  There are, however, caches or\n  <em>\n   common strings\n  </em>\n  and their different hash values and some of the message values can be found online.\n  <a href=\"https://crackstation.net/\" rel=\"nofollow noreferrer\">\n   https://crackstation.net/\n  </a>\n  is such a repository of many hash functions.\n </p>\n <p>\n  For example, the hash\n  <code>\n   0ba904eae8773b70c75333db4de2f3ac45a8ad4ddba1b242f0b3cfc199391dd8\n  </code>\n  you gave as an example can be found\n  <a href=\"https://github.com/whitslack/btctool\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "NirIzr",
            "time": "Jun 14, 2017 at 15:50",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  No there isn't.  The act of hashing and checksumming both lose information in the process.  Thus, there can be multiple files that produce the same hash\n  <em>\n   and the same checksum\n  </em>\n  .  The only way to know that you have recovered the original file is to compare it with the original file.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "peter ferrie",
            "time": "Jun 19, 2017 at 17:55",
            "is_accepted": false,
            "comments": []
        }
    ]
}