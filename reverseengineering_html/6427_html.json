{
    "title": "Ollydbg and IDA Pro unable to attach to process",
    "link": "https://reverseengineering.stackexchange.com/questions/6427/ollydbg-and-ida-pro-unable-to-attach-to-process",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a target application protected with CrypKey.\nWhen i try to attach to the apps in OllyDbg and Ida Pro i receive Unable to attach to this process.\n </p>\n <p>\n  The bad news is that i want to unpack the main exe after executing of Crypkey loader but after patching main exe and loader to obtain an infinite loop at the end of the code of the loader i am unable to attach to main exe and reach the OEP.\n </p>\n <p>\n  Do you know how or why i am unable to attack? A good solution in this cases?\n </p>\n <p>\n  Thank you very much\n </p>\n <p>\n  See image below:\n </p>\n <p>\n  <img alt=\"enter image description here\" src=\"https://i.sstatic.net/vec2o.png\"/>\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 2,
    "views": "11k",
    "tags": [
        "ida",
        "ollydbg",
        "anti-debugging"
    ],
    "user": "itseeder",
    "time": "Oct 11, 2014 at 16:07",
    "comments": [
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n You can find interesting anti-attach tricks\n <i>\n  <a href=\"http://waleedassar.blogspot.in/2011/12/debuggers-anti-attaching-techniques.html\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n </i>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "itseeder",
            "text": "<html><body><span class=\"comment-copy\">\n Thank you i had see it but my case is different. The problem is that Crypkey loader is attached to main exe as ring 3 debugger. If i try to terminate Crypkey loader also the main exe will terminate. I am stucked here...\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Debug the loader.\n </p>\n <p>\n  Set a breakpoint on\n  <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms682425(v=vs.85).aspx\" rel=\"nofollow\">\n   <code>\n    CreateProcess\n   </code>\n  </a>\n  <em>\n   (or\n   <a href=\"http://undocumented.ntinternals.net/source/usermode/undocumented%20functions/nt%20objects/process/ntcreateprocess.html\" rel=\"nofollow\">\n    <code>\n     ZwCreateProcess\n    </code>\n   </a>\n   if needed)\n  </em>\n </p>\n <p>\n  When the breakpoint is hit modify the\n  <em>\n   <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms684863(v=vs.85).aspx\" rel=\"nofollow\">\n    process creation flags\n   </a>\n  </em>\n  on the stack to include\n  <code>\n   CREATE_SUSPENDED\n  </code>\n  . \nMake sure to remove any debugging related flags such as\n  <code>\n   DEBUG_ONLY_THIS_PROCESS\n  </code>\n  etc.\n </p>\n <p>\n  Single step over the\n  <code>\n   CreateProcess\n  </code>\n  call. At this point, the child process would be created in a suspended state. Now you should be able to attach a debugger to this.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "0xec",
            "time": "Oct 11, 2014 at 16:43",
            "is_accepted": true,
            "comments": [
                {
                    "user": "itseeder",
                    "text": "<span class=\"comment-copy\">The main exe run the loader code that debub the main exe as ring 3 debugger so CreateProcess will be called to instantiate the loader and not the main exe. i am able to debug loader and see the int 3 opcode replaced at runtime in the main exe. At the end of this process i need to return to main exe and continue debugging to reach the OEP. I am unable to do it because the main exe refuse to be attached as process from any debugger. I hope that now the scenario it's more clear.</span>",
                    "time": null
                },
                {
                    "user": "0xec",
                    "text": "<span class=\"comment-copy\">@Seed3Key So essentially you mean that the main exe spawns the loader process &amp; the main exe cannot be debugged. If such is the case check whether you can attach to the main process before the loader process is created. If you cannot, then the main exe may well be <a href=\"http://reverseengineering.stackexchange.com/questions/2856/how-to-attach-debugger-or-start-analysis-of-process-that-is-debugging-itself\">debugging itself</a>.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Use a anti-anti-debug plugin that supports \"kill anti-attach\" like\n  <a href=\"http://scyllahide.tk\" rel=\"nofollow\">\n   ScyllaHide\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "pHiL",
            "time": "Oct 11, 2014 at 15:48",
            "is_accepted": false,
            "comments": []
        }
    ]
}