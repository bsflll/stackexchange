{
    "title": "How to extract N150R firmware from .img file",
    "link": "https://reverseengineering.stackexchange.com/questions/6720/how-to-extract-n150r-firmware-from-img-file",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to mount an img file for my wireless router firmware but I can't seem to do it successfully.\n </p>\n <p>\n  When I fun the file command on that .img it returns the following:\n </p>\n <pre><code>$ file file.img \nfile.img: data\n</code></pre>\n <p>\n  When I try to use mount on it I get the following:\n </p>\n <pre><code>$ sudo mount file.img test/\nmount: you must specify the filesystem type\n</code></pre>\n <p>\n  When I try to tell to use \"-t auto\" I get the same output:\n </p>\n <pre><code>$ sudo mount -t auto file.img test\nmount: you must specify the filesystem type\n</code></pre>\n <p>\n  xxd returns the following:\n </p>\n <pre><code>$ xxd -a N150R-V1.0.0.5_1.0.1.img | head\n0000000: 6465 7669 6365 3a4e 3135 3052 0a76 6572  device:N150R.ver\n0000010: 7369 6f6e 3a56 312e 302e 302e 355f 312e  sion:V1.0.0.5_1.\n0000020: 302e 310a 7265 6769 6f6e 3a0a 0000 0000  0.1.region:.....\n0000030: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n*\n0000070: 0000 0000 0000 0000 0000 0000 0000 1232  ...............2\n0000080: 3036 3132 d9cf 3fc1 5297 2c87 0033 eed0  0612..?.R.,..3..\n0000090: 9f05 0000 9f05 0000 9b63 9e62 0505 0700  .........c.b....\n00000a0: 4e31 3530 522d 5631 2e30 2e30 2e35 5f31  N150R-V1.0.0.5_1\n00000b0: 2e30 2e31 0000 0000 0000 0000 0000 0000  .0.1............\n</code></pre>\n <p>\n  binwalk gives the following:\n </p>\n <pre><code>$ binwalk N150R-V1.0.0.5_1.0.1.img \n\nDECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n192           0xC0            Squashfs filesystem, big endian, version 3.0, size: 3403472 bytes, 1024 inodes, blocksize: 65536 bytes, created: 2013-11-28 11:44:07\n</code></pre>\n <p>\n  fdisk (on OS X) returns:\n </p>\n <pre><code>$ fdisk N150R-V1.0.0.5_1.0.1.img \nDisk: N150R-V1.0.0.5_1.0.1.img  geometry: 26/4/63 [6656 sectors]\nSignature: 0x95EB\n         Starting       Ending\n #: id  cyl  hd sec -  cyl  hd sec [     start -       size]\n------------------------------------------------------------------------\n 1: 02  648  41  48 -  107 220  28 [ 275573942 - 2530152094] XENIX /     \n 2: C9  165 158   8 -  311  15  40 [1825336399 - 3160300718] <Unknown ID>\n 3: 12  606 153  51 -  988 164  42 [3547124620 - 4171149652] Compaq Diag.\n 4: BD  479 182  60 -  173 155  40 [2642289636 - 1573814809] <Unknown ID>\n</code></pre>\n <p>\n  Could I get some guidance on how to extract the files from the img?  I have access to both OS X and Ubuntu.\n </p>\n <p>\n  <a href=\"http://support.on-networks.com/article_details/n150r-firmware-version-1005#N150R\" rel=\"nofollow\">\n   Link to Firmware\n  </a>\n </p>\n <p>\n  EDIT 1:\nResult of sasquatch:\n </p>\n <pre><code>$ sasquatch N150R-V1.0.0.5_1.0.1.img \nSquashFS version [24373.11825] / inode count [1312449891] suggests a SquashFS image of a different endianess\nNon-standard SquashFS Magic: devi\nReading a different endian SQUASHFS filesystem on N150R-V1.0.0.5_1.0.1.img\nFilesystem on N150R-V1.0.0.5_1.0.1.img is (13663:12590), which is a later filesystem version than I support!\n</code></pre>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 2,
    "views": "8k",
    "tags": [
        "firmware"
    ],
    "user": "RNikoopour",
    "time": "Nov 28, 2014 at 22:45",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The SquashFS image is version 3.0 with LZMA compression; LZMA compression was not officially added to SquashFS until version 4.0, so standard SquashFS tools won't recognize it.\n </p>\n <p>\n  However,\n  <a href=\"https://github.com/devttys0/sasquatch\" rel=\"nofollow\">\n   sasquatch\n  </a>\n  extracts it just fine for me. In fact, if you have sasquatch installed, the latest version of binwalk will use it to auto-extract the file system if you run binwalk with the\n  <code>\n   -e\n  </code>\n  option.\n </p>\n <p>\n  <strong>\n   UPDATE:\n  </strong>\n </p>\n <p>\n  You need to give\n  <code>\n   sasquatch\n  </code>\n  the SquashFS image, not the raw firmware image. First, extract it with\n  <code>\n   dd\n  </code>\n  and then run\n  <code>\n   sasquash\n  </code>\n  against the extracted file:\n </p>\n <pre><code>$ dd if=N150R-V1.0.0.5_1.0.1.img bs=192 skip=1 of=fs.squashfs\n$ sasquatch fs.squashfs\n</code></pre>\n <p>\n  The latest version of\n  <code>\n   binwalk\n  </code>\n  does this for you automatically with the\n  <code>\n   -e\n  </code>\n  option:\n </p>\n <pre><code>$ binwalk -e N150R-V1.0.0.5_1.0.1.img\n</code></pre>\n <p>\n  You can force older versions of\n  <code>\n   binwalk\n  </code>\n  to use\n  <code>\n   sasquatch\n  </code>\n  as well:\n </p>\n <pre><code>$ binwalk --dd='squashfs:squashfs:sasquatch %e' N150R-V1.0.0.5_1.0.1.img\n</code></pre>\n</div>\n</body></html>",
            "votes": "7",
            "user": "devttys0",
            "time": "Nov 29, 2014 at 23:28",
            "is_accepted": true,
            "comments": [
                {
                    "user": "RNikoopour",
                    "text": "<span class=\"comment-copy\">I have updated the main post with the output from sasquatch.  It didn't work =/</span>",
                    "time": null
                },
                {
                    "user": "devttys0",
                    "text": "<span class=\"comment-copy\">You need to give sasquatch the SquashFS image, not the raw firmware image. I've updated my answer above with details.</span>",
                    "time": null
                },
                {
                    "user": "RNikoopour",
                    "text": "<span class=\"comment-copy\">Thank you so much.  I really appreciate your help!  Could you explain how the dd command extracts the file image?</span>",
                    "time": null
                },
                {
                    "user": "devttys0",
                    "text": "<span class=\"comment-copy\">The dd command above just copies data from the input file ('if=N150R-V1.0.0.5_1.0.1.img') to some output file of your choosing ('of=fs.squashfs'). You want to <i>start</i> copying bytes at offset 192, which is where the squashfs image starts, according to binwalk. So, just set the copy block size to 192 bytes ('bs=192'), and tell dd to skip the first block, i.e., skip the first 192 bytes ('skip=1').</span>",
                    "time": null
                },
                {
                    "user": "RNikoopour",
                    "text": "<span class=\"comment-copy\">That explanation was perfect.  Thank you so much for your help!</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you don't want to install yet another tool, it will probably mount if you strip off the header (the first 192 Bytes that binwalk talks about):\n </p>\n <pre><code>dd if=file.img of=file.squashfs bs=192 skip=1\nsudo mount file.squashfs test/\n</code></pre>\n <p>\n  EDIT:\n </p>\n <p>\n  Since the router seems to have a big-endian Mips processor, mounting didn't work for me either. The following worked on Ubuntu 14.04 however:\n </p>\n <pre><code>apt-get install liblzo2-dev \ngit clone https://github.com/devttyS0/sasquatch\nmake\nsasquatch /path/to/file.squashfs\n</code></pre>\n <p>\n  (Obviously, you need\n  <code>\n   git\n  </code>\n  ,\n  <code>\n   make\n  </code>\n  ,\n  <code>\n   gcc\n  </code>\n  installed as well.\n  <code>\n   liblzo2-dev\n  </code>\n  was the only dependency i hadn't installed before. I had to used the file prepared with\n  <code>\n   dd\n  </code>\n  as shown above, not the original .img).\n </p>\n <p>\n  In case you can't get it to work, here's the extracted file:\n </p>\n <p>\n  <a href=\"https://mega.co.nz/#!xFoQkZRB!lcdUdDVGKsgEeu8Q5HnL3BSBXJKCHe0jZkGwOyTSxlQ\" rel=\"nofollow\">\n   https://mega.co.nz/#!xFoQkZRB!lcdUdDVGKsgEeu8Q5HnL3BSBXJKCHe0jZkGwOyTSxlQ\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Guntram Blohm",
            "time": "Nov 28, 2014 at 23:10",
            "is_accepted": false,
            "comments": [
                {
                    "user": "RNikoopour",
                    "text": "<span class=\"comment-copy\">This didn't work for me.  Thank you though</span>",
                    "time": null
                },
                {
                    "user": "devttys0",
                    "text": "<span class=\"comment-copy\">Even if the image was little endian, it unfortunately would still likely not mount due to the non-standard compression. Embedded SquashFS images tend to be a PITA unfortunately.</span>",
                    "time": null
                }
            ]
        }
    ]
}