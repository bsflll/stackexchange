{
    "title": "Mul(Multiplication) in x64 and in x32 assembly",
    "link": "https://reverseengineering.stackexchange.com/questions/26390/mulmultiplication-in-x64-and-in-x32-assembly",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm completely new in malware reverse engineering. I'm stuck in a confusion that,\n </p>\n <p>\n  I studied that in x32, mul instruction multiplies the source with eax register and store the result as 64 bit value across two registers i.e. EDX:EAX. EDX stores most significant bit of 32 bits of operation and EAX do the same. So, my question is what happens in x64? how the values are stored in RAX:RDX after multiplication. I also ping the Google but did'nt understand much. I hope you all will respond.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "4k",
    "tags": [
        "binary-analysis",
        "x86",
        "malware",
        "amd64"
    ],
    "user": "Ramesses II",
    "time": "Nov 30, 2020 at 8:34",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  According to the\n  <a href=\"https://software.intel.com/sites/default/files/managed/39/c5/325462-sdm-vol-1-2abcd-3abcd.pdf\" rel=\"nofollow noreferrer\">\n   documentation\n  </a>\n  Page 1320\n </p>\n <p>\n  The result is stored in register AX, register pair DX:AX, or register pair EDX:EAX (depending on the operand size),\nwith the high-order bits of the product contained in register AH, DX, or EDX, respectively. If the high-order bits of\nthe product are 0, the CF and OF flags are cleared; otherwise, the flags are set.\nIn 64-bit mode, the instructionâ€™s default operation size is 32 bits. Use of the REX.R prefix permits access to addi-\ntional registers (R8-R15). Use of the REX.W prefix promotes operation to 64 bits.\nSee the summary chart at the beginning of this section for encoding data and limits.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/RoFsw.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"mul table\" src=\"https://i.sstatic.net/RoFsw.png\"/>\n  </a>\n </p>\n <p>\n  It can be seen with this sequence of instructions\n </p>\n <pre><code>mov rdx, 0x1234567890abcdef\nmov rax, 0x100\nmul rdx\n</code></pre>\n <p>\n  After the last instruction\n </p>\n <pre><code>$rax   : 0x34567890abcdef00\n$rdx   : 0x12\n</code></pre>\n <p>\n  <code>\n   RDX\n  </code>\n  has the upper 64 bits as expected.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "sudhackar",
            "time": "Nov 29, 2020 at 12:51",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Ramesses II",
                    "text": "<span class=\"comment-copy\">Thank you for your time, iI'll also see the documentation.</span>",
                    "time": null
                },
                {
                    "user": "sudhackar",
                    "text": "<span class=\"comment-copy\">@AdilNehal If this answer works, mark as solved by accepting.</span>",
                    "time": null
                }
            ]
        }
    ]
}