{
    "title": "What is the difference between program slicing and taint analysis?",
    "link": "https://reverseengineering.stackexchange.com/questions/13481/what-is-the-difference-between-program-slicing-and-taint-analysis",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm studying program slicing and taint analysis. I know notion of program slicing and taint analysis.\n </p>\n <p>\n  I think Program slicing and taint analysis are similar notion.\nI don' know difference between program slicing and taint analysis.\n </p>\n <p>\n  What is the difference between program slicing and taint analysis?\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 2,
    "views": "1k",
    "tags": [
        "binary-analysis",
        "program-analysis"
    ],
    "user": "Seong-Kyun",
    "time": "Sep 10, 2016 at 8:12",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In my understanding there are two major differences:\n </p>\n <p>\n  <strong>\n   Program Slicing\n  </strong>\n  creates a reduced representant of a program which should still produces the same output for a given input. So you reduce the given program to its core functionality and you throw away all the clumpy/insignificant attachments.\n </p>\n <p>\n  In contrast a\n  <strong>\n   Taint Analysis\n  </strong>\n  traces the path of an information through an application and observes all the objects which are affected/visited/influenced by the corresponding information. Therefor a specific input is labeled or tagged, so it could be tracked during its execution.\n </p>\n <p>\n  So you have\n  <em>\n   a reduced representation of a program\n  </em>\n  with consideration of input output behavior VS the\n  <em>\n   trail of a selected input/variable\n  </em>\n  within a program and its dependencies.\n </p>\n <hr/>\n <p>\n  See also detailed descriptions below:\n </p>\n <p>\n  <strong>\n   Program slicing\n  </strong>\n  tries to reduce a given program\n  <code>\n   P\n  </code>\n  to a minimum form, a so called slice\n  <code>\n   S\n  </code>\n  , which produces the same behavior. More formally taken from these\n  <a href=\"http://web.cs.iastate.edu/~weile/cs513x/5.DependencySlicing.pdf\" rel=\"nofollow\">\n   slides\n  </a>\n  :\n </p>\n <blockquote>\n  <ul>\n   <li>\n    produce a slice\n    <code>\n     S\n    </code>\n    from a given program\n    <code>\n     P\n    </code>\n    by deleting statements\n   </li>\n   <li>\n    slice must be syntactically correct a given set of variables\n    <code>\n     V\n    </code>\n   </li>\n   <li>\n    should produce the same output when given to\n    <code>\n     S\n    </code>\n    and\n    <code>\n     P\n    </code>\n   </li>\n  </ul>\n </blockquote>\n <p>\n  <strong>\n   Taint analysis\n  </strong>\n  can be seen as a form of Information Flow Analysis. A more formal definition ripped from\n  <a href=\"http://web.cs.iastate.edu/~weile/cs513x/5.TaintAnalysis1.pdf\" rel=\"nofollow\">\n   here\n  </a>\n  :\n </p>\n <blockquote>\n  <p>\n   Information flows from object x to object y, denoted xâ†’y , whenever\n  Information stored in x is transferred to, object y.\n  </p>\n </blockquote>\n</div>\n</body></html>",
            "votes": "3",
            "user": "knx",
            "time": "Sep 10, 2016 at 10:58",
            "is_accepted": false,
            "comments": [
                {
                    "user": "lllllllllllll",
                    "text": "<span class=\"comment-copy\">IMHO, what you are referring is about \"static program slicing\". On the other hand, in terms of \"dynamic slicing\" which is performed on a execution trace, then it cares about a selected input as well (since one trace corresponds to one input).</span>",
                    "time": null
                },
                {
                    "user": "knx",
                    "text": "<span class=\"comment-copy\">Could you provide a reference for static vs dynamic slicing?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'd say they are essentially the same, with slightly different focus:\n </p>\n <p>\n  <em>\n   Program slicing\n  </em>\n  is, strictly, extracting\n  <em>\n   code\n  </em>\n  that operates on specific variables/memory, while omitting all other code;\n </p>\n <p>\n  <em>\n   Taint analysis\n  </em>\n  is tracking which\n  <em>\n   other\n  </em>\n  variables/memory are affected, via that code, by the ones you chose. Also, tainted data is usually stricter defined as \"user-controllable data\", while slicing can be done on any var.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Vitaly Osipov",
            "time": "Sep 11, 2016 at 4:59",
            "is_accepted": false,
            "comments": []
        }
    ]
}