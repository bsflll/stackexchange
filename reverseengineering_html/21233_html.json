{
    "title": "Help investigating a printer firmware image",
    "link": "https://reverseengineering.stackexchange.com/questions/21233/help-investigating-a-printer-firmware-image",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  We're having issues with the WiFi connectivity on the printers that we're using on a current project. The printer connects fine, but the ports that should be opened are not opened. They work fine on the wired network.\nTheir support has tried to help, but so far hasn't been able to provide a solution.\nI suspect that the printers run an embedded linux, and I wouldn't mind having a look at the configuration files to see if there's anything in there that's obviously broken.\nI've downloaded the firmware from\n  <a href=\"https://printers.averydennison.com/en/home/resources/service-and-support/utilities-and-firmware/9419-printer.html\" rel=\"nofollow noreferrer\">\n   https://printers.averydennison.com/en/home/resources/service-and-support/utilities-and-firmware/9419-printer.html\n  </a>\n  , but binwalk doesn't seem to find anything useful. I don't see any magic bytes or anything that would hint as to the structure of the file, and while there are recognisable strings (including the beginnings of some of the web pages from the config interface), they seem to get truncated in odd places, and with FF inserted at seemingly random intervals between characters.\n </p>\n <p>\n  My thought was that it may be a disk image that could be mounted, but I would have thought that binwalk would have identified that.\n </p>\n <p>\n  While I'd appreciate the answer to how to examine this firmware, I'd also like to fill in some of the gaps that I'm missing in my process, so any hints on what I should be looking for would be greatly appreciated.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "266",
    "tags": [
        "firmware"
    ],
    "user": "Andy Palmer",
    "time": "Apr 28, 2019 at 12:10",
    "comments": [
        {
            "user": "Coldblackice",
            "text": "<html><body><span class=\"comment-copy\">\n Have you checked for opcodes yet?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Andy Palmer",
            "text": "<html><body><span class=\"comment-copy\">\n @Coldblackice How would I go about that? I would have thought that binwalk would identify any executable signatures, and the underlying architecture could be anything.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Coldblackice",
            "text": "<html><body><span class=\"comment-copy\">\n It's an option flag/parameter in binwalk,\n <code>\n  \"--opcodes\" || \"-A\"\n </code>\n . If binwalk finds any, you then at least have a lead by determining possible instruction set(s) the firmware is built upon, which can then be dumped into IDA for further analysis.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Andy Palmer",
            "text": "<html><body><span class=\"comment-copy\">\n @Coldblackice thanks. I think I had tried that in the past. I've just run it again and I get three hits for ARM function prologues. I suspect those may be false positives though. I think that the file is obfuscated, but not very well (there are large blocks of cleartext). I just don't know enough about RE to be able to identify the obfuscation method.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}