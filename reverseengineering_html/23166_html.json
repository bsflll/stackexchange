{
    "title": "How to extract static API sequences of a PE file?",
    "link": "https://reverseengineering.stackexchange.com/questions/23166/how-to-extract-static-api-sequences-of-a-pe-file",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  How does one extract the static API sequences of a PE file? I don't mean the imports listed in the imports segment.\n </p>\n <p>\n  I am currently using different RE tools like Ghidra, IDA Pro, and Binary Ninja. None of which I know has a built-in feature which allows me to extract the static API sequences.\n </p>\n <p>\n  [EDIT] I am looking for API call sequences without executing the binary. For example, maybe if the binary code contains file operations like fopen() → fwrite() → fclose() → fopen() → fwrite() → fclose(). I want to be able to extract this sequence of APIs.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "623",
    "tags": [
        "ida",
        "static-analysis",
        "functions",
        "api"
    ],
    "user": "nidorinas",
    "time": "Feb 1, 2020 at 15:18",
    "comments": [
        {
            "user": "Johann Aydinbas",
            "text": "<html><body><span class=\"comment-copy\">\n Can you elaborate? Do you want to find API call sequences, like\n <code>\n  CreateFile -> WriteFile -> CloseFile\n </code>\n ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n @SarahChua: without running the binary how would you resolve all the conditions that may be used in between? E.g.\n <code>\n  fwrite()\n </code>\n may only be called if some condition holds true or may only ever read a particular location under such condition. Could you elaborate what you want to achieve? In particular why is the\n <i>\n  sequence\n </i>\n interesting? I can definitely see the charm of being able to see (external) library calls from a particular basic block/function. What does the sequence give you, when you know you can't\n <i>\n  properly\n </i>\n get the sequence without certain runtime information.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Let me give an example. Say you have a particular function. You have a function with\n <code>\n  fopen()\n </code>\n , about four dozen calls to\n <code>\n  fwrite()\n </code>\n and an\n <code>\n  fclose()\n </code>\n . Now if one of the\n <code>\n  fwrite()\n </code>\n calls fails, I'd expect to land in the final\n <code>\n  fclose()\n </code>\n . Additionally half of the\n <code>\n  fwrite()\n </code>\n calls may represent a different \"mode\" of sorts, compared to the other half. So depending on a function argument you'd either end up calling one or the other. Your proposed \"sequence of calls\" metric doesn't tell you anything about it. So what's the purpose and why does the sequence matter?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "nidorinas",
            "text": "<html><body><span class=\"comment-copy\">\n @0xC0000022L I was reading the following paper [here] (\n <a href=\"https://www.sciencedirect.com/science/article/pii/S016740481831246X\" rel=\"nofollow noreferrer\">\n  sciencedirect.com/science/article/pii/S016740481831246X\n </a>\n ) and in the abstract, it says it utilizes static API sequences as part of the input.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  That should be rather easy to solve in IDA with IDAPython or IDC.\n </p>\n <p>\n  I remember plugins that name functions based on API calls happening inside for a quick overview, one example here:\n </p>\n <p>\n  <a href=\"https://reverseengineering.stackexchange.com/questions/9352/finding-all-api-calls-in-a-function\">\n   Finding all API calls in a function\n  </a>\n </p>\n <p>\n  Essentially it does what you need but note there is no semantic check whatsoever. It just means these API calls appeared in the same function and could be entirely unrelated, but it gives a rough overview of API call chains happening together (by logic of being in the same function).\n </p>\n <p>\n  If relation is important, it's a way harder problem as you'd need to track input/output from API calls (and for that know what the input/output for each API call is) and thus turning into a data flow analysis problem.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Johann Aydinbas",
            "time": "Feb 1, 2020 at 15:45",
            "is_accepted": true,
            "comments": []
        }
    ]
}