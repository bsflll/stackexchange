{
    "title": "What is the best approach for using IDA's remote debugger for analyzing a sample with two VMs?",
    "link": "https://reverseengineering.stackexchange.com/questions/22344/what-is-the-best-approach-for-using-idas-remote-debugger-for-analyzing-a-sample",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Sorry if this is a stupid question but couldnt find the answer by googling\n </p>\n <p>\n  Right now I analyze a malware by using remote debugger of IDA, and i run the debugger on a isolated VM that has shared a folder to my IDA's VM, as of right now the way i analyze a sample is by putting it on that shared folder so i can run the remote debugger, because if i set the path to a location in my IDA's VM then it won't work (it says wrong parameters), so it looks like the sample has to be in a location where both my IDA's VM and the isolated VM can reach (i think)\n </p>\n <p>\n  so to solve this i just put samples i want to analyze in the shared folder\n </p>\n <p>\n  the problem is that the .idb file spawns there as well and if its a ransomware then my .idb file will get ruined  ( i have to say that IDA's VM is also in a isolated host only network)\n </p>\n <p>\n  so two questions :\n </p>\n <ol>\n  <li>\n   <p>\n    am i approaching this right? is there an easier way for me to use a remote debugger without using a shared folder?\n   </p>\n  </li>\n  <li>\n   <p>\n    how to change the .idb's default path? so i can put the sample in the shared folder or somewhere else but the .idb gets generated somewhere else?\n   </p>\n  </li>\n </ol>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "183",
    "tags": [
        "ida",
        "binary-analysis",
        "malware"
    ],
    "user": "Mery Ted",
    "time": "Oct 19, 2019 at 6:53",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  There is no need to have the IDB on the remote machine or keep the .idb and executable in the same folder. After creating the IDB you can even delete the input file or move it elsewhere; IDB is completely self-contained and does not need the file anymore.\n </p>\n <p>\n  Here's a suggested workflow:\n </p>\n <ol>\n  <li>\n   Open the sample in IDA on the analysis VM/host to create the IDB.\n  </li>\n  <li>\n   <p>\n    Copy the sample and remote debug server to the debugging VM. You can now delete it from the analysis machine so you don't accidentally run it (or rename). Let's assume the sample is in\n    <code>\n     C:\\temp\\sample.exe\n    </code>\n    on the debugging VM.\n   </p>\n  </li>\n  <li>\n   <p>\n    start the debug server\n   </p>\n  </li>\n  <li>\n   <p>\n    In IDA, in Debugging-Process options, specify the remote host/port and change the path to the executable as it is\n    <strong>\n     on the remote machine\n    </strong>\n    (i.e.\n    <code>\n     C:\\tmp\\sample.exe\n    </code>\n    ).\n   </p>\n  </li>\n  <li>\n   <p>\n    debug away!\n   </p>\n  </li>\n </ol>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Igor Skochinsky",
            "time": "Oct 19, 2019 at 18:20",
            "is_accepted": true,
            "comments": []
        }
    ]
}