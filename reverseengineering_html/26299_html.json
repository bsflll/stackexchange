{
    "title": "reverse engineering bluetooth smart thermostat payload",
    "link": "https://reverseengineering.stackexchange.com/questions/26299/reverse-engineering-bluetooth-smart-thermostat-payload",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to reverse engineering an\n  <em>\n   ENSTO\n  </em>\n  \"smart\" bluetooth thermostat, which i just got installed in the house. The thermostat due to some technical and electrical challenges sometimes got placed at weird positions, so I thought, I am giving this a try, and see how far I can get.\n </p>\n <p>\n  In their official app, i was playing around to generat some log, so I managed to sniff the bluetooth packages, then using\n  <em>\n   wireshark\n  </em>\n  , noticated some patterns, but having hard times actually understanding them:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/8bCYM.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/8bCYM.png\"/>\n  </a>\n </p>\n <p>\n  The first\n  <code>\n   01\n  </code>\n  or\n  <code>\n   00\n  </code>\n  definitely indicates whether we are increasing or decreasing, but what the rest could be?\n </p>\n <p>\n  Any tips, ideas, and suggestions are welcome!\n </p>\n <p>\n  I am a fullstack engineer, and pretty new all these iot and smarthome things, but trying my best.\n </p>\n <pre><code>\nACTION  PAYLOAD\nINCREASE_BY_5_IN_ONE_HOUR   Value: 01f401143c003c00\nDECREASE_BY_5_IN_ONE_HOUR   Value: 00f401143c003c00\n    \nINCREASE_BY_3_IN_ONE_HOUR   Value: 012c010a3c003c00\nDECREASE_BY_3_IN_ONE_HOUR   Value: 002c010a3c003c00\n    \nINCREASE_BY_1_IN_3_HOURS    Value: 01640014b400b400\nDECREASE_BY_1_IN_3_HOURS    Value: 00640014b400b400\n</code></pre>\n <p>\n  Thank you!\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 3,
    "views": "391",
    "tags": [
        "bluetooth"
    ],
    "user": "Richard Zilahi",
    "time": "Nov 14, 2020 at 0:10",
    "comments": [
        {
            "user": "morsisko",
            "text": "<html><body><span class=\"comment-copy\">\n Why don't you disassembly the .apk? Try some tools like jadx and localize the function that is capable of parsing bluetooth packets\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Richard Zilahi",
            "text": "<html><body><span class=\"comment-copy\">\n @morsisko hmmm, that is an excellent idea! gonan give it a try asap! :) thanks!\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "pythonpython",
            "text": "<html><body><span class=\"comment-copy\">\n Some useful information\n <a href=\"https://www.ensto.com/company/newsroom/product-news/smart-heating-with-new-beta-heaters/\" rel=\"nofollow noreferrer\">\n  here\n </a>\n about Ensto devices. First... EuroProduct, so assume temp is in Celsius.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Some elements of answer:\n  \n\n  INCREASE_BY_5_IN_ONE_HOUR Value: 01f401143c003c00\n  \n\n  01=increase\n  \n\n  f401 = 0x1f4=500 times 1/100 of degree (little-endian)\n  \n\n  14 =0x14=20  could be a step ?(other case 0x0a=10 )\n  \n\n  3c00 =0x3c = 60 minutes\n  \n\n  ( 2 times to check the validity of the frame ?)\n </p>\n <p>\n  more data would be needed to go further\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Gordon Freeman",
            "time": "Nov 14, 2020 at 11:19",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I second the 0x3c00 and 0xb400 as times.\n </p>\n <pre><code>>>> struct.pack(\"<h\",60).hex() # 1 hours\n'3c00'\n>>> struct.pack(\"<h\",180).hex() # 3 hours\n'b400'\n>>> struct.pack(\"<h\",720).hex() # 12 hours\n'd002'\n>>> struct.pack(\"<h\",1440).hex() # 24 hours\n'a005'\n</code></pre>\n <p>\n  Assume the data is all little endian. I suspect the 2x repeat of the time plays some role reporting data for specific ranges, such as between 5pm and 8am in a day.\n </p>\n <p>\n  I think I've found the degrees. I swapped out the f40114 for Bits. I think this is sub-byte format.\n </p>\n <pre><code>ACTION  PAYLOAD\nINCREASE_BY_5_IN_ONE_HOUR   Value: 01 |f40114| 3c00 3c00    01 | 111 101 00 00000001 00010100 | 3c00 3c00\nDECREASE_BY_5_IN_ONE_HOUR   Value: 00 |f40114| 3c00 3c00    00 | 111 101 00 00000001 00010100 | 3c00 3c00\n    \nINCREASE_BY_3_IN_ONE_HOUR   Value: 01 |2c010a| 3c00 3c00    01 | 001 011 00 00000001 00001010 | 3c00 3c00\nDECREASE_BY_3_IN_ONE_HOUR   Value: 00 |2c010a| 3c00 3c00    00 | 001 011 00 00000001 00001010 | 3c00 3c00\n    \nINCREASE_BY_1_IN_3_HOURS    Value: 01 |640014| b400 b400    01 | 011 001 00 00000000 00010100 | b400 b400\nDECREASE_BY_1_IN_3_HOURS    Value: 00 |640014| b400 b400    00 | 011 001 00 00000000 00010100 | b400 b400\n                                                                     ^^^Degrees                 ^^^^Minutes\n</code></pre>\n <p>\n  So digging on the\n  <a href=\"https://www.ensto.com/company/newsroom/product-news/smart-heating-with-new-beta-heaters/\" rel=\"nofollow noreferrer\">\n   Ensto website some useful things\n  </a>\n  ... First, European product, so maybe we can assume the units are in Celsius (at least for this dataset).\n  <code>\n   Extremely accurate (+/-0.1°C) and completely silent intelligent thermostat\n  </code>\n  tells us the precision.\n  <code>\n   The new Beta heaters are equipped with smart electronic thermostats (for 5–30 °C) that can be controlled manually or with Ensto’s Heat Control application (for Android and iOS)\n  </code>\n  tells us the range. In terms of units this is 50 to 300... which is 250 discrete values, which means we probably have a single byte for temperature. If the OP could tell us the temperatures when these samples were taken, we can see if the temperature is in the message.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "pythonpython",
            "time": "Dec 1, 2020 at 23:59",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Richard Zilahi",
                    "text": "<span class=\"comment-copy\">wow! I will post more detailed information and logs about the device, but I feel we are on a good track!</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Maybe this API-documentation will help (managed to get it from github while enstoflow was active earlier this year). It has all the payloads documented.\n  <a href=\"https://drive.google.com/file/d/1ALbayheoGqpcOpPPEXFPCOlECvhd37kC/view?usp=sharing\" rel=\"nofollow noreferrer\">\n   https://drive.google.com/file/d/1ALbayheoGqpcOpPPEXFPCOlECvhd37kC/view?usp=sharing\n  </a>\n </p>\n <p>\n  A snippet from the document:\n2.2.5. Boost\nBoost gives time in minutes or duration in percentage depending on the mcu mode. Boost offset\n(setpoint) is also given and it is between -20 and +20 degrees.\n </p>\n <p>\n  Characteristics UUID ca3c0685-b708-4cd4-a049-5badd10469e7\nvalue BYTE[0] Boost 0=disabled, 1=enabled\n </p>\n <p>\n  BYTE[1-2]: Boost offset int16_t as degrees (20\nas 2000 and 21,5 as 2150)\nBYTE[3]: Boost offset int8_t percentage\nBYTE[4-5]: Boost time set point in minutes\nuint8_t\nBYTE[6-7]: Boost time in minutes uint8_t,\nreturns remaining boost time, write does not\nhave effect\n </p>\n <p>\n  Best regards,\nMika\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Mika",
            "time": "Dec 28, 2020 at 13:19",
            "is_accepted": false,
            "comments": []
        }
    ]
}