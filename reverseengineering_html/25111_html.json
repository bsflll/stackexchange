{
    "title": "what routine in ntdll.dll is responsible of dispatching DllMain function of loaded dll?",
    "link": "https://reverseengineering.stackexchange.com/questions/25111/what-routine-in-ntdll-dll-is-responsible-of-dispatching-dllmain-function-of-load",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to debug a dll file using Ida disassembler and Windbg.\nI'm debugging rundll32.exe and passing the target dll (debugee) as an argument. \nI'm able to have a breakpoint on each Dll load & unload, but I'm looking for a way to debug the target dll Main function.\nI want to put a breakpoint on the dispatcher of the dll main function in the loader (ntdll.dll) in order to do this.\nWhat is the routine responsible for dll main dispatching?\nMy environment is windows 10 version 1809.\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 1,
    "views": "334",
    "tags": [
        "ida",
        "windows",
        "dll"
    ],
    "user": "jony",
    "time": "May 25, 2020 at 11:07",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  using windbg  you can set an sxe ld:Modname event break\n </p>\n <p>\n  assuming you are running this which will pop up a help gui for printers\n </p>\n <pre><code>rundll32.exe printui.dll PrintUIEntry /?\n</code></pre>\n <p>\n  if you want to Break on this printUI.dll's CrtMain or AddressOfEntryPoint you can do it like this\n </p>\n <pre><code>C:\\WINDOWS\\system32>cdb rundll32.exe printui.dll PrintUIEntry /?\n\nMicrosoft (R) Windows Debugger Version 10.0.17763.132 AMD64\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nntdll!LdrpDoDebuggerBreak+0x30:\n00007ffc`b725121c cc              int     3\n\n0:000> sxe ld:printui.dll    \n0:000> .sxcmds\nsxe ld:printui.dll ;\n\n0:000> g\nModLoad: 00007ffc`a04e0000 00007ffc`a058d000   C:\\WINDOWS\\system32\\printui.dll\nntdll!NtMapViewOfSection+0x14:\n00007ffc`b721c5c4 c3              ret\n\n0:000> .lastevent\nLast event: 1d84.293c: Load module C:\\WINDOWS\\system32\\printui.dll at 00007ffc`a04e0000\n  debugger time: Mon May 25 23:55:59.235 2020 \n\n0:000> .shell -ci \"!dh 00007ffc`a04e0000\" findstr /I Entry\n    3CA0 address of entry point\n.shell: Process exited\n\n0:000> bp 00007ffc`a04e0000+3ca0\n0:000> bl\n 0 e 00007ffc`a04e3ca0     0001 (0001)  0:**** printui!DllMainCRTStartup\n0:000> g\nModLoad: 00007ffc`b5950000 00007ffc`b59f3000   C:\\WINDOWS\\System32\\ADVAPI32.dll\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nBreakpoint 0 hit\nprintui!DllMainCRTStartup:\n00007ffc`a04e3ca0 48895c2408 mov qwordptr[rsp+8],rbx ss:0000009a`5918edd0=0000000000000000\n</code></pre>\n <p>\n  and you can see the call stack to find all the responsible calls that leads to this break\n </p>\n <pre><code>0:000> k\nChild-SP          RetAddr           Call Site\n0000009a`5918edc8 00007ffc`b71a50a1 printui!DllMainCRTStartup\n0000009a`5918edd0 00007ffc`b71e9405 ntdll!LdrpCallInitRoutine+0x65\n0000009a`5918ee40 00007ffc`b71e91f8 ntdll!LdrpInitializeNode+0x1b1\n0000009a`5918ef80 00007ffc`b71aaa97 ntdll!LdrpInitializeGraphRecurse+0x80\n0000009a`5918efc0 00007ffc`b71a2591 ntdll!LdrpPrepareModuleForExecution+0xbf\n0000009a`5918f000 00007ffc`b71a22a8 ntdll!LdrpLoadDllInternal+0x199\n0000009a`5918f080 00007ffc`b71a1764 ntdll!LdrpLoadDll+0xa8\n0000009a`5918f230 00007ffc`b43e56f0 ntdll!LdrLoadDll+0xe4\n0000009a`5918f320 00007ff7`ff62356e KERNELBASE!LoadLibraryExW+0x170\n0000009a`5918f390 00007ff7`ff623aff rundll32!_InitCommandInfo+0x82\n0000009a`5918f7e0 00007ff7`ff6262d9 rundll32!wWinMain+0x1ef\n0000009a`5918fa50 00007ffc`b6287bd4 rundll32!__wmainCRTStartup+0x1c9\n0000009a`5918fb10 00007ffc`b71eced1 KERNEL32!BaseThreadInitThunk+0x14\n0000009a`5918fb40 00000000`00000000 ntdll!RtlUserThreadStart+0x21\n</code></pre>\n</div>\n</body></html>",
            "votes": "3",
            "user": "blabb",
            "time": "May 25, 2020 at 18:30",
            "is_accepted": true,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">alright, I see. Yeah I think they want to make sure that it's the same user really. But in your case I was almost certain when I noticed.</span>",
                    "time": null
                }
            ]
        }
    ]
}