{
    "title": "Add a \"dynamic breakpoint\" in immunity debugger",
    "link": "https://reverseengineering.stackexchange.com/questions/31454/add-a-dynamic-breakpoint-in-immunity-debugger",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Let's suppose an obfuscated binary program.\n </p>\n <p>\n  This programs loads a payload in memory.\nThis payload contains encrypted instructions.\nThe program decrypts this payload and jumps to it.\n </p>\n <p>\n  I want to break the program in immunity debugger when the CPU runs a NOP instruction (this is an example).\n </p>\n <p>\n  I can do it manually by running the program step by step and see if EIP points on a 0x90 byte. But I want to automate this task. Is there a way to do that in immunity debugger ?\n </p>\n <p>\n  Thanks a lot\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "72",
    "tags": [
        "immunity-debugger"
    ],
    "user": "Bob5421",
    "time": "Jan 22, 2023 at 12:03",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  ​\n​​Hi, this task can be automated and achieved using the Trace function of Immunity dbg, although this can also be done using Immunity Debugger PyCommands however for now trace over or trace in function will do.\n </p>\n <p>\n  Example:\n </p>\n <p>\n  To break on\n  <code>\n   mov ecx, 0x11\n  </code>\n  in a binary we can always set the condition(s) in Debug>Set Condition or\n  <kbd>\n   Ctrl+T\n  </kbd>\n  then input\n  <code>\n   Command is one of\n  </code>\n  as in screenshot below.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/LKfNt.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Trace condition\" src=\"https://i.sstatic.net/LKfNt.png\"/>\n  </a>\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/SZ80w.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"set condition\" src=\"https://i.sstatic.net/SZ80w.png\"/>\n  </a>\n </p>\n <p>\n  Then simply hit Trace over  from Debug or\n  <kbd>\n   Ctrl+F12\n  </kbd>\n  , this will break at the above instruction and also set trace logs for further analysis.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Viktor",
            "time": "Jan 22, 2023 at 14:35",
            "is_accepted": false,
            "comments": []
        }
    ]
}