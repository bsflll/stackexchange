{
    "title": "Understanding packet byte structures with OllyDbg",
    "link": "https://reverseengineering.stackexchange.com/questions/6031/understanding-packet-byte-structures-with-ollydbg",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have written a small dll that detours the function that decrypts and encrypts game packets allowing me to see the packets being sent and received.\n </p>\n <p>\n  Packets like login are easy to structure because it usually only contains username and password, character selection too is somewhat easy, some in-game packets like movement is also easy to understand because it just contains some x, y data.\n </p>\n <p>\n  But problem is there is a few other packets that are more than 1000 bytes long and there is really no way of knowing what each byte mean, like let us say the packet received as soon as you enter the world. Few parts of the packet is showing characterId, name, some stats, inventory data but there are some parts that are just\n  <code>\n   00 00 00 00\n  </code>\n  and I don't know what to make of them of even if how many bytes they are actually.\n </p>\n <p>\n  So when hooking the client with olly, I try to step through when receiving packets to find where it actually structures the bytes. But to no avail.\n </p>\n <p>\n  Question: Is there a better way to finding how many bytes are structured on the packet?\n </p>\n <p>\n  Example:\n </p>\n <pre><code>Login Packet\nchar 16 \nchar 16\n</code></pre>\n <p>\n  Doesnt matter really what is it for, as long as I know how many bytes it should be.\n </p>\n <p>\n  Cheers,\n </p>\n <p>\n  <strong>\n   edit\n  </strong>\n </p>\n <p>\n  Saw\n  <a href=\"http://resources.infosecinstitute.com/reverse-engineering-structures/\" rel=\"nofollow\">\n   this tutorial\n  </a>\n  but in IDA... will try later and give feedback here.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "1k",
    "tags": [
        "ida",
        "disassembly",
        "ollydbg",
        "binary-analysis"
    ],
    "user": "majidarif",
    "time": "Aug 7, 2014 at 2:21",
    "comments": [
        {
            "user": "Dominik Antal",
            "text": "<html><body><span class=\"comment-copy\">\n <a href=\"http://reverseengineering.stackexchange.com/questions/4778/how-to-find-a-login-packet-structure-client-side-only\">\n  Related?\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You may try set memory breakpoint on access (read/write) on this data  and  see how program  parse this bytes. (set breakpoint in dump window,  press F9, wait when program stop, analyze program behavior -> f8 f8 f8 f8 f8 ...) .  I am recommend use  OllyDbg 2.01 - this is version has color highlight for breaks in dump window.\nsorry for my bad english\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "DOD",
            "time": "Aug 7, 2014 at 7:34",
            "is_accepted": false,
            "comments": [
                {
                    "user": "majidarif",
                    "text": "<span class=\"comment-copy\">Yes, I'm using 2.01 :)... Thanks I'll try this later tonight. I hope you'll elaborate on <code>analyse program behaviour</code> as what I expect the program will do to each byte.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Keep in mind that buffer after recv command might contain several packets ( or just part of one packet ).\nPS: most of games have similar packets structure, like:\n[packet id][len][crc][..data..]\nSo, after receiving first packet, you are able to split all raw data in future to separate packets.\n </p>\n <p>\n  To my mind your 1000 bytes+ packet might be a list of mobs\\items on the map, their movement etc.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "helloworld",
            "time": "Aug 7, 2014 at 8:30",
            "is_accepted": false,
            "comments": [
                {
                    "user": "majidarif",
                    "text": "<span class=\"comment-copy\">I've taken care of the framing. So no problems with that. Yes, it seems like this is mostly map data. So I'll need to know each bytes. I've established that the first bytes are length, id, then the content. My problem is with the content.</span>",
                    "time": null
                }
            ]
        }
    ]
}