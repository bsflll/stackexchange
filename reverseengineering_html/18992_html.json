{
    "title": "Missing Map from Java Native Method to C Code",
    "link": "https://reverseengineering.stackexchange.com/questions/18992/missing-map-from-java-native-method-to-c-code",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  When writing a C implementation for a native Java method in Android, the rule is to name the C function according to the convention \"Java_com_...\". But I encountered an APK in which there are no such names in the\n  <code>\n   so\n  </code>\n  files and yet the program runs perfectly well. Are there other ways to map a Java native declaration to some function in the\n  <code>\n   so\n  </code>\n  files? Is there a technique to find the implementing function? I tried JDB, but it couldn't get into native codes. GDB requires the function name in the first place, which is missing in my case.\n </p>\n <p>\n  I forgot to mention that the Java code is obfuscated.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "130",
    "tags": [
        "ida",
        "android",
        "obfuscation",
        "objdump"
    ],
    "user": "Zirui Wang",
    "time": "Aug 6, 2018 at 10:12",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Wait ...\n <i>\n  all\n </i>\n contained\n <code>\n  .so\n </code>\n files don't have that? I have also been working on an app and the only time/place where the rule you cite applies would be in the JNI layer, right? So\n <i>\n  other\n </i>\n libraries that are contained in the same application package may still have their own naming conventions. I'm not sure if there is such a thing as purely native apps in Android, but we have libraries that we otherwise also deploy on Linux and these are basically unchanged, but that one library that provides the bridge between the (Java) runtime and the lib abides by the rules.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Zirui Wang",
            "text": "<html><body><span class=\"comment-copy\">\n @0xC0000022L: I treated all\n <code>\n  so\n </code>\n files as JNI-layer files and didn't consider other formats. My app is not a purely native app; that's why I mentioned a mapping from Java to C. My approach is quite primitive and I think that's one reason why I'm missing something.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n does your file have\n <code>\n  JNI_OnLoad\n </code>\n entry?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Zirui Wang",
            "text": "<html><body><span class=\"comment-copy\">\n @IgorSkochinsky: Yes, it does. The next question is how to see its code. I can't see it in IDA Pro's function list.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}