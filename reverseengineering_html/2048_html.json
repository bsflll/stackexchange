{
    "title": "Common Lisp bytecode or machine code decompiler",
    "link": "https://reverseengineering.stackexchange.com/questions/2048/common-lisp-bytecode-or-machine-code-decompiler",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Does anyone know of a decompiler for Common Lisp?\n </p>\n <p>\n  I know most lisp environments include a disassembler. But I don't know of any decompilers.\n </p>\n <p>\n  I would think it should be possible to make a decompiler using the output of the various lisp environment disassemblers so as to not be dependent on the bytecode format.\n </p>\n</div>\n</body></html>",
    "votes": "10",
    "answers": 1,
    "views": "2k",
    "tags": [
        "byte-code",
        "decompiler",
        "machine-code"
    ],
    "user": "cb88",
    "time": "May 17, 2013 at 0:55",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n Can you upload a small sample program (source code and the binary) to see how it looks like?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "cb88",
            "text": "<html><body><span class=\"comment-copy\">\n @Igor Skochinsky I suppose I could will have to wait a couple days though. I know clisp and I am pretty sure sbcl generate bytecode. And Sbcl can compile to native code. also it is worth noting that somehow the environment is usually dumped into the binary. ECL translates to C then compiles so it is even more different.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Check out this Emacs man page.  While I would expect it to be specific for Emacs Lisp, it's certainly a starting point.\n  <a href=\"http://www.gnu.org/software/emacs/manual/html_node/elisp/Disassembly.html\" rel=\"nofollow\">\n   http://www.gnu.org/software/emacs/manual/html_node/elisp/Disassembly.html\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "David Hoelzer",
            "time": "Jan 1, 2014 at 12:10",
            "is_accepted": false,
            "comments": [
                {
                    "user": "rocky",
                    "text": "<span class=\"comment-copy\">Yes, it is specific to Emacs Lisp. And decompilation is a bit different than disassembly, although decompilers start with a disasssembly as the first step.</span>",
                    "time": null
                }
            ]
        }
    ]
}