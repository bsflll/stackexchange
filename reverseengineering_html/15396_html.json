{
    "title": "Accesssing xmm registers in IDAPython",
    "link": "https://reverseengineering.stackexchange.com/questions/15396/accesssing-xmm-registers-in-idapython",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to write a Python script for IDA that hooks into debugging events, and prints some info about the xmm registers. I tried\n </p>\n <pre><code>idc.GetRegValue(\"xmm0\")\n</code></pre>\n <p>\n  But that returns a random long, which changes every time I call the function. I looked at the\n  <a href=\"https://github.com/idapython/src/blob/62ddab8db6929edbea8d2016e4659cf7cc62aa88/python/idc.py#L7906\" rel=\"nofollow noreferrer\">\n   source\n  </a>\n  , and it looks like\n  <code>\n   GetRegValue\n  </code>\n  is always returning an integer value.\n </p>\n <p>\n  So I tried running the underlying code directly:\n </p>\n <pre><code>rv = idaapi.regval_t()\nidaapi.get_reg_val(\"xmm0\", rv)\nprint (rv.fval)\n</code></pre>\n <p>\n  Which prints:\n </p>\n <pre><code><Swig Object of type 'UINT16 *' at 0x073E1F08>\n</code></pre>\n <p>\n  There does not appear to be a way to extract a float from that either.\n </p>\n <p>\n  So how do I actually get the value of an xmm register?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "idapython"
    ],
    "user": "cmpxchg8b",
    "time": "May 21, 2017 at 11:07",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <pre><code>rv = idaapi.regval_t()\nidaapi.get_reg_val(\"xmm0\", rv)\nprint (rv.bytes().encode('hex'))\n</code></pre>\n <p>\n  This will give you the raw 256 bit value of the xmm0 register. Depending on how the program you're debugging is using the register, this might contain various things. In my case, the code I'm debugging uses it as 4 floating point values. To parse them:\n </p>\n <pre><code>import struct\nprint(struct.unpack('ffff', rv.bytes()))\n</code></pre>\n <p>\n  if your debuggee is using the register as two doubles, you would use 'dd' instead of 'ffff'.\n </p>\n <p>\n  In general, look up the SDK documentation instead of the (not very good) IDAPython documentation. Here's the relevant page for this:\n  <a href=\"https://www.hex-rays.com/products/ida/support/sdkdoc/structregval__t.html\" rel=\"nofollow noreferrer\">\n   https://www.hex-rays.com/products/ida/support/sdkdoc/structregval__t.html\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Eugenio Bruno",
            "time": "Mar 10, 2018 at 16:49",
            "is_accepted": true,
            "comments": []
        }
    ]
}