{
    "title": "Using a DLL proxy fails due to an unknown error",
    "link": "https://reverseengineering.stackexchange.com/questions/6142/using-a-dll-proxy-fails-due-to-an-unknown-error",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm using a dll proxy with the code described\n  <a href=\"http://www.codeproject.com/Articles/16541/Create-your-Proxy-DLLs-automatically\" rel=\"nofollow\">\n   here\n  </a>\n  , but having tons of trouble.\n </p>\n <p>\n  First, I use VS2012 on Windows 7 and the target is on Windows XP. So I needed to:\n </p>\n <ol>\n  <li>\n   Install VCRedist on the target computer (I'd like to get around that if possible, suggestions will be greately appriciated)\n  </li>\n  <li>\n   Update my VS to at least Update 1 (I've updated to Update 4) to have\nXP compilation support.\n  </li>\n </ol>\n <p>\n  I did both of these, and the errors have changed. But still I get this error when the program starts:\n </p>\n <pre><code>The application failed to initialize properly (0xc000007b)\n</code></pre>\n <p>\n  And it doesn't run.\n </p>\n <p>\n  The DLL proxy I'm using is basically the default example from the code project article. I've added a message box and a log file write on the DllMain and it doesn't show, meaning the dll isn't even loaded - But I don't get why.\n </p>\n <p>\n  How can I debug this? Is this a compilation configuration issue?\n </p>\n <p>\n  EDIT:\nI've written a testing program that calls LoadLibrary with my dll proxy, and it works okay. So I'm thinking it's not a CRT dlls thing.\nAnyway, here's the info from WinDbg after I compiled with /MT (I'm sorry but I had to remove companies and application names):\n </p>\n <pre><code>Microsoft (R) Windows Debugger Version 6.12.0002.633 X86\nCopyright (c) Microsoft Corporation. All rights reserved.\n\nCommandLine: \"C:\\Program Files\\AppName\\AppName.exe\"\nSymbol search path is: *** Invalid ***\n****************************************************************************\n* Symbol loading may be unreliable without a symbol search path.           *\n* Use .symfix to have the debugger choose a symbol path.                   *\n* After setting your symbol path, use .reload to refresh symbol locations. *\n****************************************************************************\nExecutable search path is: \nModLoad: 12400000 12bdb000   AppName.exe\nModLoad: 7c900000 7c9b2000   ntdll.dll\nModLoad: 7c800000 7c8f6000   C:\\WINDOWS\\system32\\kernel32.dll\nModLoad: 60000000 6006d000   C:\\WINDOWS\\cdmapi32.dll\nModLoad: 73dd0000 73ece000   C:\\WINDOWS\\system32\\MFC42.DLL\nModLoad: 77c10000 77c68000   C:\\WINDOWS\\system32\\msvcrt.dll\nModLoad: 77f10000 77f59000   C:\\WINDOWS\\system32\\GDI32.dll\nModLoad: 7e410000 7e4a1000   C:\\WINDOWS\\system32\\USER32.dll\nModLoad: 77dd0000 77e6b000   C:\\WINDOWS\\system32\\ADVAPI32.dll\nModLoad: 77e70000 77f02000   C:\\WINDOWS\\system32\\RPCRT4.dll\nModLoad: 77fe0000 77ff1000   C:\\WINDOWS\\system32\\Secur32.dll\nModLoad: 5d090000 5d12a000   C:\\WINDOWS\\system32\\COMCTL32.dll\nModLoad: 774e0000 7761e000   C:\\WINDOWS\\system32\\ole32.dll\nModLoad: 77120000 771ab000   C:\\WINDOWS\\system32\\OLEAUT32.dll\nModLoad: 76080000 760e5000   C:\\WINDOWS\\system32\\MSVCP60.dll\nModLoad: 77c00000 77c08000   C:\\WINDOWS\\system32\\VERSION.dll\nModLoad: 76b40000 76b6d000   C:\\WINDOWS\\system32\\WINMM.dll\nModLoad: 76390000 763ad000   C:\\WINDOWS\\system32\\IMM32.dll\nModLoad: 76380000 76385000   C:\\WINDOWS\\system32\\MSIMG32.dll\nModLoad: 763b0000 763f9000   C:\\WINDOWS\\system32\\comdlg32.dll\nModLoad: 7c9c0000 7d1d7000   C:\\WINDOWS\\system32\\SHELL32.dll\nModLoad: 77f60000 77fd6000   C:\\WINDOWS\\system32\\SHLWAPI.dll\nModLoad: 73000000 73026000   C:\\WINDOWS\\system32\\WINSPOOL.DRV\nModLoad: 00340000 00356000   C:\\Program Files\\AppName\\DllName.dll\n(dc8.68c): Unknown exception - code c000007b (first chance)\n(dc8.68c): Unknown exception - code c000007b (!!! second chance !!!)\neax=0012fc54 ebx=00000000 ecx=0012fc80 edx=7c90e514 esi=7ffdc000 edi=c000007b\neip=7c9673be esp=0012fc54 ebp=0012fca4 iopl=0         nv up ei pl zr na pe nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246\n*** ERROR: Symbol file could not be found.  Defaulted to export symbols for ntdll.dll - \nntdll!RtlRaiseStatus+0x26:\n7c9673be c9              leave\n</code></pre>\n <p>\n  I've checked procmon, here's the last few lines:\n </p>\n <pre><code>9:56:07.8699734 PM  AppName.exe 496 QueryOpen   C:\\Program Files\\AppName\\DllName.dll    SUCCESS CreationTime: 8/31/2014 2:14:39 PM, LastAccessTime: 8/31/2014 9:55:22 PM, LastWriteTime: 8/31/2014 7:14:29 PM, ChangeTime: 8/31/2014 7:14:29 PM, AllocationSize: 73,728, EndOfFile: 70,656, FileAttributes: A\n9:56:07.8704646 PM  AppName.exe 496 QueryOpen   C:\\Program Files\\AppName\\DllName.dll    SUCCESS CreationTime: 8/31/2014 2:14:39 PM, LastAccessTime: 8/31/2014 9:55:22 PM, LastWriteTime: 8/31/2014 7:14:29 PM, ChangeTime: 8/31/2014 7:14:29 PM, AllocationSize: 73,728, EndOfFile: 70,656, FileAttributes: A\n9:56:07.8709551 PM  AppName.exe 496 CreateFile  C:\\Program Files\\AppName\\DllName.dll    SUCCESS Desired Access: Execute/Traverse, Synchronize, Disposition: Open, Options: Synchronous IO Non-Alert, Non-Directory File, Attributes: n/a, ShareMode: Read, Delete, AllocationSize: n/a, OpenResult: Opened\n9:56:07.8713057 PM  AppName.exe 496 CreateFileMapping   C:\\Program Files\\AppName\\DllName.dll    SUCCESS SyncType: SyncTypeCreateSection, PageProtection: PAGE_EXECUTE\n9:56:07.8714685 PM  AppName.exe 496 CreateFileMapping   C:\\Program Files\\AppName\\DllName.dll    SUCCESS SyncType: SyncTypeOther\n9:56:07.8718270 PM  AppName.exe 496 CloseFile   C:\\Program Files\\AppName\\DllName.dll    SUCCESS \n9:56:07.8724308 PM  AppName.exe 496 Load Image  C:\\Program Files\\AppName\\DllName.dll    SUCCESS Image Base: 0x340000, Image Size: 0x16000\n9:56:07.8737372 PM  AppName.exe 496 CreateFile  C:\\Program Files\\AppName\\DllName.dll.2.Manifest NAME NOT FOUND  Desired Access: Generic Read/Execute, Disposition: Open, Options: Synchronous IO Non-Alert, Non-Directory File, Attributes: n/a, ShareMode: Read, AllocationSize: n/a\n9:56:07.8746961 PM  AppName.exe 496 CreateFile  C:\\Program Files\\AppName\\DllName.dll.2.Config   NAME NOT FOUND  Desired Access: Generic Read/Execute, Disposition: Open, Options: Synchronous IO Non-Alert, Non-Directory File, Attributes: n/a, ShareMode: Read, AllocationSize: n/a\n9:56:09.0143355 PM  AppName.exe 496 Thread Exit     SUCCESS Thread ID: 4064, User Time: 0.0000000, Kernel Time: 0.0468750\n9:56:09.0151822 PM  AppName.exe 496 Process Exit        SUCCESS Exit Status: -1073741701, User Time: 0.0156250 seconds, Kernel Time: 0.0468750 seconds, Private Bytes: 2,572,288, Peak Private Bytes: 2,588,672, Working Set: 1,761,280, Peak Working Set: 1,765,376\n9:56:09.0158711 PM  AppName.exe 496 CloseFile   C:\\Program Files\\AppName    SUCCESS \n</code></pre>\n <p>\n  It seems that it fails searching for the manifest and config files. Is this a problem?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "c++",
        "dll"
    ],
    "user": "Nitay",
    "time": "Aug 31, 2014 at 20:17",
    "comments": [
        {
            "user": "perror",
            "text": "<html><body><span class=\"comment-copy\">\n I don't really get how your question is related to reverse-engineering... You may have a better answer on\n <a href=\"http://serverfault.com/\">\n  ServerFault\n </a>\n .\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Nitay",
            "text": "<html><body><span class=\"comment-copy\">\n It's a dll proxy - as commonly used in reversing\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "qwm",
            "text": "<html><body><span class=\"comment-copy\">\n considering ntstatus, something's wrong with (your) image. Maybe x86/x64 issue? Who can guess without further info. Open\n <code>\n  procmon\n </code>\n and check when the loading breaks, or start debugger if you really want to debug.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Nitay",
            "text": "<html><body><span class=\"comment-copy\">\n I've checked procmon and added the info to the question\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The problem happens due to the fact that the required CRT DLL's are missing on the target machine. To avoid this you can link against the CRT statically. \nUse the\n  <strong>\n   Multi-threaded (/MT)\n  </strong>\n  linker flags in VS. This way you also do not need to install\n  <em>\n   VCRedist\n  </em>\n  on target computer.\n </p>\n <p>\n  More info\n  <em>\n   <a href=\"http://www.davidlenihan.com/2008/01/choosing_the_correct_cc_runtim.html\" rel=\"nofollow\">\n    here\n   </a>\n  </em>\n </p>\n <p>\n  Another way is to install\n  <em>\n   <a href=\"http://www.dependencywalker.com/\" rel=\"nofollow\">\n    Dependency Walker\n   </a>\n  </em>\n  on the target machine, open the required PE file and note which dependencies are missing and then copy the required dependencies there.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "0xec",
            "time": "Aug 31, 2014 at 15:38",
            "is_accepted": false,
            "comments": []
        }
    ]
}