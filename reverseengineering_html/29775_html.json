{
    "title": "How to print custom name of an operand in IDA Python?",
    "link": "https://reverseengineering.stackexchange.com/questions/29775/how-to-print-custom-name-of-an-operand-in-ida-python",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm starting to work on a plugin to port symbols(stack variable names, operand names, comments, etc) from functions in one database to functions in another database when function names match.\n </p>\n <p>\n  I'm getting familiar with IDA api and now I can't find out how to get a custom name of an operand in IDA Python.\n </p>\n <p>\n  Here's my main function:\n  <a href=\"https://i.sstatic.net/uR3om.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/uR3om.png\"/>\n  </a>\n </p>\n <p>\n  For now I'd just like to be able to print information I want, I'd like to print operand names: normal names when custom name is not defined, and the custom name when I set the custom name for the operand(Alt+F1 shortcut key by default).\n </p>\n <p>\n  Here's what I came up with for my main function:\n </p>\n <pre><code>import idautils\n\n\nfor functionItem in idautils.FuncItems(0x140012400):\n    if ida_bytes.is_code(ida_bytes.get_full_flags(functionItem)):\n        instruction = idautils.DecodeInstruction(functionItem)\n        print(idc.print_operand(instruction.ip, 0))\n</code></pre>\n <p>\n  And I expect it to print this at the end:\n </p>\n <pre><code>rsp\nrdi\nrbp:myCustomName\n</code></pre>\n <p>\n  This code prints:\n </p>\n <pre><code>rsp\nrdi\nrbp\n</code></pre>\n <p>\n  I tried to google but I can't find how to show custom operand name. I could only find these 2 related links:\n </p>\n <ul>\n  <li>\n   <a href=\"https://hex-rays.com/products/ida/support/idadoc/552.shtml\" rel=\"nofollow noreferrer\">\n    https://hex-rays.com/products/ida/support/idadoc/552.shtml\n   </a>\n  </li>\n  <li>\n   <a href=\"https://hex-rays.com/products/ida/support/idadoc/477.shtml\" rel=\"nofollow noreferrer\">\n    https://hex-rays.com/products/ida/support/idadoc/477.shtml\n   </a>\n  </li>\n </ul>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "485",
    "tags": [
        "idapython"
    ],
    "user": "Revester",
    "time": "Dec 25, 2021 at 10:29",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  After doing a bunch of searches like\n  <code>\n   operand\n  </code>\n  ,\n  <code>\n   manual\n  </code>\n  ,\n  <code>\n   manual operand\n  </code>\n  on hex-rays's\n  <a href=\"https://hex-rays.com/wp-content/static/products/ida/support/idapython_docs/\" rel=\"nofollow noreferrer\">\n   IDA Python docs website\n  </a>\n  , I finally managed to find the appropriate APIs needed to achieve what I want.\n </p>\n <pre><code>import idautils\n\n\nfor functionItem in idautils.FuncItems(0x140012400):\n    if ida_bytes.is_code(ida_bytes.get_full_flags(functionItem)):\n        instruction = idautils.DecodeInstruction(functionItem)\n        if(ida_bytes.is_forced_operand(instruction.ip, 0)):\n            print(ida_bytes.get_forced_operand(instruction.ip, 0))\n        else:\n            print(idc.print_operand(instruction.ip, 0))\n</code></pre>\n <p>\n  This code above prints the desired result on IDA 7.6 with Python 3.9 installed:\n </p>\n <pre><code>rsp\nrdi\nrbp:myCustomName\n</code></pre>\n <p>\n  The functions for the manual strings on instructions and operands are:\n </p>\n <ul>\n  <li>\n   <a href=\"https://hex-rays.com/wp-content/static/products/ida/support/idapython_docs/ida_bytes.html#ida_bytes.is_manual_insn\" rel=\"nofollow noreferrer\">\n    ida_bytes.is_manual_insn\n   </a>\n  </li>\n  <li>\n   <a href=\"https://hex-rays.com/wp-content/static/products/ida/support/idapython_docs/ida_bytes.html#ida_bytes.get_manual_insn\" rel=\"nofollow noreferrer\">\n    ida_bytes.get_manual_insn\n   </a>\n  </li>\n  <li>\n   <a href=\"https://hex-rays.com/wp-content/static/products/ida/support/idapython_docs/ida_bytes.html#ida_bytes.set_manual_insn\" rel=\"nofollow noreferrer\">\n    ida_bytes.set_manual_insn\n   </a>\n  </li>\n  <li>\n   <a href=\"https://hex-rays.com/wp-content/static/products/ida/support/idapython_docs/ida_bytes.html#ida_bytes.is_forced_operand\" rel=\"nofollow noreferrer\">\n    ida_bytes.is_forced_operand\n   </a>\n  </li>\n  <li>\n   <a href=\"https://hex-rays.com/wp-content/static/products/ida/support/idapython_docs/ida_bytes.html#ida_bytes.get_forced_operand\" rel=\"nofollow noreferrer\">\n    ida_bytes.get_forced_operand\n   </a>\n  </li>\n  <li>\n   <a href=\"https://hex-rays.com/wp-content/static/products/ida/support/idapython_docs/ida_bytes.html#ida_bytes.set_forced_operand\" rel=\"nofollow noreferrer\">\n    ida_bytes.set_forced_operand\n   </a>\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Revester",
            "time": "Dec 25, 2021 at 10:15",
            "is_accepted": false,
            "comments": []
        }
    ]
}