{
    "title": "Assembly - Binary Bomb Confusion",
    "link": "https://reverseengineering.stackexchange.com/questions/11037/assembly-binary-bomb-confusion",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have an assignment for reverse engineering a binary. The function I'm up to takes a string input and reads one character at a time. It is as follows (push/pop registers removed):\n  <pre><code>\n 8048b6e: mov    $0x8049ee9,%esi \n 8048b73: movzbl (%esi),%edx ; (%esi) = 0x654A6167\n 8048b76: test   %dl,%dl\n 8048b78: je     8048bb2 \n 8048b7a: mov    0x8(%ebp),%ebx\n 8048b7d: mov    $0x16,%edi\n 8048b82: movzbl (%ebx),%eax\n 8048b85: sub    $0x61,%eax\n 8048b88: cmp    $0x19,%al\n 8048b8a: ja     8048b97 \n 8048b8c: mov    %edi,%ecx\n 8048b8e: sub    %al,%cl\n 8048b90: mov    %ecx,%eax\n 8048b92: jns    8048b97 \n 8048b94: add    $0x1a,%eax\n 8048b97: add    $0x61,%eax\n 8048b9a: cmp    %al,%dl\n 8048b9c: je     8048ba3 \n 8048b9e: call   8048e18 \n 8048ba3: add    $0x1,%esi\n 8048ba6: movzbl (%esi),%edx\n 8048ba9: test   %dl,%dl\n 8048bab: je     8048bb2 \n 8048bad: add    $0x1,%ebx\n 8048bb0: jmp    8048b82 \n</code></pre>\n </p>\n <p>\n  I'm having a little trouble understanding the logic of one part (8048b85 onwards) so I converted it to C\n  <pre><code>\neax = *ebx;                                 // movzbl (%ebx),%eax\neax -= 97;                                  // sub    $0x61,%eax</code></pre>\n </p>\n <pre><code>// cmp    $0x19,%al\n// ja     8048b97 <phase_3+0x32>\nif((unsigned)(eax & 0xFF) < 25)\n{\n  ecx = edi;                                // mov    %edi,%ecx\n  int cl = (eax & 0xFF) - (ecx & 0xFF);     // sub    %al,%cl\n  ecx &= cl;\n  eax = ecx;                                // mov    %ecx,%eax\n\n  if(cl >= -127 && cl < 128)                // jns    8048b97\n  {\n    eax += 0x1A;                              // add    $0x1a,%eax\n  }\n}\neax += 97;                                  // add    $0x61,%eax\nif((eax & 0xFF) != (edx & 0xFF))            // cmp    %al,%dl\n{\n  trigger_bomb();                           //  call   8048e18 <trigger_bomb>\n}\n</code></pre>\n <p>\n </p>\n <p>\n  I'm not sure if what I converted to is correct. The first value being compared is 0x67 which is g in ascii which wont set the flag for ja as 0x19 > 0x67 - 0x61. If I try 0x67 - 0x1A as the input, since it's unsigned comparison it will never be < 25 as it will overflow back to 236. I thought then I would need to use a negative number so that if it overflows, it would go 0x67 but since the input is ascii I'm not sure that it is possible to input a negative value.\n </p>\n <p>\n  So my question is where am I going wrong in my logic? I'm not looking to be given the answer since I will need to figure out the other 3 values, but what I'm trying just doesn't seem to be correct. Any pointers/advice would be greatly appreciated.\n </p>\n <p>\n  Thankyou\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "1k",
    "tags": [
        "assembly",
        "x86",
        "binary"
    ],
    "user": "What.Am.I.Doing",
    "time": "Oct 6, 2015 at 11:08",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The problem was sadly my own stupidity.. First issue,\n </p>\n <pre><code>int cl = (eax & 0xFF) - (ecx & 0xFF);</code></pre>\n <p>\n  Has the arguments around the wrong way (dest = dest - source not dest = source - dest)\n </p>\n <p>\n  And second was my confusion about the JNS instruction. I misinterpreted it as signed byte not the sign flag thus,\n </p>\n <pre><code>if(cl >= -127 && cl < 128)</code></pre>\n <p>\n  should have been written as\n </p>\n <pre><code>if(cl < 0)</code></pre>\n <p>\n  After a week of trying to work this out the answer was rather annoying :)\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "What.Am.I.Doing",
            "time": "Oct 6, 2015 at 15:06",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The\n  <code>\n   0x61\n  </code>\n  is a well-known value in the ASCII table it corresponds to the\n  <code>\n   a\n  </code>\n  character. And, in fact, when you encounter:\n </p>\n <pre><code>8048b85: sub    $0x61,%eax\n</code></pre>\n <p>\n  It usually means that you are shifting a character from the usual printable characters intervals down to the unprintable characters values.\n </p>\n <p>\n  I didn't take a deep look at your code, but I really suspect that what is done here is about encoding an ASCII text into a set of unprintable characters.\n </p>\n <p>\n  But, it is just a wild guess (taken in less than 5 minutes). So, beat me if I am wrong ! :-)\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "perror",
            "time": "Oct 6, 2015 at 11:11",
            "is_accepted": false,
            "comments": []
        }
    ]
}