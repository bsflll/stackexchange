{
    "title": "Locate compressed section of executable",
    "link": "https://reverseengineering.stackexchange.com/questions/11352/locate-compressed-section-of-executable",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am playing with\n  <a href=\"http://clinical.netforum.healthcare.philips.com/us_en/Explore/Clinical-News/MRI/Philips-DICOM-Viewer-download-version-R30-SP3\" rel=\"nofollow noreferrer\">\n   Philips DICOM Viewer - download version R3.0 SP3\n  </a>\n  . This viewer can display DICOM information (press\n  <code>\n   F9\n  </code>\n  ). Since the displayed strings are not stored in the DICOM file itself, I suspect they are stored somewhere in the binary (standalone binary, no extra DLL loaded):\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/nLfPF.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Screenshot of DICOM Information\" src=\"https://i.sstatic.net/nLfPF.png\"/>\n  </a>\n </p>\n <p>\n  However I could not find it using\n  <code>\n   strings\n  </code>\n  and or:\n </p>\n <pre><code>$ binwalk -M -X -e PmsDView.exe\n</code></pre>\n <p>\n  Followed by:\n </p>\n <pre><code>$ grep -r Manufacturer _PmsDView.exe.extracted\n</code></pre>\n <p>\n  and\n </p>\n <pre><code>$ find _PmsDView.exe.extracted/ -exec strings -n 12 -e l {} \\; | grep Manufacturer\n</code></pre>\n <p>\n  I picked\n  <code>\n   Manufacturer\n  </code>\n  since this is one of the longer string. Also I only used\n  <code>\n   -e s\n  </code>\n  and\n  <code>\n   -e l\n  </code>\n  as they make the more sense (eg:\n  <code>\n   strings -e l PmsDView.exe\n  </code>\n  and\n  <code>\n   strings -e s PmsDView.exe\n  </code>\n  ). I've run\n  <code>\n   -e b\n  </code>\n  ,\n  <code>\n   -e B\n  </code>\n  and\n  <code>\n   -e L\n  </code>\n  but they did not return anything.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "127",
    "tags": [
        "binary-analysis",
        "encryption"
    ],
    "user": "tibar",
    "time": "Nov 19, 2015 at 8:15",
    "comments": [
        {
            "user": "Jason Geffner",
            "text": "<html><body><span class=\"comment-copy\">\n Have you tried searching for\n <code>\n  Manufacturer\n </code>\n as a wide-character Unicode string?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Neitsa",
            "text": "<html><body><span class=\"comment-copy\">\n Also, you could check the imported DLLs (recursively) and see if one of them contain one of the searched strings. Another solution is to scan the whole process address space with a debugger ( I think process explorer can also do that). As stated by @JasonGeffner, search for char or wchar strings. If you still can't find it then it's probably concealed in some way.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}