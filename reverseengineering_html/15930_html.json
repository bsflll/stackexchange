{
    "title": "Need help for an unknown 7-bit checksum",
    "link": "https://reverseengineering.stackexchange.com/questions/15930/need-help-for-an-unknown-7-bit-checksum",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  i am struggling since a long time to determine the checksum of the following sequences.\n </p>\n <p>\n  I have two examples.\n </p>\n <p>\n  Ex1: Have the same checksum and one have a payload incrementation  by 0x0A\n  \n\n  at the same position (Byte 8).\n </p>\n <p>\n  Ex2: This one have the same checksum (9.byte).\n </p>\n <p>\n  I am sure this are the checksum and is always 1 Byte.\n  \n\n  What I noticed is that the values of checksum is not bigger than 0x7F.\n  \n\n  I have many expamples but i see that it never grows up to 0x80.\n  \n\n  It can also not 0xFF because 0xFF marks the sequenze as the end.\n </p>\n <p>\n  <strong>\n   Example with paylod increment of 0x0A on the 8.Byte.\n  </strong>\n  \n\n  01: ED  0   1   0   1   0   0   00  29\n  \n\n  02: ED  0   1   0   1   0   0   0A  19\n  \n\n  03: ED  0   1   0   1   0   0   14  49\n  \n\n  04: ED  0   1   0   1   0   0   1E  79\n  \n\n  05: ED  0   1   0   1   0   0   28  4A\n  \n\n  06: ED  0   1   0   1   0   0   32  44\n </p>\n <p>\n  <strong>\n   This examples has the same checksum (0x53):\n  </strong>\n  \n\n  01: E4  09  01  02  26  50  00  53\n  \n\n  02: E4  10  01  01  00  0F  00  53\n  \n\n  03: E4  14  01  09  42  09  41  53\n  \n\n  04: E4  15  01  14  48  08  03  53\n  \n\n  05: E4  01  02  21  02  50  00  53\n  \n\n  05: E4  01  02  22  22  52  00  53\n  \n\n  06: E4  01  02  22  31  05  00  53\n  \n\n  07: E4  02  02  02  10  0D  05  53\n </p>\n <p>\n  I have tested various algorythms.\nFletcher, Adler32, BSD 8Bit are one of them.\n  \n\n  Xor8 an some tests with shiftet bits and various modulus.\n  \n\n  I have xored the values but nothing of worth comes out.\n  \n\n  Reveng gave me some results but not for all sequences.\n  \n\n  I am also sure that it is not a CRC but only a simple checksum.\n </p>\n <p>\n  I have read many threads if there was a hint how i can reverse the checksum.\n  \n\n  But i see nothing wich handles 7bit. I also look at the bits but i dont know on how to begin.\n </p>\n <p>\n  I see some participations but dont see the relation.\n  \n\n  In the first block I see that the checksum is ending in 0x09. (Set 1 - 4)\n  \n\n  If the payload increases by 0x0A the checksum also increments by 0x30 (Set 2-4)\nuntil a specific point (Set 5).\n </p>\n <p>\n  I am sure it is very simple. In german i would say \"ich sehe den Wald vor lauter BÃ¤umem nicht\".\n  \n\n  Don't know the correct translation in english. ;-)\n </p>\n <p>\n  It would very appreciate if someone can point me the right direction.\n </p>\n <p>\n  With best regards\n  \n\n  Chris\n </p>\n <p>\n  Edit:\n- replaced the word \"crc\" in the text by \"checksum\" for better understanding.\n  \n\n  Tnx to JimmyB for the hint.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "471",
    "tags": [
        "crc"
    ],
    "user": "smith007",
    "time": "Jul 28, 2017 at 18:35",
    "comments": [
        {
            "user": "Florian Castellane",
            "text": "<html><body><span class=\"comment-copy\">\n your expression would be \"I cannot see the wood for the trees\" in English.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "JimmyB",
            "text": "<html><body><span class=\"comment-copy\">\n I find it confusing that you're referring to the unknown checksum as \"CRC\" throughout your question.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "smith007",
            "text": "<html><body><span class=\"comment-copy\">\n You are right. I have not considered when writing.  I think in this case at first it makes no difference  but I already know that a crc is not checksum. ;-)\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}