{
    "title": "reverse engineer BE126 boot-loader",
    "link": "https://reverseengineering.stackexchange.com/questions/16585/reverse-engineer-be126-boot-loader",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to reverse engineer the firmware upgrading process of BE126 wifi repeater which has a MIPS CPU.\n </p>\n <p>\n  I couldn't find a firmware upgrade image in the manufacturer site.\n </p>\n <p>\n  I have the toolchain for the processor.\n </p>\n <p>\n  I dumped the flash of the device,the flash consists of 3 partitions:\n1.the boot partition\n2.compressed Linux kernel\n3.rootfs\n </p>\n <p>\n  In the boot partition the has an LZMA compressed file that by running strings on the decompressed output appear to be u-boot and it has some strings concerning the upgrading process\n </p>\n <p>\n  Unfortunately the second stage u-boot is in binary format without the uImage header how can i disassemble it?\n </p>\n <p>\n  I know i need to find the loading address but i don't know how,most of the research i found on the internet for such things had the uImage header that has the loading address.\n </p>\n <p>\n  I tried to reverse the first stage boot loader,I know the loading address but not the size of the code section.\n </p>\n <p>\n  an output of binwalk on the boot partition:\n </p>\n <pre><code>   DECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n6488          0x1958          LZMA compressed data, properties: 0x5D, dictionary size: 8388608 bytes, uncompressed size: 107408 bytes\n70881         0x114E1         Zlib compressed data, default compression\n83275         0x1454B         Zlib compressed data, default compression\n95669         0x175B5         Zlib compressed data, default compression\n136417        0x214E1         Zlib compressed data, default compression\n</code></pre>\n <p>\n  the Zlib data are configuration files.\n </p>\n <p>\n  binwalk on the extracted LZMA:\n </p>\n <pre><code>DECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n86608         0x15250         CRC32 polynomial table, big endian\n99996         0x1869C         HTML document header\n100720        0x18970         HTML document footer\n100772        0x189A4         HTML document header\n101132        0x18B0C         HTML document footer\n101184        0x18B40         HTML document header\n101523        0x18C93         HTML document footer\n101576        0x18CC8         HTML document header\n101824        0x18DC0         HTML document footer\n101876        0x18DF4         HTML document header\n102226        0x18F52         HTML document footer\n</code></pre>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "325",
    "tags": [
        "mips",
        "binary-format"
    ],
    "user": "omer12433",
    "time": "Oct 20, 2017 at 10:44",
    "comments": [],
    "answers_data": []
}