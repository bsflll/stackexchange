{
    "title": "Ghidra define c++ string",
    "link": "https://reverseengineering.stackexchange.com/questions/20819/ghidra-define-c-string",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  So I want to define a c++ string in ghidra struct. I noticed while reverse engineering a C++ binary, I found that, it defines a\n  <code>\n   basic_string\n  </code>\n  class in the symbol tree.\n </p>\n <p>\n  Now I want to define a\n  <code>\n   std::string\n  </code>\n  (not a pointer to it) within a struct. Is there a way to do it automatically right now, or will I still need to manually define a\n  <code>\n   basic_string\n  </code>\n  struct and go from there? Is there currently a way to associate classes and structs together like so (currently I think classes only act as namespaces?\n </p>\n <p>\n  I also tried just simply adding a field with the type\n  <code>\n   basic_string\n  </code>\n  in my struct, but it complains that\n  <code>\n   basic_string\n  </code>\n  is just a placeholder struct.\n </p>\n <p>\n  Haven't yet tested how ghidra would handle a\n  <code>\n   std::string\n  </code>\n  local variable.\n </p>\n <p>\n  EDIT: example code for what I described above:\n </p>\n <pre><code>#include <string>\n#include <iostream>\n\nstruct Human {\n  int age;\n  bool is_male;\n  std::string name;\n\npublic:\n  Human(int age, bool is_male, const std::string &name) : age(age), is_male(is_male), \n    name(name) { }\n\n  void say_hello() {\n    std::cout << \"Hello, I am a \" << (is_male ? \"male \" : \"female \") << age << \n      \"-year old named \" << name << \"!\" << std::endl;\n  }\n};\n\nint main() {\n  Human *human = new Human(17, true, \"Adam\");\n  human->say_hello();\n}\n</code></pre>\n <p>\n  When you putting this into ghidra, and then do auto-fill struct fields, it will recognize the\n  <code>\n   age\n  </code>\n  and\n  <code>\n   is_male\n  </code>\n  fields, but not the\n  <code>\n   name\n  </code>\n  field, as this is an opaque\n  <code>\n   std::string\n  </code>\n  object.\n </p>\n <p>\n  Up to this point, when I was reversing another (much larger) binary, I simply  manually created a new struct:\n </p>\n <pre><code>struct basic_string {\n  char *ptr;\n  size_t len;\n  char buff[0x10]\n};\n</code></pre>\n <p>\n  Is there something that ghidra can do this automatically? Also I'm wondering would there be any portability issues if I just always assume the above struct?\n </p>\n</div>\n</body></html>",
    "votes": "9",
    "answers": 1,
    "views": "6k",
    "tags": [
        "ghidra"
    ],
    "user": "theKidOfArcrania",
    "time": "Mar 8, 2019 at 16:45",
    "comments": [
        {
            "user": "camp0",
            "text": "<html><body><span class=\"comment-copy\">\n is not clear your problem, would you mind to paste an example code?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "theKidOfArcrania",
            "text": "<html><body><span class=\"comment-copy\">\n Added an example code\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Scott",
            "text": "<html><body><span class=\"comment-copy\">\n Unable to add a comment, but here is a link to the\n <a href=\"https://github.com/NationalSecurityAgency/ghidra/issues/305\" rel=\"nofollow noreferrer\">\n  GitHub Issue\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  EDIT: I misread the question. The solution I provided only shows how structures can be manually added. There does not appear to be a way in Ghidra to import a struct by text blob.\n </p>\n <hr/>\n <p>\n  Yes.\n </p>\n <p>\n  To add a structure in Ghidra, you have to go to the Data Type Manager - for me it's the third frame on the left-most vertical pane.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/35DM8.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/35DM8.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "SW_user2953243",
            "time": "Mar 9, 2019 at 16:23",
            "is_accepted": false,
            "comments": [
                {
                    "user": "theKidOfArcrania",
                    "text": "<span class=\"comment-copy\">Hmm yeah I guess that's what I figure... do you think ghidra would be implementing something like this in the future for c++ structs?</span>",
                    "time": null
                }
            ]
        }
    ]
}