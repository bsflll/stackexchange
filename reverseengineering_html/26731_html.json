{
    "title": "usercalls in old Win32 game",
    "link": "https://reverseengineering.stackexchange.com/questions/26731/usercalls-in-old-win32-game",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am currently analyzing an old Win32 game from 1999 that was probably compiled with Visual C++ 6 and was programmed in C.\n </p>\n <p>\n  I noticed that there are almost no usercalls (i.e. calls that use registers to pass arguments) except for calls in the statically linked CRT library. Is this a reasonable assumption for a game of this age?\n </p>\n <p>\n  To identify registers used as function paramters I used an algorithm similar to the one described in\n  <a href=\"https://www.hex-rays.com/blog/automated-binary-analysis-woes/\" rel=\"nofollow noreferrer\">\n   this IDA blog post\n  </a>\n  . The algorithm identifies PUSH/POP pairs and searches for registers usages before any assignment except in the PUSH/POP pairs.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "69",
    "tags": [
        "binary-analysis",
        "register",
        "callstack",
        "arguments"
    ],
    "user": "tly",
    "time": "Jan 8, 2021 at 16:27",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Yes, this sounds perfectly normal. If the program did not use C++, you won't see thiscall with usage of\n  <code>\n   ecx\n  </code>\n  but just standard stdcall or cdecl which use only stack for passing arguments.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Jan 9, 2021 at 3:50",
            "is_accepted": true,
            "comments": []
        }
    ]
}