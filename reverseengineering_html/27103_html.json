{
    "title": "Changing page permissions at runtime under a debugger",
    "link": "https://reverseengineering.stackexchange.com/questions/27103/changing-page-permissions-at-runtime-under-a-debugger",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Does x64dbg or another debugger provide a way to change the page permissions for all mapped pages for a given section at runtime? Perhaps via a plugin?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 2,
    "views": "678",
    "tags": [
        "debuggers",
        "x64dbg"
    ],
    "user": "0-0",
    "time": "Feb 25, 2021 at 18:21",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can do it in IDA by calling\n  <code>\n   VirtualProtect\n  </code>\n  in the process' context with Appcall. From\n  <a href=\"https://www.hex-rays.com/blog/practical-appcall-examples/\" rel=\"nofollow noreferrer\">\n   Practical Appcall examples\n  </a>\n  :\n </p>\n <blockquote>\n  <p>\n   In the following example we will change the PE header page protection\nto execute/read/write (normally it is read-only):\n  </p>\n  <pre><code>virtprot = Appcall.proto(\"kernel32_VirtualProtect\",\n  \"BOOL __stdcall VirtualProtect(LPVOID addr, DWORD sz, DWORD newprot, PDWORD oldprot);\")\nr = virtprot(0x400000, 0x1000, Appcall.Consts.PAGE_EXECUTE_READWRITE, Appcall.byref(0));\nprint \"VirtualProtect returned:\", r\nRefreshDebuggerMemory()\n</code></pre>\n </blockquote>\n <p>\n  Possibly other debuggers can do something similar (e.g.\n  <a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/-call--call-function-\" rel=\"nofollow noreferrer\">\n   WinDbg has\n   <code>\n    .call\n   </code>\n  </a>\n  )\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Igor Skochinsky",
            "time": "Feb 25, 2021 at 20:05",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Benni",
                    "text": "<span class=\"comment-copy\">IDA Free does not have Python support. Can this be done in IDC?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  From the x64dbg Memory Map tab you can right click a mapped section and select Set Page Memory Rights from the context menu.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/LxiCn.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Section Memory Context Menu\" src=\"https://i.sstatic.net/LxiCn.png\"/>\n  </a>\n </p>\n <p>\n  From there, you can control the access for each page in that section.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/TZcYk.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Page Permissions\" src=\"https://i.sstatic.net/TZcYk.png\"/>\n  </a>\n </p>\n <p>\n  Igor's answer offers a lot of flexibility though, and Im not sure if x64dbg provides an API for this in their plugin/scripting interface.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "0-0",
            "time": "Mar 2, 2021 at 17:00",
            "is_accepted": false,
            "comments": []
        }
    ]
}