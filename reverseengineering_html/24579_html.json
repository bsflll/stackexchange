{
    "title": "Decoding unknown logfile format",
    "link": "https://reverseengineering.stackexchange.com/questions/24579/decoding-unknown-logfile-format",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have logfiles in the following format without any documentation:\n </p>\n <pre><code>to 12.03.2020 08:04:15 < '7\"\\05\\04\\02\\16\\F6\\C6\\D6\"'#0D\nto 12.03.2020 08:04:15 > '7S\"\\05\\04\\00\\02\\00\\01\\91\\8E\"'#0D\nto 12.03.2020 08:04:15 < '7\"\\05\\04\\02 \\22\\D1)\"'#0D\nto 12.03.2020 08:04:15 > '7S\"\\05\\04\\00\\05\\00\\01\\20\\4F\"'#0D\nto 12.03.2020 08:04:16 < '7\"\\05\\04\\02\\19e\\83K\"'#0D\nto 12.03.2020 08:04:16 > '7S\"\\05\\04\\00\\07\\00\\01\\81\\8F\"'#0D\nto 12.03.2020 08:04:16 < '7\"\\05\\04\\02\\00z\\C9\\13\"'#0D\nto 12.03.2020 08:04:16 > '7S\"\\01\\03\\00\\00\\00\\05\\85\\C9\"'#0D\nto 12.03.2020 08:04:16 < '7\"\\01\\03\\0A\\00\\00\\05\\DC\\00\"'#0D\nto 12.03.2020 08:04:16 < '7\"\\02\\00\\00\\00\\01AD\"'#0D\nto 12.03.2020 08:04:16 > '7S\"\\01\\01\\00\\00\\00\\10\\3D\\C6\"'#0D\nto 12.03.2020 08:04:16 < '7\"\\01\\01\\02\\00\\03\\F9\\FD\"'#0D\nto 12.03.2020 08:04:16 > '7S\"\\05\\04\\00\\00\\00\\01\\30\\4E\"'#0D\nto 12.03.2020 08:04:16 < '7\"\\05\\04\\02\\17\\03\\07\\01\"'#0D\nto 12.03.2020 08:04:16 > '7S\"\\05\\04\\00\\01\\00\\01\\61\\8E\"'#0D\nto 12.03.2020 08:04:16 < '7\"\\05\\04\\02\\16\\F6\\C6\\D6\"'#0D\nto 12.03.2020 08:04:16 > '7S\"\\05\\04\\00\\02\\00\\01\\91\\8E\"'#0D\n</code></pre>\n <p>\n  This snippet from a log file probably represents the current state and operations of our manufacturing machine. Is there something meaningful in the codes to the right of the time stamp?\n </p>\n <p>\n  Some observations:\n </p>\n <ul>\n  <li>\n   \"to\" corresponds to \"thu\" (for Thursday) in our language.\n  </li>\n  <li>\n   It is not hexidecimal since it occasionally contains \"83K\", Gs, etc. And \"\\00\" corresponds to \"null\" in ascii.\n  </li>\n  <li>\n   The log code starts with\n   <code>\n    < '7\"\n   </code>\n   or\n   <code>\n    > '7S\"\n   </code>\n   and ends with\n   <code>\n    \"'#0D\n   </code>\n   on all lines. Except occasionally saying something like\n   <code>\n    > '3V1018'#0D\n   </code>\n  </li>\n  <li>\n   The space in the third line above is an unknown character, displaying as a rectangle in Notepad++.\n  </li>\n </ul>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "117",
    "tags": [
        "file-format"
    ],
    "user": "Jonas Lindeløv",
    "time": "Mar 31, 2020 at 10:22",
    "comments": [
        {
            "user": "Biswapriyo",
            "text": "<html><body><span class=\"comment-copy\">\n Try to focus on the program that reads the log file instead of the log file itself.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jonas Lindeløv",
            "text": "<html><body><span class=\"comment-copy\">\n @Biswapriyo, That's unfortunately not an option since the program is binary proprietary closed source with no support.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n @JonasLindeløv if you have the binary, you can reverse engineer it and try to figure out what the data means\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It looks to be MODBUS messages. The bytes at the end are a CRC in exactly the format MODBUS uses. See\n  <a href=\"http://modbus.org/docs/PI_MBUS_300.pdf\" rel=\"nofollow noreferrer\">\n   Modicon Modbus Protocol Reference Guide\n  </a>\n </p>\n <p>\n  The backslash sequences like \"\\F6\" are hexadecimal escapes. Other characters are literal ASCII.\n </p>\n <p>\n  Here is a Python script that decodes the data and calculates the CRC (which you will see matches):\n </p>\n <pre><code>import re\nimport crcmod.predefined\n\nstuff = r'''\nto 12.03.2020 08:04:15 < '7\"\\05\\04\\02\\16\\F6\\C6\\D6\"'#0D\nto 12.03.2020 08:04:15 > '7S\"\\05\\04\\00\\02\\00\\01\\91\\8E\"'#0D\nto 12.03.2020 08:04:15 < '7\"\\05\\04\\02 \\22\\D1)\"'#0D\nto 12.03.2020 08:04:15 > '7S\"\\05\\04\\00\\05\\00\\01\\20\\4F\"'#0D\nto 12.03.2020 08:04:16 < '7\"\\05\\04\\02\\19e\\83K\"'#0D\nto 12.03.2020 08:04:16 > '7S\"\\05\\04\\00\\07\\00\\01\\81\\8F\"'#0D\nto 12.03.2020 08:04:16 < '7\"\\05\\04\\02\\00z\\C9\\13\"'#0D\nto 12.03.2020 08:04:16 > '7S\"\\01\\03\\00\\00\\00\\05\\85\\C9\"'#0D\nto 12.03.2020 08:04:16 < '7\"\\01\\03\\0A\\00\\00\\05\\DC\\00\"'#0D\nto 12.03.2020 08:04:16 < '7\"\\02\\00\\00\\00\\01AD\"'#0D\nto 12.03.2020 08:04:16 > '7S\"\\01\\01\\00\\00\\00\\10\\3D\\C6\"'#0D\nto 12.03.2020 08:04:16 < '7\"\\01\\01\\02\\00\\03\\F9\\FD\"'#0D\nto 12.03.2020 08:04:16 > '7S\"\\05\\04\\00\\00\\00\\01\\30\\4E\"'#0D\nto 12.03.2020 08:04:16 < '7\"\\05\\04\\02\\17\\03\\07\\01\"'#0D\nto 12.03.2020 08:04:16 > '7S\"\\05\\04\\00\\01\\00\\01\\61\\8E\"'#0D\nto 12.03.2020 08:04:16 < '7\"\\05\\04\\02\\16\\F6\\C6\\D6\"'#0D\nto 12.03.2020 08:04:16 > '7S\"\\05\\04\\00\\02\\00\\01\\91\\8E\"'#0D\n'''\n\nmodbus_crc = crcmod.predefined.mkCrcFun('modbus')\n\nfor line in stuff.splitlines(keepends=False):\n    if not line:\n        continue\n    data = line.split('\"', 1)[1][:-5].encode('ASCII')\n    data = re.sub(br'\\\\(..)', lambda m: bytes([int(m.group(1), 16)]), data)\n    print(format(modbus_crc(data[:-2]), '04x'), data.hex())\n</code></pre>\n <p>\n  Output:\n </p>\n <pre><code>d6c6 05040216f6c6d6\n8e91 050400020001918e\n29d1 0504022022d129\n4f20 050400050001204f\n4b83 0504021965834b\n8f81 050400070001818f\n13c9 050402007ac913\nc985 01030000000585c9\n1186 01030a000005dc00\n009c 02000000014144\nc63d 0101000000103dc6\nfdf9 0101020003f9fd\n4e30 050400000001304e\n0107 05040217030701\n8e61 050400010001618e\nd6c6 05040216f6c6d6\n8e91 050400020001918e\n</code></pre>\n <p>\n  I'm not sure about the other content.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Ray B",
            "time": "Mar 31, 2020 at 20:50",
            "is_accepted": true,
            "comments": []
        }
    ]
}