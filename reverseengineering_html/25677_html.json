{
    "title": "ASLR in Linux Vs Windows",
    "link": "https://reverseengineering.stackexchange.com/questions/25677/aslr-in-linux-vs-windows",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am quite new in binary exploitation. I am doing a lot of beginners exercise here. I am confused about ASLR. I tried some binary exploitation thing in Linux. It was recommended that I should stop ASLR in Linux before analyzing the binary.\nit is the command for that -->\n  <code>\n   echo 0 > /proc/sys/kernel/randomize_va_space\n  </code>\n  Am I right here? am I turning off my ASLR (randomizing stack addresses)?\n </p>\n <p>\n  But When I did the Windows 10 binary exploitation(vulnserver). I had to put my payload into stack address. And I noticed that the stack address (\n  <code>\n   jmp esp\n  </code>\n  ) was constant, not changing.\nIs ASLR works differently in various OS?\nI don't know If I am asking a write question. please tell me if you know.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 2,
    "views": "392",
    "tags": [
        "disassembly",
        "windows",
        "linux",
        "stack"
    ],
    "user": "lucky thandel",
    "time": "Aug 15, 2020 at 10:49",
    "comments": [
        {
            "user": "ifexploit",
            "text": "<html><body><span class=\"comment-copy\">\n Did you check if the binary has /DYNAMICBASE property set? If it is not set then it means that REBASE was opted out while compiling the program itself i.e. ASLR is not being used.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "lucky thandel",
            "text": "<html><body><span class=\"comment-copy\">\n how do I check it in windows?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  By using\n  <a href=\"https://blog.didierstevens.com/2010/10/17/setdllcharacteristics/\" rel=\"nofollow noreferrer\">\n   this tool\n  </a>\n  from Didier Stevens you've been able to check/set/unset DEP/ASLR characteristics of your file.\nCheck the file like this:\n </p>\n <pre><code>setdllcharacteristics.exe yourfile.exe\n</code></pre>\n <p>\n  If the output said\n  <code>\n   DYNAMIC_BASE    = 0\n  </code>\n  then you can use\n  <code>\n   +d\n  </code>\n  option to enable\n  <code>\n   DYNAMICBASE\n  </code>\n  of your file:\n </p>\n <pre><code>setdllcharacteristics.exe +d yourfile.exe\n</code></pre>\n <p>\n  And you can use\n  <code>\n   -d\n  </code>\n  to unset again.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Sina",
            "time": "Aug 18, 2020 at 16:41",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <ol>\n  <li>\n   Yes, the command\n   <code>\n    echo 0 > /proc/sys/kernel/randomize_va_space\n   </code>\n   disables ASLR. From\n   <a href=\"https://www.networkworld.com/article/3331199/what-does-aslr-do-for-linux.html\" rel=\"nofollow noreferrer\">\n    here\n   </a>\n   :\n  </li>\n </ol>\n <blockquote>\n  <p>\n   The value shown will be one of the following:\n  </p>\n  <p>\n   0 = Disabled\n  </p>\n  <p>\n   1 = Conservative Randomization\n  </p>\n  <p>\n   2 = Full Randomization\n  </p>\n </blockquote>\n <ol start=\"2\">\n  <li>\n   There are several differences in the implementation of ASLR between Windows and Linux, you can search for them online, but to your question: In Windows, an EXE or a DLL can be compiled with or without ASLR (same goes for DEP - Data Execution Prevention).\nFor the purpose of exploitation, we search for code without protection (you can find it with WinDBG using\n   <a href=\"https://www.oreilly.com/library/view/metasploit-revealed-secrets/9781788624596/9b9ac2e7-127a-4f3b-80c6-7e9b8149573f.xhtml\" rel=\"nofollow noreferrer\">\n    mona modules\n   </a>\n   or\n   <a href=\"https://github.com/d0c-s4vage/narly/blob/master/narly/ReadMe.txt\" rel=\"nofollow noreferrer\">\n    narly\n   </a>\n   , for example), in order to try to jump to it and run a code of our choice.\nTherefore, what you have probably seen is a jump to such a code without ASLR, and it's fine that the address is fixed (no ASLR!). If you have control over the stack, the\n   <code>\n    jmp esp\n   </code>\n   command jumps to the stack, and there you can put whatever code you want.\n  </li>\n </ol>\n</div>\n</body></html>",
            "votes": "1",
            "user": "alond22",
            "time": "May 20, 2021 at 18:56",
            "is_accepted": false,
            "comments": []
        }
    ]
}