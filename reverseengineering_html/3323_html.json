{
    "title": "How to prevent \"upx -d\" on an UPX packed executable?",
    "link": "https://reverseengineering.stackexchange.com/questions/3323/how-to-prevent-upx-d-on-an-upx-packed-executable",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I recently read a\n  <a href=\"https://twitter.com/corkami/status/417604202236350464/photo/1\" rel=\"noreferrer\">\n   tweet\n  </a>\n  from\n  <a href=\"https://reverseengineering.stackexchange.com/users/188/ange\">\n   Ange\n  </a>\n  about a technique to fool UPX when the option\n  <code>\n   -d\n  </code>\n  (decompress) is called.\n </p>\n <p>\n  I would like to know how this is working and, what are the technique to prevent an UPX packed executable to be decompressed through\n  <code>\n   upx -d\n  </code>\n  (if possible for, both, Linux and Windows).\n </p>\n</div>\n</body></html>",
    "votes": "13",
    "answers": 2,
    "views": "35k",
    "tags": [
        "packers",
        "upx"
    ],
    "user": "perror",
    "time": "Apr 13, 2017 at 12:49",
    "comments": [
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n Of course @blabb's answer prevents\n <code>\n  upx -d\n </code>\n but you should be aware that Generic Unpackers such as RL Depacker can still unpack such files.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jessie Lesbian",
            "text": "<html><body><span class=\"comment-copy\">\n If you want to, protect your UPX output with Denuvo/VMProtect/enigma protector/anything of this nature and no-one can decompress it.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jane",
            "text": "<html><body><span class=\"comment-copy\">\n @JessieLesbian not to be picky but \"no-one can decompress it\" is (\n <b>\n  simply\n </b>\n ) not really true. It's like saying \"No one can break into this system, it's 100% secure.\" same thing here, \"No one can decompress this malware, it's 100% secure.\"\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  UPX doesn't check the unpacking stub's integrity, and just blindly restores the data from the stored information, not from the actual execution.\n </p>\n <p>\n  Since UPX is open-source and documented (\n  <a href=\"https://corkami.googlecode.com/files/upx-idb.zip\">\n   commented IDB\n  </a>\n  ), it's easy to modify its and actually do something extra (anti-debug, patch, decryption, jump to real entrypoint...) that will be lost when 'upx -d' is used.\n </p>\n <p>\n  Such UPX hack is not uncommon in malware.\n </p>\n</div>\n</body></html>",
            "votes": "15",
            "user": "Ange",
            "time": "Dec 30, 2013 at 11:10",
            "is_accepted": true,
            "comments": [
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">If I get it right, it only requires to modify the checksum of the packed executable... Or did I misunderstood something ?</span>",
                    "time": null
                },
                {
                    "user": "Tiago",
                    "text": "<span class=\"comment-copy\">@perror did you figure this out?</span>",
                    "time": null
                },
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">I appeared to be true (at the time I tested it). So, modifying the checksum of the executable won't prevent to execute it, but will render the decompression a bit more difficult (because you need to bypass this checksum verification before applying the decompression).</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Fooling\n  <code>\n   upx -d\n  </code>\n  can be as simple as one byte patch here is a small sample.\n </p>\n <p>\n  Pack the MS-Windows standard\n  <code>\n   calc.exe\n  </code>\n  , hexedit one byte and result is an undepackable executable with\n  <code>\n   upx -d\n  </code>\n  (this is\n  <strong>\n   not\n  </strong>\n  <code>\n   corrupting\n  </code>\n  the exe, the exe will run and can be unpacked manually). Only unpacking with the\n  <code>\n   -d\n  </code>\n  switch wont work.\n </p>\n <ol>\n  <li>\n   <p>\n    create a new folder\n    <code>\n     foolupx\n    </code>\n    :\n   </p>\n   <pre><code> foolupx:\\>md foolupx\n</code></pre>\n  </li>\n  <li>\n   <p>\n    copy\n    <code>\n     calc.exe\n    </code>\n    to the newly created folder:\n   </p>\n   <pre><code> foolupx:\\>copy c:\\WINDOWS\\system32\\calc.exe foolupx\\upxedcalc.exe\n     1 file(s) copied.\n</code></pre>\n  </li>\n  <li>\n   <p>\n    pack the renamed\n    <code>\n     calc.exe\n    </code>\n    :\n   </p>\n   <pre><code> foolupx:\\>upx .\\foolupx\\upxedcalc.exe\n Ultimate Packer for eXecutables\n Copyright (C) 1996 - 2011\n UPX 3.08w       Markus Oberhumer, Laszlo Molnar & John Reiser   Dec 12th 2011\n\n     File size         Ratio      Format      Name\n    --------------------   ------   -----------   -----------\n      114688 ->     56832   49.55%    win32/pe     upxedcalc.exe\n\n Packed 1 file.\n</code></pre>\n  </li>\n  <li>\n   <p>\n    Create a duplicate of the packed\n    <code>\n     calc.exe\n    </code>\n    for hexediting and compare the files. The difference is one byte in the PE header section named\n    <code>\n     UPX0\n    </code>\n    changed to\n    <code>\n     BPX0\n    </code>\n    :\n   </p>\n   <pre><code> foolupx:\\>copy .\\foolupx\\upxedcalc.exe .\\foolupx\\modupxedcalc.exe\n     1 file(s) copied.\n\n foolupx:\\>fc .\\foolupx\\upxedcalc.exe .\\foolupx\\modupxedcalc.exe\n Comparing files .\\FOOLUPX\\upxedcalc.exe and .\\FOOLUPX\\MODUPXEDCALC.EXE\n 000001E8: 55 42\n</code></pre>\n  </li>\n  <li>\n   <p>\n    Uncompress both files with the\n    <code>\n     -d\n    </code>\n    switch. One will be unpacked, the other will not be unpacked:\n   </p>\n   <pre><code> foolupx:\\>upx -d .\\foolupx\\modupxedcalc.exe\n Ultimate Packer for eXecutables\n Copyright (C) 1996 - 2011\n UPX 3.08w       Markus Oberhumer, Laszlo Molnar & John Reiser   Dec 12th 2011\n\n     File size         Ratio      Format      Name\n    --------------------   ------   -----------   -----------\n     upx: .\\foolupx\\modupxedcalc.exe: CantUnpackException: file is modified/hacked/protected; take care!!!\n\n Unpacked 0 files.\n\n foolupx:\\>upx -d .\\foolupx\\upxedcalc.exe\n Ultimate Packer for eXecutables\n Copyright (C) 1996 - 2011\n UPX 3.08w       Markus Oberhumer, Laszlo Molnar & John Reiser   Dec 12th 2011\n\n       File size         Ratio      Format      Name\n  --------------------   ------   -----------   -----------\n  114688 <-     56832   49.55%    win32/pe     upxedcalc.exe\n\n Unpacked 1 file.\n\n foolupx:\\>\n</code></pre>\n  </li>\n </ol>\n</div>\n</body></html>",
            "votes": "13",
            "user": "Community",
            "time": "Jun 29, 2023 at 9:42",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Jane",
                    "text": "<span class=\"comment-copy\"><b>first of all - great answer!</b> - Just have to ask; is the one-byte-patch arbitrary chosen in this answer or can it be more? e.g I thought of changing UPX's \"signature\" (the text \"UPX\" which is very common in UPX-packed exe's), to something like, DTK (<code>randomly made up</code>)  or would that corrupt it ? (as in running it and changing it back, and then <code>upx -d</code>)</span>",
                    "time": null
                },
                {
                    "user": "Jane",
                    "text": "<span class=\"comment-copy\">adding another comment just to point: if I can improve my comment just point it out! :) Wishes from Sweden!</span>",
                    "time": null
                }
            ]
        }
    ]
}