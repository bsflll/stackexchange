{
    "title": "How to get the PID of the a thread's creator (not owner, not host)",
    "link": "https://reverseengineering.stackexchange.com/questions/3589/how-to-get-the-pid-of-the-a-threads-creator-not-owner-not-host",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The\n  <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms686735%28v=vs.85%29.aspx\" rel=\"nofollow\">\n   <code>\n    THREADENTRY32\n   </code>\n   structure\n  </a>\n  contains a member called\n  <code>\n   th32OwnerProcessID\n  </code>\n  , which is described as:\n </p>\n <blockquote>\n  <p>\n   The identifier of the process that created the thread.\n  </p>\n </blockquote>\n <p>\n  I'm not sure if I understand how the\n  <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms682437%28v=vs.85%29.aspx\" rel=\"nofollow\">\n   <code>\n    CreateRemoteThread\n   </code>\n   function\n  </a>\n  works. However, I would expect that the thread created by\n  <em>\n   Process A\n  </em>\n  via\n  <code>\n   CreateRemoteThread\n  </code>\n  , in the address space of\n  <em>\n   Process B\n  </em>\n  , would have the\n  <code>\n   th32OwnerProcessID\n  </code>\n  equal to the ID of\n  <em>\n   Process A\n  </em>\n  (if we were to take the description of the\n  <code>\n   th32OwnerProcessID\n  </code>\n  as quoted above). I was a bit surprised to see that it is actually equal to the ID of\n  <em>\n   Process B\n  </em>\n  .\n </p>\n <p>\n  Could someone please explain why this is so? And how to get the ID of the actual creator of the thread, i.e.\n  <em>\n   Process A\n  </em>\n  in my example?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "539",
    "tags": [
        "winapi",
        "thread",
        "multi-process"
    ],
    "user": "Benny",
    "time": "Feb 2, 2014 at 21:52",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  That should really say \"the identifier of the process that is hosting the thread\", since that's what it is.  The snapshot that is created by the Toolhelp APIs is system-wide, so in order to understand where a thread lives, you need its process ID.  That would be meaningless if it said process A, if process A created a remote thread in process B and then exited.  In that case, the PID belonging to process A at the time of creation might end up being reused by the next process that is created, and obviously be completely unrelated to the thread.\n </p>\n <p>\n  Consider this a different way: creating a remote thread is merely making a request to the remote process to create the thread, so the remote process is the one who creates thread.  There is no concept of who made the request.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "peter ferrie",
            "time": "Feb 3, 2014 at 19:25",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Benny",
                    "text": "<span class=\"comment-copy\">I totally agree that the description of th32OwnerProcessID should actually be \"the identifier of the process that is hosting the thread\" as you said Peter Ferrie. However, I'm really interested if it is possible to get the ID of a threads' creator and how to do it.</span>",
                    "time": null
                },
                {
                    "user": "peter ferrie",
                    "text": "<span class=\"comment-copy\">@Benny, I just edited my answer to resolve your query - there isn't a way to do that.</span>",
                    "time": null
                },
                {
                    "user": "Benny",
                    "text": "<span class=\"comment-copy\">OK Peter, since I haven't been able to find a solution for my question either, I'll mark your answer as the solution. Thanks!</span>",
                    "time": null
                },
                {
                    "user": "Benny",
                    "text": "<span class=\"comment-copy\">does your answer also imply that a thread created via CreateRemoteThread by a Medium integrity process, inside the address space of a Low integrity process, will be a Low integrity thread?</span>",
                    "time": null
                },
                {
                    "user": "peter ferrie",
                    "text": "<span class=\"comment-copy\">I haven't checked, but that should be so, otherwise it creates an elevation of privileges condition, if the low integrity process takes control of the medium integrity thread.</span>",
                    "time": null
                }
            ]
        }
    ]
}