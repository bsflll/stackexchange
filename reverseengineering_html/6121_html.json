{
    "title": "IDA Pro Renaming Imports",
    "link": "https://reverseengineering.stackexchange.com/questions/6121/ida-pro-renaming-imports",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This PE file destroys its import address table. However, all the function addresses are in this\n  <code>\n   _rdata\n  </code>\n  segment here:\n </p>\n <p>\n  <img alt=\"rdata_segment\" src=\"https://i.sstatic.net/AKsmK.png\"/>\n </p>\n <p>\n  Any straight forward way to rename these functions?\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 3,
    "views": "3k",
    "tags": [
        "ida",
        "ida-plugin",
        "x86-64",
        "idapro-sdk",
        "iat"
    ],
    "user": "IChooseYou",
    "time": "Aug 25, 2014 at 18:22",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Before you dump the process's memory to disk, use a tool like\n  <a href=\"http://www.woodmann.com/collaborative/tools/index.php/Scylla\" rel=\"nofollow noreferrer\">\n   Scylla\n  </a>\n  to reconstruct the Import Table.\n </p>\n <p>\n  <img alt=\"Scylla\" src=\"https://i.sstatic.net/y9T7Z.png\"/>\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Jason Geffner",
            "time": "Aug 25, 2014 at 17:36",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  While in debugger, select the import table and run\n  <code>\n   idc\\renimp.idc\n  </code>\n  .\n </p>\n <p>\n  Top comment from the file:\n </p>\n <pre><code>/*\n   Rename imports.\n\n   This script renames entries of a dynamically built import table.\n   For example, from a table like this:\n\n      dd offset ntdll_NtPowerInformation\n      dd offset ntdll_NtInitiatePowerAction\n      dd offset ntdll_NtSetThreadExecutionState\n      dd offset ntdll_NtRequestWakeupLatency\n      dd offset ntdll_NtGetDevicePowerState\n      dd offset ntdll_NtIsSystemResumeAutomatic\n      dd offset ntdll_NtRequestDeviceWakeup\n      dd offset ntdll_NtCancelDeviceWakeupRequest\n      dd offset ntdll_RtlQueryRegistryValues\n\n\n   it will create a table like this:\n\n      NtPowerInformation dd offset ntdll_NtPowerInformation\n      NtInitiatePowerAction dd offset ntdll_NtInitiatePowerAction\n      NtSetThreadExecutionState dd offset ntdll_NtSetThreadExecutionState\n      NtRequestWakeupLatency dd offset ntdll_NtRequestWakeupLatency\n      NtGetDevicePowerState dd offset ntdll_NtGetDevicePowerState\n      NtIsSystemResumeAutomatic dd offset ntdll_NtIsSystemResumeAutomatic\n      NtRequestDeviceWakeup dd offset ntdll_NtRequestDeviceWakeup\n      NtCancelDeviceWakeupRequest dd offset ntdll_NtCancelDeviceWakeupRequest\n      RtlQueryRegistryValues dd offset ntdll_RtlQueryRegistryValues\n\n   Usage: select the import table and run the script.\n\n   Known problems: if the dll name contains an underscore, the function\n   names might be incorrect. Special care is taken for the ws2_32.dll but\n   other dlls will have wrong function names.\n\n*/\n</code></pre>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Aug 25, 2014 at 17:47",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You're most likely using a process dump.  those addresses would depend on the Windows version and service pack.  If you had a chance to run it in a VM, try volatility.  do a procdump then impscan.  impscan can give you an idc that renames those addresses to their respective API names.\n </p>\n <p>\n  this method works well even with non-PE injected codes.\n </p>\n <p>\n  <a href=\"https://github.com/volatilityfoundation/volatility/wiki/Command%20Reference%20Mal#impscan\" rel=\"nofollow noreferrer\">\n   https://github.com/volatilityfoundation/volatility/wiki/Command%20Reference%20Mal#impscan\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "user19438",
            "time": "Mar 9, 2017 at 1:21",
            "is_accepted": false,
            "comments": []
        }
    ]
}