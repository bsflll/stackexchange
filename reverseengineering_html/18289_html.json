{
    "title": "Disassemble/decompile arbitrary JVM bytecode",
    "link": "https://reverseengineering.stackexchange.com/questions/18289/disassemble-decompile-arbitrary-jvm-bytecode",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have an obfuscated java binary which does runtime code injection using java reflection like this.\n </p>\n <pre><code>Object o = \"a long string\";\n((Method)o).invoke(params..);\n</code></pre>\n <p>\n  (If I write this in a java file, it would compile fine, but I have to edit the disassembly of the class file and remove checkcast instruction to make it run.)\n </p>\n <p>\n  What I want to do is disassemble/decompile the content of the long string as JVM bytecode. Since this is not a full class, but only a method, I can't get any of the available java reverse engineering tools to work with it.\n </p>\n <p>\n  I'm now trying to inject this code into a separate class at runtime and then dump it out of memory. But I'm not sure if it's possible to do. even using a javaagent.\n </p>\n <p>\n  Is there any other easy way to accomplish what I'm trying to do?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "552",
    "tags": [
        "disassembly",
        "decompilation",
        "java",
        "byte-code"
    ],
    "user": "Madushan",
    "time": "May 16, 2018 at 15:25",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n could you share a sample? working from an actual example may be more practical\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It doesn't make sense to talk about the \"bytecode for only a method\", because Java bytecode can't run in isolation. The instructions contain references to the constant pool, which is part of the classfile and shared between all methods in the class. The smallest executable unit of bytecode is the classfile.\n </p>\n <p>\n  The question as written doesn't make sense, but if you post the actual data you are dealing with, perhaps we can figure out what is going on.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Antimony",
            "time": "May 17, 2018 at 0:23",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Madushan",
                    "text": "<span class=\"comment-copy\">I didn't want to add code samples because I'm dealing with a commercial software here, I'll try to mock some of the code there and add to the question.</span>",
                    "time": null
                },
                {
                    "user": "Madushan",
                    "text": "<span class=\"comment-copy\">Okay, I went back and looked at the decompiled code again and it looks like I confused the method invocation due to variable name reuse. They are actually invoking a method, not a string. (I'm using two decompilers because some sections of the code does not get decompile in the other)</span>",
                    "time": null
                }
            ]
        }
    ]
}