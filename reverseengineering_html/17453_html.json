{
    "title": "How do you use the Radare debugger with command line arguments (parameters)?",
    "link": "https://reverseengineering.stackexchange.com/questions/17453/how-do-you-use-the-radare-debugger-with-command-line-arguments-parameters",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If I want to debug\n  <code>\n   ls\n  </code>\n  I can run,\n </p>\n <pre><code>radare -d /bin/ls\n</code></pre>\n <p>\n  But, how do I provide an argument or parameter to\n  <code>\n   ls\n  </code>\n  ? Like I would do if I wanted to run\n  <code>\n   radare -d /bin/ls -1\n  </code>\n  . I've tried it like that without quotes, which returns\n </p>\n <blockquote>\n  <p>\n   radare2: invalid option -- '1'\n  </p>\n </blockquote>\n <p>\n  I've also tried quoting the whole thing\n </p>\n <pre><code>radare2 -d \"/bin/ls -1\"\nCould not execvp: No such file or directory\n[w] Cannot open 'dbg:///bin/ls\\ -1' for writing.\n</code></pre>\n <p>\n  <a href=\"https://radare.gitbooks.io/radare2book/content/introduction/basic_debugger_session.html\" rel=\"nofollow noreferrer\">\n   The Radare2book's\n   <em>\n    \"Basic Debugger Session\"\n   </em>\n  </a>\n  says ,\n  <em>\n   \"or you can start a new program by specifying its name and parameters\"\n  </em>\n  , but it's not clear how you specify the parameters.\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 2,
    "views": "6k",
    "tags": [
        "debugging",
        "debuggers",
        "radare2"
    ],
    "user": "Evan Carroll",
    "time": "Feb 13, 2018 at 2:56",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Seems like radare has problems with passing arguments starting with dash (\"-\"). Please consider\n  <a href=\"https://github.com/radare/radare2/issues\" rel=\"noreferrer\">\n   open an issue\n  </a>\n  .\n </p>\n <p>\n  Anyway, you can pass arguments to radare2 debugged program in several ways.\n </p>\n <p>\n  The simplest way is:\n </p>\n <pre><code>r2 -d program arg1 arg2 arg3\n</code></pre>\n <ul>\n  <li>\n   <strong>\n    r2\n   </strong>\n   is an alias for radare2.\n  </li>\n  <li>\n   <strong>\n    -d\n   </strong>\n   is telling radare2 to debug the execuable.\n  </li>\n  <li>\n   <strong>\n    arg1..3\n   </strong>\n   are the arguments passed to the executable by radare2.\n  </li>\n </ul>\n <p>\n  For example:\n </p>\n <pre><code>$ r2 -d echo Hello, World!\nProcess with PID 4755 started...\n= attach 4755 4755\nbin.baddr 0x00400000\nUsing 0x400000\nasm.bits 64\n -- You haxor! Me jane?\n\n[0x7f9b1b000c30]> dc\nHello, World!\n</code></pre>\n <p>\n  Another way is using the\n  <code>\n   ood\n  </code>\n  command inside radare2 shell:\n </p>\n <p>\n  Execute\n  <code>\n   radare2 ./program\n  </code>\n  , then type\n  <code>\n   ood arg1 arg2 arg3\n  </code>\n  . The\n  <code>\n   ood\n  </code>\n  command is used to \"\n  <em>\n   reopen in debugger mode (with args)\n  </em>\n  \".\n </p>\n <pre><code>$ r2 /bin/ls\n -- Use V! to enter into the visual panels mode (dwm style)\n\n[0x004049a0]> doo -la\nProcess with PID 4757 started...\nFile dbg:///bin/ls  -la reopened in read-write mode\n= attach 4757 4757\n4757\n\n[0x7f5f36600c30]> dc\ntotal 206\ndrwxrwxrwx 0 root root   512 Feb 13 04:25 .\ndrwxrwxrwx 0 root root   512 Jan 16 05:30 ..\n</code></pre>\n <p>\n  You can also call\n  <code>\n   ood\n  </code>\n  with dynamic parameters using backticks. For example we want debug our program using the content from a file on our system as an arguments:\n </p>\n <pre><code>ood `!cat file.txt`\n</code></pre>\n <p>\n  Say file.txt content is 'foo bar' so this equivalent to executing\n  <code>\n   ood foo bar\n  </code>\n </p>\n <ul>\n  <li>\n   <strong>\n    backticks\n   </strong>\n   are used for passing the output of radare2 commands.\n  </li>\n  <li>\n   <strong>\n    !\n   </strong>\n   is running the given command as in system(3).\n  </li>\n </ul>\n <p>\n  Another way to pass arguments to radare2 debugged program is by using\n  <code>\n   rarun2\n  </code>\n  profile files:\n </p>\n <pre><code>$ r2 -R profile.rr2 -d program\n$ cat profile.rr2\n#!/usr/bin/rarun2\narg1=foo\narg2=bar\n</code></pre>\n <ul>\n  <li>\n   <strong>\n    -R\n   </strong>\n   [rarun2]  specify rarun2 profile to load.\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "5",
            "user": "Megabeets",
            "time": "Feb 13, 2018 at 12:43",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Dacav",
                    "text": "<span class=\"comment-copy\">The last bit of this question seems to be wrong (possibly reporting an old behaviour?) I found that the correct way of specifying a profile is via <code>-r</code>, not <code>-R</code>. <code>-R</code> can be used to specify directives without using a file.  In other words: <code>r2 -r profile.rr2 -d program</code></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <h1>\n  <code>\n   rarun2\n  </code>\n </h1>\n <p>\n  This comes under the purview of\n  <code>\n   rarun2\n  </code>\n  which isn't documented in the radare2 book, but instead in\n  <a href=\"https://monosource.gitbooks.io/radare2-explorations/content/intro/debugging.html\" rel=\"nofollow noreferrer\">\n   radare2-explorations\n  </a>\n  . From\n  <code>\n   man rarun2\n  </code>\n </p>\n <blockquote>\n  <p>\n   The\n   <code>\n    rr2\n   </code>\n   (\n   <code>\n    rarun2\n   </code>\n   ) configuration file accepts the following directives, described as key=value entries and comments defined as lines starting with '#'.\n  </p>\n  <p>\n   <code>\n    arg[0-N]\n   </code>\n   set value for argument N passed to the program\n  </p>\n </blockquote>\n <p>\n  So you can run that simply by either creating a profile, or doing this\n </p>\n <pre><code>r2 -R arg0=\"-1\" -d /bin/ls\n</code></pre>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Evan Carroll",
            "time": "Feb 13, 2018 at 3:25",
            "is_accepted": false,
            "comments": []
        }
    ]
}