{
    "title": "What is the difference between step into and step over when debugging?",
    "link": "https://reverseengineering.stackexchange.com/questions/4219/what-is-the-difference-between-step-into-and-step-over-when-debugging",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am using EDB and stepping through the program but I do not even know what the difference in behavior is when doing this.  I feel like this is something I should know if I ever have hope of reverse engineering this program.\n </p>\n</div>\n</body></html>",
    "votes": "11",
    "answers": 1,
    "views": "14k",
    "tags": [
        "ida",
        "disassembly",
        "debuggers",
        "gdb",
        "debugging"
    ],
    "user": null,
    "time": "Apr 30, 2014 at 19:51",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The\n  <code>\n   gdb\n  </code>\n  terms (and commands) are\n  <code>\n   step\n  </code>\n  and\n  <code>\n   next\n  </code>\n  and the difference is that\n  <code>\n   step\n  </code>\n  continues to run until it changes line of source code, while\n  <code>\n   next\n  </code>\n  doesn't trace into a subroutine, but rather skips over it. The\n  <code>\n   stepi\n  </code>\n  and\n  <code>\n   nexti\n  </code>\n  commands are similar but operate at the machine instruction level rather than source code level. Read more in\n  <a href=\"https://sourceware.org/gdb/current/onlinedocs/gdb/Continuing-and-Stepping.html#Continuing-and-Stepping\" rel=\"nofollow noreferrer\">\n   The Fine Manual\n  </a>\n  .\n </p>\n <p>\n  Here's an example that may help clarify.  Let's say you have a simple project with three simple files:\n </p>\n <h2>\n  main.c\n </h2>\n <pre><code>#include \"squareit.h\"\n#include <stdio.h>\n\nint main(void) {\n    int x = 5;\n    printf(\"%d squared is %d\n\", x, squareit(x));\n}\n</code></pre>\n <h2>\n  squareit.h\n </h2>\n <pre><code>#ifndef SQUAREIT_H\n#define SQUAREIT_H\n// return the square of an integer\nint squareit(int x);\n#endif // SQUAREIT_H\n</code></pre>\n <h2>\n  squareit.c\n </h2>\n <pre><code>#include \"squareit.h\"\n\nint squareit(int x) {\n    return x*x;\n}\n</code></pre>\n <p>\n  We compile the program with debugging flags enabled (\n  <code>\n   gcc -g main.c squareit.c -o simple\n  </code>\n  ) and then run\n  <code>\n   gdb simple\n  </code>\n  .  If we are sitting on the\n  <code>\n   printf\n  </code>\n  line and execute\n  <code>\n   step\n  </code>\n  , we will find ourselves in the\n  <code>\n   squareit()\n  </code>\n  function.  If instead at that same point we execute\n  <code>\n   next\n  </code>\n  , the\n  <code>\n   squareit()\n  </code>\n  function and the\n  <code>\n   printf()\n  </code>\n  functions will both execute and we will find ourselves on the last line of\n  <code>\n   main()\n  </code>\n  .\n </p>\n <p>\n  The session follows:\n </p>\n <pre><code>(gdb) b main\nBreakpoint 1 at 0x40113d: file ./main.c, line 5.\n(gdb) run\nStarting program: ./simple \n\nBreakpoint 1, main () at ./main.c:5\n5       int x = 5;\n(gdb) step\n6       printf(\"%d squared is %d\n\", x, squareit(x));\n(gdb) s\nsquareit (x=5) at ./squareit.c:4\n4       return x*x;\n(gdb) s\n5   }\n(gdb) s\n5 squared is 25\nmain () at ./main.c:7\n7   }\n(gdb) r\nThe program being debugged has been started already.\nStart it from the beginning? (y or n) y\nStarting program: ./simple \n\nBreakpoint 1, main () at ./main.c:5\n5       int x = 5;\n(gdb) s\n6       printf(\"%d squared is %d\n\", x, squareit(x));\n(gdb) next\n5 squared is 25\n7   }\n</code></pre>\n <p>\n  The\n  <code>\n   gdb\n  </code>\n  commands used here are\n  <code>\n   b\n  </code>\n  to set a breakpoint,\n  <code>\n   s\n  </code>\n  which is an alias of\n  <code>\n   step\n  </code>\n  ,\n  <code>\n   next\n  </code>\n  (has an alias of\n  <code>\n   n\n  </code>\n  ) and\n  <code>\n   run\n  </code>\n  (has an alias of\n  <code>\n   r\n  </code>\n  ).\n </p>\n</div>\n</body></html>",
            "votes": "11",
            "user": "Edward",
            "time": "Mar 3, 2021 at 14:15",
            "is_accepted": true,
            "comments": []
        }
    ]
}