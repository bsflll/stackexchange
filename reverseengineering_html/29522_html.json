{
    "title": "Find all x-ref with specific argument with IdaPython",
    "link": "https://reverseengineering.stackexchange.com/questions/29522/find-all-x-ref-with-specific-argument-with-idapython",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a function at\n  <code>\n   0xabcd\n  </code>\n  that is called a few times like\n  <code>\n   Func(1,2,3)\n  </code>\n  and\n  <code>\n   Func(4,4,5)\n  </code>\n  .\n </p>\n <p>\n  I want to find all the references where the third argument is\n  <code>\n   5\n  </code>\n  .\n </p>\n <pre><code>import idautils\nfor f in list(idautils.XrefsTo(0xabcd)):\n</code></pre>\n <p>\n  How can I get the third argument from all the x-ref with IDAPython?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "377",
    "tags": [
        "ida",
        "idapython"
    ],
    "user": "vtable",
    "time": "Dec 12, 2021 at 8:28",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As currently stated, there's no simple solution to such a general problem.\n </p>\n <p>\n  <a href=\"https://en.wikipedia.org/wiki/Static_program_analysis\" rel=\"nofollow noreferrer\">\n   Static analysis\n  </a>\n  is quite a complex subject and there are no generic solutions that are available out of the box.\n </p>\n <p>\n  A few basic examples of why this may be difficult are these:\n </p>\n <ol>\n  <li>\n   <p>\n    Consider the case where the third argument to\n    <code>\n     Func\n    </code>\n    is a\n    <em>\n     user supplied input\n    </em>\n    . It is therefore\n    <em>\n     impossible\n    </em>\n    to know the value statically.\n   </p>\n  </li>\n  <li>\n   <p>\n    Moreover, a value may be derived from other external sources (the OS, the internet, etc).\n   </p>\n  </li>\n  <li>\n   <p>\n    Even when limiting to static programs, the code manipulating the variable before passing it on to\n    <code>\n     Func\n    </code>\n    may be complex and difficult to follow.\n   </p>\n  </li>\n </ol>\n <p>\n  A\n  <em>\n   na√Øve\n  </em>\n  static solution may be a more viable solution. For example, a solution that assumes the third argument to\n  <code>\n   Func\n  </code>\n  is a hardcoded immediate value and not a variable, will require only little static analysis and can be achieved, although IDA is not best-suited for such tasks (I'd recommend you take a look at\n  <a href=\"https://angr.io/\" rel=\"nofollow noreferrer\">\n   angr\n  </a>\n  instead)\n </p>\n <p>\n  Alternatively, one might argue that\n  <em>\n   debugging\n  </em>\n  is a better solution, placing a break point on\n  <code>\n   Func\n  </code>\n  and parsing the arguments at call-time. This is again not IDA's forte but nowadays IDA's debugger is good enough to use for such a task.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "NirIzr",
            "time": "Nov 11, 2021 at 13:14",
            "is_accepted": false,
            "comments": []
        }
    ]
}