{
    "title": "Getting Ghidra project to recognize referenced DLL",
    "link": "https://reverseengineering.stackexchange.com/questions/26065/getting-ghidra-project-to-recognize-referenced-dll",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am reverse engineering a very old game and when I load up the executable in Ghidra, I see a handful of imported dlls\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/3VRH4.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/3VRH4.png\"/>\n  </a>\n </p>\n <p>\n  I do however not see one of the DLLs the game uses to wrap various client rendering Direct X 7 calls. I have loaded (and analyzed the separate dll) but can't seem to figure out how I can get the game exe to recognize the dll. My hope is (because the DLL has function names that I can see via Dependency Walker), that I can see the calls by name to the DLL. I am able to see them via ollydbg (possibly because the game is running).\n </p>\n <p>\n  Am I missing something?\n </p>\n <p>\n  I found\n  <a href=\"https://reverseengineering.stackexchange.com/questions/22044\">\n   this post\n  </a>\n  here which looks relevant.\n </p>\n <p>\n  I do not see the\n  <code>\n   EXTERNAL\n  </code>\n  identifier, but instead something like this:\n </p>\n <p>\n  <code>\n   iVar3 = (*(code *)FLOAT_006e5188)(param_1[1],iVar3,&local_24);\n  </code>\n </p>\n <p>\n  This is a function pointer pointing towards the function in the DLL. How can I fix this?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "11k",
    "tags": [
        "dll",
        "ghidra"
    ],
    "user": "Johnson Ploobnis",
    "time": "Oct 7, 2020 at 9:49",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can specify external DLLs in the Import dialog when you first load the binary into Ghidra. There, click on the \"Options...\" button. Then, check \"Load External Libraries\" and make sure the Game's DLLs are a directory on the list that appears after clicking \"Edit Paths\".\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/tSg7o.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Dialogs in Ghidra to add external libraries\" src=\"https://i.sstatic.net/tSg7o.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "born",
            "time": "Nov 2, 2020 at 21:28",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Dai",
                    "text": "<span class=\"comment-copy\">Unfortunately there's a breaking bug in the current version of Ghidra when using Import Options: <a href=\"https://github.com/NationalSecurityAgency/ghidra/issues/1947\" rel=\"nofollow noreferrer\">github.com/NationalSecurityAgency/ghidra/issues/1947</a></span>",
                    "time": null
                }
            ]
        }
    ]
}