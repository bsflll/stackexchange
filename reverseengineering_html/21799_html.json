{
    "title": "MakeArray from stack variables using idapython",
    "link": "https://reverseengineering.stackexchange.com/questions/21799/makearray-from-stack-variables-using-idapython",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to\n  <code>\n   MakeArray()\n  </code>\n  to stack variables which can be done with IDA like so:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/Q7wI8.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"MakeArray to stack variables\" src=\"https://i.sstatic.net/Q7wI8.png\"/>\n  </a>\n </p>\n <blockquote>\n  <p>\n   MakeArray() Create an array.\n  </p>\n  <p>\n   ea      - linear address\n  </p>\n  <p>\n   nitems  - size of array in items\n  </p>\n  <p>\n   This function will create an array of the items with the same type as\n  </p>\n  <p>\n   the type of the item at 'ea'. If the byte at 'ea' is undefined, then\n  </p>\n  <p>\n   this function will create an array of bytes. How can I do that?\n  Thanks.\n  </p>\n </blockquote>\n <p>\n  <code>\n   MakeArray()\n  </code>\n  works only on linear address and not on stack variables as shown above.\n </p>\n <p>\n  How can it be done?\nThanks.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 2,
    "views": "631",
    "tags": [
        "ida",
        "idapython"
    ],
    "user": "Kinetics332",
    "time": "Jul 29, 2019 at 16:36",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As far as I remember you need to modify stack frame of the function in order to achieve your goal.\n </p>\n <p>\n  Stack frame in IDA is represented by the structure which has its own id and type. \nIn order to get this structure id you need you can use\n  <a href=\"https://www.hex-rays.com/products/ida/support/idapython_docs/idc-module.html#get_frame_id\" rel=\"nofollow noreferrer\">\n   idc.get_frame_id\n  </a>\n  \n\n  In order to get structure itself in newer API (IDA 7.0 + if I remember it correctly) you can use\n  <a href=\"https://www.hex-rays.com/products/ida/support/idapython_docs/ida_frame-module.html#get_frame\" rel=\"nofollow noreferrer\">\n   ida_frame.get_frame\n  </a>\n </p>\n <p>\n  After getting either frame id or the structure, you can modify it.\n </p>\n <p>\n  If you are working with structure, you can modify it with functions from module\n  <a href=\"https://www.hex-rays.com/products/ida/support/idapython_docs/toc-ida_struct-module.html\" rel=\"nofollow noreferrer\">\n   ida_struct\n  </a>\n  .\n </p>\n <p>\n  If you are working with structure ID, you can use\n  <a href=\"https://www.hex-rays.com/products/ida/support/idapython_docs/idc-module.html#add_struc_member\" rel=\"nofollow noreferrer\">\n   idc.add_struc_member\n  </a>\n  .\n </p>\n <p>\n  You'll probably need to delete members of the frame occupying the required space first.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "w s",
            "time": "Jul 30, 2019 at 7:38",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Kinetics332",
                    "text": "<span class=\"comment-copy\"><code>MakeArray()</code> needs an <code>ea</code> as parameter, can it work on structure? how can I extract the ea of a struct variable?</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@Kinetics332: use the struct member id as ea</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The following worked for me on IDA 7.2:\n </p>\n <ol>\n  <li>\n   Get the frame id and confirm it's sane.\n  </li>\n </ol>\n <pre><code>Python> frame_id = get_frame_id(get_name_ea(BADADDR, 'sub_5450'))\nPython> print(list(StructMembers(frame_id)))\n[(0L, 'var_18', 8L), (12L, 'var_C', 4L), (24L, ' r', 8L)]\n</code></pre>\n <ol start=\"2\">\n  <li>\n   Get the existing variable id.\n  </li>\n </ol>\n <pre><code>Python> var_id = get_member_id(frame_id, 12)\n</code></pre>\n <p>\n  If I needed a new variable, I would have used\n  <code>\n   add_struc_member(frame_id, 'var_name', var_offset, FF_DATA | FF_BYTE, -1, 1)\n  </code>\n  first.\n </p>\n <ol start=\"3\">\n  <li>\n   Use\n   <code>\n    apply_type\n   </code>\n   in order to turn the variable into an array.\n  </li>\n </ol>\n <pre><code>Python> apply_type(var_id, parse_decl('int[2]', 0))\nTrue\n</code></pre>\n <p>\n  Somehow\n  <code>\n   MakeArray\n  </code>\n  did not work:\n </p>\n <pre><code>Python> MakeArray(var_id, 2)\nFalse\n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "mephi42",
            "time": "Oct 20, 2020 at 23:37",
            "is_accepted": false,
            "comments": []
        }
    ]
}