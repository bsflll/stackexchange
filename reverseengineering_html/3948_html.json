{
    "title": "How to set a breakpoint when a method is called using LLDB on OS X?",
    "link": "https://reverseengineering.stackexchange.com/questions/3948/how-to-set-a-breakpoint-when-a-method-is-called-using-lldb-on-os-x",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to hit a breakpoint that I set in LLDB (CLI), but for whatever reason I'm not hitting my breakpoint.  I am messing around with the stock Calculator.app on OS X, and am trying to call / hit my breakpoint when I open the About dialog box of the Calculator.app.\n </p>\n <p>\n  I launch the Calculator.app, then I start lldb from a Terminal window.  I find the process of the Calculator.app using ps and grep.  I attach to the running process using LLDB.  I then issue the\n  <code>\n   continue\n  </code>\n  command in LLDB to allow the Calculator.app to continue running.\n </p>\n <p>\n  Then I set a breakpoint in LLDB when the following method is called,\n  <code>\n   showAbout\n  </code>\n </p>\n <p>\n  I type the following command into LLDB,\n  <code>\n   (lldb) breakpoint set --method showAbout\n  </code>\n </p>\n <p>\n  However when I click\n  <code>\n   About Calculator\n  </code>\n  from the menu bar it doesn't halt the program, but rather shows the About dialog box for the Calculator.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "debuggers",
        "osx",
        "lldb"
    ],
    "user": "ipatch",
    "time": "Mar 26, 2014 at 2:41",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The Calculator app is stripped as can be seen by running\n  <code>\n   nm\n  </code>\n  .\nYou will need to find the address of the method using\n  <code>\n   class-dump\n  </code>\n  :\n </p>\n <pre><code>$ class-dump -A /Applications/Calculator.app | grep showAbout\n- (void)showAbout:(id)arg1; // IMP=0x0000000100009939\n</code></pre>\n <p>\n  However as the Calculator application is already running, the address has been slided because of ASLR.\nTo find the ASLR slide you can use my tool called\n  <a href=\"https://github.com/Tyilo/get_aslr\" rel=\"nofollow\">\n   get_aslr\n  </a>\n  , like so:\n </p>\n <pre><code>$ sudo get_aslr $(pgrep Calculator)\nASLR slide: 0x9508000\n</code></pre>\n <p>\n  You then add the two numbers together:\n </p>\n <pre><code>0x0000000100009939 + 0x9508000 = 0x109511939\n</code></pre>\n <p>\n  That is the current address of the\n  <code>\n   showAbout:\n  </code>\n  method.\nNow you just need to set the breakpoint in\n  <code>\n   lldb\n  </code>\n  :\n </p>\n <pre><code>b *0x109511939\n</code></pre>\n <p>\n  And it works!\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Tyilo",
            "time": "Mar 25, 2014 at 17:59",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Brennan Vincent",
                    "text": "<span class=\"comment-copy\">You don't need <code>get_aslr</code>; you can also find the address the binary is loaded at by running <code>image list</code> from within lldb.</span>",
                    "time": null
                }
            ]
        }
    ]
}