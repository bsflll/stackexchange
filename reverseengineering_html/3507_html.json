{
    "title": "Is there any tool to quantitatively evaluate the difference of binary?",
    "link": "https://reverseengineering.stackexchange.com/questions/3507/is-there-any-tool-to-quantitatively-evaluate-the-difference-of-binary",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I know some binary diff tool like VBinDiff and others.\n </p>\n <p>\n  Currently I have a large number of binary, around 500.\n </p>\n <p>\n  So I am looking for a binary tool to quantitatively evaluate the difference of binaries..\n </p>\n <p>\n  Like evaluate the difference of binary 10 and binary 100 is 56%. Difference of binary 50 and binary 200 is 78%.\n </p>\n <p>\n  Is there any tool like this?\n </p>\n <p>\n  Thank you!\n </p>\n</div>\n</body></html>",
    "votes": "7",
    "answers": 4,
    "views": "2k",
    "tags": [
        "binary-analysis",
        "bin-diffing"
    ],
    "user": "lllllllllllll",
    "time": "Sep 30, 2016 at 21:59",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You may want to give a try to\n  <a href=\"http://ssdeep.sourceforge.net/\">\n   ssdeep\n  </a>\n  :\n </p>\n <blockquote>\n  <p>\n   ssdeep is a program for computing\n   <a href=\"http://dfrws.org/2006/proceedings/12-Kornblum.pdf\">\n    context triggered piecewise hashes\n   </a>\n   (CTPH). Also called fuzzy hashes, CTPH can match inputs that have homologies. Such inputs have sequences of identical bytes in the same order, although bytes in between these sequences may be different in both content and length.\n  </p>\n </blockquote>\n</div>\n</body></html>",
            "votes": "6",
            "user": "jvoisin",
            "time": "Jan 21, 2014 at 17:37",
            "is_accepted": false,
            "comments": [
                {
                    "user": "lllllllllllll",
                    "text": "<span class=\"comment-copy\">Hi jvoisin,Thank you for your answer! So tools like VBinDiff can highlight all the different bytes in hex, and I am thinking to find a tool to sum up all the highlighted bytes, thus can get the number of different bytes... Do you know certain tools like this..?</span>",
                    "time": null
                },
                {
                    "user": "lllllllllllll",
                    "text": "<span class=\"comment-copy\">Hi jvoisin, I finally find out how to do it, I write it down.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Here is my solution.\n </p>\n <ol>\n  <li>\n   <p>\n    I use\n    <a href=\"http://rada.re\" rel=\"nofollow\">\n     <code>\n      radiff2\n     </code>\n    </a>\n    to find out all the difference \nbetween binaries.\n   </p>\n   <pre><code>radiff2 binary1 binary2\n</code></pre>\n  </li>\n  <li>\n   <p>\n    Then\n    <code>\n     xxd\n    </code>\n    to convert binary into hex\n   </p>\n   <pre><code>xxd -p  final\n</code></pre>\n  </li>\n  <li>\n   <p>\n    After that,\n    <code>\n     wc\n    </code>\n    to figure out the number of hex in one binary\n   </p>\n   <pre><code>wc -c outputhex\nwc -l newlineneedtodelete\n</code></pre>\n  </li>\n  <li>\n   <p>\n    Now I have the difference between two binaries and the total number of hex in each binary. A simple divide could figure out the percentage of difference as I want.\n   </p>\n  </li>\n </ol>\n</div>\n</body></html>",
            "votes": "3",
            "user": "perror",
            "time": "Jan 21, 2014 at 22:01",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Given that you're looking to compare ~500 binaries to each other, what you really want is\n  <a href=\"http://www.zynamics.com/vxclass.html\" rel=\"nofollow\">\n   VxClass\n  </a>\n  .\n </p>\n <p>\n  Unfortunately, Zynamics/Google is no longer selling VxClass. If anyone knows of a way to buy it or download it though, feel free to share the information here.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Jason Geffner",
            "time": "Jan 22, 2014 at 1:12",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">BTW, you probably could reimplement VxClass's functionality via BinDiff/DarunGrim/etc. and custom code, but it would be non-trivial.</span>",
                    "time": null
                },
                {
                    "user": "newgre",
                    "text": "<span class=\"comment-copy\">zynamics@google employee here: unfortunately there is no way to buy vxclass and I don't think that will change in the future.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This is probably a bit further outside the normal reverse engineer's toolchest, but still a possibility.\n  <a href=\"http://www.chromium.org/developers/design-documents/software-updates-courgette\" rel=\"nofollow\">\n   Courgette\n  </a>\n  is the codename of the update mechanism behind Chromium and thus Chrome. Quote:\n </p>\n <blockquote>\n  <p>\n   Courgette transforms the program into the primitive assembly language\n  and does the diffing at the assembly level:\n  </p>\n  <pre><code>server:\n    asm_old = disassemble(original)\n    asm_new = disassemble(update)\n    asm_new_adjusted = adjust(asm_new, asm_old)\n    asm_diff = bsdiff(asm_old, asm_new_adjusted)\n    transmit asm_diff\n\nclient:\n    receive asm_diff\n    asm_old = disassemble(original)\n    asm_new_adjusted = bspatch(asm_old, asm_diff)\n    update = assemble(asm_new_adjusted)\n</code></pre>\n </blockquote>\n <p>\n  Of course this is limited by the number of CPU architectures. You didn't state your requirements (unless it was written with invisible pixels ;))\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "0xC0000022L",
            "time": "Jan 22, 2014 at 11:43",
            "is_accepted": false,
            "comments": []
        }
    ]
}