{
    "title": "Hooking function with C++, IDA and .pdb file",
    "link": "https://reverseengineering.stackexchange.com/questions/17881/hooking-function-with-c-ida-and-pdb-file",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to call a function in a program. I do this from a DLL entry point. I opened the program in IDA together with its .pdb file. This is what the function looks like according to IDA:\n </p>\n <pre><code>void __fastcall Logger::log(LogLevel lvl, const char *msg)\n</code></pre>\n <p>\n  (LogLevel is just an enum)\n </p>\n <p>\n  The parameters are obvious and not the problem.\n </p>\n <p>\n  But the problem is that I propably have the wrong address of it (I assume I need to get the address of the class first?) IDA gave me:\n </p>\n <pre><code>.text:00000001400981A0\n</code></pre>\n <p>\n  for the function.\nThis is what I tried:\n </p>\n <pre><code>BOOL WINAPI DllMain(HINSTANCE hModule, DWORD dwReason, LPVOID lpReserved) {\n  if (dwReason == DLL_PROCESS_ATTACH) {\n    typedef void __fastcall func(int lvl, const char* msg);\n    func* loggerLog = (func*)(GetModuleHandle(0) + 0x1400981A0);\n    loggerLog(0, \"test 123\");\n  }\n  return 1;\n}\n</code></pre>\n <p>\n  Doing this the program just closes, no error.\n </p>\n <p>\n  I'm not sure where to start. What is the correct way and address? How would I get the address I need?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ida",
        "c++",
        "function-hooking"
    ],
    "user": "TheElderScroller",
    "time": "Apr 3, 2018 at 12:28",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n you cannot use the address shown in ida due to reasons like aslr , non availability of preferred base etc etc    2) you cannot add the result of getmodulehandle with an absolute address   you need to read about rva  find  the rva  add the rva to loaded base and use  that address  or if the function is exported use GetProcAddress() you have a lot of reading ahead\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  0x1400981A0 - this was a wrong valuee to add. Most likely you need to use GetModuleHandle(0) + 0x981A0. Because GetModuleHandle(0) will give you the base address like 0x140000000.\nI.e. IDA shows you the virtual address to which DLL would be loaded if OS has the address available. In other cases you need to know RVA (relative virtual address), so that you calculate the address of the function like RVA + virtual address to which OS loaded the DLL.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Anton Kukoba",
            "time": "Apr 4, 2018 at 13:36",
            "is_accepted": false,
            "comments": [
                {
                    "user": "TheElderScroller",
                    "text": "<span class=\"comment-copy\">Thanks for the explanation, but GetModuleHandle(0) + 0x981A0 didn't do it either.</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@TheElderScroller: use a debugger to see where it jumps and what happens, we can't do it for you.</span>",
                    "time": null
                }
            ]
        }
    ]
}