{
    "title": "Anti-theft system rs485 keypad",
    "link": "https://reverseengineering.stackexchange.com/questions/13484/anti-theft-system-rs485-keypad",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  \n\n  I'm trying to recycle an Anti-theft system keypad.\n  \n\n  My goal is use this keypad as my system peripheral.\n  \n\n  This keypad is interfaced with its master device phisically using bus\n  <strong>\n   rs485\n  </strong>\n  .\n  \n\n  The first step in order to exploit this keyboard, is understand the communication between this two devices, the master and its keypad.\n  \n\n  My first idea have been tap the bus and sniff the traffic.\n  \n\n  Doing this, I collected few dumps of estabilished dialogs between those two devices, but because the  tap, I can't have any idea of the direction the bytes I logged.\n  \n\n  So my second step have been play the\n  <em>\n   man-in-the-middle\n  </em>\n  game.\n  \n\n  \n\n  I setup a device to put between the master and its keypad cutting the bus and using two transceiver, one facing the master an another facing the keypad.\n  \n\n  Then I wrote a simple program to forward everything from an interface to another.\n  \n\n  In this scenario however, it seems keypad does not react to the messages sent by its master, received by my device ad forwarded to it.\n  \n\n  Having the feeling something in the transmission could be wrong, the rs485 chip on my usb dongle and the one on the keypad are different (\n  <strong>\n   sipex sp485ec\n  </strong>\n  keypad -\n  <strong>\n   st 485ecdr\n  </strong>\n  usb dongle), I tried to tap directly a logic analyzer to the serial pin on the microcontroller. Doing this I verified that sending bytes through my usbdongle I could receive them on the pins on the MCU.\n  \n\n  \n\n  \n\n  Can someone give me any direction to step forward my project?\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 2,
    "views": "321",
    "tags": [
        "serial-communication"
    ],
    "user": "Alessandro",
    "time": "Sep 10, 2016 at 19:26",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It is quite possible the master device requires keypad to answer within a specific time window. Adding a man-in-the-middle violates these conditions.\n </p>\n <p>\n  To analyze data direction, you can try connecting a small value resistor (100 â€” 1k) in series in the line between the devices. Connect an oscilloscope to the line. Signal voltage level will be slightly different depending on which side is driving the line.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Vladislav Ivanov",
            "time": "Sep 20, 2016 at 8:46",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As often happen, solution is easiest than you might have thought.\n  \n\n  But before proceed telling you which was the problem, I want to ask a simple question to you all:\n  \n\n  <em>\n   Did you know that, if in serial communication the stop bit setting is wrong, you can receive and decode successfully the stream?\n  </em>\n  \n\n  Frankly I didn't know, and that's the main cause I waste all this time on a simple problem such as this.\n  \n\n  Well you should also understand that in my experience, I never ever had the need to change the stop bit setting.\n  \n\n  <strong>\n   Never ever... until now.\n  </strong>\n  \n\n  \n\n  As you might have guessed, the problem laid in the fact that \"stop bit\" setting was wrong.\n  \n\n  Instead of the classic\n  <strong>\n   9600,8,n,1\n  </strong>\n  this setup needed\n  <strong>\n   9600,8,n,2\n  </strong>\n  .\n  \n\n  Guess what, I needed a very long time to figure it out.\n  \n\n  I ended up probing serial data, directly on the MCU serial pins tx and rx pins, that because I feared the rs485 driver could have something wrong.\n  \n\n  At last, comparing a sniffed waveform from original MASTER and the waveform I produced I finally saw the difference.\n  <a href=\"https://i.sstatic.net/WJ3bk.gif\" rel=\"nofollow noreferrer\">\n   <img alt=\"waveforms comparsion\" src=\"https://i.sstatic.net/WJ3bk.gif\"/>\n  </a>\n  Now I can successfully transmit bytes to the devices on this bus  and proceed with my original goal of reverse engineer the protocol to use this hardware on my custom Anti-theft system.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Alessandro",
            "time": "Sep 28, 2016 at 19:46",
            "is_accepted": true,
            "comments": []
        }
    ]
}