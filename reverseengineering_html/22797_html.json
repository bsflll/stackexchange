{
    "title": "Voltage Glitching to Read Internal EEPROM",
    "link": "https://reverseengineering.stackexchange.com/questions/22797/voltage-glitching-to-read-internal-eeprom",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to read the cryptographic key from my car key fob for exploration, basically seeing if I can clone it.\n </p>\n <p>\n  I popped open the case and I see it's using a Microchip HCS361. The HCS361 stores it's key in internal EEPROM that cannot be read during normal operation.\n </p>\n <p>\n  However, the datasheet says that \"\n  <em>\n   At the end of the programming cycle, the device can be verified by reading back the EEPROM\n  </em>\n  \". The mentioned programming cycle is just writing the EEPROM.\n </p>\n <p>\n  I was thinking that maybe it is possible to perform a voltage glitching attack on the chip to make it think that it has just been programmed so that EEPROM can be read.\n </p>\n <p>\n  The feasibility of this clearly depends on how the read protection is implemented on the chip. I would think that it would be basically a check if a certain bit is set in a register but I'm not sure. If this is the case, it should theoretically be possible to bypass that instruction via glitching.\n </p>\n <p>\n  Based on the following diagram for how to perform the verification,\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/voihO.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/voihO.png\"/>\n  </a>\n </p>\n <p>\n  I wrote a small Arduino sketch that does the following:\n </p>\n <pre><code>1. Set S1 and S3 to high\n2. Perform the glitch\n3. Clock S3 and read from DATA\n</code></pre>\n <p>\n  and retries with different glitch times.\n </p>\n <p>\n  Most of the time, I get the expected PWM data on the\n  <code>\n   DATA\n  </code>\n  line that is transmitted on a button press. However, as the glitches get longer, I get more and more 0's.\n </p>\n <p>\n  Is this method even remotely feasible or should I just program the chip and relearn it to my car?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "191",
    "tags": [
        "hardware",
        "embedded",
        "copy-protection"
    ],
    "user": "genghiskhan",
    "time": "Dec 21, 2019 at 2:44",
    "comments": [],
    "answers_data": []
}