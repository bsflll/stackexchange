{
    "title": "Is there a way to import debug/symbol information of a C++ DOS executable to IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/11660/is-there-a-way-to-import-debug-symbol-information-of-a-c-dos-executable-to-ida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have an old DOS program compiled using Borland C++ (1991 version)\n </p>\n <p>\n  The end of the executable contains many strings preceded by an underscore which looks like debug/symbol information :\n </p>\n <p>\n  eg:\n  <code>\n   _HandleMemory\n  </code>\n  ,\n  <code>\n   _AddKey\n  </code>\n  ,\n  <code>\n   _SetPalette\n  </code>\n  , ...\n </p>\n <p>\n  Most of these strings seems to be functions or variables names.\n </p>\n <p>\n  However once the exe is opened in IDA, that information is not used, most functions are simply named this way (except some known C functions like\n  <code>\n   _qsort\n  </code>\n  ) :\n </p>\n <pre><code>sub_XXXXX\n</code></pre>\n <p>\n  Is there a way to import that info back to IDA ?\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 2,
    "views": "3k",
    "tags": [
        "ida",
        "debugging",
        "c++",
        "dos"
    ],
    "user": "tigrou",
    "time": "Dec 31, 2015 at 6:06",
    "comments": [
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n Are you sure it's not actually a list of DLL imported symbols?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "tigrou",
            "text": "<html><body><span class=\"comment-copy\">\n By DLL, do you mean an external library ? (since AFAIK, DLL are windows only). I don't think so because these strings are referenced in any other of the program files.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n DLL is a Windows term, but Microsoft did not invent importing libraries from scratch. I assume you mean \"\n <i>\n  not\n </i>\n referenced\" elsewhere. But: Just a list of symbols is practically useless. Are there any references to it inside the same executable? Can you upload this file and provide a link to it, so others can check?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "tigrou",
            "text": "<html><body><span class=\"comment-copy\">\n Yes you are right, I mean \"not referenced\". The program in question is a game (Alone in the Dark 1). It is freely downloadable on many abandonware sites, but i am not sure if it's OK to put a link to the executable here ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "DarthGizka",
            "text": "<html><body><span class=\"comment-copy\">\n The year 1991 pegs this as Turbo C++ 1.0 or thereabouts, and it is indeed very likely that the tail data in question is Borland-style debug info (16-bit TDS format). Experiments show that the available IDA freewares - 3.7 through 5.0 - do not recognise the 16-bit Borland debug info. If the debug info is stripped into a separate TDS file (via tdstrip.exe) then you get a rejection message in the output window for those versions that can deal with TDS in principle but expect the newer 32-bit format (as of BOA 4.0 and beyond). Same for the 'Load TDS' menu item, if present.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In case anyone has same question, here is how I solved it :\n </p>\n <p>\n  1) I exported all debug symbol information to a text file, using TDUMP.\n </p>\n <pre><code>TDUMP somefile.exe > 1.txt\n</code></pre>\n <p>\n  2) I cleaned the txt file to keep only useful information :\n </p>\n <pre><code>[Function name] + [Address]\n</code></pre>\n <p>\n  3) I imported the file back to IDA using a python script :\n  <a href=\"https://reverseengineering.stackexchange.com/questions/11874/how-to-automatically-rename-some-ida-functions-from-a-given-list\">\n   see here\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I've written an IDAPython script which parses the debug information and then performs the corresponding renamings, all from within IDA.\n </p>\n <p>\n  The script, along with simple usage instructions, are available on\n  <a href=\"https://github.com/ramikg/tdinfo-parser\" rel=\"nofollow noreferrer\">\n   GitHub\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "ramikg",
            "time": "Oct 22, 2020 at 19:23",
            "is_accepted": false,
            "comments": []
        }
    ]
}