{
    "title": "In IDA what does db and dd offset means in data section?",
    "link": "https://reverseengineering.stackexchange.com/questions/29733/in-ida-what-does-db-and-dd-offset-means-in-data-section",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  So, in\n  <code>\n   .data\n  </code>\n  section there is some variable, and after it there is\n  <code>\n   db\n  </code>\n  or\n  <code>\n   dd\n  </code>\n  (\n  <code>\n   offset\n  </code>\n  ). What exactly does this mean? And what does “align” means? Is there any Wiki or something like that that tells all this in detail?\n </p>\n <pre><code>    .data:0048A374                 db    0\n    .data:0048A375                 db    0\n    .data:0048A376                 db    0\n    .data:0048A377                 db    0\n    .data:0048A378 off_48A378      dd offset unk_48A000    ; DATA XREF: start+41↑o\n    .data:0048A37C                 dd offset unk_48A1CE\n    .data:0048A380                 dd offset unk_48A1CE\n    .data:0048A384                 dd offset unk_48A33C\n    .data:0048A388 byte_48A388     db 1                    ; DATA XREF: __InitVCL+3↑r\n    .data:0048A389                 align 10h\n    .data:0048A390                 dd offset WinMain\n    .data:0048A394                 dd offset __matherr\n    .data:0048A398                 dd offset __matherrl\n    .data:0048A39C                 align 10h\n    .data:0048A3A0                 dd offset unk_48F66C\n    .data:0048A3A4                 dd offset off_490784\n    .data:0048A3A8                 dd offset off_490788\n    .data:0048A3AC                 dd offset __handle_setargv\n    .data:0048A3B0                 dd offset __handle_exitargv\n    .data:0048A3B4                 dd offset __handle_wsetargv\n    .data:0048A3B8                 dd offset __handle_wexitargv\n    .data:0048A3BC                 dd offset dword_48F0EC\n    .data:0048A3C0 byte_48A3C0     db 0                    ; DATA XREF: ___CRTL_VCL_Init_2+2↑r\n    .data:0048A3C0                                         ; __InitVCL+17↑r\n    .data:0048A3C1 byte_48A3C1     db 0                    ; DATA XREF: .text:00401060↑r\n    .data:0048A3C1                                         ; ___CRTL_VCL_Init_2+B↑r ...\n    .data:0048A3C2                 dd offset unk_4906E4\n    .data:0048A3C6                 dd offset unk_4907AC\n    .data:0048A3CA                 dd offset unk_4904F0\n    .data:0048A3CE                 db    0\n    .data:0048A3CF ; DWORD dwTlsIndex\n    .data:0048A3CF dwTlsIndex      dd 0                    ; DATA XREF: start:loc_401012↑r\n    .data:0048A3CF                                         ; .text:00401082↑r ...\n    .data:0048A3D3 dword_48A3D3    dd 0                    ; DATA XREF: start+1A↑w\n    .data:0048A3D7 dword_48A3D7    dd 0                    ; DATA XREF: start+4D↑w\n    .data:0048A3D7                                         ; .text:__getHInstance↑r ...\n    .data:0048A3DB                 db  90h ; ђ\n    .data:0048A3DC ; Exported entry 156. ___CPPdebugHook\n    .data:0048A3DC                 public ___CPPdebugHook\n    .data:0048A3DC ___CPPdebugHook db    0                 ; DATA XREF: start+E↑o\n    .data:0048A3DC                                         ; sub_46AF30+20↑o ...\n    .data:0048A3DD                 db    0\n    .data:0048A3DE                 db    0\n    .data:0048A3DF                 db    0\n</code></pre>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "3k",
    "tags": [
        "ida"
    ],
    "user": "ScienceDiscoverer",
    "time": "Dec 20, 2021 at 10:32",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<html><body><span class=\"comment-copy\">\n define: b - byte, d - dword\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Hi and welcome to RE.SE. While your question is certainly valid, it's also trivial and the answer can be found in the first pages of books about x86 assembly language. E.g.\n <a href=\"https://www.randallhyde.com/AssemblyLanguage/\" rel=\"nofollow noreferrer\">\n  here\n </a>\n or\n <a href=\"https://en.wikibooks.org/wiki/X86_Assembly\" rel=\"nofollow noreferrer\">\n  here\n </a>\n ... aside from that it's be best to paste text as text and not a screenshot. Because: search engines.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <ul>\n  <li>\n   <code>\n    db\n   </code>\n   means “\n   <strong>\n    d\n   </strong>\n   efine\n   <strong>\n    b\n   </strong>\n   yte”, i.e. a reservation of\n   <strong>\n    1\n   </strong>\n   byte of memory,\n  </li>\n  <li>\n   <code>\n    dw\n   </code>\n   means “\n   <strong>\n    d\n   </strong>\n   efine\n   <strong>\n    w\n   </strong>\n   ord” (\n   <strong>\n    2\n   </strong>\n   bytes of memory),\n  </li>\n  <li>\n   <code>\n    dd\n   </code>\n   means “\n   <strong>\n    d\n   </strong>\n   efine\n   <strong>\n    d\n   </strong>\n   ouble-word” (\n   <strong>\n    4\n   </strong>\n   bytes of memory).\n  </li>\n </ul>\n <p>\n  The\n  <code>\n   offset\n  </code>\n  prefix means to fill the reserved byte(s)\n  <em>\n   not with the mentioned data itself (i.e.,\n   <em>\n    not with the content\n   </em>\n   ),\n  </em>\n  but only with the\n  <em>\n   offset\n  </em>\n  to it (i.e., with the\n  <strong>\n   position\n  </strong>\n  of data in memory, expressed as the number of bytes from the beginning of the segment).\n </p>\n <p>\n  The\n  <code>\n   align\n  </code>\n  directive means “If this address is not a multiple of the given number, skip the necessary number of bytes to fulfill this address requirement for the next data”.\n </p>\n <hr/>\n <p>\n  You may see it in your listing:\n </p>\n <ul>\n  <li>\n   <p>\n    <code>\n     db 1\n    </code>\n    is at address\n    <code>\n     0048a388\n    </code>\n    , it occupies only\n    <strong>\n     1\n    </strong>\n    byte (\n    <code>\n     db\n    </code>\n    –\n    <strong>\n     d\n    </strong>\n    efine\n    <strong>\n     b\n    </strong>\n    yte, i.e.,\n    <strong>\n     1\n    </strong>\n    byte) and fills  it with the given value (\n    <code>\n     1\n    </code>\n    ). So the next address is\n    <code>\n     0048a389\n    </code>\n    .\n   </p>\n  </li>\n  <li>\n   <p>\n    At this next address (\n    <code>\n     0048a389\n    </code>\n    ) is the\n    <code>\n     align 10h\n    </code>\n    directive, so the byte at this address and the subsequent 6 bytes at addresses\n   </p>\n   <ul>\n    <li>\n     <code>\n      0048a38a\n     </code>\n     ,\n     <code>\n      0048a388b\n     </code>\n     ,\n     <code>\n      0048a38c\n     </code>\n     ,\n     <code>\n      0048a38d\n     </code>\n     ,\n     <code>\n      0048a38e\n     </code>\n     , and\n     <code>\n      0048a38f\n     </code>\n    </li>\n   </ul>\n   <p>\n    are\n    <em>\n     skipped,\n    </em>\n    because they\n    <em>\n     don't fulfill\n    </em>\n    the request “a multiple of 10h” (i.e., their last digit in hexadecimal notation is\n    <em>\n     not\n    </em>\n    <code>\n     0\n    </code>\n    ).\n   </p>\n  </li>\n  <li>\n   <p>\n    At the next address\n    <code>\n     0048a390\n    </code>\n    (which finally fulfills the\n    <code>\n     align 10h\n    </code>\n    requirement) is the directive\n   </p>\n   <ul>\n    <li>\n     <code>\n      dd offset WinMain\n     </code>\n     ,\n    </li>\n   </ul>\n   <p>\n    which reserves 4 bytes of memory (\n    <code>\n     dd\n    </code>\n    –\n    <strong>\n     d\n    </strong>\n    efine\n    <strong>\n     d\n    </strong>\n    ouble word), and fills them with the\n    <em>\n     offset\n    </em>\n    of the (start of)\n    <code>\n     WinMain\n    </code>\n    function (\n    <code>\n     offset WinMain\n    </code>\n    ).\n   </p>\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "6",
            "user": "MarianD",
            "time": "Dec 21, 2021 at 8:40",
            "is_accepted": true,
            "comments": []
        }
    ]
}