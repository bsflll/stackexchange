{
    "title": "ARM7 32-bit Branch Offset Calculator",
    "link": "https://reverseengineering.stackexchange.com/questions/25454/arm7-32-bit-branch-offset-calculator",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I need to patch an arm7 program by replacing this fopen function by another function.\n </p>\n <pre><code>.text:00018D68 52 D7 FF EB                       BL              fopen\n\n...\n\n.plt:0000EAB8 ; FILE *fopen(const char *filename, const char *modes)\n</code></pre>\n <p>\n  Do you know how to calculate the 24 bits that I need to write after EB?\nThe documentation is not very clear. I tried to find a Branch offset calculator but not found.\n </p>\n <p>\n  Thx,\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "150",
    "tags": [
        "ida",
        "arm",
        "patching",
        "patch-reversing"
    ],
    "user": "john",
    "time": "Jul 7, 2020 at 7:58",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  you can use\n  <a href=\"https://www.keystone-engine.org/showcase/\" rel=\"nofollow noreferrer\">\n   https://www.keystone-engine.org/showcase/\n  </a>\n  assembler\n </p>\n <pre><code>from keystone import *\ntarget = 0xDEADBEEF\ncurrent = 0x18D68\nks = Ks(KS_ARCH_ARM, KS_MODE_ARM)\nbytes(ks.asm(\"bl {}\".format(hex(target)), current)[0]).hex()\n</code></pre>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Moshe Green",
            "time": "Jul 7, 2020 at 8:52",
            "is_accepted": true,
            "comments": [
                {
                    "user": "john",
                    "text": "<span class=\"comment-copy\">It's working!! Thank you</span>",
                    "time": null
                }
            ]
        }
    ]
}