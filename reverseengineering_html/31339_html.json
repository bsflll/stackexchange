{
    "title": "Inverter BLE communication module receives commands in HCI_ACL but apk shows ATT",
    "link": "https://reverseengineering.stackexchange.com/questions/31339/inverter-ble-communication-module-receives-commands-in-hci-acl-but-apk-shows-att",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a solar inverter which can be queried through mobile apps,\n  <em>\n   eSolar O&M\n  </em>\n  or\n  <em>\n   eSolar SET\n  </em>\n  . My goal is to read values from the inverter (solar power, grid consumption...) by querying the device from a home made program, and possibly implement this on an ESP32.\n </p>\n <p>\n  The communication between the app and the inverter goes through a\n  <a href=\"https://img.saj-electric.com/file/eSolar%20WiFI-2%20module%20User%20manual%20V0-20211229024257809.pdf\" rel=\"nofollow noreferrer\">\n   BLE device\n  </a>\n  , which internally sends and gets information using the Modbus protocol.\nI've unpacked the\n  <code>\n   apk\n  </code>\n  and every command sent to the module is clearly available as an hexadecimal string, everything is very straightforward, from the string building to the hash applied to it. From the app point of view, this string is sent through\n  <em>\n   BLE\n  </em>\n  using\n  <em>\n   ATT\n  </em>\n  commands, yet when I try to send those commands either with a\n  <code>\n   python\n  </code>\n  script,\n  <code>\n   gatttool\n  </code>\n  or even using the\n  <em>\n   nRF Connect\n  </em>\n  mobile app, I receive an\n  <code>\n   ack\n  </code>\n  from the device (\n  <code>\n   49 04 02 01 00\n  </code>\n  ) to the notification handle, but no result.\n  \n\n  In order to understand the communication between the app and the device, I've enabled\n  <em>\n   HCI snooping\n  </em>\n  on the Android device and got a clean capture. And while what seems to be an initial setup (BLE characteristics, MTU negocition...) happen using\n  <em>\n   ATT\n  </em>\n  commands, it switches to\n  <em>\n   HCI_ACL\n  </em>\n  to query the device and the communication between the 2 becomes unreadable.\n  \n\n  Moreover,\n  <code>\n   grep\n  </code>\n  'ing the initial commands sent by the app in the extracted\n  <code>\n   apk\n  </code>\n  gives no match. I am sure the\n  <code>\n   apk\n  </code>\n  is the one installed.\n  \n\n  The more puzzling is that a person from this inverter (\n  <em>\n   SAJ H1\n  </em>\n  ) hacking community is able to send\n  <em>\n   ATT\n  </em>\n  commands and receives results, the only difference is that I have a more recent firmware on the\n  <em>\n   BLE\n  </em>\n  module.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/JdVaR.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Wireshark Capture\" src=\"https://i.sstatic.net/JdVaR.png\"/>\n  </a>\n </p>\n <p>\n  Does this rings a bell to anyone? Any idea on how to proceed?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "148",
    "tags": [
        "apk",
        "bluetooth"
    ],
    "user": "iMil",
    "time": "Dec 31, 2022 at 8:41",
    "comments": [],
    "answers_data": []
}