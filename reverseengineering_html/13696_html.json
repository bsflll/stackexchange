{
    "title": "Radare2: how to change operand from integer value to (flag + offset) in disassembly output?",
    "link": "https://reverseengineering.stackexchange.com/questions/13696/radare2-how-to-change-operand-from-integer-value-to-flag-offset-in-disassem",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <em>\n   this is Easy_ELF from Reversing.Kr\n  </em>\n </p>\n <p>\n  Right now R2 displays absolute address for a character inside of a string:\n </p>\n <pre><code>  [0x08048454]> pdf\n  ...\n  0x08048454      0fb60521a004.  movzx eax, byte [0x804a021] \n</code></pre>\n <p>\n  I already made a flag for global buffer\n </p>\n <pre><code> f glob.passwordBuf 16 @ 0x0804a020 \n</code></pre>\n <p>\n  how to apply offset from it to make R2 to display something like\n </p>\n <pre><code> 0x08048454      0fb60521a004.  movzx eax, byte [glob.passwordBuf + 1] \n</code></pre>\n <p>\n  ? I.e. I want disassembler to use  what\n  <code>\n   fd 0x804a021\n  </code>\n  returns (which is\n  <code>\n   glob.passwordBuf + 1\n  </code>\n  )\n </p>\n <p>\n  I tried to reanalyze the function, but it didn't help.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "481",
    "tags": [
        "radare2"
    ],
    "user": "user3775442",
    "time": "Oct 11, 2016 at 12:12",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This is an enhancement to be done on asm.relsub see\n  <a href=\"https://github.com/radare/radare2/issues/5956\" rel=\"nofollow\">\n   https://github.com/radare/radare2/issues/5956\n  </a>\n </p>\n <p>\n  I have created an issue on the radare2 repository, feel free to do similar next time or to come by the IRC or the Telegram channel.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Maijin",
            "time": "Oct 12, 2016 at 19:29",
            "is_accepted": true,
            "comments": []
        }
    ]
}