{
    "title": "Is there any disassembler to rival IDA Pro?",
    "link": "https://reverseengineering.stackexchange.com/questions/1817/is-there-any-disassembler-to-rival-ida-pro",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Is there any disassembler (not only a live debugger) second to IDA in capabilities? IDA is wonderful, and somewhat amazing in how robust and useful it is for reversing. However, it is quite expensive to properly license. Is there\n  <em>\n   any\n  </em>\n  viable alternative, or does IDA hold the monopoly on this market?\n </p>\n <p>\n  I don't expect an alternative to be as good as IDA, just looking for other options that may be more affordable, and useful\n  <em>\n   enough\n  </em>\n  .\n </p>\n <p>\n  EDIT: Preferrably, multi-platform support should exist, though that's optional. MIPS, ARM, x86, and x86-64 would be nice, but a disassembler that handles any one of those is a good option to know about.\n </p>\n</div>\n</body></html>",
    "votes": "338",
    "answers": 16,
    "views": "425k",
    "tags": [
        "tools",
        "ida",
        "disassemblers"
    ],
    "user": "dyasta",
    "time": "Feb 26, 2015 at 21:33",
    "comments": [
        {
            "user": "savram",
            "text": "<html><body><span class=\"comment-copy\">\n I don't know any tool for static analysis other than IDA. However for live debugging there are many better alternatives, x64dbg being one of them. IDA's UI is clunky and lacking.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Top-Master",
            "text": "<html><body><span class=\"comment-copy\">\n <b>\n  IDA Pro has a unique ID\n  <i>\n   E\n  </i>\n  style\n </b>\n (or all-in-one tool style),\n <b>\n  which's also seen in\n  <a href=\"https://ghidra-sre.org/\" rel=\"nofollow noreferrer\">\n   Ghidra\n  </a>\n  and\n  <a href=\"https://binary.ninja/\" rel=\"nofollow noreferrer\">\n   Binary ninja\n  </a>\n </b>\n (where I have hopes for Ghidra getting faster in next releases, but Binary-Ninja's license is expensive).\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You didn't mention a platform (Windows, Linux, macOS, etc), but here are some great disassemblers.\n </p>\n <p>\n  <strong>\n   <a href=\"https://ghidra-sre.org/\" rel=\"noreferrer\">\n    Ghidra\n   </a>\n  </strong>\n </p>\n <blockquote>\n  <p>\n   Ghidra is a software reverse engineering (SRE) framework created and maintained by the National Security Agency Research Directorate. Windows, Mac OS, and Linux.\n  </p>\n  <p>\n   Capabilities include disassembly, assembly, decompilation, graphing, and scripting, along with hundreds of other features. Ghidra supports a wide variety of process instruction sets and executable formats and can be run in both user-interactive and automated modes. Users may also develop their own Ghidra plug-in components and/or scripts using Java or Python.\n  </p>\n </blockquote>\n <p>\n  <strong>\n   <a href=\"http://radare.org/y/\" rel=\"noreferrer\">\n    radare2\n   </a>\n  </strong>\n </p>\n <blockquote>\n  <p>\n   Radare2 is an open source tool to disassemble, debug, analyze and\nmanipulate binary files.\n  </p>\n  <p>\n   It actually supports many architectures (x86{16,32,64}, Dalvik, avr,\nARM, java, PowerPC, Sparc, MIPS) and several binary formats\n(pe{32,64}, [fat]mach0{32,64}, ELF{32,64}, dex and Java classes), apart from support for filesystem images and many more features.\n  </p>\n  <p>\n   It runs on the command line, but it has a graphical interface called\n   <a href=\"https://github.com/rizinorg/cutter\" rel=\"noreferrer\">\n    Cutter\n   </a>\n   that has support for some of its features already.\n  </p>\n </blockquote>\n <p>\n  <a href=\"https://binary.ninja/\" rel=\"noreferrer\">\n   <strong>\n    Binary Ninja\n   </strong>\n  </a>\n </p>\n <blockquote>\n  <p>\n   Binary Ninja is a reverse engineering platform. It focuses on a clean\nand easy to use interface with a powerful multithreaded analysis built\non a custom IL to quickly adapt to a variety of architectures,\nplatforms, and compilers. Runs on macOS, Windows, and Linux.\n  </p>\n </blockquote>\n <p>\n  <a href=\"http://www.hopperapp.com/\" rel=\"noreferrer\">\n   <strong>\n    Hopper\n   </strong>\n  </a>\n </p>\n <blockquote>\n  <p>\n   Hopper is a reverse engineering tool for macOS and Linux, that\nlets you disassemble, decompile and debug (OS X only) your 32/64bits\nIntel Mac, Windows and iOS (ARM) executables.\n  </p>\n </blockquote>\n <p>\n  <a href=\"http://x64dbg.com\" rel=\"noreferrer\">\n   <strong>\n    x64dbg\n   </strong>\n  </a>\n </p>\n <blockquote>\n  <p>\n   An open-source x64/x32 debugger for windows.\n  </p>\n </blockquote>\n <p>\n  <strong>\n   <a href=\"http://www.immunityinc.com/products/debugger/\" rel=\"noreferrer\">\n    ImmunityDbg\n   </a>\n  </strong>\n </p>\n <blockquote>\n  <p>\n   Immunity Debugger is a branch of OllyDbg v1.10, with built-in support\nfor Python scripting and much more.\n  </p>\n </blockquote>\n <p>\n  <strong>\n   <a href=\"http://www.heaventools.com/PE_Explorer_disassembler.htm\" rel=\"noreferrer\">\n    PE Explorer's disassembler\n   </a>\n  </strong>\n </p>\n <blockquote>\n  <p>\n   The PE Explorer Disassembler is designed to be easy to use compared\nwith other disassemblers. To that end, some of the functionality found\nin other products has been left out in order to keep the process\nsimple and fast. While as powerful as the more expensive, dedicated\ndisassemblers, PE Explorer focuses on ease of use, clarity and\nnavigation.\n  </p>\n </blockquote>\n <p>\n  <strong>\n   <a href=\"http://www.hiew.ru/\" rel=\"noreferrer\">\n    Hiew\n   </a>\n  </strong>\n </p>\n <blockquote>\n  <p>\n   Hiew is a great disassembler designed for\nhackers, as the name suggests. It supports three modes - Text,\nHexadecimal and Decode (Dis-assembly) mode.\n  </p>\n </blockquote>\n <p>\n  <a href=\"http://www.onlinedisassembler.com\" rel=\"noreferrer\">\n   <strong>\n    ODA\n   </strong>\n  </a>\n </p>\n <blockquote>\n  <p>\n   The Online Disassembler is a free web-based, reverse engineering platform that\nsupports over 60 architectures and object file formats from all the\nmajor operating systems, including Windows, Mac OS X, Linux, and mobile\nplatforms.\n  </p>\n </blockquote>\n <p>\n  <a href=\"https://www.relyze.com/overview.html\" rel=\"noreferrer\">\n   <strong>\n    Relyze\n   </strong>\n  </a>\n </p>\n <blockquote>\n  <p>\n   Relyze is a commercial interactive disassembler for x86, x64 and ARM\nsoftware with loaders for PE or ELF file formats. It supports\ninteractive flat and graph views of the disassembly, generating call\nand reference graphs, binary diffing two executables, exploring the\nexecutable file's structure and a Ruby plugin API. It can also handle\nthings like symbols (PDB's), function local variables, switch\nstatements, exception handlers, static library identification and\nmore.\n  </p>\n </blockquote>\n</div>\n</body></html>",
            "votes": "311",
            "user": "Mick",
            "time": "Dec 28, 2020 at 18:00",
            "is_accepted": true,
            "comments": [
                {
                    "user": "dyasta",
                    "text": "<span class=\"comment-copy\">I would add HIEW too, since you included PE Explorer. I've always found it remarkably good to do this day, though it needs an update bad.</span>",
                    "time": null
                },
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">I'm a bit surprised that ImmunityDebugger and OllyDbg are not part of this list. Is it because they are not multi-platforms ?</span>",
                    "time": null
                },
                {
                    "user": "Anton Kochkov",
                    "text": "<span class=\"comment-copy\">From my experience radare2 is much better than hopper. Just use 'fresh' version (at least 0.9.4) and visual mode ('Vpd' command).</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@MickGrove: as much as I appreciate to learn about (new) tools others use, wasn't the question in particular about a <i>contender</i> for IDA as disassembler?</span>",
                    "time": null
                },
                {
                    "user": "Mahmoud Al-Qudsi",
                    "text": "<span class=\"comment-copy\">Hopper is not available for Windows.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you were looking for a contender, I believe\n  <a href=\"http://debugger.immunityinc.com/\">\n   ImmunityDebugger\n  </a>\n  and\n  <a href=\"http://www.ollydbg.de/\">\n   OllyDbg\n  </a>\n  can compete\n  <em>\n   in part\n  </em>\n  for\n  <a class=\"post-tag\" href=\"/questions/tagged/dynamic-analysis\" rel=\"tag\" title=\"show questions tagged 'dynamic-analysis'\">\n   dynamic-analysis\n  </a>\n  and\n  <a href=\"http://www.hopperapp.com/\">\n   Hopper\n  </a>\n  <em>\n   in part\n  </em>\n  for\n  <a class=\"post-tag\" href=\"/questions/tagged/static-analysis\" rel=\"tag\" title=\"show questions tagged 'static-analysis'\">\n   static-analysis\n  </a>\n  .\n </p>\n <p>\n  That said, there is a big gap between the capabilities you get with the aforementioned software and IDA.\n </p>\n <p>\n  IDA Pro is pretty unique with its capabilities and if you add the Hex-Rays Decompiler Plugin into the equation, things look bleak for the wannabe contenders. However, for casual disassembly and even some decompiling Hopper seems a good choice for anyone not willing to shell out hundreds of bucks for IDA Pro. If you want a free ride,\n  <a href=\"http://radare.org/\">\n   radare2\n  </a>\n  is probably the next in line, but it takes some getting used to.\n </p>\n <p>\n  Having gotten my first IDA Pro Standard license as a student I have to admit the price point is steep, but it's worth every penny. When I began to work professionally with RCE-related things I upgraded to the \"normal\" license first and later upgraded to IDA Pro Advanced to get the x64 support.\n </p>\n <p>\n  Also keep in mind there is\n  <a href=\"https://www.hex-rays.com/products/ida/support/download_freeware.shtml\">\n   a freeware version of IDA\n  </a>\n  with license restrictions (but suitable for hobbyists or students) and restrictions of the capabilities.\n </p>\n</div>\n</body></html>",
            "votes": "59",
            "user": "0xC0000022L",
            "time": "Apr 18, 2013 at 22:30",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Top-Master",
                    "text": "<span class=\"comment-copy\">IDA Pro is so good that many have used it to patch itself and make it free-for-all. Hence in case of money issues: even White-hat users can simply say \"I use different free tools\" and link to this Q/A which lists them, but in reality find for themself a patched version. Using such patch is even allowed by Islam as long as the Software is \"more accessible\" by an enemy country (note said \"enemy\", hence even if that country is Islamic as well, Technology is ours to take, no copyright).</span>",
                    "time": null
                },
                {
                    "user": "Top-Master",
                    "text": "<span class=\"comment-copy\">However, in my case money is not the issue, but finding ability to de-obfuscate and run that de-obfuscated version instead of original binary, also optionally, ability to create unit-tests for any binary (not code, both de-obfuscated and original).</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Some other disassemblers / decompilers\n </p>\n <blockquote>\n  <p>\n   <strong>\n    <a href=\"http://www.softpedia.com/get/Programming/Debuggers-Decompilers-Dissasemblers/WDASM.shtml\" rel=\"noreferrer\">\n     W32Dasm\n    </a>\n   </strong>\n   \n\n   W32DASM was an excellent 16/32 bit disassembler for Windows, it seems it is no longer developed. the latest version available is from 2003\n  </p>\n </blockquote>\n <p>\n  <p>\n  </p>\n  <blockquote>\n   <p>\n    <strong>\n     <a href=\"http://www.capstone-engine.org/\" rel=\"noreferrer\">\n      Capstone\n     </a>\n    </strong>\n    \n\n    Capstone is a lightweight multi-platform, multi-architecture disassembly framework.\n   </p>\n  </blockquote>\n  <p>\n   <p>\n   </p>\n   <blockquote>\n    <p>\n     <strong>\n      <a href=\"http://www.caesum.com/download.php\" rel=\"noreferrer\">\n       BORG Disassembler\n      </a>\n     </strong>\n     \n\n     BORG is an excellent Win32 Disassembler with GUI.\n    </p>\n   </blockquote>\n   <p>\n    <p>\n    </p>\n    <blockquote>\n     <p>\n      <strong>\n       <a href=\"http://www.softpedia.com/get/Programming/Debuggers-Decompilers-Dissasemblers/DSM-Studio.shtml\" rel=\"noreferrer\">\n        DSM Studio Disassembler\n       </a>\n      </strong>\n      \n\n      DSM Studio is an easy-to-use yet comprehensive application that can aid you in the disassembly and inspection of executables built for the Intel x86 architecture.\n     </p>\n    </blockquote>\n    <p>\n     <p>\n     </p>\n     <blockquote>\n      <p>\n       <strong>\n        <a href=\"http://www.softpedia.com/get/Programming/Debuggers-Decompilers-Dissasemblers/Decompiler.shtml\" rel=\"noreferrer\">\n         Decompiler\n        </a>\n       </strong>\n       \n\n       Decompiler is an easy to use and simply application designed to read program binaries and decompile executable or DLL files.\n  The application is designed to decompile executables for any processor architecture and not be tied to a particular instruction set. \n  Although currently only a x86 front end is implemented, there is nothing preventing you from implementing a 68K, Sparc, or VAX front end if you need one.\n      </p>\n     </blockquote>\n     <p>\n      <p>\n      </p>\n      <blockquote>\n       <p>\n        <strong>\n         <a href=\"http://sourceforge.net/projects/lida/\" rel=\"noreferrer\">\n          Lida - linux interactive disassembler\n         </a>\n        </strong>\n        \n\n        lida is a fast feature packed interactive ELF disassembler / code-/cryptoanalyzer based on bastards libdisasm\n       </p>\n      </blockquote>\n      <p>\n       <p>\n       </p>\n       <blockquote>\n        <p>\n         <strong>\n          <a href=\"http://www.pespin.com/\" rel=\"noreferrer\">\n           BugDbg x64 v0.7.5\n          </a>\n         </strong>\n         \n\n         BugDbg x64 is a user-land debugger designed to debug native 64-bit applications.\n  BugDbg is released as Freeware.\n        </p>\n       </blockquote>\n       <p>\n        <p>\n        </p>\n        <blockquote>\n         <p>\n          <strong>\n           <a href=\"http://www.ragestorm.net/distorm/\" rel=\"noreferrer\">\n            distorm3\n           </a>\n          </strong>\n          \n\n          A lightweight, Easy-to-Use and Fast Disassembler/Decomposer Library for x86/AMD64\n         </p>\n        </blockquote>\n        <p>\n         <p>\n         </p>\n         <blockquote>\n          <p>\n           <strong>\n            <a href=\"http://udis86.sourceforge.net/\" rel=\"noreferrer\">\n             Udis86\n            </a>\n           </strong>\n           \n\n           Udis86 is an easy-to-use, minimalistic disassembler library (libudis86) for the x86 class of instruction set architectures. It has a convenient interface for use in the analysis and instrumentation of binary code.\n          </p>\n         </blockquote>\n         <p>\n          <p>\n          </p>\n          <blockquote>\n           <p>\n            <strong>\n             <a href=\"http://www.beaengine.org/\" rel=\"noreferrer\">\n              BeaEngine\n             </a>\n            </strong>\n            \n\n            This project is a package with a multi-platform x86 and x64 disassembler library (Solaris, MAC OSX, AIX, Irix, OS/2, Linux, Windows)\n           </p>\n          </blockquote>\n          <p>\n           <p>\n           </p>\n           <blockquote>\n            <p>\n             <strong>\n              <a href=\"http://www.c4decompiler.com/\" rel=\"noreferrer\">\n               C4 Decompiler\n              </a>\n             </strong>\n            </p>\n            <ul>\n             <li>\n              General Machine Code to C Decompiler\n             </li>\n             <li>\n              Free Windows I64 target edition\n             </li>\n             <li>\n              Interactive Windows GUI\n             </li>\n            </ul>\n           </blockquote>\n           <p>\n            <p>\n            </p>\n            <blockquote>\n             <p>\n              <strong>\n               <a href=\"http://www.backerstreet.com/rec/rec.htm\" rel=\"noreferrer\">\n                REC Studio 4 - Reverse Engineering Compiler\n               </a>\n              </strong>\n              \n\n              REC Studio is an interactive decompiler.\n  It reads a Windows, Linux, Mac OS X or raw executable file, and attempts to produce a C-like representation of the code and data used to build the executable file. \n  It has been designed to read files produced for many different targets, and it has been compiled on several host systems.\n             </p>\n            </blockquote>\n            <p>\n             <p>\n             </p>\n             <blockquote>\n              <p>\n               <strong>\n                <a href=\"https://retdec.com/\" rel=\"noreferrer\">\n                 Retargetable Decompiler\n                </a>\n               </strong>\n               \n\n               A retargetable decompiler that can be utilized for source code recovery, static malware analysis, etc. The decompiler is supposed to be not bounded to any particular target architecture, operating system, or executable file format.\n              </p>\n             </blockquote>\n             <p>\n              <p>\n              </p>\n              <blockquote>\n               <p>\n                <strong>\n                 <a href=\"https://code.google.com/p/miasm/\" rel=\"noreferrer\">\n                  miasm\n                 </a>\n                </strong>\n                \n\n                Miasm is a a free and open source (GPLv2) reverse engineering framework written in python. Miasm aims at analyzing/modifying/generating binary programs.\n               </p>\n              </blockquote>\n              <p>\n               <p>\n               </p>\n               <blockquote>\n                <p>\n                 <strong>\n                  <a href=\"http://fcml-lib.com/index.html\" rel=\"noreferrer\">\n                   Free Code Manipulation Library\n                  </a>\n                 </strong>\n                 \n\n                 This is a general purpose machine code manipulation library for IA-32 and Intel 64 architectures. The library supports UNIX-like systems as well as Windows and is highly portable.\n                </p>\n               </blockquote>\n               <p>\n                <p>\n                </p>\n                <blockquote>\n                 <p>\n                  <strong>\n                   <a href=\"https://software.intel.com/en-us/articles/xed-x86-encoder-decoder-software-library\" rel=\"noreferrer\">\n                    Intel® X86 Encoder Decoder Software Library\n                   </a>\n                  </strong>\n                  \n\n                  Intel® XED is a software library (and associated headers) for encoding and decoding X86 (IA32 and Intel64) instructions.\n                 </p>\n                </blockquote>\n                <p>\n                 <p>\n                 </p>\n                 <blockquote>\n                  <p>\n                   <strong>\n                    <a href=\"http://angr.io/\" rel=\"noreferrer\">\n                     angr\n                    </a>\n                   </strong>\n                   \n\n                   angr is a framework for analyzing binaries. It focuses on both static and dynamic symbolic (\"concolic\") analysis, making it applicable to a variety of tasks.\n                  </p>\n                 </blockquote>\n                 <p>\n                  <p>\n                  </p>\n                  <blockquote>\n                   <p>\n                    <strong>\n                     <a href=\"https://www.pnfsoftware.com/jeb2/\" rel=\"noreferrer\">\n                      JEB Decompiler\n                     </a>\n                    </strong>\n                    \n\n                    JEB is a reverse-engineering platform to perform disassembly, decompilation, debugging, and analysis of code and document files, manually or as part of an analysis pipeline.\n                   </p>\n                  </blockquote>\n                  <p>\n                   <p>\n                   </p>\n                   <blockquote>\n                    <p>\n                     <strong>\n                      <a href=\"https://github.com/radareorg/cutter\" rel=\"noreferrer\">\n                       Cutter\n                      </a>\n                     </strong>\n                     \n\n                     A Qt and C++ GUI for radare2 reverse engineering framework (originally Iaito). Cutter is not aimed at existing radare2 users. It instead focuses on those whose are not yet radare2 users because of the learning curve, because they don't like CLI applications or because of the difficulty/instability of radare2.\n                    </p>\n                   </blockquote>\n                   <p>\n                    <p>\n                    </p>\n                    <blockquote>\n                     <p>\n                      <strong>\n                       <a href=\"https://github.com/REDasmOrg/REDasm\" rel=\"noreferrer\">\n                        REDasm\n                       </a>\n                      </strong>\n                      \n\n                      REDasm is an interactive, multiarchitecture disassembler written in C++ using Qt5 as UI Framework. Its core is light and simple, it can be extended in order to support new instruction sets and file formats.\n                     </p>\n                    </blockquote>\n                   </p>\n                  </p>\n                 </p>\n                </p>\n               </p>\n              </p>\n             </p>\n            </p>\n           </p>\n          </p>\n         </p>\n        </p>\n       </p>\n      </p>\n     </p>\n    </p>\n   </p>\n  </p>\n </p>\n</div>\n</body></html>",
            "votes": "55",
            "user": "0xec",
            "time": "Feb 2, 2019 at 7:22",
            "is_accepted": false,
            "comments": [
                {
                    "user": "ZAB",
                    "text": "<span class=\"comment-copy\">as far as I know W32Dasm development was stopped in 1997 and the last version is 8.9</span>",
                    "time": null
                },
                {
                    "user": "John Källén",
                    "text": "<span class=\"comment-copy\">The <code>Decompiler</code> project on Sourceforge is now called <code>Reko</code> and is hosted on GitHub.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"https://github.com/joelpx/reverse\" rel=\"noreferrer\">\n   Reverse\n  </a>\n  - Reverse engineering tool for x86/ARM/MIPS. Generates indented pseudo-C with colored syntax code.\n  <a href=\"https://i.sstatic.net/PndQh.png\" rel=\"noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/PndQh.png\"/>\n  </a>\n </p>\n <p>\n  <a href=\"http://www.decompilation.info/\" rel=\"noreferrer\">\n   SmartDec\n  </a>\n  (aka\n  <a href=\"https://derevenets.com/\" rel=\"noreferrer\">\n   Snowman\n  </a>\n  ) is a native code to C/C++\n  <strong>\n   decompiler\n  </strong>\n  . Supports PE and ELF (both 32 and 64bit) also has plugin modules for IDA (6.1, 6.4, 6.5).\n </p>\n <p>\n  <img alt=\"Decompiler example.\" src=\"https://i.sstatic.net/ubvGP.png\"/>\n </p>\n <p>\n  Currently supports Intel x86 and x86-x64 architectures. C++ reconstruction supports the 32-bit ABI used by MSVC compiler under Windows.\n </p>\n <p>\n  <img alt=\"Structures.\" src=\"https://i.sstatic.net/PrGgm.png\"/>\n </p>\n <p>\n  C reconstruction is generic and can be used on a code produced by virtually any compiler for x86 and x86-x64 architectures.\n </p>\n <p>\n  <a href=\"https://github.com/yegord/snowman\" rel=\"noreferrer\">\n   Github repo can be found here.\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "27",
            "user": "Dominik Antal",
            "time": "Dec 8, 2015 at 6:15",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Laurie Stearn",
                    "text": "<span class=\"comment-copy\">Ida Free doesn't appear to <a href=\"https://reverseengineering.stackexchange.com/a/17640/23872\">support plugins</a> although there is <a href=\"https://github.com/yegord/snowman/issues/158\" rel=\"nofollow noreferrer\">hope</a>, in the meantime Snowman might be better used as standalone.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Another framework to check out is\n  <a href=\"http://visi.kenshoto.com/viki/MainPage\">\n   Vdb and Vivisect\n  </a>\n </p>\n <ul>\n  <li>\n   Vdb - Python based debugger and programatic debugging API\n   <ul>\n    <li>\n     VdbTargetVMWare32 - Kernel debugging using the vmware hypervisor\n    </li>\n    <li>\n     VdbOnAndroid - Using vdb to debug android processes\n    </li>\n   </ul>\n  </li>\n  <li>\n   Vivisect - Python based static analysis and emulation framework\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "26",
            "user": "Ange",
            "time": "Apr 21, 2013 at 16:46",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"https://www.relyze.com/overview.html\" rel=\"nofollow noreferrer\">\n   <strong>\n    Relyze\n   </strong>\n  </a>\n  is a commercial interactive disassembler for x86, x64 and ARM software with loaders for PE or ELF file formats. It supports interactive flat and graph views of the disassembly, generating call and reference graphs, binary diffing two executables, exploring the  executable file's structure and a Ruby plugin API. It can also handle things like symbols (PDB's), function local variables, switch statements, exception handlers, static library identification and more.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/kniPL.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/kniPL.png\"/>\n  </a>\n </p>\n <hr/>\n <p>\n  <a href=\"https://github.com/wisk/medusa\" rel=\"nofollow noreferrer\">\n   <strong>\n    Medusa\n   </strong>\n  </a>\n  is an open source disassembler with x86, x64, z80 and partial ARM support. It runs on Windows and Linux. It has interactive flat and graph views.\n </p>\n <p>\n  <img alt=\"enter image description here\" src=\"https://i.sstatic.net/7aLEF.png\"/>\n </p>\n</div>\n</body></html>",
            "votes": "16",
            "user": "QAZ",
            "time": "Aug 7, 2017 at 15:20",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  On of my favorite alternatives to IDA is\n  <a href=\"http://hte.sourceforge.net/\">\n   HT Editor\n  </a>\n  .\n </p>\n <p>\n  I've used it on x86 and x64 binaries and java class files. I think it has support for many other architectures/bytecode. It is cross platform and has some nice features.\n </p>\n</div>\n</body></html>",
            "votes": "15",
            "user": "mikeazo",
            "time": "Apr 26, 2013 at 14:40",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Sourcer\n  <a href=\"https://web.archive.org/web/20130805003617/http://users.tbc.net/%7Eclive/vcomwinp.html\" rel=\"nofollow noreferrer\">\n   (archived website at archive.org)\n  </a>\n  was quite awesome, but I'm not sure it's what you need.\n </p>\n</div>\n</body></html>",
            "votes": "15",
            "user": "Ange",
            "time": "Apr 5, 2023 at 15:18",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">indeed it <i>was</i> good during its time and I kept the manual for years because it had this very nice opcode table (similar what you offer on your website) - until one of my colleagues ended up losing it :-|</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"http://www.arkdasm.com/\">\n   ArkDasm\n  </a>\n  is a 64-bit interactive disassembler. Supported file types: PE64, raw binary files.  Its currently in alpha stage but works well.\n </p>\n</div>\n</body></html>",
            "votes": "12",
            "user": "MaxQ",
            "time": "Oct 4, 2013 at 10:17",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Just for completeness: one more disassembler,\n  <a href=\"https://binary.ninja/\">\n   Binary Ninja\n  </a>\n  :\n </p>\n <p>\n  As for now (9/26/2016) it has the following properties:\n </p>\n <ul>\n  <li>\n   Commercial ($99 as introductory price for personal use license)\n  </li>\n  <li>\n   Handles x86, x64, ARMv7-8, MIPS and 6502 architectures\n  </li>\n  <li>\n   Works on Linux, Mac OsX and Windows\n  </li>\n  <li>\n   Supports PE/COFF, ELF, .NES and Mach-O\n  </li>\n  <li>\n   Has python API\n  </li>\n  <li>\n   Has Undo\n  </li>\n  <li>\n   Has IL\n  </li>\n  <li>\n   Has a lot of other cool features\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "11",
            "user": "w s",
            "time": "Sep 26, 2016 at 7:18",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have been using\n  <a href=\"http://www.hopperapp.com/\">\n   Hopper\n  </a>\n  recently, and while it is not up to the level IDA is, it's really surprisingly sophisticated, particularly considering what it costs. Its main platform is OS X, but there are versions available for Linux and Windows as well. The OS X version also has some gdb integration, so you can use it as a debugger.\n </p>\n</div>\n</body></html>",
            "votes": "10",
            "user": "Brendan Dolan-Gavitt",
            "time": "Apr 17, 2013 at 1:21",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Have you checked out the open-source\n  <a href=\"http://metasm.cr0.org\">\n   Metasm framework\n  </a>\n  ? It is a ruby framework for assembly manipulation, and can compete with IDA's static analysis capabilities. It has a graph view, can do disassembly/decompilation on x86/64, MIPS, and PPC and supports a couple of executable file formats.\n </p>\n <p>\n  I believe it has also been integrated into\n  <a href=\"http://www.metasploit.com/\">\n   Metasploit\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "9",
            "user": "0xC0000022L",
            "time": "Apr 17, 2013 at 16:51",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I would also add\n </p>\n <p>\n  <a href=\"http://www.smidgeonsoft.prohosting.com/pebrowse-pro-file-viewer.html\">\n   PEBrowse64 Professional\n  </a>\n </p>\n <blockquote>\n  <p>\n   With the PEBrowse disassembler, one can open and examine any\n  executable without the need to have it loaded as part of an active\n  process with a debugger.  Applications, system DLLs, device-drivers\n  and Microsoft .NET assemblies are all candidates for offline analysis\n  using either PEBrowse programs.  The information is organized in a\n  convenient treeview index with the major divisions of the PE file\n  displayed as nodes.  In most cases selecting nodes will enable\n  context-sensitive multiple view menu options, including binary dump,\n  section detail, disassembly and structure options as well as\n  displaying sub-items, such as optional header directory entries or\n  exported functions, that can be found as part of a PE file unit. \n  Several table displays, hex/ASCII equivalents, window messages and\n  error codes, as well as a calculator and scratchpads are accessible\n  from the main menu (calculator, messages and codes in PEBrowse\n  Professional only).\n  </p>\n </blockquote>\n <p>\n  This is an awesome tool with a lot of useful feature regarding executable analysis and there is also a version that could be used and an interactive debugger.\n </p>\n</div>\n</body></html>",
            "votes": "9",
            "user": "PhoeniX",
            "time": "Sep 11, 2013 at 14:52",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"http://www.onlinedisassembler.com/odaweb/\">\n   ODA\n  </a>\n  (the Online Disassembler) supports a myriad of architectures and provides a basic feature set.  You can enter binary data in the Live View and watch the disassembly appear as you type, or you can upload a file to disassemble.  A nice feature of this site is that you can share the link to the disassembly with others.\n </p>\n <p>\n  <a href=\"http://www.onlinedisassembler.com\">\n   http://www.onlinedisassembler.com\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "9",
            "user": "user711461",
            "time": "Sep 29, 2013 at 2:14",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"https://github.com/pfalcon/ScratchABit\" rel=\"nofollow noreferrer\">\n   ScratchABit\n  </a>\n  is an open-source, interactive, incremental, direct-manipulation(*) disassembler with IDAPython-compatible API, allowing reuse of multitude of the plugins developed by the community. ScratchABit stores program state in text files, allowing for easy information reuse and interfacing with other applications and scripts, or tracking history and working collaboratively using version control systems, and minimizing risk of database corruption and recovery efforts.\n </p>\n <p>\n  Full disclosure: I'm the author of ScratchABit and it is a work-in-progress project.\n </p>\n <p>\n  (*) Direct manipulation means that you press a command key and immediately get a reaction, you don't need to type long commands with manually specified addresses and parameters and press Enter.\n </p>\n <p>\n  <img alt=\"ScratchABit screenshot\" src=\"https://i.sstatic.net/ih5Ds.png\"/>\n </p>\n</div>\n</body></html>",
            "votes": "8",
            "user": "pfalcon",
            "time": "Dec 26, 2017 at 10:57",
            "is_accepted": false,
            "comments": [
                {
                    "user": "pfalcon",
                    "text": "<span class=\"comment-copy\">ScratchABit 1.0 was released recently, which means it's now at the state I wish some other project were instead, saving me from writing ScatchABit - both useful and functional already, and giving good base for further hacking and experimentation.</span>",
                    "time": null
                },
                {
                    "user": "pfalcon",
                    "text": "<span class=\"comment-copy\">The latest is 1.8: <a href=\"https://github.com/pfalcon/ScratchABit/releases/tag/v1.8\" rel=\"nofollow noreferrer\">github.com/pfalcon/ScratchABit/releases/tag/v1.8</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The first tool that comes to mind is\n  <a href=\"http://www.hopperapp.com/\">\n   Hopper\n  </a>\n  , which is no longer tied to OSX.  It has some debugging support(at least on OSX), but focuses on static analysis, which seems like what you're looking for.\n </p>\n <p>\n  It has the ability to break basic blocks into a control flow graph, rudimentary decompilation support, and you can rename functions as you make sense of them.  Perhaps someone who uses it instead of IDA will chime in with a better comparison, I've only played around briefly.\n </p>\n <p>\n  Also, IDA's free version is rather capable and worth a look if you haven't tried it.\n </p>\n</div>\n</body></html>",
            "votes": "7",
            "user": "dingo_kinznerhook",
            "time": "Apr 17, 2013 at 21:44",
            "is_accepted": false,
            "comments": []
        }
    ]
}