{
    "title": "Android game reverse http request body",
    "link": "https://reverseengineering.stackexchange.com/questions/31619/android-game-reverse-http-request-body",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to reverse request that are made to an android game to learn more about how it works.\n </p>\n <p>\n  I was able to find endpoints requests that are made with frida and mitmproxy but now I'm stuck because the body of requests looks like encoded and I don't know what to do next.\n </p>\n <p>\n  Example of request I got with mitmproxy :\n </p>\n <pre><code>Request:\n\nPOST /v1/game/heartbeat HTTP/1.1\nContent-Type: application/x-protobuf\nAccept: application/x-protobuf\nSign: V6E0BcEySdvhWka8qqronw==\nTimestamp: 1677850264960\nOffset: 576384618343\nToken: ***\nAccept-Encoding: gzip, deflate, br\nVersion: 2.0.31.248\nUser-Agent: Dalvik/2.1.0 (Linux; U; Android 7.1.1; ONEPLUS A5000 Build/NMF26X)\nHost: ****\nConnection: Keep-Alive\nCookie: AWSALB=*** AWSALBCORS=***\nContent-Length: 76\n\nWWVUPUYlVg5DfGkmJnUtGGcuUW5cfAABRGgiJSMocw1kegE9QnNcc0s2Vks+bidScXcSGx9mGw==\n\nResponse:\n\nHTTP/1.1 200 OK\nContent-Type: application/x-protobuf;charset=UTF-8\nContent-Length: 12\nConnection: keep-alive\nDate: Fri, 03 Mar 2023 13:31:05 GMT\nSet-Cookie: AWSALB=***\nSet-Cookie: AWSALBCORS=***\nToken: ***\nSign: /n0stA/UOCtSC0BfFDjjvg==\nX-Protobuf-Schema: GameLogicProto.proto\nX-Protobuf-Message: api.HeartBeatResponse\nrequestId: 3c2b5566-f863-4390-af82-6aad9551eefb\nOffset: 576384618343\nX-Cache: Miss from cloudfront\nVia: 1.1 ***.cloudfront.net (CloudFront)\nX-Amz-Cf-Pop: CDG52-P1\nAlt-Svc: h3=\":443\"; ma=86400\nX-Amz-Cf-Id: LzO0HrZLu5BkCUfBFEjVfosNnkd2ViDHeFjgkf5Unq0buIoMnVTT_A==\n\nS6q888yuVhkn\n</code></pre>\n <p>\n  It looks like body of request are base64 encoded obviously but I can't do anything with decoded body. I think I have to do something with protobuf but I'm a bit lost here.\n </p>\n <p>\n  Someone know what I can do next ? Or a lead to follow ?\n </p>\n <p>\n  Thanks and have a nice day !\n </p>\n <p>\n  Edit: Title typo\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "106",
    "tags": [
        "android",
        "encodings"
    ],
    "user": "Florent Trust",
    "time": "Mar 3, 2023 at 14:08",
    "comments": [
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n A base64 encode protobuf request is a bit strange. Are you sure the base64 encoding does not come from the used proxy export script? I am not sure if mitmproxy now support protobuf, the last time when I encountered protobuf messages Charles proxy was very helpful as it contains integrated Protpbuf decode and the ability to load (self made) protobuf definition files which allows to define the field names and often also the structure.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n Besides that I would search in the app for the message classes that are serialized from/to protobuf. If you are lucky they are not or only partially obfuscated and contain the field names.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Florent Trust",
            "text": "<html><body><span class=\"comment-copy\">\n @Robert Thanks for your answer !  I've tried Charles too but I've the same body from both. Right now I've decompiled the apk with jadx and I've find that there is some proto file in .luac format. So now I'm looking to find how to decompile compiled lua ahah  Thanks for your help\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}