{
    "title": "Given a ROM dump file, how do I reverse engineer it to determine the CPU it runs on?",
    "link": "https://reverseengineering.stackexchange.com/questions/15277/given-a-rom-dump-file-how-do-i-reverse-engineer-it-to-determine-the-cpu-it-runs",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I recently bought a Sharp EL-9950 graphing calculator (which is considerably rare compared to the other brands). I have a copy of its OS upgrade file, which is essentially ROM dump for the new version (or at least I think it is).\n </p>\n <p>\n  I searched everywhere, but I couldn't find any info about the hardware of this calculator, and it was too expensive for me to try opening its case.\n </p>\n <p>\n  How do I go about reverse engineering the ROM dump (exactly 1MB) to determine at least which instruction set it uses (so I can format it with my own ROM someday, I guess?)\n </p>\n <p>\n  Thanks!\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "486",
    "tags": [
        "rom"
    ],
    "user": "Kyle Alexander Buan",
    "time": "May 4, 2017 at 5:41",
    "comments": [
        {
            "user": "ratchet freak",
            "text": "<html><body><span class=\"comment-copy\">\n try to disassemble the binary using various disassemblers and if the \"program\" that comes out of it is nonsense then it's not a rom for that cpu.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "perror",
            "text": "<html><body><span class=\"comment-copy\">\n Have you tried\n <code>\n  binwalk --opcodes\n </code>\n ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Kyle Alexander Buan",
            "text": "<html><body><span class=\"comment-copy\">\n ratchet: Yes, I tried to disassemble it as ARM and others but sorry, it was to no avail. perror: Thanks, I will try it right now.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Kyle Alexander Buan",
            "text": "<html><body><span class=\"comment-copy\">\n Sorry, but binwalk does not give ANY result. I ran it in Ubuntu. --opcodes gives literally nothing.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  My low-tech approach has been to build a list of n-grams (n=3,4,5,6) and look for the most common sequences in a corpus of samples for different architectures (if you happen to have one).\n </p>\n <p>\n  Sometimes even searching on Google for the hex byte sequence can give some hints.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Igor Skochinsky",
            "time": "May 4, 2017 at 13:24",
            "is_accepted": false,
            "comments": []
        }
    ]
}