{
    "title": "Setting a breakpoint on a shared library's decompiled exported function, and making Ghidra actually stop on that function when debugging a client code",
    "link": "https://reverseengineering.stackexchange.com/questions/31308/setting-a-breakpoint-on-a-shared-librarys-decompiled-exported-function-and-mak",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am very new to Ghidra, so please accept my apologies if my question sounds too simple. Despite the poor quality of the Internet in my country, I tried my best to find an answer online before asking but I could not find much.\n </p>\n <p>\n  Imagine we have a Linux shared object named\n  <code>\n   CustLib.so\n  </code>\n  , that exports one single function named\n  <code>\n   Func\n  </code>\n  .\n </p>\n <p>\n  Furthermore, imagine a program (let's call it\n  <code>\n   ClientProg\n  </code>\n  ) imports\n  <code>\n   Func\n  </code>\n  from\n  <code>\n   CustLib.so\n  </code>\n  and calls it from its\n  <code>\n   main\n  </code>\n  .\n </p>\n <p>\n  What I have been trying to do with Ghidra is:\n </p>\n <ol>\n  <li>\n   <p>\n    Load\n    <code>\n     CustLib.so\n    </code>\n    into Ghidra, Analyze it, and put a breakpoint somewhere within the decompiled code pertaining to\n    <code>\n     Func\n    </code>\n    .\n   </p>\n  </li>\n  <li>\n   <p>\n    Load\n    <code>\n     ClientProg\n    </code>\n    into Ghidra, Analyze it, and start it in the Debugger.\n   </p>\n  </li>\n  <li>\n   <p>\n    Wait until\n    <code>\n     ClientProg\n    </code>\n    calls\n    <code>\n     Func\n    </code>\n    , at which point I expect Ghidra to break on the breakpoint I had previously set at\n    <code>\n     Func\n    </code>\n    .\n   </p>\n  </li>\n </ol>\n <p>\n  To my surprise, the last step above never happens.\n  <code>\n   ClientProg\n  </code>\n  runs from start to completion (in GDB IN-VM mode), without ever breaking on\n  <code>\n   Func\n  </code>\n  .\n </p>\n <p>\n  Could I ask whether I am actually missing something? Or am I expecting an unsupported functionality? Many thanks.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "345",
    "tags": [
        "ghidra",
        "linux"
    ],
    "user": "ElenaKarimi",
    "time": "Dec 25, 2022 at 14:09",
    "comments": [
        {
            "user": "raspiduino",
            "text": "<html><body><span class=\"comment-copy\">\n I don't think it will work like that. If you put a run\n <code>\n  ClientProg\n </code>\n in Ghidra, only breakpoints in\n <code>\n  ClientProg\n </code>\n will hit, not\n <code>\n  CustLib.so\n </code>\n . Instead, you should do something like start debugging the\n <code>\n  .so\n </code>\n but with the application path (not the file path) pointing to\n <code>\n  ClientProg\n </code>\n , so\n <code>\n  ClientProg\n </code>\n can be started and\n <code>\n  CustLib.so\n </code>\n will be debugged. I don't know how to do this in Ghidra (due to my lack experiences with Ghidra), but that is how I would do in IDA\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "ElenaKarimi",
            "text": "<html><body><span class=\"comment-copy\">\n Thanks a lot! @raspiduino\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}