{
    "title": "Understanding AutoIT \"compilation\"",
    "link": "https://reverseengineering.stackexchange.com/questions/15763/understanding-autoit-compilation",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to de-compile a cheat created for my game so I can fix it. The problem is the version used is 3.3.14.2 which no longer has official de-compiler support.\n </p>\n <p>\n  I have tried looking for 3rd party de-compilers but none of them worked for me. I've read somewhere that the\n  <code>\n   .exe\n  </code>\n  generated by AutoIT is just an embedded interpreter for AutoIT and the script source code but obfuscated.\n </p>\n <p>\n  Does anyone know how it is compiled so I can use OllyDBG to try and de-obfuscate the script?\n </p>\n <p>\n  Of-course the\n  <code>\n   .exe\n  </code>\n  is packed with UPX but can easily be unpacked. So the only problem is script obfuscation. (If my understanding is correct)\n </p>\n <p>\n  I've tried dumping the application memory but didn't find any readable script there. I've also used OllyDBG to run the application but it gave me the error\n  <code>\n   This is a third-party compiled AutoIt script\n  </code>\n  . Bit confused why but attaching to the running application works okay.\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ollydbg",
        "decompilation",
        "deobfuscation"
    ],
    "user": "majidarif",
    "time": "Jul 5, 2017 at 2:37",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n wow autoit decompiling faq has a very aggressive stance block block ban ban just for even pronouncing dexxxxxxx. if they are actively preventing  the action then i think your luck is your only hope  ( sorry i havent used autoit just googled why you cant use an old version and read the tidbits )\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user22970",
            "text": "<html><body><span class=\"comment-copy\">\n You should know that preventing cheats on client side is nearly impossible. everything you can do, they can simply not run, patch out, evade and so on\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "majidarif",
            "text": "<html><body><span class=\"comment-copy\">\n @Amirag I’m not trying to prevent cheats from the client side. I’m trying to understand how they are doing it so I can fix it on the server side. To understand it properly I need to see how the cheating prog works.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It may call\n  <code>\n   IsDebuggerPresent\n  </code>\n  to check if you're debugging it, so you can't just  create that process by OD, maybe Attach could work. There's another way,\nfind the condition and set clear\n  <code>\n   eax\n  </code>\n  to make it use the other branch.\n </p>\n</div>\n</body></html>",
            "votes": "-1",
            "user": "0xC0000022L",
            "time": "Aug 2, 2018 at 6:48",
            "is_accepted": false,
            "comments": []
        }
    ]
}