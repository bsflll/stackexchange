{
    "title": "Loading 8051 binary to IDA with ROM+External RAM configuration",
    "link": "https://reverseengineering.stackexchange.com/questions/22168/loading-8051-binary-to-ida-with-romexternal-ram-configuration",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have 8051 firmware file, in 8051 ROM addresses can overlap external RAM addresses(movc and movx solve this issue), however IDA doesn't allow overlapping addresses:\n  <a href=\"https://i.sstatic.net/sciwk.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/sciwk.png\"/>\n  </a>\n </p>\n <p>\n  In this example the ROM size is 0x7000 and external RAM size is 0xFFFF.\n </p>\n <p>\n  I need the external RAM addresses so I can rename certain addresses, How it is possible to solve this issue?\n </p>\n <p>\n  Thanks.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ida",
        "firmware",
        "intel",
        "rom",
        "8051"
    ],
    "user": "Kinetics332",
    "time": "Jan 15, 2020 at 15:18",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The default dialog you’re seeing uses so-called “\n  <a href=\"https://www.hex-rays.com/products/ida/support/idadoc/508.shtml\" rel=\"nofollow noreferrer\">\n   linear addresses”\n  </a>\n  which are global for the whole program and can  not intersect. It is mostly useful for processors with unified (Von Neumann) address space.\n </p>\n <p>\n  Since 8051 is a Harvard architecture with separate code and data memories, each one starting at zero, IDA emulates it by creating non-intersecting segments in the linear address space but setting up the segment\n  <em>\n   base\n  </em>\n  in such a way that the apparent addresses inside the data segment also start at 0. You can check how it’s done by dismissing this dialog and letting the default 8051 handling do its job. In a similar manner you can\n  <a href=\"https://www.hex-rays.com/products/ida/support/idadoc/511.shtml\" rel=\"nofollow noreferrer\">\n   create a custom segment\n  </a>\n  for the XRAM address space. Once this is done, to specify that a value(e.g. an instruction opearand) is an offset in a specific segment, you can use these shortcuts:\n </p>\n <ul>\n  <li>\n   Data segment: O\n  </li>\n  <li>\n   code segment(actually “current segment”): Ctrl-O\n  </li>\n  <li>\n   any another segment: Alt-R\n  </li>\n </ul>\n <p>\n  These commands are available in the Edit|Operand types|Offset submenu.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Igor Skochinsky",
            "time": "Sep 27, 2019 at 21:37",
            "is_accepted": false,
            "comments": []
        }
    ]
}