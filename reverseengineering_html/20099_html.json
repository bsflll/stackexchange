{
    "title": "IDA SDK: How to add a struct (pointer) field to a struct?",
    "link": "https://reverseengineering.stackexchange.com/questions/20099/ida-sdk-how-to-add-a-struct-pointer-field-to-a-struct",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm new to the IDA 7.0 SDK, trying to automate creating structs to represent a C++ (MSVC) class in IDA with a plugin. For this, I create 3 structs as follows:\n </p>\n <pre><code>00000000 SomeClass struc\n00000000 __vftable dd ?  ; SomeClass_vtbl*\n00000004 __members SomeClass_members ?\n00000084 SomeClass ends\n00000084\n00000000 ; ---------------------------------------------------------------------------\n00000000\n00000000 SomeClass_vtbl struc\n00000000 ; ... several function pointers ....\n00000048 SomeClass_vtbl ends\n00000048\n00000000 ; ---------------------------------------------------------------------------\n00000000\n00000000 SomeClass_members struc\n00000000 ; ... some members ....\n00000020 SomeClass_members ends\n</code></pre>\n <p>\n  Creating the structs works fine, but I have trouble defining the 2 fields in\n  <code>\n   SomeClass\n  </code>\n  :\n </p>\n <ul>\n  <li>\n   the pointer to\n   <code>\n    SomeClass_vtbl\n   </code>\n   for the first field, and\n  </li>\n  <li>\n   referencing\n   <code>\n    SomeClass_members\n   </code>\n   for the second field.\n  </li>\n </ul>\n <p>\n  Not finding a sample in the SDK on how to define structs detailedly programmatically (is there one?), I checked the raw documentation and found\n  <code>\n   add_struct_member\n  </code>\n  to be doing what I want to do, using it as follows:\n </p>\n <pre><code>#include <bytes.hpp>\n// ... other typical IDA SDK includes ...\n\nbool idaapi run(size_t arg)\n{\n    qstring className = \"SomeClass\";\n\n    // Create the structs.\n    tid_t classType = add_struc(BADADDR, className.c_str());\n    tid_t vftableType = add_struc(BADADDR, (className + \"_vtbl\").c_str());\n    tid_t membersType = add_struc(BADADDR, (className + \"_members\").c_str());\n    struc_t* classStruct = get_struc(classType);\n    struc_t* vftableStruct = get_struc(vftableType);\n    struc_t* membersStruct = get_struc(membersType);\n\n    // Create vftable field.\n    opinfo_t vftableField{ vftableStruct->id };\n    add_struc_member(classStruct, \"__vftable\", 0, FF_STRUCT, &vftableField, 4);\n\n    // Create members field.\n    opinfo_t membersField{ membersStruct->id };\n    add_struc_member(classStruct, \"__members\", 4, FF_STRUCT, &membersField, 4);\n\n    return true;\n}\n</code></pre>\n <p>\n  I'm not sure if setting the types of those struct fields like this is the right way to go:\n </p>\n <ul>\n  <li>\n   <code>\n    FF_*\n   </code>\n   #defines from\n   <code>\n    bytes.hpp\n   </code>\n   are not found by my compiler, even though I included that header right at the start in the only main.cpp file in my project (and they appear in IntelliSense...).\n  </li>\n  <li>\n   Even if I could use those #defines now, I did not see how that would allow me to differentiate between a pointer to a struct or simply referencing a struct.\n  </li>\n  <li>\n   After all, I'm not even sure if using the\n   <code>\n    FF_*\n   </code>\n   #defines for the\n   <code>\n    flag\n   </code>\n   parameter of\n   <code>\n    add_struc_member\n   </code>\n   is correct; the documentation only states \"type + representation bits\".\n  </li>\n </ul>\n <p>\n  So, dumbly asked, ignoring my probably faulty tries above, what are the methods to set known types of struct fields?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "841",
    "tags": [
        "ida",
        "idapro-sdk"
    ],
    "user": "Ray",
    "time": "Dec 10, 2018 at 7:32",
    "comments": [
        {
            "user": "Biswapriyo",
            "text": "<html><body><span class=\"comment-copy\">\n Are you making a plug-in for IDA? There is an alternative way to convert/visualise vtable into struct using simple header file without IDA SDK.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Ray",
            "text": "<html><body><span class=\"comment-copy\">\n @Biswapriyo Yeah, it should be part of a C++ plugin later on. I clarified the text.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}