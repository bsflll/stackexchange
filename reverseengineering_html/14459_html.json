{
    "title": "Handling of the communication data I received with PySerial (Python)",
    "link": "https://reverseengineering.stackexchange.com/questions/14459/handling-of-the-communication-data-i-received-with-pyserial-python",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In a nutshell:  I've sniffed the data that goes from the controlling PC to the modem via RS232 serial port by building a little Y-adapter, now I want to figure out how to reverse engineer that data so that I can have full access to the device. My approach is to do one operation at a time and look for a pattern in the incoming data.\n </p>\n <p>\n  However, I have some problems with the code I received by using PySerial in Python. I hope you can help me. Here is an example for one single operation:\n </p>\n <p>\n  <code>\n   b'_S\\xf0\\xfb\\x15\\xf5_S\\xf0S%\\xc5_S\\xf0\\x1bY\\xf7_S\\xf0\\xda\\xd1\\xf7_S\\xf0_=\\xf3'\n  </code>\n  (marked as byte string by the 'b')\n </p>\n <p>\n  Or sorted as 'question' and 'answer': data sent by DTE (left) and DCE (right)\n </p>\n <pre><code>    DTE (PC)  DCE (modem)\n    _S\\xf0    \\xfb\\x15\\xf5 \n    _S\\xf0    S%\\xc5 \n    _S\\xf0    \\x1bY\\xf7 \n    _S\\xf0    \\xda\\xd1\\xf7 \n    _S\\xf0    _=\\xf3 \n</code></pre>\n <p>\n  As you can see some of it is hexadecimal code (marked by the '/x')- some of it is not. I tried to understand it for quite some time now, but I'm still not sure if this is really the raw code or Python has to convert some of it to ASCII on order to be able to show it to me (like the '_S' letters).\n </p>\n <p>\n  I need to know this because as a next step I want my Python script to act as the new controlling PC. For this I want to use the\n  <code>\n   serial.write\n  </code>\n  -command of PySerial. It seems that it doesn't work to just send the string I received. Maybe I made some other mistake but my question remains: is this the raw code the device sends and receives? Or do I have to convert it some other way?\n </p>\n <p>\n  Thanks in advance.\nTobi\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "637",
    "tags": [
        "python",
        "serial-communication"
    ],
    "user": "Tobitobitobi",
    "time": "Jan 20, 2017 at 9:44",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I would just put this as a comment but I don't have enough rep yet.\nYes your correct, Python is showing some characters as their ASCII representations. The ones marked as hexadecimal are the characters that don't have a printable ASCII representation. Using that string as-is should work fine to send with\n  <code>\n   write\n  </code>\n  .\n </p>\n <p>\n  EDIT: maybe I don't quite understand but if you want to mimic the controlling PC (or the modem for that matter) you only want to send half of the data you have sniffed to the other device (i.e the \"question\"s or DTE (whatever that means)). Sending all data sniffed to a single device would likely end in confusion.\n </p>\n <p>\n  EDIT#2: From your comment, it seems as though you are unsure of how binary data (i.e. data consisting of mostly non-printable characters) can be represented in strings:\n </p>\n <pre><code>\"_\" == \"\\x5f\" # => True\n\"S\" == \"\\x53\" # => True\n# therefore:\nb'_S\\xf0' == '\\x5f\\x53\\xf0' # => True\n</code></pre>\n <p>\n  Hexadecimal is merely another way of representing ASCII characters and is just for us humans. While it may look like its in two forms when printed, in memory its all just bytes. Its tricky to explain and its one of these things that you'll just eventually understand. I couldn't find a good tutorial on it unfortunately.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "scruffy",
            "time": "Jan 20, 2017 at 15:56",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Tobitobitobi",
                    "text": "<span class=\"comment-copy\">Thank you for your answer. Firstly: yes, I want to mimic the controlling PC (which would be the 'DTE'). By disconnecting some cables off my adapter I am pretty sure to know which data came from the modem and which came from the PC. Therefore I know what to send. Are you sure sending the string as-is would work? I mean, if they are in fact ASCII representations? As I understand the part with hexadecimal code is really like the 'raw' data, but the ASCII letters are the converted ones, which would mean I cannot send them simply in that form... I thought?</span>",
                    "time": null
                },
                {
                    "user": "scruffy",
                    "text": "<span class=\"comment-copy\">I've updated my answer. If its full duplex serial, are you sure you've got the transmit/recieve connected the right way round now its an endpoint?</span>",
                    "time": null
                },
                {
                    "user": "Tobitobitobi",
                    "text": "<span class=\"comment-copy\">As you said \"its one of these things that you'll just eventually understand\" and I just got it. Thanks scruffy! I believe its half-duplex. However, after reading your answer I'm not sure anymore if I connected it the right way. I'll check again on monday, when I have access to the device again. So thanks a second time!</span>",
                    "time": null
                }
            ]
        }
    ]
}