{
    "title": "Is possible to translate this MIPS assembly subroutine to C? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/3156/is-possible-to-translate-this-mips-assembly-subroutine-to-c",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed.\n        </b>\n        This question is\n        <a href=\"/help/closed-questions\">\n         off-topic\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       Questions asking for help\n       <b>\n        reverse-engineering a specific system\n       </b>\n       are off-topic unless they demonstrate an understanding of the concepts involved and clearly identify a specific problem.\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2013-12-17 08:06:07Z\">\n        11 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/3156/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  Can somebody tell if this MIPS assembly code uses some RSA libraries or what info is precisely extracted?\n </p>\n <pre><code>.text:00088090  # =============== S U B R O U T I N E =======================================\n.text:00088090\n.text:00088090\n.text:00088090                 .globl _058A5\n.text:00088090 _058A5:                                  # CODE XREF: _03E2D+38p\n.text:00088090                                          # DATA XREF: _03E2D+2Co ...\n.text:00088090\n.text:00088090 var_78          = -0x78\n.text:00088090 var_70          = -0x70\n.text:00088090 var_68          = -0x68\n.text:00088090 var_58          = -0x58\n.text:00088090 var_48          = -0x48\n.text:00088090 var_38          = -0x38\n.text:00088090 var_28          = -0x28\n.text:00088090 var_24          = -0x24\n.text:00088090 var_20          = -0x20\n.text:00088090 var_1C          = -0x1C\n.text:00088090 var_18          = -0x18\n.text:00088090 var_14          = -0x14\n.text:00088090 var_10          = -0x10\n.text:00088090 var_C           = -0xC\n.text:00088090 var_8           = -8\n.text:00088090\n.text:00088090                 la      $gp, loc_BF460   # _058A5\n.text:00088098                 addu    $gp, $t9\n.text:0008809C                 addiu   $sp, -0x88\n.text:000880A0                 sw      $gp, 0x88+var_70($sp)\n.text:000880A4                 sw      $s0, 0x88+var_28($sp)\n.text:000880A8                 la      $s0, 0xF0000\n.text:000880AC                 nop\n.text:000880B0                 addiu   $s0, (unk_F77A8 - 0xF0000)\n.text:000880B4                 sw      $s6, 0x88+var_10($sp)\n.text:000880B8                 sw      $s5, 0x88+var_14($sp)\n.text:000880BC                 sw      $s4, 0x88+var_18($sp)\n.text:000880C0                 movn    $s0, $a1, $a1\n.text:000880C4                 move    $s4, $a2\n.text:000880C8                 move    $s6, $a3\n.text:000880CC                 move    $s5, $zero\n.text:000880D0                 sw      $ra, 0x88+var_8($sp)\n.text:000880D4                 sw      $gp, 0x88+var_C($sp)\n.text:000880D8                 sw      $s3, 0x88+var_1C($sp)\n.text:000880DC                 sw      $s2, 0x88+var_20($sp)\n.text:000880E0                 sw      $s1, 0x88+var_24($sp)\n.text:000880E4                 addiu   $s1, $sp, 0x88+var_58\n.text:000880E8                 addiu   $s3, $sp, 0x88+var_48\n.text:000880EC                 addiu   $s2, $sp, 0x88+var_38\n.text:000880F0                 addiu   $a0, $sp, 0x88+var_68\n.text:000880F4                 move    $a1, $s1\n.text:000880F8                 move    $a2, $s3\n.text:000880FC                 move    $a3, $s2\n.text:00088100                 sw      $zero, 0x88+var_78($sp)\n.text:00088104                 la      $t9, _03DE5\n.text:00088110\n.text:00088110 loc_88110:                               # DATA XREF: sub_BF3E0o\n.text:00088110                 jalr    $t9 ; _03DE5\n.text:00088114                 nop\n.text:00088118                 lw      $gp, 0x88+var_70($sp)\n.text:0008811C                 move    $a1, $s0\n.text:00088120                 addiu   $a0, $sp, 0x88+var_68\n.text:00088124                 beqz    $v0, loc_8815C\n.text:00088128                 li      $a2, 0x50\n.text:0008812C\n.text:0008812C loc_8812C:                               # CODE XREF: _058A5+ECj\n.text:0008812C                                          # _058A5+11Cj ...\n.text:0008812C                 li      $s5, 4\n.text:00088130                 move    $v0, $s5\n.text:00088134\n.text:00088134 loc_88134:                               # CODE XREF: _058A5+1C0j\n.text:00088134                 lw      $ra, 0x88+var_8($sp)\n.text:00088138                 lw      $s6, 0x88+var_10($sp)\n.text:0008813C                 lw      $s5, 0x88+var_14($sp)\n.text:00088140                 lw      $s4, 0x88+var_18($sp)\n.text:00088144                 lw      $s3, 0x88+var_1C($sp)\n.text:00088148                 lw      $s2, 0x88+var_20($sp)\n.text:0008814C                 lw      $s1, 0x88+var_24($sp)\n.text:00088150                 lw      $s0, 0x88+var_28($sp)\n.text:00088154                 jr      $ra\n.text:00088158                 addiu   $sp, 0x88\n.text:0008815C  # ---------------------------------------------------------------------------\n.text:0008815C\n.text:0008815C loc_8815C:                               # CODE XREF: _058A5+94j\n.text:0008815C                 la      $t9, _01D91\n.text:00088168                 jalr    $t9 ; _01D91\n.text:0008816C                 nop\n.text:00088170                 lw      $gp, 0x88+var_70($sp)\n.text:00088174                 move    $a1, $s4\n.text:00088178                 move    $a0, $s1\n.text:0008817C                 bnez    $v0, loc_8812C\n.text:00088180                 li      $a2, 0x11\n.text:00088184                 la      $t9, _01D91\n.text:00088190                 jalr    $t9 ; _01D91\n.text:00088194                 nop\n.text:00088198                 lw      $gp, 0x88+var_70($sp)\n.text:0008819C                 la      $a1, 0xF0000\n.text:000881A0                 nop\n.text:000881A4                 addiu   $a1, (unk_F77F8 - 0xF0000)\n.text:000881A8                 move    $a0, $s3\n.text:000881AC                 bnez    $v0, loc_8812C\n.text:000881B0                 li      $a2, 0x50\n.text:000881B4                 la      $t9, _01D91\n.text:000881C0                 jalr    $t9 ; _01D91\n.text:000881C4                 nop\n.text:000881C8                 lw      $gp, 0x88+var_70($sp)\n.text:000881CC                 move    $a3, $s2\n.text:000881D0                 move    $a1, $s1\n.text:000881D4                 addiu   $a0, $sp, 0x88+var_68\n.text:000881D8                 bnez    $v0, loc_8812C\n.text:000881DC                 move    $a2, $s3\n.text:000881E0                 la      $t9, _058F6\n.text:000881EC                 jalr    $t9 ; _058F6\n.text:000881F0                 nop\n.text:000881F4                 lw      $gp, 0x88+var_70($sp)\n.text:000881F8                 move    $a1, $s6\n.text:000881FC\n.text:000881FC loc_881FC:                               # DATA XREF: sub_BF2F4o\n.text:000881FC                 move    $a0, $s2\n.text:00088200                 bnez    $v0, loc_8812C\n.text:00088204                 li      $a2, 0x50\n.text:00088208                 la      $t9, _01001\n.text:00088214                 jalr    $t9 ; _01001\n.text:00088218                 nop\n.text:0008821C                 lw      $gp, 0x88+var_70($sp)\n.text:00088220                 move    $a3, $s2\n.text:00088224                 move    $a1, $s1\n.text:00088228                 addiu   $a0, $sp, 0x88+var_68\n.text:0008822C                 bnez    $v0, loc_8812C\n.text:00088230                 move    $a2, $s3\n.text:00088234                 sw      $zero, 0x88+var_78($sp)\n.text:00088238                 la      $t9, _04E0F\n.text:00088244                 jalr    $t9 ; _04E0F\n.text:00088248                 nop\n.text:0008824C                 lw      $gp, 0x88+var_70($sp)\n.text:00088250                 b       loc_88134\n.text:00088254                 move    $v0, $s5\n.text:00088254  # End of function _058A5\n.text:00088254\n</code></pre>\n</div>\n</body></html>",
    "votes": "-6",
    "answers": 1,
    "views": "731",
    "tags": [
        "disassembly",
        "ida"
    ],
    "user": "numind",
    "time": "11 years ago",
    "comments": [
        {
            "user": "Cocoa Puffs",
            "text": "<html><body><span class=\"comment-copy\">\n I've\n <i>\n  deduced\n </i>\n there no are\n <code>\n  RSA\n </code>\n libraries in that ASM.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "numind",
            "text": "<html><body><span class=\"comment-copy\">\n But this subroutine do something with this unk_F77A8, which is a 0x50 hex key, so maybe what it does should be in other function? someone could convert this asm to readable info for simple humans? xD\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jason Geffner",
            "text": "<html><body><span class=\"comment-copy\">\n See\n <a href=\"http://meta.reverseengineering.stackexchange.com/a/271/1562\">\n  meta.reverseengineering.stackexchange.com/a/271/1562\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Cocoa Puffs",
            "text": "<html><body><span class=\"comment-copy\">\n Without seeing the entire disassembled code it's all up for interpretation. the\n <code>\n  0x50\n </code>\n you are looking at is taking the immediate value and storing it into register\n <code>\n  $a2\n </code>\n . I would recommend reading the quick tutorial\n <a href=\"http://logos.cs.uic.edu/366/notes/MIPS%20Quick%20Tutorial.htm\" rel=\"nofollow noreferrer\">\n  MIPS ASM\n </a>\n and possibly trying out the\n <a href=\"http://courses.missouristate.edu/KenVollmar/MARS/\" rel=\"nofollow noreferrer\">\n  MARS MIPS Assembler/Simulator\n </a>\n . At the very least it can give you a better insight into the meanings of the disassembled code instead of trying to guess.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jason Geffner",
            "text": "<html><body><span class=\"comment-copy\">\n There's not enough context to answer your question, since this code calls other functions. Also, this site's rules state, \"Questions asking for help reverse-engineering a specific system are off-topic unless they demonstrate an understanding of the concepts involved and clearly identify a specific problem.\" Thus, your question is off-topic.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Here is a C representation of the assembly (assuming I didn't mess anything up of course). Interestingly, the first argument to this function appears to be ignored:\n </p>\n <pre><code>int sub_058A5(int unused, void *unk1, void *unk2, void *unk3)\n{\n    int retval = 4;\n    void *ptr = unk_F77A8;\n\n    if(unk1 != NULL)\n    {\n        ptr = unk1;\n    }\n\n    if(sub_03DE5(var_68, var_58, var_48, var_38, 0) == 0 &&\n       sub_01D91(var_68, ptr, 0x50) == 0 && \n       sub_01D91(var_58, unk2, 0x11) == 0 &&\n       sub_01D91(var_48, unk_F77F8, 0x50) == 0 &&\n       sub_058F6(var_68, var_58, var_48, var_38) == 0 &&\n       sub_01001(var_38, unk3, 0x50) == 0)\n    {\n        sub_04E0F(var_68, var_58, var_48, var_38, 0);\n        retval = 0;\n    }\n\n    return retval;\n}\n</code></pre>\n <p>\n  Of course, this really doesn't tell you much unless you know what those other subroutines are doing.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "devttys0",
            "time": "Dec 10, 2013 at 18:29",
            "is_accepted": false,
            "comments": []
        }
    ]
}