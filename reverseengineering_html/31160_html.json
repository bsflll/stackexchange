{
    "title": "How to decompile an APK written in Golang?",
    "link": "https://reverseengineering.stackexchange.com/questions/31160/how-to-decompile-an-apk-written-in-golang",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I recently started trying to learn basic reverse engineering and Golang. Decompiling Android apps written in C++ and Java/Kotlin seems easy as there are tons of documents and tools that enable you to do it with as little effort as possible, but I have not found a single explanation of what one could do to decompile APKs written in Golang.\n </p>\n <p>\n  I know that one generally shouldn't try to make one software temper-proof through security by obscurity, but this seems to me like a good measure to take in order to create a bigger burden to overcome for people trying to reverse engineer the inner workings of a program.\n </p>\n <p>\n  I took an app that I know was written in Golang and shoved it into jadx, however it just seemed to result in gibberish.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "540",
    "tags": [
        "android",
        "apk",
        "go"
    ],
    "user": "CJK",
    "time": "Nov 29, 2022 at 7:18",
    "comments": [
        {
            "user": "Irfan Latif",
            "text": "<html><body><span class=\"comment-copy\">\n Go is a native compiled language like C / C++ and unlike Java / Kotlin. So there's no simple bytecode to decompile. You need to disassemble the machine code.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n Jadx is the wrong tool for a Golang based apps. I would try Ghidra or IDA Pro.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Specifically recent IDA releases had numerous improvements aimed at binaries created with Go.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "CJK",
            "text": "<html><body><span class=\"comment-copy\">\n @0xC0000022L so i can just shove the classes.dex into IDA or Ghidra and it will work? Im gonna try it, never thought of that because i thought i had to extract the machine code from it somehow.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Col-E",
            "text": "<html><body><span class=\"comment-copy\">\n The classes.dex contains the dalvik bytecode, which is what JADX is for. Using IDA/Ghidra on it is a poor choice of tool.  Check for a libs folder in the APK. Those files are what you should be dropping into IDA/Ghidra.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}