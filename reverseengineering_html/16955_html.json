{
    "title": "Bypassing av signature with Hex editing",
    "link": "https://reverseengineering.stackexchange.com/questions/16955/bypassing-av-signature-with-hex-editing",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I recently started studying on bypassing AV by finding an AV signature on\n  <em>\n   nc.exe\n  </em>\n  (NetCat) and changing it to see how it works. I have already found the place of signature with splitting method. Then, I should open\n  <em>\n   nc.exe\n  </em>\n  with a hex editor and change the Sig.\n </p>\n <p>\n  <strong>\n   But\n  </strong>\n  , here is what it look like:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/hFTjg.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/hFTjg.png\"/>\n  </a>\n </p>\n <p>\n  And the file will get corrupted by editing it (adding or removing bytes).\n </p>\n <p>\n  <strong>\n   My question is:\n  </strong>\n  What should I do for editing in this situations? What should I know for a successful binary editing?\n </p>\n <p>\n  If I get this whole wrong tell me what should I be looking for.\n </p>\n <hr/>\n <p>\n  <strong>\n   Note:\n  </strong>\n  the signature is in\n  <code>\n   .bss\n  </code>\n  and\n  <code>\n   .text\n  </code>\n  section of file\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "3k",
    "tags": [
        "pe",
        "hex",
        "binary-editing"
    ],
    "user": "0_o",
    "time": "Dec 12, 2017 at 6:54",
    "comments": [
        {
            "user": "xvk3",
            "text": "<html><body><span class=\"comment-copy\">\n This would be more on topic at Software Recommendations SE.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0_o",
            "text": "<html><body><span class=\"comment-copy\">\n @Will i think software doesn't matter here, just the concept and the way you do it\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'd recommend using something such as OllyDbg or IDA PRO rather than just plain HexEditor since just using HexEditor you've got no idea what section of the PE you are editing. For example, you could be editing the\n  <code>\n   .text\n  </code>\n  PE section and editing an essential part of the program rather than\n  <code>\n   .idata\n  </code>\n  or .data section which just store variable data.\n </p>\n <p>\n  So, few methods an AV could use for detection of malware are:\n </p>\n <ol>\n  <li>\n   Checksum of the whole file for an well-known piece of malware\n  </li>\n  <li>\n   Checksum the\n   <code>\n    .text\n   </code>\n   (Can also be named\n   <code>\n    .code\n   </code>\n   ) section of the PE as these pages are not flagged with WRITE permissions by default\n  </li>\n  <li>\n   Checksum of the pattern that's malicious for example\n   <code>\n    OpenProcess\n   </code>\n   with\n   <code>\n    WriteProcessMemory\n   </code>\n   are often used for injecting DLLs or code into other processes. We could just create signature for that part of the code\n  </li>\n </ol>\n <p>\n  <strong>\n   Bypassing Method 1:\n  </strong>\n </p>\n <p>\n  By randomly HexEditting you would manage to avoid AV detection method 1 (see above) but method 2 and 3 would detect the malware still. If you didn't overwrite anything essential for your program to execute.\n </p>\n <p>\n  <strong>\n   Bypassing Method 2:\n  </strong>\n </p>\n <p>\n  Rewrite a simple instruction or make a\n  <code>\n   JMP\n  </code>\n  to code-cave and put overwritten code there and JMP back to next instruction. So, you would be executing exact same code but different flow and .text section checksum would be different.\n </p>\n <p>\n  <strong>\n   Bypassing Method 3:\n  </strong>\n </p>\n <p>\n  To be able to bypass method 3 - You would need to add junk code between each call or add a JMP to a code cave and have the instruction set there. So, the code would still be the same but byte signature would be completely different.\n </p>\n <p>\n  Your best to learn about assembly language and learn how to use IDA PRO or OllyDbg and learn about patching programs before you move onto something more complex like bypassing AV.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Paul",
            "time": "Dec 11, 2017 at 14:05",
            "is_accepted": false,
            "comments": []
        }
    ]
}