{
    "title": "Radare2 8051 code bank switching",
    "link": "https://reverseengineering.stackexchange.com/questions/22464/radare2-8051-code-bank-switching",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Some of 8051 chips use bank switching to extend accessible code memory.\nGood example is Silabs\n  <a href=\"https://www.silabs.com/documents/public/application-notes/an130.pdf\" rel=\"nofollow noreferrer\">\n   C8051F12x\n  </a>\n  . Another example is\n  <a href=\"https://www.embedded.com/expand-your-8051-memory/\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  .\n </p>\n <p>\n  Code area in range 0x0000..0x7ffff is common always accessible code bank.\nUpper side of code memory 0x8000..0xffff is mapped to banks in extended code memory which specified by some bank selector register.\n </p>\n <p>\n  What is recipe to handle analysis of this kind of code overlaying?\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 0,
    "views": "347",
    "tags": [
        "disassembly",
        "binary-analysis",
        "radare2",
        "static-analysis",
        "8051"
    ],
    "user": "kimstik",
    "time": "Nov 6, 2019 at 20:20",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<html><body><span class=\"comment-copy\">\n It would be easier to find out solution with some example, but won't it work if you map the same code both in memory ranges?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "kimstik",
            "text": "<html><body><span class=\"comment-copy\">\n This one should be relevant public binary of CC2541:\n <a href=\"https://github.com/RedBearLab/CCLoader/tree/master/Bin\" rel=\"nofollow noreferrer\">\n  github.com/RedBearLab/CCLoader/tree/master/Bin\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}