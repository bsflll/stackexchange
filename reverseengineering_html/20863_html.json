{
    "title": "PowerPC ELF32 detecting VLE",
    "link": "https://reverseengineering.stackexchange.com/questions/20863/powerpc-elf32-detecting-vle",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am writing an ELF32 parser and disassembler for PowerPC.\n </p>\n <p>\n  Does anyone knows how to detect if the file is using VLE architecture from ELF header? I see that IDA can do it automatically.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "425",
    "tags": [
        "powerpc"
    ],
    "user": "krusty",
    "time": "Mar 13, 2019 at 14:11",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  According to the code of\n  <code>\n   readelf\n  </code>\n  in the GNU binutils package, the presence of VLE instructions can be found in the\n  <code>\n   p_flags\n  </code>\n  and\n  <code>\n   sh_flags\n  </code>\n  fields with the mask\n  <code>\n   0x10000000\n  </code>\n  (see\n  <code>\n   binutils-xxx/include/elf/ppc.h\n  </code>\n  and look for\n  <code>\n   PF_PPC_VLE\n  </code>\n  and\n  <code>\n   SHF_PPC_VLE\n  </code>\n  ).\n </p>\n <p>\n  These flags seems to be present at the begining of each section in the ELF format. So, you should look for it.\n </p>\n <p>\n  A few interesting readings:\n </p>\n <ul>\n  <li>\n   <a href=\"https://www.polyomino.org.uk/publications/2011/Power-Arch-32-bit-ABI-supp-1.0-Unified.pdf\" rel=\"nofollow noreferrer\">\n    Power ArchitectureÂ® 32-bit Application Binary Interface Supplement 1.0\n   </a>\n   .\n  </li>\n  <li>\n   <a href=\"https://www.st.com/content/ccc/resource/technical/document/user_manual/ac/f2/bf/01/73/d8/48/e0/CD00161395.pdf/files/CD00161395.pdf/jcr:content/translations/en.CD00161395.pdf\" rel=\"nofollow noreferrer\">\n    Variable-Length Encoding (VLE) extension programming interface manual\n   </a>\n   .\n  </li>\n  <li>\n   <a href=\"https://www.nxp.com/docs/en/supporting-information/VLEPIM.pdf\" rel=\"nofollow noreferrer\">\n    Variable-Length Encoding (VLE) Extension Programming Interface Manual\n   </a>\n   .\n  </li>\n  <li>\n   <a href=\"http://refspecs.linuxfoundation.org/ELF/ppc64/PPC-elf64abi.html\" rel=\"nofollow noreferrer\">\n    64-bit PowerPC ELF Application Binary Interface Supplement 1.9\n   </a>\n   .\n  </li>\n  <li>\n   The binutils source code (\n   <code>\n    grep -r _PPC_VLE\n   </code>\n   ).\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "4",
            "user": "perror",
            "time": "Mar 13, 2019 at 11:59",
            "is_accepted": true,
            "comments": []
        }
    ]
}