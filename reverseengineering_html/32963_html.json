{
    "title": "GDB Struct Deref",
    "link": "https://reverseengineering.stackexchange.com/questions/32963/gdb-struct-deref",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Let's say I have a type MyStruct. I would like to check if 40 bytes from the structs start, there is a pointer. If there is, I would like to get the type of that pointer. Is there a way to do that ?\n </p>\n <p>\n  I have debug symbols. In GDB I could try to use ptype /o but I want to do this quickly and I don't want all the other struct info and I would like the pointer type in a reusable format to then plug in.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "43",
    "tags": [
        "gdb"
    ],
    "user": "098029384098",
    "time": "May 12, 2024 at 7:08",
    "comments": [
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<html><body><span class=\"comment-copy\">\n if you're okay w/ python, you'd use\n <code>\n  gdb.lookup_type\n </code>\n with your type name (\n <code>\n  gdb.lookup_type('MyStruct')\n </code>\n ), then call\n <code>\n  .fields()\n </code>\n on the result. This'll give you a list of the fields, which then allows you to use the \".bitpos\" and \".bitsize\" properties of each one to locate the one overlapping the (40) bytes that you want (in bits, so divide by 8). Once you have a field, use\n <code>\n  .is_scalar\n </code>\n to confirm it's not an array, and then\n <code>\n  .target\n </code>\n to get its type (it'll raise an exception if not a pointer). Docs are at\n <a href=\"https://sourceware.org/gdb/current/onlinedocs/gdb.html/Types-In-Python.html\" rel=\"nofollow noreferrer\">\n  sourceware.org/gdb/current/onlinedocs/gdb.html/â€¦\n </a>\n .\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}