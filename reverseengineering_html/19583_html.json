{
    "title": "How can I convert this assembly code (x64) to C?",
    "link": "https://reverseengineering.stackexchange.com/questions/19583/how-can-i-convert-this-assembly-code-x64-to-c",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have the following assembly (x64) function:\n </p>\n <pre><code>400700: sub  rsp,0x18\n400704: mov  QWORD PTR [rsp+0x8],rdi\n400709: cmp  QWORD PTR [rsp+0x8],0x0\n40070f: jne  400718 <bar+0x18>\n400711: mov  eax,0x0\n400716: jmp  400734 <bar+0x34>\n400718: mov  rax,QWORD PTR [rsp+0x8]\n40071d: sub  rax,0x1\n400721: mov  rdi,rax\n400724: call 400700 <bar>\n400729: mov  rdx,rax\n40072c: mov  rax,QWORD PTR [rsp+0x8]\n400731: add  rax,rdx\n400734: add  rsp,0x18\n400738: ret\n</code></pre>\n <p>\n  I've figured out that the beginning part is just the header for any assembly program. Also, I think that the two QWORD are either from longs or characters. I'm guessing that the jne jump is probably a conditional statement, but I'm not too sure. It looks like the function is recursive since it has a line that calls \"bar\" again.\n </p>\n <p>\n  My guess for the overall function is that it takes two longs and recursively adds them (Fibonacci, maybe?). I don't have much reasoning for this guess though, and I could be incorrect.\n </p>\n <p>\n  Could anyone please help me solve this problem? Or, if there's a way for me to pass in parameters (I don't even know what kind of argument the function takes) and see the output, then I can try to backtrack and figure out what the program is doing.\n </p>\n <p>\n  Thanks\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "847",
    "tags": [
        "disassembly",
        "assembly",
        "x86-64"
    ],
    "user": "hama",
    "time": "Oct 11, 2018 at 7:43",
    "comments": [
        {
            "user": "perror",
            "text": "<html><body><span class=\"comment-copy\">\n Why did you remove the assembly code of the function? Note that, this will still be stored in the history of the question...\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n Removing useful content from a question is\n <i>\n  highly\n </i>\n frowned upon,\n <b>\n  especially\n </b>\n if you got an answer. If you do not want others to read this, you should not have posted it to begin with.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This function computes (in a recursive manner) the sum of the\n  <code>\n   n\n  </code>\n  first integers:\n </p>\n <pre><code>     400700: sub  rsp,0x18                 ; Align the stack\n     400704: mov  QWORD PTR [rsp+0x8],rdi  ; Store first argument on stack\n     400709: cmp  QWORD PTR [rsp+0x8],0x0  ; test (n == 0)\n  +--40070f: jne  400718 <bar+0x18>        ; jump to 400718 if (n != 0)\n  |  400711: mov  eax,0x0                  ; set return code to zero\n+-|--400716: jmp  400734 <bar+0x34>        ; jump to function end at 400734\n| +->400718: mov  rax,QWORD PTR [rsp+0x8]  ; Get 'n' in rax\n|    40071d: sub  rax,0x1                  ; n = n - 1\n|    400721: mov  rdi,rax                  ; Load 'n - 1' as first argument\n|    400724: call 400700 <bar>             ; recursive call to 'bar(n - 1)'\n|    400729: mov  rdx,rax                  ; Load bar(n-1) return code in rdx\n|    40072c: mov  rax,QWORD PTR [rsp+0x8]  ; Get current 'n' in rax\n|    400731: add  rax,rdx                  ; rax = n + bar(n - 1)\n+--->400734: add  rsp,0x18                 ; Restore the stack\n     400738: ret                           ; return n + bar(n - 1)\n</code></pre>\n <p>\n  Final code:\n </p>\n <pre><code>bar (long long int n)\n{\n  return (n) ? n + bar(n - 1) : 0;\n}\n</code></pre>\n <p>\n  Frankly, I would have used the well known formula\n  <code>\n   n*(n+1)/2\n  </code>\n  ...\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "perror",
            "time": "Oct 11, 2018 at 7:53",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">would have been nice to see how you arrived to this... :)</span>",
                    "time": null
                },
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">Yes, but that was quite straight forward... :) (I know, this is not an excuse to not explain it in details).</span>",
                    "time": null
                }
            ]
        }
    ]
}