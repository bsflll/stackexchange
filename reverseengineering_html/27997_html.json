{
    "title": "uncompyle6 gives success message but output is not readable",
    "link": "https://reverseengineering.stackexchange.com/questions/27997/uncompyle6-gives-success-message-but-output-is-not-readable",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to use uncompyle6 to decompile a\n  <code>\n   .pyc\n  </code>\n  code. I even tried\n  <code>\n   --verify\n  </code>\n  option. It says\n </p>\n <blockquote>\n  <p>\n   Successfully decompiled file\n  </p>\n </blockquote>\n <p>\n  but the output only contains strings like\n  <code>\n   \\xe0\\xb3\\x0bh\\x90\n  </code>\n  .\n </p>\n <p>\n  What should I do?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "321",
    "tags": [
        "python",
        "decompile"
    ],
    "user": "pythonde",
    "time": "Oct 29, 2021 at 7:33",
    "comments": [
        {
            "user": "MarianD",
            "text": "<html><body><span class=\"comment-copy\">\n Try it with your own\n <code>\n  .pyc\n </code>\n file (obtained from your own valid\n <code>\n  .py\n </code>\n file) to be sure that the output in your question is not a consequence of the\n <i>\n  invalid\n  <code>\n   .pyc\n  </code>\n  file.\n </i>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Something is wrong with your input\n  <code>\n   .pyc\n  </code>\n  file — probably\n  <em>\n   it isn't a valid Python bytecode file\n  </em>\n  (obtained from a valid\n  <code>\n   .py\n  </code>\n  source file).\n </p>\n <p>\n  <code>\n   \\xe0\n  </code>\n  ,\n  <code>\n   \\xb3\n  </code>\n  ,\n  <code>\n   \\x0b\n  </code>\n  ,\n  <code>\n   \\x90\n  </code>\n  are hexadecimal codes for bytes which have\n  <em>\n   no printable ASCII representation\n  </em>\n  — mainly above\n  <code>\n   0x7F\n  </code>\n  (127 decimal), but also the control character \\x0b (VT - Vertical Tabulation).\n  \n\n  (The letter\n  <code>\n   h\n  </code>\n  after\n  <code>\n   \\xb3\n  </code>\n  <strong>\n   is\n  </strong>\n  an ASCII character.)\n </p>\n <p>\n  It's standard Python output for non-ASCII characters in\n  <em>\n   binary sequence types (bytes / bytearrays / memoryview):\n  </em>\n </p>\n <pre><code>>>> bytes((33, 50, 65, 97))                  # ASCII chars\nb'!2Aa'\n</code></pre>\n <pre><code>>>> bytes((224, 179, 11, 144))               # non-ASCII (4 of \"your\" 5 bytes)\nb'\\xe0\\xb3\\x0b\\x90'\n</code></pre>\n <p>\n  The same for your byte sequence with non-ASCII and ASCII codes\n  \n\n  (now for a change in hexadecimal):\n </p>\n <pre><code>>>> bytes((0xe0, 0xb3, 0x0b, 0x68, 0x90))    # \"your\" byte sequence\nb'\\xe0\\xb3\\x0bh\\x90'\n</code></pre>\n</div>\n</body></html>",
            "votes": "2",
            "user": "MarianD",
            "time": "Jul 15, 2021 at 5:16",
            "is_accepted": false,
            "comments": []
        }
    ]
}