{
    "title": "Unpacking script",
    "link": "https://reverseengineering.stackexchange.com/questions/3033/unpacking-script",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As malware are often packed, I'm looking to automate some of the unpacking tasks when that's possible.\n </p>\n <p>\n  In order to do that, I thought that OllyScript was an interesting way to write unpacking script for each packer that I have to deal with. But the first packer example for which I would like to write such script brings a \"Bad or unknown format of 32 bits executable\" error in Ollydbg/ImmunityDbg.\n </p>\n <p>\n  As there is not that problem in OllyDbg2 I thought that OllyScript+OllyDbg2 will be perfect, but OllyScript doesn't seems to have a version for OllyDbg2...\n </p>\n <p>\n  What kind of \"scripting engine\" do you suggest me in order to write unpacking scripts ?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "debuggers",
        "unpacking"
    ],
    "user": "Steeve",
    "time": "Nov 11, 2013 at 11:14",
    "comments": [
        {
            "user": "Ange",
            "text": "<html><body><span class=\"comment-copy\">\n FYI You usually can fix these incompatibility problems of OllyDbg 1 by using the\n <a href=\"http://tuts4you.com/download.php?view.75\" rel=\"nofollow noreferrer\">\n  OllyAdvanced\n </a>\n plugin.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Steeve",
            "text": "<html><body><span class=\"comment-copy\">\n I known that an OllyDbg plugin was fixing some bugs, but I wasn't able to remember its name. Thanks\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Well, if you are using\n  <a href=\"http://www.immunityinc.com/products-immdbg.shtml\" rel=\"nofollow noreferrer\">\n   ImmunityDbg\n  </a>\n  , have a look at using Python to write your unpacking scripts. With ImmunityDbg, Python scripting support is built-in.\n </p>\n <p>\n  An additional benefit of focusing on Python (instead of OllyScript) is that if you begin using a IDA Pro with IDAPython, your scripts will convert much more easily.\n </p>\n <p>\n  If you are not familiar with how to write an unpacker in Python, have a look at\n  <a href=\"http://nostarch.com/ghpython.htm\" rel=\"nofollow noreferrer\">\n   Gray Hat Python\n  </a>\n  . The book doesn't show you exactly how to write an unpacker, but demonstrates how to work with (from Python) PE files, call into the Windows API, write a debugger, and other related tasks.\n </p>\n <p>\n  <em>\n   Immunity Debugger's Python API includes many useful utilities and functions. Your scripts can be as integrated into the debugger as the native code. This means your code can create custom tables, graphs, and interfaces of all sorts that remain within the Immunity Debugger user experience. For example, when the Immunity SafeSEH script runs, it outputs the results into a table within the Immunity Debugger window.\n  </em>\n </p>\n <p>\n  <img alt=\"enter image description here\" src=\"https://i.sstatic.net/KBjjH.png\"/>\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Mick",
            "time": "Nov 11, 2013 at 13:58",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Steeve",
                    "text": "<span class=\"comment-copy\">I agree that ImmDbg is quite interesting for its Python API but it suffer to similar problems than OllyDBG (some troubles to load some \"malformed\" PE files)</span>",
                    "time": null
                },
                {
                    "user": "Mick",
                    "text": "<span class=\"comment-copy\">@Steeve, good point. IMO, the alternative is to use IDA Pro (or maybe Hopper...not sure), and write unpacking scripts using their Python support</span>",
                    "time": null
                }
            ]
        }
    ]
}