{
    "title": "What binary value does Thread and Process ID Register contains in Android ARM?",
    "link": "https://reverseengineering.stackexchange.com/questions/22177/what-binary-value-does-thread-and-process-id-register-contains-in-android-arm",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have following instructions in Android shared library:\n </p>\n <pre><code>MRC p15, 0, R3,c13,c0, 3 \nLDR R3, [R3,#4] \nMOV R0, #0 \nSTR R0, [R3,#0xC]\n</code></pre>\n <p>\n  According to ARM documentation:\n </p>\n <blockquote>\n  <p>\n   Reading or writing the Thread and Process ID Registers has no effect\n  on the processor state or operation. These registers provide OS\n  support and must be managed by the OS.\n  </p>\n </blockquote>\n <p>\n  That's nice, but what is implementation of this register value in Android or ARM Linux?\n </p>\n <p>\n  From the code, it tries to read Thread and Process ID Register value as structure,and it reads some field with offset\n  <code>\n   4\n  </code>\n  . This field is pointer to structure itself, and it writes\n  <code>\n   0\n  </code>\n  to field with offset\n  <code>\n   12\n  </code>\n  .\n </p>\n <p>\n  So, the register value is for sure not\n  <code>\n   pthread_t\n  </code>\n  , because, according to Android source codes,\n  <code>\n   pthread_t\n  </code>\n  field with offset 4 is\n  <code>\n   unsigned int\n  </code>\n  and not pointer to any structure.\n </p>\n <p>\n  Does anyone know where can I find definition of structure returned by\n  <code>\n   MRC c13::c0::3\n  </code>\n  in Android ARM?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "201",
    "tags": [
        "android",
        "arm"
    ],
    "user": "Vitalii",
    "time": "Sep 24, 2019 at 9:31",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Just in case anyone else will have the same issue, after reading a lot of Android sources and real applications memory dumps, I found that:\n </p>\n <ul>\n  <li>\n   <code>\n    MRC c13::c0::3\n   </code>\n   returns pointer to structure that contains 2 words.\n  </li>\n  <li>\n   The 2nd world is the same value as\n   <code>\n    pthread_self\n   </code>\n   returns (i. e. it is\n   <code>\n    pthread_t\n   </code>\n   of current thread).\n  </li>\n  <li>\n   <code>\n    pthread_t\n   </code>\n   is actually pointer to\n   <code>\n    pthread_internal_t\n   </code>\n   structure, you can see its definition here for example\n   <a href=\"https://android.googlesource.com/platform/bionic.git/+/refs/heads/android10-release/libc/bionic/pthread_internal.h\" rel=\"nofollow noreferrer\">\n    https://android.googlesource.com/platform/bionic.git/+/refs/heads/android10-release/libc/bionic/pthread_internal.h\n   </a>\n  </li>\n  <li>\n   From the definition, field at offset 12 (0xC) is\n   <code>\n    pid_t cached_pid_\n   </code>\n   .\n  </li>\n </ul>\n <p>\n  So, this code sets cached pid value to\n  <code>\n   0\n  </code>\n  . It looks like it is required to force\n  <code>\n   getpid\n  </code>\n  to read real\n  <code>\n   pid\n  </code>\n  value instead of using cached one (PID caching is known source of bugs in some\n  <code>\n   glibc\n  </code>\n  versions).\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Vitalii",
            "time": "Sep 24, 2019 at 8:12",
            "is_accepted": false,
            "comments": []
        }
    ]
}