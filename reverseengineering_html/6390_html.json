{
    "title": "Break on memory access on Android",
    "link": "https://reverseengineering.stackexchange.com/questions/6390/break-on-memory-access-on-android",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to be able to monitor when a memory address is read from on Android. The binary I am studying stores around 60 bytes to a memory location during initialisation and this buffer is used at some later point. My problem is that I can't seem to find where this is accessed by static analysis and would like to set a breakpoint so that I can track its access during runtime.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "341",
    "tags": [
        "ida",
        "memory",
        "android"
    ],
    "user": "allbabel",
    "time": "Oct 6, 2014 at 21:04",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If the memory address is constant you can attach to the process and use the awatch command on GDB to monitor it. If it's not static you can break on the offending malloc call and set the bp there.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Fewmitz",
            "time": "Oct 7, 2014 at 2:56",
            "is_accepted": true,
            "comments": []
        }
    ]
}