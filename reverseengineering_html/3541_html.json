{
    "title": "ARM debugging interesting behavior",
    "link": "https://reverseengineering.stackexchange.com/questions/3541/arm-debugging-interesting-behavior",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I was just disassembling and debugging an ARM binary for fun and I noticed something unusual. Consider the following set of instructions:-\n </p>\n <pre><code>   0x00008058 <+4>: mov r1, pc\n   0x0000805c <+8>: add r1, r1, #24\n   0x00008060 <+12>:    mov r0, #1\n</code></pre>\n <p>\n  I tried setting a breakpoint at\n  <code>\n   0x0000805c\n  </code>\n  and checked the value of the register\n  <code>\n   r1\n  </code>\n  . I was expecting to see\n  <code>\n   0x0000805c\n  </code>\n  -- however, interestingly the value is\n  <code>\n   0x8060\n  </code>\n  .\n </p>\n <p>\n  Why is this? Is this because of some sort of instruction pipelineing?\n </p>\n</div>\n</body></html>",
    "votes": "6",
    "answers": 1,
    "views": "166",
    "tags": [
        "debugging",
        "arm"
    ],
    "user": null,
    "time": "Jan 24, 2014 at 16:27",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Yes, it's because of pipelining.\n </p>\n <p>\n  From\n  <a href=\"http://winarm.scienceprog.com/arm-mcu-types/how-does-arm7-pipelining-works.html\" rel=\"nofollow noreferrer\">\n   http://winarm.scienceprog.com/arm-mcu-types/how-does-arm7-pipelining-works.html\n  </a>\n  --\n </p>\n <blockquote>\n  <p>\n   <img alt=\"ARM pipelining\" src=\"https://i.sstatic.net/sIrwO.gif\"/>\n  </p>\n  <p>\n   PC (Program Counter) is calculated\n   <strong>\n    8 bytes ahead\n   </strong>\n   of current\n  instruction.\n  </p>\n </blockquote>\n</div>\n</body></html>",
            "votes": "9",
            "user": "Jason Geffner",
            "time": "Jan 24, 2014 at 14:13",
            "is_accepted": true,
            "comments": []
        }
    ]
}