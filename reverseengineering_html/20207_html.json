{
    "title": "What is __sighandler_t struct and purpose of SIGTRAP signal handler",
    "link": "https://reverseengineering.stackexchange.com/questions/20207/what-is-sighandler-t-struct-and-purpose-of-sigtrap-signal-handler",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm reversing an ELF x86 binary which apparently has anti-reversing/anti-debuging protections, and one of the first thing the ELF does is to call a sys_signal with a SIGTRAP value :\n </p>\n <pre><code>.text:08048063                 mov     eax, 48         ; sys_signal\n.text:08048068                 mov     ebx, 5          ; SIGTRAP\n.text:0804806D                 mov     ecx, offset sub_80480E2\n.text:08048072                 int     80h             ; LINUX - sys_signal\n.text:08048074                 jmp     short loc_8048077\n</code></pre>\n <p>\n  I have three questions :\n </p>\n <ul>\n  <li>\n   First, am I right to think that the purpose of this is to create a handler for the SIGTRAP signal, probably in order to prevent any debuger use\n  </li>\n  <li>\n   Second, if this is creating a SIGTRAP handler, I should find a\n   <code>\n    __sighandler_t\n   </code>\n   at\n   <code>\n    sub_80480E2\n   </code>\n   , according to\n   <a href=\"https://github.com/Hackndo/misc/blob/master/syscalls32.md\" rel=\"nofollow noreferrer\">\n    this x86 syscall table\n   </a>\n   . How can I setup IDA so that it recognizes it as a __sighandler_t struct?\n  </li>\n  <li>\n   Third, I could not find any detailed information about this structure. What is its composition?\n  </li>\n </ul>\n <p>\n  I found in\n  <code>\n   signal.h\n  </code>\n  those lines :\n </p>\n <pre><code>/* Type of a signal handler.  */\ntypedef void (*__sighandler_t) (int);\n</code></pre>\n <p>\n  Is __sighandler_t only a ptr to a function?\n </p>\n <p>\n  Thanks ! Feel free to tell me if I'm not beeing clear or if I forgot a usefull information.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "anti-debugging",
        "struct"
    ],
    "user": "Nark",
    "time": "Dec 27, 2018 at 10:06",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <p>\n   First, am I right to think that the purpose of this is to create a\n  handler for the SIGTRAP signal, probably in order to prevent any\n  debuger use\n  </p>\n </blockquote>\n <p>\n  When a SIGTRAP is raised, normally the handler given in parameter of\n  <code>\n   signal\n  </code>\n  is called. If you have a debugger attached, this function will not get called.\nIf your handler is never called, you can assume a debugger is attached.\n </p>\n <p>\n  Here is a simple example:\n </p>\n <pre><code>#include <signal.h>\n#include <stdio.h>\n\nvoid on_trap(int n)\n{\n        puts(\"on_trap\");\n}\n\nvoid callme(void)\n{\n        puts(\"hello\");\n        __asm__ volatile(\"int $0x03\");\n        puts(\"bye\");\n}\n\nint main(void)\n{\n        signal(SIGTRAP, on_trap);\n        callme();\n        return 0;\n}\n</code></pre>\n <p>\n  Normal run:\n </p>\n <pre><code>$ ./antidebug\nhello\non_trap\nbye\n</code></pre>\n <p>\n  With gdb:\n </p>\n <pre><code>gdb -q antidebug\nReading symbols from antidebug...(no debugging symbols found)...done.\n(gdb) r\nStarting program: /tmp/antidebug\nhello\n\nProgram received signal SIGTRAP, Trace/breakpoint trap.\n0x0000000008001174 in callme ()\n(gdb) c\nContinuing.\nbye\n</code></pre>\n <blockquote>\n  <p>\n   Second, if this is creating a SIGTRAP handler, I should find a\n  __sighandler_t at sub_80480E2, according to this x86 syscall table. How can I setup IDA so that it recognizes it as a __sighandler_t\n  struct?\n  </p>\n </blockquote>\n <p>\n  sighandler_t is a typedef for a function pointer, not a structure.\nIf you want to define a memory area as a structure, you can use the shortcut\n  <code>\n   ALT+Q\n  </code>\n  .\n </p>\n <blockquote>\n  <p>\n   Third, I could not find any detailed information about this structure.\n  What is its composition?\n  </p>\n </blockquote>\n <p>\n  <code>\n   sub_80480E2\n  </code>\n  contains code, as mentioned this is not a structure but a function pointer.\nImagine you have the syscall\n  <code>\n   sigaction\n  </code>\n  instead, you can simply check the\n  <a href=\"http://man7.org/linux/man-pages/man2/sigaction.2.html\" rel=\"nofollow noreferrer\">\n   man page\n  </a>\n  to see the structure definition.\nBut IDA Pro has most of structures definition from standard libraries.\n </p>\n <blockquote>\n  <p>\n   Is __sighandler_t only a ptr to a function?\n  </p>\n </blockquote>\n <p>\n  Yes.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "wisk",
            "time": "Dec 27, 2018 at 16:27",
            "is_accepted": true,
            "comments": []
        }
    ]
}