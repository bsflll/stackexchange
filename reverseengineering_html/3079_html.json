{
    "title": "Is anyone building a python/ruby module to reuse 010 Editor templates?",
    "link": "https://reverseengineering.stackexchange.com/questions/3079/is-anyone-building-a-python-ruby-module-to-reuse-010-editor-templates",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I started using 010 Editor few days ago. Its template is amazingly powerful. But it's a shame these templates not able to be used directly with scripting languages like Ruby and Python. it's maybe a good personal project to build a python/ruby module.\n </p>\n <p>\n  Am I the first person with this idea? I don't think so. is there already a project I can contribute to? Or there is some legal issues?\n </p>\n <p>\n  (I did google but seems no result)\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "466",
    "tags": [
        "tools"
    ],
    "user": "wangii",
    "time": "Nov 24, 2013 at 0:24",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Yes, I've had this idea myself and also pitched it to the author. He wasn't too fond of it. You'll find that the biggest advantage of the template language is its likeness to C, but its greatest weakness are the differences where it doesn't follow the C semantics close enough. It won't matter until you have big files and do a reasonable amount of processing, but in that case LuaJIT would likely be the better choice anyway. However, there is no plugin interface in 010 Editor, so you'd have to go through hoops. Simpler to take a FLOSS editor and modify it.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "wangii",
            "text": "<html><body><span class=\"comment-copy\">\n @0xC0000022L I'm looking into parslet (\n <a href=\"http://kschiess.github.io/parslet/\" rel=\"nofollow noreferrer\">\n  kschiess.github.io/parslet\n </a>\n ), cparser (\n <a href=\"https://github.com/postmodern/cparser\" rel=\"nofollow noreferrer\">\n  github.com/postmodern/cparser\n </a>\n ), and bindata (\n <a href=\"https://github.com/dmendel/bindata\" rel=\"nofollow noreferrer\">\n  github.com/dmendel/bindata\n </a>\n ). see if they can be combined to make something\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I was searching for something similar and I found pfp!\n  <a href=\"https://github.com/d0c-s4vage/pfp\" rel=\"noreferrer\">\n   <strong>\n    pfp\n   </strong>\n  </a>\n  is a python-based interpreter for 010 template scripts. Also take a look at the\n  <a href=\"http://d0cs4vage.blogspot.com/2015/08/pfp-python-interpreter-for-010-templates.html\" rel=\"noreferrer\">\n   blog post\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "Edgar",
            "time": "Nov 11, 2015 at 22:16",
            "is_accepted": false,
            "comments": []
        }
    ]
}