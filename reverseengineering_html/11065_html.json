{
    "title": "Binary Instrumentation of malware binaries?",
    "link": "https://reverseengineering.stackexchange.com/questions/11065/binary-instrumentation-of-malware-binaries",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am developing a dynamic instrumentation tool using Intel PIN to analyze malware binaries in windows. From what I have learned so far is that I am able to use the tool with programs I write using C/C++.\n </p>\n <p>\n  My question is that, will the tool developed using PIN and C/C++, work fine for binaries developed in other languages? Or are there any special care I needed to be taken to analyze binaries developed in other languages?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "518",
    "tags": [
        "binary-analysis",
        "instrumentation",
        "pintool"
    ],
    "user": "Anurag",
    "time": "Oct 9, 2015 at 8:06",
    "comments": [
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n You can use dynamic instrumentation on any process that runs on the system. Scripting languages such as python does not run natively. The python VM executes python bytecode. So if you plan to instrument python programs, you are actually instrumenting the python VM and not your code.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Anurag",
            "text": "<html><body><span class=\"comment-copy\">\n Will processor size matter? For example if I am generating tool dll in 64bit system, it'll instrument only 64bit application or will work for both??\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n Architecture of tool and application must match. A 64 bit tool can only instrument 64 bit applications. See\n <i>\n  <a href=\"https://software.intel.com/sites/landingpage/pintool/docs/62141/Pin/html/index.html#MIXED-MODE\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n </i>\n for more details.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Anurag",
            "text": "<html><body><span class=\"comment-copy\">\n does that means if I am developing any tool for malwares, I need to develop separate tools for both 32 and 64bits??\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n Definitely so. For malware reversing with pin tools you can refer to these for some idea\n <b>\n  <i>\n   <a href=\"http://jbremer.org/malware-unpacking-level-pintool/\" rel=\"nofollow noreferrer\">\n    1\n   </a>\n  </i>\n </b>\n ,\n <b>\n  <i>\n   <a href=\"https://dl.mandiant.com/EE/library/MIRcon2014/MIRcon_2014_R&D_Track_PIN_Down_the_Malware.pdf\" rel=\"nofollow noreferrer\">\n    2\n   </a>\n  </i>\n </b>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Yes, your Pintool written in C/C++ works fine for binaries (of x86 or x86-64 instruction set) generated from compilers of other languages. You can see this quotes in the file README of any Pin distribution\n </p>\n <pre><code>... the [instrumented] application can use any compiler.\n</code></pre>\n <p>\n  Personally, I have used Pin to instrument binaries compiled by OCaml compiler (so the source code is OCaml).\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Ta Thanh Dinh",
            "time": "Oct 9, 2015 at 8:27",
            "is_accepted": true,
            "comments": []
        }
    ]
}