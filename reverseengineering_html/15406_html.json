{
    "title": "IDA pro: jump back to previous instruction",
    "link": "https://reverseengineering.stackexchange.com/questions/15406/ida-pro-jump-back-to-previous-instruction",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm new with IDA pro and currently running with debugger, I have few questions:\n </p>\n <ol>\n  <li>\n   How can I jump on previous instruction? Undo the latest instruction ?\n  </li>\n  <li>\n   Is it possible in IDA to examine memory of an executable ? Like it is in Immunity Debugger? Something like\n   <a href=\"https://i.sstatic.net/6weo6.jpg\" rel=\"nofollow noreferrer\">\n    this\n   </a>\n   and examine each segment briefly like it is in Immunity Debugger ?\n  </li>\n </ol>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 2,
    "views": "2k",
    "tags": [
        "ida",
        "debugging",
        "c",
        "immunity-debugger"
    ],
    "user": "Rasty",
    "time": "May 26, 2017 at 16:46",
    "comments": [
        {
            "user": "PhoeniX",
            "text": "<html><body><span class=\"comment-copy\">\n check those:\n <a href=\"https://reverseengineering.stackexchange.com/questions/1909/how-to-display-memory-zones-content-on-ida-pro\" title=\"how to display memory zones content on ida pro\">\n  reverseengineering.stackexchange.com/questions/1909/…\n </a>\n or\n <a href=\"https://reverseengineering.stackexchange.com/questions/11869/how-to-change-address-in-the-hex-view-in-ida-debugger\" title=\"how to change address in the hex view in ida debugger\">\n  reverseengineering.stackexchange.com/questions/11869/…\n </a>\n or\n <a href=\"https://reverseengineering.stackexchange.com/questions/12087/how-to-display-dump-data-in-ida-debugger\" title=\"how to display dump data in ida debugger\">\n  reverseengineering.stackexchange.com/questions/12087/…\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Martin",
            "text": "<html><body><span class=\"comment-copy\">\n To jump back to a previous instruction in the disassembly view, just press\n <code>\n  ESC\n </code>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As for the first point, in order to go back to instruction that was already executed (under the debugger), one needs to use a feature called reverse debugging (or Time Travel Debugging). As far as I know IDA's debugger doesn't have this.\n </p>\n <p>\n  Some other tools that you could use to do a reverse debugging:\n </p>\n <ul>\n  <li>\n   <p>\n    <a href=\"https://radare.gitbooks.io/radare2book/content/debugger/revdebug.html\" rel=\"nofollow noreferrer\">\n     radare2\n    </a>\n   </p>\n  </li>\n  <li>\n   <p>\n    <a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/time-travel-debugging-overview\" rel=\"nofollow noreferrer\">\n     WinDbg Preview\n    </a>\n   </p>\n  </li>\n  <li>\n   <p>\n    <a href=\"https://www.gnu.org/software/gdb/news/reversible.html\" rel=\"nofollow noreferrer\">\n     gdb\n    </a>\n   </p>\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Paweł Łukasik",
            "time": "Jun 21, 2018 at 17:32",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Debugging a program means executing its instruction on your CPU, \"undoing\" the last instruction is usually not possible with a standard debugger.\n </p>\n <p>\n  But you can debug your program in a virtual machine, take memory snapshots at given points while debugging, and restore those snapshots.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "user2823000",
            "time": "May 26, 2017 at 16:01",
            "is_accepted": false,
            "comments": []
        }
    ]
}