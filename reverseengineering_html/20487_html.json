{
    "title": "Process Immediately Killed",
    "link": "https://reverseengineering.stackexchange.com/questions/20487/process-immediately-killed",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to reverse an ARM executable. It's for an embedded system, but I don't have any details about the normally targeted environment.\n </p>\n <p>\n  Here's what\n  <code>\n   file\n  </code>\n  shows: ELF 32-bit LSB executable, ARM, EABI4 version 1 (SYSV), statically linked, stripped\n </p>\n <p>\n  I've tried running it on Linux using qemu and the process immediately terminates with the message \"Killed\". Running\n  <code>\n   strace ./executable\n  </code>\n  returns this:\n </p>\n <p>\n  <code>\n   execve(\"./executable\", [\"./executable\"], [/*13 vars */] <unfinished ...>\n+++ killed by SIGKILL +++ \nKilled\n  </code>\n </p>\n <p>\n  I'm using the Debian Wheezy image from here:\n  <a href=\"https://people.debian.org/~aurel32/qemu/armel/\" rel=\"nofollow noreferrer\">\n   https://people.debian.org/~aurel32/qemu/armel/\n  </a>\n </p>\n <p>\n  Any ideas why this is happening?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "175",
    "tags": [
        "linux",
        "arm",
        "elf"
    ],
    "user": "SArcher",
    "time": "Jan 28, 2019 at 1:11",
    "comments": [
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n <code>\n  file\n </code>\n doesn't always give the correct output. Try running\n <code>\n  readelf -A\n </code>\n to know specifically the version of ARM.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The process may send itself (or it's child processes) the SIGTERM signal as part of an anti-debugging trick. Hunting for that will require you to search for signal-sending APIs like\n  <a href=\"https://linux.die.net/man/3/kill\" rel=\"nofollow noreferrer\">\n   <code>\n    kill\n   </code>\n  </a>\n  and how/when they're being used by the application.\n </p>\n <p>\n  A more simple solution, that is not necessarily RE related, could be that the process is killed by the\n  <a href=\"https://www.memset.com/docs/additional-information/oom-killer/\" rel=\"nofollow noreferrer\">\n   OOM killer\n  </a>\n  .\n </p>\n <p>\n  To test that, you can run\n  <code>\n   mesg | egrep -i “killed process”\n  </code>\n  inside the emulated machine.\n </p>\n <p>\n  If that's the case, you can easily disable it (add\n  <code>\n   vm.oom-kill = 0\n  </code>\n  in\n  <code>\n   /etc/sysctl.conf\n  </code>\n  ).\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "NirIzr",
            "time": "Jan 28, 2019 at 11:28",
            "is_accepted": false,
            "comments": []
        }
    ]
}