{
    "title": "Has XOR EAX, EBX another purpose?",
    "link": "https://reverseengineering.stackexchange.com/questions/4649/has-xor-eax-ebx-another-purpose",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have the following line in an assembler code:\n </p>\n <pre><code> XOR EAX, EBX\n</code></pre>\n <p>\n  So, then I've searched a little bit and found out that XOR represents a \"swap algorithm\". You can read it here:\n  <a href=\"http://en.wikipedia.org/wiki/XOR_swap_algorithm\" rel=\"nofollow\">\n   http://en.wikipedia.org/wiki/XOR_swap_algorithm\n  </a>\n </p>\n <p>\n  But when I look in register window of ollydbg, then I have the following\n </p>\n <pre><code> EAX = 00000068\n EBX = 0000003B\n</code></pre>\n <p>\n  Now, after the line the register window says\n </p>\n <pre><code>EAX = 000000053\nEBX = 0000003B\n</code></pre>\n <p>\n  But from that what I have read in wikipedia article I would expect the following\n </p>\n <pre><code>EAX = 0000003B\nEBX = 00000053\n</code></pre>\n <p>\n  At the end, i can say that a normal XOR operation is performed because:\n </p>\n <pre><code>0111011   =>EAX=0000003B \n1101000   =>EBX=00000068\n-------\n1010011   =>EAX=00000053\n</code></pre>\n <p>\n  So my question would be why the swap algorithm is not performed. Or in other words: When can I expect the swap algorithm?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 2,
    "views": "6k",
    "tags": [
        "assembly"
    ],
    "user": "user3097712",
    "time": "Jun 20, 2014 at 14:44",
    "comments": [
        {
            "user": "phuclv",
            "text": "<html><body><span class=\"comment-copy\">\n the instruction for swapping data is\n <a href=\"http://x86.renejeschke.de/html/file_module_x86_id_328.html\" rel=\"nofollow noreferrer\">\n  <code>\n   xchg\n  </code>\n </a>\n , not\n <code>\n  xor\n </code>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As the first answer states, XOR is a bitewise XOR, not an XOR swap.\n </p>\n <p>\n  To do the Xor swap that you referenced from wikipedia it takes\n  <em>\n   3 instructions\n  </em>\n  :\n </p>\n <pre><code>xor eax, ebx\nxor ebx, eax\nxor eax, ebx\n</code></pre>\n <p>\n  Since you asked about the\n  <em>\n   purpose\n  </em>\n  of XOR I thought I would include some other concepts for you to read up on, so you might have an idea of what to expect from XORs\n </p>\n <p>\n  You can use XOR to clear a register:\n </p>\n <pre><code>xor eax,eax\n</code></pre>\n <p>\n  Calculate absolute value:\n </p>\n <pre><code>cdq\nxor eax,edx\nsub eax,edx\n</code></pre>\n <p>\n  XORs can be used for Crypto:\n  <a href=\"http://en.wikipedia.org/wiki/XOR_swap_algorithm\">\n   http://en.wikipedia.org/wiki/XOR_swap_algorithm\n  </a>\n </p>\n <p>\n  XORs are used in the CRC checksum algorithm:\n  <a href=\"http://en.wikipedia.org/wiki/Cyclic_redundancy_check\">\n   http://en.wikipedia.org/wiki/Cyclic_redundancy_check\n  </a>\n </p>\n <p>\n  XORs can be used to calculate Gray codes:\n  <a href=\"http://www.morkalork.com/mork/article/74/How_to_understand_and_use_Gray_code.htm#.U6RhN_ldXvI\">\n   http://www.morkalork.com/mork/article/74/How_to_understand_and_use_Gray_code.htm#.U6RhN_ldXvI\n  </a>\n </p>\n <p>\n  This is just the tip of the iceberg. The instruction can be used in a large number of situations.\n </p>\n</div>\n</body></html>",
            "votes": "13",
            "user": "MrSynAckSter",
            "time": "Jun 20, 2014 at 16:33",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The\n  <code>\n   XOR\n  </code>\n  mnemonic does not represent an XOR swap; it represents a\n  <a href=\"http://en.wikipedia.org/wiki/Bitwise_XOR\">\n   bitwise XOR\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "11",
            "user": "Jason Geffner",
            "time": "Jun 20, 2014 at 14:48",
            "is_accepted": false,
            "comments": []
        }
    ]
}