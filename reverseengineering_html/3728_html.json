{
    "title": "Patching ARM7 code during runtime",
    "link": "https://reverseengineering.stackexchange.com/questions/3728/patching-arm7-code-during-runtime",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  How do I go about patching ARM7 binary code for an ELF Shared Object during run-time?\nTo elaborate, I want to patch a specific routine during run-time for my own application.\n </p>\n <p>\n  I tried googling to check how to do this, but I can't find anything. I don't need the entire answer, what I need is: what functions I should use, and I can figure out the rest on my own.\n </p>\n <p>\n  The platform is ARM7 processors, specifically, mobile phones running the Android OS.\n </p>\n <p>\n  Thank you in advance.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 3,
    "views": "1k",
    "tags": [
        "android",
        "arm"
    ],
    "user": "chuacw",
    "time": "Feb 20, 2014 at 10:53",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n You probably meant \"ARMv7\", not ARM7 (yes, there's a difference). ARM7 CPUs can't run Android.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "phuclv",
            "text": "<html><body><span class=\"comment-copy\">\n ARM7 is a very old microarchitecture while ARMv7 is a new instruction set (before ARMv8)\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Depending if the memory is protected, you will have to give yourself permission to write to the specified area, mprotect, and then you can just memcpy over your code to the specified area.\n </p>\n <p>\n  The larger issue you run into when modifying code at runtime is\n  <a href=\"http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0151c/I27743.html\" rel=\"nofollow\">\n   cache coherency\n  </a>\n </p>\n <p>\n  ARM processors have 2 caches that you have to worry about, the ICache (instruction cache) and the DCache (data cache). When you self modify code, you end up changing instructions in the DCache but not necessarily in memory, or more importantly the ICache, therefor these caches become out of sync. You must take some steps to ensure these caches are \"clean\"/in sync. Flushing the DCache ensures that the changes made in DCache get written to memory.\n </p>\n <p>\n  Flushing the DCache forces the ICache to re-fetch instructions (aka your modified code). On ARM linux there is a syscall call\n  <code>\n   cacheflush\n  </code>\n  that takes care of this. Depending on how you are modifying memory/in what context, there is an issue of chicken or the egg, as your newly modified code cant contain the cache flush as the caches will already be out of sync, therefor there are other ways to force a cache flush, such as forcing a context switch, i.e. a sleep, when you don't have the ability to programmatically flush the cache.\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "jbh",
            "time": "Feb 26, 2014 at 14:15",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Jeroen Wiert Pluimers",
                    "text": "<span class=\"comment-copy\">Thanks a lot for the detailed information about caches and flushing. Very helpful.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In fact you need\n  <a href=\"http://linux.die.net/man/2/mprotect\" rel=\"nofollow\">\n   mprotect\n  </a>\n  (to gain a privilege to write to code area) and memcpy or any other thing to write to the memory.\n </p>\n <p>\n  Please note that ARM is built on\n  <a href=\"http://en.wikipedia.org/wiki/Harvard_architecture\" rel=\"nofollow\">\n   Harvard architecture\n  </a>\n  and after writing the code you'll possibly need to do something with code cache.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "w s",
            "time": "Feb 20, 2014 at 11:14",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Take a look at\n  <a href=\"https://github.com/crmulliner/adbi\" rel=\"nofollow\">\n   this\n  </a>\n  project. It patches Thumb and ARM instruction-set on the fly.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Yaron Shani",
            "time": "Jan 24, 2015 at 13:24",
            "is_accepted": false,
            "comments": []
        }
    ]
}