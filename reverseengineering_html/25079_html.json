{
    "title": "memory addresses in Hex View are always byte-aligned in new versions of IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/25079/memory-addresses-in-hex-view-are-always-byte-aligned-in-new-versions-of-ida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In IDA < 7, Hex View shows addresses starting from any memory location you choose (both synchronize or G + address). For example, asking for 0019E7EC shows:\n </p>\n <pre><code>0019E7EC  48 4B 46 42 39 39 2D 32  51 4D 38 35 33 2D 43 41  HKFB99-2QM853-CA\n0019E7FC  32 30 30 30 00 CD 48 01  A0 E8 19 00 41 CD E1 5D  2000.-H.áÞ..A-ß]\n</code></pre>\n <p>\n  In IDA > 7, Hex View shows addresses only aligned on 16-byte boundaries (address & 0FFFFFFF0). For example, asking for 0019E7EC now shows:\n </p>\n <pre><code>0019E7E0  A4 EA 19 00 5C 17 EF 00  00 F0 2C 00 48 4B 46 42  ¤ê..\\.ï..ð,.HKFB\n0019E7F0  39 39 2D 32 51 4D 38 35  33 2D 43 41 32 30 30 30  99-2QM853-CA2000\n</code></pre>\n <p>\n  Is there a way to restore the old Hex View behavior?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "56",
    "tags": [
        "ida"
    ],
    "user": "saiwa",
    "time": "May 21, 2020 at 9:05",
    "comments": [],
    "answers_data": []
}