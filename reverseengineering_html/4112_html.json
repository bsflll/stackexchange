{
    "title": "How to find \"references to addresses near this address\" in IDA Pro?",
    "link": "https://reverseengineering.stackexchange.com/questions/4112/how-to-find-references-to-addresses-near-this-address-in-ida-pro",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to decompile a binary in IDA Pro. Currently I am looking at a list of pointers to strings, which represent game data (\"Left turn\", \"Right turn\" etc). Frustratingly, it appears like nothing references the addresses storing this data, though I know they are used in the game.\n </p>\n <p>\n  So I am guessing the program is using some code to reference \"Left turn\" with pointer arithmetic, like\n  <code>\n   print(BASE_STRING_PTR + offset)\n  </code>\n  .\n </p>\n <p>\n  This is difficult to detect though; I'm new to IDA and have been playing around with the buttons but haven't found anything short of trying \"Find references\" for each address above the address I want. I was hoping more experienced reverse engineers would have some advice?\n </p>\n <p>\n  If there is another tool that's good for this, awesome, though I'm on a Mac which limits me somewhat.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "4k",
    "tags": [
        "ida"
    ],
    "user": "Kevin Burke",
    "time": "Apr 21, 2014 at 14:34",
    "comments": [
        {
            "user": "Avery3R",
            "text": "<html><body><span class=\"comment-copy\">\n Do the strings show up in .rsrc?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Kevin Burke",
            "text": "<html><body><span class=\"comment-copy\">\n I'm not sure what that is.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Avery3R",
            "text": "<html><body><span class=\"comment-copy\">\n .rsrc is the segment where resources are stored. If the address of the string looks like .rsrc:ADDR then it is in .rsrc. Resources aren't accessed normally, they're accessed through WINAPI functions such as\n <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms648047%28v=vs.85%29.aspx\" rel=\"nofollow noreferrer\">\n  LockResource\n </a>\n . However, this is all entirely irrelevant if you're not using windows, or the program you're analyzing is not a windows program.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Kevin Burke",
            "text": "<html><body><span class=\"comment-copy\">\n Ah, I think the parts of the program I'm looking at are in the .data section.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "rollsch",
            "text": "<html><body><span class=\"comment-copy\">\n Good question. Other than searching for sequences of bytes I haven't found a good way to find pointer+offset. You could of course write a script to do so, it would be fairly easy to search for bytes within a certain range.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In this case, the best approach is to use a debugger (either IDA Pro's debugger or another debugger of your choosing).\n </p>\n <p>\n  Run the program in a debugger and set a hardware-read breakpoint on the first byte of one of the strings. Then interact with the program in a way that causes that given string to be accessed by the program (for example, something that causes the string to be displayed on the screen). The hardware breakpoint should trigger, allowing you to look at the call-stack in the debugger to see what code in the program caused the given string to be accessed.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Jason Geffner",
            "time": "Apr 21, 2014 at 14:41",
            "is_accepted": false,
            "comments": []
        }
    ]
}