{
    "title": "Ghidra Python - Get Decompile Line Text by RVA",
    "link": "https://reverseengineering.stackexchange.com/questions/24685/ghidra-python-get-decompile-line-text-by-rva",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Is there a way in Ghidra Python to get the corresponding decompile line by\n  <code>\n   RVA\n  </code>\n  ?\n </p>\n <p>\n  Or the opposite - get the corresponding\n  <code>\n   RVA\n  </code>\n  from a given line in a decompile?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "1k",
    "tags": [
        "decompilation",
        "python",
        "ghidra"
    ],
    "user": "macro_controller",
    "time": "Apr 11, 2020 at 10:23",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I don't know how any examples how you could get the line like Ghidra would render it, but as a start you can look at\n  <a href=\"https://github.com/schlafwandler/ghidra_ExportToX64dbg\" rel=\"nofollow noreferrer\">\n   https://github.com/schlafwandler/ghidra_ExportToX64dbg\n  </a>\n  .\n </p>\n <p>\n  The basic idea is to walk the C-AST and extract the ClangStatements that have a corresponding RVA.\n </p>\n <p>\n  This has limitations, namely:\n </p>\n <blockquote>\n  <p>\n   At the moment the source code export is limited to elements that appear as\n   <code>\n    ClangStatement\n   </code>\n   in the\n   <code>\n    ClangTokenGroup\n   </code>\n   returned by\n   <code>\n    getCCodeMarkup()\n   </code>\n   . This works fine for most variable assignments and function calls, but excludes most control flow altering constructs (like\n   <code>\n    if\n   </code>\n   ,\n   <code>\n    for\n   </code>\n   or\n   <code>\n    while\n   </code>\n   ).\n  </p>\n </blockquote>\n <p>\n  If you really need the line and not the ClangStatement, my first idea is to search for the Ghidra code that renders the AST, find the part where a line is rendered and extend it to retain a mapping from a line to a list of ClangStatements used in that line. Then you can iterate over the lines and filter for those that use a statement that has the RVA you are interested in.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Florian Magin",
            "time": "Apr 11, 2020 at 13:42",
            "is_accepted": true,
            "comments": []
        }
    ]
}