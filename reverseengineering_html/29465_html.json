{
    "title": "What does Ghidra mean by ._0_3_?",
    "link": "https://reverseengineering.stackexchange.com/questions/29465/what-does-ghidra-mean-by-0-3",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  What does\n  <code>\n   ._0_3_\n  </code>\n  mean in the Ghidra decompiler?\n </p>\n <pre><code>my_string[0]._0_3_ = CONCAT12(DAT_14123b1f6,DAT_14123b1f4);\n</code></pre>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ghidra",
        "decompiler"
    ],
    "user": "Anna",
    "time": "Oct 27, 2021 at 18:57",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  you need to check the relevant disassembly and retype variable\n </p>\n <p>\n  this is basically due to size difference between variable (truncation , casting ) etc\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/qPvX8.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/qPvX8.png\"/>\n  </a>\n </p>\n <p>\n  in the screenshot above uvar15 is a ULONGLONG a64 bit register R9:8 as shown in popup\nso uVar2 inherits the type\n </p>\n <p>\n  in the next line uVar2 is casted as 32 bit (uint) and orred with another 32bit entity\n </p>\n <p>\n  and stored on the lower half of 64 bit register\n </p>\n <p>\n  this is denoted in the decompiler result as\n  <code>\n   uVar15._0_4_\n  </code>\n </p>\n <p>\n  this can also happen  if a struct member type is accessed or a byte in a char array is accessed\n </p>\n <p>\n  <code>\n   mystring[0]._0_3_\n  </code>\n  is doing something on the 3rd( byte ,char  , xxx ) of a type of some array\n </p>\n <p>\n  check your disassembly ,split the variable ,retype the variable for clarity\n </p>\n <h1>\n  edit\n </h1>\n post relevant disassembly de-compilation results without accompanying disassembly does not help\n <p>\n  basically concat 12 is concatenating 1byte + 2byte from specified locations\n </p>\n <p>\n  so it is a total of 3 bytes\n  \n\n  the three bytes are stored in least three bytes of a ptr  mystring[0]\n </p>\n <p>\n  assume rcx = \"00 00 00 00 00 00 00 00\"  at start\n  \n\n  concat12(x,y)  takes one char from x and two chars from y and combines them\n  \n\n  'a'+'bc'  == {61 62 63}as hex\n  \n\n  and rcx is made to be \"00 00 00 00 00 61 62 63\"  at end\n </p>\n <p>\n  then the operation on the Least three byte are indicated by the suffix\n  <strong>\n   .\n   <em>\n    0_3\n   </em>\n  </strong>\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "blabb",
            "time": "Oct 28, 2021 at 19:35",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Anna",
                    "text": "<span class=\"comment-copy\">Sorry, I could not understand your answer enough to ask for clarification. I still don't understand what <code>._0_3_</code> means?</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">i tried to clarify further but doing this without relevant disassembly isn't fun</span>",
                    "time": null
                },
                {
                    "user": "Anna",
                    "text": "<span class=\"comment-copy\">Aha so am I understanding correctly that <code>._0_3</code> refers to the least three bytes?</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">post disassembly without that this is mere guesswork</span>",
                    "time": null
                }
            ]
        }
    ]
}