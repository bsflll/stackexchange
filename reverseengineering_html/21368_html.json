{
    "title": "What does ds mean?",
    "link": "https://reverseengineering.stackexchange.com/questions/21368/what-does-ds-mean",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  When debugging with x64dbg I sometimes see\n  <code>\n   mov ss:[address] 0xAA\n  </code>\n  , I know that this means: move 0xAA into memory at specified address.\n </p>\n <p>\n  But what does\n </p>\n <pre><code>mov ds:[address] 0xAA\n</code></pre>\n <p>\n  mean?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "1k",
    "tags": [
        "disassembly",
        "assembly",
        "x64dbg"
    ],
    "user": "Sam",
    "time": "May 26, 2019 at 18:53",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The\n  <code>\n   ds\n  </code>\n  means \"data segment\" register in x86 architecture, while\n  <code>\n   ss\n  </code>\n  states for \"stack segment\" register. You would probably want to read\n  <a href=\"https://reverseengineering.stackexchange.com/questions/2006/how-are-the-segment-registers-fs-gs-cs-ss-ds-es-used-in-linux\">\n   link\n  </a>\n  for more comprehensive description. When you see\n </p>\n <pre><code>mov ds:[address], 0xAA,\n</code></pre>\n <p>\n  it means \"move\n  <code>\n   0xAA\n  </code>\n  to address\n  <code>\n   address\n  </code>\n  in data segment\", that is segment pointed by the current value of\n  <code>\n   ds\n  </code>\n  register. Similarly with every other segment register.\n </p>\n <p>\n  In x64 architecture segment registers are ignored.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "bart1e",
            "time": "May 26, 2019 at 19:10",
            "is_accepted": true,
            "comments": []
        }
    ]
}