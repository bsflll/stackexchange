{
    "title": "Windbg conditional breakpoint issue",
    "link": "https://reverseengineering.stackexchange.com/questions/32802/windbg-conditional-breakpoint-issue",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Can't get a conditional breakpoint to fire in Windbg. I tried:\n </p>\n <pre><code>bp xxxxxxxx \"j (@ebp+0C==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (ebp+0C==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (poi(ebp+0C)==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (poi(@ebp+0C)==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (poi(@ebp+0xC)==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (@ebp+0xC==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (@ebp+0x0C==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (poi(@ebp+0x0C)==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (ebp+0x0C==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (poi(ebp+0x0C)==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (poi(ebp+c)==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (ebp+c==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (ebp+0x0c==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j poi(ebp+0x0c)==115 ''; 'gc' \"\n</code></pre>\n <p>\n  The 115 value is in hex.\n </p>\n <p>\n  Another thing I need is to have two conditions. Like:\n </p>\n <pre><code>bp xxxxxxxx \"j ((poi(ebp+0x0c)==115)&&(poi(ebp+12)==7)) ''; 'gc' \"\n</code></pre>\n <p>\n  Nothing works!\nThanks in adv\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "118",
    "tags": [
        "windbg"
    ],
    "user": "Uddie",
    "time": "May 6, 2024 at 4:59",
    "comments": [
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<html><body><span class=\"comment-copy\">\n Are you intending 115 in to be in hex, or decimal? By default the MASM number base is 16, which you can change with\n <code>\n  n\n </code>\n . I know you suggest \"115\" to be in hex, but in your last expr, you dereference an unaligned pointer at 0x12 past\n <code>\n  %ebp\n </code>\n .  Btw, you can specify decimal numbers with the \"0n\" prefix (as opposed to \"0x\" for hex). It's a good habit to use a prefix whenever you specify _all_ of your numbers. This way you can prevent a symbol lookup in case you mistype a hex number that's full of alpha-digits. Same deal with registers, by prefixing them with \"@\".\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<html><body><span class=\"comment-copy\">\n With regards to combining numerical expressions, the\n <code>\n  &&\n </code>\n isn't a numeric expression, but you probably realize that \"==\" returns a 0 or 1 (you can test your expressions with\n <code>\n  ? expr\n </code>\n ). So, if you just use a binary\n <code>\n  &\n </code>\n between both comparisons, you can get the entire expr to return 1, which'd result in\n <code>\n  j\n </code>\n executing the first command.  Wrt your list, at least one of those should work. It might help to clarify whether you're trying to deref a pointer at\n <code>\n  @ebp+0xc\n </code>\n and check its value for 0x115, or check that\n <code>\n  @ebp+0xc == 0x115\n </code>\n . You can also use\n <code>\n  .if (...) {}\n </code>\n if quoting is messing you up.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Uddie",
            "text": "<html><body><span class=\"comment-copy\">\n Thanks for reply Rizvi-Santago. I've already resolved the problem. It didn't trigger because of another reason. And the && never worked but the AND operator did!\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Rohit Gupta",
            "text": "<html><body><span class=\"comment-copy\">\n Uddie, please post that as an answer.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The breakpoint would trigger but would not actually stop executing because you are continuing the execution using the\n  <strong>\n   'gc'\n  </strong>\n  command right after it.\n </p>\n <p>\n  if you want to just break conditionally the syntax is as follows (as mentioned\n  <a href=\"https://learn.microsoft.com/en-us/windows-hardware/drivers/debugger/setting-a-conditional-breakpoint\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  ):\n </p>\n <p>\n  <strong>\n   bp /w \"(Condition)\" Address\n  </strong>\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "rotem.salinas",
            "time": "May 6, 2024 at 19:56",
            "is_accepted": false,
            "comments": []
        }
    ]
}