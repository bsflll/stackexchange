{
    "title": "Using the AND operator to find a heap allocation size, Fermin's formula",
    "link": "https://reverseengineering.stackexchange.com/questions/15340/using-the-and-operator-to-find-a-heap-allocation-size-fermins-formula",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I came across\n  <a href=\"http://zhodiac.hispahack.com/index.php?section=blog&month=1&year=2012\" rel=\"nofollow noreferrer\">\n   this technique\n  </a>\n  , leveraging the HPA feature (Heap Page Allocator, known as PageHeap) in gflags from Windows debugging tools, to find the size of a heap allocation:\n </p>\n <blockquote>\n  <p>\n   Lets say you have found a use-after-free on program X where at some point it is dereferencing a register plus an offset.\n  </p>\n  <p>\n   You could:\n  </p>\n  <p>\n   1) Open IDA an lookup where the object got created to see the size of the allocation.\n  </p>\n  <p>\n   2) Use page heap, windbg and take a look to the allocation stack trace\n  </p>\n  <p>\n   3) Windbg !heap -p -a\n  </p>\n  <p>\n   Or... a quick trick I used today, taking advantage of page heap placing the object at the end of a page for catching buffer overflows.\n  </p>\n  <p>\n   1:022:x86>\n   <strong>\n    ? 0x1000-(ebx&0x00000FFF)\n   </strong>\n   Evaluate expression: 88 = 00000058 <--- size of chunk\n  1:022:x86>\n  </p>\n  <p>\n   Fermin J. Serna - @fjserna\n  </p>\n </blockquote>\n <h2>\n  <strong>\n   Why does it work?\n  </strong>\n </h2>\n <p>\n  This is what I understand:\n </p>\n <ul>\n  <li>\n   Each page is 0x1000 bytes (4kb).\n  </li>\n  <li>\n   Each block smaller than 0x1000 would be allocated from the end of the page backwards.\n  </li>\n  <li>\n   Therefore, by taking the page size and subtracting the block size from it, retrieved from the block's address last 3 digits that we get using the & operator, you get its actual size.\n  </li>\n </ul>\n <p>\n  <strong>\n   It seems a bit voodoo, because:\n  </strong>\n </p>\n <ol>\n  <li>\n   <p>\n    In order for the subtraction to work, the inspected allocated block address must be aligned with 1000. Does HPA align everything in pages somehow? I didn't find any resource with enough information about it. Is there any other way that HPA makes this formula work with?\n   </p>\n  </li>\n  <li>\n   <p>\n    How does the AND operator actually makes the value return only the last 3 digits? I don't get its logic.\n   </p>\n  </li>\n </ol>\n <p>\n  Could anyone be kind enough to explain these things for us?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "151",
    "tags": [
        "windows",
        "debugging",
        "windbg",
        "exploit",
        "heap"
    ],
    "user": "Steve",
    "time": "May 13, 2017 at 17:26",
    "comments": [
        {
            "user": "Thomas Weller",
            "text": "<html><body><span class=\"comment-copy\">\n On one hand side this is a question which requires deep knowledge, on the other hand side you don't know how the AND operator works, which is an absolute beginner operation. I don't really know on what level of understanding I should provide an answer\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}