{
    "title": "Where is ntdll.dll?",
    "link": "https://reverseengineering.stackexchange.com/questions/4465/where-is-ntdll-dll",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to get the base address of\n  <code>\n   ntdll.dll\n  </code>\n  over the\n  <code>\n   PEB\n  </code>\n  . So, what I did was to dump the\n  <code>\n   PEB\n  </code>\n  (\n  <code>\n   d fs:[30]\n  </code>\n  ). Then, I tried to get to\n  <code>\n   PEB_LDR_DATA\n  </code>\n  over the offset\n  <code>\n   0xC\n  </code>\n  . Over the offset\n  <code>\n   0x1C\n  </code>\n  of\n  <code>\n   PEB_LDR_DATA\n  </code>\n  I found the the pointer of\n  <code>\n   InInitializationOrderModuleList\n  </code>\n  and I was told that I can find the\n  <code>\n   ntdll.dll\n  </code>\n  address there. And that I should first find the address of\n  <code>\n   kernel32.dll\n  </code>\n  (which is always the second entry). So, I was able to find the address of\n  <code>\n   kernel32.dll\n  </code>\n  but it seems like I can't find the address of\n  <code>\n   ntdll.dll\n  </code>\n  .\n </p>\n <pre><code>00251ED8  .ܛὈ%Ậ%ὐ%Ẵ%.....@ᐴ@怀.TVٜڔ倀...뉨粘뉨粘趨即....ꮫꮫꮫꮫ......ܨ‐%Ỡ%‘%Ứ%\n00251F58  †%Ẽ%.粑Ⱘ粒怀:Ȉ퀨粘⅘粓䀄耈..니粘니粘뾿䠂....ꮫꮫꮫꮫ......ܵC:\\WINDOWS\\system32\\\n00251FD8  kernel32.dll.ꮫꮫꮫꮫﻮﻮﻮ......߁⅐%Ὀ%⅘%ὐ%Ⅰ%὘%.粀똾粀耀@Bᾰ%Ῐ%䀄耈..늰粘늰粘뿀䠂\n00252058  ....ꮫꮫꮫꮫ.....ߎC:\\WINDOWS\\WinSxS\\x86_Microsoft.VC90.CRT_1fc8b3b\n002520D8  9a1e18e3b_9.0.21022.8_x-ww_d08d0375\\MSVCR90.dll.ꮫꮫꮫꮫ.....ߩẬ%‐%\n00252158  Ẵ%‘%Ẽ%†%.硒ⵀ硔　.¾À⁸%℠%䀆逈..닀粘닀粘㷎䜱....ꮫꮫꮫꮫ....ߊ.ᓮîŸ%Ÿ%ﻮﻮﻮﻮﻮﻮﻮﻮﻮﻮﻮﻮ\n</code></pre>\n <p>\n  This is the part where I have found the\n  <code>\n   kernel32.dll\n  </code>\n  . But in the fact of that this a linked list. Shouldn't I be able to find\n  <code>\n   ntdll.dll\n  </code>\n  too?\n </p>\n <p>\n  When, I open up the window of \"Executable Modules\" I can see the\n  <code>\n   ntdll.dll\n  </code>\n  but it seem I am not able to find the base address inside of the\n  <code>\n   Struct\n  </code>\n  .\n </p>\n <p>\n  Please tell me if you need clarification or if I am grievously mistaken.\n </p>\n</div>\n</body></html>",
    "votes": "9",
    "answers": 2,
    "views": "5k",
    "tags": [
        "windows",
        "assembly",
        "memory",
        "immunity-debugger"
    ],
    "user": "Dirk",
    "time": "May 28, 2014 at 7:12",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The code below will set\n  <code>\n   EAX\n  </code>\n  to the image base address of\n  <code>\n   ntdll.dll\n  </code>\n  :\n </p>\n <pre><code>MOV EAX, DWORD PTR FS:[30]     ; EAX = PEB\nMOV EAX, DWORD PTR DS:[EAX+0C] ; EAX = PEB->Ldr\nMOV EAX, DWORD PTR DS:[EAX+1C] ; EAX = PEB->Ldr.InInitializationOrderModuleList.Flink\nMOV EAX, DWORD PTR DS:[EAX+8]  ; EAX = image base of ntdll (LDR_MODULE's BaseAddress)\n</code></pre>\n <p>\n  Based on your question above, it seems like you understand everything through the\n  <code>\n   MOV EAX, DWORD PTR DS:[EAX+1C]\n  </code>\n  instruction. Since\n  <code>\n   ntdll.dll\n  </code>\n  is the first module loaded, it's the first\n  <code>\n   LDR_MODULE\n  </code>\n  entry in\n  <code>\n   InInitializationOrderModuleList\n  </code>\n  . So with\n  <code>\n   EAX\n  </code>\n  pointing to\n  <code>\n   PEB->Ldr.InInitializationOrderModuleList.Flink\n  </code>\n  ,\n  <code>\n   [EAX+0]\n  </code>\n  points to the list entry's\n  <code>\n   Flink\n  </code>\n  ,\n  <code>\n   [EAX+4]\n  </code>\n  points to the list entry's\n  <code>\n   Blink\n  </code>\n  , and\n  <code>\n   [EAX+8]\n  </code>\n  is the\n  <code>\n   BaseAddress\n  </code>\n  value of the first\n  <code>\n   LDR_MODULE\n  </code>\n  entry (\n  <code>\n   ntdll.dll\n  </code>\n  's\n  <code>\n   LDR_MODULE\n  </code>\n  ).\n </p>\n <p>\n  This image from\n  <a href=\"http://blog.csdn.net/programmingring/article/details/11357393\" rel=\"noreferrer\">\n   http://blog.csdn.net/programmingring/article/details/11357393\n  </a>\n  may help:\n  <img alt=\"diagram\" src=\"https://i.sstatic.net/GVtLO.jpg\"/>\n </p>\n <p>\n  When\n  <code>\n   EAX\n  </code>\n  is set to\n  <code>\n   PEB->Ldr.InInitializationOrderModuleList.Flink\n  </code>\n  , it's pointing to the orange\n  <code>\n   Flink\n  </code>\n  in the first\n  <code>\n   LDR_MODULE\n  </code>\n  above. It's followed by the\n  <code>\n   Blink\n  </code>\n  at\n  <code>\n   [EAX+4]\n  </code>\n  , and the \"\n  <code>\n   DllBase\n  </code>\n  \" (\n  <code>\n   BaseAddress\n  </code>\n  ) at\n  <code>\n   [EAX+8]\n  </code>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "12",
            "user": "Jason Geffner",
            "time": "May 27, 2014 at 16:11",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Assuming you want to see it in Windbg.\n </p>\n <p>\n  You can follow this walk through for each pointer points to successive\n  <code>\n   LDR_DATA_TABLE_ENTRY\n  </code>\n  the output is from\n  <code>\n   calc.exe\n  </code>\n  .\n </p>\n <pre><code>0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(@$peb+c)+c)\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\calc.exe\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(@$peb+c)+c))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\ntdll.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(@$peb+c)+c)))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\kernel32.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(@$peb+c)+c))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\SHELL32.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(@$peb+c)+c)))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\ADVAPI32.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(poi(@$peb+c)+c))))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\RPCRT4.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(poi(poi(@$peb+c)+c)))))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\Secur32.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(poi(poi(poi(@$peb+c)+c))))))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\GDI32.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(@$peb+c)+c)))))))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\USER32.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(@$peb+c)+c))))))))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\msvcrt.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(@$peb+c)+c)))))))))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\SHLWAPI.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(@$peb+c)+c))))))))))))\n   +0x024 FullDllName : _UNICODE_STRING \"\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(@$peb+c)+c)))))))))))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\calc.exe\"\n</code></pre>\n <p>\n  <strong>\n   an alternate representation of the above method\n  </strong>\n </p>\n <pre><code>lkd> dt nt!_ldr_data_table_entry -y Full @@c++(@$peb->Ldr->InLoadOrderModuleList.Flink)\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\Program Files\\Windows Kits\\8.0\\Debuggers\\x86\\windbg.exe\"\nlkd> dt nt!_ldr_data_table_entry -y Full @@c++(@$peb->Ldr->InLoadOrderModuleList.Flink->Flink)\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\ntdll.dll\"\nlkd> dt nt!_ldr_data_table_entry -y Full @@c++(@$peb->Ldr->InLoadOrderModuleList.Flink->Flink->Flink)\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\kernel32.dll\"\nlkd> dt nt!_ldr_data_table_entry -y Full @@c++(@$peb->Ldr->InLoadOrderModuleList.Flink->Flink->Flink->Flink)\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\ADVAPI32.dll\"\n</code></pre>\n</div>\n</body></html>",
            "votes": "4",
            "user": "blabb",
            "time": "May 30, 2014 at 8:05",
            "is_accepted": false,
            "comments": []
        }
    ]
}