{
    "title": "Figuring a CRC to edit a PS1 save file",
    "link": "https://reverseengineering.stackexchange.com/questions/32380/figuring-a-crc-to-edit-a-ps1-save-file",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  So I've set myself the goal of editing Crash Bash saves for the PS1.\nI'm using RetroArch + PCSX, so I'm editing memory card .srm files binary contents directly.\n </p>\n <p>\n  Uploaded a zip with some save games, in case you want to look at them:\n  <a href=\"https://drive.google.com/file/d/1xZgQGt4MmSoduK5lWjAT1osa1hBEbsEE/view?usp=drive_link\" rel=\"nofollow noreferrer\">\n   https://drive.google.com/file/d/1xZgQGt4MmSoduK5lWjAT1osa1hBEbsEE/view?usp=drive_link\n  </a>\n </p>\n <p>\n  After editing file contents, the game ignores the save. Through trial and error, I've seen that I can't modify anything inside the range [0x2200, 0x2850), so that must be CRC-checked.\n </p>\n <p>\n  Anything before 0x2200 (e.g. file name, icons) is defined in the specs for the memory card file format in here:\n  <a href=\"https://www.psdevwiki.com/ps3/PS1_Savedata\" rel=\"nofollow noreferrer\">\n   https://www.psdevwiki.com/ps3/PS1_Savedata\n  </a>\n </p>\n <p>\n  The files end up with what looks to be a 32-bit CRC hash.\n0x2850: 01 00 00 00 00 00 00 00 00 00 00 00 E3 B6 0C E7\n </p>\n <p>\n  Weirdly enough, the hash is at 0x285C, but the hash is not covering the gap between (0x2850, 0x285C), so I can edit those bits and the game recognizes and loads the save just fine.\nI think it's safe to say that the game data is in the [0x2200, 0x2860) range and that the game is the one (i.e. not the system) running the CRC-check over [0x2200, 0x2850).\n </p>\n <p>\n  I've tried copying the hex values of the save into\n  <a href=\"https://crccalc.com/\" rel=\"nofollow noreferrer\">\n   https://crccalc.com/\n  </a>\n  to see if any of the values would match, but no luck.\n </p>\n <p>\n  I've also tried using\n  <a href=\"https://reveng.sourceforge.io/\" rel=\"nofollow noreferrer\">\n   https://reveng.sourceforge.io/\n  </a>\n  ,\n  <a href=\"https://crc-reveng.septs.app/\" rel=\"nofollow noreferrer\">\n   https://crc-reveng.septs.app/\n  </a>\n  with options:\n-w 32 -l -s\n </p>\n <p>\n  So that:\n </p>\n <ul>\n  <li>\n   -w: Assuming that the hash is 32 bit\n  </li>\n  <li>\n   -l: I think that PSX is little-endian, so I assume that this CRC should also be little endian\n  </li>\n  <li>\n   -s: search mode from reveng\n  </li>\n </ul>\n <p>\n  Since reveng seems to work better with more samples, I've been doing some additional saves, so I have 6 sample files.\n </p>\n <p>\n  But that returns no results. Judging the usages I've seen (\n  <a href=\"https://hackaday.com/2019/06/27/reverse-engineering-cyclic-redundancy-codes/\" rel=\"nofollow noreferrer\">\n   https://hackaday.com/2019/06/27/reverse-engineering-cyclic-redundancy-codes/\n  </a>\n  ), I think it should be fine with 6 saves, but all use cases I've seen have always been running over smaller data, so who knows.\n </p>\n <p>\n  So I'm running a bit out of ideas here. Let me know if you have any recommendations.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "286",
    "tags": [
        "crc",
        "game-hacking",
        "checksum"
    ],
    "user": "Xavier Arias Botargues",
    "time": "Oct 8, 2023 at 16:56",
    "comments": [
        {
            "user": "Bavi_H",
            "text": "<html><body><span class=\"comment-copy\">\n Note: This question also appears at the ROMHacking.net forum thread\n <a href=\"https://www.romhacking.net/forum/index.php?topic=37808.0\" rel=\"nofollow noreferrer\">\n  Figuring a CRC to edit a PS1 save file\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <em>\n   Note: I also posted this answer at the following ROMHacking.net forum post:\n   <a href=\"https://www.romhacking.net/forum/index.php?topic=37808.msg449648#msg449648\" rel=\"nofollow noreferrer\">\n    Re: Figuring a CRC to edit a PS1 save file\n   </a>\n  </em>\n </p>\n <p>\n  It looks like the \"hash\" function is just a simple 32-bit sum: In the files you provided, if you treat each group of 4 bytes in the range [0x2200, 0x2850) as a little-endian unsigned integer and sum them all up (modulo 2\n  <sup>\n   32\n  </sup>\n  ), the sum will match the 4-byte little-endian unsigned value at 0x285C.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Bavi_H",
            "time": "Oct 13, 2023 at 11:01",
            "is_accepted": true,
            "comments": []
        }
    ]
}