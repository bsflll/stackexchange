{
    "title": "How to debug binwalk tool?",
    "link": "https://reverseengineering.stackexchange.com/questions/14948/how-to-debug-binwalk-tool",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  My lecturers have requested that I debug\n  <code>\n   binwalk\n  </code>\n  in order to understand how it works and develop new features so that it can extract more. I tried to use\n  <code>\n   gdb\n  </code>\n  to debug\n  <code>\n   binwalk\n  </code>\n  but it results in the error message \"/usr/bin/binwalk\": not in executable format: File format not recognized\". What other tool can be used to debug it?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "393",
    "tags": [
        "debugging",
        "debuggers"
    ],
    "user": "QChí Nguyễn",
    "time": "Mar 19, 2017 at 15:26",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <p>\n   I tried to use\n   <code>\n    gdb\n   </code>\n   to debug\n   <code>\n    binwalk\n   </code>\n   but it results in the error message \"/usr/bin/binwalk\": not in executable format: File format not recognized\".\n  </p>\n </blockquote>\n <p>\n  In order for\n  <code>\n   gdb\n  </code>\n  to interface with a binary executable, the binary must have one of the following\n  <a href=\"https://sourceware.org/gdb/wiki/Internals%20Object-File-Formats\" rel=\"nofollow noreferrer\">\n   object file formats\n  </a>\n  :\n </p>\n <ul>\n  <li>\n   a.out\n  </li>\n  <li>\n   COFF\n  </li>\n  <li>\n   ECOFF\n  </li>\n  <li>\n   XCOFF\n  </li>\n  <li>\n   PE\n  </li>\n  <li>\n   ELF\n  </li>\n  <li>\n   SOM\n  </li>\n </ul>\n <p>\n  The binary must also have intact section information, as\n  <code>\n   gdb\n  </code>\n  relies on\n  <code>\n   libbfd\n  </code>\n  . Since\n  <code>\n   binwalk\n  </code>\n  is written in Python and interpreted by the Python interpreter instead of being compiled in to an executable binary that conforms to one of the aforementioned formats,\n  <code>\n   gdb\n  </code>\n  cannot be used to dynamically analyze\n  <code>\n   binwalk\n  </code>\n  .\n </p>\n <blockquote>\n  <p>\n   My lecturers have requested that I debug binwalk in order to understand how it works and develop new features so that it can extract more.\n  </p>\n </blockquote>\n <p>\n  If your primary goal is extending the functionality of\n  <code>\n   binwalk\n  </code>\n  , then dynamically analyzing it may not be as productive as looking at\n </p>\n <ul>\n  <li>\n   the\n   <a href=\"https://github.com/devttys0/binwalk\" rel=\"nofollow noreferrer\">\n    the source code\n   </a>\n  </li>\n </ul>\n <p>\n  as well as\n  <a href=\"https://github.com/devttys0/binwalk/wiki\" rel=\"nofollow noreferrer\">\n   documentation\n  </a>\n  on\n </p>\n <ul>\n  <li>\n   <a href=\"https://github.com/devttys0/binwalk/wiki/Signature-File-Format\" rel=\"nofollow noreferrer\">\n    The signature file format\n   </a>\n  </li>\n  <li>\n   <a href=\"https://github.com/devttys0/binwalk/wiki/Creating-Custom-Signatures\" rel=\"nofollow noreferrer\">\n    Creating custom signatures\n   </a>\n  </li>\n  <li>\n   <a href=\"https://github.com/devttys0/binwalk/wiki/Creating-Custom-Plugins\" rel=\"nofollow noreferrer\">\n    Creating custom plugins\n   </a>\n  </li>\n  <li>\n   <a href=\"https://github.com/devttys0/binwalk/blob/master/API.md\" rel=\"nofollow noreferrer\">\n    Scripting with the API\n   </a>\n  </li>\n </ul>\n <p>\n  But if \"debugging\"\n  <code>\n   binwalk\n  </code>\n  is the primary focus, then\n  <a href=\"https://docs.python.org/2/library/pdb.html\" rel=\"nofollow noreferrer\">\n   pdb\n  </a>\n  or using a Python IDE will work.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "julian",
            "time": "Mar 19, 2017 at 14:39",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Binwalk is written on Python language. Please try pdb. Python debugger.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "malikcjm",
            "time": "Mar 19, 2017 at 13:16",
            "is_accepted": false,
            "comments": [
                {
                    "user": "HamZa",
                    "text": "<span class=\"comment-copy\">or any modern python IDE with debugging capabilities such as PyCharm.</span>",
                    "time": null
                }
            ]
        }
    ]
}