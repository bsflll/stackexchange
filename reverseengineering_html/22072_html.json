{
    "title": "Decrypting the Config file of a Huawei router \"HG630 V2\"",
    "link": "https://reverseengineering.stackexchange.com/questions/22072/decrypting-the-config-file-of-a-huawei-router-hg630-v2",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  followed that post from Wordpress\n </p>\n <blockquote>\n  <p>\n   <a href=\"https://hg658c.wordpress.com/2017/12/04/decrypting-configuration-files-from-other-huawei-home-gateway-routers/\" rel=\"nofollow noreferrer\">\n    https://hg658c.wordpress.com/2017/12/04/decrypting-configuration-files-from-other-huawei-home-gateway-routers/\n   </a>\n  </p>\n </blockquote>\n <p>\n  Extracted the 4 Hex strings needed. But, looks like there is a twist. the IV is 64 bits long.. so the .Py script he shared gives an error that the IV is too long.\n </p>\n <p>\n  uploaded the 4 files (GetInfo 1 through 4) and the extractkey.py script. also included is the output from that script as a proof.\n </p>\n <blockquote>\n  <p>\n   <a href=\"https://drive.google.com/drive/folders/1hLF1I9lpB8etVNDGcuocoCmTpM6GciGJ\" rel=\"nofollow noreferrer\">\n    https://drive.google.com/drive/folders/1hLF1I9lpB8etVNDGcuocoCmTpM6GciGJ\n   </a>\n  </p>\n </blockquote>\n <p>\n  EDIT : can anyone get me in contact with that person on the wordpress ? Maybe he can help\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "3k",
    "tags": [
        "disassembly",
        "firmware",
        "decryption",
        "python"
    ],
    "user": "Omarico7",
    "time": "Jan 20, 2020 at 18:27",
    "comments": [
        {
            "user": "Olvin Roght",
            "text": "<html><body><span class=\"comment-copy\">\n I have looked in python script and I have no idea how you get IV 64bit long with\n <code>\n  iv=raw[-32:-16]\n </code>\n which copy 16 bytes (128 bits) into IV. Lengths of all variables are hardcoded and fit one to another. Even more fantastic is that 64bits is too long when 128 required\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Test\n  <a href=\"https://github.com/minanagehsalalma/huawei-dg8045-hg630-hg633-Config-file-decryption-and-password-decode\" rel=\"nofollow noreferrer\">\n   this script\n  </a>\n  out, I Tested it and it works well for me and it can even Re-encrypt the file back for hg630/hg633\n </p>\n <blockquote>\n  <p>\n   decryption :\n  </p>\n  <p>\n   <code>\n    Usage :hg633.py decrypt inputfile outputfile\n   </code>\n  </p>\n  <p>\n   encryption :\n  </p>\n  <p>\n   <code>\n    Usage :hg633.py encrypt inputfile outputfile\n   </code>\n  </p>\n  <p>\n   To decode the encrypted passwords\n  </p>\n  <p>\n   <code>\n    Usage : hg633decode.py decrypt inputfile outputfile\n   </code>\n  </p>\n </blockquote>\n <p>\n  To fix\n </p>\n <blockquote>\n  <p>\n   Not a valid config file...exiting\n  </p>\n </blockquote>\n <p>\n  in other words to get the script to treat this your config as a valid config, add this up of the line in script that has similar value\n  <code>\n   XML_VERSION_TSTRING = b'TEDATA<?xml version=\"1.0\" ?>'\n  </code>\n </p>\n <p>\n  which is the very first line of a decrypted config file\n </p>\n <p>\n  and modify\n </p>\n <pre><code>def check_config(new_config_file):\n    head = new_config_file[0:len(XML_VERSION_STRING)]\n    if head != XML_VERSION_STRING:\n        print(\"Not a valid config file...exiting\")\n</code></pre>\n <p>\n  <strong>\n   to\n  </strong>\n </p>\n <pre><code>def check_config(new_config_file):\n    head = new_config_file[0:len(XML_VERSION_STRING)]\n    head2 = new_config_file[0:len(XML_VERSION_TSTRING)]\n    if head != XML_VERSION_STRING:\n     if head2 != XML_VERSION_TSTRING:               \n        print(\"Not a valid config file...exiting\")\n        sys.exit()\n</code></pre>\n <p>\n  to decode the admin password\n </p>\n <pre><code> sdecode.py encryptedstring\n</code></pre>\n <p>\n  It will output a sha-256 hash which is how the password is stored in newer routers at least , you can search the hash online for possible quick cracking\n </p>\n <p>\n  I couldn't figure out how to Re-encrypt the DG8045 as the signurate keeps failing even that i used the keys from getinfo function\n </p>\n <p>\n  if anyone can figure how to work out the RSA_N RSA_D , that would help a lot.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "mina nageh",
            "time": "Dec 14, 2021 at 1:07",
            "is_accepted": true,
            "comments": []
        }
    ]
}