{
    "title": "Are some special chars(<>) in function names not supported by windbg/cdb?",
    "link": "https://reverseengineering.stackexchange.com/questions/19234/are-some-special-chars-in-function-names-not-supported-by-windbg-cdb",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a function in a binary like this\n  <code>\n   class<class1::class2>::function\n  </code>\n  . I can't directly use commands like\n  <code>\n   bp\n  </code>\n  ,\n  <code>\n   u\n  </code>\n  ,\n  <code>\n   x\n  </code>\n  on the function. The only option I have right now is\n  <code>\n   x class*\n  </code>\n  and then look in the output for the address and then set a breakpoint\n  <code>\n   bp <address>\n  </code>\n  .\n </p>\n <p>\n  Is there something that I'm missing? Its too cumbersome to copy and paste addresses each debugging session. One option is to use pykd, but I am looking for a pure windbg solution.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 2,
    "views": "191",
    "tags": [
        "binary-analysis",
        "c++",
        "windbg"
    ],
    "user": "sudhackar",
    "time": "Sep 3, 2018 at 6:34",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  they are supported if you add the special escape sequence\n  <strong>\n   <a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/breakpoint-syntax\" rel=\"noreferrer\">\n    <code>\n     @!\"  symbol \"\n    </code>\n   </a>\n  </strong>\n </p>\n <p>\n  make sure you set a resolved breakpoints not an unresolved one\n </p>\n <p>\n  and be aware a single address may point to several instantiations of these classes\n </p>\n <pre><code>windbg version \nMicrosoft (R) Windows Debugger Version 10.0.17744.1001 X86\n\nlets look for some functions with angle brackets in them\n\n0:000> x /f /v windbg!*<*<*<*\n\nprv func   00b76da9            6d windbg!Debugger::Utils::SmartCleanup_______snipped\nprv func   00b76e16            46 windbg!Debugger::Utils::SmartCleanup_______snipped\npub func   00b9bcd1             0 windbg!std::basic_string<char,std::_______snipped\nsnip \n\n\n\n0:000> bp @!\" windbg!Debugger::Utils::SmartCleanup_____snipped \"\nBp expression '@!\" windbg!Debugger::Utils::SmartCleanup<<lamb___snipped \"'    \n\ncould not be resolved, adding deferred bp <<<<<\n\n0:000> bl\n     0 e Disable Clear u             0001 (0001) (@!\" windbg!Debugger::Utils::SmartCleanup<<lambda_snipped\n</code></pre>\n</div>\n</body></html>",
            "votes": "6",
            "user": "blabb",
            "time": "Sep 3, 2018 at 20:32",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <code>\n   bm\n  </code>\n  might help to match your function by some pattern. See\n  <a href=\"https://reverseengineering.stackexchange.com/a/13359/22324\">\n   this post\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "0xC0000022L",
            "time": "Sep 3, 2018 at 13:59",
            "is_accepted": false,
            "comments": []
        }
    ]
}