{
    "title": "how to call the function from IDAPython with passing arguments by manually push them to the stack",
    "link": "https://reverseengineering.stackexchange.com/questions/27219/how-to-call-the-function-from-idapython-with-passing-arguments-by-manually-push",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  would you please tell me how to call the function from IDAPython code ?\n  \n\n </p>\n <p>\n  I want to simulate it by manually push to stack as the two arguments and calling the function.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "431",
    "tags": [
        "ida",
        "idapython",
        "ida-plugin"
    ],
    "user": "rou qwers",
    "time": "Mar 25, 2021 at 5:14",
    "comments": [
        {
            "user": "Moshe Green",
            "text": "<html><body><span class=\"comment-copy\">\n Are you interested in getting the result of the decryption for the specific use-case or in general how to use the IDAPython API to emulate/call a function?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "rou qwers",
            "text": "<html><body><span class=\"comment-copy\">\n Of course I am interested in the general method, but first I would like to know how to write the actual code by IDApython that calls the DecryptFuntion in the specific case above, passing any two arguments (Push).\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Instead of manual pushing, you should be able to use\n  <a href=\"https://www.hex-rays.com/blog/practical-appcall-examples/\" rel=\"nofollow noreferrer\">\n   Appcall\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Igor Skochinsky",
            "time": "Mar 13, 2021 at 0:38",
            "is_accepted": true,
            "comments": []
        }
    ]
}