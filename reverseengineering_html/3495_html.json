{
    "title": "What tools exist for excavating data structures from flat binary files?",
    "link": "https://reverseengineering.stackexchange.com/questions/3495/what-tools-exist-for-excavating-data-structures-from-flat-binary-files",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <h1>\n  Problem Statement\n </h1>\n <p>\n  I have a file composed entirely of data structures; I've been trying to find a tool that will enable me to open this file, and declare (perhaps) a type and offset such that i may work with the presumed primitive data type individually.\n </p>\n <p>\n  e.g. I declare the 4 bytes located at offset 0x04 to be a 32-bit unsigned integer, and would like to inspect the value at this location (read as big-endian perhaps) and then work with this integer individually (perhaps see what it looks like encoded as a 4-byte ascii string and attempt to read it, etc.)\n </p>\n <h1>\n  Specifics\n </h1>\n <p>\n  I have a 4096 byte file containing C-structs with member elements as integers ranging from 16-64 bits in length; the following is an example:\n </p>\n <pre><code>struct my_struct {\nuint_32 magic\n} // sizeof(my_struct) == 0x04\n</code></pre>\n <p>\n  In this case, magic = 'ball', and so when the file is opened in a text editor it reads as 'llab...', and obviously can also be represented as a 32-bit integer\n </p>\n <h1>\n  Question\n </h1>\n <p>\n  Is there a tool that enables static analysis of flat data structure files?\n </p>\n <h1>\n  What I've considered thus far as a solution\n </h1>\n <p>\n  I've considered writing a command line tool in Python to do this, but if something already exists I'd prefer to save time, and perhaps learn more about this topic by using a tool designed by someone more experienced. If it seems to you that I am going about this incorrectly (this is my first serious exploration into this kind of reversing) please guide my understanding, thanks.\n </p>\n <h1>\n  Where I have already researched\n </h1>\n <p>\n  Googled 'reverse engineering tools' and browsed the links\n </p>\n <p>\n  Checked wikipedia's reverse engineering pages\n </p>\n <p>\n  Tried some first principles reasoning\n </p>\n <p>\n  Checked pypi\n </p>\n <h1>\n  Results\n </h1>\n <p>\n  There are three completely valid and correct answers, but I've marked the most detailed and least expensive of them as correct, because it is the most accessible to members of the community reviewing this question.\n </p>\n</div>\n</body></html>",
    "votes": "23",
    "answers": 5,
    "views": "11k",
    "tags": [
        "disassembly",
        "tools",
        "static-analysis"
    ],
    "user": "gal",
    "time": "Jun 17, 2020 at 9:54",
    "comments": [
        {
            "user": "Dominik Antal",
            "text": "<html><body><span class=\"comment-copy\">\n I guess you've tried IDA already. Check\n <a href=\"http://www.devttys0.com/2012/03/writing-a-bflt-loader-for-ida/\" rel=\"nofollow noreferrer\">\n  this link\n </a>\n out, I'm not sure this is what you need though.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "oliver",
            "text": "<html><body><span class=\"comment-copy\">\n probably related:\n <a href=\"http://stackoverflow.com/questions/492751/tools-to-help-reverse-engineer-binary-file-formats\" title=\"tools to help reverse engineer binary file formats\">\n  stackoverflow.com/questions/492751/â€¦\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"http://www.sweetscape.com/010editor/templates.html\" rel=\"noreferrer\">\n   010 Editor's Binary Templates\n  </a>\n  feature is ideal for this type of work. It not only supports static\n  <code>\n   struct\n  </code>\n  definitions, but also allows for dynamically sized\n  <code>\n   struct\n  </code>\n  fields and supports a powerful scripting language.\n </p>\n <p>\n  <img alt=\"Example Template\" src=\"https://i.sstatic.net/BeE2h.gif\"/>\n </p>\n <p>\n  <img alt=\"Editing the Template Results\" src=\"https://i.sstatic.net/0Vq3a.gif\"/>\n </p>\n</div>\n</body></html>",
            "votes": "13",
            "user": "Jason Geffner",
            "time": "Jan 20, 2014 at 14:13",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I use\n  <a href=\"http://www.hexworkshop.com/\">\n   Hex Workshop\n  </a>\n  for this. It has a bunch of useful flat-file reversing features, but my favourite is that it lets you declare structures in C-style syntax and load them on top of a file. It's not free, but it's more than worth the $90 price tag.\n </p>\n <p>\n  Features I find most useful:\n </p>\n <ul>\n  <li>\n   C-style struct syntax, supporting various arrays, string types, bitstrings, validity checks, etc.\n  </li>\n  <li>\n   Customisable data inspector (useful if you only want to see data as a few types)\n  </li>\n  <li>\n   Diffing\n  </li>\n  <li>\n   Offset display (shows address offsets, selection size, etc.)\n  </li>\n  <li>\n   Sequence highlighting (like \"highlight all\" on find)\n  </li>\n  <li>\n   Bitwise operations, checksums, etc.\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "6",
            "user": "Polynomial",
            "time": "Jan 20, 2014 at 10:14",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  IDA can be used for working with data-only files. You can convert bytes to data items (bytes/words/dwords/qwords/floats/strings etc.), group them into structures or arrays (or arrays of structures), represent integers as offsets, add names and comments and so on.\n </p>\n <p>\n  Here's an example of some random BMP file represented in IDA:\n </p>\n <pre><code>0000 BmHeader     db 'BM'     ; Signature\n0002              dd 146h     ; Size\n0006              dw 0\n0008              dw 0\n000A              dd offset pixel_array ; offset to image data\n000E ; DIB header\n000E              dd 40       ; size of this header\n0012              dd 33       ; bitmap width\n0016              dd 33       ; bitmap height\n001A              dw 1        ; number of color planes\n001C              dw 1        ; bits per pixel\n001E              dd 0        ; compression: none\n0022              dd 108h     ; size of image data\n0026              dd 4724     ; horizontal resolution (pixels per meter)\n002A              dd 4724     ; vertical resolution (pixels per meter)\n002E              dd 0        ; colors in the palette\n0032              dd 0        ; number of important colors\n0036 ; Color table\n0036              dd 0, 0FFFFFFh\n003E ; pixel data\n003E pixel_array  db 1, 73h, 13h, 6, 80h, 3 dup(0), 7Dh, 4Bh, 0E0h, 56h\n</code></pre>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Igor Skochinsky",
            "time": "Jan 20, 2014 at 12:25",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"https://hexinator.com/\" rel=\"nofollow noreferrer\">\n   Hexinator\n  </a>\n  has a similar feature to binary templates of 010 Editor that is called a \"grammar\". It allows to insert numbers, strings, structs, and binary blobs. If that's not enough, it has scripting capabilities in Python and Lua.\n </p>\n <p>\n  The values can then be edited nicely (e.g. in decimal instead of hex). The hex area can be highlighted.\n </p>\n <p>\n  Drawbacks:\n </p>\n <p>\n  At the time of writing it seems to have issues with more than one open grammar + one open file. When opening a second file for the same grammar, it crashed. Save early and save often.\n </p>\n <p>\n  Screenshot of a partially analyzed file:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/OaHcn.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Screenshot\" src=\"https://i.sstatic.net/OaHcn.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "tripleee",
            "time": "Jul 30, 2024 at 8:24",
            "is_accepted": false,
            "comments": [
                {
                    "user": "jumpjack",
                    "text": "<span class=\"comment-copy\">this is the only free one supporting structures! But I have yet to figure out how to install them: \"download\" menu item does not work, and I see no option to load a grammar from disk. But if I double-click a .grammar file, it looks like it gets \"installed\"...</span>",
                    "time": null
                },
                {
                    "user": "Thomas Weller",
                    "text": "<span class=\"comment-copy\">@jumpjack: do you have such a menu: <a href=\"https://i.sstatic.net/3x39O.png\" rel=\"nofollow noreferrer\">i.sstatic.net/3x39O.png</a> ? Other than that, it's not exactly free. Many features require a license after the trial period expires.</span>",
                    "time": null
                },
                {
                    "user": "jumpjack",
                    "text": "<span class=\"comment-copy\">A grammar appears in the dropdown list only if I double click a .grammar file in explorer; else I only have the option to CREATE a grammar.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I use my Binary Editor for this kind of task\n  <a href=\"http://www.nyangau.org/be/be.htm\" rel=\"nofollow\">\n   http://www.nyangau.org/be/be.htm\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Andy Key",
            "time": "Dec 11, 2014 at 12:03",
            "is_accepted": false,
            "comments": []
        }
    ]
}