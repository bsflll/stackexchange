{
    "title": "In Pintool, How to find the name of an routine's caller?",
    "link": "https://reverseengineering.stackexchange.com/questions/31869/in-pintool-how-to-find-the-name-of-an-routines-caller",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to trace the mutex variables in my rust program(e.g. which mutex called lock() and unlock() methods). And I think there're static methods.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "80",
    "tags": [
        "dynamic-analysis",
        "instrumentation",
        "pintool",
        "multi-process"
    ],
    "user": "roo jack",
    "time": "May 15, 2023 at 2:28",
    "comments": [
        {
            "user": "sudhackar",
            "text": "<html><body><span class=\"comment-copy\">\n Why not instrument every\n <code>\n  call\n </code>\n instruction and see if the call target is your function of choice?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In\n  <code>\n   instruction\n  </code>\n  instrumentation function, you can check if the instruction is indeed a call instruction. Something like -\n </p>\n <pre><code>if (INS_IsCall(ins))\n    {\n        if (INS_IsDirectCall(ins))\n        {\n</code></pre>\n <p>\n  Then get the name of the routine:\n </p>\n <pre><code>if (RTN_FindNameByAddress(INS_DirectBranchOrCallTargetAddress(ins)) \n== \"yourfavouritefun\")\ndo something;\n        }\n}\n\n</code></pre>\n <p>\n  And you can obviously log the caller.\n </p>\n <pre><code>VOID Instruction(INS ins, VOID *v) {\nADDRINT insaddress = INS_Address(ins);\nif (RTN_FindNameByAddress(insaddress))\n  do something more;\n....\n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "R4444",
            "time": "May 16, 2023 at 5:08",
            "is_accepted": false,
            "comments": [
                {
                    "user": "roo jack",
                    "text": "<span class=\"comment-copy\">So how to find the callers of <code>instruction</code> (i.e., how to distinguish different callers of the same <code>instruction</code>)?</span>",
                    "time": null
                }
            ]
        }
    ]
}