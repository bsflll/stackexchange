{
    "title": "How to let SIGTRAP get caught by sighandler in GDB?",
    "link": "https://reverseengineering.stackexchange.com/questions/26650/how-to-let-sigtrap-get-caught-by-sighandler-in-gdb",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a program that I am trying to reverse, which contains an\n  <strong>\n   int3 (0xCC)\n  </strong>\n  which emits a\n  <strong>\n   SIGTRAP\n  </strong>\n  signal, which is then handled by a\n  <strong>\n   sighandler\n  </strong>\n  defined in sigaction.\n  \n\n  The handler performs calculations on certain values.\n </p>\n <p>\n  When I'm debugging with GDB, the SIGTRAP is raised, and the handler does not receive the signal because it is GDB which intercepts it.\nI need the signal to be caught in order to see what the handler is dynamically returning as a value.\n </p>\n <p>\n  I tried to disable SIGTRAP interception with the command :\n </p>\n <pre><code>handle SIGTRAP nostop noprint noignore  \n</code></pre>\n <p>\n  but I have the following error:\n </p>\n <pre><code>Program terminated with signal SIGTRAP, Trace / breakpoint trap.\nThe program no longer exists.\n</code></pre>\n <p>\n  My goal is to make sure that I can let the SIGTRAP be intercepted by the sighandler and not by GDB, but still be able to launch the program and place breakpoints.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "3k",
    "tags": [
        "debugging",
        "gdb",
        "breakpoint"
    ],
    "user": "its-remmus",
    "time": "Dec 29, 2020 at 0:50",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I managed to find a solution.\n  \n\n  When the\n  <strong>\n   SIGTRAP\n  </strong>\n  emitted by the program causes a breakpoint in\n  <strong>\n   gdb\n  </strong>\n  , I use the command :\n </p>\n <pre><code>signal SIGTRAP\n</code></pre>\n <p>\n  to send the signal to the program (and then to the handler), the program continues as expected.\n  \n\n  Don't need to use the \"handle\" command shown in the question, because it seems to make gdb malfunction.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "its-remmus",
            "time": "Dec 29, 2020 at 15:43",
            "is_accepted": true,
            "comments": []
        }
    ]
}