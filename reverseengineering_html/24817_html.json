{
    "title": "Decompile and recompile C?",
    "link": "https://reverseengineering.stackexchange.com/questions/24817/ida-pro-recompilable-c-code",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  What tools produce C code that does not produce errors when you try to recompile it again? Can Hex-Rays decompiler convert everything to project files in a single folder and just compile it?\n </p>\n</div>\n</body></html>",
    "votes": "11",
    "answers": 2,
    "views": "10k",
    "tags": [
        "c",
        "decompile"
    ],
    "user": "R4444",
    "time": "Aug 9, 2013 at 13:59",
    "comments": [
        {
            "user": "Rolf Rolles",
            "text": "<html><body><span class=\"comment-copy\">\n Regarding the limitations of machine-code decompilation, see this answer:\n <a href=\"http://reverseengineering.stackexchange.com/questions/311/why-are-machine-code-decompilers-less-capable-than-for-example-those-for-the-clr/312#312\" title=\"why are machine code decompilers less capable than for example those for the clr\">\n  reverseengineering.stackexchange.com/questions/311/…\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "T.Todua",
            "text": "<html><body><span class=\"comment-copy\">\n There have been a long story already on this topic as SO. Better to look through:\n <a href=\"http://stackoverflow.com/questions/273145/is-it-possible-to-decompile-a-windows-exe-or-at-least-view-the-assembly\" title=\"is it possible to decompile a windows exe or at least view the assembly\">\n  stackoverflow.com/questions/273145/…\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The primary purpose of\n  <a href=\"http://www.debugmode.com/dcompile/\" rel=\"noreferrer\">\n   decompilation\n  </a>\n  is not to produce code that is compiled back with no errors, but rather recover logical flow of a binary. Hex-Ras Decompiler comes with its own set of limitation noted in\n  <a href=\"https://www.hex-rays.com/products/decompiler/manual/limit.shtml\" rel=\"noreferrer\">\n   Hex-Rays Decompiler Manual\n  </a>\n  , to mention few:\n </p>\n <pre><code>Below are the most important limitations of our decompilers (all processors):\n     * exception handling is not supported\n     * type recovery is not performed\n     * global program analysis is not performed\n</code></pre>\n</div>\n</body></html>",
            "votes": "5",
            "user": "PSS",
            "time": "Aug 9, 2013 at 15:14",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user8005",
                    "text": "<span class=\"comment-copy\">My question was: Is there any decompiler that produces code that can be recompiled easily?</span>",
                    "time": null
                },
                {
                    "user": "PSS",
                    "text": "<span class=\"comment-copy\">@user8005: Your question is and I quote: \"...does not produce errors when your try to compile it\"... There is no tools like that.</span>",
                    "time": null
                },
                {
                    "user": "user8005",
                    "text": "<span class=\"comment-copy\">When the source is C# and not C, ILSpy works great btw...</span>",
                    "time": null
                },
                {
                    "user": "PSS",
                    "text": "<span class=\"comment-copy\">@user8005: sure...However, your question is about C...not C#.</span>",
                    "time": null
                },
                {
                    "user": "David Hoelzer",
                    "text": "<span class=\"comment-copy\">In fact, it would be trivial to produce cleanly compiling C code that simply inlines any questionable assembly code that it can't understand.  As PSS points out, recompilation is not the point of decompilation.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Yes you can recompile C but the decompilation has be be manual. As far as I know there is no automatical tool that provide Recompilable C from assembly.\n </p>\n <p>\n  <code>\n   ddisasm\n  </code>\n  is a tool to make recompiling asm from a binary file.\n </p>\n <p>\n  A good starts should be to:\n </p>\n <ol>\n  <li>\n   Disassemble your program to assembly language with\n   <code>\n    ddisasm\n   </code>\n   .\n  </li>\n  <li>\n   Use ldd tools to list libraries from the old binary\n  </li>\n  <li>\n   Recompile it with gcc/g++ makefile with linked libraries\n  </li>\n  <li>\n   Rewrite a function from assembly language to C.\n  </li>\n </ol>\n <p>\n  And back to the step 2 again and again until your program is enough decompiled for you.\n </p>\n <p>\n  Note that\n  <code>\n   ddisasm\n  </code>\n  is really slow: it requires around 150 GB of swap / ram to disassemble a 100 MB file.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "ultimate-anti-reversing",
            "time": "Aug 11, 2023 at 21:36",
            "is_accepted": false,
            "comments": []
        }
    ]
}