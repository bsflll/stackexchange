{
    "title": "How to obtain memory address of string literal?",
    "link": "https://reverseengineering.stackexchange.com/questions/17888/how-to-obtain-memory-address-of-string-literal",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to find where a specific string literal is used in a compiled program. I have already found the location of this string literal within the executable; I want to somehow deduce what the memory address of this string will be at runtime, so I can search the binary file for this address to find the instruction that references the string. How should I proceed?\n </p>\n <p>\n  I am using a Windows x64 AMD architecture. The executable in question is also 64-bit.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "1k",
    "tags": [
        "windows",
        "binary-analysis",
        "amd64"
    ],
    "user": "Anonymous1847",
    "time": "Apr 5, 2018 at 21:43",
    "comments": [
        {
            "user": "Biswapriyo",
            "text": "<html><body><span class=\"comment-copy\">\n You may try this Strings tool from sysinternals:\n <a href=\"https://docs.microsoft.com/en-us/sysinternals/downloads/strings\" rel=\"nofollow noreferrer\">\n  docs.microsoft.com/en-us/sysinternals/downloads/strings\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Anonymous1847",
            "text": "<html><body><span class=\"comment-copy\">\n Thanks, but I have already found the location of the string within the executable file; I'm asking for a way to find the runtime memory address, since I think that is different from the byte offset in the actual file.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can use the OllyDbg software (\n  <a href=\"http://www.ollydbg.de/\" rel=\"nofollow noreferrer\">\n   http://www.ollydbg.de/\n  </a>\n  ). This software is for debug and dissasembler binary programs.\n </p>\n <p>\n  One of feature is search all referenced string, you can see this image:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/Gat5Y.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"OllyDbg search all referenced strings\" src=\"https://i.sstatic.net/Gat5Y.png\"/>\n  </a>\n </p>\n <p>\n  So, in the next window, you can see all strings with an address. Like this:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/RhLm8.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/RhLm8.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "incode",
            "time": "Apr 4, 2018 at 23:30",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Anonymous1847",
                    "text": "<span class=\"comment-copy\">Apparently this only works with 32-bit executables, while the executable in question is 64-bit. (I tried loading it, it didn't work.) Probably should edit my question to clarify that. Is there an equivalent piece of software that works for 64-bit executables?</span>",
                    "time": null
                },
                {
                    "user": "LUser",
                    "text": "<span class=\"comment-copy\">There is x64dbg thwt works on windowsx64. Olydbg does have a x64 version , but Oleh isn't really active in it's development , so It's sort of in a dead state.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Search for all string references and you should be able to find your string and go to the instruction referencing it from there.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "sebastien finor",
            "time": "Apr 4, 2018 at 12:02",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Anonymous1847",
                    "text": "<span class=\"comment-copy\">....but how exactly do I search for all string references? Do I need to install some specific software?</span>",
                    "time": null
                },
                {
                    "user": "sebastien finor",
                    "text": "<span class=\"comment-copy\">Yes, ollydbg, like incode said can do the job. You have a lot of disassemblers, the best is probably IDA (free and premium version).</span>",
                    "time": null
                }
            ]
        }
    ]
}