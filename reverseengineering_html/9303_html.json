{
    "title": "IDA Pro: How to set data size and data length in \"Watch List\"",
    "link": "https://reverseengineering.stackexchange.com/questions/9303/ida-pro-how-to-set-data-size-and-data-length-in-watch-list",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  When using Watch List(Debugger->Watches->Add watch) in IDA Pro, I want to add a memory scope(data size(db) , data length(18)) into Watch List.\n </p>\n <p>\n  However, IDA always only add a dword byte(data size(dd) , data length(1)) into Watch List by default, so how can I get Watch List to work as I want?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 2,
    "views": "2k",
    "tags": [
        "ida",
        "disassembly"
    ],
    "user": "Matt Elson",
    "time": "Jul 8, 2015 at 15:59",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Had the same problem, couldn't find the answer anywhere so i found a workaround.\nI jumped to the address I wanted to watch and used Edit -> Array. Just choose the size of the array you want to watch and then when you add the address to the watch list it adds all the array. Hope it helps.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "AlonR",
            "time": "Nov 10, 2015 at 19:07",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Vitalii",
                    "text": "<span class=\"comment-copy\">And what if variable is on stack? For me <code>Array</code> is grey when variable is on stack.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This had me confounded for a bit... If this is documented, I'm unsure where. By guessing the following seems to work.\n </p>\n <pre><code>(type)reference\n</code></pre>\n <p>\n  Example:\n  <code>\n   (int[14])0xDEADBEEF\n  </code>\n </p>\n <p>\n  This would give you a representation of an integer array 14 deep at address 0xDEADBEEF independent without having to actually set 0xDEADBEEF to an integer array 14 deep.\n </p>\n <p>\n  This seems to work for structures and such as well:\n  <code>\n   (foo[2])0xBEEF\n  </code>\n  would give you an array of two 'foo' structures starting at 0xBEEF.\n </p>\n <p>\n  This is true as of IDA 7.5.200728 -- I cannot speak to any other version.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "efudd",
            "time": "Sep 14, 2020 at 4:37",
            "is_accepted": false,
            "comments": []
        }
    ]
}