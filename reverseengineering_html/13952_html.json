{
    "title": "How to capture Data from OllyDbg window?",
    "link": "https://reverseengineering.stackexchange.com/questions/13952/how-to-capture-data-from-ollydbg-window",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to capture data from OllyDbg's info window (PWM_INFO), to do that I've captured that particular window using winspy++, how could i use the info provided by winspy++ with the WinAPI? I mean, which type of data will always be the same... in case of having several Olly instances opened I wanted my plugin to capture the info from the right Olly process. Example of information captured by winspy++\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/iVQ1o.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/iVQ1o.png\"/>\n  </a>\n </p>\n <p>\n  What I've attempted so far:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/Usb0T.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/Usb0T.png\"/>\n  </a>\n </p>\n <p>\n  What could I be missing with that little snippet of code? I guess I'm not filling properly the\n  <code>\n   t_frame\n  </code>\n  input structure but I don't know how.\n </p>\n <p>\n  You can find the WIP plugin's sources\n  <a href=\"https://github.com/brupelo/ollydbg201_plugins\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "437",
    "tags": [
        "ollydbg",
        "tools",
        "winapi"
    ],
    "user": "BPL",
    "time": "Nov 17, 2016 at 23:49",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  i see you have started a new question\n  \n\n  as i posted earlier the window is PWM_INFO it is a user defined custom table\n  \n\n  it doesn't have any sorted data only sorted.n , sorted.selected and offset\n  \n\n  the test or whatever it is is probably drawn using gdi functions\n  \n\n  or i think rendered\n </p>\n <p>\n  you should take time to read whatever scanty documents are available\n  \n\n  i don't think you can getwindowtext() from that window\n </p>\n <p>\n  if you cant find documentation debug ollydbg break and check what you see when you are on some call\n </p>\n <p>\n  if you use windbg you can strip the About Function to bare minimum and check what the t_table contains when you break on About() and you changed the mainmenu to PWM_INFO\n </p>\n <p>\n  assuming you compiled this and broke on About in windbg and check t_table\n </p>\n <pre><code>#define _UNICODE\n#include <windows.h>\n#include <stdio.h>\n#include \"plugin.h\"\nstatic int About(t_table *,wchar_t *,ulong ,int mode) {\n  int n; wchar_t s[TEXTLEN];  if ( mode==MENU_VERIFY ) { return MENU_NORMAL; }\n  else if (mode==MENU_EXECUTE) {\n    Resumeallthreads();     n=StrcopyW(s,TEXTLEN,\n    L\"BlabbTest plugin v 1\nCopyright from genesis to eternity blabb\n\n\");\n    MessageBoxW(0,s,L\"BlabbTest\",0);\n    Suspendallthreads();     return MENU_NOREDRAW;\n  };  return MENU_ABSENT;\n};\nstatic t_menu mainmenu[] = {\n  { L\"|BlabbTest\", L\"About BlabbTest plugin\", K_NONE, About, NULL, 0 },\n  { NULL,NULL,K_NONE,NULL,NULL,0}\n};\nextc t_menu * __cdecl ODBG2_Pluginmenu(wchar_t *type) {\n  if(wcscmp(type,PWM_INFO)==0) { return mainmenu; }\n  return NULL;\n};\nBOOL WINAPI DllEntryPoint(HINSTANCE ,DWORD ,LPVOID ) { return 1; };\nextc int __cdecl ODBG2_Pluginquery(int ollydbgversion,ulong *,\nwchar_t pluginname[SHORTNAME],wchar_t pluginversion[SHORTNAME]) {\n  if (ollydbgversion<201) {  return 0; }\n  wcscpy_s(pluginname,SHORTNAME,L\"BlabbTest\");\n  wcscpy_s(pluginversion,SHORTNAME,L\"2.00.01\");\n  return PLUGIN_VERSION; };\n</code></pre>\n <p>\n  you would get this info about t_table which shows the sorted data is null\n  \n\n  so you cannot get what is in there as text\n  \n\n  you can only screen shot it\n  \n\n  click capture in winsp++ and try pasting it in mspaint\n  \n\n  you can see the result\n </p>\n <pre><code>cdb.exe ollydbg.exe CALC\n\nMicrosoft (R) Windows Debugger Version 10.0.14951.1001 X86\nCommandLine: ollydbg.exe CALC\n\n0:005> bp infodump!About \"dv\"\n0:005> g\n\n       __formal = 0x005e6ab8\n       __formal = 0x0012e71c \"BlabbTest\"\n\n       infodump!About:\n665e1300 81ec04020000    sub     esp,204h\n\n0:000> dx -r3 (infodump!t_table *) 0x5e6ab8\n(infodump!t_table *) 0x5e6ab8 : 0x5e6ab8 [Type: t_table *]\n    [+0x000] name             : \"CPU Info\" [Type: wchar_t [32]]\n    [+0x040] mode             : -1866396925 [Type: int]\n    [+0x044] sorted           [Type: t_sorted]\n        [+0x000] n                : 5 [Type: int]  <========\n        [+0x004] nmax             : 0 [Type: int]\n        [+0x008] itemsize         : 0x0 [Type: unsigned long]\n        [+0x00c] mode             : 0 [Type: int]\n        [+0x010] data             : 0x0 [Type: void *]\n        [+0x014] block            : 0x0 [Type: void * *]\n        [+0x018] nblock           : 0 [Type: int]\n        [+0x01c] version          : 0x0 [Type: unsigned long]\n        [+0x020] dataptr          : 0x0 [Type: void * *]\n        [+0x024] selected         : -1 [Type: int] <--------- no selection \n        [+0x028] seladdr          : 0x0 [Type: unsigned long]\n        [+0x02c] selsubaddr       : 0x0 [Type: unsigned long]\n        [+0x030] sortfunc         : 0x0 [Type: int (__cdecl*)(t_sorthdr *,t_sorthdr *,int)]\n        [+0x034] destfunc         : 0x0 [Type: void (__cdecl*)(t_sorthdr *)]\n        [+0x038] sort             : 0 [Type: int]\n        [+0x03c] sorted           : 0 [Type: int]\n        [+0x040] sortindex        : 0x0 [Type: int *]\n    [+0x088] subtype          : 0 [Type: int]\n    [+0x08c] bar              [Type: t_bar]\n        [+0x000] nbar             : 1 [Type: int]\n        [+0x004] visible          : 0 [Type: int]\n        [+0x008] name             [Type: wchar_t * [17]]\n            [0]              : 0x0 [Type: wchar_t *]\n            [1]              : 0x0 [Type: wchar_t *]\n            [2]              : 0x0 [Type: wchar_t *]\n            [3]              : 0x0 [Type: wchar_t *]\n            [4]              : 0x0 [Type: wchar_t *]\n            [5]              : 0x0 [Type: wchar_t *]\n            [6]              : 0x0 [Type: wchar_t *]\n            [7]              : 0x0 [Type: wchar_t *]\n            [8]              : 0x0 [Type: wchar_t *]\n            [9]              : 0x0 [Type: wchar_t *]\n            [10]             : 0x0 [Type: wchar_t *]\n            [11]             : 0x0 [Type: wchar_t *]\n            [12]             : 0x0 [Type: wchar_t *]\n            [13]             : 0x0 [Type: wchar_t *]\n            [14]             : 0x0 [Type: wchar_t *]\n            [15]             : 0x0 [Type: wchar_t *]\n            [16]             : 0x0 [Type: wchar_t *]\n        [+0x04c] expl             [Type: wchar_t * [17]]\n            [0]              : 0x0 [Type: wchar_t *]\n            [1]              : 0x0 [Type: wchar_t *]\n            [2]              : 0x0 [Type: wchar_t *]\n            [3]              : 0x0 [Type: wchar_t *]\n            [4]              : 0x0 [Type: wchar_t *]\n            [5]              : 0x0 [Type: wchar_t *]\n            [6]              : 0x0 [Type: wchar_t *]\n            [7]              : 0x0 [Type: wchar_t *]\n            [8]              : 0x0 [Type: wchar_t *]\n            [9]              : 0x0 [Type: wchar_t *]\n            [10]             : 0x0 [Type: wchar_t *]\n            [11]             : 0x0 [Type: wchar_t *]\n            [12]             : 0x0 [Type: wchar_t *]\n            [13]             : 0x0 [Type: wchar_t *]\n            [14]             : 0x0 [Type: wchar_t *]\n            [15]             : 0x0 [Type: wchar_t *]\n            [16]             : 0x0 [Type: wchar_t *]\n        [+0x090] mode             [Type: int [17]]\n            [0]              : 8 [Type: int]\n            [1]              : 0 [Type: int]\n            [2]              : 0 [Type: int]\n            [3]              : 0 [Type: int]\n            [4]              : 0 [Type: int]\n            [5]              : 0 [Type: int]\n            [6]              : 0 [Type: int]\n            [7]              : 0 [Type: int]\n            [8]              : 0 [Type: int]\n            [9]              : 0 [Type: int]\n            [10]             : 0 [Type: int]\n            [11]             : 0 [Type: int]\n            [12]             : 0 [Type: int]\n            [13]             : 0 [Type: int]\n            [14]             : 0 [Type: int]\n            [15]             : 0 [Type: int]\n            [16]             : 0 [Type: int]\n        [+0x0d4] defdx            [Type: int [17]]\n            [0]              : 256 [Type: int]\n            [1]              : 0 [Type: int]\n            [2]              : 0 [Type: int]\n            [3]              : 0 [Type: int]\n            [4]              : 0 [Type: int]\n            [5]              : 0 [Type: int]\n            [6]              : 0 [Type: int]\n            [7]              : 0 [Type: int]\n            [8]              : 0 [Type: int]\n            [9]              : 0 [Type: int]\n            [10]             : 0 [Type: int]\n            [11]             : 0 [Type: int]\n            [12]             : 0 [Type: int]\n            [13]             : 0 [Type: int]\n            [14]             : 0 [Type: int]\n            [15]             : 0 [Type: int]\n            [16]             : 0 [Type: int]\n        [+0x118] dx               [Type: int [17]]\n            [0]              : 1536 [Type: int]\n            [1]              : 0 [Type: int]\n            [2]              : 0 [Type: int]\n            [3]              : 0 [Type: int]\n            [4]              : 0 [Type: int]\n            [5]              : 0 [Type: int]\n            [6]              : 0 [Type: int]\n            [7]              : 0 [Type: int]\n            [8]              : 0 [Type: int]\n            [9]              : 0 [Type: int]\n            [10]             : 0 [Type: int]\n            [11]             : 0 [Type: int]\n            [12]             : 0 [Type: int]\n            [13]             : 0 [Type: int]\n            [14]             : 0 [Type: int]\n            [15]             : 0 [Type: int]\n            [16]             : 0 [Type: int]\n        [+0x15c] captured         : 0 [Type: int]\n        [+0x160] active           : 0 [Type: int]\n        [+0x164] scrollvx         : 0 [Type: int]\n        [+0x168] scrollvy         : 0 [Type: int]\n        [+0x16c] prevx            : 0 [Type: int]\n        [+0x170] prevy            : 0 [Type: int]\n    [+0x200] bottomspace      : 0 [Type: int]\n    [+0x204] minwidth         : 0 [Type: int]\n    [+0x208] tabfunc          : 0x4773cc [Type: long (__cdecl*)(t_table *,HWND__ *,unsigned int,unsi\ngned int,long)]\n        [Type: long __cdecl(t_table *,HWND__ *,unsigned int,unsigned int,long)]\n    [+0x20c] updatefunc       : 0x0 [Type: int (__cdecl*)(t_table *)]\n    [+0x210] drawfunc         : 0x477178 [Type: int (__cdecl*)(wchar_t *,unsigned char *,int *,t_tab\nle *,t_sorthdr *,int,void *)]\n        [Type: int __cdecl(wchar_t *,unsigned char *,int *,t_table *,t_sorthdr *,int,void *)]\n    [+0x214] tableselfunc     : 0x0 [Type: void (__cdecl*)(t_table *,int,int)]\n    [+0x218] menu             : 0x53f05c [Type: t_menu *]\n        [+0x000] name             : 0x53f4c2 : \"!\" [Type: wchar_t *]\n        [+0x004] help             : 0x0 [Type: wchar_t *]\n        [+0x008] shortcutid       : 0 [Type: int]\n        [+0x00c] menufunc         : 0x474ce0 [Type: int (__cdecl*)(t_table *,wchar_t *,unsigned long\n,int)]\n            [Type: int __cdecl(t_table *,wchar_t *,unsigned long,int)]\n        [+0x010] submenu          : 0x0 [Type: t_menu *]\n        [+0x014] index            : 0x0 [Type: unsigned long]\n        [+0x014] hsubmenu         : 0x0 [Type: HMENU__ *]\n    [+0x21c] custommode       : 0x0 [Type: unsigned long]\n    [+0x220] customdata       : 0x0 [Type: void *]\n    [+0x224] hparent          : 0x260940 [Type: HWND__ *]\n        [+0x000] unused           : Unable to read memory at Address 0x260940\n    [+0x228] hstatus          : 0x0 [Type: HWND__ *]\n    [+0x22c] hw               : 0x21075a [Type: HWND__ *]\n        [+0x000] unused           : Unable to read memory at Address 0x21075a\n    [+0x230] htooltip         : 0xb08e0 [Type: HWND__ *]\n        [+0x000] unused           : Unable to read memory at Address 0xb08e0\n    [+0x234] font             : 1 [Type: int]\n    [+0x238] scheme           : 0 [Type: int]\n    [+0x23c] hilite           : 2 [Type: int]\n    [+0x240] hscroll          : 1 [Type: int]\n    [+0x244] xshift           : 0 [Type: int]\n    [+0x248] offset           : 0 [Type: int] <---------------\n    [+0x24c] colsel           : 0 [Type: int]\n    [+0x250] version          : 0x0 [Type: unsigned long]\n    [+0x254] timerdraw        : 0x0 [Type: unsigned long]\n    [+0x258] rcprev           : {LT(0, 0) RB(0, 0)  [0 x 0]} [Type: tagRECT]\n        [<Raw View>]     [Type: tagRECT]\n    [+0x268] rtback           : 0 [Type: int]\n0:000>\n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "blabb",
            "time": "Nov 18, 2016 at 11:08",
            "is_accepted": false,
            "comments": []
        }
    ]
}