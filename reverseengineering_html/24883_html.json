{
    "title": "Is it possible to define an array of variable size in Ghidra (size in the struct itself)",
    "link": "https://reverseengineering.stackexchange.com/questions/24883/is-it-possible-to-define-an-array-of-variable-size-in-ghidra-size-in-the-struct",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a struct that holds an array (and other elements), and one of the elements is actually the size of the array. Is there a way to define a struct like that in Ghidra?\n </p>\n <pre><code>16          | Size of array is 0x16 \n00 \n00 \n04\n00 00 00 00\n10 08 0a 04\n...\ndc c1 50 08 |\n74 cf 50 08 | Array of size 0x16\n14 dd 50 08 |\n(.........) |\n</code></pre>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "5k",
    "tags": [
        "ghidra"
    ],
    "user": "Alex Osheter",
    "time": "May 1, 2020 at 20:50",
    "comments": [
        {
            "user": "genghiskhan",
            "text": "<html><body><span class=\"comment-copy\">\n I think you would want to just define a size field (of type uint or whatever) and an array field (of type pointer to whatever type).\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Alex Osheter",
            "text": "<html><body><span class=\"comment-copy\">\n Do you mean variable size?\n <code>\n  type[0]\n </code>\n ? For some reason, Ghidra doesn't allow me to do that.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "genghiskhan",
            "text": "<html><body><span class=\"comment-copy\">\n I don't think you're able to declare an array with variable size. What is the definition of the struct? I don't think you're able to declare a variable-sized array in C. The compiler wouldn't know how many bytes to allocated for it. That's why there is a length field, to let the programmer know how many elements are in the array which would most likely be malloc'd\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Ghidra flexible arrays support what you are trying to do.  From Ghidra help (search for \"flexible array\"):\n </p>\n <blockquote>\n  <p>\n   A flexible array is added to the end of a structure by adding a last row specified by the base DataType (e.g. char) then invoking the array action and specifying an element count of 0.\n  </p>\n </blockquote>\n <p>\n  So you can't create a flexible array in 1 step.  Enter the data type for the variable-length structure member first.  Then select the row for that new structure member and press the\n  <code>\n   [\n  </code>\n  key to invoke the array action.  Entering 0 as the element count in the resulting dialog will create a flexible array.\n </p>\n <p>\n  Ghidra flexible arrays have limited functionality.  From Ghidra help:\n </p>\n <blockquote>\n  <p>\n   The use of flexible array components is not currently reflected in decompiler results or listing reference markup. Its primary purpose if to reflect the C/C++ source definition of a structure with correct alignment and structure sizing.\n  </p>\n  <p>\n   While C/C++ support flexible arrays anywhere within a structure, Ghidra only supports the case where it is the last structure component.\n  </p>\n </blockquote>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": []
        }
    ]
}