{
    "title": "Differences between hex-editor and Ghidra and how to find strings",
    "link": "https://reverseengineering.stackexchange.com/questions/30572/differences-between-hex-editor-and-ghidra-and-how-to-find-strings",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I just started playing around with reverse engineering and Ghidra, so please bear with me.\n </p>\n <p>\n  I wanted to run an old game. One\n  <a href=\"https://archive.org/details/lz-2_20220119\" rel=\"nofollow noreferrer\">\n   version\n  </a>\n  available on archive.org does not work even when I have mounted the ISO, the\n  <a href=\"https://archive.org/details/Loewe2\" rel=\"nofollow noreferrer\">\n   other one\n  </a>\n  does. As a learning exercise, I wanted to try patching the latter anyway:\n  <a href=\"https://archive.org/download/Loewe2/Loewe2.iso/Setup%2FWinRoot%2FTerzio%2FLoewenzahn%202%2FLoewenzahn%202.exe\" rel=\"nofollow noreferrer\">\n   https://archive.org/download/Loewe2/Loewe2.iso/Setup%2FWinRoot%2FTerzio%2FLoewenzahn%202%2FLoewenzahn%202.exe\n  </a>\n </p>\n <p>\n  When I run the exe without the ISO mounted I get the error message\n  <strong>\n   Bitte die CD-ROM \"Löwenzahn 2\" einlegen!\n  </strong>\n  , which means\n  <strong>\n   Please insert CD-ROM \"Löwenzahn 2\"!\n  </strong>\n  .\n </p>\n <p>\n  So I ran\n  <code>\n   strings -t x Loewenzahn\\ 2.exe | grep einlegen\n  </code>\n  and got the output\n  <code>\n   17020  einlegen!\n  </code>\n  . I found the same address using the hex-editor Okteta.\n </p>\n <p>\n  <code>\n   file Loewenzahn\\ 2.exe\n  </code>\n  gives the following output:\n </p>\n <pre><code>Loewenzahn 2.exe: PE32 executable (GUI) Intel 80386, for MS Windows\n</code></pre>\n <p>\n  Now when I import Loewenzahn 2.exe into Ghidra and run all analyzers, there's a discrepancy between the addresses and I can't find the string \"einlegen\" via Search > For Strings....\n </p>\n <p>\n  Ghidra:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/LQE4w.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/LQE4w.png\"/>\n  </a>\n </p>\n <p>\n  Okteta:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/V2B1w.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/V2B1w.png\"/>\n  </a>\n </p>\n <p>\n  Why is there an offset and can I configure Ghidra to start at 0? Can I configure Ghidra to show the raw strings, like \"Th is program canno t be run in DOS mode\"? And how can I find it using the String search?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "2k",
    "tags": [
        "ghidra",
        "hex"
    ],
    "user": "804b18f832fb419fb142",
    "time": "Jun 30, 2022 at 18:08",
    "comments": [
        {
            "user": "804b18f832fb419fb142",
            "text": "<html><body><span class=\"comment-copy\">\n Looks like I need to calculate the virtual address to find the corresponding section in the disassembled code:\n <a href=\"https://reverseengineering.stackexchange.com/questions/8050/raw-offsets-to-disassembler-offsets\" title=\"raw offsets to disassembler offsets\">\n  reverseengineering.stackexchange.com/questions/8050/…\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "804b18f832fb419fb142",
            "text": "<html><body><span class=\"comment-copy\">\n When I use Ghidra's Hex editor via Window > Bytes, it only shows the contents of the file up to the PADDINGXX section. However, Okteta shows more data after that point, which is where the string \"einlegen\" is defined as well.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n I'm is possible to append data to an Windows executable which can be used by the executable. But on a strict perspective this data does not belong to the executable as it was just appended. A common example for such executables are self-extracting archives and installers. May be Ghidra only shows you the actual executable content? As the executable seems to be an installer I would check if a program like 7Zip can extract it.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "804b18f832fb419fb142",
            "text": "<html><body><span class=\"comment-copy\">\n Thanks for the hint. This exe is not an installer and I couldn't extract it either. However, I tried Cutter with the Ghidra plugin and it listed all the strings and recognized library functions out of the box.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}