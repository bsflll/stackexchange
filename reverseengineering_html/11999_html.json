{
    "title": "Statically detect destroyed Import Segment (IAT)",
    "link": "https://reverseengineering.stackexchange.com/questions/11999/statically-detect-destroyed-import-segment-iat",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm writing a tool, which analyses PE-Malformations and I'would like to build a function to detect a destroyed import section in a PE-File. It would be great if it would be possible to somehow figure it out from the optional header of a PE.\n </p>\n <p>\n  If I open a PE with IDA Pro then I'm notified about that:\n </p>\n <p>\n  <img src=\"https://i.sstatic.net/JJhey.png\" width=\"410\"/>\n </p>\n <p>\n  But I'm interesting about how it works under the hood. Is IDA Pro saying that Imports are destroyed just because there are a few imports?\nOr does it try to find some functions and isn't able to do that?\n </p>\n <p>\n  I'm sorry if it's a simple question, but I could not find a detailed information about that. There are a lot of information how to rebuilt/repair Import Address Table from a dumped file, but not how to actually detect it by yourself.\nThanks in advance!\n </p>\n <p>\n  <strong>\n   -------little supplement-------------\n  </strong>\n </p>\n <p>\n  I would like to show one example with a corrupted import sections by viewing a PE in a\n  <a href=\"http://wjradburn.com/software/PEview.zip\" rel=\"nofollow noreferrer\">\n   PEView Tool\n  </a>\n  .\n </p>\n <p>\n  Below you see a PE which claims that it has the import table at the RVA 0xA21C.\n </p>\n <p>\n  <img src=\"https://i.sstatic.net/Cscoq.png\" width=\"500\"/>\n </p>\n <p>\n  BUT this file ends at the RVA 0x5BF0.\n </p>\n <p>\n  Since 0xA21C > 0x5BF0 we can conclude that the imports in this PE are damaged, because 0xA21C is a not valid pointer, right?\n </p>\n <p>\n  <img src=\"https://i.sstatic.net/yK6eo.png\" width=\"600\"/>\n </p>\n <p>\n  Are there\n  <strong>\n   another ways\n  </strong>\n  to recognise the corrupted import section?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 2,
    "views": "3k",
    "tags": [
        "ida",
        "pe",
        "iat"
    ],
    "user": "0xDEADC0DE",
    "time": "Feb 11, 2016 at 14:48",
    "comments": [
        {
            "user": "Jason Geffner",
            "text": "<html><body><span class=\"comment-copy\">\n I answered your first question below. Please ask your second question in a separate post. (One question per post, please.)\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xDEADC0DE",
            "text": "<html><body><span class=\"comment-copy\">\n This is one question, but with an example.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jason Geffner",
            "text": "<html><body><span class=\"comment-copy\">\n You're asking how IDA Pro decides whether or not to display its imports segment warning message, and you're also asking for other ways to recognize a corrupted import section.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xDEADC0DE",
            "text": "<html><body><span class=\"comment-copy\">\n I'm actually asking how to detect a corrupted import section. The case with IDA Pro is another example - I want to understand how IDA Pro detects a damaged IAT too.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You need to get familiar with\n  <a href=\"http://win32assembly.programminghorizon.com/pe-tut6.html\" rel=\"nofollow\">\n   PE Import Table\n  </a>\n </p>\n <p>\n  In a nutshell (I will not mention about import by ordinal)\n </p>\n <pre><code>IMAGE_IMPORT_DESCRIPTOR.FirstThunk points to IMAGE_IMPORT_BY_NAME table. \n\nIMAGE_IMPORT_DESCRIPTOR.FirstThunk --------------------------\n                                                            |\n                                                            |\nIMAGE_IMPORT_BY_NAME <---------------------------------------\nIMAGE_IMPORT_BY_NAME\nIMAGE_IMPORT_BY_NAME\nIMAGE_IMPORT_BY_NAME\n</code></pre>\n <p>\n  When you parse the table and it's pointers (RVA) are not resolved to a valid\n  <code>\n   IMAGE_IMPORT_BY_NAME\n  </code>\n  structure you can assume import table is corrupted.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "ebux",
            "time": "Feb 11, 2016 at 14:04",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xDEADC0DE",
                    "text": "<span class=\"comment-copy\">Thank you! I have also added an example to my question. Do I understand it correctly?</span>",
                    "time": null
                },
                {
                    "user": "krusty",
                    "text": "<span class=\"comment-copy\">I dont use use PEView tool I use/recommend CFF explorer <a href=\"http://www.ntcore.com/exsuite.php\" rel=\"nofollow noreferrer\">ntcore.com/exsuite.php</a>  Looking at the screenshot your file has import table at RVA 0xA21C it is not an offset.</span>",
                    "time": null
                },
                {
                    "user": "0xDEADC0DE",
                    "text": "<span class=\"comment-copy\">But is it a correct logic in this example?</span>",
                    "time": null
                },
                {
                    "user": "krusty",
                    "text": "<span class=\"comment-copy\">Yes of course if Import Table RVA is not valid (outside of the file) then import table is corrupted. But that's the first step to validate import table. The stuff I described is deeper, it's not that simple.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <p>\n   But I'm interesting about how it works under the hood.\n  </p>\n </blockquote>\n <p>\n  IDA shows that message if the PE section that contains the Import Table doesn't contain relocations and the name of Import Table's section isn't one of the following:\n  <code>\n   .idata\n  </code>\n  ,\n  <code>\n   .rdata\n  </code>\n  ,\n  <code>\n   .text\n  </code>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Jason Geffner",
            "time": "Feb 11, 2016 at 14:37",
            "is_accepted": false,
            "comments": []
        }
    ]
}