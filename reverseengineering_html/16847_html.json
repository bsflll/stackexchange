{
    "title": "How do you rename a memory address operand in IDAPython?",
    "link": "https://reverseengineering.stackexchange.com/questions/16847/how-do-you-rename-a-memory-address-operand-in-idapython",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I need to rename some memory address \"names\" in IDAPython. I'm talking about the dword_805672 formatted ones. Please see the screenshot below:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/L5X6A.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/L5X6A.png\"/>\n  </a>\n </p>\n <p>\n  I've placed red boxes around the names which I would like to rename with IDAPython. I've searched the API docs and I came up with:\n  <code>\n   idc.MakeName(ea,name)\n  </code>\n  however, as you can see, this only placed a name in the spots labeled\n  <code>\n   dynamic_1\n  </code>\n  ,\n  <code>\n   dynamic_2\n  </code>\n  and so on. I want to rename the actual operand.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "3k",
    "tags": [
        "idapython"
    ],
    "user": "the_endian",
    "time": "Nov 27, 2017 at 4:44",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <code>\n   idc.MakeName\n  </code>\n  should be the correct api command. I'm assuming that you did something like\n  <code>\n   idc.MakeName(0x123772cd, 'dynamic_3')\n  </code>\n  instead of doing the make name on the actual dword in the instruction.\n </p>\n <p>\n  Something like this should be done instead:\n </p>\n <p>\n  <code>\n   idc.MakeName(idc.GetOperandValue(0x123772cd, 0), 'dynamic_3')\n  </code>\n </p>\n <p>\n  In this case\n  <code>\n   idc.GetOperandValue\n  </code>\n  will return the value of the zeroth operand (ie. 0x123ef5e0). That address will then be labeled 'dynamic_3' and IDA should update the UI to show the change.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Bambu",
            "time": "Nov 27, 2017 at 4:58",
            "is_accepted": true,
            "comments": [
                {
                    "user": "the_endian",
                    "text": "<span class=\"comment-copy\">Yup. That was it, thanks. I hadn't realized that the operand itself has its own address like that in terms of solving this problem. Do you have any tips on how to learn the little fine ins and outs of the API like this? This is the kinda stuff that's not really in the docs :(</span>",
                    "time": null
                },
                {
                    "user": "Bambu",
                    "text": "<span class=\"comment-copy\">I usually default to looking at the idc/idaapy/idautil python files when trying to figure out how something is done. Besides that, the resources on <a href=\"https://reverseengineering.stackexchange.com/questions/11391/good-training-for-idapython\" title=\"good training for idapython\">reverseengineering.stackexchange.com/questions/11391/â€¦</a> are pretty good.</span>",
                    "time": null
                }
            ]
        }
    ]
}