{
    "title": "Modifying a Bundled .NET 7 Application",
    "link": "https://reverseengineering.stackexchange.com/questions/32932/modifying-a-bundled-net-7-application",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am attempting to reverse a .NET 7 program and patch it, but it is a bundled file.\n </p>\n <p>\n  When importing the EXE into dnSpy I get the headings of a PE file (.text, etc.) and nothing else. However, if I start debugging the EXE I can see all of the DLLs that are loaded, including the main module the application is using (program is \"cracktest.exe\" and the main module is \"cracktest.dll\".\n </p>\n <p>\n  When modifying the module using dnSpy, I can save the DLL to my file system but I cannot get the application to use this new DLL.\n </p>\n <p>\n  My question is how can I modify the \"cracktest.dll\" module and save it so that the program will use it?\n </p>\n <p>\n  I have noticed this PR on dnSpy:\n  <a href=\"https://github.com/dnSpyEx/dnSpy/pull/49\" rel=\"nofollow noreferrer\">\n   https://github.com/dnSpyEx/dnSpy/pull/49\n  </a>\n  regarding bundled EXEs but it seems to be incomplete, are there other methods to achieving this, thanks.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "32",
    "tags": [
        ".net",
        "c#",
        "dnspy"
    ],
    "user": "YeAight",
    "time": "May 3, 2024 at 9:47",
    "comments": [],
    "answers_data": []
}