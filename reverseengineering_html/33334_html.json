{
    "title": "How can I compare different execution traces of the same exe, but ran with different parameters?",
    "link": "https://reverseengineering.stackexchange.com/questions/33334/how-can-i-compare-different-execution-traces-of-the-same-exe-but-ran-with-diffe",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <h4>\n  Context\n </h4>\n <p>\n  I'm working on analyzing how a software's behavior changes when run with different parameters.\n </p>\n <p>\n  My goal is to compare the execution traces (e.g., function calls, memory accesses, or instruction flows) to identify differences caused by the input parameters.\n </p>\n <h4>\n  Question\n </h4>\n <p>\n  I want to capture the execution trace for two runs: one with\n  <code>\n   param1\n  </code>\n  and another with\n  <code>\n   param2\n  </code>\n  . So, for example:\n </p>\n <ul>\n  <li>\n   <p>\n    <code>\n     sofware.exe --param1\n    </code>\n   </p>\n   <p>\n    VS\n   </p>\n  </li>\n  <li>\n   <p>\n    <code>\n     software.exe --param2\n    </code>\n   </p>\n  </li>\n </ul>\n <p>\n  Ideally, I'd like to see which functions, code paths, or memory regions are accessed differently between the two runs.\nI'm looking for effective techniques to:\n </p>\n <ul>\n  <li>\n   Compare traces to identify key differences in execution paths\n  </li>\n  <li>\n   Analyze patterns in how parameter changes affect program flow\n  </li>\n </ul>\n <p>\n  How can I compare different execution flows?\n </p>\n <h4>\n  What I tried\n </h4>\n <p>\n  I tried to use\n  <a href=\"https://help.x64dbg.com/en/latest/gui/views/Trace.html\" rel=\"nofollow noreferrer\">\n   x64Dbg's tracing feature\n  </a>\n  . However, you cant really compare two different executions.\n </p>\n <p>\n  I also explored\n  <a href=\"https://github.com/gaasedelen/lighthouse\" rel=\"nofollow noreferrer\">\n   lighthouse\n  </a>\n  for IDA/Binary Ninja:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/U8gWZBED.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/U8gWZBED.png\"/>\n  </a>\n </p>\n <p>\n  However, it seems like it doesnt seem to do what I want.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "134",
    "tags": [
        "ida",
        "debugging",
        "x64dbg",
        "debuggers"
    ],
    "user": "MendelG",
    "time": "Dec 8, 2024 at 20:45",
    "comments": [
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<html><body><span class=\"comment-copy\">\n There's also tenet from the same author of lighthouse. It's not a direct comparison of traces, but might be closer to what you're trying to analyze.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have never done this or needed to do this, however my first instinct is to diff the two trace files, however I know it is special format so I did a search and found this issue:\n  <a href=\"https://github.com/x64dbg/x64dbg/issues/3042\" rel=\"nofollow noreferrer\">\n   https://github.com/x64dbg/x64dbg/issues/3042\n  </a>\n  in which someone wanted to compare traces, and the creator of x64dbg suggested 2 options, I would be inclined to use the 2nd option (because I am unsure the 1st option will compare):\n  <a href=\"https://github.com/mrexodia/dumpulator/blob/main/tests/x64dbg-tracedump.py\" rel=\"nofollow noreferrer\">\n   https://github.com/mrexodia/dumpulator/blob/main/tests/x64dbg-tracedump.py\n  </a>\n  and dump the files and then use diff or some comparison tool.\n </p>\n <p>\n  I think you may prefer a more visual tool for this, for obvious reasons, but it may have similar effect using compare 2 files in an editor\n </p>\n <p>\n  I found this question interesting so I wanted to offer a possibility you may not have considered.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "jonk",
            "time": "Dec 16, 2024 at 23:36",
            "is_accepted": false,
            "comments": []
        }
    ]
}