{
    "title": "Python self decryption script, as mean of obfuscation",
    "link": "https://reverseengineering.stackexchange.com/questions/22972/python-self-decryption-script-as-mean-of-obfuscation",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a software with an embedded python interpreter. The software can open upon startup a given\n  <code>\n   .py\n  </code>\n  script and execute it. Let's assume that in my python environment I can't open other files, and I can't use external tools like\n  <code>\n   Cython\n  </code>\n </p>\n <p>\n  I want to obfuscate the script. My only demand is that the\n  <code>\n   payload\n  </code>\n  part of the file (my custom business logic) could not be opened in a text editor and plain-text read.\n </p>\n <p>\n  I could imagine the flow of the script will be de-obfuscation/decryption of a payload, that resides within the\n  <code>\n   .py\n  </code>\n  file as the first step and then executing it.\n </p>\n <p>\n  I can store within the script any encryption key, and I don't care that the decryption part will be visible and that it can be easily reproduced.\n </p>\n <p>\n  Any ideas how can I make that happen?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "412",
    "tags": [
        "encryption",
        "python",
        "obfuscation"
    ],
    "user": "macro_controller",
    "time": "Jan 12, 2020 at 13:13",
    "comments": [
        {
            "user": "Kennet Celeste",
            "text": "<html><body><span class=\"comment-copy\">\n so basically you are writing a malware and you want people to help you.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "macro_controller",
            "text": "<html><body><span class=\"comment-copy\">\n If I wanted to write a malware, I wouldn't write it in python, and I would really care about the chance of it to be decrypted.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I did something similar on the past, here is the idea you need to carry:\n </p>\n <ol>\n  <li>\n   <p>\n    You create the python script that you want to execute and obfuscate:\n   </p>\n   <pre><code>print('Some string')\n</code></pre>\n  </li>\n  <li>\n   <p>\n    Another script opens the previous script, encrypts the content and\n    <code>\n     base64\n    </code>\n    the encryption, and finally put in a variable like:\n   </p>\n   <pre><code>text = \"cHJpbnQoJ1NvbWUgc3RyaW5nJyk=\"\n</code></pre>\n  </li>\n  <li>\n   <p>\n    On another python file, you stick the text variable and a routine for decryption and decode the base64.\n   </p>\n  </li>\n  <li>\n   <p>\n    Use the method\n    <code>\n     eval()\n    </code>\n    for execute the previous decrypted and decoded string.\n   </p>\n  </li>\n </ol>\n <p>\n  This is not perfect but at least you have something to play with and explore.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "perror",
            "time": "Jan 13, 2020 at 17:02",
            "is_accepted": true,
            "comments": []
        }
    ]
}