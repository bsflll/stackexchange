{
    "title": "How to get the recovered memory references in IDA-Pro? [duplicate]",
    "link": "https://reverseengineering.stackexchange.com/questions/8628/how-to-get-the-recovered-memory-references-in-ida-pro",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         This question already has an answer here\n        </b>\n        :\n       </div>\n      </div>\n     </div>\n    </div>\n    <div class=\"flex--item mb0 mt4\">\n     <a dir=\"ltr\" href=\"/questions/8590/how-can-i-obtain-the-data-of-how-many-memory-references-are-symbolized-by-ida-pr\">\n      How can I obtain the data of how many memory references are symbolized by IDA-Pro?\n     </a>\n     <span class=\"question-originals-answer-count\">\n      (1 answer)\n     </span>\n    </div>\n    <div class=\"flex--item mb0 mt8\">\n     Closed\n     <span class=\"relativetime\" title=\"2015-04-22 18:16:14Z\">\n      10 years ago\n     </span>\n     .\n    </div>\n   </div>\n  </aside>\n </div>\n <p>\n  I want to collect all the IDA recovered symbol information in data sections (this information could be\n  <strong>\n   function name\n  </strong>\n  , or it could be\n  <strong>\n   an entry of jump table\n  </strong>\n  , or it could be a\n  <strong>\n   reference to other data sections\n  </strong>\n  ).\n </p>\n <p>\n  Here is an example of data sections from a IDA disassembled binary.\n </p>\n <p>\n  <img alt=\"enter image description here\" src=\"https://i.sstatic.net/jKc9B.png\"/>\n </p>\n <p>\n  Basically there are three recovered symbols in data section, and I want to collect these information in a format like this:\n </p>\n <pre><code>0x804a018 : sub_804847b\n0x804a01dc : _strchr\n0x804a020 : sub_80484AE\n</code></pre>\n <p>\n  I am thinking to traverse all the memory address of a binary's data sections, and check the content of each address, to see whether it is a recovered symbol.\n </p>\n <p>\n  But basically how to read a suspicious symbol when iterating addresses? I read the\n  <a href=\"https://www.hex-rays.com/products/ida/support/idadoc/162.shtml\" rel=\"nofollow noreferrer\">\n   <code>\n    idc\n   </code>\n  </a>\n  interface, but I just cannot find any the correct api to do so. Could anyone help me on this issue? I appreciate that.\n </p>\n <p>\n  ------------------------ explain ------------------------\n </p>\n <p>\n  I didn't get an answer in that post, in addition, I think what I explained in that post is somehow misleading.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "idapython",
        "symbols"
    ],
    "user": "lllllllllllll",
    "time": "10 years ago",
    "comments": [
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n It can also be a\n <b>\n  random sequence of binary numbers\n </b>\n instead of an address. The only numbers that should be converted to an actual address are those listed in the relocation table.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "lllllllllllll",
            "text": "<html><body><span class=\"comment-copy\">\n @JasonGeffner, hi Jason, firstly, my question is still not be answered in that post. Secondly, I am worried that post contains much more stuff that can mislead other people. Anyway, any though on this issue? :)\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "lllllllllllll",
            "text": "<html><body><span class=\"comment-copy\">\n @Jongware, thank you and I know it could be. So you mean the symbolized memory references are already listed in\n <code>\n  relocation table\n </code>\n , does IDA-Pro collects this information?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n If they are present in the executable, then it should be aware: my free-demo version shows a comment such as\n <code>\n  OFF32 SEGDEF [CODE,524A0612]\n </code>\n for undefined bytes that are relocated, but it does not complain if I define them otherwise. I'm not sure if one can interrogate the relocation table through IDA.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As far as I understood your question, you will need the following IDAPython apis:\n </p>\n <ul>\n  <li>\n   Getting a content from specific memory address : idc.Dword(address) or idc.Qword(address) - you should choose the function according to the pointer size.\n  </li>\n  <li>\n   Obtaining a name of the address: idc.Name(address)\n  </li>\n </ul>\n <p>\n  All the mentioned IDAPython apis has the similar things in idc\n </p>\n <p>\n  So, for your specific example you'll get the desired output as follows (IDAPython):\n </p>\n <pre><code>import idc\naddresses = [0x804a018, 0x804a01dc ,0x804a020 ]\n\nfor a in addresses:\n    print hex(a),\" : \", idc.Name(idc.Dword(a))\n</code></pre>\n <p>\n  Filtering the data in the .data section is completely different story.\n </p>\n <p>\n  For example you can do the following (it is not 100% correct):\n </p>\n <pre><code>import idc\n\nsegstart = your_code_segment_start\nsegend = your_code_segment_end\nptrstep = your_system_pointer_size_in_bytes\n\nfor a in range(segstart, segend, ptrstep):\n    data = idc.Dword(a) #replace with qword if working with 64 bit)\n    if a < segstart or a >= segend:\n        continue\n    if not idc.Name(data) is None:\n        print hex(a), \" --> \", idc.Name(data)\n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "w s",
            "time": "Apr 5, 2015 at 6:40",
            "is_accepted": true,
            "comments": [
                {
                    "user": "lllllllllllll",
                    "text": "<span class=\"comment-copy\">Thank you! I also updated some code <a href=\"http://reverseengineering.stackexchange.com/a/8627/3215\">here</a>.</span>",
                    "time": null
                }
            ]
        }
    ]
}