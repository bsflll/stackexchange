{
    "title": "Any reason why Ghidra is screwing with this byte in this dissassembly?",
    "link": "https://reverseengineering.stackexchange.com/questions/21697/any-reason-why-ghidra-is-screwing-with-this-byte-in-this-dissassembly",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am poking around some PS2 ELFs and I found this weird issue where Ghidra seems to be doubling the value of this byte for some reason.\n </p>\n <p>\n  Here's what Ghidra shows:\n </p>\n <pre><code>                             undefined Money_get()\n             undefined         v0_lo:1        <RETURN>\n                             Money_get                    XREF[1]:   Entry Point(*)\n001bcb90 ec 00 01 3c     lui        at,0xec\n001bcb94 98 00 03 3c     lui        v1,0x98\n001bcb98 e8 aa 25 8c     lw         a1,-0x5518(at)=>DAT_00ebaae8\n</code></pre>\n <p>\n  And what IDA shows:\n </p>\n <pre><code>main:001BCB90 Money_get:                          # CODE XREF: plmove_find_02+178↑p\nmain:001BCB90                                     # Item_get+70↑p\nmain:001BCB90                 lui     $at, 0x76\nmain:001BCB94                 lui     $v1, 0x98\nmain:001BCB98                 lw      $a1, 0x7657A8\n</code></pre>\n <p>\n  What IDA shows is the correct disassembly.  The first line is supposed to be\n </p>\n <pre><code>lui $at, 0x76  \n</code></pre>\n <p>\n  But for some reason Ghidra has doubled the 0x76 to 0xEC. And because of that the address loaded in the 3rd line is incorrect.   I've double checked that the input files are identical and I know IDA is the correct one because the gameshark code for this particular game modifies that address.\n </p>\n <p>\n  I even confirmed in a hex editor that the byte should be 0x76 but in Ghidra's own hex output it shows it as 0xEC.  So during input it's doubling it for some reason.\n </p>\n <p>\n  So any reason why Ghidra is doing this?  I tried reloading the file and analyzing as a generic MIPS (thinking it was the PS2 ELF loader I used) and it did the same thing.\n </p>\n <p>\n  So I did some more testing and when I strip off the ELF header and load the file as a raw binary then Ghidra loads it correctly.  So I wonder what in the ELF header would cause Ghidra to modify that byte?\n </p>\n</div>\n</body></html>",
    "votes": "6",
    "answers": 1,
    "views": "2k",
    "tags": [
        "disassembly",
        "mips",
        "ghidra"
    ],
    "user": "AlphaXeno1",
    "time": "Jul 17, 2019 at 16:35",
    "comments": [
        {
            "user": "R4444",
            "text": "<html><body><span class=\"comment-copy\">\n I am not totally familiar with the mips format, but have you checked the stack size? is it more that expected?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n Can you share the file?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "AlphaXeno1",
            "text": "<html><body><span class=\"comment-copy\">\n Don't think I can upload it since it's copyrighted.  But it's the main executable for Breath of Fire Dragon Quarter for the PS2.  File name is SLUS_204.99 on the root of the game disc.  PS2 games are standard ELFs on the disc but I'm using this one in particular because they left the debug symbols in the executable for some reason.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This has something to do with the way Ghidra handles relocations. Loading the\n  <code>\n   SLUS_204.99\n  </code>\n  binary with the following processor options and relocations disabled.\n </p>\n <pre><code>Processor: MIPS\nVariant: 64-32addr\nSize: 32\nEndian: little\nCompiler: default\n</code></pre>\n <p>\n  <a href=\"https://i.sstatic.net/9IA0j.png\" rel=\"noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/9IA0j.png\"/>\n  </a>\n </p>\n <p>\n  The disassembly is the same as that of IDA.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/lAy7r.png\" rel=\"noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/lAy7r.png\"/>\n  </a>\n </p>\n <hr/>\n <p>\n  Using\n  <code>\n   readelf\n  </code>\n  shows that there are relocations of type\n  <code>\n   R_MIPS_26\n  </code>\n  at the said address.\n </p>\n <pre><code>$  mipsel-linux-gnu-readelf --relocs SLUS_204.99 | grep \"Money_get\"\n\n Offset     Info    Type            Sym.Value  Sym. Name\n\n...\n\n0014b3b8  004add04 R_MIPS_26         001bcb90   Money_get\n001bc290  004add04 R_MIPS_26         001bcb90   Money_get\n011432c8  004add04 R_MIPS_26         001bcb90   Money_get\n01144af0  004add04 R_MIPS_26         001bcb90   Money_get\n01144b0c  004add04 R_MIPS_26         001bcb90   Money_get\n01145090  004add04 R_MIPS_26         001bcb90   Money_get\n01145204  004add04 R_MIPS_26         001bcb90   Money_get\n0114527c  004add04 R_MIPS_26         001bcb90   Money_get\n01145ae8  004add04 R_MIPS_26         001bcb90   Money_get\n01145b24  004add04 R_MIPS_26         001bcb90   Money_get\n01145b68  004add04 R_MIPS_26         001bcb90   Money_get\n01145b9c  004add04 R_MIPS_26         001bcb90   Money_get\n01140e3c  004add04 R_MIPS_26         001bcb90   Money_get\n01140e5c  004add04 R_MIPS_26         001bcb90   Money_get\n010063d4  004add04 R_MIPS_26         001bcb90   Money_get\n01006bfc  004add04 R_MIPS_26         001bcb90   Money_get\n010081e4  004add04 R_MIPS_26         001bcb90   Money_get\n0102b93c  004add04 R_MIPS_26         001bcb90   Money_get\n0102c454  004add04 R_MIPS_26         001bcb90   Money_get\n0102d3e8  004add04 R_MIPS_26         001bcb90   Money_get\n0102dc90  004add04 R_MIPS_26         001bcb90   Money_get\n...\n</code></pre>\n <p>\n  So the error is likely in the\n  <a href=\"https://github.com/NationalSecurityAgency/ghidra/blob/c7f934c9d1fcc55731d7d388e46407fd4775072b/Ghidra/Processors/MIPS/src/main/java/ghidra/app/util/bin/format/elf/relocation/MIPS_ElfRelocationHandler.java#L418\" rel=\"noreferrer\">\n   code\n  </a>\n  that handles relocation of type\n  <code>\n   R_MIPS_26\n  </code>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "0xec",
            "time": "Jul 20, 2019 at 7:49",
            "is_accepted": true,
            "comments": []
        }
    ]
}