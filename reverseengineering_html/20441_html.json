{
    "title": "What is a good resource to learn about how the call stack works while programming in C?",
    "link": "https://reverseengineering.stackexchange.com/questions/20441/what-is-a-good-resource-to-learn-about-how-the-call-stack-works-while-programmin",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Sorry if this is a duplicate and please point me in the right direction if so.  I have a strong foundation in C programming and I know how memory is allocated on the stack for variables/arrays/pointers (of all datatypes) etc.  I also understand how to use malloc and free to put data on the heap.  What I do NOT understand is how all the registers and the call stack fit together with this picture and what each registers is supposed to point to.  I am trying to learn this before I start messing with GDB so I actually know what I am looking at.  Any good references out there?\n </p>\n <p>\n  Ultimately this is so I can do a project for my masters where I need to run shellcode by exploiting a buffer overflow vulnerability in a given program.  I know how to do a basic buffer overflow by feeding the program more data than allocated but I don't know what/how much data I need to feed the program so that it gets put at the right place in memory in order to execute what is required.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "97",
    "tags": [
        "gdb",
        "memory",
        "stack",
        "register",
        "callstack"
    ],
    "user": null,
    "time": "Jan 22, 2019 at 17:53",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <p>\n   What I do NOT understand is how all the registers and the call stack fit together with this picture and what each registers is supposed to point to.\n  </p>\n </blockquote>\n <p>\n  It's great that you are competent in C, but there is no way around reading disassembled object code and writing assembly code (practical experience).\n </p>\n <p>\n  The compiler toolchain is responsible for generating object code that targets a particular CPU. This means that it is the compiler that is responsible for managing all of the registers based on details such as process layout in memory (which is OS-specific), calling convention, optimization level, application binary interface (also OS-specific), etc.\n </p>\n <p>\n  You did not give any information about the environment you are working in aside from mentioning GDB, so I am guessing you are going to be doing Linux x86 binary exploitation.\n </p>\n <ul>\n  <li>\n   <p>\n    A good theoretical foundation for understanding the stack is provided by Chapter 8 \"Subroutines and Control Abstraction\" in\n    <em>\n     Programming Language Pragmatics\n    </em>\n    by Michael L. Scott.\n   </p>\n  </li>\n  <li>\n   <p>\n    A good practical introduction to Linux x86 stack structure and management is provided in section 3.7 \"Procedures\" in\n    <em>\n     Computer Systems: A Programmer's Perspective\n    </em>\n    by Bryant and O'Hallaron.\n   </p>\n  </li>\n </ul>\n <p>\n  Lastly, there is the following Q&A regarding the stack over at the CS.SE site:\n </p>\n <p>\n  <a href=\"https://cs.stackexchange.com/questions/76871/how-are-variables-stored-in-and-retrieved-from-the-program-stack\">\n   How are variables stored in and retrieved from the program stack?\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "julian",
            "time": "Jan 22, 2019 at 23:18",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user4466",
                    "text": "<span class=\"comment-copy\">Thanks @Julian.  I appreciate it and will be diving into assembly.</span>",
                    "time": null
                },
                {
                    "user": "julian",
                    "text": "<span class=\"comment-copy\">@user2976594 No problem, good luck</span>",
                    "time": null
                },
                {
                    "user": "user4466",
                    "text": "<span class=\"comment-copy\">do you happen to have an IRC room you like to use?  I could really use some help.  What I am working on is relatively simple but I am stuck at one part and just need a nudge over the hump.  But I feel stackexchange may not be the best forum.  I did get the books you recommended though.</span>",
                    "time": null
                },
                {
                    "user": "julian",
                    "text": "<span class=\"comment-copy\">@user2976594 you can create a chat room here, or DM me on twitter, or communicate via email</span>",
                    "time": null
                },
                {
                    "user": "user4466",
                    "text": "<span class=\"comment-copy\">e-mail would work best can I PM you somehow so as not to publicly share my e-mail</span>",
                    "time": null
                }
            ]
        }
    ]
}