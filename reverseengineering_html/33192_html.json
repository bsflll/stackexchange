{
    "title": "In a Ghidra Loader in Java, how can I set the types of symbols or at addresses?",
    "link": "https://reverseengineering.stackexchange.com/questions/33192/in-a-ghidra-loader-in-java-how-can-i-set-the-types-of-symbols-or-at-addresses",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm writing a bunch of Ghidra Loaders for retro platforms.\n </p>\n <p>\n  I know how to use\n  <code>\n   SymbolTable\n  </code>\n  <code>\n   createLabel()\n  </code>\n  and\n  <code>\n   addExternalEntryPoint()\n  </code>\n  but sometimes I know the types of certain fields, symbols, or addresses too.\n </p>\n <p>\n  So far I can't find how to add types from Java. For now I'm only thinking about basic data types like\n  <code>\n   byte\n  </code>\n  ,\n  <code>\n   word\n  </code>\n  ,\n  <code>\n   dword\n  </code>\n  , if that makes a difference.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "28",
    "tags": [
        "ghidra",
        "symbols"
    ],
    "user": "hippietrail",
    "time": "Sep 2, 2024 at 4:07",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I managed to figure it out by a combination of guesswork, fumbling around, and searching the Ghidra source on GitHub:\n </p>\n <p>\n  The term used by Ghidra is\n  <a href=\"https://ghidra.re/ghidra_docs/api/ghidra/program/model/data/DataType.html\" rel=\"nofollow noreferrer\">\n   <code>\n    DataType\n   </code>\n  </a>\n  and data types are set via the\n  <a href=\"https://ghidra.re/ghidra_docs/api/ghidra/program/model/listing/Listing.html\" rel=\"nofollow noreferrer\">\n   <code>\n    Listing\n   </code>\n  </a>\n  , which you can obtain in your Loader's\n  <code>\n   load()\n  </code>\n  method:\n </p>\n <pre class=\"lang-java prettyprint-override\"><code>Listing listing = program.getListing();\n</code></pre>\n <p>\n  And you can then set built-in types like so:\n </p>\n <pre class=\"lang-java prettyprint-override\"><code>listing.createData(address, UnsignedShortDataType.dataType);\nlisting.createData(address, PascalStringDataType.dataType);\n</code></pre>\n <p>\n  If you haven't used addresses before, you typically get them like this:\n </p>\n <pre class=\"lang-java prettyprint-override\"><code>AddressSpace addressSpace = program.getAddressFactory().getDefaultAddressSpace();\nAddress loadAddress = addressSpace.getAddress(0x30000);\n</code></pre>\n <p>\n  By the way, strings and arrays are a little different:\n </p>\n <pre class=\"lang-java prettyprint-override\"><code>listing.createData(address, new StringDataType(), 2);\nlisting.createData(address.add(2), new ArrayDataType(UnsignedIntegerDataType.dataType, 4));\n</code></pre>\n</div>\n</body></html>",
            "votes": "0",
            "user": "hippietrail",
            "time": "Sep 2, 2024 at 7:42",
            "is_accepted": true,
            "comments": []
        }
    ]
}