{
    "title": "Reverse engineering of Managed C++/C# CrackMe",
    "link": "https://reverseengineering.stackexchange.com/questions/16394/reverse-engineering-of-managed-c-c-crackme",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm reverse engineering the CrackMe which is written on Managed C++/C#.\nArguments are \"string\" (email in this case) and \"serial\". Serial is somehow depends on string and I need to understand how.\n </p>\n <p>\n  I used dnSpy to disassemble the program and found onClick function which begins the process of checking if the serial was right:\n  <a href=\"https://pastebin.com/TwSMTiD3\" rel=\"nofollow noreferrer\">\n   button2_onClick\n  </a>\n </p>\n <p>\n  In the end of this function we can see a boolean function Check() which returns\n  <code>\n   true\n  </code>\n  if the serial was right:\n  <a href=\"https://pastebin.com/gj4tLwN6\" rel=\"nofollow noreferrer\">\n   Check()\n  </a>\n </p>\n <p>\n  As I'm new to reverse engineering (and especially to RE of .NET apps) so I need some explanations about the decompiled code we can see in these two functions:\n </p>\n <p>\n  1) What exactly does\n </p>\n <pre><code>md = <Module>.std.basic_string<char,std::char_traits<char>,std::allocator<char>\\u0020>.{ctor}(ref basic_string<char,std::char_traits<char>,std::allocator<char>\\u0020>4, ref basic_string<char,std::char_traits<char>,std::allocator<char>\\u0020>2);\n</code></pre>\n <p>\n  mean on line 25 of\n  <code>\n   button2_onClick\n  </code>\n  ? I understand that this is some type of assignment, but no more.\n </p>\n <p>\n  2) What these lines (14, 15 lines and so on, of\n  <code>\n   Check()\n  </code>\n  ) do?\n </p>\n <pre><code>*(ref basic_string<char,std::char_traits<char>,std::allocator<char>\\u0020>2 + 16) = 0;\n*(ref basic_string<char,std::char_traits<char>,std::allocator<char>\\u0020>2 + 20) = 0;\n</code></pre>\n <p>\n  3) What do the numbers (5, 6, 7 near the end of lines) mean?\n </p>\n <pre><code><Module>.std.basic_string<char,std::char_traits<char>,std::allocator<char>\\u0020>._Tidy(ref basic_string<char,std::char_traits<char>,std::allocator<char>\\u0020>5, true, 0u);\n\nbasic_string<char,std::char_traits<char>,std::allocator<char>\\u0020> basic_string<char,std::char_traits<char>,std::allocator<char>\\u0020>6;\n\nbasic_string<char,std::char_traits<char>,std::allocator<char>\\u0020>* right2 = <Module>.md5(&basic_string<char,std::char_traits<char>,std::allocator<char>\\u0020>7, str);\n</code></pre>\n <p>\n  4) Is it just a comparison of two strings in disguised form?\n </p>\n <pre><code>result =(<Module>.std.basic_string<char,std::char_traits<char>,std::allocator<char>\\u0020>.compare(ref basic_string<char,std::char_traits<char>,std::allocator<char>\\u0020>, 0u, (uint)(*(ref basic_string<char,std::char_traits<char>,std::allocator<char>\\u0020> + 16)), ptr, count) == 0);\n</code></pre>\n <p>\n  5)Maybe there's a easier way which I don't know to solve this crackme? I firstly tried to use IDA as always, but that wasn't really helpful in this case.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        ".net",
        "crackme",
        "c#"
    ],
    "user": "kekyc",
    "time": "Sep 26, 2017 at 17:16",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<html><body><span class=\"comment-copy\">\n this looks more like Managed C++/.NET than C#\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "kekyc",
            "text": "<html><body><span class=\"comment-copy\">\n @PawełŁukasik I'll consider that, thank you.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <ol>\n  <li>\n   Looks like a copy\n   <code>\n    ctor\n   </code>\n   , so my judgement would be the same as yours - assignment.\n  </li>\n  <li>\n   I would assume that's sets value 0 at the specified offset.\n  </li>\n </ol>\n <p>\n  <strong>\n   EDIT:\n  </strong>\n  that's partially true, upon further investigation it looks like that at index 16, the length of the string is stored, and at index 20 it's some kind of type. If value @20 is > 16 then the string is in fact a pointer to memory region where the string is stored. For shorter strings it is stored internally. So setting those two to 0 is initialization/reseting the values.\n </p>\n <ol start=\"3\">\n  <li>\n   <p>\n    Hard to believe but that's part of auto generated names. If you don't declare variables and have code like this\n   </p>\n   <pre><code>std::string(\"\");\nstd::string(\"\"); \n</code></pre>\n   <p>\n    then underneath it will be like this\n   </p>\n   <pre><code>basic_string<char,std::char_traits<char>,std::allocator<char>\\u0020> basic_string<char,std::char_traits<char>,std::allocator<char>\\u0020>;\nbasic_string<char,std::char_traits<char>,std::allocator<char>\\u0020> basic_string<char,std::char_traits<char>,std::allocator<char>\\u0020>2; \n</code></pre>\n  </li>\n  <li>\n   <p>\n    This is compare method, the signature is:\n    <code>\n     System::String::Compare(strA, indexA, strB, indexB, len)\n    </code>\n    . In your case it compares content of variable\n    <code>\n     string\n    </code>\n    starting from index 0 with the further part of the same variable - above index 16.\n   </p>\n  </li>\n  <li>\n   <p>\n    Everything you need to know is in the check method. Why not debug it? dnSpy can do that. By the quick look it calculates MD5 from the Email, but there are some parts that require a bit of further investigation and you did not provided the full binary. Some questions what does\n    <code>\n     <Module>.GetString()\n    </code>\n    returns? - it looks like it's essential to the calculation. \nAlso this\n    <code>\n     <Module>.??_C@_00CNPNBAHC@?$AA@\n    </code>\n    is probably a const string.\n   </p>\n  </li>\n </ol>\n <p>\n  A bit of more info, although it is a bit harder than in normal .NET application one can still get to the data that's needed to correctly solve this. If we inspect the method where we compare\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/FVjTO.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/FVjTO.png\"/>\n  </a>\n </p>\n <p>\n  we can there inspect the variables & addresses that are in fact memory locations that are containing the values. maybe you can't inspect them from Locals, but if you press CTRL+G, and type the memory location you will be taken where you need to be.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/fqOjY.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/fqOjY.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Paweł Łukasik",
            "time": "Sep 25, 2017 at 17:37",
            "is_accepted": true,
            "comments": [
                {
                    "user": "kekyc",
                    "text": "<span class=\"comment-copy\">After your answer I began to understand the disassembled code better, but I still can't understand what globally happening in Check() function.  And also, I tried to debug the code with dnSpy. It works and it helps to understand the program, but I can't see values the most of the important variables (see the screenshots) - there are just no these strings in the memory. Nothing changes when the program doing an assignment (or probably it actually changes, but no there where I'm looking for it). <a href=\"http://puu.sh/xHoMn/2ef56bdbed.png\" rel=\"nofollow noreferrer\">pic1</a> <a href=\"http://puu.sh/xHoTv/31247002b2.png\" rel=\"nofollow noreferrer\">pic2</a></span>",
                    "time": null
                },
                {
                    "user": "kekyc",
                    "text": "<span class=\"comment-copy\">Also, indeed, <a href=\"https://pastebin.com/DWkFidat\" rel=\"nofollow noreferrer\">&lt;Module&gt;.GetString()</a> looks like custom function and requires some analysis.</span>",
                    "time": null
                },
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">well in C++ значение/value is a pointer to the value. I would bet you need to dereference it. Post the whole binary if you want a bit more analysis.</span>",
                    "time": null
                },
                {
                    "user": "kekyc",
                    "text": "<span class=\"comment-copy\">I even tried to dump process memory with WinHex after that, but still found nothing useful. <a href=\"https://mega.nz/#!9s5GDDII!ZoJqhE4OHO8N2nfH29owRhvDIElA-YxYxGxs9DttxdM\" rel=\"nofollow noreferrer\">Here's the binary</a></span>",
                    "time": null
                },
                {
                    "user": "kekyc",
                    "text": "<span class=\"comment-copy\">The problem was I haven't checked variables such as <code>num5</code> in the memory. Actually wanted key was in memory on address which was  stored in <code>num5</code>. <a href=\"http://puu.sh/xIQSt/a13e17aea6.png\" rel=\"nofollow noreferrer\">screenshot</a></span>",
                    "time": null
                }
            ]
        }
    ]
}