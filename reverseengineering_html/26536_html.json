{
    "title": "How JNE work in Ollydbg?",
    "link": "https://reverseengineering.stackexchange.com/questions/26536/how-jne-work-in-ollydbg",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a question about JNE.\nI use ollydbg and ReverseMe tutorial.\n </p>\n <p>\n  In\n  <strong>\n   JNE\n  </strong>\n  condition, the zero flag is equal to\n  <strong>\n   1\n  </strong>\n  . and it mean the arithmetic result is\n  <strong>\n   zero\n  </strong>\n  . Right?\n </p>\n <p>\n  The\n  <strong>\n   Z=1\n  </strong>\n  meaning the condition is true and it want to jump to Error message???\nand If i change the\n  <strong>\n   zero flag\n  </strong>\n  to\n  <strong>\n   0\n  </strong>\n  <strong>\n   (Z=0)\n  </strong>\n  , it mean false? and ignore the Error message??\n </p>\n <p>\n  JNE = Jump If not Equal. So whats that mean? if not equal to .. ? What does it compare to?\n </p>\n <p>\n  i confused ...\n  <a href=\"https://i.sstatic.net/183vC.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/183vC.jpg\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "458",
    "tags": [
        "assembly"
    ],
    "user": "Jason",
    "time": "Dec 14, 2020 at 10:42",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  JNE is an alias for JNZ because the CMP instruction will set ZF to 1 if the two values being compared are equal. So you can read it as “jump if\n  <strong>\n   not zero flag\n  </strong>\n  ”, or “jump if ZF is not set”, or “jump if ZF is 0”.\n </p>\n <p>\n  In your specific case, the jump will be taken if\n  <code>\n   eax\n  </code>\n  is\n  <em>\n   not equal\n  </em>\n  to -1.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Igor Skochinsky",
            "time": "Dec 14, 2020 at 11:19",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Jason",
                    "text": "<span class=\"comment-copy\">So bases on CMP eax,-1 , it's equal ? eax is fffff !</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@Jason it’s checking for equality but jumping if <i>not</i> equal</span>",
                    "time": null
                },
                {
                    "user": "Jason",
                    "text": "<span class=\"comment-copy\">Thank you. is there any source to understand assembly codes?</span>",
                    "time": null
                },
                {
                    "user": "morsisko",
                    "text": "<span class=\"comment-copy\">Yes, for example Intel Assembly Manual.</span>",
                    "time": null
                }
            ]
        }
    ]
}