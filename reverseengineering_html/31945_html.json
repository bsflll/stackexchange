{
    "title": "In the IDA xrefs window, can I filter by unique addresses? Or is there an alternative view providing that?",
    "link": "https://reverseengineering.stackexchange.com/questions/31945/in-the-ida-xrefs-window-can-i-filter-by-unique-addresses-or-is-there-an-altern",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Consider the following screenshot:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/P7T7s.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"xrefs dialog in IDA\" src=\"https://i.sstatic.net/P7T7s.png\"/>\n  </a>\n </p>\n <p>\n  Here, the\n  <code>\n   r\n  </code>\n  and\n  <code>\n   p\n  </code>\n  Type entries appear in pairs. We have ten entries, but five pairs.\n </p>\n <p>\n  Is there a way to filter this list down to unique\n  <em>\n   Address\n  </em>\n  values, rather than having those duplicates shown for each respective\n  <em>\n   Type\n  </em>\n  ?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "62",
    "tags": [
        "ida"
    ],
    "user": "0xC0000022L",
    "time": "Jun 6, 2023 at 21:53",
    "comments": [
        {
            "user": "mimak",
            "text": "<html><body><span class=\"comment-copy\">\n I don't think filtering by type is a feature for the UI (absolutely doable with IDAPython), but you can click the 'Type' column label to sort by type\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n @mimak it's a fair point, but there doesn't seem to be a sorting hierarchy. And sorting by address currently is the best short I have at inspecting each xref. If I sort by another metric, I will go all over the place when navigating, usually.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<html><body><span class=\"comment-copy\">\n if you're willing to idapython it as mimak said, it's significantly easer to sort them by their flag (\n <code>\n  dr_R\n </code>\n ) & type. i'm the maintainer of ida-minsc over at github.com/arizvisa/ida-minsc which exposes those types for refs and can easily sort/group/fit them to a ui thing (if cared). there's a future branch over at github.com/arizvisa/ida-minsc/tree/persistence-refactor which returns a ref as an int-compat tuple with the \"access\" bit being a\n <code>\n  set\n </code>\n of \"&rwx\" to distinguish loads/stores from data refs and regular code refs (as it's an import, you'd prolly use\n <code>\n  db.xref.up\n </code>\n or\n <code>\n  func.up\n </code>\n in minsc).\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n @AliRizvi-Santiago thanks so much for chiming in. I came across\n <code>\n  ida-minsc\n </code>\n , didn't give it a try yet, however. But the remark about this flag is very valuable!\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}