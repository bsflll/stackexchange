{
    "title": "Reversing encoding of a RSA public key",
    "link": "https://reverseengineering.stackexchange.com/questions/27608/reversing-encoding-of-a-rsa-public-key",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to figure out the format/encoding for this:\n </p>\n <p>\n  <code>\n   00040000a56e4a0e701017589a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000100040000a56e4a0e70101759a5187dc7ea841d156f2ec0e36ad52a44dfeb1e61f7ad991d8c51056ffedb162b4c0f283a12a88a394dff526ab7291cbb307ceabfce0b1dfd5cd9508096d5b2b8b6df5d671ef6377c0921cb23c270a70e2598e6ff89d19f105acc2d3f0cb35f29280e1386b6f64c4ef22e1e1f20d0ce8cffb2249bd9a2137000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001\n  </code>\n  to replicate it with my own public key.\n </p>\n <p>\n  I've looked at this\n  <a href=\"https://crypto.stackexchange.com/questions/41871/how-to-find-the-encoding-of-an-rsa-public-key\">\n   https://crypto.stackexchange.com/questions/41871/how-to-find-the-encoding-of-an-rsa-public-key\n  </a>\n  and from what I can see there are similarities, though it doesn't seem to be the same as that.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "997",
    "tags": [
        "cryptography"
    ],
    "user": "orangedoggo",
    "time": "May 4, 2021 at 11:22",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <code>\n   00040000\n  </code>\n  looks like a 32 bit value representing the length of the data.\n </p>\n <p>\n  If we decode it in little-endian we get\n  <code>\n   1024\n  </code>\n  :\n </p>\n <pre><code>sage: int.from_bytes(bytes.fromhex('00040000'), 'little')\n1024\n</code></pre>\n <p>\n  I'm assuming this gives the number of bits that follow; the next 1024 bits (\n  <code>\n   n\n  </code>\n  ) are:\n </p>\n <pre><code>f21a03ef61ad05c0af8d2acf29d3d779c2f73b61aa88533dac358410ac7a08d005dbd6325bb5064eb8afb24e3aef680cfad779d854b7ef97d4f5a1f2f16eb63ebf1b1235f89b65053c01f68a19bcda4183516c20cd907a49301d1314f956fbcc2018e4cfe6991c224d0e177eb11d7fae8477cd6701580754cc116782a0b6b6db\n</code></pre>\n <p>\n  Followed by 1024 bits (\n  <code>\n   e\n  </code>\n  ) that are\n </p>\n <pre><code>0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001\n</code></pre>\n <p>\n  The latter is very likely the exponent, however in big-endian:\n </p>\n <pre><code>sage: int.from_bytes(bytes.fromhex('00010001'), 'big')\n65537\n</code></pre>\n <p>\n  65537 is a very commonly used exponent.\n </p>\n <p>\n  Since\n  <code>\n   e\n  </code>\n  is in big-endian, I assume\n  <code>\n   n\n  </code>\n  is too, so your public modulus is:\n </p>\n <pre><code>sage: int.from_bytes(bytes.fromhex('f21a03ef61ad05c0af8d2acf29d3d779c2f73b61aa88533dac358410ac7a08d005dbd6325bb5064eb8afb24e3aef680cfad779d854b7ef97d4f5a1f2f16eb63ebf1b1235f89b65053c01f68a19bcda4183516c20cd907a49301d1314f956fbcc2018e4cfe6991c224d0e177eb11d7fae8477cd6701580754cc116782a0b6b6db'), 'big')\n170009540932613151769038469988293650218844004053584339002200232194264352712884216925985784801458591501781573072892989116728048997832334682982748978655741179946010134561466243581524386945399240608537896417387019700398948330733836779231824938918338194668413830256507020494474648180467264074322450994971415066331\n</code></pre>\n <p>\n  Then, there is another public key of the same length\n  <code>\n   00040000\n  </code>\n  with the same\n  <code>\n   e\n  </code>\n  <code>\n   00010001\n  </code>\n  .\n </p>\n <p>\n  It's public modulus is:\n </p>\n <pre><code>sage: int.from_bytes(bytes.fromhex('af5105fa343e9d8e72294fb8e752a703f54f9b403826f8dd06cf2628ece496806e182ab0e88591f6c0ee7873cb69409e735c62105dd2e28bd45428806836cdb8d94b204ace06d342d24ed824c6988b7db3bd840b50071d291aa4a8cda9187a3f698616fb8ae398f0011a3e38ef31312f07aba316b35858d8e5fe7e7ef8c01209'), 'big')\n123111431213688323191113429717081285154340099011946618199498087171573056754335780131987080307395734064403880657942875702088682210145904820435534801337217797703105810136529933603381871426734823683013576987571192787312359697878601542181638347168216122667608679225431011863788903839101406098646701462875195576841\n</code></pre>\n</div>\n</body></html>",
            "votes": "8",
            "user": "ambiso",
            "time": "May 4, 2021 at 11:26",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user36062",
                    "text": "<span class=\"comment-copy\">65537  is more than very common, it is around 98% of the public exponents.</span>",
                    "time": null
                }
            ]
        }
    ]
}