{
    "title": "wsasend(disassemblied) function get parameters",
    "link": "https://reverseengineering.stackexchange.com/questions/12575/wsasenddisassemblied-function-get-parameters",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Good Evening,\n </p>\n <p>\n  currently, I am struggling around with a problem of getting the parameters of the wsasend function. The only parameter where found out something is this one:\n </p>\n <p>\n  <code>\n   mov qword ptr ss:[rsp+60],rsi\n  </code>\n </p>\n <p>\n  This should be the something with count because it's between ~60 - ~3000 (pausing application ~60, !pausing application ~3000) Not after the functioned was called so this couldn't be the \"bytes send\" parameter.\n </p>\n <pre><code>mov rsi,qword ptr ss:[rsp+80]\nmov qword ptr ss:[rsp+28],rsi\n</code></pre>\n <p>\n  These 2 lines are one parameter ? I guess because rsi gets a value which is than used one instruction later.\n </p>\n <p>\n  <em>\n   Maybe someone can give me a hint on how to find the correct parameters.\n  </em>\n </p>\n <p>\n  Before I have found this function I thought parameters are only passed to a function via push but after some research, I have found out that this is compiler dependend and I find it difficult to find the parameters.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/ILF3B.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/ILF3B.png\"/>\n  </a>\n </p>\n <pre><code>int WSASend(\n  __in   SOCKET s,\n  __in   LPWSABUF lpBuffers,\n  __in   DWORD dwBufferCount,\n  __out  LPDWORD lpNumberOfBytesSent,\n  __in   DWORD dwFlags,\n  __in   LPWSAOVERLAPPED lpOverlapped,\n  __in   LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine\n);\n</code></pre>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "281",
    "tags": [
        "disassembly",
        "functions"
    ],
    "user": "Sens4",
    "time": "May 1, 2016 at 18:07",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  See\n  <a href=\"https://msdn.microsoft.com/en-us/library/ms235286.aspx\" rel=\"nofollow\">\n   https://msdn.microsoft.com/en-us/library/ms235286.aspx\n  </a>\n  :\n </p>\n <blockquote>\n  <p>\n   The arguments are passed in registers RCX, RDX, R8, and R9\n  </p>\n </blockquote>\n <p>\n  So, the socket is in\n  <code>\n   rcx\n  </code>\n  ,\n  <code>\n   Buffers\n  </code>\n  in\n  <code>\n   rdx\n  </code>\n  (copied from\n  <code>\n   r11\n  </code>\n  ),\n  <code>\n   BufferCount\n  </code>\n  in\n  <code>\n   r8\n  </code>\n  copied from\n  <code>\n   r10\n  </code>\n  , and NumberOfBytesSent in\n  <code>\n   r9\n  </code>\n  (and stored to\n  <code>\n   rsp+50\n  </code>\n  ). The rest of the arguments are pushed on the stack.\n </p>\n <p>\n  This is\n  <em>\n   not\n  </em>\n  compiler dependent, every compiler that produces calls to windows functions has to adhere to this convention. (It is OS dependent though, the convention for Linux is different)\n </p>\n <p>\n  If you want to learn more, google for\n  <code>\n   x64 ABI\n  </code>\n  (ABI is for Application Binary Interface).\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Guntram Blohm",
            "time": "May 1, 2016 at 18:43",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Sens4",
                    "text": "<span class=\"comment-copy\">That definitely cleared things up in my mind! A link from your posted reference was also very helpful: <a href=\"https://msdn.microsoft.com/en-us/library/zthk2dkh.aspx\" rel=\"nofollow noreferrer\">Parameter Passing</a>. I also didn't now about different convention between x32 and x64. Thanks !</span>",
                    "time": null
                }
            ]
        }
    ]
}