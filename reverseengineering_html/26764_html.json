{
    "title": "Advanced Binary Exploitation CTF",
    "link": "https://reverseengineering.stackexchange.com/questions/26764/advanced-binary-exploitation-ctf",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I wanted to ask your assistance: Where can I find advanced ctfs (that hopefully contain solutions) regarding binary/kernel exploitation? I am interested on finding x86_64 linux/windows/arm64 that consist of userland or kernel(lkm or drivers) exploitation (overcoming modern mitigations such as \"shadow stacks\" or different control flow guards(cfg/acg/others..) and grooming tricks and similar are huge pluses).\nWhat I am mostly looking for is ctfs that imitate mundane situations or applications, including but not limited to: common errors, uaf (even double free), bad custom memory layouts(for instance custom mmap implementations), different leaks, finding primitives, disclosures and similar -- all of it either in userland or appropriate kernel level.\n </p>\n <p>\n  Sadly I could not find anything that consists of what I call \"modern world\", with modern mitigations that is not aimed at basic corrupting the stack/heap, basic usage of tools or concepts, or anything that basically teaches the basics (corrupting/polluting, got/plt overwrites, simple ropper and similar basics - but something that goes beyond that, that can teach \"real skills\"). I am looking to expand my knowledge and I am pretty sure your answers would help a lot of people that are wondering about the same too, and couldn't find what they were looking for.\n </p>\n <p>\n  Note: I mentioned solutions because the amount of knowledge and tricks that can be taught just by reading a write up is huge, especially way of thinking, grooming, way of reversing and approaching the situation and similar. I learn a lot from reading write ups but I couldn't find ones that are above the \"beginner\" level.\n </p>\n <p>\n  I am looking to expand my knowledge and I am pretty sure your answers would help a lot of people that are wondering about the same too, and couldn't find what they were looking for.\n </p>\n <p>\n  Just to be clear again: I am not referring to dep/aslr/canaries and similar(those were awesome a decade ago). What I am looking for is the step after that.\n </p>\n <p>\n  Doesn't have to be binary, can be firmware, lkm, drivers, handles/pipes and similar.\n </p>\n <p>\n  Thank you very much and have a great week.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "1k",
    "tags": [
        "binary-analysis",
        "binary",
        "exploit",
        "binary-diagnosis"
    ],
    "user": "BegiNO",
    "time": "Jan 13, 2021 at 21:43",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n Not sure this question format is suitable for the site or even has an actual answer. Just look at real life software, it will be more useful than any CTF.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Guillaume",
            "text": "<html><body><span class=\"comment-copy\">\n For Windows Exploitation, take a look at the Corelan's tutorials. I'm thinking of this one in particular, for a good introduction to the 'modern' Windows exploits protections:\n <a href=\"https://www.corelan.be/index.php/2009/09/21/exploit-writing-tutorial-part-6-bypassing-stack-cookies-safeseh-hw-dep-and-aslr/\" rel=\"nofollow noreferrer\">\n  corelan.be/index.php/2009/09/21/â€¦\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <h1>\n  For Modern Binary Exploitation\n </h1>\n <p>\n  <a href=\"https://github.com/nnamon/linux-exploitation-course\" rel=\"nofollow noreferrer\">\n   https://github.com/nnamon/linux-exploitation-course\n  </a>\n  \n\n  <a href=\"https://exploit.education/fusion/\" rel=\"nofollow noreferrer\">\n   https://exploit.education/fusion/\n  </a>\n </p>\n <h1>\n  For Kernel Exploitation\n </h1>\n <p>\n  <a href=\"https://github.com/xairy/linux-kernel-exploitation\" rel=\"nofollow noreferrer\">\n   https://github.com/xairy/linux-kernel-exploitation\n  </a>\n  \n\n  <a href=\"https://github.com/s0wr0b1ndef/linux-kernel-exploitation\" rel=\"nofollow noreferrer\">\n   https://github.com/s0wr0b1ndef/linux-kernel-exploitation\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Harshit Joshi",
            "time": "May 4, 2021 at 23:10",
            "is_accepted": false,
            "comments": []
        }
    ]
}