{
    "title": "Extract disassembly from Ghidra for reassembling",
    "link": "https://reverseengineering.stackexchange.com/questions/31135/extract-disassembly-from-ghidra-for-reassembling",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  How can I extract a code listing from a Ghidra project such that I can reassemble with something like vasm? I have gone through a memory snapshot and disassembled the code and marked data sections etc. to a point where I would like to check my work.\n </p>\n <p>\n  Further to the question and answer in\n  <a href=\"https://reverseengineering.stackexchange.com/questions/25261/extracting-assembly-line-code-from-an-executable-in-ghidra\">\n   Extracting Assembly line code from an executable in Ghidra\n  </a>\n  I would like to extract line labels, plate comments and EOL comments.\n </p>\n <p>\n  Here is an example:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/l487j.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"example Ghidra screenshot\" src=\"https://i.sstatic.net/l487j.png\"/>\n  </a>\n </p>\n <p>\n  Here's what I'd like the extracted code to look like:\n </p>\n <pre><code>; Extracted data blocks\nSTATUS_STRING_BUFFER:\n        dc.b 0\n        dc.b 0\n        dc.b 0\n        dc.b 0\n; etc\nCURRENT_STATUS_MESSAGE_CODE:\n        dc.b 0\n\n; Extracted subroutine\n**************************************************************\n* Display a message in the status bar                        *\n**************************************************************\nDisplayStatusMessage:\n        movem.l {a2, a1, d5},-(sp)\n        lea STATUS_STRING_BUFFER, a1\n        clr.w d0\n        move.b (a0)+,d0\n        move.b d0,CURRENT_STATUS_MESSAGE_CODE    ; Store Message byte\n        andi.b #$7f                              ; Mask out msb\n        ; ... etc\n</code></pre>\n <p>\n  As you can see there are a number of things to do including:\n </p>\n <ol>\n  <li>\n   Extract data blocks\n  </li>\n  <li>\n   Convert\n   <code>\n    db\n   </code>\n   ,\n   <code>\n    dw\n   </code>\n   ,\n   <code>\n    ddw\n   </code>\n   to\n   <code>\n    dc.b\n   </code>\n   ,\n   <code>\n    dc.w\n   </code>\n   ,\n   <code>\n    dc.l\n   </code>\n  </li>\n  <li>\n   Convert hex from\n   <code>\n    0xNN\n   </code>\n   to\n   <code>\n    $NN\n   </code>\n   notation\n  </li>\n  <li>\n   Extract plate comments\n  </li>\n  <li>\n   Extract labels\n  </li>\n  <li>\n   Extract disassembled code lines\n  </li>\n  <li>\n   Extract EOL comments\n  </li>\n </ol>\n <p>\n  Is there a readily available script for this or can someone show a working example?\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 0,
    "views": "1k",
    "tags": [
        "disassembly",
        "ghidra",
        "motorola"
    ],
    "user": "Robin Elvin",
    "time": "Nov 15, 2022 at 11:48",
    "comments": [
        {
            "user": "dingo_kinznerhook",
            "text": "<html><body><span class=\"comment-copy\">\n Have you looked at the \"Export Program\" menu dialog? None of the options in that dialog do exactly what you are looking for, but the C/C++ export and the ASCII export could be combined by some other script to produce what you are looking for.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Robin Elvin",
            "text": "<html><body><span class=\"comment-copy\">\n @dingo_kinznerhook Yes, this could be a starting point. I may have to run a script outside of Ghidra to do what I want.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}