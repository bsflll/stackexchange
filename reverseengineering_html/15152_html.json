{
    "title": "EBP + C what is that?",
    "link": "https://reverseengineering.stackexchange.com/questions/15152/ebp-c-what-is-that",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have this assembly code:\n </p>\n <pre><code>MOV DL,BYTE PTR DS:[ECX+EAX]  --> Move the first byte of EAX to DL\nADD BYTE PTR DS:[EAX+9],DL  --> ADD the DL byte to the ninth byte at EAX\nINC ECX --> Increase ECX by one\nCMP ECX,DWORD PTR SS:[EBP+C] -- > ????\n</code></pre>\n <p>\n  As you can see i understand everything except of the last line,\n </p>\n <pre><code>CMP ECX,DWORD PTR SS:[EBP+C]\n</code></pre>\n <p>\n  What i can understand here is that there is a compersion between 4 bytes that comes from EBP+C to ECX\n </p>\n <p>\n  But i still don't understand that what is that EBP+C?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "2k",
    "tags": [
        "assembly",
        "ollydbg",
        "register"
    ],
    "user": "Xozu",
    "time": "Apr 13, 2017 at 6:40",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <code>\n   EBP\n  </code>\n  stands for\n  <em>\n   extended base pointer\n  </em>\n  keeping track of the current stackframe.\n </p>\n <p>\n  Since the current\n  <code>\n   ESP\n  </code>\n  (\n  <em>\n   extended stack pointer\n  </em>\n  ) changes frequently in functions as stuff gets pushed to and poped of the stack, the base pointer remebers the value of ESP at the beginning of the function (convention).\n </p>\n <p>\n  For this reason,\n  <code>\n   EBP\n  </code>\n  is often used to referr to arguments or local variables (depending on if you add or substract from it). Remember the stack grows downwards - so positive offsets may referr to arguments passed to the function. Wikipedia offers a great illustration of this layout below:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/tEbkd.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Wikipedia Stack illustration\" src=\"https://i.sstatic.net/tEbkd.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Nordwald",
            "time": "Apr 13, 2017 at 7:23",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Xozu",
                    "text": "<span class=\"comment-copy\">That is a great explanation thank you ! @Nordwald</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  C is a hexadecimal number (12 in decimal).DWORD PTR SS:[EBP+C] should mean memory at stack segment, by address (value of EBP register + 12).\nThis\n  <code>\n   CMP ECX,DWORD PTR SS:[EBP+C]\n  </code>\n  means \"compare the content of ECX register with 32 bit from address [ebp + 12].\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "w s",
            "time": "Apr 13, 2017 at 7:00",
            "is_accepted": false,
            "comments": []
        }
    ]
}