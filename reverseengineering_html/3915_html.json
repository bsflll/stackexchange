{
    "title": "How does Ollydbg obtain the memory map (alt+m)? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/3915/how-does-ollydbg-obtain-the-memory-map-altm",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed\n        </b>\n        . This question needs\n        <a href=\"/help/closed-questions\">\n         details or clarity\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       <b>\n        Want to improve this question?\n       </b>\n       Add details and clarify the problem by\n       <a href=\"/posts/3915/edit\">\n        editing this post\n       </a>\n       .\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2014-03-31 15:43:17Z\">\n        11 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/3915/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  I've been looking for any Windows functions to view or dump memory, or the process to do this manually. I can not find info on this anywhere online.\n </p>\n <p>\n  How would I get a dump of a process's memory like the one in Olly's memory window?\n </p>\n <p>\n  <strong>\n   Edit for clarification:\n  </strong>\n </p>\n <p>\n  I wanted to be able to retrieve an address's base page address. The memory map was the best relation I had to this, as it gives page info such as size, starting address, permissions, etc.\n  <code>\n   VirtualQueryEx()\n  </code>\n  solved the problem.\n </p>\n <p>\n  I ended up iterating through the pages until I found one in which my target address fell.\n </p>\n <p>\n  I tend to ask for what I think would be the solution rather than laying out my problem and taking suggestions.\n </p>\n <p>\n  Thank you all for the help.\n </p>\n <pre><code>// Iterate through pages\nfor(base = NULL; \n    WINDOWS::VirtualQuery(base, info, sizeof(*info)) == sizeof(*info); \n    base += info->RegionSize) {\n\n    if(p > base && p < base + info->RegionSize) {\n        found = true;\n        break;\n    }\n}\n</code></pre>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 2,
    "views": "2k",
    "tags": [
        "windows",
        "memory",
        "dumping"
    ],
    "user": "douggard",
    "time": "11 years ago",
    "comments": [
        {
            "user": "osvein",
            "text": "<html><body><span class=\"comment-copy\">\n \"I tend to ask for what I think would be the solution rather than laying out my problem and taking suggestions\".\n <a href=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">\n  The XY problem\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/aa366907%28v=vs.85%29.aspx\">\n   <code>\n    VirtualQueryEx()\n   </code>\n  </a>\n  can be used to scan through the user-mode address space of a process to enumerate each memory allocation, and PE headers of images in memory can be parsed to determine which memory blocks are associated with which PE sections. PE headers for DLLs also contain the DLLs' names.\n </p>\n</div>\n</body></html>",
            "votes": "7",
            "user": "Jason Geffner",
            "time": "Mar 19, 2014 at 18:24",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  To dump memory to a file, see the\n  <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ee416349%28v=vs.85%29.aspx\" rel=\"nofollow\">\n   DbgHelp MiniDumpWriteDump\n  </a>\n  function. You'll get a snapshot of the memory as a dump file (.DMP) which you can then analyze with various tools or by yourself using the\n  <a href=\"http://msdn.microsoft.com/en-us/library/windows/hardware/ff561475%28v=vs.85%29.aspx\" rel=\"nofollow\">\n   DbgEng debugging engine\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Thomas Weller",
            "time": "Mar 19, 2014 at 19:49",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Thomas Weller",
                    "text": "<span class=\"comment-copy\">If the downvoter could explain his vote I could learn not posting bad answers in the future. Thanks.</span>",
                    "time": null
                },
                {
                    "user": "Jonathon Reinhart",
                    "text": "<span class=\"comment-copy\">(Wasn't me) The OP's question was somewhat unclear; his title asked specifically about the memory map, but then he went on to ask generic questions about how to \"view or dump memory\". I'd say your answer addresses the latter part, but the <i>real</i> question was about the memory <i>map</i>, which Jason's answer would address.  +1 for providing another approach.</span>",
                    "time": null
                }
            ]
        }
    ]
}