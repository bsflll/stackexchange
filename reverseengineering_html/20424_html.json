{
    "title": "Calculate LEA operand",
    "link": "https://reverseengineering.stackexchange.com/questions/20424/calculate-lea-operand",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have those opcodes on 64 bits:\n </p>\n <pre><code>48 8D 35 45 CE FF FF >>> lea rsi, [rip - 0x31bb].\n</code></pre>\n <p>\n  How can I get the 0x31bb value from those opcodes and how can I know if I have a\n  <code>\n   +\n  </code>\n  sign or a\n  <code>\n   -\n  </code>\n  sign beetween operands (\n  <code>\n   rip - 0x31bb\n  </code>\n  or\n  <code>\n   rip + 0x31bb\n  </code>\n  ) ?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "384",
    "tags": [
        "ida",
        "assembly",
        "decompilation",
        "patch-reversing",
        "x86-64"
    ],
    "user": "Maco",
    "time": "Jan 20, 2019 at 14:15",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can get that value from the last 4 bytes of the opcode.\n </p>\n <pre><code>45 CE FF FF\n</code></pre>\n <p>\n  You need to reverse the order of bytes and the the value is written as\n  <a href=\"https://en.wikipedia.org/wiki/Two%27s_complement\" rel=\"nofollow noreferrer\">\n   2's complement\n  </a>\n  . Since the highest bit is 1 it will be negative.\n </p>\n <pre><code>(0xFFFFCE45) in 2's = -0x31BB\n</code></pre>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Paweł Łukasik",
            "time": "Jan 20, 2019 at 14:15",
            "is_accepted": true,
            "comments": []
        }
    ]
}