{
    "title": "sidt, sldt, sgdt, str anti-vm techniques does not work anymore on VMWare 12?",
    "link": "https://reverseengineering.stackexchange.com/questions/18555/sidt-sldt-sgdt-str-anti-vm-techniques-does-not-work-anymore-on-vmware-12",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  They are all privileged(??) x86 instructions.\n </p>\n <ul>\n  <li>\n   <code>\n    sidt\n   </code>\n   : Stores the Interrupt Descriptor Table Register (IDTR) content. (Red pill)\n  </li>\n  <li>\n   <code>\n    sldt\n   </code>\n   : Stores the segment selector from the Local Descriptor Table Register\n  </li>\n  <li>\n   <code>\n    sgdt\n   </code>\n   : Stores the Global Descriptor Table Register (GDTR) content.\n  </li>\n  <li>\n   <code>\n    str\n   </code>\n   : Stores the segment selector from the Task Register (TR).\n  </li>\n </ul>\n <p>\n  Their values are supposed to be different on VM compared to host.\nI've already run my tests and these techniques do not seem to work on a VMware Workstation 12.\n </p>\n <p>\n  All I'm asking is if someone else has encountered the same behavior.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "901",
    "tags": [
        "x86"
    ],
    "user": "n1h1l",
    "time": "Jun 24, 2018 at 19:57",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<html><body><span class=\"comment-copy\">\n can you explain a bit more about the topic?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Uhm, why not actually\n <i>\n  try\n </i>\n it out? @PawełŁukasik the inquirer is referring to\n <a href=\"https://web.archive.org/web/20070911024318/http://invisiblethings.org/papers/redpill.html\" rel=\"nofollow noreferrer\">\n  Redpill\n </a>\n as devised by Rutkowska in or around 2007 to\n <b>\n  detect\n </b>\n (not counter!) the presence of a VMM. Oh and aside from that it's not exactly about reverse engineering.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Paweł Łukasik",
            "text": "<html><body><span class=\"comment-copy\">\n @0xC0000022L thx. I've just wanted to author to update the post so it will be better quality but since it's not RE then it doesn't matter.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "n1h1l",
            "text": "<html><body><span class=\"comment-copy\">\n @0xC0000022L Ok, hypothetically, you try to reverse a malware, and does not seem to run inside a vm, what do you do to neutrilise the anti-vm functionality??? black magic?? This have something to do with RE, right?except if you are a hardore elitist reverse engineer...\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n @n1h1l fair point. Still not exactly about RCE, but should be on topic. With four reopen votes, I'll cast the fifth so you can get an answer. Sorry, was offline for a few days, but there was actually just one vote missing now from high-rep users to reopen your question (without a moderator)!\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  These are not privileged instructions.  What has changed is the manner in which the VM is running.  Now with hypervisors, those values could well be the same inside and outside of the VM.  They were never particularly reliable methods to detect VMs anyway.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "peter ferrie",
            "time": "Aug 27, 2018 at 21:11",
            "is_accepted": false,
            "comments": []
        }
    ]
}