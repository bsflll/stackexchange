{
    "title": "Can't find native library in lldb",
    "link": "https://reverseengineering.stackexchange.com/questions/32686/cant-find-native-library-in-lldb",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  ・I am analyzing an Android app that was in the CTF.\n(\n  <a href=\"https://github.com/TRkizaki/cryptoverse2023/tree/main/reverse_java_not_interesting\" rel=\"nofollow noreferrer\">\n   https://github.com/TRkizaki/cryptoverse2023/tree/main/reverse_java_not_interesting\n  </a>\n  )\n </p>\n <p>\n  ・In this app, the input string is checked by the checkvaild function in the native library (libhello-jni.so).\n　Then, if the input string is correct, a flag is displayed.\n・Since debuggable is set to True in this app, I would like to use 「lldb」 to do the dynamic analysis.\nHowever, libhello-jni.so is not displayed when I use the \"image list\" option after attaching with lldb.\n </p>\n <p>\n  Why is this?\n </p>\n <p>\n  ・The host environment is Windows and the application is installed on a physical device.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "99",
    "tags": [
        "lldb"
    ],
    "user": "momonga",
    "time": "Feb 1, 2024 at 6:47",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Possibly the library is loaded on-demand, when the JNI function is invoked. Maybe try putting breakpoints on\n  <code>\n   dlopen\n  </code>\n  /\n  <code>\n   dlsym\n  </code>\n  and see if it's present then.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Igor Skochinsky",
            "time": "Feb 5, 2024 at 20:59",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Looks like your APK is compiled with android:extractNativeLibs=false (look at the manifest).\n </p>\n <p>\n  My experience is that this flag will stop the libraries from loading in the usual way you'd expect from shared libraries and you will not be able to find them in the process memory map or identify their symbols as you would normally.\n </p>\n <p>\n  You can try to modify the manifest, recompile the apk (you will likely need to align it and sign it) and then run it / attach to it with your debugger and see if it solved your problem.\n </p>\n <p>\n  <a href=\"https://developer.android.com/reference/android/R.attr.html#extractNativeLibs\" rel=\"nofollow noreferrer\">\n   https://developer.android.com/reference/android/R.attr.html#extractNativeLibs\n  </a>\n  <a href=\"https://developer.android.com/guide/topics/manifest/application-element#extractNativeLibs\" rel=\"nofollow noreferrer\">\n   https://developer.android.com/guide/topics/manifest/application-element#extractNativeLibs\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "ereisr",
            "time": "Jul 13, 2024 at 11:13",
            "is_accepted": false,
            "comments": []
        }
    ]
}