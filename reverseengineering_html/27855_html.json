{
    "title": "Reversing bit rotations",
    "link": "https://reverseengineering.stackexchange.com/questions/27855/reversing-bit-rotations",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  so I have a question regarding the assembly instructions\n  <code>\n   ror\n  </code>\n  and\n  <code>\n   rol\n  </code>\n  :\n  \n\n  Is it possible to properly reverse them?\nSo assuming I have something like\n </p>\n <pre><code>ROR        EDX, 0x4\n</code></pre>\n <p>\n  and know the contents of\n  <code>\n   EDX\n  </code>\n  after this instruction, is it mathematically possible to  find out the initial value of\n  <code>\n   EDX\n  </code>\n  ? If so, can anyone explain to me how it's done?\n  \n\n  Sadly I couldn't find any good answer to this so far, so I would be really happy if someone could help me with this :)\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "464",
    "tags": [
        "assembly"
    ],
    "user": "MrFluffy",
    "time": "Jun 17, 2021 at 18:48",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  For\n  <code>\n   ror\n  </code>\n  /\n  <code>\n   rol\n  </code>\n  you just use the reverse operation -\n  <code>\n   rol\n  </code>\n  /\n  <code>\n   ror\n  </code>\n  as bits are rotated - nothing is lost.\n </p>\n <p>\n  <code>\n   0xdeadbeef rol 5\n  </code>\n  ->\n  <code>\n   0xd5b7ddfb\n  </code>\n </p>\n <p>\n  <code>\n   0xd5b7ddfb ror 5\n  </code>\n  ->\n  <code>\n   0xdeadbeef\n  </code>\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Paweł Łukasik",
            "time": "Jun 17, 2021 at 19:53",
            "is_accepted": false,
            "comments": []
        }
    ]
}