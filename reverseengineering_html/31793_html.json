{
    "title": "Ghidra 16-Bit DOS Strings",
    "link": "https://reverseengineering.stackexchange.com/questions/31793/ghidra-16-bit-dos-strings",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am attempting to reverse-engineer a 16-Bit DOS MZ executable.\n </p>\n <p>\n  The file contains many different strings, most of which are printed out to the console at various points.\n </p>\n <p>\n  IDA seems to be able to pick up the locations from which the strings are utilised, for example:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/sMBVr.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"IDA String Information\" src=\"https://i.sstatic.net/sMBVr.png\"/>\n  </a>\n </p>\n <p>\n  Clicking on this reference shows the code that utilises the string, which I assume passes it into the function (sub 1462) which prints it out to the screen.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/49bhe.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Code that utilises the above string\" src=\"https://i.sstatic.net/49bhe.png\"/>\n  </a>\n </p>\n <p>\n  When I attempt to analyse the same code in Ghidra, it is unable to pickup the same strings. I have manually gone to the location shown in IDA, and setup the \"print\" (sub 1462) function in this way:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/7MPDq.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"PrintString Function Definition\" src=\"https://i.sstatic.net/7MPDq.png\"/>\n  </a>\n </p>\n <p>\n  So I would expect the decompiler to show the string, however it doesn't seem to pick it up:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/J2UPA.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Print String Function in Ghidra Decompiler\" src=\"https://i.sstatic.net/J2UPA.png\"/>\n  </a>\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/i5m40.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Print String Function in Ghidra Decompiler\" src=\"https://i.sstatic.net/i5m40.png\"/>\n  </a>\n </p>\n <p>\n  I'm assuming that this has something to do with the stack pointer being set (or assumed to be) an incorrect value? However, Ghidra seems to locate this string at a different location to IDA:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/WXiy0.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"IDA String Location\" src=\"https://i.sstatic.net/WXiy0.png\"/>\n  </a>\n </p>\n <p>\n  Thanks,\nJames.\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 1,
    "views": "746",
    "tags": [
        "ghidra",
        "strings",
        "dos",
        "dos-exe"
    ],
    "user": "jttri777",
    "time": "Apr 17, 2023 at 0:05",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n The address in concat 541 is different from string address 501. Also check segment mapping may be you need to manually adjust bounds\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "jttri777",
            "text": "<html><body><span class=\"comment-copy\">\n @blabb Yes, that's what confused me. The assembly references the address used by IDA for that string, however Ghidra seems to have mapped the strings to a slightly different location.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "jttri777",
            "text": "<html><body><span class=\"comment-copy\">\n @blabb, that was it! Ghidra seems to have got somewhat confused when analysing the strings. I've posted an answer explaining. Thanks for your help.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I managed to solve this one myself thanks to @Blabb's comment (thanks again!).\n </p>\n <p>\n  The first identifiable string was\n  <code>\n   MS Run-Time Library - Copyright (c) 1992, Microsoft Corp\n  </code>\n  .\n </p>\n <p>\n  For some reason, this managed to throw Ghidra off, and it added just this string to a memory segment of its own. This, therefore, offset all of the other strings as they were pushed down into their own memory segment, causing the incorrect offsets.\n </p>\n <p>\n  To solve this, I used Ghidra's Memory Manager to remove the two memory segments, and then create a new one with all the strings combined.\n </p>\n <p>\n  Before:\n  <a href=\"https://i.sstatic.net/z51td.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Ghidra Memory Map before changes\" src=\"https://i.sstatic.net/z51td.png\"/>\n  </a>\n  After:\n  <a href=\"https://i.sstatic.net/V5mgX.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Ghidra Memory Map after changes\" src=\"https://i.sstatic.net/V5mgX.png\"/>\n  </a>\n </p>\n <p>\n  As a result of these changes, and with the DS register set to the correct offset, the string now shows in the decompiler window.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/heyE8.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Strings showing in the Ghidra decompilation window\" src=\"https://i.sstatic.net/heyE8.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "jttri777",
            "time": "Apr 18, 2023 at 0:23",
            "is_accepted": true,
            "comments": []
        }
    ]
}