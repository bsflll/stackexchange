{
    "title": "IDA Decompiler generates wrong output on array of structures!",
    "link": "https://reverseengineering.stackexchange.com/questions/31795/ida-decompiler-generates-wrong-output-on-array-of-structures",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  There is a structure with size of 16-Bytes, and an array of it is defined.\nThe disassembly code for navigation through the array is:\n </p>\n <pre><code>MOV     i, i,LSL#4\nLDR     R4, =arr_of_struct \nADD     i, i, R4\nLDR     var, [i] \n</code></pre>\n <p>\n  But the decompiled code is:\n </p>\n <pre><code>var = arr_of_struct[4 * i];\n</code></pre>\n <p>\n  Which is wrong and should be:\n </p>\n <pre><code>var = arr_of_struct[4 * i].field_0;\n</code></pre>\n <p>\n  I think the problem is in first line of disassembly\n  <code>\n   MOV   i, i,LSL#4\n  </code>\n  . Obviously it is multiplying the array index by 16 which is the size of my struct. But IDA translated this line to\n  <code>\n   [4 * i]\n  </code>\n  !!!\n </p>\n <p>\n  So the first question is what's the reason of this behavior in IDA?\nAnd the second is how can I fix this?\n </p>\n <p>\n  EDIT:\nMore information:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/ZvbuD.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/ZvbuD.jpg\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "245",
    "tags": [
        "decompilation",
        "hexrays",
        "struct",
        "array"
    ],
    "user": "E.A",
    "time": "Apr 19, 2023 at 10:25",
    "comments": [
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n Which version of IDA and decompiler do you use?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "E.A",
            "text": "<html><body><span class=\"comment-copy\">\n IDA version 7.6 SP1, Decompiler ver 7.6.0.210427\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Rolf Rolles",
            "text": "<html><body><span class=\"comment-copy\">\n You'll need to show more of the decompiler output. One line is not sufficient.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I found the solution for this issue, and post it here hope help someone someday...\n </p>\n <p>\n  I undefined the \"arr_of_struct\" (Ctrl+U), undefined both the array and also the structure variable:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/cD6cv.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter description here\" src=\"https://i.sstatic.net/cD6cv.jpg\"/>\n  </a>\n  <strong>\n   ====>\n  </strong>\n  <a href=\"https://i.sstatic.net/hmaq8.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/hmaq8.jpg\"/>\n  </a>\n </p>\n <p>\n  The output changed to deal with the undefined variable:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/7ZkXx.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/7ZkXx.jpg\"/>\n  </a>\n </p>\n <p>\n  Declare struct variable again (Alt+Q), and define its location as an array (Pressing *), and the output changed to the right and expected shape:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/ksHRL.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/ksHRL.jpg\"/>\n  </a>\n </p>\n <p>\n  Now I know how to fix it, but the first question is still remains:\n </p>\n <p>\n  <strong>\n   What's the reason of this behavior in IDA? Is there a sequence needed to consider while defining array of structures?\n  </strong>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "E.A",
            "time": "Apr 19, 2023 at 12:13",
            "is_accepted": true,
            "comments": []
        }
    ]
}