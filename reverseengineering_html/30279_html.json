{
    "title": "Searching for strings only partially works in x64Dbg",
    "link": "https://reverseengineering.stackexchange.com/questions/30279/searching-for-strings-only-partially-works-in-x64dbg",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Please note that I am new to x64dbg.\n </p>\n <p>\n  As you can be seen in the picture below, the error message has the string\n </p>\n <pre><code>[ebp+8]:L\"The information you have entered is invalid!\n...\"\n</code></pre>\n <p>\n  <a href=\"https://i.sstatic.net/My60T.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"address with string\" src=\"https://i.sstatic.net/My60T.png\"/>\n  </a>\n </p>\n <p>\n  However, when I do\nSearch For > All Modules > String References, it does not pop up:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/0HSIy.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"no results found\" src=\"https://i.sstatic.net/0HSIy.png\"/>\n  </a>\n </p>\n <p>\n  I am wondering why this searching only works for some strings, not all strings.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "498",
    "tags": [
        "x64dbg"
    ],
    "user": "Mahmoud Maarouf",
    "time": "Apr 18, 2022 at 5:29",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Just because a particular string is presented in your process memory during the execution of your program, it doesn't mean that it was prepared in advance (on disk) before you launch a program.\n </p>\n <p>\n  There are many other possibilities, how your program may load a \"non-existing\" string, for example:\n </p>\n <ul>\n  <li>\n   The string is combined (e.g. concatenated) from others,\n  </li>\n  <li>\n   the string is entered by user,\n  </li>\n  <li>\n   the string is created from its encrypted form,\n  </li>\n  <li>\n   the string is from dynamically loaded DLL,\n  </li>\n  <li>\n   the string is loaded from resources,\n  </li>\n  <li>\n   the string is read from an external file,\n  </li>\n  <li>\n   the string is loaded from an environmental variable,\n  </li>\n  <li>\n   ... and so on.\n  </li>\n </ul>\n <p>\n  Searching for a particular string is one of the simplest method in reverse engineering, but in the same time one of the\n  <em>\n   least reliable method\n  </em>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "MarianD",
            "time": "Apr 18, 2022 at 6:01",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Mahmoud Maarouf",
                    "text": "<span class=\"comment-copy\">Great, thank you. How may I search a dynamically loaded string? As shown in my case above.</span>",
                    "time": null
                },
                {
                    "user": "MarianD",
                    "text": "<span class=\"comment-copy\">@MahmoudMaarouf, searching for dynamically loaded strings has no meaning, you will have no success with this method.</span>",
                    "time": null
                }
            ]
        }
    ]
}