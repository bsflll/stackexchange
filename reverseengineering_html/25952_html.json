{
    "title": "String as constant , even not visible in disassembler",
    "link": "https://reverseengineering.stackexchange.com/questions/25952/string-as-constant-even-not-visible-in-disassembler",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I was reading this\n  <a href=\"https://mushu27.github.io/cracking/software/patching/assembly/reverse/engineer/2018/09/29/patch-winrar.html\" rel=\"nofollow noreferrer\">\n   article\n  </a>\n  Where I saw that while reversing the WinRAR I saw that the x64dbg is not able to search for a string in all modules \"evaluation copy\". but why is that happening. is the binary not containing this string? and then the author has used the Resource Hacker to search for the string. and he gets the string. but how? what is resource doing that the disassembler isn't? And one more question, what is that constant \"\n  <code>\n   873\n  </code>\n  \". why does it has the value of the string?\nPlease if someone knows, tell me.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "203",
    "tags": [
        "windows",
        "binary-analysis",
        "x64dbg",
        "disassemblers"
    ],
    "user": "lucky thandel",
    "time": "Sep 22, 2020 at 12:49",
    "comments": [
        {
            "user": "bart1e",
            "text": "<html><body><span class=\"comment-copy\">\n x64dbg was searching for string references, not for strings. Since strings contained in resources aren’t referenced directly, but by ID, x64dbg doesn’t display them.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "bart1e",
            "text": "<html><body><span class=\"comment-copy\">\n And since strings in STRINGTABLE are accessed by calling LoadString which takes ID as a parameter, this ID (873 in this case) has to be present somewhere in the code.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "lucky thandel",
            "text": "<html><body><span class=\"comment-copy\">\n @bart1e Do you know how the resource hacker is producing that integer in decimal that holds the string?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}