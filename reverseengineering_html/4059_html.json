{
    "title": "IDA PRO Imports Names Lost in a accident, Reanalyze does nothing. How to make unexplored imports?",
    "link": "https://reverseengineering.stackexchange.com/questions/4059/ida-pro-imports-names-lost-in-a-accident-reanalyze-does-nothing-how-to-make-un",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have put alot of work into renaming and fixing lvar types to better understand the code I made a mistake when I was converting some\n  <code>\n   unk_dword\n  </code>\n  to array I missed that it wasn't set to db but rather dd and it overwritten lots of stuff I lost many my own stuff which I know I won't get back but I can live with that, but I can't seem to get the imports to evaluate with the proper names like they were before.\n </p>\n <p>\n  I tried\n  <code>\n   Load->FLIRT signature file\n  </code>\n  with\n  <code>\n   Microsoft VisualC 2-10/net runtime\n  </code>\n  which seems to be right, didn't do anything.\n </p>\n <p>\n  In output Window I'm getting\n </p>\n <p>\n  <code>\n   004DB200: Already data or code (hint: make 'unexplored')\n  </code>\n </p>\n <p>\n  I guess I need to make it unexplored? how would I do that? I tried Undefining the Imports with the\n  <code>\n   U Key\n  </code>\n  it doesn't work.\n </p>\n <p>\n  Here is some screenshots how it looks\n </p>\n <p>\n  Before looked like this\n  \n\n  <img alt=\"before imports\" src=\"https://i.sstatic.net/rUkHC.png\"/>\n  \n\n  After looks like this\n  \n\n  <img alt=\"after imports\" src=\"https://i.sstatic.net/XJOXy.png\"/>\n  \n\n  How it really looks like\n  \n\n  <img alt=\"imports declares\" src=\"https://i.sstatic.net/VHy63.png\"/>\n  \n\n  Here is how the bytes used to look like and how they look now (8 extra bytes)\n  \n\n  <img alt=\"import bytes\" src=\"https://i.sstatic.net/WFrws.png\"/>\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "873",
    "tags": [
        "ida"
    ],
    "user": "SSpoke",
    "time": "Apr 12, 2014 at 10:26",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <strong>\n   This fix doesn't save to database or is overwritten upon loading IDB database it always reverts back to messed up! (I think there is something I missed to change)\n  </strong>\n </p>\n <p>\n  Not the right way to do it.. but I managed to solve this using\n  <code>\n   IDC Scripts\n  </code>\n </p>\n <p>\n  Open a fresh IDA PRO let it analyze then go to\n  <code>\n   File -> Produce File -> Dump Database to IDC File.\n  </code>\n </p>\n <p>\n  Open dumped\n  <code>\n   idc\n  </code>\n  file in notepad and search for the start of Imports comments such as\n  <code>\n   ; Imports from GDI32.dll\n  </code>\n  since thats where the first Import starts.\n </p>\n <p>\n  Now just copy+paste from the\n  <code>\n   idc\n  </code>\n  file all the way to the end of the function before the bracket.\n </p>\n <p>\n  Backup your messed up\n  <code>\n   project.idb\n  </code>\n  file because this may mess up it even more if you are not careful!.\n </p>\n <p>\n  Now go to\n  <code>\n   File->IDC Command...\n  </code>\n  and paste something I posted at the end of this post.\n </p>\n <p>\n  <strong>\n   IDC Command Text box has limitations you can't paste too much so you need to split up by blocks, I advise make sure your block starts with\n   <code>\n    MakeDword\n   </code>\n   don't end with that.\n  </strong>\n </p>\n <p>\n  Here was my first Imports from\n  <code>\n   idc\n  </code>\n  file what it generated below.\n  \n\n  <code>\n   (This will only work for my application only obviously, just showing you what you need to look for.)\n  </code>\n </p>\n <pre><code>auto x;\n#define id x\nMakeArray   (0X4DA0EC,  0XF14);\nExtLinA     (0X4DB200,  0,  \"; \");\nExtLinA     (0X4DB200,  1,  \"; Imports from GDI32.dll\");\nExtLinA     (0X4DB200,  2,  \"; \");\nExtLinA     (0X4DB200,  3,  \"; Section 4. (virtual address 000DB000)\");\nExtLinA     (0X4DB200,  4,  \"; Virtual size                  : 0000090E (   2318.)\");\nExtLinA     (0X4DB200,  5,  \"; Section size in file          : 00000A00 (   2560.)\");\nExtLinA     (0X4DB200,  6,  \"; Offset to raw data for section: 0002FC00\");\nExtLinA     (0X4DB200,  7,  \"; Flags C0000040: Data Readable Writable\");\nExtLinA     (0X4DB200,  8,  \"; Alignment     : default\");\nMakeDword   (x=0X4DB200);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB200,  \"GetObjectA\");\nMakeDword   (x=0X4DB204);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB204,  \"DeleteObject\");\nMakeByte    (0X4DB208);\nMakeArray   (0X4DB208,  0X4);\nExtLinA     (0X4DB20C,  0,  \"; \");\nExtLinA     (0X4DB20C,  1,  \"; Imports from KERNEL32.dll\");\nExtLinA     (0X4DB20C,  2,  \"; \");\nMakeDword   (x=0X4DB20C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB20C,  \"GetModuleFileNameA\");\nMakeDword   (x=0X4DB210);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB210,  \"WritePrivateProfileStringA\");\nMakeDword   (x=0X4DB214);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB214,  \"GetTickCount\");\nMakeDword   (x=0X4DB218);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB218,  \"CloseHandle\");\nMakeDword   (x=0X4DB21C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB21C,  \"GetFileTime\");\nMakeDword   (x=0X4DB220);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB220,  \"CreateFileA\");\nMakeDword   (x=0X4DB224);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB224,  \"GetPrivateProfileIntA\");\nMakeDword   (x=0X4DB228);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB228,  \"GetPrivateProfileStringA\");\nMakeDword   (x=0X4DB22C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB22C,  \"VirtualAlloc\");\nMakeDword   (x=0X4DB230);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB230,  \"VirtualFree\");\nMakeDword   (x=0X4DB234);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB234,  \"TerminateProcess\");\nMakeDword   (x=0X4DB238);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB238,  \"GetExitCodeProcess\");\nMakeDword   (x=0X4DB23C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB23C,  \"CreateProcessA\");\nMakeDword   (x=0X4DB240);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB240,  \"GetCommandLineA\");\nMakeDword   (x=0X4DB244);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB244,  \"SetConsoleTitleA\");\nMakeDword   (x=0X4DB248);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB248,  \"Sleep\");\nMakeDword   (x=0X4DB24C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB24C,  \"SetEndOfFile\");\nMakeDword   (x=0X4DB250);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB250,  \"SetStdHandle\");\nMakeDword   (x=0X4DB254);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB254,  \"GetFileType\");\nMakeDword   (x=0X4DB258);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB258,  \"ExitProcess\");\nMakeDword   (x=0X4DB25C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB25C,  \"GetNumberOfConsoleInputEvents\");\nMakeDword   (x=0X4DB260);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB260,  \"PeekConsoleInputA\");\nMakeDword   (x=0X4DB264);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB264,  \"GetConsoleMode\");\nMakeDword   (x=0X4DB268);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB268,  \"SetConsoleMode\");\nMakeDword   (x=0X4DB26C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB26C,  \"ReadConsoleInputA\");\nMakeDword   (x=0X4DB270);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB270,  \"SetEnvironmentVariableA\");\nMakeDword   (x=0X4DB274);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB274,  \"CompareStringW\");\nMakeDword   (x=0X4DB278);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB278,  \"CompareStringA\");\nMakeDword   (x=0X4DB27C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB27C,  \"LoadLibraryA\");\nMakeDword   (x=0X4DB280);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB280,  \"WaitForSingleObject\");\nMakeDword   (x=0X4DB284);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB284,  \"GetStringTypeW\");\nMakeDword   (x=0X4DB288);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB288,  \"GetStringTypeA\");\nMakeDword   (x=0X4DB28C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB28C,  \"IsBadCodePtr\");\nMakeDword   (x=0X4DB290);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB290,  \"IsBadWritePtr\");\nMakeDword   (x=0X4DB294);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB294,  \"IsBadReadPtr\");\nMakeDword   (x=0X4DB298);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB298,  \"GetOEMCP\");\nMakeDword   (x=0X4DB29C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB29C,  \"GetACP\");\nMakeDword   (x=0X4DB2A0);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2A0,  \"GetCPInfo\");\nMakeDword   (x=0X4DB2A4);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2A4,  \"GetEnvironmentStringsW\");\nMakeDword   (x=0X4DB2A8);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2A8,  \"GetTimeZoneInformation\");\nMakeDword   (x=0X4DB2AC);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2AC,  \"GetSystemTime\");\nMakeDword   (x=0X4DB2B0);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2B0,  \"GetLocalTime\");\nMakeDword   (x=0X4DB2B4);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2B4,  \"__imp_RtlUnwind\");\nMakeDword   (x=0X4DB2B8);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2B8,  \"GetLastError\");\nMakeDword   (x=0X4DB2BC);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2BC,  \"GetEnvironmentStrings\");\nMakeDword   (x=0X4DB2C0);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2C0,  \"FreeEnvironmentStringsW\");\nMakeDword   (x=0X4DB2C4);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2C4,  \"GetCurrentProcess\");\nMakeDword   (x=0X4DB2C8);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2C8,  \"HeapAlloc\");\nMakeDword   (x=0X4DB2CC);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2CC,  \"HeapReAlloc\");\nMakeDword   (x=0X4DB2D0);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2D0,  \"HeapFree\");\nMakeDword   (x=0X4DB2D4);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2D4,  \"RaiseException\");\nMakeDword   (x=0X4DB2D8);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2D8,  \"GetVersion\");\nMakeDword   (x=0X4DB2DC);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2DC,  \"ReadFile\");\nMakeDword   (x=0X4DB2E0);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2E0,  \"WriteFile\");\nMakeDword   (x=0X4DB2E4);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2E4,  \"SetFilePointer\");\nMakeDword   (x=0X4DB2E8);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2E8,  \"HeapDestroy\");\nMakeDword   (x=0X4DB2EC);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2EC,  \"LCMapStringW\");\nMakeDword   (x=0X4DB2F0);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2F0,  \"SetHandleCount\");\nMakeDword   (x=0X4DB2F4);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2F4,  \"GetStdHandle\");\nMakeDword   (x=0X4DB2F8);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2F8,  \"GetStartupInfoA\");\nMakeDword   (x=0X4DB2FC);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB2FC,  \"MultiByteToWideChar\");\nMakeDword   (x=0X4DB300);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB300,  \"WideCharToMultiByte\");\nMakeDword   (x=0X4DB304);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB304,  \"LCMapStringA\");\nMakeDword   (x=0X4DB308);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB308,  \"UnhandledExceptionFilter\");\nMakeDword   (x=0X4DB30C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB30C,  \"FreeEnvironmentStringsA\");\nMakeDword   (x=0X4DB310);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB310,  \"HeapCreate\");\nMakeDword   (x=0X4DB314);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB314,  \"SetUnhandledExceptionFilter\");\nMakeDword   (x=0X4DB318);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB318,  \"GetFileAttributesA\");\nMakeDword   (x=0X4DB31C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB31C,  \"FlushFileBuffers\");\nMakeDword   (x=0X4DB320);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB320,  \"GetProcAddress\");\nMakeDword   (x=0X4DB324);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB324,  \"GetModuleHandleA\");\nMakeByte    (0X4DB328);\nMakeArray   (0X4DB328,  0X4);\nExtLinA     (0X4DB32C,  0,  \"; \");\nExtLinA     (0X4DB32C,  1,  \"; Imports from USER32.dll\");\nExtLinA     (0X4DB32C,  2,  \"; \");\nMakeDword   (x=0X4DB32C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB32C,  \"MessageBoxA\");\nMakeDword   (x=0X4DB330);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB330,  \"LoadImageA\");\nMakeByte    (0X4DB334);\nMakeArray   (0X4DB334,  0X4);\nExtLinA     (0X4DB338,  0,  \"; \");\nExtLinA     (0X4DB338,  1,  \"; Imports from WSOCK32.dll\");\nExtLinA     (0X4DB338,  2,  \"; \");\nMakeDword   (x=0X4DB338);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB338,  \"__imp_ioctlsocket\");\nMakeDword   (x=0X4DB33C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB33C,  \"__imp_inet_ntoa\");\nMakeDword   (x=0X4DB340);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB340,  \"__imp_WSACleanup\");\nMakeDword   (x=0X4DB344);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB344,  \"__imp_WSAStartup\");\nMakeDword   (x=0X4DB348);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB348,  \"__imp_recvfrom\");\nMakeDword   (x=0X4DB34C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB34C,  \"__imp_sendto\");\nMakeDword   (x=0X4DB350);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB350,  \"__imp_recv\");\nMakeDword   (x=0X4DB354);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB354,  \"__imp_closesocket\");\nMakeDword   (x=0X4DB358);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB358,  \"__imp_socket\");\nMakeDword   (x=0X4DB35C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB35C,  \"__imp_inet_addr\");\nMakeDword   (x=0X4DB360);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB360,  \"__imp_setsockopt\");\nMakeDword   (x=0X4DB364);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB364,  \"__imp_htons\");\nMakeDword   (x=0X4DB368);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB368,  \"__imp_htonl\");\nMakeDword   (x=0X4DB36C);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB36C,  \"__imp_bind\");\nMakeDword   (x=0X4DB370);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB370,  \"__imp_gethostbyname\");\nMakeDword   (x=0X4DB374);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB374,  \"__imp_connect\");\nMakeDword   (x=0X4DB378);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB378,  \"__imp_send\");\nMakeByte    (0X4DB37C);\nMakeArray   (0X4DB37C,  0X4);\nExtLinA     (0X4DB380,  0,  \"; \");\nExtLinA     (0X4DB380,  1,  \"; Imports from zlib.dll\");\nExtLinA     (0X4DB380,  2,  \"; \");\nMakeDword   (x=0X4DB380);\nOpOff       (x, 0,  0);\nOpOff       (x, 128,    0);\nMakeName    (0X4DB380,  \"__imp_compress\");\nMakeByte    (0X4DB384);\nMakeArray   (0X4DB384,  0X4);\n</code></pre>\n</div>\n</body></html>",
            "votes": "3",
            "user": "SSpoke",
            "time": "Apr 13, 2014 at 2:29",
            "is_accepted": true,
            "comments": []
        }
    ]
}