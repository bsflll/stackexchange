{
    "title": "U-boot base address on Ghidra",
    "link": "https://reverseengineering.stackexchange.com/questions/31218/u-boot-base-address-on-ghidra",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to do some REing on a vendored U-Boot bootloader image.\n </p>\n <p>\n  For context, the U-Boot image was extracted from the full firmware image with:\n </p>\n <pre><code>dd if=<firmware>.img of=uboot_sdcard.bin bs=1024 skip=8 count=512 seek=0\n</code></pre>\n <p>\n  Then I ran\n  <code>\n   binwalk\n  </code>\n  on the image:\n </p>\n <pre><code>$ binwalk uboot_sdcard.bin \n\nDECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n16908         0x420C          CRC32 polynomial table, little endian\n32768         0x8000          uImage header, header size: 64 bytes, header CRC: 0x1701FCC6, created: 2022-11-10 01:20:36, image size: 407733 bytes, Data Address: 0x4A000000, Entry Point: 0x0, data CRC: 0x68F80364, OS: Firmware, CPU: ARM, image type: Firmware Image, compression type: none, image name: \"U-Boot 2017.11 for sunxi board\"\n100384        0x18820         uImage header, header size: 64 bytes, header CRC: 0x207047, created: 1994-05-30 14:08:13, image size: 71753208 bytes, Data Address: 0x28809B46, Entry Point: 0xDDF82CA0, data CRC: 0x230D46, image name: \"\"\n259212        0x3F48C         CRC32 polynomial table, little endian\n269762        0x41DC2         Android bootimg, kernel size: 1684947200 bytes, kernel addr: 0x64696F72, ramdisk size: 1763734311 bytes, ramdisk addr: 0x6567616D, product name: \"ddr 0x%08x size %u KiB\"\n417648        0x65F70         Flattened device tree, size: 22917 bytes, version: 17\n</code></pre>\n <p>\n  My question now is, when I load this\n  <code>\n   uboot_sdcard.bin\n  </code>\n  on Ghidra, what should be the Base address? I tried the typical\n  <code>\n   0x4A000000\n  </code>\n  but some disassembly ends up with lots of warnings about not being able to resolve switch branches.\n </p>\n <p>\n  I've had similar issues when dealing with raw binaries, and it's almost always down to sectioning the file right, or setting the base address right.\n </p>\n <p>\n  So, I think I'm missing something here. Any pointers?\n </p>\n <p>\n  The device uses an Allwinner SoC, which has an ARM V7 processor.\n </p>\n <p>\n  Thanks\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "995",
    "tags": [
        "binary-analysis",
        "ghidra",
        "arm"
    ],
    "user": "Rui Oliveira",
    "time": "Dec 3, 2022 at 12:07",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  So, a friend figured it out for me.\n </p>\n <p>\n  So, according to the\n  <code>\n   binwalk\n  </code>\n  in the OP, one can see that U-Boot is at offset\n  <code>\n   0x8000\n  </code>\n  on the file. But this contains a header, pushing actual U-Boot to\n  <code>\n   0x8040\n  </code>\n  .\n </p>\n <p>\n  Now, one only needs to load this file on Ghidra with offset\n  <code>\n   0x8040\n  </code>\n  and with the usual base address of\n  <code>\n   0x4A00'0000\n  </code>\n  :\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/5PVkI.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/5PVkI.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Rui Oliveira",
            "time": "Dec 3, 2022 at 15:32",
            "is_accepted": true,
            "comments": []
        }
    ]
}