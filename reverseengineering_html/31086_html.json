{
    "title": "Reversing Tenda N300 Router Firmware with Ghidra",
    "link": "https://reverseengineering.stackexchange.com/questions/31086/reversing-tenda-n300-router-firmware-with-ghidra",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Hey I got interested in SRE so I picked up Binwalk and Ghidra though I have some issues. I was reversing a simple bin for\n  <a href=\"https://www.tendacn.com/download/detail-3355.html\" rel=\"nofollow noreferrer\">\n   Tenda router\n  </a>\n  I did some information gathering:\n </p>\n <ul>\n  <li>\n   <a href=\"https://routerchart.com/tenda/tenda-f6-v4-f6v4-491\" rel=\"nofollow noreferrer\">\n    Tenda Router & bin file Info\n   </a>\n  </li>\n  <li>\n   Processor & Part No =>\n   <a href=\"http://www.datasheetcafe.com/qca9531-datasheet-qualcomm/\" rel=\"nofollow noreferrer\">\n    OCA9535 0VV\n   </a>\n   <a href=\"https://en.wikipedia.org/wiki/MIPS_architecture\" rel=\"nofollow noreferrer\">\n    MIPS32 24kc ARCH\n   </a>\n   ,\n   <a href=\"https://www.qualcomm.com/products/technology/wi-fi/qca9531\" rel=\"nofollow noreferrer\">\n    Manufacturer & chip info\n   </a>\n  </li>\n </ul>\n <p>\n  chip is\n  <a href=\"https://github.com/pepe2k/u-boot_mod/blob/master/u-boot/include/devices.h\" rel=\"nofollow noreferrer\">\n   qca9535\n  </a>\n  , I suspect in ghidra I should use MIPS32 with microchip as\n  <strong>\n   language\n  </strong>\n  , and under\n  <strong>\n   options\n  </strong>\n  , load base address of approximately\n  <strong>\n   0x80000000\n  </strong>\n  . However, I can't seem to effectively break down the memory blocks,length & offsets. I was looking for the MIPS32 24kc code so that I can trace the memory headers and get their addresses. Could anyone please verify my steps and advice wisely on how to have all memory mapped, thus removing red undefined addresses and strings to be mapped well to their effective address.\n </p>\n <p>\n  See attached image for more info:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/MyXKT.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/MyXKT.jpg\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 1,
    "views": "475",
    "tags": [
        "ghidra"
    ],
    "user": "K3K",
    "time": "Nov 5, 2022 at 0:06",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  So anyway after spending some time on this I grabbed the documents on the instruction set of\n  <a href=\"https://s3-eu-west-1.amazonaws.com/downloads-mips/documents/MD00086-2B-MIPS32BIS-AFP-6.06.pdf\" rel=\"nofollow noreferrer\">\n   Mips32\n  </a>\n  and\n  <a href=\"https://s3-eu-west-1.amazonaws.com/downloads-mips/documents/MD00355-2B-24KPRG-PRG-04.63.pdf\" rel=\"nofollow noreferrer\">\n   Mips32 24Kc\n  </a>\n  and read up on memory mapping.\n </p>\n <p>\n  So I went back to ghildra and mapped the Flash memory, RAM=> (volatile) and Peripheral memory and eventually the data was traced and referenced. So bottom line is when you identify a processor and its architeture. Find the technical documentation on instruction set, then use it to map memory on Ghidra. Also you can use the python script shell in Ghildra to map/view/modify\n  <a href=\"https://ghidra.re/ghidra_docs/api/ghidra/program/model/listing/Program.html#getMemory()\" rel=\"nofollow noreferrer\">\n   current program memory\n  </a>\n  .\n </p>\n <p>\n  In addition you might need\n  <a href=\"https://www.keil.com/pack/doc/CMSIS/SVD/html/svd_Format_pg.html\" rel=\"nofollow noreferrer\">\n   SVD file\n  </a>\n  =>\n  <a href=\"https://github.com/leveldown-security/SVD-Loader-Ghidra\" rel=\"nofollow noreferrer\">\n   tool to load SVD\n  </a>\n  , to trace the memory address to their respective chip registers.Either way, good information gathering really helps in SRE. Other answers can be forwarded.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "K3K",
            "time": "Nov 5, 2022 at 5:34",
            "is_accepted": false,
            "comments": []
        }
    ]
}