{
    "title": "Decompiling 64bit ARMv8 Android .so library",
    "link": "https://reverseengineering.stackexchange.com/questions/14532/decompiling-64bit-armv8-android-so-library",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I know IDA Pro can disassemble them to assembly code, but are there tools to decompile 64bit ARMv8 Android .so shared libraries to C?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "8k",
    "tags": [
        "ida",
        "android",
        "decompile",
        "decompiler",
        "libraries"
    ],
    "user": "user1118764",
    "time": "Jan 31, 2017 at 7:14",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The first tool is IDA decompiler (a plugin for IDA).\nAs far as I know for now IDA has decompilers for x86, x64, ARM32, ARM64, PPC, PPC64, and MIPS (see\n  <a href=\"https://www.hex-rays.com/products/decompiler/\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  for more details, each of them costs additional money and should be purchased separately).\n </p>\n <p>\n  The second is\n  <a href=\"https://www.hopperapp.com/index.html\" rel=\"nofollow noreferrer\">\n   hopper\n  </a>\n  which has much weaker decompiler and claims to be able to decompile arm64.\n </p>\n <p>\n  There is also a new open source tool called\n  <a href=\"https://github.com/NationalSecurityAgency/ghidra\" rel=\"nofollow noreferrer\">\n   Ghidra\n  </a>\n  from\n  <a href=\"https://www.nsa.gov/\" rel=\"nofollow noreferrer\">\n   the NSA\n  </a>\n  (\n  <a href=\"https://www.ghidra-sre.org/\" rel=\"nofollow noreferrer\">\n   Direct download link\n  </a>\n  is unavailable from some countries, but VPN helps). It supports decompilation for a lot of platforms (because it uses the same intermediate representation for all processors) and as opposite to IDA its processor definitions are configurable and can be updated (see the\n  <a href=\"https://ghidra.re/courses/languages/index.html\" rel=\"nofollow noreferrer\">\n   sleigh language manual\n  </a>\n  ).\n </p>\n <p>\n  The code generated by Ghidra may be less polished and less accurate, but you have a possibility, for example, to add new instructions when you need them -\n  <a href=\"https://github.com/NationalSecurityAgency/ghidra/issues/78\" rel=\"nofollow noreferrer\">\n   see here an example\n  </a>\n  (first I found, I'm sure there are more)\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "w s",
            "time": "Aug 20, 2020 at 20:40",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Nordwald",
                    "text": "<span class=\"comment-copy\">Sorry, I misread - you're right. Sadly there is no snowman support for ARMv8</span>",
                    "time": null
                }
            ]
        }
    ]
}