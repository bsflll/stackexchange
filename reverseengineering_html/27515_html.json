{
    "title": "Are there any 64 bit MIPS decompilers",
    "link": "https://reverseengineering.stackexchange.com/questions/27515/are-there-any-64-bit-mips-decompilers",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I’ve found many mips 32 bit decompilers.  I’m trying to decompile a simple 64bit elf from mips to c. Ida doesn’t seem to have much of a problem with disassembly. After some fixings I tried the decompiler and found ida only supports 32 bits. Then I went down the google rabbit hole.\n </p>\n <p>\n  Does anyone know of a 64bit mips decompiler?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 4,
    "views": "1k",
    "tags": [
        "decompile",
        "mips"
    ],
    "user": "Peter Robertson",
    "time": "Apr 21, 2021 at 2:04",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"https://ghidra-sre.org/\" rel=\"nofollow noreferrer\">\n   https://ghidra-sre.org/\n  </a>\n </p>\n <p>\n  Ghidra supports a lot of processors including mips64\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "mumbel",
            "time": "Apr 21, 2021 at 3:10",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Peter Robertson",
                    "text": "<span class=\"comment-copy\">Does it do decompilation as well most support 64bit disassembly but not decompilation.</span>",
                    "time": null
                },
                {
                    "user": "mumbel",
                    "text": "<span class=\"comment-copy\">@PeterRobertson  Ghidra is setup such that any processor supported will have disassembly, decompilation, and other analysis tools/scripts included  (this goes for their release at least, out of tree processors may have only added support for disassembly)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Mumbel is correct, Ghidra supports decompilation of MIPS64 binaries; see\n  <a href=\"https://github.com/NationalSecurityAgency/ghidra/wiki/Frequently-asked-questions#what-processors-are-currently-supported\" rel=\"nofollow noreferrer\">\n   \"What Processors are Currently Supported\"\n  </a>\n  in their FAQ.\n </p>\n <p>\n  Here is a screenshot of decompilation of the\n  <code>\n   main()\n  </code>\n  function of\n  <code>\n   readelf\n  </code>\n  compiled to target MIPS64 architecture:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/lrr8I.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"mips64-readelf main decompilation in Ghidra\" src=\"https://i.sstatic.net/lrr8I.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "julian",
            "time": "Apr 21, 2021 at 17:21",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"https://github.com/uxmal/reko\" rel=\"nofollow noreferrer\">\n   https://github.com/uxmal/reko\n  </a>\n </p>\n <p>\n  Reko is a binary decompiler that supports a lot of processors, including Mips64. Feel free to reach out to us for assistance on\n  <a href=\"https://gitter.im/uxmal/reko\" rel=\"nofollow noreferrer\">\n   https://gitter.im/uxmal/reko\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "John Källén",
            "time": "Apr 21, 2021 at 15:16",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Ghidra was the way to go, no other reverse engineering software had 64 bit MIPS. Reko came close and when I mailed that team they said they would implement it in the coming days. IDA only disassembles partly and cant decompile. Ret from Avast 32 bit only as well.  Once JDK 11 was installed disassembled and decompiled the .o elf easily. There is some problem with the dwarf analyzer not working or doing the symlinks, so ill have to find a fix for that.  I don't love Ghidra but I think I'm starting too.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Peter Robertson",
            "time": "Apr 22, 2021 at 13:59",
            "is_accepted": false,
            "comments": []
        }
    ]
}