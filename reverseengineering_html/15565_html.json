{
    "title": "Reverse Engineering ZyXel C1100Z modem firmware",
    "link": "https://reverseengineering.stackexchange.com/questions/15565/reverse-engineering-zyxel-c1100z-modem-firmware",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  first time post so please bear with me.\n </p>\n <p>\n  For days I have been trying to bypass a password my ISP has added to their remote CLI with no luck.\n </p>\n <p>\n  I have a Zyxel C1100Z DSL modem that I've purchased from my ISP and I have been trying to breakdown their newest firmware in order to bypass a new shell password feature they've implemented. The past firmware did not have this feature and simply allowed you to login via ssh/telnet and then type 'sh' to drop into a simple Busybox shell.\n </p>\n <p>\n  Now with the latest firmware, SSH seems to be severely broken/buggy, as does most of the CLI commands when you login over telnet (Cat,echo,netstat,etc.. do not function)\n </p>\n <p>\n  Since this is a new feature, I have guessed that the password is either\n </p>\n <ol>\n  <li>\n   Hard-coded into a CLI binary\n  </li>\n  <li>\n   Pulled from a configuration I have overlooked\n  </li>\n  <li>\n   Pushed remotely from the ISP\n  </li>\n </ol>\n <p>\n  So far I have extracted the root-fs using binwalk and I've scoured many hours through each configuration, running strings to no end, I even tried to emulate MIPS using QEMU.\n </p>\n <p>\n  Running file on one of the binaries gives me:\n  <code>\n   ELF 32-bit MSB executable, MIPS, MIPS32 version 1 (SYSV), dynamically linked, interpreter /lib/ld-uClibc.so.0, corrupted section header size\n  </code>\n </p>\n <p>\n  I installed the old firmware hoping to get an idea of how the system worked and thought some of this info might prove useful:\n </p>\n <pre><code>system type             : 963168MBV_17A\nprocessor               : 0\ncpu model               : Broadcom4350 V8.0\nBogoMIPS                : 398.33\nwait instruction        : yes\nmicrosecond timers      : yes\ntlb_entries             : 32\nextra interrupt vector  : no\nhardware watchpoint     : no\nASEs implemented        :\nshadow register sets    : 1\ncore                    : 0\nVCED exceptions         : not available\nVCEI exceptions         : not available\nunaligned exceptions            : 60561\n</code></pre>\n <p>\n  I've begun decompiling binaries using\n  <a href=\"https://retdec.com/decompilation/\" rel=\"noreferrer\">\n   https://retdec.com/decompilation/\n  </a>\n  but that has't gotten me very far.\n </p>\n <p>\n  I have hosted the extracted firmware root in a git repo at\n  <a href=\"https://github.com/bwbryant1/CTL_C110Z\" rel=\"noreferrer\">\n   https://github.com/bwbryant1/CTL_C110Z\n  </a>\n </p>\n <p>\n  I'm not asking for someone to do all of the work for me, mostly just some guidance as this is my first-attempt at reverse-engineering. Yes I have looked at past tutorials but none of the fit my firmware specifically and I have hit a brick wall.\n </p>\n <p>\n  How does one add a password to a shell? I know you can with inittab but it doesn't seem like that is what they are doing. I have no idea where the shell password prompt gets called from but I do know the text for it is stored inside /lib/private/libcms_cli.so. But I am not sure what this is.\n </p>\n <p>\n  Thank you\n </p>\n <p>\n  Edit for clarification: I have ssh and telnet access but they do not give you access to the root-fs. It drops you into a kind of chrooted environment with limited capabilities. However, by typing \"sh\" you are prompted with \"Please type in shell password:\" and it doesn't ask for a username, only a pass\n </p>\n</div>\n</body></html>",
    "votes": "10",
    "answers": 1,
    "views": "5k",
    "tags": [
        "disassembly",
        "firmware",
        "linux",
        "embedded",
        "mips"
    ],
    "user": "Brandon Bryant",
    "time": "Jun 17, 2017 at 6:20",
    "comments": [
        {
            "user": "Digger",
            "text": "<html><body><span class=\"comment-copy\">\n Brandon, if you figure out a shell password, please post same. I'm currently not able to call up a shell in a Zyxel C\n <b>\n  2\n </b>\n 100Z modem, which is distributed exclusively (as far as I can tell) by CenturyLink\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Brandon Bryant",
            "text": "<html><body><span class=\"comment-copy\">\n try supervisor:zyad1234\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Digger",
            "text": "<html><body><span class=\"comment-copy\">\n After logging into the modem's console (via SSH) using my personal username/password combo, I attempted to get a shell up.  I tried the following passwords:\n <code>\n  supervisor:zyad1234\n </code>\n and\n <code>\n  zyad1234\n </code>\n .  Neither one worked.  I then backed out of the console and tried logging in using the username\n <code>\n  supervisor\n </code>\n and the password\n <code>\n  zyad1234\n </code>\n with no joy.  I then tried logging in using a username of\n <code>\n  admin\n </code>\n and the password\n <code>\n  1234\n </code>\n .  I then got the message\n <code>\n  Connection closed by 192.168.0.1\n </code>\n .  Now, I can't get back in, even with my personal username/password...\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Brandon Bryant",
            "text": "<html><body><span class=\"comment-copy\">\n I think from what I've learned there is a 15 minute timeout after 3-4 failed logins\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Digger",
            "text": "<html><body><span class=\"comment-copy\">\n Yeah, Brandon, I tried logging in after a 2 two hour wait and got back in.  Still can't figure out the shell password, though...\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The password seems to be generated dynamically from /etc/profile\n </p>\n <blockquote>\n  <p>\n   ...\n   \n\n   # generate login files\n   \n\n   echo \"supervisor:3Gnc.CJE1790M:0:0:Administrator:/:/bin/sh\" > /var/passwd\n   \n\n   echo \"root::0:root,supervisor,support,user\" > /var/group\n   \n\n   ...\n   \n\n  </p>\n </blockquote>\n <p>\n  You would need to try to crack the DES hash with a program like John the Ripper or replace it with another known password or nothing.\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "cimarron",
            "time": "Jun 16, 2017 at 22:12",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Brandon Bryant",
                    "text": "<span class=\"comment-copy\">Thank you for looking into this, cimarron. I did crack that password, it gave me <code>supervisor:zyad1234</code> unfortunately its not accepting this user/pass combo on ssh or telnet. I still haven't reset to factory and tried the credentials. There could some configuration being overwritten or this might be deprecated</span>",
                    "time": null
                },
                {
                    "user": "cimarron",
                    "text": "<span class=\"comment-copy\">It appears there is another generated one in /etc/miniboot.sh:  <code>echo 'admin:tP2w1wFvu8GXo:0:0:Administrator:/:/bin/sh' &gt; /var/passwd</code> which is just a username of admin and password 1234. Have you already tried that one?</span>",
                    "time": null
                },
                {
                    "user": "Brandon Bryant",
                    "text": "<span class=\"comment-copy\">Yeah. I've cracked everything that's in plaintext and unfortunately none of them work. Thank you!</span>",
                    "time": null
                },
                {
                    "user": "cimarron",
                    "text": "<span class=\"comment-copy\">I see your issue now. Sorry, I thought your problem was in the login but your edit cleared it up. It does indeed look like libcms_cli.so is responsible for the  additional password prompt. I did a little reversing and found it seems to just do a plaintext password comparison of what you enter with a password it gets from somewhere; I didn't spend too much time trying to figure it out but it comes from some cmsobject. Anyway, you should be able to patch address 0x617c to a nop instruction (00 00 00 00) previously a bnez v0, 0x6194 (14 40 00 05) which should bypass the string unequal comparison</span>",
                    "time": null
                },
                {
                    "user": "Brandon Bryant",
                    "text": "<span class=\"comment-copy\">Awesome thank you! I believed I was on the right track, I just had no idea how to begin decoding the MIPS assembly. Now to just get that file uploaded to a read only filesystem. I requested the source code from zyxel under GPL requests and once I get that I should (hopefully) be able make my own firmware update. In the mean time, the firmware mod kit, FMK, doesn't have support for extracting and then rebuilding jffs2 images so I'm going to have to try on my own with the mkfs.jffs2 command. Again thank you, that helps me out tremendously</span>",
                    "time": null
                }
            ]
        }
    ]
}