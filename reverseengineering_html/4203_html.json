{
    "title": "Tools to show the registers and memory locations in use during execution?",
    "link": "https://reverseengineering.stackexchange.com/questions/4203/tools-to-show-the-registers-and-memory-locations-in-use-during-execution",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am looking for something that is like\n  <code>\n   gdb\n  </code>\n  but maybe with a GUI that can show all registers current values ans the current values of memory and things on the stack?  Freeware is preferred.  I have a free version of IDA and anything that comes with Kali Linux.  It is an ELF file that is stripped.\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 4,
    "views": "2k",
    "tags": [
        "ida",
        "disassembly",
        "decompilation",
        "binary-analysis",
        "gdb"
    ],
    "user": null,
    "time": "Jul 25, 2014 at 15:25",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Perhaps you should try\n  <code>\n   DDD\n  </code>\n  . It's a\n  <code>\n   GUI\n  </code>\n  for\n  <code>\n   GDB\n  </code>\n  with lots of great features that simplify debugging for beginners & experts too. I have to warn you though, if your binary is stripped what matters most is the methodology. Most debuggers are extremely efficient if debug symbols are present (in case of an\n  <code>\n   ELF\n  </code>\n  , the\n  <code>\n   DWARF\n  </code>\n  is what you need to check). Without debug symbols all you can do is go through the code step by step, setting breakpoints at locations where the assembly code seems to be interesting.\n </p>\n <p>\n  You must know that reverse engineering is a challenge, not an easy task, and that there's no such thing as a magic tool. All the tools rely on algorithm which are not, unfortunately, flawless. Disassemblers can fail, decompilers can stumble upon patterns they can't turn into high-level code, and so on and so forth.\n </p>\n <p>\n  You have to develop a methodology which you'll have to adapt with experience. That's how you'll be able to forge good reversing skills. Meanwhile, the forum is open for questions, hopefully as precise & concise as the answers.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "yaspr",
            "time": "Apr 29, 2014 at 21:09",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user4466",
                    "text": "<span class=\"comment-copy\">Thanks. This is a project our digital forensics teacher gave us and he obfuscated everything so the decompiling didn't help me.  Is there anyway we could communicate so I could pitch you ideas etc besides stackexchange?  I am looking for a mentor/guide for this project I do not need or want someone to give me answers I just want someone who I could bounce ideas off of. williamDOTkochATusmaDOTedu or could you point me to a good forum or google group or something where I could get help?</span>",
                    "time": null
                },
                {
                    "user": "yaspr",
                    "text": "<span class=\"comment-copy\">There's a chat on stackexchange but you need at least 20 reps to join !</span>",
                    "time": null
                },
                {
                    "user": "user4466",
                    "text": "<span class=\"comment-copy\">want to vote up some of my stuff so I can get reputation points.  I got banned from asking stackoverflow questions and I only asked 3 or 4 and even after fixing up my posts I was still blocked!</span>",
                    "time": null
                },
                {
                    "user": "yaspr",
                    "text": "<span class=\"comment-copy\">Well, there are rules &amp; some people are tight ! I sent you an email.</span>",
                    "time": null
                },
                {
                    "user": "gandolf",
                    "text": "<span class=\"comment-copy\">You can also try out radare.org Its a full reverse engineering suite equipped with a debugger, and its open source.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  gdb has a\n </p>\n <pre><code>text user interface \n</code></pre>\n <p>\n  can be activated with\n  <code>\n   layout\n  </code>\n  command in a running instance of gdb or with\n  <code>\n   --tui\n  </code>\n  command line switch while starting\n </p>\n <p>\n  will show registers and assembly\n </p>\n <p>\n  this would be the most cheapest option i guess:)\n </p>\n <p>\n  the following commands should provide an over view tui\nlayout split ; layout regs ; layout asm ; layout src ;layout next; layout prev;\n </p>\n <p>\n  apart from the already mentioned DDD\nEDB with Qt framework can be checked out\n  <a href=\"http://freecode.com/projects/edebugger\" rel=\"nofollow\">\n   EDB (EVANS Debugger)\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "blabb",
            "time": "Apr 29, 2014 at 21:39",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"https://github.com/longld/peda\" rel=\"nofollow noreferrer\">\n   PEDA\n  </a>\n  is a gdb plugin that can display the current process status:\n </p>\n <ul>\n  <li>\n   stack content\n  </li>\n  <li>\n   register content\n  </li>\n  <li>\n   instructions near the program counter\n  </li>\n </ul>\n <p>\n  The output is pretty and colored.\n </p>\n <p>\n  <img alt=\"peda session screenshot\" src=\"https://i.sstatic.net/t3mbd.png\"/>\n </p>\n <p>\n  There are loads of\n  <a href=\"https://github.com/longld/peda/blob/master/README.md\" rel=\"nofollow noreferrer\">\n   other features\n  </a>\n  such as finding ROP gadget, showing elf headers, showing the enabled mitigations (ASLR, DEP, RELRO, ...)\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "toasted_flakes",
            "time": "Jul 25, 2014 at 18:50",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  cgdb is a curses based gdb interface that may be worth looking at:\n </p>\n <p>\n  <a href=\"https://cgdb.github.io/\" rel=\"nofollow\">\n   https://cgdb.github.io/\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Fred Concklin",
            "time": "Jul 30, 2014 at 3:15",
            "is_accepted": false,
            "comments": []
        }
    ]
}