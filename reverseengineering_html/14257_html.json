{
    "title": "Modify program's registry accesses from HKLM to HKCU in assembly",
    "link": "https://reverseengineering.stackexchange.com/questions/14257/modify-programs-registry-accesses-from-hklm-to-hkcu-in-assembly",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a game on my PC that reads and writes registry keys and values to the HKLM hive. I am trying to see if it is possible to modify the game so that it uses the HKCU hive instead.\n </p>\n <p>\n  The source code for this game isn't available so I am trying to disassemble the game binary and see if the assembly can be modified to accomplish this.\n </p>\n <p>\n  I am seeing sections like this in PE Explorer but I can't figure out what parts of it are used to target the HKLM hive:\n </p>\n <pre><code> L004036E0:\n        lea eax,[esp+1Ch]\n        lea ecx,[esp+08h]\n        push    eax\n        push    00020019h\n        push    ebx\n        call    SUB_L00401F70\n        push    eax\n        push    80000002h\n        call    [ADVAPI32.dll!RegOpenKeyExA]\n        cmp eax,ebx\n        jnz L004037E9\n        lea ecx,[esp+14h]\n        lea edx,[esp+000000A0h]\n        push    ecx\n        mov ecx,[esp+20h]\n        lea eax,[esp+1Ch]\n        push    edx\n        push    eax\n        push    ebx\n        push    SSZ00413090_InstallPath\n        push    ecx\n        mov dword ptr [esp+2Ch],00000104h\n        call    [ADVAPI32.dll!RegQueryValueExA]\n        cmp eax,ebx\n        jnz L004037E9\n        cmp dword ptr [esp+18h],00000001h\n        jnz L004037E9\n        lea edx,[esp+000000A0h]\n        push    0000005Ch\n        push    edx\n        lea esi,[esp+000000A8h]\n        call    SUB_L00406310\n        add esp,00000008h\n        cmp eax,ebx\n        jz  L00403775\n L00403763:\n</code></pre>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 2,
    "views": "928",
    "tags": [
        "disassembly",
        "windows",
        "x86"
    ],
    "user": "XJDHDR",
    "time": "Dec 27, 2016 at 14:46",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You are looking to identify all calls to RegCreateKey/Ex and RegOpenKey/Ex calls, then check their first parameter, then change it to HKCU integer definition (0x80000001) instead of HKLM (0x80000002).\n </p>\n <p>\n  In the above, you quite clearly see it push the first parameter to RegOpenKeyExA, 0x80000002. So, you just change those to 0x80000001.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "dyasta",
            "time": "Dec 30, 2016 at 14:42",
            "is_accepted": true,
            "comments": [
                {
                    "user": "XJDHDR",
                    "text": "<span class=\"comment-copy\">Thank you very much for the assistance. I've successfully modified the game and it now uses the HKCU hive instead of HKLM.</span>",
                    "time": null
                },
                {
                    "user": "dyasta",
                    "text": "<span class=\"comment-copy\">Happy to help ;)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you check signature of\n  <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms724897(v=vs.85).aspx\" rel=\"nofollow noreferrer\">\n   <code>\n    RegOpenKeyExA\n   </code>\n  </a>\n  you clearly see that the  first argument is the HKEY. Since the method is defined as\n  <code>\n   WINAPI\n  </code>\n  (\n  <a href=\"https://msdn.microsoft.com/en-us/library/zxk0tw93(v=vs.110).aspx\" rel=\"nofollow noreferrer\">\n   _stdcall\n  </a>\n  ) it will be the first argument passed before the\n  <code>\n   call\n  </code>\n  .\n </p>\n <p>\n  Also by checking the HKEY values defined in\n  <code>\n   WinReg.h\n  </code>\n  in Windows SDK can show you that this is the correct assumption as 0x80000002 is defined as HKEY_LOCAL_MACHINE\n </p>\n <pre><code>#define HKEY_CLASSES_ROOT                   (( HKEY ) (ULONG_PTR)((LONG)0x80000000) )\n#define HKEY_CURRENT_USER                   (( HKEY ) (ULONG_PTR)((LONG)0x80000001) )\n#define HKEY_LOCAL_MACHINE                  (( HKEY ) (ULONG_PTR)((LONG)0x80000002) )\n#define HKEY_USERS                          (( HKEY ) (ULONG_PTR)((LONG)0x80000003) )\n#define HKEY_PERFORMANCE_DATA               (( HKEY ) (ULONG_PTR)((LONG)0x80000004) )\n#define HKEY_PERFORMANCE_TEXT               (( HKEY ) (ULONG_PTR)((LONG)0x80000050) )\n#define HKEY_PERFORMANCE_NLSTEXT            (( HKEY ) (ULONG_PTR)((LONG)0x80000060) )\n#if(WINVER >= 0x0400)\n#define HKEY_CURRENT_CONFIG                 (( HKEY ) (ULONG_PTR)((LONG)0x80000005) )\n#define HKEY_DYN_DATA                       (( HKEY ) (ULONG_PTR)((LONG)0x80000006) )\n#define HKEY_CURRENT_USER_LOCAL_SETTINGS    (( HKEY ) (ULONG_PTR)((LONG)0x80000007) )\n</code></pre>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Paweł Łukasik",
            "time": "Dec 27, 2016 at 15:04",
            "is_accepted": false,
            "comments": [
                {
                    "user": "XJDHDR",
                    "text": "<span class=\"comment-copy\">Thank you very much for the assistance. I've successfully modified the game and it now uses the HKCU hive instead of HKLM.</span>",
                    "time": null
                },
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">good to hear :)</span>",
                    "time": null
                }
            ]
        }
    ]
}