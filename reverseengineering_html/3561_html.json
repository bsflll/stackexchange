{
    "title": "How to get IDA Pro Free to automatically change segment on retf?",
    "link": "https://reverseengineering.stackexchange.com/questions/3561/how-to-get-ida-pro-free-to-automatically-change-segment-on-retf",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have been unable to get IDA pro to do a simple disassembly of a flat 16-bit binary (bootloader) file. I'm just getting started, and it seems to be harder than it should be.\n </p>\n <p>\n  There's a simple set of instructions, that do\n </p>\n <pre><code>seg000:7C5D                 push    7C0h\nseg000:7C60                 pop     ds\nseg000:7C61                 assume ds:nothing\nseg000:7C61                 push    ds\nseg000:7C62                 push    (offset unk_7C66 - offset loc_7C00)\nseg000:7C65                 retf\nseg000:7C65 ; --------------------------------------------------------------------------\nseg000:7C66 unk_7C66        db  88h ; Ãª             ; DATA XREF: seg000:7C62\u0018o\n</code></pre>\n <p>\n  Right under\n  <code>\n   push 7c0h; pop ds\n  </code>\n  it says\n  <code>\n   assume ds:nothing\n  </code>\n  .\n  <code>\n   retf\n  </code>\n  actually uses the values in the stack to set the segment and offset. Is there a way to manually enable such analysis? Are there more intelligent disassemblers out there? I'm having trouble following the flow and IDA isn't helping at ALL.\n </p>\n</div>\n</body></html>",
    "votes": "7",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ida",
        "disassembly",
        "tools",
        "x86"
    ],
    "user": "Milind R",
    "time": "Jan 26, 2014 at 21:42",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Apologies for bringing this up after half a year; hope the question is still relevant.\n </p>\n <p>\n  If this is occurring in multiple places, I would suggest to write a simple IDC script to solve the issue. The script would:\n </p>\n <ul>\n  <li>\n   Match the push/pop/push/push/retf instruction sequence;\n  </li>\n  <li>\n   Set up a code cross-reference from the retf instruction to the calculated address;\n  </li>\n  <li>\n   Place a comment;\n  </li>\n  <li>\n   Mark the destination for analysis by IDA (optional, I think IDA should automatically start exploring after xref creation).\n  </li>\n </ul>\n <p>\n  This should solve the issue at hand. Unfortunately, IDA is not as smart as we would like it to be.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Dmitry Janushkevich",
            "time": "Jun 27, 2014 at 12:57",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Milind R",
                    "text": "<span class=\"comment-copy\">Thanks.. I'll try to write the IDC script myself; if that doesn't work out, I'll be back on RE.SE! :)</span>",
                    "time": null
                }
            ]
        }
    ]
}