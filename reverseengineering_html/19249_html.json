{
    "title": "Guessing checksum 8 bit ASCII algorithm",
    "link": "https://reverseengineering.stackexchange.com/questions/19249/guessing-checksum-8-bit-ascii-algorithm",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to reverse engineer an 8-bit checksum algorithm of a Chinese machine with RS485 communication and ASCII encoding.\nI tried with all the algorithm I could find, but it seems that data packets don't have a standard structure.\n </p>\n <p>\n  Example 1:\n </p>\n <pre><code>!13.2210101.3<\n</code></pre>\n <p>\n  The frame included  and all frame characters seem to be from \";\" to \"Z\".\n </p>\n <p>\n  Example 2:\n </p>\n <pre><code>!14.0000000.0A\n!13.0000000.0@\n</code></pre>\n <p>\n  I guess that the checksum will be linear because (4-3) = (A-@).\n </p>\n <p>\n  Another Frame:\n </p>\n <pre><code>!13.0450000.0L\n!13.3280102.5>\n!13.6190106.7G\n!131.390104.8I\n!131.670101.4C\n!131.960101.1B\n!132.150100.4=\n!132.150100.4=\n!13.0680100.4<\n!13.3540090.5M\n!13.6340090.7P\n!13.9230089.7X\n!131.200089.8T\n!131.690089.1R\n!131.970088.2R\n!132.260088.0I\n!132.540087.3L\n!132.740087.3O\n!132.740087.3O\n!13.0590087.3I\n!13.3310094.2H\n!13.6280093.3H\n!13.9080093.7M\n</code></pre>\n <p>\n  I really want to go build a neutral network for solving this problem. Somebody help me please.\n </p>\n <p>\n  <strong>\n   Edit\n  </strong>\n </p>\n <p>\n  Some raw data when I changed the address from 1 to 0:\n </p>\n <pre><code>!03.0000000.0?\n!03.1970100.3D\n!03.1990113.5L\n!03.2010108.9D\n!03.1980099.1T\n!04.0000000.0@\n!04.0040168.1D\n!04.0050149.9L\n!04.0040173.3B\n!04.0050167.7J\n</code></pre>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "248",
    "tags": [
        "decryption"
    ],
    "user": "Giàu Nguyễn Thanh",
    "time": "Sep 6, 2018 at 20:54",
    "comments": [
        {
            "user": "Johann Aydinbas",
            "text": "<html><body><span class=\"comment-copy\">\n I've been toying around with the data but could not find a solution. Can you clarify the format of what you posted? For example, did you add the '!' and '.'? Did you fix the length of the middle field? In my testing I assumed the last 2 characters are the checksum, but that means the character range is from '0' (zero) to 'Z', which is 42 characters. I assume it's a base42 encoding of the actual checksum with a custom alphabet but it didn't result in anything helpful.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Giàu Nguyễn Thanh",
            "text": "<html><body><span class=\"comment-copy\">\n that is raw data i receive from device. i just remove <CR>  in the end. I think '!' just a identify character for RS485, maybe no need for checksum calculation.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}