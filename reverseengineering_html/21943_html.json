{
    "title": "change PE file icon without re-signing the file all over again",
    "link": "https://reverseengineering.stackexchange.com/questions/21943/change-pe-file-icon-without-re-signing-the-file-all-over-again",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Is there any option to set new icon for a signed PE executable in windows without re-signing it again. This means that the icon image, although fully assimilated to the PE file, won't change the hash value as it's appears in the file signature part.\n </p>\n <p>\n  perhaps there's a concept where one can sign only the specific sections in the files such as\n  <code>\n   .text\n  </code>\n  or\n  <code>\n   .data\n  </code>\n  and avoid other parts of the file ?\n </p>\n <p>\n  thanks\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 1,
    "views": "883",
    "tags": [
        "windows",
        "pe",
        "executable"
    ],
    "user": "Zohar81",
    "time": "Aug 21, 2019 at 7:41",
    "comments": [
        {
            "user": "Thomas Weller",
            "text": "<html><body><span class=\"comment-copy\">\n There are some sections excluded from signing, e.g. the certificate section itself (which makes perfect sense). I'm not aware of code signing only parts of an executable.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This is normally not possible. The icon is part of the\n  <em>\n   resource section\n  </em>\n  (\n  <code>\n   .rsrc\n  </code>\n  ) which is covered by the signature so any modification will invalidate it and the binary needs to be re-signed.\n </p>\n <p>\n  There\n  <em>\n   may\n  </em>\n  be some parts of the executable you can\n  <a href=\"https://vcsjones.dev/2016/04/15/authenticode-stuffing-tricks/\" rel=\"nofollow noreferrer\">\n   change without invalidating the signature\n  </a>\n  , but the resource section is not one of them.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Igor Skochinsky",
            "time": "Aug 21, 2019 at 21:09",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Zohar81",
                    "text": "<span class=\"comment-copy\">I guess you're right ... but why did you say \"normally\", is there any case where it's possible (when the icon is embedded inside the PE) ?</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">there may be various implementation flaws, e.g. <a href=\"https://vcsjones.dev/2016/04/15/authenticode-stuffing-tricks/\" rel=\"nofollow noreferrer\">vcsjones.dev/2016/04/15/authenticode-stuffing-tricks</a></span>",
                    "time": null
                },
                {
                    "user": "Zohar81",
                    "text": "<span class=\"comment-copy\">Hi, I've followed the information in the article you mentioned by placing the embedded icon in the certificate section right after the pkcs7 structure, and set <code>offsetToData</code> in the icon record to point that place. However, it seems like explorer still cannot find the icon, perhaps its because the file length has exceeded some value inside the pe structure ? are there any more fields I need to set ?</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@Zohar81: resources must be a part of the program image (usually <code>.rsrc</code> section). data in the overlay will be ignored by the OS.</span>",
                    "time": null
                },
                {
                    "user": "Zohar81",
                    "text": "<span class=\"comment-copy\">Perhaps there's a way to avoid embedding the icon into the PE file... and instead add to the .rsrc section a path to the icon file, so it could be replaced without damaging file integrity ?</span>",
                    "time": null
                }
            ]
        }
    ]
}