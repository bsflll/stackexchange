{
    "title": "How to debug ARM binary with IDA pro on Windows?",
    "link": "https://reverseengineering.stackexchange.com/questions/6171/how-to-debug-arm-binary-with-ida-pro-on-windows",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm newbie, I have a little knowledge of debugging x86 binary. However, I have to work with ARM.\nI'm getting stuck on install QEMU and can't debug an ARM binary.\n </p>\n <p>\n  Thank you a lot for give me tutorials of reversing an example ARM binary.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "8k",
    "tags": [
        "ida",
        "arm",
        "qemu"
    ],
    "user": "Ryan",
    "time": "Sep 4, 2014 at 5:26",
    "comments": [
        {
            "user": "perror",
            "text": "<html><body><span class=\"comment-copy\">\n In fact, Stack-exchange is meant to answer to technical questions. If you are looking for references and tutorial, a better start could be Google.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Fewmitz",
            "text": "<html><body><span class=\"comment-copy\">\n Where is the ARM binary from? In general I don't touch QEMU if I don't have to. If you have an Android phone that can run the executable it's pretty easy; IDA comes with prebuilt debugging servers for ARM that you can stand up and port forward to to use the debugger. I'm assuming this might not be applicable since you jumped straight to QEMU but figured I should at least ask\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Ryan",
            "text": "<html><body><span class=\"comment-copy\">\n thanks for your comments. I just want to ask about debug ARM with IDA. I still get stuck :(\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Here is a simple video for setting up qemu for ARM.\n </p>\n <p>\n  <a href=\"http://www.securitytube.net/video/5818\" rel=\"nofollow\">\n   http://www.securitytube.net/video/5818\n  </a>\n </p>\n <p>\n  Using IDA you can open and disassemble the program fine. Just to debug you will probably get stuck using GDB as you can't run the arm binary in your current environment.\n </p>\n <p>\n  Let me know if you have more questions.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "LUser",
            "time": "Sep 4, 2014 at 6:09",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Ryan",
                    "text": "<span class=\"comment-copy\">Thank you for your answer!  However my problem is install qemu on WINDOWS ( Because I can't find IDA pro free for Ubuntu and using wine is too bad :( ). Btw, how can I open the ARM file that I wanna disAsm?</span>",
                    "time": null
                },
                {
                    "user": "LUser",
                    "text": "<span class=\"comment-copy\">I dont think ida free can do arm . I am looking up how to use qemu on windows. You could just install ida free on windows and see if it will decompile the arm binary</span>",
                    "time": null
                },
                {
                    "user": "LUser",
                    "text": "<span class=\"comment-copy\">Have you looked here <a href=\"http://qemu.weilnetz.de/w64/\" rel=\"nofollow noreferrer\">qemu.weilnetz.de/w64</a></span>",
                    "time": null
                },
                {
                    "user": "Ryan",
                    "text": "<span class=\"comment-copy\">thank you, I'm ok on install qemu. But still can't debug :(</span>",
                    "time": null
                },
                {
                    "user": "LUser",
                    "text": "<span class=\"comment-copy\">The only thing I can think of is to possibly use ida for an over all picture. Then, use gdb for the actual debugging . maybe you can compile a debugger or something in that qemu vm.</span>",
                    "time": null
                }
            ]
        }
    ]
}