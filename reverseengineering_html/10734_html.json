{
    "title": "Failure at finding the value of the dereferenced pointer",
    "link": "https://reverseengineering.stackexchange.com/questions/10734/failure-at-finding-the-value-of-the-dereferenced-pointer",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <pre><code>000007FEEC55CF58| 48 8D 0D F1 A7 0B 00 | lea rcx,qword ptr ds:[7FEEC617750] | ;7FEEC617750:\"500117367\"\n</code></pre>\n <p>\n  I see the above line in the ollyDBG which has the value of\n  <code>\n   \"500117367\"\n  </code>\n  according to the comment made by the ollyDBG itself.\n </p>\n <p>\n  However, I don't know how to access the dereferenced pointer value. When I press\n  <kbd>\n   Ctrl\n  </kbd>\n  +\n  <kbd>\n   G\n  </kbd>\n  and go to the\n  <code>\n   7FEEC617750\n  </code>\n  memory address, I get an expression like\n  <code>\n   push rbx\n  </code>\n  which is not the value shown in the ollyDBG.\n </p>\n <p>\n  I am pretty confused by how I should use the offsets and stack in ollyDBG.\n  <em>\n   I simply want to know how to access the value of pointer shown in the comment of ollyDBG\n   <code>\n    [7FEEC617750]\n   </code>\n   and also find out what accesses and writes to\n   <code>\n    [7FEEC617750]\n   </code>\n   .\n  </em>\n </p>\n <p>\n  <strong>\n   P.S\n  </strong>\n  Thanks to AcidShout for pinpointing, indeed, the debugger is\n  <code>\n   x64_dbg\n  </code>\n  the cousin of ollyDBG :)\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "252",
    "tags": [
        "disassembly",
        "address",
        "assembly",
        "pointer"
    ],
    "user": "FreeMind",
    "time": "Aug 28, 2015 at 19:56",
    "comments": [
        {
            "user": "rev",
            "text": "<html><body><span class=\"comment-copy\">\n There's no dereference happening there. What you see is equivalent to\n <code>\n  mov rcx, 0x7FEEC617750\n </code>\n .\n <code>\n  lea\n </code>\n does not dereference\n <i>\n  even\n </i>\n though the value is inside brackets\n <code>\n  []\n </code>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "rev",
            "text": "<html><body><span class=\"comment-copy\">\n Also, how are you debugging x64 code inside Olly?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "FreeMind",
            "text": "<html><body><span class=\"comment-copy\">\n @AcidShout Indeed it is x64_dbg the cousin of ollyDBG :) sorry about representing the issue in the wrong way I am newbie in reversing.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Right-click on the disassembly line above in OllyDbg and choose\n  <code>\n   Follow in Dump\n  </code>\n  . That will tell OllyDbg to navigate to address\n  <code>\n   7FEEC617750\n  </code>\n  in the dump pane and allow you to see the memory at that address:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/FSTPZ.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Follow in Dump\" src=\"https://i.sstatic.net/FSTPZ.png\"/>\n  </a>\n </p>\n <p>\n  To see what accesses and writes to the memory at that address, right-click in the dump pane on the first byte of memory at that address and set a hardware breakpoint on-access:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/DJl27.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Hardware Breakpoint\" src=\"https://i.sstatic.net/DJl27.png\"/>\n  </a>\n </p>\n <p>\n  <strong>\n   Edit:\n  </strong>\n </p>\n <p>\n  All that said, AcidShout's two comments above in response to your question are spot-on!\n </p>\n</div>\n</body></html>",
            "votes": "6",
            "user": "Jason Geffner",
            "time": "Aug 28, 2015 at 19:33",
            "is_accepted": true,
            "comments": [
                {
                    "user": "FreeMind",
                    "text": "<span class=\"comment-copy\">Thanks for the answer. Indeed, I am using the x64_dbg, anyway the solution is the same.</span>",
                    "time": null
                },
                {
                    "user": "FreeMind",
                    "text": "<span class=\"comment-copy\">Anyway, whenever I put a breakpoint the program crashes. What should I do in such situation?!</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">One question per post. Please create a new post for that new question.</span>",
                    "time": null
                },
                {
                    "user": "FreeMind",
                    "text": "<span class=\"comment-copy\">It is alright but the crashing is related directly to this question?!</span>",
                    "time": null
                },
                {
                    "user": "FreeMind",
                    "text": "<span class=\"comment-copy\">Please check out <a href=\"http://reverseengineering.stackexchange.com/questions/10741/how-to-access-and-modify-data-segment-when-doing-hardware-breakpoint-crashes-the\" title=\"how to access and modify data segment when doing hardware breakpoint crashes the\">reverseengineering.stackexchange.com/questions/10741/â€¦</a></span>",
                    "time": null
                }
            ]
        }
    ]
}