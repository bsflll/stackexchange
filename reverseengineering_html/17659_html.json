{
    "title": "Ida- how to find connection between 2 functions",
    "link": "https://reverseengineering.stackexchange.com/questions/17659/ida-how-to-find-connection-between-2-functions",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have 2 function that I want to find a connection between them.\n </p>\n <p>\n  For ex.  maybe there is function 5level up that called to those function, or another complicate connection.\n </p>\n <p>\n  How can I find it with ida or another tool.\n </p>\n <p>\n  Looks on graphes not help me ,I have more than 1000 functions\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida"
    ],
    "user": "Disi1234",
    "time": "Mar 11, 2018 at 17:16",
    "comments": [
        {
            "user": "julian",
            "text": "<html><body><span class=\"comment-copy\">\n <a href=\"https://binary.ninja/2017/10/01/automated-opaque-predicate-removal.html\" rel=\"nofollow noreferrer\">\n  binary.ninja/2017/10/01/automated-opaque-predicate-removal.html\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "julian",
            "text": "<html><body><span class=\"comment-copy\">\n <a href=\"http://www.msreverseengineering.com/blog/2014/6/23/control-flow-deobfuscation-via-abstract-interpretation\" rel=\"nofollow noreferrer\">\n  msreverseengineering.com/blog/2014/6/23/â€¦\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Take the following \"Hello World!\" program as an example.\n </p>\n <pre><code>void Log(char* var) {\nprintf(var);\n}\n\nint main() {\nLog(\"Hello World!\n\");\n}\n</code></pre>\n <p>\n  After compiling with\n  <code>\n   gcc\n  </code>\n  , open that executable in IDA. First choose the function from where you want to start (e.g.\n  <code>\n   main\n  </code>\n  ). Go to the\n  <code>\n   main\n  </code>\n  function, right click on the disassembly window (IDA view) and choose\n  <strong>\n   Proximity browser\n  </strong>\n  . Alternatively press\n  <kbd>\n   Num -\n  </kbd>\n  to open proximity browser or\n  <kbd>\n   Num +\n  </kbd>\n  to open graph view. The window will be like this:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/KUnN7.png\" rel=\"noreferrer\">\n   <img alt=\"Proximity_Browser\" src=\"https://i.sstatic.net/KUnN7.png\"/>\n  </a>\n </p>\n <p>\n  Right click on the\n  <code>\n   main\n  </code>\n  rectangle, select\n  <strong>\n   Collapse children\n  </strong>\n  and then select\n  <strong>\n   Collapse parents\n  </strong>\n  . Now right click on the blank area, select\n  <strong>\n   Add node by name\n  </strong>\n  , choose your second function to which you want to connect\n  <code>\n   main()\n  </code>\n  . Here for example I choose\n  <code>\n   printf()\n  </code>\n  .\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/6oy5M.png\" rel=\"noreferrer\">\n   <img alt=\"Find_path\" src=\"https://i.sstatic.net/6oy5M.png\"/>\n  </a>\n </p>\n <p>\n  Now right click in the\n  <code>\n   main\n  </code>\n  rectangle, select\n  <strong>\n   Find path\n  </strong>\n  , choose\n  <code>\n   printf\n  </code>\n  from the find path window. You can see the connection between\n  <code>\n   main\n  </code>\n  and\n  <code>\n   printf\n  </code>\n  and also the intermediate\n  <code>\n   Log\n  </code>\n  function.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/EBqB9.png\" rel=\"noreferrer\">\n   <img alt=\"main_printf_graph\" src=\"https://i.sstatic.net/EBqB9.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "7",
            "user": "Biswapriyo",
            "time": "Mar 12, 2018 at 15:03",
            "is_accepted": false,
            "comments": []
        }
    ]
}