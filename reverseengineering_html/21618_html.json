{
    "title": "how can i decrypt huawei HG531s v1 config file?",
    "link": "https://reverseengineering.stackexchange.com/questions/21618/how-can-i-decrypt-huawei-hg531s-v1-config-file",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"https://hg658c.wordpress.com/2017/12/04/decrypting-configuration-files-from-other-huawei-home-gateway-routers/\" rel=\"nofollow noreferrer\">\n   I have tried to follow this guide\n  </a>\n  but \nlibxmlapi.so didn't have the required ATP_GetInfo1 function\nso i moved to the next file libhttpapi.so \nit had\n </p>\n <pre><code>ATP_GetInfo1\nATP_GetInfo2 \nATP_GetInfo3 \nATP_GetInfo4\n</code></pre>\n <p>\n  so i copied the first two .\n </p>\n <p>\n  then ATP_GetInfo3 from libcfmapi.so file\n </p>\n <p>\n  then ATP_GetInfo4 from libmsgapi.so file\n.... and when i tried to run the script\n  <a href=\"https://pastebin.com/zJechi09\" rel=\"nofollow noreferrer\">\n   decode_keystore.py\n  </a>\n  but it gave me\n </p>\n <blockquote>\n  <p>\n   ValueError: Input strings must be a multiple of 16 in length\n  </p>\n </blockquote>\n <p>\n  .... and i think because the values wasn't in the same length\n </p>\n <p>\n  <a href=\"https://www.mediafire.com/file/4x8y97j256uvd04/hg531s1.BIN/file\" rel=\"nofollow noreferrer\">\n   The firmware file\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "3k",
    "tags": [
        "ida",
        "binary-analysis",
        "firmware",
        "encryption",
        "python"
    ],
    "user": "mina nageh",
    "time": "Jul 5, 2019 at 17:14",
    "comments": [
        {
            "user": "Madushan",
            "text": "<html><body><span class=\"comment-copy\">\n Make sure your strings are 240 characters in length.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "mina nageh",
            "text": "<html><body><span class=\"comment-copy\">\n @Madushan how while there are not !\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I mailed\n  <a href=\"https://www.nirsoft.net/utils/router_password_recovery.html\" rel=\"nofollow noreferrer\">\n   Nirsoft RouterPassView\n  </a>\n  tool creator for about a month and he figured the way to decrypt it after so many tries ... and it wasn't the way that you mentioned in the article at all but it was in one of the mentioned files\n  <code>\n   libcfmapi.so\n  </code>\n </p>\n <p>\n  and finally when he figured it out he said\n </p>\n <blockquote>\n  <p>\n   It's from the strings I found, but I had to put them in different\norder: (look in the colored chars):\n   <a href=\"https://i.sstatic.net/AZlxd.png\" rel=\"nofollow noreferrer\">\n    <img alt=\"enter image description here\" src=\"https://i.sstatic.net/AZlxd.png\"/>\n   </a>\n  </p>\n </blockquote>\n <p>\n  the order he used was for the key you take one character from all the first four strings then the second then third till the end of these stings after the equal mark and repeat and for the IV you did the same for the last four strings\nso it results into this\n </p>\n <blockquote>\n  <p>\n   IV: F64D19C622D7C01176C3F02E0E941F31\n  </p>\n  <p>\n   Key (AES128) : B5662E0C6DEC255FD25A159A6CB3E454\n  </p>\n </blockquote>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": true,
            "comments": []
        }
    ]
}