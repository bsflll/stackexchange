{
    "title": "Problem while debugging with gdbserver in IDA Pro",
    "link": "https://reverseengineering.stackexchange.com/questions/6064/problem-while-debugging-with-gdbserver-in-ida-pro",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm new to debugging with IDA Pro and I ran into the problem that my breakpoint is not hit while attempting to debug with gdbserver. The program is written by myself and it is simple to debug with gdb. Can someone please help me regarding debugging with IDA? Here are the steps I perform for debugging:\n </p>\n <ol>\n  <li>\n   <p>\n    Start gdbserver version 7.7 configured as \"x86_64-linux-gnu\" in a terminal on my localhost like so:\n   </p>\n   <pre><code>$ gdbserver --multi localhost:1234\nListening on port 1234\n</code></pre>\n  </li>\n  <li>\n   <p>\n    Open a new database in IDA Pro version 6.6, set a breakpoint in the code, chose the \"Remote GDB\nDebugger\" and start a new process. The IDA output window shows the following\nmessage:\n   </p>\n   <pre><code>FFFFFFFFFFFFFFFF: process /home/benny/3-challenge has started (pid=0)\nFFFFD8F8: got SIGTRAP signal (Trace/breakpoint trap) (exc.code 5, tid 27171)\n</code></pre>\n  </li>\n  <li>\n   <p>\n    A\n    <strong>\n     Warning\n    </strong>\n    pops up in IDA giving me the following message:\n   </p>\n   <pre><code>FFFFD8F8: got SIGTRAP signal (Trace/breakpoint trap) (exc.code 5, tid 27171)\n</code></pre>\n  </li>\n  <li>\n   <p>\n    The terminal where the gdbserver is running shows the following\nmessage:\n   </p>\n   <pre><code>Remote debugging from host 127.0.0.1\nProcess /home/benny/3-challenge created; pid = 27171\n</code></pre>\n  </li>\n </ol>\n <p>\n  I guess the SIGTRAP may already be a problem, however, I don't understand why I get it. What am I doing wrong?\n </p>\n <p>\n  Anyway going further by ignoring the warning:\n </p>\n <ol start=\"5\">\n  <li>\n   <p>\n    The IDA Debug View shows the RIP at memory position\n    <code>\n     FFFFD8F8\n    </code>\n    which is in an unexplored region of the binary:\n    <code>\n     MEMORY:FFFFD8F8 db ?;\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    Press F9 in IDA pops-up an \"Exception Handling\" dialog, which looks like this\n    <img alt=\"enter image description here\" src=\"https://i.sstatic.net/bF849.png\"/>\n   </p>\n  </li>\n  <li>\n   <p>\n    Click \"Yes (pass to app)\", which terminates the execution of the debugging session and the IDA output window prints\n   </p>\n   <pre><code>Debugger: process has exited (exit code 5)\n</code></pre>\n  </li>\n </ol>\n <p>\n  While the output on the terminal running gdbserver prints\n </p>\n <pre><code>Child terminated with signal = 0x5 (SIGTRAP)\nreadchar: Got EOF\nRemote side has terminated connection.  GDBserver will reopen the connection.\nListening on port 1234\n</code></pre>\n <p>\n  Please let me know if you need more info.\n </p>\n <p>\n  UPDATE: I got fed up with GDB server and am now using Intel PIN for debugging, which works like a charm with IDA Pro.\n </p>\n</div>\n</body></html>",
    "votes": "7",
    "answers": 1,
    "views": "8k",
    "tags": [
        "ida",
        "debugging",
        "gdb",
        "x86-64"
    ],
    "user": "Benny",
    "time": "Oct 11, 2015 at 10:31",
    "comments": [
        {
            "user": "Stolas",
            "text": "<html><body><span class=\"comment-copy\">\n What are you debugging? It might hold some anti-debugging methods.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Benny",
            "text": "<html><body><span class=\"comment-copy\">\n As I said in the second sentence of my question: \"The program I am debugging is written by myself\". It is extremely simple and doesn't contain anti-debugging methods.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Stolas",
            "text": "<html><body><span class=\"comment-copy\">\n oops missed that. Sorry, can you share it so I can try to reproduce it on my boxes?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The\n  <code>\n   SIGTRAP\n  </code>\n  is generally raised by a debug break exception (\n  <code>\n   int 3\n  </code>\n  ).\n </p>\n <p>\n  When IDA receives it, it's asking you whether to pass it to the program (unhandled).  If you do, and you do not have a signal handler installed for\n  <code>\n   SIGTRAP\n  </code>\n  , the program will die with a\n  <code>\n   SIGTRAP\n  </code>\n  error, as you see.\n </p>\n <p>\n  You want IDA to\n  <strong>\n   discard\n  </strong>\n  the exception, and continue execution (if you want to continue) or\n  <strong>\n   suspend\n  </strong>\n  to investigate state in IDA.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Zach Riggle",
            "time": "Oct 13, 2014 at 21:55",
            "is_accepted": false,
            "comments": []
        }
    ]
}