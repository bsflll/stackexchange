{
    "title": "IOS ASLR address calculation with delta offset (ARM64)",
    "link": "https://reverseengineering.stackexchange.com/questions/30720/ios-aslr-address-calculation-with-delta-offset-arm64",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am learning\n  <code>\n   LLDB\n  </code>\n  to debug ios apps, I have a jailbroken iPhone IOS 14.3 and a debugserver.\n </p>\n <p>\n  Screenshot of start connect to remote process:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/IRvL1.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"here is a screenshot of start connect to remote process\" src=\"https://i.sstatic.net/IRvL1.png\"/>\n  </a>\n </p>\n <p>\n  Sections of my process(image dump sections hidenseek):\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/uW1qv.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"sections of my process\" src=\"https://i.sstatic.net/uW1qv.jpg\"/>\n  </a>\n </p>\n <p>\n  Next, I calculated the delta at the address from the disassembled unity engine as,\n  <code>\n   Delta = end of PAGEZERO - start of TEXT\n  </code>\n </p>\n <p>\n  This is the address of the function where I want to put a breakpoint:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/2Rbnd.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"breakpoint\" src=\"https://i.sstatic.net/2Rbnd.png\"/>\n  </a>\n </p>\n <p>\n  Hence,\n  <code>\n   Delta = 0x104a60000 - 0x10000000\n  </code>\n  =\n  <code>\n   0x4a60000\n  </code>\n </p>\n <p>\n  Then I consider the address, it will be equal to\n  <code>\n   delta + offset\n  </code>\n  in the disassembler,\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/ZJzD5.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"**resultant address **\" src=\"https://i.sstatic.net/ZJzD5.png\"/>\n  </a>\n </p>\n <p>\n  but it turns out to be an unknown address, I did the same as in the training video.\n </p>\n <p>\n  What am I doing wrong? How to calculate the correct address?\n </p>\n <p>\n  I would be glad for any help.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "280",
    "tags": [
        "disassembly",
        "ios",
        "lldb",
        "arm64"
    ],
    "user": "qazwsx135",
    "time": "Aug 8, 2022 at 0:23",
    "comments": [
        {
            "user": "raspiduino",
            "text": "<html><body><span class=\"comment-copy\">\n <code>\n  I did the same as in the training video.\n </code>\n Which video?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "qazwsx135",
            "text": "<html><body><span class=\"comment-copy\">\n <a href=\"https://youtu.be/_i_v6pWqDQQ\" rel=\"nofollow noreferrer\">\n  youtu.be/_i_v6pWqDQQ\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "qazwsx135",
            "text": "<html><body><span class=\"comment-copy\">\n in the video, the situation is approximately the same, but the addresses that I get are completely different from those in the debugger\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "raspiduino",
            "text": "<html><body><span class=\"comment-copy\">\n From\n <a href=\"https://stackoverflow.com/questions/48237769/lldb-disassemble-functions-at-pointer-location-obj-c-macos\">\n  this\n </a>\n , try\n <code>\n  disas -a 0x5e409a8\n </code>\n . You might also consider reading\n <a href=\"https://web.archive.org/web/20210123105652/https://kov4l3nko.github.io/blog/2016-04-27-debugging-ios-binaries-with-lldb/\" rel=\"nofollow noreferrer\">\n  this\n </a>\n , the ASLR section (but I don't fully understand his/her command in lldb)\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n Most you your screen shots just show terminal content. Such content should better be posted as text. Just copy and paste it into your question and format it as code. Screen shots are bad for readability and also bad if you want later search it as image content can't be searched.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  you can set a breakpoint using lldb on\n  <code>\n   func.013e09a8\n  </code>\n  like this:\n </p>\n <pre><code>b -a 0x013e09a8 -s AppExecutableName\n</code></pre>\n <p>\n  No manual ASLR calculations required. If you continue in\n  <code>\n   lldb\n  </code>\n  with\n  <code>\n   con\n  </code>\n  you should see something like:\n </p>\n <pre><code>    frame #0: 0x013e19a8 AppExecutableName`___lldb_unnamed_symbol139640$$AppExecutableName\nAppExecutableName`___lldb_unnamed_symbol139640$$AppExecutableName:\n->  0x013e19a8 <+0>:  stp    x22, x21, [sp, #-0x30]!\n    0x013e19ac <+4>:  stp    x20, x19, [sp, #0x10]\n    0x013e19a0 <+8>:  stp    x29, x30, [sp, #0x20]\n    0x013e19a4 <+12>: add    x29, sp, #0x20            ; =0x20\n</code></pre>\n <p>\n  The formula for ASLR shift is now:\n </p>\n <pre><code>p/x 0x013e19a8-0x013e09a8\n</code></pre>\n <p>\n  From this point provided your executable doesn't change (presumably by the means of AppStore autoupdate) you can also revisit this function with a symbolic breakpoint if you want to:\n </p>\n <pre><code>b ___lldb_unnamed_symbol139640$$AppExecutableName\n</code></pre>\n <p>\n  To convert the other way round i.e. the ASLR shifted address to the\n  <code>\n   0x100000000\n  </code>\n  base one (suitable for disassembler) use:\n </p>\n <pre><code>image lookup -a 0x013e19a8\n</code></pre>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Kamil.S",
            "time": "Dec 5, 2022 at 20:22",
            "is_accepted": false,
            "comments": []
        }
    ]
}