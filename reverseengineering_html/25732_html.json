{
    "title": "Python decompilation seems to return gibberish (partly)",
    "link": "https://reverseengineering.stackexchange.com/questions/25732/python-decompilation-seems-to-return-gibberish-partly",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I decompiled a pyc file with uncompyle6, and this is the result:\n </p>\n <pre><code># uncompyle6 version 3.7.3\n# Python bytecode 3.6 (3379)\n# Decompiled from: Python 3.6.9 (default, Aug 24 2020, 10:24:35) \n# [GCC 9.3.0]\n# Embedded file name: /dev/null/dev/null/dev/null/dev/null/crackme.py\n# Compiled at: 2020-06-30 20:00:00\n# Size of source mod 2**32: 545 bytes\nimport base64\nfrom zlib import decompress as ᥤ\nif __name__ == '__main__':\n    input_ = input('Enter your password: ')\n    password = base64.b64encode(input_.encode())\n    Þåçѡӧґд = (b'x\\xde\\xad\\xbe\\xef^\\x0b\\xf6\\xf5\\r\nv\\xf6\\xf0\\xa9\\x0e\\xa8,\\xc90\\xc8\\x8bO\\x8a,1\\x8eO6H1\\x8e7,\\xf6+\\x89/6N.-J\\xad\\x05\\x00\\xfc\\xe3\\rh').replace(b'\\xde\\xad\\xbe\\xef', b'')\n    if base64.b64decode(password) == ᥤ(Þåçѡӧґд):\n        print('The flag is', input_)\n    else:\n        print('Incorrect flag! Try reading my code…')\n# okay decompiling /home/kali/jscu/reversing1/crackme.pyc\n</code></pre>\n <p>\n  Clearly, the second password variable is gibberish, and I can't make much of the contents of that variable either. What could I try to make sense of this?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "167",
    "tags": [
        "python"
    ],
    "user": "Magusviper",
    "time": "Aug 24, 2020 at 14:57",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n it is all visible  there is no gibberish in there just think and execute fewlines  it isnt so secure\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It’s not gibberish, the code is simply using non-ASCII variable names which is\n  <a href=\"https://docs.python.org/3/reference/lexical_analysis.html#identifiers\" rel=\"nofollow noreferrer\">\n   perfectly fine in Python\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Aug 24, 2020 at 22:15",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Magusviper",
                    "text": "<span class=\"comment-copy\">You're right actually, my brain must've been fried yesterday. Thanks.</span>",
                    "time": null
                }
            ]
        }
    ]
}