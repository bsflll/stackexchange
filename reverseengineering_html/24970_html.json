{
    "title": "How to fix Mach-O segment section to deobfuscate the binary",
    "link": "https://reverseengineering.stackexchange.com/questions/24970/how-to-fix-mach-o-segment-section-to-deobfuscate-the-binary",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  When reversing a Mach-O\n  <code>\n   crackme\n  </code>\n  file under IDA Free and MacOS, the analysis output a log in the console window that yields warning about Mach-O segments.\n </p>\n <pre><code>Loading file 'target' into database...\nDetected file format: Mach-O file (EXECUTE). X86_64\n...\nAutoanalysis subsystem has been initialized.\nType library 'macosx64' loaded. Applying types...\nTypes applied to 0 names.\n0x10000A6F0: section file offset invalid: (5242; expected A6F0); possibly the file was modified to hinder analysis!\n  0. Creating a new segment  (000000010000A6F0-000000010044A776) ... ... OK\n0x10044A776: section file offset invalid: (4460BF; expected 44A776); possibly the file was modified to hinder analysis!\n  1. Creating a new segment  (000000010044A776-000000010044B5CE) ... ... OK\n0x10044B5D0: section file offset invalid: (44ADC0; expected 44B5D0); possibly the file was modified to hinder analysis!\n  2. Creating a new segment  (000000010044B5D0-000000010044CDB4) ... ... OK\n0x10044CDB4: section file offset invalid: (44C84B; expected 44CDB4); possibly the file was modified to hinder analysis!\n\n... etc [repeating]\n</code></pre>\n <p>\n  After analysis, the MachO is properly disassembled and I can continue reversing process. The issue arise when I try to decompile the same binary under Ghidra.\n </p>\n <p>\n  For some reason, Ghidra, nor any other disassemble/decompiler software, does not demangle and decompile the binary properly. It shows a lot of idbs and undefined ASM calls. Upon researching further, I found out this technique is shown in\n  <a href=\"https://iokit.racing/machotricks.pdf\" rel=\"nofollow noreferrer\">\n   MachO Tricks\n  </a>\n  by qw as Mach-O obfuscation tricks. A issue is raised in\n  <a href=\"https://github.com/NationalSecurityAgency/ghidra/issues/1823\" rel=\"nofollow noreferrer\">\n   Ghidra repository\n  </a>\n  too.\n </p>\n <p>\n  How to fix those segments via Ghidra, or any other tool for that matter so that the disassemble code will be readable and reversible?\n </p>\n <hr/>\n <p>\n  The binary is\n  <a href=\"https://www.hopperapp.com/\" rel=\"nofollow noreferrer\">\n   Hopper Disassembler\n  </a>\n  which is ALLOWED to be reverse engineered. As per ToS presented.\n </p>\n</div>\n</body></html>",
    "votes": "-2",
    "answers": 1,
    "views": "868",
    "tags": [
        "ida",
        "ghidra",
        "mach-o",
        "macos",
        "section"
    ],
    "user": "sensation",
    "time": "May 28, 2020 at 12:43",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Executable Mach-O files use\n  <em>\n   segment\n  </em>\n  load commands to represent loadable/mappable memory areas. They can be further split into\n  <em>\n   sections\n  </em>\n  .\n </p>\n <p>\n  IDAâ€™s Mach-O loader does not use the file offset field in the section headers. The data from file is loaded into database only using segment headers and then split into sections based on the address fields of the section headers.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "May 10, 2020 at 19:38",
            "is_accepted": false,
            "comments": [
                {
                    "user": "sensation",
                    "text": "<span class=\"comment-copy\">Thank Igor. I'm aware of <code>load_commands</code> in segments. Although quite informative, this answer does not help with my last question from the thread: how can we manually refix those segments so we can continue reversing in r2/lldb. Wish IDA had a way to export MachO binaries.</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">the question title was about IDA so I answered that part</span>",
                    "time": null
                }
            ]
        }
    ]
}