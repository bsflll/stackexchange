{
    "title": "Do you need a 64 bit disassembler like IDA Pro to disassemble 64 bit code?",
    "link": "https://reverseengineering.stackexchange.com/questions/16340/do-you-need-a-64-bit-disassembler-like-ida-pro-to-disassemble-64-bit-code",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  My question is simply can you reverse a 64 bit compiled code using a 64 bit disassembler (like IDA Pro 64 bit) or can you use a 32 bit code disassembler. I'm a little confused.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 5,
    "views": "6k",
    "tags": [
        "disassemblers"
    ],
    "user": "Dadji E",
    "time": "Sep 15, 2017 at 4:05",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <em>\n   No, you don't\n  </em>\n  .\n </p>\n <p>\n  Despite the name, \"IDA Pro 64\" allowed you to analyze 64-bit files but it was itself a 32-bit program (until version 7.0).\n </p>\n</div>\n</body></html>",
            "votes": "6",
            "user": "Igor Skochinsky",
            "time": "Sep 15, 2017 at 8:30",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The disassembler program can be of any bitness and platform. The programmer only needs to have an understanding of the file format. With this knowledge, you could implement an x64 disassembler even for a 16 bit CPU.\n </p>\n <p>\n  However, you might not be able to run and debug the code. But that's not a disassembler any more then.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Thomas Weller",
            "time": "Sep 15, 2017 at 6:43",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  your question is not clear \nif you are interested in only disassembling 64 bit code in a 32 bit computer using a 32 bit executable you can check disassemblers like\n  <strong>\n   <a href=\"http://www.airesoft.co.uk/disasm\" rel=\"nofollow noreferrer\">\n    disasm by airesoft\n   </a>\n  </strong>\n </p>\n <p>\n  or cook one using capstone etc\n </p>\n <p>\n  iirc hexeditors like hte or bdasm can also handle disassembling  64bit code in 32 bit computers haven't used them lately but i remember using them to disassemble elf files in windows\n </p>\n <p>\n  a sample output disassembly of x64 windbg.exe  wmain function ala objdump style using disasm.exe from airesoft\n </p>\n <pre><code>:\\>DisAsm.exe \"e:\\EWDK\\Program Files\\Windows Kits\\10\\Debuggers\\x64\\windbg.exe\" wmain -blf > foo.txt\n\n:\\>head foo.txt\ntwitter.com/ThatThereClaire\nNo size info found for wmain. Approximating...\nNo size info found for wmainCRTStartup. Approximating...\nwindbg!wmain:\n                           00000000`4003e458 488bc4          mov     rax,rsp\n                           00000000`4003e45b 48895808        mov     qword ptr [rax+8],rbx\n                           00000000`4003e45f 48897010        mov     qword ptr [rax+10h],rsi\n                           00000000`4003e463 48897818        mov     qword ptr [rax+18h],rdi\n                           00000000`4003e467 55              push    rbp\n                           00000000`4003e468 4154            push    r12\n</code></pre>\n <p>\n  you can also use\n  <strong>\n   windbg -z\n  </strong>\n  to disassemble a 64 bit binary in a 32 bit computer as shown below\n </p>\n <pre><code>C:\\>cdb  -z \"e:\\EWDK\\Program Files\\Windows Kits\\10\\Debuggers\\x64\\dbgeng.dll\"\n\nMicrosoft (R) Windows Debugger Version 10.0.15063.400 X86\n\nModLoad: 00000001`80000000 00000001`80626000   e:\\EWDK\\Program Files\\Windows Kits\\10\\Debuggers\\x64\\dbgeng.dll\n\n0:000> uf dbgeng!PopOutCtl\ndbgeng!PopOutCtl:\n00000001`80066160 4053            push    rbx\n00000001`80066162 4883ec20        sub     rsp,20h\n00000001`80066166 488bd9          mov     rbx,rcx\n00000001`80066169 e8ba070000      call    dbgeng!FlushCallbacks (00000001`80066928)\n00000001`8006616e 8b03            mov     eax,dword ptr [rbx]\n00000001`80066170 890566a65300    mov     dword ptr [dbgeng!g_OutputControl (00000001`805a07dc)],eax\n00000001`80066176 488b4308        mov     rax,qword ptr [rbx+8]\n00000001`8006617a 4889057f575400  mov     qword ptr [dbgeng!g_OutputClient (00000001`805ab900)],rax\n00000001`80066181 8b4310          mov     eax,dword ptr [rbx+10h]\n00000001`80066184 89056e575400    mov     dword ptr [dbgeng!g_BufferOutput (00000001`805ab8f8)],eax\n00000001`8006618a 8b4314          mov     eax,dword ptr [rbx+14h]\n00000001`8006618d 890565a65300    mov     dword ptr [dbgeng!g_OutputWidth (00000001`805a07f8)],eax\n00000001`80066193 488b4318        mov     rax,qword ptr [rbx+18h]\n00000001`80066197 48890542da5400  mov     qword ptr [dbgeng!g_OutputLinePrefix (00000001`805b3be0)],rax\n00000001`8006619e 4883c420        add     rsp,20h\n00000001`800661a2 5b              pop     rbx\n00000001`800661a3 c3              ret\n0:000> \n</code></pre>\n</div>\n</body></html>",
            "votes": "0",
            "user": "blabb",
            "time": "Sep 15, 2017 at 11:02",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  To add to many \"No\" responses: the latest \"64 bit disassembler/IDA Pro\" refers to the disassembler application itself - that it executes in 64 bit mode (a bit faster, and generally nicer to the OS, as they are all 64 bit there days). This has nothing to do with what code it can disassemble. The capabilities of the latest release are largely the same as previous, \"32-bit\" release. At least on the level of how most non-pros look at it.\n </p>\n <p>\n  64-bit IDA Pro will probably break all pre-compiled plugins, though, as they are all compiled in 32-bit mode. I haven't checked.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Vitaly Osipov",
            "time": "Sep 16, 2017 at 10:42",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As answered by others, you don't need a specific build of IDA Pro to disassemble 64-bit code, there're many other alternatives. For example\n  <a href=\"https://github.com/pfalcon/ScratchABit\" rel=\"nofollow noreferrer\">\n   ScratchABit\n  </a>\n  is free, open-source interactive disassembler which supports both 32-bit and 64-bit x86 code and is easily extensible to other architectures.\n </p>\n <p>\n  <img alt=\"ScratchABit screenshot\" src=\"https://i.sstatic.net/fe3lJ.png\"/>\n </p>\n</div>\n</body></html>",
            "votes": "-1",
            "user": "pfalcon",
            "time": "Dec 26, 2017 at 11:17",
            "is_accepted": false,
            "comments": []
        }
    ]
}