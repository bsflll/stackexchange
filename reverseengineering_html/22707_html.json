{
    "title": "Obtaining a relation between reads and writes with Pin",
    "link": "https://reverseengineering.stackexchange.com/questions/22707/obtaining-a-relation-between-reads-and-writes-with-pin",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'll be honest, Pin is confounding my intuition. Let's say, for the sake of argument, I have a line\n </p>\n <pre><code> a = b + c\n</code></pre>\n <p>\n  and I wish to then store the addresses of b and c as a's dependencies, say, in a map,\n </p>\n <pre><code>m[address of a].append(address of b, address of c)\n</code></pre>\n <p>\n  My current understanding of this involves\n </p>\n <pre><code>if (INS_IsMemoryRead(ins)||INS_IsMemoryWrite(ins))\nfor(memOp=0;memOp<INS_MemoryOperandCount(ins);memOp++)\nINS_InsertPredicatedCall(ins, IPOINT_BEFORE, (AFUNPTR) AnalysisFunction, IARG_MEMORYOP_EA, memOp, IARG_THREAD_ID, IARG_END);\n</code></pre>\n <p>\n  where AnalysisFunction would essentially take the memory address from the operation and somehow return it, or put it into a map. But I'm not entirely certain how to do that, or how to correlate the reads to writes properly.\n </p>\n <p>\n  Any help would be appreciated\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "54",
    "tags": [
        "pintool"
    ],
    "user": "Lsk",
    "time": "Dec 10, 2019 at 3:41",
    "comments": [],
    "answers_data": []
}