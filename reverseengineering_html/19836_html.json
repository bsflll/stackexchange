{
    "title": "Is there a way to get an instruction count with Radare2?",
    "link": "https://reverseengineering.stackexchange.com/questions/19836/is-there-a-way-to-get-an-instruction-count-with-radare2",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Let's say I want to find out how many instructions an arbitrary function\n  <code>\n   foo\n  </code>\n  decodes to, is there an easy way to do this?\n </p>\n <p>\n  I'm trying to check against a version I am compiling with a stored binary on the system. It takes more work than I'd like to spend to test to see if the binary has changed as I muck with the compile options. I'm trying to optimize for fewer instructions.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "880",
    "tags": [
        "radare2"
    ],
    "user": "Evan Carroll",
    "time": "Nov 7, 2018 at 8:02",
    "comments": [
        {
            "user": "user2347953",
            "text": "<html><body><span class=\"comment-copy\">\n Out of curiosity, why are you optimizing for smallest instruction count? In many ISAs (e.g. x86) that doesn't automatically translate to smallest binary or fastest executionâ€”the things people usually optimize for.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Evan Carroll",
            "text": "<html><body><span class=\"comment-copy\">\n @user2347953 fair question, because I'm trying to demonstrate vulnerabilities so speed and size isn't an issue. I'm rebuilding Protostar from source and optimizing for clarity. That means turning off things like alignment checks, canaries, and safety-wrappers\n <code>\n  __chk_*\n </code>\n functions etc.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can always add\n  <code>\n   ~?\n  </code>\n  to any radare command to count lines of the resulting output. But, like in Bash the pipe to\n  <code>\n   wc -l\n  </code>\n  also works,\n  <code>\n   |wc -l\n  </code>\n  . So in your case\n </p>\n <pre><code>[0x08049060]> pif~?\n18\n[0x08049060]> pif|wc -l\n18\n</code></pre>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Evan Carroll",
            "time": "Nov 9, 2018 at 20:52",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Well, it is not the exactly what you are asking, but could be useful for those, how are looking how to get\n  <code>\n   instructions number for the function\n  </code>\n  from\n  <code>\n   radare2\n  </code>\n  . When you are using\n  <code>\n   r2pipe\n  </code>\n  (a python API for radare2), you may execute radare2 commands \"aaa\" and \"aflj\" to get details for every function (including number of instructions). I suppose, these commands are available in radare2 cli, without API calls.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Dmytro Biriukov",
            "time": "Jul 25, 2022 at 7:59",
            "is_accepted": false,
            "comments": []
        }
    ]
}