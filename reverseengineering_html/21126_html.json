{
    "title": "Windows GUI app without GetMessage imported?",
    "link": "https://reverseengineering.stackexchange.com/questions/21126/windows-gui-app-without-getmessage-imported",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am currently trying to reverse an app and I have one very stupid question I cannot figure out by myself.\n </p>\n <p>\n  The app was packed using FSG 2.0 and I successfully manually unpacked it and rebuilt the IAT (at least I believe I did).\nThe app is a Windows 32 bits PE and it has a small GUI (it's a crackme that has one simple input and once you click ok, it just replies goodboy or badboy).\n </p>\n <p>\n  From what I can see, it imports the SendMessage function and actually uses it but I can't find any GetMessage (nor PeekMessage) function imported.\nConsidering it is a GUI, is that even possible ?\n </p>\n <p>\n  Any hints appreciated !\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "104",
    "tags": [
        "windows",
        "unpacking"
    ],
    "user": "reike",
    "time": "Apr 12, 2019 at 10:53",
    "comments": [
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n If the binary resolves those functions dynamically at run-time using\n <code>\n  GetProcAddress\n </code>\n (or other methods) you won't have a corresponding entry in the IAT.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "reike",
            "text": "<html><body><span class=\"comment-copy\">\n Thank you Sir for your answer. :) I didn't think about that. In that specific case, the binary doesn't even call GetProcAddress. However, for what it's worth, there is also a really good answer (the ticked one) that is related to my question here :\n <a href=\"https://reverseengineering.stackexchange.com/questions/3288/how-can-i-set-a-breakpoint-for-a-button-click\" title=\"how can i set a breakpoint for a button click\">\n  reverseengineering.stackexchange.com/questions/3288/â€¦\n </a>\n .\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Much of the functionality for GDI32 and User32 has some implementation in the NT Native API. So there's a chance some function from there gets called and does the equivalent of GetMessage. Also, no need to call\n <code>\n  GetProcAddress()\n </code>\n ... either use the NT Native API as well or better yet, walk the export table and find your desired function by hash.\n <a href=\"http://www.hick.org/code/skape/papers/win32-shellcode.pdf\" rel=\"nofollow noreferrer\">\n  The technique\n </a>\n is\n <b>\n  ancient\n </b>\n in terms of \"internet time\".\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "reike",
            "text": "<html><body><span class=\"comment-copy\">\n Thanks for all your insight, much appreciated !\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In case of it could be useful to someone else, I finally managed to understand how the Windows messages are handled in the program I'm trying to reverse (rather simple in fact). It's calling DialogBoxParamA (\n  <a href=\"https://docs.microsoft.com/en-us/windows/desktop/api/winuser/nf-winuser-dialogboxparama\" rel=\"nofollow noreferrer\">\n   https://docs.microsoft.com/en-us/windows/desktop/api/winuser/nf-winuser-dialogboxparama\n  </a>\n  ) : the before last parameter is a pointer to the procedure in charge of handling the messages.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "reike",
            "time": "Apr 15, 2019 at 10:56",
            "is_accepted": true,
            "comments": []
        }
    ]
}