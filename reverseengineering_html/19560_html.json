{
    "title": "Analyze raw assembly using IDA Pro",
    "link": "https://reverseengineering.stackexchange.com/questions/19560/analyze-raw-assembly-using-ida-pro",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a raw assembly dump i.e.\n </p>\n <pre><code>.intel_syntax noprefix\n.bits 32\n.global main    \n\nmain:\n    push   ebp\n...\n</code></pre>\n <p>\n  And I know it's Intel x86 and the original function was most likely written in C. Now the question is whether I could use IDA to reverse this and get the original function?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "assembly"
    ],
    "user": "S. L.",
    "time": "Oct 6, 2018 at 15:15",
    "comments": [
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n IDA disassembles binaries. (It's what \"IDA\" stands for.) What you\n <i>\n  have\n </i>\n here is disassembled code, as plain text. What do you hope IDA will do with it?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "S. L.",
            "text": "<html><body><span class=\"comment-copy\">\n Ideally spit out some nice pseudocode?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n From a text file? No. It needs a binary.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "mrexodia",
            "text": "<html><body><span class=\"comment-copy\">\n If you assemble the file you can load it in ida\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "S. L.",
            "text": "<html><body><span class=\"comment-copy\">\n @mrexodia that could work. can I just use gcc?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  IDA does not accept assembly input, so you need to convert it to some binary format first. This is generally done with an\n  <em>\n   assembler\n  </em>\n  , such as GNU Assembler or\n  <code>\n   gas\n  </code>\n  (part of GNU Binutils and usually installed with\n  <code>\n   gcc\n  </code>\n  ), or different alternative assemblers such as\n  <code>\n   nasm\n  </code>\n  ,\n  <code>\n   yasm\n  </code>\n  ,\n  <code>\n   fasm\n  </code>\n  and so on. If you need help assembling a specific file, you can ask on\n  <a href=\"https://stackoverflow.com/\">\n   Stack Overflow\n  </a>\n  , providing as much info as possible.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Oct 15, 2018 at 19:40",
            "is_accepted": true,
            "comments": [
                {
                    "user": "S. L.",
                    "text": "<span class=\"comment-copy\">This worked like a charm: I compiled the original snippet and got into a good old executable and then was able to analyze that with IDA and dump some useable pseudocode. Not exactly reverse engineer of the year over here but it works!</span>",
                    "time": null
                }
            ]
        }
    ]
}