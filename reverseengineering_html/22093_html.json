{
    "title": "How is `va_list` implemented in Assembler level on ARMv7 Android?",
    "link": "https://reverseengineering.stackexchange.com/questions/22093/how-is-va-list-implemented-in-assembler-level-on-armv7-android",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I need to extract all arguments from\n  <code>\n   CallStaticObjectMethodV\n  </code>\n  JNI call on ARMv7 Android at Assembler level.\n </p>\n <p>\n  Can anyone advice how is\n  <code>\n   va_list\n  </code>\n  implemented on low level in ARMv7 Android?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "374",
    "tags": [
        "assembly",
        "arm"
    ],
    "user": "Vitalii",
    "time": "Sep 10, 2019 at 8:22",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  From\n  <em>\n   Procedure Call Standard for the ARMÂ® Architecture\n  </em>\n  (ARM IHI 0042E):\n </p>\n <p>\n  Typedef:\n  <code>\n   va_list\n  </code>\n </p>\n <p>\n  Base type:\n </p>\n <pre><code>struct __va_list {\nvoid *__ap;\n}\n</code></pre>\n <p>\n  Notes:\n </p>\n <blockquote>\n  <p>\n   A\n   <code>\n    va_list\n   </code>\n   may address any object in a parameter list. Consequently,\n  the first object addressed may only have word alignment (all objects\n  are at least word aligned), but any double-word aligned object will\n  appear at the correct double-word alignment in memory. In C++,\n   <code>\n    __va_list\n   </code>\n   is in namespace\n   <code>\n    std\n   </code>\n   .\n  </p>\n </blockquote>\n <p>\n  So basically it's just a pointer to the word-aligned arguments in memory.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Sep 10, 2019 at 9:45",
            "is_accepted": true,
            "comments": []
        }
    ]
}