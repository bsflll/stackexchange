{
    "title": "How to prepend offset to smart names?",
    "link": "https://reverseengineering.stackexchange.com/questions/22432/how-to-prepend-offset-to-smart-names",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  So I'm trying to reassemble an PE to ELF so I can debug it with rr.\n </p>\n <p>\n  However masm report duplicate symbol errors. It's because it doesn't enforce scope to it's variables so smart names cause conflicts. If they were postfixed with stack or data offset respectively there wouldn't be such problems.\n </p>\n <p>\n  Alternatively maybe there is a switch in masm which can correct those errors.\n </p>\n <blockquote>\n  <p>\n   TRAOD_P4_orig.exe.v2.data.asm(1058192) : error A2005:symbol\n  redefinition : Args TRAOD_P4_orig.exe.v2.data.asm(2724112) : error\n  A2005:symbol redefinition : Dest\n  </p>\n </blockquote>\n <pre><code>; LINE somewhere in the code above\nDest            = byte ptr -404h\nArgs            = byte ptr  10h\n\n; LINE 1058192\n; char Args[]\nArgs            dd ?                    ; DATA XREF: _Caption_Draw:loc_523425\\u2191r\n\n; LINE 2724112\n; char Dest\nDest            db ?                    ; DATA XREF: sub_42DF68+38\\u2191o\n</code></pre>\n <p>\n  <strong>\n   Apparently there was even a case where Memory was both a local variable and a data reference in the same function.\n  </strong>\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "51",
    "tags": [
        "ida",
        "assembly"
    ],
    "user": "rec",
    "time": "Nov 11, 2019 at 1:50",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n what are \"smart names\"?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "rec",
            "text": "<html><body><span class=\"comment-copy\">\n @IgorSkochinsky Args Src Dest FullPath - names that are deduced by their usage.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n can you maybe add a code snippet and a sample of some error messages?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "rec",
            "text": "<html><body><span class=\"comment-copy\">\n @IgorSkochinsky I did include that.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n Thanks. I donâ€™t have suggestions for now but the problem is more clear.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}