{
    "title": "Automated instruction analysis of dynamic memory",
    "link": "https://reverseengineering.stackexchange.com/questions/29700/automated-instruction-analysis-of-dynamic-memory",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Introduction to problem: I have a binary executable with an unknown network packet protocol. I want to reverse engineer this packet protocol. My current way of doing it is to send some data and step through the instructions in disassembly to try to figure out what the application is doing with this data, and gradually construct the correct protocol. This solution is extremely inefficient. So I want to automate at least a part of this process.\n </p>\n <p>\n  Assuming that my network receive function is:\n  <code>\n   int recv(SOCKET s, char * buf, int len, int flags);\n  </code>\n </p>\n <p>\n  What I want to do is to automate instruction tracking for all instructions reading the chunk of memory pointed by\n  <code>\n   char * buf\n  </code>\n </p>\n <pre><code>mov eax, [globalRecvBufferPointer]\nmov dl, [eax]\ncmp dl, 20h\njz somewhere\n</code></pre>\n <p>\n  In the example above, I want my automated tool to detect\n  <code>\n   mov dl, [eax]\n  </code>\n  and\n  <code>\n   cmp dl, 20h\n  </code>\n  instructions.\n  \n\n  Adding a hardware r/w breakpoint to\n  <code>\n   char * buf\n  </code>\n  lets me detect\n  <code>\n   mov dl, [eax]\n  </code>\n  but not the other.\n  \n\n  Another problem I can think of at this stage is when memory pointed by\n  <code>\n   char * buf\n  </code>\n  is copied to stack or other memory locations.\n </p>\n <p>\n  Are there ready-made tools for this kind of operation? If not, are there tools where I can implement this idea?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "91",
    "tags": [
        "packet",
        "automation"
    ],
    "user": "AcarX",
    "time": "Dec 10, 2021 at 13:09",
    "comments": [
        {
            "user": "user202729",
            "text": "<html><body><span class=\"comment-copy\">\n Isn't this impossible in the general case? Like if it do\n <code>\n  add dl, 1\n </code>\n and\n <code>\n  cmp dl, 21h\n </code>\n â€” there's always the option of decompiling the program and just look at the source, what's the issue with that?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "AcarX",
            "text": "<html><body><span class=\"comment-copy\">\n @user202729 What I described can be done manually and is what I currently do. I'm currently looking  into dynamic binary instrumentation frameworks which might be the tool that can help me implement this idea.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user202729",
            "text": "<html><body><span class=\"comment-copy\">\n If the instruction has that exact format it's possible to use gdb Python scripting to parse the assembly listing or something.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "lockcmpxchg8b",
            "text": "<html><body><span class=\"comment-copy\">\n Unicorn Engine may be of interest; I've used it to emulate functions within a running program, but I've never tried to inject it into someone else's program...should be about the same.  Major issue will be handling system calls.  You'll have to set breaks to drop out of unicorn, actually run the call, then poke the results back into the emulated state.  Unicorn has built-in memory access hooks.  As an alternative, I posted complete code to\n <a href=\"https://stackoverflow.com/questions/47426472/how-to-remote-control-gdb-on-linux/47445907#47445907\">\n  remote-control GDB here\n </a>\n (warning, slow!)\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Sounds like you want dynamic taint analysis. There is a well-supported, open-source option called\n  <a href=\"https://github.com/panda-re/panda\" rel=\"nofollow noreferrer\">\n   Panda\n  </a>\n  . If you have money to spend, check out the commercial offering\n  <a href=\"https://www.tetrane.com/\" rel=\"nofollow noreferrer\">\n   Reven\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Rolf Rolles",
            "time": "Dec 14, 2021 at 4:15",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Ta Thanh Dinh",
                    "text": "<span class=\"comment-copy\">Reven releases <a href=\"https://blog.tetrane.com/2021/Launching-REVEN-Free-Edition.html\" rel=\"nofollow noreferrer\">free editions</a> recently. Otherwise, implementing dynamic taint analysis with help of some DBI tools would be fun.</span>",
                    "time": null
                }
            ]
        }
    ]
}