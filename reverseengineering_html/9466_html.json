{
    "title": "Use the functionality available in the unknown DLL [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/9466/use-the-functionality-available-in-the-unknown-dll",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed\n        </b>\n        . This question needs to be more\n        <a href=\"/help/closed-questions\">\n         focused\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       <b>\n        Want to improve this question?\n       </b>\n       Update the question so it focuses on one problem only by\n       <a href=\"/posts/9466/edit\">\n        editing this post\n       </a>\n       .\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2015-07-30 10:39:57Z\">\n        9 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/9466/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  Consider I have got a DLL file which contains some functions and classes that I am not aware of. It might be lack of documentation, or the unwillingness of the programmer to provide the documentation after the release. I want to know, how can I study an unknown DLL file and utilize it in my projects? ( Of course the programmer gives such permission )\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "281",
    "tags": [
        "ida",
        "disassembly",
        "ollydbg",
        "reassembly"
    ],
    "user": "FreeMind",
    "time": "9 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <em>\n   I can't post comments for now, since I'm new on this forum\n  </em>\n </p>\n <p>\n  I'm not sure I fully understand your level of understanding here. Do you know some basic stuff in reversing field ?\n </p>\n <p>\n  If so, you should load your DLL in OllyDbg (for example) then click on\n  <strong>\n   Debug\n  </strong>\n  >\n  <strong>\n   Call DLL export\n  </strong>\n  to locate the API you're interested in. \nThen it's classic reversing session.\n </p>\n <p>\n  Otherwise, if you need more specifics, I strongly recommend you to buy \"Secrets of reverse engineering - Eldad Eilam\" book, in which there is a fully detailed example of a DLL reverse session.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Hackndo",
            "time": "Jul 27, 2015 at 13:42",
            "is_accepted": true,
            "comments": [
                {
                    "user": "FreeMind",
                    "text": "<span class=\"comment-copy\">I am newbie in Reversing field. By the way, if I export the functions of interest, how can I know what parameters they exactly use? How can I gather some pieces of information on their usage? In addition, I have got the EXE file which utilizes that DLL. Is that EXE file an advantage? How can it be one? I am already reading the mentioned book but takes time to reach that topic.</span>",
                    "time": null
                },
                {
                    "user": "Hackndo",
                    "text": "<span class=\"comment-copy\">Well, that's a long process and explaining it here would take some time. I suggest you first write your own little simple programs, such as a printf, then load it into ollydbg, and try to understand the asm. Regarding the input arguments, assuming stdcall calling convention is used, you can see the \"return\" statement at the end of your function, followed by a number. This number indicates the size of the stack that needs to be cleared (i.e. calling arguments). Knowing that sizeof(arg) &gt;= 4 bytes, you have at least this number/4 arguments sent to your prog. I have 1 char left to keep writing !</span>",
                    "time": null
                },
                {
                    "user": "Hackndo",
                    "text": "<span class=\"comment-copy\">EXE files using functions you are interested in can be useful, especially if you have access to the source code of these programs (I know you knew !). The important thing to remember is that reversing takes some time, and the more you have information about something you want to reverse, the best. If you can't gather everything you want by only reversing the DLL (maybe you won't know what type of variable are used), then reversing the .exe could be some useful help, since you have a context and you can guess when and why is this API used. Hope it gives you some usefule pieces of information !</span>",
                    "time": null
                }
            ]
        }
    ]
}