{
    "title": "Understanding of some assembly lines",
    "link": "https://reverseengineering.stackexchange.com/questions/6141/understanding-of-some-assembly-lines",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  i have the following assembly lines:\n </p>\n <pre><code>....\nLEA   EAX, DWORD PTR DS:[0x404212]\nMOV   DWORD PTR SS:[EBP-0x3CC], EAX\nPUSH  DWORD PTR SS:[EBP-0x3CC]\n...\n...\n...\nLEA   EAX, DWORD PTR DS:[0x404213]\nMOV   DWORD PTR SS:[EBP-0x3D0], EAX\nPUSH  DWORD PTR SS:[EBP-0x3D0]\n...\n...\n</code></pre>\n <p>\n  So, I asked myself how I can that piece of code translate into a higher language like C? Or a pseudo C language?\n </p>\n <p>\n  But, for the the two blocks I have the following:\n </p>\n <pre><code> UNKNOWNTYPE *eax_pointer_1;     //points to 00404212\n UNKNOWNTYPE *eax_pointer_2;     //points to 00404213\n</code></pre>\n <p>\n  In ollydbg, I see that at the address 00404212 there is the following line :\n </p>\n <pre><code>ADD BYTE PTR DS:[EAX], DH\n</code></pre>\n <p>\n  and at the address 00404213, there is:\n </p>\n <pre><code>XOR BYTE PTR DS:[EAX], AL\n</code></pre>\n <p>\n  So my question would be : Is that a correct transformation? Have you some ideas how I can the instructions at\n  <strong>\n   00404212\n  </strong>\n  and\n  <strong>\n   00404213\n  </strong>\n  make part of my transformation into a pseudo-C language?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 2,
    "views": "3k",
    "tags": [
        "assembly"
    ],
    "user": "user3097712",
    "time": "Aug 29, 2014 at 23:58",
    "comments": [
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n If you are sure these pointers point to a function (and not data), then your\n <code>\n  UNKNOWNTYPE *\n </code>\n is a\n <a href=\"http://www.cprogramming.com/tutorial/function-pointers.html\" rel=\"nofollow noreferrer\">\n  function pointer\n </a>\n . To \"make them part\" of the entire code, convert the pointed-to instructions to a separate function as well.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user3097712",
            "text": "<html><body><span class=\"comment-copy\">\n ok, thx for your answer.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <p>\n   In ollydbg, I see that at the address\n   <code>\n    00404212\n   </code>\n   there is the\n  following line:\n  </p>\n  <pre><code>ADD BYTE PTR DS:[EAX], DH\n</code></pre>\n  <p>\n   And, at the address\n   <code>\n    00404213\n   </code>\n   , there is:\n  </p>\n  <pre><code>XOR BYTE PTR DS:[EAX], AL\n</code></pre>\n </blockquote>\n <p>\n  I dont think those are code, rather variables, are they in a code/execute section ?\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "DCoder",
            "time": "Sep 2, 2014 at 7:10",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user3097712",
                    "text": "<span class=\"comment-copy\">No, they are not in a code/execute section. I only jump to that two addressesÂ´ by right-clicking in ollydbg and then \"Go To -&gt; Expression\"</span>",
                    "time": null
                },
                {
                    "user": "Jongware",
                    "text": "<span class=\"comment-copy\">Well, that invalidates my earlier comment. Examine the data at that point to guess the type of the pointer.</span>",
                    "time": null
                },
                {
                    "user": "Abr001am",
                    "text": "<span class=\"comment-copy\">these two lines are data segment where arguments are pointing to, its abslutly useless to translate em into asm instructions !</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It looks like the address of something (maybe an array element) is being taken and that is being used to set up call frame for later use.  Something\n  <em>\n   very\n  </em>\n  roughly like:\n </p>\n <pre><code>void f(void){\n  void *x = &someMemory;\n  void *y = &someMemory2;\n\n  g(y,x);\n}\n</code></pre>\n <p>\n  caveat lector.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "BitShifter",
            "time": "Sep 3, 2014 at 15:30",
            "is_accepted": false,
            "comments": []
        }
    ]
}