{
    "title": "Automatically convert x86 assembly to C",
    "link": "https://reverseengineering.stackexchange.com/questions/4642/automatically-convert-x86-assembly-to-c",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Just started out with x86 assembly and slowly getting the hang of it. IDA produces nice graphs that make it much easier to follow all the jumps and function calls and stuff.\n </p>\n <p>\n  I've looked at examples of arithmetics, control flow, loops, and function calls, and feel that I could reasonably take a chunk of instructions and reproduce the same logic in Java or C.\n </p>\n <p>\n  Are there tools that will automatically take assembly and convert it to, say, C? I imagine for some people that at some point it becomes more of a chore than an exercise after doing it for years.\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 2,
    "views": "28k",
    "tags": [
        "disassembly",
        "x86"
    ],
    "user": "MxLDevs",
    "time": "Jun 19, 2014 at 21:16",
    "comments": [
        {
            "user": "MxLDevs",
            "text": "<html><body><span class=\"comment-copy\">\n An example I saw before is a simple XOR encryption algorithm that used a 64 KB key for some reason. That's not something you want to type out manually...\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "perror",
            "text": "<html><body><span class=\"comment-copy\">\n Decompilation is not that simple, the most complex thing is about rebuilding the high-level structures of the program that have been lost during the compilation process (variables, functions, modules/classes, ...).\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "MxLDevs",
            "text": "<html><body><span class=\"comment-copy\">\n @perror I'm thinking more along the lines of subroutines and low-level structures. For example, after digging around with a debugger I've pinpointed the exact set of subroutines that perform a certain operation, and that is all that I need. Oh except there are a million instructions involved.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Paul",
            "text": "<html><body><span class=\"comment-copy\">\n You can use decompiler in IDA to produce a C file. It's not included in free version of IDA though.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Yes, that type of tool is called a\n  <a class=\"post-tag\" href=\"/questions/tagged/decompiler\" rel=\"tag\" title=\"show questions tagged 'decompiler'\">\n   decompiler\n  </a>\n </p>\n <p>\n  Several examples below:\n </p>\n <ul>\n  <li>\n   <a href=\"https://www.hex-rays.com/products/decompiler/index.shtml\" rel=\"noreferrer\">\n    Hex-Rays Decompiler\n   </a>\n  </li>\n  <li>\n   <a href=\"http://www.hopperapp.com/\" rel=\"noreferrer\">\n    Hopper\n   </a>\n  </li>\n  <li>\n   <a href=\"http://www.backerstreet.com/rec/rec.htm\" rel=\"noreferrer\">\n    REC Studio\n   </a>\n  </li>\n  <li>\n   <a href=\"http://derevenets.com/\" rel=\"noreferrer\">\n    SmartDec\n   </a>\n  </li>\n  <li>\n   <a href=\"https://retdec.com/\" rel=\"noreferrer\">\n    Retargetable Decompiler\n   </a>\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "12",
            "user": "Vladislav Ivanov",
            "time": "Mar 8, 2017 at 17:26",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  There's also\n  <a href=\"https://github.com/frranck/asm2c\" rel=\"nofollow noreferrer\">\n   asm2c\n  </a>\n  that works on assembly source code instead of executables or objects files.\n </p>\n <blockquote>\n  <p>\n   Swift tool to transform DOS/PMODEW 386 TASM Assembly code to C code\n  </p>\n </blockquote>\n</div>\n</body></html>",
            "votes": "0",
            "user": "franck",
            "time": "Mar 8, 2017 at 9:39",
            "is_accepted": false,
            "comments": []
        }
    ]
}