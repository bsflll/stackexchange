{
    "title": "Ghidra function pointers to another file in project",
    "link": "https://reverseengineering.stackexchange.com/questions/22044/ghidra-function-pointers-to-another-file-in-project",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Given a function pointer which is obtained dynamically using dlsym, how can I tell Ghidra that that pointer points to a function in another .so that I have open in same project for which I have already done some parameter renaming etc.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ghidra"
    ],
    "user": "Konrads",
    "time": "Sep 5, 2019 at 8:16",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you follow the function pointer to where the actual function's address is in your first binary, you should see something similar to this.\n </p>\n <pre><code>00870808 09 00 00 80     addr      <EXTERNAL>::Function_Something\n</code></pre>\n <p>\n  Right click the operand (the\n  <code>\n   <EXTERNAL>...\n  </code>\n  part) and select '\n  <em>\n   Edit External Location\n  </em>\n  '. A new dialog window will pop up.\n </p>\n <p>\n  In this window, click the '\n  <em>\n   Edit\n  </em>\n  ' button next to the '\n  <em>\n   Path\n  </em>\n  ' field and select your\n  <code>\n   .so\n  </code>\n  file.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "perror",
            "time": "Jan 21, 2020 at 8:48",
            "is_accepted": false,
            "comments": []
        }
    ]
}