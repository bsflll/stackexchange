{
    "title": "ELF file format find shared object for symbol",
    "link": "https://reverseengineering.stackexchange.com/questions/22640/elf-file-format-find-shared-object-for-symbol",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  (in Windows) PE file format contains Import table with\n  <code>\n   Module\\Dll Name\n  </code>\n  which tells PE loader where to search for symbol e.g.\n  <code>\n   KERNEL32.dll -> CreateFileW\n  </code>\n </p>\n <p>\n  In the ELF file format there is\n  <code>\n   Symbol table\n  </code>\n  with\n  <code>\n   info\n  </code>\n  field which tells if the symbol is\n  <code>\n   Global\\Local\\Weak\\etc.\n  </code>\n </p>\n <p>\n  My question is how does the Unix loader know what is the module, shared object where to search for this symbol e.g.\n  <code>\n   ???? -> snprintf\n  </code>\n </p>\n <p>\n  I noticed objdump can dump this info\n  <code>\n   objdump -T /bin/ls\n  </code>\n  .\n  <a href=\"https://i.sstatic.net/laK3P.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/laK3P.png\"/>\n  </a>\n  <code>\n   GLIBC_2.2.5 snprintf\n  </code>\n </p>\n <p>\n  Could someone with more knowledge on ELF file format shed some light on Unix dynamic-linking?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "310",
    "tags": [
        "elf",
        "dynamic-linking"
    ],
    "user": "krusty",
    "time": "Nov 29, 2019 at 12:21",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <p>\n   how does the Unix loader know what is the module,\n  shared object where to search for this symbol\n  </p>\n </blockquote>\n <p>\n  Short answer: it does not. It just searches the whole list of loaded modules until the symbol is found (or not). A small degree of control over more exact symbol matching can be achieved via versioned symbols but otherwise it's pretty much a free-for-all.\n </p>\n <p>\n  By design, the ELF symbol space is\n  <strong>\n   global\n  </strong>\n  (or flat) so any symbol can be\n  <em>\n   preempted\n  </em>\n  by another module. This is used for example when\n  <a href=\"http://www.goldsborough.me/c/low-level/kernel/2016/08/29/16-48-53-the_-ld_preload-_trick/\" rel=\"nofollow noreferrer\">\n   hooking symbols via LD_PRELOAD_LIBRARY environment variable\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Igor Skochinsky",
            "time": "Nov 29, 2019 at 13:28",
            "is_accepted": true,
            "comments": []
        }
    ]
}