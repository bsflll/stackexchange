{
    "title": "I can't understand this algorithm",
    "link": "https://reverseengineering.stackexchange.com/questions/23480/i-cant-understand-this-algorithm",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <strong>\n   I'm trying to solve this challenge but I can't understand the algorithm.\n  </strong>\n </p>\n <p>\n  it takes the name and generate the serial with this algoritm\n </p>\n <pre><code>private int Encrypt(string Input)\n        {\n            int num = 0;\n            checked\n            {\n                int num2 = Input.Length - 1;\n                int num3 = num;\n                int num6;\n                for (;;)\n                {\n                    int num4 = num3;\n                    int num5 = num2;\n                    if (num4 > num5)\n                    {\n                        break;\n                    }\n                    char @string = Conversions.ToChar(Input.Substring(num3));\n                    num6 = (int)Math.Round(unchecked(Conversions.ToDouble(Conversion.Oct(Strings.Asc(Conversions.ToString(num6))) + Conversion.Oct(Strings.Asc(@string))) + 666.0));\n                    num3++;\n                }\n                return num6;\n            }\n        }\n</code></pre>\n <p>\n  <strong>\n   for example, I entered 'A' and calculated serial as shown:\n  </strong>\n  num6 = octal + octal + decimal\n </p>\n <p>\n  ‘A’ = 65 = 101 in octal\n </p>\n <p>\n  666 = 1232 in octal\n </p>\n <p>\n  num6 = 0\n </p>\n <p>\n  num6: \nOctal = 0 + 101 + 1232 = 1333\n </p>\n <p>\n  Decimal = 731\n </p>\n <p>\n  but the output is : 60767\n </p>\n <p>\n  How?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "89",
    "tags": [
        ".net"
    ],
    "user": "Raafat",
    "time": "Mar 21, 2020 at 6:46",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n it appears you get garbage because num6 isn't initialized and also since len(\"A\") ==1 you rbreak kicks in and returns num6 which is garbage\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You have missed a couple of things.\n </p>\n <ul>\n  <li>\n   num6 isn't used directly - it's first converted to a string and then the ascii code is used\n  </li>\n  <li>\n   the first addition isn't an addition - it's a string concatenation.\n  </li>\n </ul>\n <p>\n  In cases like this where there are so many conversions going on, you really need to break it down and take it step at a time.\n </p>\n <p>\n  e.g.\n </p>\n <pre><code>First Part\n\n    Conversion.Oct(Strings.Asc(Conversions.ToString(num6)))\n        = Conversion.Oct(Strings.Asc(Conversions.ToString(0)))\n        = Conversion.Oct(Strings.Asc(\"0\"))\n        = Conversion.Oct(48)\n        = \"60\"\n\nSecond Part\n\n    Conversion.Oct(Strings.Asc(@string))\n        = Conversion.Oct(Strings.Asc('A'))\n        = Conversion.Oct(65)\n        = \"101\"\n\nPutting it together\n\n    Conversions.ToDouble(\"60\"+ \"101\") + 666\n        = Conversions.ToDouble( \"60101\") + 666\n        = 60101 + 666\n        = 60767\n</code></pre>\n <p>\n  Alternatively, just paste the code into a simple C#/VB console application and run it to see what happens.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Ian Cook",
            "time": "Mar 21, 2020 at 9:29",
            "is_accepted": true,
            "comments": []
        }
    ]
}