{
    "title": "Reverse engineering firmware to CD/DVD drive to enable scrambled mode support",
    "link": "https://reverseengineering.stackexchange.com/questions/30199/reverse-engineering-firmware-to-cd-dvd-drive-to-enable-scrambled-mode-support",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am a volunteer of the redump.org project, the goal of our website is to archive game CDs in the best possible quality. Unfortunately, this site requires only DiscImageCreator to be used for CD and DVD dumping. Unfortunately, my drive is incompatible with this program. I checked all the firmware for it that I found and none is compatible with the indicated program. I miss scrambled mode (opcode 0xBE) support. I have a question. Is it possible to disassemble the drive software and modify it to enable the desired mode? Unfortunately, I am completely new to it and I am a bit afraid of damaging the drive, but maybe it would be possible to find the indicated opcode in the firmware? My drive is a Toshiba TS-L632H.\n </p>\n <hr/>\n <p>\n  OK, a lot has changed in this topic, I learned a lot of new things, so I can write all I need:\nWell, from what I figured out, I need the \"scrambled mode\" which means that the drive reads data sectors as audio sectors. So the only thing I need is to find a place in the firmware where the BE opcode checks whether a given sector is a sector with data and disable this check (and I also found a document -\n  <a href=\"https://aircconline.com/ijcsit/V14N4/14422ijcsit01.pdf\" rel=\"nofollow noreferrer\">\n   https://aircconline.com/ijcsit/V14N4/14422ijcsit01.pdf\n  </a>\n  )\nWell, in practice, I don't really know where to start. There is some bootloader in the firmware of my drive that I can't break through and most likely all these BE type opcodes are in the bootloader. I reversed some of this firmware, but I still don't know where to look for these BE opcodes. The architecture of the firmware I determined was most likely the 8051\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "327",
    "tags": [
        "firmware"
    ],
    "user": "MrPepka",
    "time": "Feb 18, 2023 at 14:46",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Hi and welcome to RE.SE. I think the general answer to your question is a: yes, as long as you are able to read/dump its firmware and write it back changed. However, that said I wonder if it wouldn't be better to acquire a supported drive instead?! Reverse engineering is usually a slow process, especially when you bring no prior experience. This is not to discourage you. If you feel like\n <i>\n  this\n </i>\n is what you want to do, please do. However, even in this case your question lacks a bit of focus. You may want to check out\n <a href=\"https://reverseengineering.stackexchange.com/questions/tagged/hardware\">\n  hardware\n </a>\n and\n <a href=\"https://reverseengineering.stackexchange.com/questions/tagged/firmware\">\n  firmware\n </a>\n for starters.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Usually you would either start by finding a firmware update package from the vendor or disassemble the hardware to dump the loaded firmware from it. Then you'd try to determine the structure of the firmware and the controller hardware to be able to disassemble anything ... and so on. It's a tedious and research-intensive process. But it's also rewarding to be successful in the end.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "MrPepka",
            "text": "<html><body><span class=\"comment-copy\">\n Unfortunately, I can only connect a USB drive to my computer, and those compatible with the DIC program are very expensive. An IDE drive with an IDE-USB adapter and all this cabling will not fit on my desk, I ignore the difficulties with getting the right adapter, and the SATA drive and the SATA-USB adapter will also be more expensive for me. And could the MCSE program (after it was disassembled) and the CoasterMeIt project help me at least 1% in disassembling the firmware? -\n <a href=\"http://ala42.cdfreaks.com/MCSE/\" rel=\"nofollow noreferrer\">\n  ala42.cdfreaks.com/MCSE\n </a>\n <a href=\"https://github.com/scanlime/coastermelt\" rel=\"nofollow noreferrer\">\n  github.com/scanlime/coastermelt\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n I'm afraid I don't know definitive the answer to either of those two questions. If the controller is a similar model, perhaps some of tools are applicable to your drive. But I get now why you perceive the RCE effort your only path forward. Good luck! Let's hope someone with prior experience can help out. Perhaps you could also reach out to the author(s) of CoasterMelt?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "MrPepka",
            "text": "<html><body><span class=\"comment-copy\">\n I did some research on the internet and found 2 projects like that:\n <a href=\"http://forum.rpc1.org/\" rel=\"nofollow noreferrer\">\n  forum.rpc1.org\n </a>\n <a href=\"https://github.com/devilsclaw/flasher\" rel=\"nofollow noreferrer\">\n  github.com/devilsclaw/flasher\n </a>\n The first is a mine of firmware, patchers, etc. for CD / DVD drives, and the second project, although so far probably only works with LG drives, has some potential to create open source software for CD / DVD drives. However, I have no contact with its author\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}