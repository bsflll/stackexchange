{
    "title": "How do I access the TEB in PIN?",
    "link": "https://reverseengineering.stackexchange.com/questions/13365/how-do-i-access-the-teb-in-pin",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In PIN's documentation it says this about\n  <code>\n   PIN_SafeCopy\n  </code>\n  :\n </p>\n <blockquote>\n  <p>\n   PIN_SafeCopy is used to copy the specified number of bytes from a\n  source memory region to a destination memory region. This function\n  guarantees safe return to the caller even if the source or destination\n  regions are inaccessible (entirely or partially). Use of this function\n  also guarantees that the tool reads or writes the values used by the\n  application. For example, on Windows, Pin replaces certain TEB fields\n  when running a tool's analysis code. If the tool accessed these fields\n  directly, it would see the modified values rather than the original\n  ones. Using PIN_SafeCopy() allows the tool to read or write the\n  application's values for these fields.\n  </p>\n </blockquote>\n <p>\n  I'm trying to get the stack base of the current thread. Normally I would get it like this (if going directly through\n  <code>\n   FS\n  </code>\n  ):\n  <code>\n   mov eax, FS:[0x04]\n  </code>\n  . Since I'm getting the old stack, and not the \"new\" one maintained by PIN (if I compare the\n  <code>\n   REG_ESP\n  </code>\n  from PIN with the current\n  <code>\n   ESP\n  </code>\n  they show different stacks) I tried to first get the linear address of the TEB with\n  <code>\n   mov eax, FS:[0x18]\n  </code>\n  and then use\n  <code>\n   PIN_SafeCopy\n  </code>\n  to read from this address + 0x04. However I only get 0x00000000. Any idea how I can do this? Also I suppose this makes it risky to use the Win API if it reads from such stale sources of data?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "208",
    "tags": [
        "windows",
        "winapi",
        "pintool"
    ],
    "user": "Seralize",
    "time": "Aug 26, 2016 at 0:15",
    "comments": [],
    "answers_data": []
}