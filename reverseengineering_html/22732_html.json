{
    "title": "x86 disassembly confusion regarding VESA functions",
    "link": "https://reverseengineering.stackexchange.com/questions/22732/x86-disassembly-confusion-regarding-vesa-functions",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to disassemble an old DOS application and got stuck at some point of the VESA graphics handling.\n </p>\n <p>\n  The VESA function to be called will be stored in a global variable, e.g.\n  <code>\n   vesa_fct_dword_749C8 = 0x4f00\n  </code>\n  ,\n  <code>\n   0x4f01\n  </code>\n  , etc.\nAfter checking the return value, the application will do some additional magic, which I, frankly, don't understand. My guess is that it will check for a specific error return value (\n  <code>\n   0x01\n  </code>\n  , in particular), but I'm really not quite sure about it and how it's actually done.\n </p>\n <p>\n  Here's the relevant snippet:\n </p>\n <pre><code>cseg01:000159D8 loc_159D8:                              ; CODE XREF: checkForVesa+D4â†‘j\ncseg01:000159D8                 mov     eax, vesa_fct_dword_749C8\ncseg01:000159DD                 mov     edx, vesa_fct_dword_749C8\ncseg01:000159E3                 sar     edx, 1Fh\ncseg01:000159E6                 shl     edx, 8\ncseg01:000159E9                 sbb     eax, edx\ncseg01:000159EB                 sar     eax, 8\ncseg01:000159EE                 and     eax, 0FFh\ncseg01:000159F3                 cmp     eax, 1\ncseg01:000159F6                 jnz     short loc_15A01\ncseg01:000159F8                 mov     [ebp+var_4], 0\ncseg01:000159FF                 jmp     short loc_15A29\n</code></pre>\n <p>\n  Maybe someone knows what's up with that part, that would be really appreciated!\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "81",
    "tags": [
        "ida",
        "disassemblers",
        "dos"
    ],
    "user": "Mentulatus",
    "time": "Dec 13, 2019 at 20:05",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This code takes the most significant bit of\n  <code>\n   EAX\n  </code>\n  (\n  <code>\n   msb(EAX)\n  </code>\n  ) and then, it subtracts it from\n  <code>\n   AH\n  </code>\n  and compares the result to\n  <code>\n   1\n  </code>\n  . According to\n  <a href=\"https://www.versalogic.com/Support/Downloads/pdf/69030bg.pdf\" rel=\"nofollow noreferrer\">\n   this specification\n  </a>\n  (\"VBE Return Status\" section):\n </p>\n <ul>\n  <li>\n   <code>\n    AX = 014F\n   </code>\n   =>\n   <code>\n    AH = 1\n   </code>\n   means \"\n   <em>\n    Function call failed\n   </em>\n   \"\n  </li>\n  <li>\n   <code>\n    AX = 024F\n   </code>\n   =>\n   <code>\n    AH = 2\n   </code>\n   means \"\n   <em>\n    Function is not supported in current hardware configuration\n   </em>\n   \"\n  </li>\n </ul>\n <p>\n  And the\n  <code>\n   jnz\n  </code>\n  instruction will be executed if\n  <code>\n   msb(EAX) = 1\n  </code>\n  and\n  <code>\n   AH = 2\n  </code>\n  , or when\n  <code>\n   msb(EAX) = 0\n  </code>\n  and\n  <code>\n   AH = 1\n  </code>\n  . Unfortunately, I don't know what information is stored in\n  <code>\n   msb(EAX)\n  </code>\n  (maybe something related to VBE version?).\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "bart1e",
            "time": "Dec 14, 2019 at 15:21",
            "is_accepted": false,
            "comments": []
        }
    ]
}