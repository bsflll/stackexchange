{
    "title": "Creating a struct in IDA which contains a cString?",
    "link": "https://reverseengineering.stackexchange.com/questions/3047/creating-a-struct-in-ida-which-contains-a-cstring",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Normally I struct is a fixed size. Is it possible to define a structure which contains an element which has different sizes?\n </p>\n <p>\n  To illustrate what I mean is this.\n </p>\n <p>\n  The layout of the data in the file looks like this:\n </p>\n <pre><code>ID          WORD 0\nFunctionPtr DWORD OFFSET Fkt\nName        db 'Name of the function',0\nalign 4\n</code></pre>\n <p>\n  'Name' is now a C-String which is as long until it reaches the 0-byte at the end and then follows the align instruction. So is it possible to tell IDA that the structure is including the string, no matter how long it is?\n </p>\n</div>\n</body></html>",
    "votes": "6",
    "answers": 2,
    "views": "3k",
    "tags": [
        "ida",
        "struct"
    ],
    "user": "Devolus",
    "time": "Nov 17, 2013 at 14:38",
    "comments": [
        {
            "user": "lfxgroove",
            "text": "<html><body><span class=\"comment-copy\">\n Are you sure that that's how it's actually implemented in the code? At least in c this would be the place where you either have a static array of some fixed size or a pointer to the beginning of the string which you have\n <code>\n  malloced\n </code>\n space for. If that isn't the case the struct (once again thinking c, sorry) would have to have different names for all the different sizes or be some kind of union.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Devolus",
            "text": "<html><body><span class=\"comment-copy\">\n Yes, I'm sure. There is a counter value at the head, which tells how many entries there are, and the follows an array of such structures.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Unless the string is at the\n  <em>\n   end\n  </em>\n  of the structure, it doesn't make sense to try and make this struct in IDA, because it probably doesn't even exist in C (or whatever the original language was).\n </p>\n <p>\n  Now if the string\n  <em>\n   is\n  </em>\n  at the end of the struct, this might correlate to an actual C struct definition. This is called a\n  <a href=\"http://gcc.gnu.org/onlinedocs/gcc/Zero-Length.html\" rel=\"nofollow\">\n   \"zero-length\" array, or \"flexible array member\"\n  </a>\n  . Of course, the size of this array is zero, as far as\n  <code>\n   sizeof\n  </code>\n  is concerned.\n </p>\n <p>\n  Unfortunately, this still doesn't exist in IDA. What I've done in the past (again, where the string is\n  <em>\n   last\n  </em>\n  ) is go ahead and create a one-byte field, so you at least know where the string starts.  This will complicate things if you try to use\n  <code>\n   size mystruct\n  </code>\n  for any constants in the code, but at least your string offset will be correct.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Jonathon Reinhart",
            "time": "Nov 19, 2013 at 4:10",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  IDA introduced \"Variable Length Structures\" and describe the usage of it with a very straight forward\n  <a href=\"https://www.hex-rays.com/products/ida/support/tutorials/varstr/\" rel=\"nofollow noreferrer\">\n   tutorial\n  </a>\n  .\n </p>\n <p>\n  In short, you need to make sure the \"flexible\" item is the last item of the struct, and define it as an array of size 0. To do this, define a new struct member\n  <code>\n   char Name\n  </code>\n  , click on it and press\n  <kbd>\n   *\n  </kbd>\n  . Then, set the \"Array size\" to 0.\n </p>\n <p>\n  Now, the shortcoming is that IDA won't look for a null terminator to define the string, but instead, you'd have to tell it its size every time you want to use the structure.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Megabeets",
            "time": "Dec 31, 2020 at 9:14",
            "is_accepted": false,
            "comments": []
        }
    ]
}