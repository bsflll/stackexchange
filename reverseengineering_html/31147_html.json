{
    "title": "How to obtain import name from disassembled assembly",
    "link": "https://reverseengineering.stackexchange.com/questions/31147/how-to-obtain-import-name-from-disassembled-assembly",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to create my own tools for reverse engineering PE. I have some assembly codes that I fetched from a clone of objdump for a program. Sometimes I see\n  <code>\n   call\n  </code>\n  instructions such as :\n </p>\n <pre><code>callq *0x1de15(%rip)\n</code></pre>\n <p>\n  I have understood from previous answers that those instructions might be a reference to an import. I'm interested into compositing a list of import that the program uses.\n </p>\n <p>\n  However, I do not understand how I could translate that address to the name of Import. I know that \"jumping to that address (?) I can find a stub\" but I do not know how to handle that. I have parsed the import table.\n </p>\n <p>\n  Is there a way to connect that address to import name?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "61",
    "tags": [
        "disassembly",
        "windows",
        "binary-analysis",
        "pe"
    ],
    "user": "onerom",
    "time": "Nov 18, 2022 at 10:05",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Hi and welcome to RE.SE. Since the address is based on the\n <i>\n  current\n </i>\n instruction pointer we're seeing an offset-based call. There is no indication an import is involved (but it could be!). Let's assume at this offset there's a stub related to some imported function, that means you are dealing with an offset understood at runtime. So you need to wrap your head around the distinction of RVA vs. VA and figure out\n <i>\n  where\n </i>\n the offset leads. If it's an import stub it should be evident (different parts of the PE), if it's within a code section that should also be obvious ... good luck.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "onerom",
            "text": "<html><body><span class=\"comment-copy\">\n Thanks for the answer. For sure there's an import in that address because I'm double checking with tools such as Ghidra. I do not know how Ghidra/IDA lookup for that import. I guess I could convert that address to a virtual address, check the main file to that address (a seek operation) and decode the bytes as assembly instructions? And then how can I find the import name from the stub?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "onerom",
            "text": "<html><body><span class=\"comment-copy\">\n Update for the people that probably need an answer: follow the offset --> find where you are ---> if it's an import, check the content pointed to that offset and compare that content to the Thunk of import. :-)\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}