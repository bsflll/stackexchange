{
    "title": "Why won't IDA let me name this variable?",
    "link": "https://reverseengineering.stackexchange.com/questions/21674/why-wont-ida-let-me-name-this-variable",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I went to stack view and named it counter, and now it appears at the top of my function, although it didn't until I named it.\n  <a href=\"https://i.sstatic.net/YIWc7.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/YIWc7.png\"/>\n  </a>\n </p>\n <p>\n  The name didn't propagate over to the program, as you can see in the mov instruction in this block.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/Voq9F.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/Voq9F.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "292",
    "tags": [
        "ida"
    ],
    "user": "gerbik",
    "time": "Jul 14, 2019 at 20:11",
    "comments": [
        {
            "user": "Avery3R",
            "text": "<html><body><span class=\"comment-copy\">\n IDA doesn't look like it's resolving stack variable references. Try to right click on one of the\n <code>\n  [esp+XXh]\n </code>\n operands and see if you can select variable\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  First of all,\n  <code>\n   [esp+5Ch]\n  </code>\n  is not the value of counter. The numbers next to the names of variables / arguments on stack are offsets with respect to\n  <code>\n   ebp\n  </code>\n  .\n </p>\n <p>\n  So\n  <code>\n   [ebp-5Ch]\n  </code>\n  is the value of the variable counter.\n </p>\n <p>\n  And since the variables are accessed via\n  <code>\n   esp\n  </code>\n  , not\n  <code>\n   rbp\n  </code>\n  and there is stack aligning instruction (\n  <code>\n   and esp, FFFFFFF0\n  </code>\n  ), I\n  <em>\n   guess\n  </em>\n  IDA is not sure if that instruction will change\n  <code>\n   esp\n  </code>\n  or not, so it won't rename\n  <code>\n   [esp + offset]\n  </code>\n  to an argument or variable, since\n  <code>\n   esp\n  </code>\n  could have different values modulo\n  <code>\n   16\n  </code>\n  (i.e.\n  <code>\n   and esp, FFFFFFF0\n  </code>\n  will not change\n  <code>\n   esp\n  </code>\n  if\n  <code>\n   esp = 11111110\n  </code>\n  , but will change it when\n  <code>\n   esp = 11111118\n  </code>\n  ) and thus different values with respect to\n  <code>\n   ebp\n  </code>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "bart1e",
            "time": "Jul 14, 2019 at 20:44",
            "is_accepted": true,
            "comments": [
                {
                    "user": "eyal karni",
                    "text": "<span class=\"comment-copy\">Never seen stack alignment instruction before. Is it common?</span>",
                    "time": null
                },
                {
                    "user": "bart1e",
                    "text": "<span class=\"comment-copy\">It will be called almost in every <code>main</code> function while compiling with GCC. See <a href=\"https://reverseengineering.stackexchange.com/questions/21414/elf-x86-why-is-return-address-pushed-twice/21417#21417\" title=\"elf x86 why is return address pushed twice\">reverseengineering.stackexchange.com/questions/21414/â€¦</a></span>",
                    "time": null
                },
                {
                    "user": "eyal karni",
                    "text": "<span class=\"comment-copy\">Yeh I do reversing on Windows. Thanks, though</span>",
                    "time": null
                }
            ]
        }
    ]
}