{
    "title": "R.java to xml file",
    "link": "https://reverseengineering.stackexchange.com/questions/6469/r-java-to-xml-file",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  How does\n  <code>\n   R.java\n  </code>\n  work? In a compiled .apk file, does it contain all constants from the XML files prior to compilation? I've decompiled an app using several Java RE tools, and used\n  <code>\n   apktool\n  </code>\n  to extract the resources (xml files, images and others). However, when rebuilding the project in Eclipse, the\n  <code>\n   R.java\n  </code>\n  generated by Eclipse (in the\n  <code>\n   gen\n  </code>\n  folder) does not match the original\n  <code>\n   R.java\n  </code>\n  from the decompiled app. Is this a common occurrence when reversing android apps? In this case, the original R.java contains fields consistent with the rest of the code. However, this is not present in the generated R.java and hence this error.\n </p>\n <p>\n  The decompilers I used are\n </p>\n <p>\n  1)\n  <a href=\"http://www.android-decompiler.com\" rel=\"nofollow noreferrer\">\n   JEB\n  </a>\n  (Commercial)\n </p>\n <p>\n  2)\n  <a href=\"https://github.com/skylot/jadx\" rel=\"nofollow noreferrer\">\n   jadx\n  </a>\n  (Open-source)\n </p>\n <p>\n  <img alt=\"enter image description here\" src=\"https://i.sstatic.net/4BXHG.png\"/>\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "decompilation",
        "android",
        "java"
    ],
    "user": "Nederealm",
    "time": "Oct 16, 2014 at 4:25",
    "comments": [
        {
            "user": "Nederealm",
            "text": "<html><body><span class=\"comment-copy\">\n why the downvote?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Could you clarify what's the question?! I see two sentences with a question mark, but neither has a lot to do with reverse engineering.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Nederealm",
            "text": "<html><body><span class=\"comment-copy\">\n Ok, I reworded the question. Hope it's clearer to understand\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The R.java file created by jadx exists to be a reference between the resources id after compilation and the name of the resource mentioned throughout the code.\n </p>\n <p>\n  If you wish to recompile it, it is possible to recreate something that looks like the original xml files by creating a script that ignores a part of the prefix and searches for the resource's name. Once it is located inside the xml files, specify the correct one.\n </p>\n <p>\n  And I think that apktool provides a much better reference to the resources xml files.\n </p>\n <p>\n  But if what you wanna do is make just a small change, it will be faster to do it with smali and use apktool to put it all back together again.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "DarkLighting",
            "time": "Nov 4, 2014 at 20:57",
            "is_accepted": true,
            "comments": []
        }
    ]
}