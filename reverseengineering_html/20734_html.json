{
    "title": "What is this assembly in the `__common` section doing?",
    "link": "https://reverseengineering.stackexchange.com/questions/20734/what-is-this-assembly-in-the-common-section-doing",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have stumbled upon this:\n </p>\n <pre><code>public _oret\n__common:0000000100018000 _oret:                             \n\n__common:0000000100018000 sub     [rdi+4Fh], al\n__common:0000000100018003 db      4Fh\n__common:0000000100018003 and     [rdi+4Fh], r10b\n__common:0000000100018008 push    rdx\n__common:0000000100018009 and     [r8], rsp\n__common:000000010001800C db      40h, 46h, 43h\n__common:000000010001800C xor     r14d, [r14]\n__common:0000000100018012 xor     eax, 0A20h\n</code></pre>\n <p>\n  What is this doing exactly? My RAX points here, but I don't understand anything about what the purpose of this is.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "130",
    "tags": [
        "assembly"
    ],
    "user": "G. Ramistella",
    "time": "Feb 27, 2019 at 18:56",
    "comments": [
        {
            "user": "sudhackar",
            "text": "<html><body><span class=\"comment-copy\">\n This looks like a string, not code. It starts with (GOOD WOR..\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "G. Ramistella",
            "text": "<html><body><span class=\"comment-copy\">\n How did you figure that out?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "sudhackar",
            "text": "<html><body><span class=\"comment-copy\">\n With\n <code>\n  pwntools\n </code>\n installed I can assemble and look at the hex dump like this\n <code>\n  asm -c amd64 \"sub [rdi+0x4F], al; .byte 0x4F; and [rdi+0x4F], r10b; push rdx; and [r8], rsp; .byte 0x40, 0x46, 0x43; xor r14d, [r14]; xor eax, 0xA20;\" | hd\n </code>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  it is easily discoverable if you look at the bytes in a dump window or hex editor\n </p>\n <p>\n  or if you don't have  the bytes but only the disassembly in text form\nyou can use some assembler like keystone to assemble it and dump\n  \n\n  the bytes as printable characters\n </p>\n <pre><code>C:\\>cat ge0snow.py\nfrom keystone import *\nimport binascii\n\ncode = [\n    \"sub [rdi+4Fh], al\",\n    \"db 04Fh\",\n    \"and [rdi+4Fh], r10b\",\n    \"push rdx\",\n    \"and [r8], rsp\",\n    \"db 040h\",\n    \"db 046h\",\n    \"db 043h\",\n    \"xor r14d, [r14]\",\n    \"xor eax, 0A20h\",\n]\nks = Ks(KS_ARCH_X86,KS_MODE_64)\nfor i in range(0,len(code),1):\n    if( code[i][:2] == \"db\"):\n        print (binascii.a2b_hex(code[i][4:6])),\n    else:\n        foo = ks.asm(code[i])\n        for j in foo[0]:\n            print chr(int(j)),\n\n\nC:\\>python ge0snow.py\n( G O O D   W O R I !   @ F C E 3 6 5\n</code></pre>\n</div>\n</body></html>",
            "votes": "3",
            "user": "blabb",
            "time": "Feb 27, 2019 at 22:59",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The\n  <code>\n   __common\n  </code>\n  section seems to be typical from Mach-O format. It contains uninitialized external globals, similar to\n  <code>\n   static\n  </code>\n  variables.\n </p>\n <p>\n  In your case, it holds a constant string as blabb showed it. But, you should better display it as a string (and not as code).\n </p>\n <p>\n  See:\n  <a href=\"https://developer.apple.com/library/archive/documentation/Performance/Conceptual/CodeFootprint/Articles/MachOOverview.html\" rel=\"nofollow noreferrer\">\n   Overview of the Mach-O Executable Format\n  </a>\n  , from the Apple \"\n  <a href=\"https://developer.apple.com/library/archive/documentation/Performance/Conceptual/CodeFootprint/CodeFootprint.html\" rel=\"nofollow noreferrer\">\n   Introduction to Code Size Performance Guidelines\n  </a>\n  \".\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "perror",
            "time": "Mar 2, 2019 at 10:08",
            "is_accepted": false,
            "comments": []
        }
    ]
}