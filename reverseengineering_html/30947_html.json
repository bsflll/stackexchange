{
    "title": "Redirect exception handler?",
    "link": "https://reverseengineering.stackexchange.com/questions/30947/redirect-exception-handler",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm working on a localization project and have a few trampoline hooks to translate some text in an online game. Periodically throughout gameplay, there are checks that run in the background to ensure the\n  <code>\n   .text\n  </code>\n  section of the game hasn't been modified. Of course I've done this with the existence of trampoline hooks, so the check fails and I'm met with what looks like a custom error code of\n  <code>\n   INVALID_CALL_1\n  </code>\n  .\n </p>\n <p>\n  I've attempted for months to figure out how this checksum is calculated, but I don't believe I have the skills necessary to figure this out, so I'm looking at other options.\n </p>\n <p>\n  I'm wondering if this logic seems reasonable, but would you theoretically be able to re-direct how the exception is handled using something like\n  <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/errhandlingapi/nf-errhandlingapi-setunhandledexceptionfilter\" rel=\"nofollow noreferrer\">\n   SetUnhandledExceptionFilter\n  </a>\n  to check if the exception matches\n  <code>\n   INVALID_CALL_1\n  </code>\n  and have it return\n  <code>\n   EXCEPTION_CONTINUE_EXECUTION\n  </code>\n  instead? I don't mind doing the work, but wanted to know if my logic is flawed as I haven't worked with the Windows API all that much and am unsure where to ask this question.\n </p>\n <p>\n  Thanks.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "54",
    "tags": [
        "function-hooking",
        "winapi",
        "game-hacking",
        "exception"
    ],
    "user": "isuckatreversing",
    "time": "Oct 3, 2022 at 18:31",
    "comments": [
        {
            "user": "Rolf Rolles",
            "text": "<html><body><span class=\"comment-copy\">\n Can you elaborate on what makes you sure that there's an exception thrown somewhere, as opposed to, say, an if-statement?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}