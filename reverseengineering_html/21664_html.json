{
    "title": "IDA taking forever to run autoanalysis on remote Android app?",
    "link": "https://reverseengineering.stackexchange.com/questions/21664/ida-taking-forever-to-run-autoanalysis-on-remote-android-app",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I've disassembled and run auto-analysis on a .so file from an Android apk, and then hooked up the remote ARM debugger to an emulator. IDA then asked me if /data/app/com.package.name/lib/arm/libil2cpp.so is the same file as libil2cpp.so on my computer, which it is so I said yes. It took a few minutes to \"move database\", \"move functions\", etc. and now it's taking hours to perform auto-analysis all over again on the mapped files.\n </p>\n <p>\n  Is there any way to speed this up, and will it happen every time I start a remote debugging session?\n </p>\n <p>\n  Follow-up question: I learned that this is caused by IDA rebasing the program every time. Why can't it just use offsets from the start of the program and avoid rerunning the static analysis?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ida",
        "android"
    ],
    "user": "Akababa",
    "time": "Jul 17, 2019 at 2:09",
    "comments": [
        {
            "user": "MazeGen",
            "text": "<html><body><span class=\"comment-copy\">\n Isn't it because of rebasing? What version of IDA do you use?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Akababa",
            "text": "<html><body><span class=\"comment-copy\">\n Yeah it is... I'm using 32-bit IDA Pro 7.0.170914.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "MazeGen",
            "text": "<html><body><span class=\"comment-copy\">\n I didn't try it but with IDA 7.3 the rebasing should be much faster:\n <a href=\"https://www.hex-rays.com/products/ida/7.3/index.shtml\" rel=\"nofollow noreferrer\">\n  hex-rays.com/products/ida/7.3/index.shtml\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I can confirm that the rebasing is much faster with IDA 7.4, and it seems to be addressed in\n  <a href=\"https://www.hex-rays.com/products/ida/7_3/\" rel=\"nofollow noreferrer\">\n   version 7.3\n  </a>\n  :\n </p>\n <blockquote>\n  <p>\n   Another debugger related news is fast rebasing. Due to widespread use of ASLR, processes get loaded into a new address every time and IDA needs to adjust the database: move all segments to the addresses that the operating system assigned to them. This was a slow process that could take literally hours for big databases.\n  </p>\n  <p>\n   In IDA 7.3 we implemented another approach for rebasing which is up to 40 times faster and usually takes only a matter of seconds. You no longer have an excuse to take a coffee break every time you start a new debugging session. This makes our debuggers even more pleasant to use ðŸ˜‰\n  </p>\n </blockquote>\n <p>\n  However, I can't answer the follow-up question.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": []
        }
    ]
}