{
    "title": "Stuck on trying to understanding local TCP communication for a smart home app",
    "link": "https://reverseengineering.stackexchange.com/questions/32943/stuck-on-trying-to-understanding-local-tcp-communication-for-a-smart-home-app",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to write a Home Assistant integration to control smart lights and other smart devices from a certain manufacturer locally (it is a local manufacturer who have their own app which is not Tuya-based). Using mitmproxy I can see back and forth TCP communication between the app and the hub which is encoded. Every command I give on the app (to turn a certain light on or off) produces a 172 characters command with a 108 characters response. The first 44 characters of the commands and responses are similar for commands and for responses (one for commands and one for responses), however, they are not consistent between logins. I tried Base64 decoding which didn't make any sense. I am familiar with the app communication with the cloud and can make sense of that communication but not the local one.\n </p>\n <p>\n  I tried to de-compile the android app to see if I can figure out what transformation/encoding/encryption is being performed but I get more than 5000 java files and don't know where to begin. There are some files under the 'app' directory that deal with UTP communication but I don't understand Java and am not sure if they are relevant.\n </p>\n <p>\n  Here are some examples of commands, each one of the same command:\n </p>\n <p>\n  Turn on a certain light:\n </p>\n <pre><code>AblWcUNtYRP/941nu88+TxQQXByUKM2kMbc+WZWN117WIgXQ3rqIz6EItM/o76dfmRn5K4NWtUDQnHxe7nVTw1v5DenaWhOSuqpgJyIX4ztaMLZM4eh4d+gh2ZFTTArXQ0+dKIgVUcelBzfMtXmnUm/mekdwHL5S+O+KcN9sfzof\nAblWcUNtYRP/941nu88+TxQQXByUKM2kMbc+WZWN117WEFGjThRYvwdKDSx8dnK07VHERETtmTpKWhGBDCWE5ALGlCNVeqVc5coIyOAiROmbDmjybqJxpANor6h1+G930TixgjpGOxFTqoyOJ15hTBnr3ZetsU6cUQDGgLTFi6GU\nAblWcUNtYRP/941nu88+TxQQXByUKM2kMbc+WZWN117WMxSbwsErz/QUGnX09nXnt5iwYEyYyy45PYggt69bHQ/eLRrMG+qfNC8t3U7f9fjygFKBUmHpkhSLEUeEdObEGsXd5VuHHwDK9YUX+RGk1BbAwqiK/YhPJeH2Xw9373AN\nAblWcUNtYRP/941nu88+TxQQXByUKM2kMbc+WZWN117WfB2L8qUEL/pUy6BGclL0KbB+hHFbmiw6XoHXTR+XgtMZyclfgfdRdcKa6E5fWwt/7LdvV02PsKn09H5PzhIT/b+y07NPErJg6N30sFYiKet4gfLzttz58GZZ+asU8GGN\n</code></pre>\n <p>\n  Turn off the same light:\n </p>\n <pre><code>AblWcUNtYRP/941nu88+TxQQXByUKM2kMbc+WZWN117WaFOXFjS1KzETKfpPZ7xdYt6oSw28E/YldWG4wrRpaDPannbMiCnzTmgY6+Y+Xcqz1sf1qWv3JZXzPUJuC3ojrodMhL/mjwfoHOirLIcRrLm3BWyejX216pG3eZqbR8zv\nAblWcUNtYRP/941nu88+TxQQXByUKM2kMbc+WZWN117WXLmMczba2/2zb/fg1Ui5qccAgw1Jq/KlNi8aGZMWVdFbFxef2coOsx+UGHC4aUK4weKCjNogE0sEMR5EwHwmruT9kX3IbotIB29hGmpcAN/sySMdzCOTE2+LGDMSHWLA\nAblWcUNtYRP/941nu88+TxQQXByUKM2kMbc+WZWN117Wv8O2W3l+Q41hFSoEb9o2lxWlbfIqko4XczhEIt4iTqmVvfUx9GSZ+cOoE8L3tu8w/gNIv+WTa5yKRqV9qQIpuM28z8Bj1QC3clK6y1gdC2QCsx7SMKeYcEdHK0g9BrL5\nAblWcUNtYRP/941nu88+TxQQXByUKM2kMbc+WZWN117W+x5jRVGE9EsN4C/d7YG0c+WmjCb4DArr17skILy7pk4t4/bnu42xlWM6RIQmWXe6WeRzWFdMV4GjE5k6sRUJwnyG0xV3lh7Xp3sz8msqotEURLXZo6epwSuqmoH5RvSp\n</code></pre>\n <p>\n  Turn on another light:\n </p>\n <pre><code>AblWcUNtYRP/941nu88+TxQQXByUKM2kMbc+WZWN117WsqbwinPD6wVE3xnbQMp90kBVKZdlUJgrnrobCCnRjJlyQn9PrtxVJfiqcTbGaQwfGkrVLAt/3dZGlctB2tQOytazA+M75y+6JOoy8odJfQPPBdr/TqFjawM7o39bX/n0\nAblWcUNtYRP/941nu88+TxQQXByUKM2kMbc+WZWN117WOpJpj40+dd3ANYeFlRcvhke4Rc42EvZ9hf/5gaRmB517fIYTGUs/IVLXRqVIbdSqCGG1nUFxbrLqLko0XbPgfOxdvEbSlvPFsW/PjHuXsowxx4XXixM7AvhuZH7O7RnO\nAblWcUNtYRP/941nu88+TxQQXByUKM2kMbc+WZWN117WsMaH7B2xFaI0x/Hq6kX5cCm64rEECYvONsTteWeEvhq4Z66H38budyTk1G/5NBdV4VSCVkfqVWore7Qp13U8xC2V8Qp+ugPOW4N+/h4OoIqEooLLvjC7wPV7Tv6jGrFe\nAblWcUNtYRP/941nu88+TxQQXByUKM2kMbc+WZWN117WYUnMGglhfTLKs/AHtWEhV5TT06ZHmK1BbVQiRfQsa/IPlNWARdasDb/zmAj/5HdTzTjn38ogGHaG/TfYTqQYmYaZvihNEDnNY8cfTtyWHLIEPieBv1JwUAsdZze7mn5q\n</code></pre>\n <p>\n  On a previous login, this was the command sent when I turned on a third light:\n </p>\n <pre><code>ARXuX4bz4dhWa7WRc+oTFYD6Ohro526F9upLwb9UpPASrgoNSKfLXQGf+s6SuKxnB5U606y9E4FS1AEF9UovEG3HOREjeq0/UqYXrxaIjBiXm2vLj3/NoFxNf8RwIvrpo9TtsTNM+yd+ftwk/0Jfxyxvy60St5GPGNHXwXfLgdZt\n</code></pre>\n <p>\n  I can also see communication when the lights are changed outside the app (i.e. physically by the switch).\n </p>\n <p>\n  Any suggestions as to where to go from here?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "45",
    "tags": [
        "decompilation",
        "java"
    ],
    "user": "Mazemeshane",
    "time": "May 5, 2024 at 10:45",
    "comments": [
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n Search for\n <code>\n  DatagramPacket\n </code>\n that is the Java class for building/receiving an UDP packet. IMHO don't just decompile the app, use a tool like Jadx-Gui that allows you to browse and search the code and that allows to you resolve class and method references.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Mazemeshane",
            "text": "<html><body><span class=\"comment-copy\">\n Thank you and sorry for the late response. The traffic I see between the app and the hub is TCP traffic. Would DatagramPacket be used for that as well? I used bytecode-viewer to de-compile the code, which allows me to search it. I can find 3 files that use DatagramPacket with 'var6', 'var44', etc. but I don't know how to track those variables to make sense of it.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}