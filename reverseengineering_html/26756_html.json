{
    "title": "Detecting and reading embedded filesystems on desktop Linux",
    "link": "https://reverseengineering.stackexchange.com/questions/26756/detecting-and-reading-embedded-filesystems-on-desktop-linux",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have some data from a NAND chip, dumped using the built in\n  <em>\n   nanddump\n  </em>\n  utility on the embedded device.\n </p>\n <p>\n  This is the device information:\n  <a href=\"https://openwrt.org/toh/bt/homehub_v5a\" rel=\"nofollow noreferrer\">\n   https://openwrt.org/toh/bt/homehub_v5a\n  </a>\n  The NAND chip is 128MiB Spansion ML01G100BHI00\n </p>\n <p>\n  I have processed the dump using the Python ubi_reader (\n  <a href=\"https://github.com/jrspruitt/ubi_reader\" rel=\"nofollow noreferrer\">\n   https://github.com/jrspruitt/ubi_reader\n  </a>\n  ) which shows information that fits and produces some files:\n </p>\n <pre><code>128K    img-2097163413_vol-caldata.ubifs\n15M img-2097163413_vol-FFS.ubifs\n21M img-2097163413_vol-OpenRG.ubifs\n</code></pre>\n <p>\n  I've tried mounting any of these (especially the last two) with commands including the below:\n </p>\n <pre><code>sudo mount -o loop img-2097163413_vol-FFS.ubifs /mnt/tmp\nsudo mount -t jffs2 -o loop img-2097163413_vol-FFS.ubifs /mnt/tmp\nsudo mount -t ubifs -o loop img-2097163413_vol-FFS.ubifs /mnt/tmp\n</code></pre>\n <p>\n  But I get different errors, including:\n </p>\n <pre><code>mount: /mnt/tmp: wrong fs type, bad option, bad superblock on /dev/loop16, missing codepage or helper program, or other error\n</code></pre>\n <p>\n  I am running Ubuntu 20.04 and have the\n  <em>\n   mtd-utils\n  </em>\n  installed. I don't know if I need a special kernel module (or a custom kernel build) to be able to read these on a desktop build of Linux?\n </p>\n <p>\n  Running binwalk gives quite a lot of output, but I'm not convinced it really helps:\n </p>\n <pre><code>DECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n0             0x0             UBIFS filesystem superblock node, CRC: 0x18587199, flags: 0x0, min I/O unit size: 2048, erase block size: 129024, erase block count: 662, max erase blocks: 662, format version: 4, compression type: lzo\n129024        0x1F800         UBIFS filesystem master node, CRC: 0x2AB14864, highest inode: 64, commit number: 0\n131072        0x20000         UBIFS filesystem master node, CRC: 0xB8679430, highest inode: 64, commit number: 0\n133120        0x20800         UBIFS filesystem master node, CRC: 0xCFA58C39, highest inode: 68, commit number: 1\n135168        0x21000         UBIFS filesystem master node, CRC: 0x49224F4A, highest inode: 68, commit number: 1\n137216        0x21800         UBIFS filesystem master node, CRC: 0xF356AD50, highest inode: 68, commit number: 1\n139264        0x22000         UBIFS filesystem master node, CRC: 0x1C09B66E, highest inode: 68, commit number: 2\n141312        0x22800         UBIFS filesystem master node, CRC: 0x85E22D40, highest inode: 68, commit number: 3\n143360        0x23000         UBIFS filesystem master node, CRC: 0xD2CCE2D1, highest inode: 100, commit number: 4\n145408        0x23800         UBIFS filesystem master node, CRC: 0x4FA2D61B, highest inode: 134, commit number: 5\n147456        0x24000         UBIFS filesystem master node, CRC: 0x13B828D, highest inode: 178, commit number: 6\n149504        0x24800         UBIFS filesystem master node, CRC: 0x462195E8, highest inode: 219, commit number: 7\n151552        0x25000         UBIFS filesystem master node, CRC: 0xA8F61781, highest inode: 219, commit number: 8\n153600        0x25800         UBIFS filesystem master node, CRC: 0x3A0CCA43, highest inode: 244, commit number: 9\n155648        0x26000         UBIFS filesystem master node, CRC: 0xF3B91383, highest inode: 244, commit number: 10\n157696        0x26800         UBIFS filesystem master node, CRC: 0xC962E252, highest inode: 267, commit number: 11\n159744        0x27000         UBIFS filesystem master node, CRC: 0xB37C99F7, highest inode: 307, commit number: 12\n161792        0x27800         UBIFS filesystem master node, CRC: 0x379C342E, highest inode: 347, commit number: 13\n163840        0x28000         UBIFS filesystem master node, CRC: 0x906A63C7, highest inode: 347, commit number: 13\n165888        0x28800         UBIFS filesystem master node, CRC: 0x2BCBF93, highest inode: 347, commit number: 13\n167936        0x29000         UBIFS filesystem master node, CRC: 0x70D2F699, highest inode: 347, commit number: 14\n169984        0x29800         UBIFS filesystem master node, CRC: 0x348E6DCE, highest inode: 347, commit number: 15\n258048        0x3F000         UBIFS filesystem master node, CRC: 0x2681BD79, highest inode: 64, commit number: 0\n260096        0x3F800         UBIFS filesystem master node, CRC: 0x9CF55F63, highest inode: 64, commit number: 0\n262144        0x40000         UBIFS filesystem master node, CRC: 0xDBF4931E, highest inode: 68, commit number: 1\n264192        0x40800         UBIFS filesystem master node, CRC: 0x6DB08419, highest inode: 68, commit number: 1\n266240        0x41000         UBIFS filesystem master node, CRC: 0xFF66584D, highest inode: 68, commit number: 1\n268288        0x41800         UBIFS filesystem master node, CRC: 0x10394373, highest inode: 68, commit number: 2\n270336        0x42000         UBIFS filesystem master node, CRC: 0x89D2D85D, highest inode: 68, commit number: 3\n272384        0x42800         UBIFS filesystem master node, CRC: 0xF65E2982, highest inode: 100, commit number: 4\n274432        0x43000         UBIFS filesystem master node, CRC: 0x43922306, highest inode: 134, commit number: 5\n276480        0x43800         UBIFS filesystem master node, CRC: 0x156A9DAA, highest inode: 178, commit number: 6\n278528        0x44000         UBIFS filesystem master node, CRC: 0x62B35EBB, highest inode: 219, commit number: 7\n280576        0x44800         UBIFS filesystem master node, CRC: 0x67935A0C, highest inode: 219, commit number: 8\n282624        0x45000         UBIFS filesystem master node, CRC: 0x1E9E0110, highest inode: 244, commit number: 9\n284672        0x45800         UBIFS filesystem master node, CRC: 0x9213CFCB, highest inode: 244, commit number: 10\n286720        0x46000         UBIFS filesystem master node, CRC: 0xC552174F, highest inode: 267, commit number: 11\n288768        0x46800         UBIFS filesystem master node, CRC: 0xBF4C6CEA, highest inode: 307, commit number: 12\n290816        0x47000         UBIFS filesystem master node, CRC: 0x3BACC133, highest inode: 347, commit number: 13\n292864        0x47800         UBIFS filesystem master node, CRC: 0x9C5A96DA, highest inode: 347, commit number: 13\n294912        0x48000         UBIFS filesystem master node, CRC: 0x47A9DC28, highest inode: 347, commit number: 13\n296960        0x48800         UBIFS filesystem master node, CRC: 0x6483E9BE, highest inode: 347, commit number: 14\n299008        0x49000         UBIFS filesystem master node, CRC: 0x38BE98D3, highest inode: 347, commit number: 15\n9045944       0x8A07B8        MySQL MISAM compressed data file Version 10\n</code></pre>\n <p>\n  Is it possible to mount these images? Otherwise, what is the best way to access the information on the NAND dump?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "343",
    "tags": [
        "file-format",
        "embedded",
        "memory-dump",
        "flash",
        "router"
    ],
    "user": "moo",
    "time": "Jan 14, 2021 at 8:54",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Try using\n  <code>\n   binwalk -e yourdump.bin\n  </code>\n  . It will then try to extract the files within your dump and if a filesystem is found it will also extract those.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Robert Larsen",
            "time": "Jan 13, 2021 at 20:30",
            "is_accepted": false,
            "comments": []
        }
    ]
}