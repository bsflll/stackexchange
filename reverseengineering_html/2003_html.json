{
    "title": "SQL Server not downloading symbols from the symbol server, even though SymInitialize has the symserver in its path",
    "link": "https://reverseengineering.stackexchange.com/questions/2003/sql-server-not-downloading-symbols-from-the-symbol-server-even-though-syminitia",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <strong>\n   EDIT\n  </strong>\n  Clarified, I meant the extended exent ringbugger stacktraces described by\n  <a href=\"http://www.sqlskills.com/blogs/jonathan/an-xevent-a-day-24-of-31-what-is-the-callstack/\" rel=\"nofollow noreferrer\">\n   Jonathan Kehayias\n  </a>\n  .\n </p>\n <p>\n  I recently discovered it was possible to\n  <a href=\"https://stackoverflow.com/questions/16320480/getting-link-exe-lib-exe-editbin-exe-and-dumpbin-exe-to-use-the-symbol-server\">\n   get link.exe, dumpbin.exe, etc to download symbols from a symbol server\n  </a>\n  . SQL Server has the ability to capture its own call traces through extended events.\n  <a href=\"http://www.sqlskills.com/blogs/jonathan/an-xevent-a-day-24-of-31-what-is-the-callstack/\" rel=\"nofollow noreferrer\">\n   Traceflag 3656 lets you decode these stack traces with symbol files.\n  </a>\n  As per\n  <a href=\"http://www.sqlskills.com/blogs/paul/how-to-download-a-sqlservr-pdb-symbol-file/\" rel=\"nofollow noreferrer\">\n   Paul Randal's blog\n  </a>\n  , you need to actually put the symbol files in the sql server binn folder, and it wouldn't use the symbol server. I decided to investigate to see how true this is. Using\n  <a href=\"http://www.rohitab.com/\" rel=\"nofollow noreferrer\">\n   RohitABs API Monitor\n  </a>\n  , I was able to see the following calls being made to DbgHelp.dll:\n </p>\n <pre><code>ImagehlpApiVersion (  )\nSymSetOptions ( SYMOPT_DEFERRED_LOADS | SYMOPT_LOAD_LINES | SYMOPT_UNDNAME )\nSymInitialize ( GetCurrentProcess(), \"C:\\Program Files\\Microsoft SQL Server\\MSSQL11.MSSQLSERVER2012\\MSSQL\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\MSSQL11.MSSQLSERVER2012\\MSSQL\\BINN;symsrv*symsrv.dll*c:\\symbols*http://msdl.microsoft.com/download/symbols;C:\\Windows;C:\\Windows\\system32\", TRUE )\nSymRegisterCallback64 ( GetCurrentProcess(), 0x000007fec5a77810, 0 )\n    /* The following SymGetSymFromAddr() calls happen because fInvadeProcess  was set to true  */\nSymGetSymFromAddr ( GetCurrentProcess(), 3313710117, 0x000000001b06c060, 0x000000001b06b348 )\nSymGetSymFromAddr ( GetCurrentProcess(), 3313710116, 0x000000001b06c060, 0x000000001b06b348 )\n    . . . \n    . . . \n    . . . \nSymCleanup ( GetCurrentProcess() )\n</code></pre>\n <p>\n  So it looks like my\n  <code>\n   _NT_SYMBOL_PATH\n  </code>\n  , with the symbol server is being added to the search path of\n  <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms681351(v=vs.85).aspx\" rel=\"nofollow noreferrer\">\n   SymInitialize()\n  </a>\n  . If that is the case, why aren't symbols being downloaded from the symbol server?\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 1,
    "views": "832",
    "tags": [
        "mssql",
        "debugging-symbols"
    ],
    "user": "Justin Dearing",
    "time": "May 23, 2017 at 12:37",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am a bit confused by the title of your question\n </p>\n <p>\n  SQL Server or for that matter any other application apart from WinDbg or special symbol retrievers wont be able to download symbols from ms symbol servers\n </p>\n <p>\n  Did you mean you used\n  <code>\n   symchk\n  </code>\n  on the\n  <code>\n   sqlserver.exe\n  </code>\n  as mentioned in the blog you linked\n </p>\n <p>\n  A simple method to get symbols for any application is to\n </p>\n <ol>\n  <li>\n   <p>\n    set\n    <code>\n     _NT_SYMBOL_PATH\n    </code>\n    :\n   </p>\n   <p>\n    <code>\n     _NT_SYMBOL_PATH=SRV*F:\\symbols*http://msdl.microsoft.com/download/symbols\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    open the executable in WinDbg with an active Internet connection\n   </p>\n   <p>\n    <code>\n     windbg SqlServer.exe\n    </code>\n   </p>\n   <p>\n    once WinDbg has opened the application\n   </p>\n  </li>\n  <li>\n   issue\n   <code>\n    .reload /f\n   </code>\n   and WinDbg will fetch all the symbol files and will cache them in the downstream store (\n   <code>\n    F:\\Symbols\n   </code>\n   in the above scenario)\n  </li>\n </ol>\n <p>\n  once the relevant\n  <code>\n   .pdb\n  </code>\n  files are available in cache\n  <code>\n   symsrv.dll\n  </code>\n  will use the cached symbol file and wont look for an active Internet connection\n </p>\n <p>\n  Refrain from copying any\n  <code>\n   .pdb\n  </code>\n  files to any local folders\n </p>\n <p>\n  Just use\n  <code>\n   _NT_SYMBOL_PATH\n  </code>\n  for all your symbol needs\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "0xC0000022L",
            "time": "May 5, 2013 at 2:05",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">please use the formatting properly. Both your answers so far had horrible formatting issues in their original form.</span>",
                    "time": null
                },
                {
                    "user": "Justin Dearing",
                    "text": "<span class=\"comment-copy\">Sorry, I meant to say <a href=\"http://www.sqlskills.com/blogs/jonathan/an-xevent-a-day-24-of-31-what-is-the-callstack/\" rel=\"nofollow noreferrer\">the ringbuffer stack traces that extended events gives you access to</a>.</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">@Justin Iam Not that familiar with SqlServer i read the post and i saw him mentioning that SqlServer.pdb needs to be in same directory as the sqlserver.exe any exe that shows call stacks should be having an option to set symbol path for example procmon from sysinternals will show either a raw stack with no symbols or if you fill the symbol path option it will show the stack trace with symbol resolved i think sqlserver might also have such an option</span>",
                    "time": null
                }
            ]
        }
    ]
}