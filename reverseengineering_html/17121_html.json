{
    "title": "Finding out ARC file entry point",
    "link": "https://reverseengineering.stackexchange.com/questions/17121/finding-out-arc-file-entry-point",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I got dump from ci module and after deflate compressed data, this time I can't find the data I am looking for without disassembly it, sometimes I can extract data manually, but this time file is a bit different.\n </p>\n <p>\n  So I have tried to load file and test with 2 possible targets, ARCompact and ARCTangent, and loading address I tested with 0x0 and 0x400000, because I see some offsets in binary (L.E) like:\n </p>\n <pre><code>207B2A40\n347B2A40\n</code></pre>\n <p>\n  So I guess loading must be close to that offset but no successful, only got garbage fucntions.\nThe first 0xB0 data from file is like this:\n </p>\n <pre><code>4A2100004A2200004A2300004A240000\n4A2500004A2600004A2700004A200010\n4A2100104A2200104A2300104A240010\n4A2500104A2600104A2700104A200020\n4A2100204A2200204A2300204A240020\n4A2500204A2600204A2700204A200030\n4A2100304A2000002220800F23408009\n0A24803F2B4048B80A22803F2B406059\n0A22808F00000000E22082004A230030\n2220800F2240DC9E090000006CD41640\n692040004A2600704A2600704A260070\n</code></pre>\n <p>\n  And these flags are before gzip header:\n </p>\n <pre><code>    48B82B40\n    48B82B40\n    00200300\n    2E 6B65726E656C -> kernel\n    0000000000\n    004B5F40 -*\n    004B5F40 -* Offset where kernel is decompressed?\n    00400600 -> ?\n    1F8B0800 -> gzip\n</code></pre>\n <p>\n  Hope someone could help me in someway.\n </p>\n <p>\n  Many thanks in advance.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "364",
    "tags": [
        "ida",
        "entry-point"
    ],
    "user": "numind",
    "time": "Jul 5, 2018 at 23:11",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Seems to be ARCompact code:\n </p>\n <pre><code>CODE:00000000                 mov     r1, 0\nCODE:00000004                 mov     r2, 0\nCODE:00000008                 mov     r3, 0\nCODE:0000000C                 mov     r4, 0\nCODE:00000010                 mov     r5, 0\nCODE:00000014                 mov     r6, 0\nCODE:00000018                 mov     r7, 0\nCODE:0000001C                 mov     r8, 0\nCODE:00000020                 mov     r9, 0\nCODE:00000024                 mov     r10, 0\nCODE:00000028                 mov     r11, 0\nCODE:0000002C                 mov     r12, 0\nCODE:00000030                 mov     r13, 0\nCODE:00000034                 mov     r14, 0\nCODE:00000038                 mov     r15, 0\nCODE:0000003C                 mov     r16, 0\nCODE:00000040                 mov     r17, 0\nCODE:00000044                 mov     r18, 0\nCODE:00000048                 mov     r19, 0\nCODE:0000004C                 mov     r20, 0\nCODE:00000050                 mov     r21, 0\nCODE:00000054                 mov     r22, 0\nCODE:00000058                 mov     r23, 0\nCODE:0000005C                 mov     r24, 0\nCODE:00000060                 mov     r25, 0\nCODE:00000064                 mov     r0, 0\nCODE:00000068                 jl      0x40230980\nCODE:00000070                 mov     sp, 0x402BB848\nCODE:00000078                 mov     gp, 0x402B5960\nCODE:00000080                 mov.f   r2, 0\nCODE:00000088                 jlne    [r2]\nCODE:0000008C                 mov     fp, 0\nCODE:00000090                 jl      0x40229EDC\nCODE:00000098                 b       loc_A0\n</code></pre>\n <p>\n  The load base could be 40000000 or 40200000, but might be something else too.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Jan 5, 2018 at 9:38",
            "is_accepted": false,
            "comments": [
                {
                    "user": "numind",
                    "text": "<span class=\"comment-copy\">Thanks for answer, I have tried those base addresses and after press 'c' I get same result, but does not appear all functions, then I select all file and press 'c' again and functions seems to be garbage again. The offset I check for confirm the functions are ok is 0x00104968 in plain file, this offset is a 0x70 key that must be xored. Here is the file <a href=\"https://file.town/download/vwy508j3uyljbgybp3vtx8gqo\" rel=\"nofollow noreferrer\">file.town/download/vwy508j3uyljbgybp3vtx8gqo</a></span>",
                    "time": null
                },
                {
                    "user": "numind",
                    "text": "<span class=\"comment-copy\">I found xor key offset, 0x00104968 ^ 0x00106170, at least it makes xor with this offset, need to find out entry point for check more coincidences...</span>",
                    "time": null
                }
            ]
        }
    ]
}