{
    "title": "Computing function offset differences",
    "link": "https://reverseengineering.stackexchange.com/questions/12157/computing-function-offset-differences",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  When I'm trying to compute the difference between two functions loaded into memory:\n </p>\n <pre><code>int _start(void)\n{\n    // code\n}\n\nint _end(void)\n{\n    // code\n}\n\nDWORD funcSize = (DWORD) _end - (DWORD) _start;\n</code></pre>\n <p>\n  <code>\n   funcSize\n  </code>\n  is computed incorrectly. For example, if the offset of\n  <code>\n   _start\n  </code>\n  is\n  <strong>\n   0x00291450\n  </strong>\n  and the offset of\n  <code>\n   _end\n  </code>\n  is\n  <strong>\n   0x002915a0\n  </strong>\n  the difference between\n  <code>\n   _end\n  </code>\n  and\n  <code>\n   _start\n  </code>\n  is\n  <strong>\n   0xffffff56\n  </strong>\n  . Why?\n </p>\n</div>\n</body></html>",
    "votes": "-1",
    "answers": 1,
    "views": "125",
    "tags": [
        "c",
        "functions",
        "offset"
    ],
    "user": "Sebi",
    "time": "Mar 6, 2016 at 11:25",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Because end is greater than start and you see the actual representation of negative number.\n  <code>\n   (DWORD) _end - (DWORD) _start\n  </code>\n  should give you a more reasonable number.\n </p>\n <p>\n  Just for completeness sake: the computations with numbers you provided (may be checked in windows calculator or with python)\n </p>\n <pre><code>0x002915a0 - 0x00291450 = 0x150\n0x00291450 - 0x002915a0 = -0x150 (0xfffffeb0) \n</code></pre>\n <p>\n  The difference between numbers which ends with 0 can not end with non-zero like in number as you mentioned\n  <code>\n   (0xffffff56)\n  </code>\n  , so there is something wrong with your calculation.\nUPD:\nJust in case if you are using C language, you probably should use &_start and &_end instead of _start and _end.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "w s",
            "time": "Mar 6, 2016 at 14:39",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Sebi",
                    "text": "<span class=\"comment-copy\">Sorry I meant _end()  -  start() gives a negative number. Why does _end() have a smaller address than _start().</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">According to numbers you mentioned _end is greater than _start.</span>",
                    "time": null
                },
                {
                    "user": "Sebi",
                    "text": "<span class=\"comment-copy\">When I subtract the address of _start() from that of _end() the result is negative even though the address of _end() is greater than that of _start().</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">I updated the answer. Please review your calculation, something with the numbers and results is inconsistent.</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">And shouldn't you use &amp;_end instead of _end and &amp;_start instead of start correspondingly ?</span>",
                    "time": null
                }
            ]
        }
    ]
}