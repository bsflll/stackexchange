{
    "title": "Why is function in kernel32.dll jumping into a api-ms-win-core stub",
    "link": "https://reverseengineering.stackexchange.com/questions/31400/why-is-function-in-kernel32-dll-jumping-into-a-api-ms-win-core-stub",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I was trying to look into the implementation of\n  <code>\n   GetVersion\n  </code>\n  function in\n  <b>\n   kernel32.dll\n  </b>\n  .\n </p>\n <p>\n  I was surprised to see that the\n  <code>\n   GetVersion\n  </code>\n  thunk is issuing a jump to\n  <code>\n   API-MS-WIN-CORE-SYSINFO-L1-1-0.DLL::GetVersion\n  </code>\n  , and in turn\n  <code>\n   API-MS-WIN-CORE-SYSINFO-L1-1-0.DLL::GetVersion\n  </code>\n  is pointing(forwarder) back to\n  <code>\n   KERNEL32.DLL::GetVersion\n  </code>\n  \n\n  \n\n  \n\n  Any idea why is it so? So where is the real implementation of\n  <code>\n   GetVersion\n  </code>\n  ?\n </p>\n <h4>\n  Kernel32.dll\n </h4>\n <p>\n  <a href=\"https://i.sstatic.net/1Jrhr.png\" rel=\"noreferrer\">\n   <img alt=\"kernel32.dll\" src=\"https://i.sstatic.net/1Jrhr.png\"/>\n  </a>\n </p>\n <h4>\n  API-MS-WIN-CORE-SYSINFO-L1-1-0.DLL\n </h4>\n <p>\n  <a href=\"https://i.sstatic.net/2kIEi.png\" rel=\"noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/2kIEi.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 1,
    "views": "379",
    "tags": [
        "windows",
        "winapi",
        "windows-10"
    ],
    "user": "caramel1995",
    "time": "Jan 13, 2023 at 17:19",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n to make universal crt possible most implementation were shifted to other dlls and a version agnostic stub which knows where to redirect the backward compatible and present apis were introduced  which is contained in a resource only dll file named APISETSCHEMEA.dll  you may check here for some internals of that\n <a href=\"https://reverseengineering.stackexchange.com/questions/31071/reverse-function-in-rdata-field/31133#31133\">\n  here\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n What @blabb said! Plus, you may want to read\n <a href=\"https://www.nirsoft.net/articles/windows_7_kernel_architecture_changes.html\" rel=\"nofollow noreferrer\">\n  this\n </a>\n and\n <a href=\"https://www.geoffchappell.com/studies/windows/win32/apisetschema/index.htm\" rel=\"nofollow noreferrer\">\n  this\n </a>\n and\n <a href=\"https://lucasg.github.io/2017/10/15/Api-set-resolution/\" rel=\"nofollow noreferrer\">\n  this\n </a>\n as well as the code in\n <a href=\"https://github.com/lucasg/Dependencies\" rel=\"nofollow noreferrer\">\n  this\n </a>\n and\n <a href=\"https://github.com/zodiacon/ApiSetView\" rel=\"nofollow noreferrer\">\n  this\n </a>\n . Enjoy. Oh and\n <a href=\"https://reverseengineering.stackexchange.com/a/31098/245\">\n  my answer on the Q&A blabb linked\n </a>\n also offers details about\n <i>\n  this\n </i>\n topic.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <code>\n   GetVersion()\n  </code>\n  was deprecated in 8.1 -\n  <a href=\"https://learn.microsoft.com/en-us/windows/win32/sysinfo/targeting-your-application-at-windows-8-1\" rel=\"nofollow noreferrer\">\n   https://learn.microsoft.com/en-us/windows/win32/sysinfo/targeting-your-application-at-windows-8-1\n  </a>\n </p>\n <p>\n  So I would guess that they've left the function stub there to catch and redirect calls in code that hasn't been updated.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Mega Tonnage",
            "time": "Jan 13, 2023 at 22:48",
            "is_accepted": false,
            "comments": [
                {
                    "user": "caramel1995",
                    "text": "<span class=\"comment-copy\">I did tried to create a dummy program to test out <code>GetVersion</code> and it's working fine.</span>",
                    "time": null
                },
                {
                    "user": "caramel1995",
                    "text": "<span class=\"comment-copy\">Besides that there are also some function that is not deprecated that has the same footprint.</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">Deprecated means you shouldn't use it, not you can't. However, <code>GetVersion()</code> does anyway lie all the time unless your application happens to run with a manifest that proclaims full compatibility with the Windows release on which it runs. For the truth use <a href=\"https://learn.microsoft.com/en-us/windows/win32/devnotes/rtlgetversion\" rel=\"nofollow noreferrer\"><code>RtlGetVersion</code></a> or consult <code>KUSER_SHARED_DATA</code>. Either way, what you encountered is more about API sets than about whether <code>GetVersion</code> is deprecated.</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@MegaTonnage: I think in this question it's more about the API Sets rather than about why it's deprecated or so.</span>",
                    "time": null
                }
            ]
        }
    ]
}