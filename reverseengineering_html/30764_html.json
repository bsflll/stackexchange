{
    "title": "PowerPC disassembly with libopcodes",
    "link": "https://reverseengineering.stackexchange.com/questions/30764/powerpc-disassembly-with-libopcodes",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to disassemble Wii game executable binaries in C, which use the broadway microprocessor and unfortunately the only disassembler I am aware that I can use is libopcodes.\n </p>\n <p>\n  I am following this respository\n  <a href=\"https://github.com/antonblanchard/qtrace-tools/blob/3a83cc095de6fb6726c7c969ba8bbeaec75b62c9/qtdis/qtdis.c#L221\" rel=\"nofollow noreferrer\">\n   https://github.com/antonblanchard/qtrace-tools/blob/3a83cc095de6fb6726c7c969ba8bbeaec75b62c9/qtdis/qtdis.c#L221\n  </a>\n  as a reference, which uses Ubuntu's\n  <code>\n   binutils-multiarch-dev\n  </code>\n  package. However, my calls to\n  <code>\n   disassembler\n  </code>\n  always returns a NULL pointer (even when using exactly the same arguments he uses). I only get a valid disassembler with\n  <code>\n   disassembler(bfd_arch_i386, false, bfd_mach_x86_64, NULL)\n  </code>\n  .\n </p>\n <p>\n  Here's a minimum failing example (\n  <code>\n   test.c\n  </code>\n  ):\n </p>\n <pre><code>#include <stdio.h>\n\n// including BFD stuff requires this stuff apparently...\n// https://stackoverflow.com/questions/11748035/binutils-bfd-h-wants-config-h-now\n#define PACKAGE \"pkg-name\"\n#define PACKAGE_VERSION \"1.0.0\"\n#include <dis-asm.h>\n\nint main(int argc, char const *argv[]) {\n  disassembler_ftype disasm = disassembler(bfd_arch_powerpc, true, bfd_mach_ppc_750, NULL);\n\n  if (!disasm) {\n    printf(\"wth no disasm\n\");\n  } else {\n    printf(\"ok disasm\n\");\n  }\n\n  return 0;\n}\n</code></pre>\n <p>\n  Install binutils multiarch\n  <code>\n   sudo apt-get install binutils-multiarch-dev\n  </code>\n  .\nBuild with\n  <code>\n   gcc -o test test.c -lopcodes-multiarch\n  </code>\n  and run\n  <code>\n   ./test\n  </code>\n </p>\n <p>\n  It seems that my\n  <code>\n   libopcodes\n  </code>\n  does not support any PowerPC architectures I tried. I would try to build from source but binutils' README\n  <a href=\"https://sourceware.org/git/?p=binutils-gdb.git;a=blob;f=binutils/README;h=42f494800c0b93b1188857bdeaa6ae48843aca24;hb=cd919f5533cc8aa495acd75a6f059e5fcf2e6af9\" rel=\"nofollow noreferrer\">\n   https://sourceware.org/git/?p=binutils-gdb.git;a=blob;f=binutils/README;h=42f494800c0b93b1188857bdeaa6ae48843aca24;hb=cd919f5533cc8aa495acd75a6f059e5fcf2e6af9\n  </a>\n  only mentions flags for supporting specific binary formats, not architectures/machines. Any suggestions?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "134",
    "tags": [
        "disassembly",
        "assembly",
        "powerpc"
    ],
    "user": "user19742600",
    "time": "Aug 12, 2022 at 18:01",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I solved my issue. I had to install\n  <code>\n   binutils-multiarch-dev\n  </code>\n  to support bfd_arch_powerpc and bfd_mach_ppc_750. In my case, I also had to remove my custom installation of binutils because the custom build with no flags apparently does not support PowerPC and\n  <code>\n   dis-asm.h\n  </code>\n  from\n  <code>\n   /usr/local/include\n  </code>\n  was taking priority over the one in\n  <code>\n   /usr/include\n  </code>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "user19742600",
            "time": "Aug 12, 2022 at 19:47",
            "is_accepted": false,
            "comments": []
        }
    ]
}