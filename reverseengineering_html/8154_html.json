{
    "title": "pintool to intercept writes and VirtualProtect",
    "link": "https://reverseengineering.stackexchange.com/questions/8154/pintool-to-intercept-writes-and-virtualprotect",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  On Linux the\n  <em>\n   strace.so\n  </em>\n  pintool gives a good overview on how system calls are intercepted in PIN. One could monitor the value of\n  <code>\n   EAX\n  </code>\n  to see which system call is being invoked(and mprotect and writes could be intercepted in the fashion).\n </p>\n <p>\n  How could we do something similar for Windows? I see that the\n  <code>\n   int 2e\n  </code>\n  interrupt is used to trap into the kernel and that the system calls numbers are given at\n  <a href=\"http://j00ru.vexillium.org/ntapi/\" rel=\"nofollow\">\n   here\n  </a>\n  . Is\n  <code>\n   NtWriteFile\n  </code>\n  the analogue of\n  <code>\n   write\n  </code>\n  ? Also is\n  <code>\n   NtProtectVirtualMemory\n  </code>\n  the analogue of\n  <code>\n   mprotect\n  </code>\n  ?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "547",
    "tags": [
        "operating-systems",
        "pintool",
        "system-call"
    ],
    "user": null,
    "time": "Feb 4, 2015 at 7:26",
    "comments": [
        {
            "user": "perror",
            "text": "<html><body><span class=\"comment-copy\">\n I might have a bad understanding of your question, but pintool is suppose to work also for Windows. Haven't you tried it for Windows ?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Pintools on Windows can also aid you in instrumenting system calls. Also, if its discovered that the cpu supports\n  <code>\n   sysenter\n  </code>\n  /\n  <code>\n   syscall\n  </code>\n  , those are used in place of\n  <code>\n   int 2e\n  </code>\n  . However, this has no bearing on whether or not instrumentation can take place.\n </p>\n <p>\n  To answer your second question, yes,\n  <code>\n   NtReadFile\n  </code>\n  ,\n  <code>\n   NtWriteFile\n  </code>\n  and\n  <code>\n   NtDeviceIoControlFile\n  </code>\n  are the *nix equivalent of\n  <code>\n   read\n  </code>\n  /\n  <code>\n   write\n  </code>\n  /\n  <code>\n   ioctl\n  </code>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "perror",
            "time": "Feb 4, 2015 at 12:42",
            "is_accepted": true,
            "comments": []
        }
    ]
}