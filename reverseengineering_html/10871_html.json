{
    "title": "How to analyze packets?",
    "link": "https://reverseengineering.stackexchange.com/questions/10871/how-to-analyze-packets",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a packet that I want to analyze which consists 16 bytes. I can produce as much as of these packets needed to analyze.\n </p>\n <p>\n  Even though packet does the same thing on application the data in the packet seems to be changed each time. It works when I record the old packet and use it next time application runs. It also works when first or last 8 bytes are replaced with bytes from previously recorded packets.\n </p>\n <p>\n  My aim is to be able to produce these packets myself. Here's some recorded packets:\n </p>\n <pre><code>0xb1, 0xd0, 0x36, 0xe8, 0x1f, 0xdb, 0xc7, 0x36, 0x66, 0x39, 0x17, 0x15, 0xcc, 0xa1, 0x8a, 0x61\n0x17, 0x21, 0x6e, 0x45, 0x0d, 0x3f, 0x08, 0x86, 0xed, 0x55, 0x26, 0x19, 0xf6, 0x15, 0x6b, 0xb1\n0x08, 0xb9, 0xd7, 0xe9, 0xa8, 0x80, 0xea, 0x8c, 0x18, 0x5e, 0x92, 0xc5, 0xb7, 0x1a, 0xed, 0xf7\n0x2a, 0x12, 0x1c, 0x71, 0x36, 0x00, 0xb3, 0x6f, 0xbb, 0x7b, 0x57, 0x65, 0xe5, 0xa7, 0x45, 0xd4\n0x17, 0x21, 0x6e, 0x45, 0x0d, 0x3f, 0x08, 0x86, 0xcf, 0x5a, 0x95, 0xaa, 0x41, 0x88, 0xd3, 0xf1\n0xb1, 0xd0, 0x36, 0xe8, 0x1f, 0xdb, 0xc7, 0x36, 0x20, 0x68, 0x45, 0x26, 0x2d, 0xce, 0xc8, 0x32\n</code></pre>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "512",
    "tags": [
        "protocol",
        "packet"
    ],
    "user": "AcarX",
    "time": "Sep 16, 2015 at 19:23",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "<html><body><span class=\"comment-copy\">\n Just to make sure:\n <code>\n  B1 D0 36 E8 1F DB C7 36 66 39 17 15 CC A1 8A 61\n </code>\n and\n <code>\n  17 21 6E 45 0D 3F 08 86 ED 55 26 19 F6 15 6B B1\n </code>\n do the same thing in the application, and\n <code>\n  B1 D0 36 E8 1F DB C7 36 ED 55 26 19 F6 15 6B B1\n </code>\n does the same as well, but changing one random byte doesn't?  Anyway, this sounds like you have to reverse the packet processing function, but if you want to have a (slight!) chance without that, you'd have to provide many more examples.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "AcarX",
            "text": "<html><body><span class=\"comment-copy\">\n Exactly as you said. I've tried to reverse the function but i just don't know enough assembly even though i know exactly where the packet is encrypted. I can provide as much examples as needed.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It may be the case that it's\n  <a href=\"https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\" rel=\"nofollow\">\n   CBC-encrypted\n  </a>\n  data, with the first field being a nonce. Or one of many other possibilities.\n </p>\n <p>\n  Either way, as Guntram said in his comment above, you'd need to reverse engineer the software to determine how this data is parsed.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Jason Geffner",
            "time": "Sep 16, 2015 at 13:47",
            "is_accepted": true,
            "comments": [
                {
                    "user": "AcarX",
                    "text": "<span class=\"comment-copy\">So it's unlikely that i'll get somewhere without reverse engineering the software. Thanks.</span>",
                    "time": null
                }
            ]
        }
    ]
}