{
    "title": "Forcing a legacy Windows application to use an older version of ntdll.dll",
    "link": "https://reverseengineering.stackexchange.com/questions/31267/forcing-a-legacy-windows-application-to-use-an-older-version-of-ntdll-dll",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  There is this old Windows application I've been using for more than a decade now:\n  <a href=\"https://web.archive.org/web/20221006113849/http://www.anka.me/desktopearth.aspx\" rel=\"nofollow noreferrer\">\n   DesktopEarth\n  </a>\n  . It got its last update in 2015 and the author's website is offline now, but it's been running fine on Windows 10. Recently, I upgraded to Windows 11 and now it won't start anymore, it crashes instantly. Compatibility mode doesn't fix the issue. I really like this application, it shows you the face of the earth with the correct day/night cycle, seasons, clouds, city lights at night, etc. - I don't feel at home on my Desktop without this background. And I can't find an adequate replacement for this app. So I want to try and fix it.\n </p>\n <p>\n  Here's what the Windows application log is saying (sorry, couldn't figure out how to change the language, it's in German):\n </p>\n <pre><code>Name der fehlerhaften Anwendung: DesktopEarth.exe, Version: 3.2.42.0, Zeitstempel: 0x553f6b3b\nName des fehlerhaften Moduls: ntdll.dll, Version: 10.0.22621.755, Zeitstempel: 0x42b70e75\nAusnahmecode: 0xc0000005\nFehleroffset: 0x000653f5\nID des fehlerhaften Prozesses: 0x0x435C\nStartzeit der fehlerhaften Anwendung: 0x0x1D90E747D1A2A1D\nPfad der fehlerhaften Anwendung: C:\\Program Files (x86)\\DesktopEarth\\DesktopEarth.exe\nPfad des fehlerhaften Moduls: C:\\Windows\\SYSTEM32\ntdll.dll\nBerichtskennung: 1b12aa9f-2912-4517-8b57-dfa6f8eeb950\nVollst√§ndiger Name des fehlerhaften Pakets: \nAnwendungs-ID, die relativ zum fehlerhaften Paket ist: \n</code></pre>\n <p>\n  Looks like it crashes in\n  <code>\n   ntdll.dll\n  </code>\n  ... maybe if I revert that to an older version, it will work again? So I downloaded an older version of\n  <code>\n   ntdll.dll\n  </code>\n  from the internet (hopefully not some randomware), placed it next to\n  <code>\n   DesktopEarth.exe\n  </code>\n  and... same error. It's still using\n  <code>\n   C:\\Windows\\SYSTEM32\ntdll.dll\n  </code>\n  . So I added\n  <code>\n   C:\\Program Files (x86)\\DesktopEarth\n  </code>\n  to my PATH, hoping that this would make\n  <code>\n   DesktopEarth.exe\n  </code>\n  prefer my custom\n  <code>\n   ntdll.dll\n  </code>\n  but still nothing. Is the path to the dll hardcoded in the exe? I was kinda getting my hopes up, because someone on the internet had\n  <a href=\"https://steamcommunity.com/app/329430/discussions/0/3183486955461256214/\" rel=\"nofollow noreferrer\">\n   a similar issue\n  </a>\n  and placing an old version of\n  <code>\n   ntdll.dll\n  </code>\n  seemed to have helped. But I don't want to replace\n  <code>\n   C:\\Windows\\SYSTEM32\ntdll.dll\n  </code>\n  , it will probably break some other stuff on my system...\n </p>\n <p>\n  How can I make\n  <code>\n   DesktopEarth.exe\n  </code>\n  use my custom\n  <code>\n   ntdll.dll\n  </code>\n  ? I heard there's a thing called\n  <em>\n   dll hijacking\n  </em>\n  that may help here? Does anyone know how to do that?\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 2,
    "views": "793",
    "tags": [
        "windows",
        "dll-injection"
    ],
    "user": "klamann",
    "time": "May 6, 2023 at 20:43",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Hi and welcome to RE.SE. 1.) the message\n <i>\n  suggests\n </i>\n <code>\n  ntdll.dll\n </code>\n is the culprit, but you don't seem to be aware just how many times this has been wrong in general (further investigation such as with a memory dump will be required) 2.)\n <code>\n  ntdll.dll\n </code>\n is a known DLL, which means the session manager preloads it and keeps it around as a section object unter\n <code>\n  \\KnownDlls\ntdll.dll\n </code>\n or\n <code>\n  \\KnownDlls32\ntdll.dll\n </code>\n respectively 3.) in general DLL hijacking is difficult with known DLLs, but with ntdll.dll it may be outright impossible. This DLL gets loaded into a process\n <i>\n  extremely\n </i>\n early.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n ... and last but not least, this isn't really on-topic, although I'll concede that you'd be likely to find plenty of people around here who are equipped to help out.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "llm",
            "text": "<html><body><span class=\"comment-copy\">\n tried to ask the author? maybe he releases the code or creates fresh build for you?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Remko",
            "text": "<html><body><span class=\"comment-copy\">\n Could be a DEP Violation (cannot tell without parameter 0 of the crash), did you try disable DEP for that process? (In PowerShell:\n <code>\n  Set-ProcessMitigation DesktopEarth.exe -Disable DEP\n </code>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Remko",
            "text": "<html><body><span class=\"comment-copy\">\n @klamann 0xC0000022 means STATUS_ACCESS_DENIED -> did you run PowerShell as administrator (elevate it)? Once this setting is stored, try to launch the program as you normally would...\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <p>\n   How can I make DesktopEarth.exe use my custom ntdll.dll? I heard\nthere's a thing called dll hijacking that may help here? Anyone know\nhow to do that?\n  </p>\n </blockquote>\n <p>\n  there is no need for this. A cursory analysis showed that this screensaver was written in\n  <strong>\n   MFC\n  </strong>\n  and\n  <strong>\n   OpenGL\n  </strong>\n  .\nAnd he takes the wallpaper from the\n  <strong>\n   NASA\n  </strong>\n  <a href=\"https://visibleearth.nasa.gov/collection/1484/blue-marble\" rel=\"nofollow noreferrer\">\n   Blue Marble\n  </a>\n  project.\n </p>\n <p>\n  So you can simply grab wallpapers and videos from the NASA media library\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/wGkPW.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"NASA Blue Marble\" src=\"https://i.sstatic.net/wGkPW.jpg\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "0xC0000022L",
            "time": "May 1, 2023 at 20:18",
            "is_accepted": false,
            "comments": [
                {
                    "user": "klamann",
                    "text": "<span class=\"comment-copy\">what made DesktopEarth special is that it gave you a real-time view of the current day/night cycle, cloud cover and snow on the ground according to the current season. Also, it's not a screensaver, it updates your desktop background every few minutes. That's not what a static image can provide, but thanks for the link to the source images.</span>",
                    "time": null
                },
                {
                    "user": "klamann",
                    "text": "<span class=\"comment-copy\">no need to be condescending like this. You can download the application from archive.org and install it (in a VM) on Windows 10 or lower and see for yourself. There is a separate alpha layer for clouds that is updated from a webservice. Yes, the ground textures are static (including the snow), and they are stretched over a sphere, but the sphere rotates in sync with earth and shows the correct day/night cycle. There's some more post processing going on to make it seem like the sphere has an atmosphere and so on. If it were that trivial to re-implement, I might give it a try myself.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  A tool like\n  <a href=\"https://enigmaprotector.com/en/aboutvb.html\" rel=\"nofollow noreferrer\">\n   Enigma Virtual Box\n  </a>\n  might help, since it can be used to pack DLL-dependencies into a single executable. I would use it on a system where everything works to pack the system's DLLs (including at least\n  <code>\n   ntdll.dll\n  </code>\n  ) into a new DesktopEarth.exe, so they are virtually in the same directory (and DLLs are first loaded from the local directory).\n </p>\n <p>\n  If\n  <code>\n   ntdll.dll\n  </code>\n  is only loaded from\n  <code>\n   DesktopEarth.exe\n  </code>\n  and not indirectly, it would be possible to simply put a working version of the DLL into the directory of the executable. (But I highly doubt that's the case.)\n </p>\n <p>\n  It depends on the dependency tree and which of Win11's DLLs are incompatible with Win10's DLLs, on how many files you'd have to include. It would be trial and error.\n </p>\n <p>\n  Dependencies can for example be checked with shell scripts like\n </p>\n <pre><code>objdump -p DesktopEarth.exe | grep \"DLL Name\"  \nfor FILE in *.dll; do objdump -p $FILE | grep \"DLL Name\"; done\n</code></pre>\n <p>\n  or by using a PE viewer, such as\n  <a href=\"https://github.com/zodiacon/peexplorerv2\" rel=\"nofollow noreferrer\">\n   PEExplorerV2\n  </a>\n  .\n  \n\n  Good luck.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "xamid",
            "time": "Apr 28, 2023 at 13:36",
            "is_accepted": false,
            "comments": []
        }
    ]
}