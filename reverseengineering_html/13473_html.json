{
    "title": "Reading SCSI Command Description Block in software",
    "link": "https://reverseengineering.stackexchange.com/questions/13473/reading-scsi-command-description-block-in-software",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have made a hardware control interface for my vintage Yamaha CBX-D5 audio recording processor. using MIDI SysEx commands.I managed to find out most of it's inner workings. I programmed SysEx in Arduino to send over the MIDI bus. It works great and now is a stand-alone unit with effects.\nYou can find a video on youtube if you look for adriaanhendrik and then CBXD5\n </p>\n <p>\n  Now I also own a CBX-D3, which is a basic 4ch audio processor without effect section.\nIt uses a startup sequence of SCSI commands sent from the host computer, so that RAM is filled with the right code to make it work just like it's bigger brother (CBX-D5). That way I can fill this code in a Chip so it can be used in stand-alone mode\nI would like to read from it's SCSI bus in a software solution. I mean there are expensive hardware solutions out there, but these are out of reach for me.. so there must be a way to intercept the startup Command structure being sent over the SCSI bus so I can program it in a ATMEGA328P chip or something.\n </p>\n <p>\n  Anyone out there that knows how to achieve that one? I do have Logic Audio Platinium that sends those SCSI commands, but don't know how to read and interpret SCSI Command Description Blocks. Maybe there is a way to intercept it on the MacBook Bronze that runs it..\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "173",
    "tags": [
        "disassembly"
    ],
    "user": "adriaanhendrik",
    "time": "Sep 9, 2016 at 8:03",
    "comments": [],
    "answers_data": []
}