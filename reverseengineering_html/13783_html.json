{
    "title": "Reverse engineer a checksum algorithm from application",
    "link": "https://reverseengineering.stackexchange.com/questions/13783/reverse-engineer-a-checksum-algorithm-from-application",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to write to a certain file format directly out of an application. Although the file format itself is extremely simple, it contains a 32-bit checksum I don't know how to calculate.\n </p>\n <p>\n  I have access to an Win32 GUI application (quite old, coded in Delphi 7), that writes these files including the checksum. I already tried Ollydbg and IDA Pro Free to disassemble/debug, but I don't really know how to start.\n </p>\n <p>\n  Is there a way to trace the data? As I know the output file, I know the checksum and the input, is it possible to set a breakpoint \"whenever the value 0x12345678 appears somewhere\", and then I would be able to step back to find the algorithm?\n </p>\n <p>\n  Any ideas how I should start? Any good tutorial on this?\n </p>\n <p>\n  Edit:\nThanks to the comments/answer I was able to do find a function that sets the checksum invalid value. I was also able to find two function that calls ReadFile. The first seems to read the header to see if the file seems to be ok, and the the other one is called by the function that sets checksum invalid in a loop, the file is read in small pieces and then processed. Unfortunately it does not call the function directly, the call stack shows, that from the functions that sets checksum invalid there are 6 functions called until ReadFile is done. Is there some way to trace the data, like a breakpoint everytime the buffer with the file contents is accessed?\n </p>\n <p>\n  Edit 2:\nI started to follow every command since the first buffer is filled, but it is horrible, I steped into about 100 functions for hours now and it has only ever accessed the first 6 bytes: Sometimes it reads data, calculates something, but that value doesn't seem to be used, single bytes are compared if the are LFs or CRs... Now I know why it takes a few seconds for that program to load a file of 10KB on an Core i7.\nIt seems to read blocks of 128 bytes and process that data directly instead of checking the checksum first. Additionally there seems to be multithreading involved. I tried to set a memory breakpoint, but then the program crashes (OllyDbg has shown a warning that this could happen).\nIs it possible to do a backward trace \"offline\", I could set a start point when it first reads the file (I corrupted on purpose) and set a end point where it sets the checksum incorrect variable. It records all register/memory used in between and I could step back from the point where it sets checksum incorrect. Any idea?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "ollydbg",
        "delphi"
    ],
    "user": "Stefan",
    "time": "Oct 24, 2016 at 23:34",
    "comments": [
        {
            "user": "Martin",
            "text": "<html><body><span class=\"comment-copy\">\n Open the binary in IDA, xref the file write functions, and you'll find the place where it writes the data. From there, you go back, searching for where is that data created/modified, and you should find the checksum function.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "mrexodia",
            "text": "<html><body><span class=\"comment-copy\">\n You could try something like\n <a href=\"http://kpnc.org/idr32/en\" rel=\"nofollow noreferrer\">\n  IDR\n </a>\n it helps recognizing Delphi runtime functions. You can then use something like\n <a href=\"http://x64dbg.com\" rel=\"nofollow noreferrer\">\n  x64dbg\n </a>\n , import the MAP and see what's going on dynamically.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Guntram Blohm",
            "text": "<html><body><span class=\"comment-copy\">\n In this kind of scenario, i often use\n <code>\n  procmon\n </code>\n to check what the call stack looks like when the file gets written, which will give me an idea which functions are involved in writing the file, then give those a closer look. More information in my answer to\n <a href=\"http://reverseengineering.stackexchange.com/questions/9168/reversing-encryption-by-analysing-executable/9171#9171\">\n  this question\n </a>\n . That is about an encrypted xml file, but finding the checksum algorithm would be quite similar.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "NirIzr",
            "text": "<html><body><span class=\"comment-copy\">\n I feel this is becoming quite a different question and that existing questions might help you here if you search a bit.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Here are the ideas I came up with:\n </p>\n <ol>\n  <li>\n   <p>\n    Use\n    <a href=\"http://www.cheatengine.org/\" rel=\"nofollow\">\n     CheatEngine\n    </a>\n    's advanced memory analysis to \"breakpoint whenever the value 0x12345678 appears somewhere\".\n   </p>\n  </li>\n  <li>\n   <p>\n    Use any decent debugger's (such as\n    <a href=\"http://www.ollydbg.de/version2.html\" rel=\"nofollow\">\n     OllyDbg\n    </a>\n    ) to add a conditional breakpoint on\n    <a href=\"https://msdn.microsoft.com/en-us/library/windows/hardware/ff557714(v=vs.85).aspx\" rel=\"nofollow\">\n     <code>\n      NtWriteFile\n     </code>\n    </a>\n    to break on condition having the specific value.\n   </p>\n  </li>\n  <li>\n   <p>\n    Open the binary with a decent disassembler (such as\n    <a href=\"https://www.hex-rays.com/products/ida/\" rel=\"nofollow\">\n     IDA\n    </a>\n    ), find the imported file writing APIs and follow cross-references until you identify the CRC calculation code.\n   </p>\n  </li>\n  <li>\n   <p>\n    Use signature scanning tools (such as\n    <a href=\"http://www.hexblog.com/?p=28\" rel=\"nofollow\">\n     findcrypt\n    </a>\n    ,\n    <a href=\"https://tuts4you.com/download.php?view.1923\" rel=\"nofollow\">\n     SnD Reverser Tool\n    </a>\n    ) to identify any widely used CRC algorithms (you may be lucky).\n   </p>\n  </li>\n </ol>\n <p>\n  If any of the methods is unclear I can elaborate.\n </p>\n <p>\n  Edit:\nreading it more thoroughly now, I see your edit could actually warrant a new question, but basically it seems the code you're dealing with is small enough to trace manually. That means keep hitting the \"step into\" and follow that code and values. You might want to do that several times if you're having a hard time follow the trace. Otherwise if you identify a buffer that's being written into multiple times you can memory breakpoint it. Another approach might be to open the file in IDA and manually inspect the code. IDA makes it easier to statically read code, and also allows has some debugging functionalities.\n </p>\n</div>\n</body></html>",
            "votes": "6",
            "user": "NirIzr",
            "time": "Oct 24, 2016 at 4:52",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Stefan",
                    "text": "<span class=\"comment-copy\">Thanks for your answer, I never reverse-engineered any software before (except finding strings in a hex editor etc.), so I'm still a bit clueless where to start.</span>",
                    "time": null
                },
                {
                    "user": "Stefan",
                    "text": "<span class=\"comment-copy\">I'm sorry, this is stupid. A line-break does not seem to work in a comment, so now without any structure: 1. I tried CheatEngine, used the advanced memory analysis, but could not find out how to set a breakpoint there somewhere. I made a memory scan for that value, nothing found. 2. How do I do that? Is there a possibilty to scan for windows API calls? 3. \"find the imported file writing APIs\" - I have no idea how to that. 4. No success, I already generated lot's of checksums on the data. I assume the checksum is done only on parts of the data, size fields left blank...</span>",
                    "time": null
                },
                {
                    "user": "Stefan",
                    "text": "<span class=\"comment-copy\">There is a string \"checksum incorrect\" that is printed when a file with invalid checksum is opened. I found where is it is printed, this function is called from what could be a switch, it is like mov eax, ds:dword_1234; sub eax, 2; jz loc_a; dec eax; jz loc_b; dec eax; jz loc_c; jmp loc_d. loc_c being the function that prints \"checksum incorrect\". That means that somewhere the value 4 is written to ds:dword_1234 in case the checksum is incorrect, how do I proceed to find that place?</span>",
                    "time": null
                },
                {
                    "user": "NirIzr",
                    "text": "<span class=\"comment-copy\">That is great info. I suggest you edit your question to include it :)</span>",
                    "time": null
                }
            ]
        }
    ]
}