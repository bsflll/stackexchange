{
    "title": "Windows 7x86 System Freezes when running assembly program with int 3h",
    "link": "https://reverseengineering.stackexchange.com/questions/10883/windows-7x86-system-freezes-when-running-assembly-program-with-int-3h",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Recently was doing some pydbg testing, so I had to remove the AeDebug entry (which determines the JIT debugger) in the registry, and Windbg was (and is) my JIT debugger. Exported the key before deleting it. It was:\n </p>\n <pre><code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AeDebug\n</code></pre>\n <p>\n  and the values were:\n </p>\n <pre><code>(Default) REG_SZ (value not set)\nAuto REG_SZ 1\nDebugger REG_SZ \"C:\\...\\windbg.exe\" -p %ld -e %ld -g\nUserDebuggerHotKey REG_DWORD 0x00000000 (0)\n</code></pre>\n <p>\n  Now I had to test some other stuff in Windbg, so I added the exported AeDebug key in the .reg file.\n </p>\n <p>\n  However, when I attempt to run a few test assembly programs that contact int 3h/0xCC (which should make Windbg come up as my JIT debugger) instead my system freezes with no BSOD, and I have to power off/turn back on.\n </p>\n <p>\n  I've deleted all of AeDebug and re-ran \"windbg -I\" to register it as my JIT debugger. However, I still get system freezes!\n </p>\n <p>\n  Please help! It only occurs so far when code Im running contains an int 3h breakpoint in it.\n </p>\n <p>\n  I tried running an assembly (masm32) program that I compiled with the following to test:\n </p>\n <pre><code>.586\n.model flat, stdcall\n\noption casemap:none\n\nincludelib \\masm32\\lib\\kernel32.lib\nincludelib \\masm32\\lib\\user32.lib\n\ninclude \\masm32\\include\\kernel32.inc\ninclude \\masm32\\include\\user32.inc\ninclude \\masm32\\include\\windows.inc\n\n.code\nstart:\nxor eax, eax\nxor ebx, ebx\nxor ecx, ecx\nxor edx, edx\nint 3h\ninvoke ExitProcess, 0\nEND start\n</code></pre>\n <p>\n  However, the system still freezes. When I run windbg first and I step out of the breakpoint, it exits like normal but doesn't feeze my whole system.\n </p>\n <p>\n  How can I get normal breakpoints again that dont cause undefined behavior?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "181",
    "tags": [
        "windows",
        "assembly",
        "debugging",
        "windbg"
    ],
    "user": "grepNstepN",
    "time": "Sep 16, 2015 at 21:12",
    "comments": [
        {
            "user": "Jason Geffner",
            "text": "<html><body><span class=\"comment-copy\">\n If you run\n <code>\n  %windir%\\system32\\bcdedit.exe\n </code>\n as an administrator, do you see in the output\n <code>\n  debug___________________Yes\n </code>\n ?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This occurs when you have kernel debugging enabled, but have not attached a kernel debugger.\n </p>\n <p>\n  In short the freeze occurs when,\n </p>\n <ul>\n  <li>\n   Kernel debugging is enabled.\n  </li>\n  <li>\n   A kernel debugger is not attached. (If it was, control would be transferred to it).\n  </li>\n  <li>\n   Jit debugger is enabled/disabled (doesn't matter).\n  </li>\n  <li>\n   App is\n   <strong>\n    not being actively debugged\n   </strong>\n   by a usermode debugger like WindDbg or OllyDbg.\n  </li>\n </ul>\n <p>\n  For\n  <em>\n   Windows XP\n  </em>\n  , see the contents of\n  <code>\n   boot.ini\n  </code>\n  .\nIf\n  <code>\n   boot.ini\n  </code>\n  has a\n  <code>\n   /debug\n  </code>\n  flag it means kernel debugging is enabled.\n </p>\n <p>\n  For\n  <em>\n   Windows 7\n  </em>\n  and above you can use\n  <code>\n   bcdedit\n  </code>\n  or\n  <code>\n   msconfig\n  </code>\n  .\nYou can also use the command\n  <code>\n   bcdedit | findstr debug\n  </code>\n  to check if debug flag has been enabled.\n </p>\n <p>\n  To fix the problem, just remove the debug flag from your boot entry.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "0xec",
            "time": "Sep 17, 2015 at 7:46",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It wasn't clear from your question if the x86 in the title is concerning the processor or the process.\n </p>\n <p>\n  If you are actually running on a 64-bit processor/OS, but running a 32-bit app, then you possibly set the wrong AeDebug key. There is one for 32-bit applications and one for 64-bit applications. Make sure you are setting both of them to the appropriate version of windbg.\n </p>\n <pre><code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AeDebug\nHKLM\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\AeDebug\n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "josh poley",
            "time": "Sep 16, 2015 at 22:41",
            "is_accepted": false,
            "comments": [
                {
                    "user": "grepNstepN",
                    "text": "<span class=\"comment-copy\">Apologies if it was unclear, i noted it was x86 in the question title</span>",
                    "time": null
                }
            ]
        }
    ]
}