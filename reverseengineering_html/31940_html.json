{
    "title": "How to map a decompiled c program back into original source code",
    "link": "https://reverseengineering.stackexchange.com/questions/31940/how-to-map-a-decompiled-c-program-back-into-original-source-code",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I developed a program, and sadly I did some updates, compiled it and then lost the updated source code, but I do have the original source code (I think I added like 3 functions in the update).\n </p>\n <p>\n  So is it possible to somehow map the decompiled program to my original source code.\n </p>\n <p>\n  For example, here I have a decompiled function (I believe this is some window callback function).\n </p>\n <pre><code>undefined4 FUN_1000b5a0(HWND param_1,uint param_2,HWND param_3,HWND param_4)\n\n{\n  int iVar1;\n  int iVar2;\n  HWND pHVar3;\n  undefined4 uVar4;\n  int iVar5;\n  \n  FUN_1000b790();\n  if (0x110 < param_2) {\n    if (param_2 == 0x111) {\n      uVar4 = FUN_1000b720(param_1,(uint)param_3 & 0xffff);\n      return uVar4;\n    }\n    if ((param_2 == 0x138) && (iVar5 = GetDlgCtrlID(param_4), iVar5 == 0x543)) {\n      uVar4 = FUN_1000bb60((HDC)param_3);\n      return uVar4;\n    }\n    return 0;\n  }\n  if (param_2 == 0x110) {\n    SetWindowLongA(param_1,-0x15,(LONG)param_4);\n    pHVar3 = GetParent(param_1);\n    FUN_1002a660(param_1,pHVar3);\n    DAT_100a24a4 = param_4[0x12].unused;\n    DAT_100a2580 = param_4[0x13].unused;\n  }\n  else {\n    if (param_2 == 0x2b) {\n      FUN_1000b8c0((int)param_3,(int)param_4);\n      return 1;\n    }\n    if (param_2 != 0x53) {\n      if (param_2 != 0x7b) {\n        return 0;\n      }\n      FUN_1001beb0(&DAT_1008c5d0,param_3,(int)param_4,1,1);\n      return 1;\n    }\n    iVar5 = 0;\n    if (DAT_1008c5d0 != 0) {\n      iVar1 = param_4[2].unused;\n      iVar2 = DAT_1008c5d0;\n      while (iVar2 != iVar1) {\n        iVar2 = (&DAT_1008c5d4)[iVar5];\n        iVar5 = iVar5 + 1;\n        if (iVar2 == 0) {\n          return 1;\n        }\n      }\n      if ((iVar1 != 1) && (iVar1 != 2)) {\n        WinHelpA((HWND)param_4[3].unused,&DAT_100a0a78,0xc,(ULONG_PTR)&DAT_1008c5d0);\n        return 1;\n      }\n      WinHelpA((HWND)param_4[3].unused,s_windows.hlp_1008ce4c,0xc,(ULONG_PTR)&DAT_1008c5d0);\n      return 1;\n    }\n  }\n  return 1;\n}\n</code></pre>\n <p>\n  For instance, I know that\n  <code>\n   0x110\n  </code>\n  is\n  <code>\n   WM_INITDIALOG\n  </code>\n  ,\n  <code>\n   0x53\n  </code>\n  is\n  <code>\n   WM_COMMAND\n  </code>\n  and so on, so that is probably a switch statement that compiler modified to\n  <code>\n   if\n  </code>\n  statement.\n </p>\n <p>\n  But I don't know which function is\n  <code>\n   FUN_1000b720\n  </code>\n  (it is probably somewhere in my source code) so is it possible to give Ghidra my source code and it would map it to its decompiled output by using some patterns, and then it would leave the rest for a human to solve.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "258",
    "tags": [
        "decompilation",
        "ghidra"
    ],
    "user": "user3368585",
    "time": "Jun 7, 2023 at 16:01",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Compile the original program with debug information (i.e., tell MSVC to generate a PDB, preferably a full PDB), and then use something like BinDiff or Ghidra's \"Version Tracker\" tool to compare the original binary against the one you lost the code for.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Rolf Rolles",
            "time": "Jun 8, 2023 at 0:02",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user3368585",
                    "text": "<span class=\"comment-copy\">Thanks, could you maybe explain how to use Ghidra's \"Version Tracker\" tool? I did compile my old program with pdb file, If I load it with my older binary, it does show me all the function names, but if I try it out with newer binary, it says PDB file not match and doesnt show me all the functions (it shows some, but for most of them its still FUNxxx</span>",
                    "time": null
                },
                {
                    "user": "Rolf Rolles",
                    "text": "<span class=\"comment-copy\">The PDB will not match the binary you lost the code for. Version Tracker will try to match the functions against the two binaries against one another, and you'll be able to tell the names of what was matched. For some information on using Version Tracker, see <a href=\"https://cve-north-stars.github.io/docs/Ghidra-Patch-Diffing\" rel=\"nofollow noreferrer\">cve-north-stars.github.io/docs/Ghidra-Patch-Diffing</a></span>",
                    "time": null
                }
            ]
        }
    ]
}