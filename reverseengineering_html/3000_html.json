{
    "title": "Where could one find a collection of mid-file binary signatures?",
    "link": "https://reverseengineering.stackexchange.com/questions/3000/where-could-one-find-a-collection-of-mid-file-binary-signatures",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  While reading\n  <a href=\"https://reverseengineering.stackexchange.com/a/2996/115\">\n   an answer to another question\n  </a>\n  , it was mentioned that \"\n  <code>\n   78 9C\n  </code>\n  \" was a well-known pattern for Zlib compressed data. Intrigued, I decided to search up the signature on\n  <a href=\"http://www.filesignatures.net/index.php?search=789c&mode=SIG\" rel=\"nofollow noreferrer\">\n   the file signature database\n  </a>\n  to see if there were any related numbers. It wasn't on there. So I checked on\n  <a href=\"http://www.garykessler.net/library/file_sigs.html\" rel=\"nofollow noreferrer\">\n   Gary Kessler's magic number list\n  </a>\n  to see that it wasn't there either.\n </p>\n <p>\n  I even ended up creating a binary file with the signature at the beginning and ran \"\n  <code>\n   file\n  </code>\n  \" on it as a sort of\n  <em>\n   \"I-doubt-it-will-work-but-maybe\"\n  </em>\n  attempt (Since that works with \"\n  <code>\n   50 4b\n  </code>\n  \" because that is a valid ZIP file header and is commonly in the middle of other files.) But none of these attempts revealed that I was looking at a Zlib signature.\n </p>\n <p>\n  It would appear as though most magic number databases only contain file-format magic numbers rather than numbers to differentiate data in the middle of a file. So, my question is:\n </p>\n <p>\n  Are there any places one could find a list of binary signatures of certain types of data streams that are\n  <em>\n   not\n  </em>\n  file formats themselves? Data that is not a file itself, but rather\n  <em>\n   inside\n  </em>\n  a file.\n </p>\n <p>\n  Thanks in advance.\n </p>\n</div>\n</body></html>",
    "votes": "10",
    "answers": 1,
    "views": "4k",
    "tags": [
        "file-format",
        "magic-number"
    ],
    "user": "Archenoth",
    "time": "Apr 13, 2017 at 12:49",
    "comments": [
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n Only FYI: the sequence\n <code>\n  78 9C\n </code>\n in itself is not magic -- if it was, it would be a fixed signature. The first two bytes of a ZLib compressed file contain flags whose settings are needed for a correct decompression; and certain configurations are more common than others. See\n <a href=\"http://stackoverflow.com/questions/9050260/what-does-a-zlib-header-look-like\" title=\"what does a zlib header look like\">\n  stackoverflow.com/questions/9050260/…\n </a>\n for 3 of the most common, and\n <a href=\"http://tools.ietf.org/html/rfc1950\" rel=\"nofollow noreferrer\">\n  RFC1950\n </a>\n for their meaning. I'd have to re-read the RFC but I\n <i>\n  think\n </i>\n these 2 bytes can have just about\n <i>\n  any\n </i>\n value, and still be a valid ZLib header.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n (Add.) Consider a 'directory' kind of file, where each first long word indicate the length of the next raw chunk. Easy to spot for a human, but hard for a computer (unless specifically told to).\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Archenoth",
            "text": "<html><body><span class=\"comment-copy\">\n Aye... I've taken a look at the specification and there appears to be very few invalid values for the following bytes. And indeed, I don't really mean to refer to the values as magic numbers since those reference file formats, which is the reason I called them \"binary signatures\". (Though I am not %100 sure that is correct either.) Some signatures\n <i>\n  can\n </i>\n be magic numbers though, which was why I used magic number databases for my initial checking.  Also that directory-style file is actually a really good example. Kudos..!\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n Full set of possible zlib stream headers:\n <a href=\"https://groups.google.com/d/msg/comp.compression/_y2Wwn_Vq_E/EymIVcQ52cEJ\" rel=\"nofollow noreferrer\">\n  groups.google.com/d/msg/comp.compression/_y2Wwn_Vq_E/…\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n Thanks, Igor, for that link -- always nice to see an answer from a Definitive Authority. Note his comment \"..You would follow this with an attempted decompression..\" , in other words: \"the proof is in the pudding\". If one finds any of these magic pairs, how many bytes would one need to decode to be more than a bit sure? (That is, apart from \"all of them\". ;-)\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Are you perhaps looking for\n  <a href=\"https://code.google.com/p/binwalk/\" rel=\"noreferrer\">\n   binwalk\n  </a>\n  ? Especially the\n  <em>\n   magic\n  </em>\n  folder of its source code.\n </p>\n</div>\n</body></html>",
            "votes": "6",
            "user": "jvoisin",
            "time": "Nov 2, 2013 at 18:50",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Archenoth",
                    "text": "<span class=\"comment-copy\">Neat. A quick grep reveals that the header was Zlib in <a href=\"http://binwalk.googlecode.com/svn/trunk/src/magic/compressed\" rel=\"nofollow noreferrer\">this</a> file. The tool itself looks pretty cool, too. Thanks.</span>",
                    "time": null
                },
                {
                    "user": "saeedgnu",
                    "text": "<span class=\"comment-copy\">The code is moved to <a href=\"https://github.com/ReFirmLabs/binwalk\" rel=\"nofollow noreferrer\">github.com/ReFirmLabs/binwalk</a> Please update your link</span>",
                    "time": null
                }
            ]
        }
    ]
}