{
    "title": "I trying rewrite asm to c++ [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/31525/i-trying-rewrite-asm-to-c",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed.\n        </b>\n        This question is\n        <a href=\"/help/closed-questions\">\n         off-topic\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       Questions asking for help\n       <b>\n        reverse-engineering a specific system\n       </b>\n       are off-topic unless they demonstrate an understanding of the concepts involved and clearly identify a specific problem.\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2023-02-17 13:04:51Z\">\n        2 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/31525/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  This code generates an API key. I use it in an android app as .so file,\nbut I need to rewrite it to java from c++. How do I translate?\n </p>\n <pre><code>push    rbp\npush    r15\npush    r14\npush    r13\npush    r12\npush    rbx\nsub     rsp, 198h\nmov     rbx, rdx\nmov     rdx, rsi\nmov     r12, rdi\nmov     rax, fs:28h\nmov     [rsp+1C8h+var_38], rax\nlea     rbp, [rsp+1C8h+var_70]\nmov     rdi, rbp\nmov     rsi, r12\ncall    __Z12getSignatureP7_JNIEnvP8_jobject ; getSignature(_JNIEnv *,_jobject *)\nlea     rdi, [rsp+1C8h+var_88]\nmov     edx, 3\nmov     ecx, 0Eh\nmov     rsi, rbp\nmov     r8, rbp\ncall    __ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_mmRKS4_ ; std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,std::__ndk1::allocator<char>>::basic_string(std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,std::__ndk1::allocator<char>> const&,ulong,ulong,std::__ndk1::allocator<char> const&)\nlea     rdi, [rsp+1C8h+var_A0]\nmov     edx, 13h\nmov     ecx, 0Bh\nmov     rsi, rbp\nmov     r8, rbp\ncall    __ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_mmRKS4_ ; std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,std::__ndk1::allocator<char>>::basic_string(std::__ndk1::basic_string<char,std::__ndk1::char_traits<char>,std::__ndk1::allocator<char>> const&,ulong,ulong,std::__ndk1::allocator<char> const&)\ntest    rbx, rbx\njz      loc_21FE3\n</code></pre>\n <p>\n  The full code is\n  <a href=\"https://pastebin.com/xKRjSDAi\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  .\n  <a href=\"https://i.sstatic.net/nSLsV.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/nSLsV.png\"/>\n  </a>\n  As I understand the key generation occurs here.\n </p>\n <p>\n  To generate a key in Java after importing the library, I call the native method x01 with a string argument.\n </p>\n <p>\n  Please explain how this code works\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "133",
    "tags": [
        "disassembly",
        "decompilation",
        "c++",
        "android"
    ],
    "user": "Master",
    "time": "2 years ago",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Hi and welcome to RE.SE. So what's your question? Please also be aware that the code isn't complete. Until you provide a more complete piece of code and ask a question, you could read about the\n <a href=\"https://en.wikipedia.org/wiki/X86_calling_conventions#System_V_AMD64_ABI\" rel=\"nofollow noreferrer\">\n  SysV ABI\n </a>\n to see how the parameters are passed to those calls.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "r0xdeadbeef",
            "text": "<html><body><span class=\"comment-copy\">\n from the code you provided via p*stebin, it seems that the program creates a 128-bit hash represented as a 16-byte string in hexadecimal format. the hash is generated by performing a series of operations on an input string using a custom algorithm. at the beginning, the input string is converted into a byte buffer and padded with zeros. then, the length of the input string in bits is appended to the end of the buffer. after, the algorithm performs a series of operations on the buffer to generate the hash. the resulting hash is then represented as a string of hexadecimal digits and outputted.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "r0xdeadbeef",
            "text": "<html><body><span class=\"comment-copy\">\n ... the code allows for the creation of a unique hash for any input string using a custom algorithm.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}