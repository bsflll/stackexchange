{
    "title": "Create unprotected executable for program that decrypts itself at run-time dynamically? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/12240/create-unprotected-executable-for-program-that-decrypts-itself-at-run-time-dynam",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed\n        </b>\n        . This question needs\n        <a href=\"/help/closed-questions\">\n         details or clarity\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       <b>\n        Want to improve this question?\n       </b>\n       Add details and clarify the problem by\n       <a href=\"/posts/12240/edit\">\n        editing this post\n       </a>\n       .\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2016-03-18 08:01:23Z\">\n        9 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/12240/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  Say i have Windows executable that looks like normal one, but actually has encrypted segments or blocks of code, and the way it calculates key to decrypt itself at run-time way hard for me.\n </p>\n <p>\n  I'd like to try create a decrypted version of that program by stripping out \"self-decryptor part\" and exporting program as it was at run-time (under debug). I am not looking for way to find & remove decryption-related code.\n </p>\n <p>\n  Having IDA Pro (or  other tools), how can i re-save executable file at run-time (after program decrypted itself), or i am thinking in completely wrong direction and should not try doing it?\n </p>\n <p>\n  I've read\n  <a href=\"https://reverseengineering.stackexchange.com/questions/8910/packed-pe-file-where-to-start?rq=1\">\n   this answer and question\n  </a>\n  but i am wondering if i really cannot just re-save executable at runtime and try to make it \"runnable\"? Is this possible?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "446",
    "tags": [
        "ida",
        "windows",
        "x86",
        "pe",
        "decryption"
    ],
    "user": "Croll",
    "time": "9 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you are dealing with a packed/crypted executable it is not possible to just dump the file from memory and make it \"runnable\". You need to do at least two things:\n </p>\n <ul>\n  <li>\n   Modify the\n   <a href=\"https://en.wikipedia.org/wiki/Entry_point\" rel=\"nofollow noreferrer\">\n    Entry Point\n   </a>\n   so that you bypass the execution of the code in the unpacking stub.\n  </li>\n  <li>\n   Fix the\n   <a href=\"https://en.wikipedia.org/wiki/Portable_Executable#Import_Table\" rel=\"nofollow noreferrer\">\n    import table\n   </a>\n   .\n  </li>\n </ul>\n <p>\n  To do these two things, you need to have some basic understanding about the\n  <a href=\"https://en.wikipedia.org/wiki/Portable_Executable\" rel=\"nofollow noreferrer\">\n   PE file format\n  </a>\n  . You can find some useful links about the PE file format in this\n  <a href=\"https://reverseengineering.stackexchange.com/a/11478/12897\">\n   answer\n  </a>\n  .\n </p>\n <p>\n  If you know what type of crypter/packer is being used on the file, feel free to upload the sample or tell me so I can maybe give you some guidelines on obtaining the payload. You can check this with a tool like\n  <a href=\"https://www.aldeid.com/wiki/PEiD\" rel=\"nofollow noreferrer\">\n   PEid\n  </a>\n  or\n  <a href=\"http://exeinfo.atwebpages.com/\" rel=\"nofollow noreferrer\">\n   ExeInfo\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": true,
            "comments": []
        }
    ]
}