{
    "title": "Batch disassembling DLL and EXE files?",
    "link": "https://reverseengineering.stackexchange.com/questions/16893/batch-disassembling-dll-and-exe-files",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In\n  <code>\n   %SYSTEMROOT%\n  </code>\n  , there are about 2000 DLL and EXE files. I am looking into reverse engineering some of them which are dependencies of other applications.\n </p>\n <p>\n  However, what I would preferably want is disassembling all of them and get the assembly files from all files in order to search through the code more \"quickly\". Even though I keep focusing on individual functions and files, I would otherwise need to decompile each DLL individually, which is a lot of repetitive work.\n </p>\n <p>\n  It's hard enough to find a proper x64 disassembler tool, let a long something that has command line options. Do you have any idea how to solve this problem?\n </p>\n</div>\n</body></html>",
    "votes": "8",
    "answers": 3,
    "views": "6k",
    "tags": [
        "windows",
        "assembly"
    ],
    "user": "bytecode77",
    "time": "Dec 1, 2017 at 21:32",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you have any version of Visual Studio or Visual Studio Build Tools installed, you have a powerful command line tool called\n  <code>\n   dumpbin\n  </code>\n  , which includes a disassembler option, available to you.\n </p>\n <pre><code>dumpbin /SECTION:.text /DISASM file.exe > file.txt\n</code></pre>\n <p>\n  For more information, look at the MSDN documentation on\n  <code>\n   dumpbin\n  </code>\n </p>\n</div>\n</body></html>",
            "votes": "9",
            "user": "0xC0000022L",
            "time": "Jun 17, 2018 at 20:03",
            "is_accepted": true,
            "comments": [
                {
                    "user": "bytecode77",
                    "text": "<span class=\"comment-copy\">This is amazing! Never knew there were built in tools in the VS tool chain for that. I will accept your answer and upvote both, as you have described the core issue most complete (how to decompile a file). I'll find a scripting solution then (cygwin, LINQPad, etc.)</span>",
                    "time": null
                },
                {
                    "user": "Simple Sandman",
                    "text": "<span class=\"comment-copy\">For anyone trying to find <code>dumpbin</code>, refer to <a href=\"https://stackoverflow.com/questions/477387/cannot-find-dumpbin-exe\">this StackOverflow question</a>. For me with VS 2019, I had to install \"C++ profiling tools\" as an individual component in the VS installer.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Unix tools are your friends!  You can disassemble all files by using a combination of Unix commands.  These are easily available on Windows through\n  <a href=\"https://www.cygwin.com/\" rel=\"noreferrer\">\n   Cygwin\n  </a>\n  .\n </p>\n <pre><code>find $SYSTEMROOT -name \\*.exe -or -name \\*.dll -print0 |\nxargs -0 -n 1 dumpbin /disasm \n</code></pre>\n <p>\n  The first command finds all\n  <code>\n   .exe\n  </code>\n  and\n  <code>\n   .dll\n  </code>\n  commands. The second applies\n  <code>\n   dumpbin\n  </code>\n  , which comes packaged with Visual Studio, on each found file name. You can redirect the output into a file, or you can modify the above sequence to write the output of each disassembled file into a different output file.  You can also replace\n  <code>\n   dumpbin\n  </code>\n  with your favourite disassembler.\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "Diomidis Spinellis",
            "time": "Dec 3, 2017 at 5:29",
            "is_accepted": false,
            "comments": [
                {
                    "user": "bytecode77",
                    "text": "<span class=\"comment-copy\">I don't see any package named \"dumpbin\". If \"disasm\" is a placeholder for any disassembler command line tool, then I would first need one. The real complexity for me is to find and use a proper tool. Having one would already be sufficient, as there are plenty of ways to invoke it, cygwin being only one of them.</span>",
                    "time": null
                },
                {
                    "user": "fpmurphy",
                    "text": "<span class=\"comment-copy\"><code>dumpbin</code> is a Visual Studio tool</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@DiomidisSpinellis: these days I'd always recommend all the basic tools included with Git for Windows. My main argument: it's a code-signed distribution.</span>",
                    "time": null
                },
                {
                    "user": "Diomidis Spinellis",
                    "text": "<span class=\"comment-copy\">@0xC0000022L I like that Cygwin through its package manager allows you to choose from hundreds of projects, thus allowing you to grow with it. Isn't Git for Windows restricting in this area?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can always write an IDAPython script that would:\n </p>\n <ol>\n  <li>\n   Load a file using\n   <code>\n    idc.LoadFile\n   </code>\n   .\n  </li>\n  <li>\n   Wait for the auto-analysis to finish using\n   <code>\n    ida_auto.auto_wait\n   </code>\n  </li>\n  <li>\n   Save the resulting IDB file by calling\n   <code>\n    idc.save_database\n   </code>\n   .\n  </li>\n </ol>\n <p>\n  and then load the next file by calling\n  <code>\n   idc.LoadFile\n  </code>\n  again.\n </p>\n <p>\n  IMO, IDA's disassembler usually yields better results in comparison to the dumpbin utility.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "NirIzr",
            "time": "Jun 18, 2018 at 8:49",
            "is_accepted": false,
            "comments": []
        }
    ]
}