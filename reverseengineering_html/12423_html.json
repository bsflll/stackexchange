{
    "title": "Does empty enumeration in C structure creates unnamed field?",
    "link": "https://reverseengineering.stackexchange.com/questions/12423/does-empty-enumeration-in-c-structure-creates-unnamed-field",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I was parsing some modified C++ headers with IDA when I come to some strange behavior. Imagine we have a structure like this (stored in a C header):\n </p>\n <pre><code>struct S\n{\n    enum {EN0, EN1};\n\n    int m1;\n} ;\n</code></pre>\n <p>\n  When I parse it with IDA Pro the created type seems to threat the first unnamed enum as data member inside the structure. I'm thinking - is this correct behavior in the case?\n </p>\n <p>\n  I tested this on online C compiler which seems not to count the enumeration inside\n  <code>\n   struct S\n  </code>\n  as part of its data (\n  <a href=\"http://melpon.org/wandbox/permlink/AwbLoM0eUkZ9zfdl\" rel=\"nofollow\">\n   here\n  </a>\n  - i tested sizeof of\n  <code>\n   S\n  </code>\n  when there is only enum in it and it gave size of 0).\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "341",
    "tags": [
        "ida",
        "decompilation",
        "c"
    ],
    "user": "rec",
    "time": "Apr 12, 2016 at 18:39",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It's just a definition of an ENUM there is no declaration.\n </p>\n <p>\n  Try this:\n </p>\n <pre><code>struct S\n{\n    enum {EN0, EN1} myEnum;\n\n    int m1;\n} ;\n</code></pre>\n <p>\n  Now we have two ints.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Ouss4",
            "time": "Apr 15, 2016 at 1:37",
            "is_accepted": false,
            "comments": []
        }
    ]
}