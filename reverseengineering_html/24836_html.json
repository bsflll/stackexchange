{
    "title": "advapi32.dll changes name of function during forwarding of exports",
    "link": "https://reverseengineering.stackexchange.com/questions/24836/advapi32-dll-changes-name-of-function-during-forwarding-of-exports",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying myself at writing a manual mapper, for injection of DLLs into other processes.\n </p>\n <p>\n  I've come to the point, where I've written a simple \"Hello World\"\n  <code>\n   .dll\n  </code>\n  , that I'm trying to inject into another process.\n </p>\n <p>\n  I have run into the problem, that my sample Hello world DLL relies on functions from the\n  <code>\n   user32.dll\n  </code>\n  , which means that I have to map that one too. The\n  <code>\n   user32.dll\n  </code>\n  relies in itself on other\n  <code>\n   .dll\n  </code>\n  , which are among others imported via the API Set schema.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/dqjsa.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"User32dll imports via api set schema\" src=\"https://i.sstatic.net/dqjsa.png\"/>\n  </a>\n </p>\n <p>\n  Take a note of the exact naming of the imported function, that I marked:\n  <code>\n   EventActivityIdControl\n  </code>\n </p>\n <p>\n  As it turned out, the functions for this particular API are found in the\n  <code>\n   advapi32.dll\n  </code>\n  .\n </p>\n <p>\n  If I look at that DLL in CFF explorer, lo and behold there are the correct exports:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/gRFFF.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"advapi32.dll exports the correct functions for the api\" src=\"https://i.sstatic.net/gRFFF.png\"/>\n  </a>\n </p>\n <p>\n  However, when I manually parse, the\n  <code>\n   advapi32.dll\n  </code>\n  and look at the exports, I get forwarded exports from\n  <code>\n   ntdll.dll\n  </code>\n  , with the prefix\n  <code>\n   Etw\n  </code>\n  , which messes up my string comparisons.\n  <a href=\"https://i.sstatic.net/31WdQ.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Exports of advapi32.dll parsed by my code\" src=\"https://i.sstatic.net/31WdQ.png\"/>\n  </a>\n </p>\n <p>\n  This prefix seems to be omitted by CFF explorer and other similar software.\n </p>\n <p>\n  I cannot find any information about this behaviour/schema. Can anyone explain, why this is or where I can find out more about this?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "301",
    "tags": [
        "windows",
        "pe",
        "file-format",
        "dll-injection",
        "api"
    ],
    "user": "Burgesstorm",
    "time": "Nov 4, 2023 at 20:47",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n use vs dumpbin cff explorer  migh tbe old I don't know  C:\\>dumpbin /exports c:\\Windows\\System32\\advapi32.dll | grep -i acti        1288  11E          EventActivityIdControl (forwarded to ntdll.EtwEventActivityIdControl)  C:\\>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Shortly after posting the question I took a closer look at my code for parsing the exports and came to the realization, that I made an incorrect assumption.\n </p>\n <p>\n  In the export directory entries, if a function entry point to the export section, you can find a string there, which depicts the forwarder export name. An example of that is visible in the last screenshot of my original question.\n </p>\n <p>\n  I was under the impression, that the name after the dot is also the name of the function as it is exported by the forwarding DLL itself.\n </p>\n <p>\n  This is wrong. There is still a valid export name entry in the Export Names Table (EAT), that must be read to accomplish correct import to export name mapping.\n </p>\n <p>\n  I hope this explanation helps some other poor soul, that wastes hour on the same wrong assumption.\n </p>\n <p>\n  Here is a picture of the mapping from the forwarded function name to the name, that is used to export that forwarded function in the\n  <code>\n   advapi32.dll\n  </code>\n  .\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/kSfgV.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Forwarded function name to exported function name\" src=\"https://i.sstatic.net/kSfgV.png\"/>\n  </a>\n </p>\n <p>\n  As you can seen the export in the\n  <code>\n   ntdll.dll\n  </code>\n  has the\n  <code>\n   Etw\n  </code>\n  prefix, that I was talking about and the named export in the\n  <code>\n   advapi32 dll\n  </code>\n  does not have this Prefix, which led me to my initial assumption, that CFF explorer was omitting the prefix.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "0xC0000022L",
            "time": "Nov 4, 2023 at 20:49",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Who said the name when attaching .DEF file must be same?\nFor example:\n </p>\n <pre class=\"lang-none prettyprint-override\"><code>LIBRARY \"A.DLL\"\n\nEXPORTS\n    AABBCC = ANOTHER.ABCABC\n</code></pre>\n <p>\n  In the advapi32.dll, it might be this (for example, only\n  <code>\n   EqualSID\n  </code>\n  and\n  <code>\n   EventActivityIdControl\n  </code>\n  is included):\n </p>\n <pre><code>LIBRARY \"ADVAPI32.DLL\"\n\nEXPORTS\n    EqualSID\n    EventActivityIdControl = ntdll.EtwEventActivityIdControl\n</code></pre>\n</div>\n</body></html>",
            "votes": "-1",
            "user": "winapiadmin",
            "time": "Nov 4, 2023 at 13:59",
            "is_accepted": false,
            "comments": []
        }
    ]
}