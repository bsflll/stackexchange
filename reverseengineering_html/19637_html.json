{
    "title": "getting %localappdata% in asm",
    "link": "https://reverseengineering.stackexchange.com/questions/19637/getting-localappdata-in-asm",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have an old windows x86 application that no longer works properly since windows 8. This app creates files within its own folders for things like app settings. Unfortunately, Microsoft no longer allows this and I am forced to execute my app with admin permission so it can create those files within its folder in\n  <code>\n   Program Files (x86)\n  </code>\n  .\n </p>\n <p>\n  Now I was wondering if I can patch it by changing the directory of instead creating the files in the current directory it will instead create it at\n  <code>\n   %localappdata%\\MyApp\\\n  </code>\n  .\n </p>\n <p>\n  I know the address of the code that creates the files and I know it uses the\n  <code>\n   freopen\n  </code>\n  function with\n  <code>\n   r+\n  </code>\n  or\n  <code>\n   wb\n  </code>\n  modes.\n </p>\n <p>\n  I have tried editing the path directly with a hex editor from\n  <code>\n   Data\\Display\\OptionData.opf\n  </code>\n  to\n  <code>\n   %localappdata%\\MyApp\\od.opf\n  </code>\n  but that didn't work.\n </p>\n <p>\n  What are my options? I am new to assembly and reverse engineering but I really want to fix this without injecting a DLL and detouring the function. (my issue with detours is it sometimes gets false positive as virus by some AV)\n </p>\n <p>\n  I'm now thinking of doing a codecave. But like I said I need to change the directory to the localappdata directory. How do I do this? (and supporting as far back as winxp upto latest win10)\n </p>\n <p>\n  I understand in code (c++) this will work:\n </p>\n <pre><code>char* appdata = getenv(\"APPDATA\"); // wont work with winxp\n</code></pre>\n <p>\n  or even:\n </p>\n <pre><code>LPTSTR GetSpecialFolder(int CSIDL) {\n    TCHAR szPath[MAX_PATH];\n\n    if (SUCCEEDED(SHGetFolderPath(NULL, CSIDL | CSIDL_FLAG_CREATE, NULL, 0, szPath)))\n    {\n        PathAppend(szPath, TEXT(\"\\\\MyApp\\\\\"));\n        CreateDirectory(szPath, NULL);\n\n        return szPath;\n    }\n    else {\n        return TEXT(\"\");\n    }\n}\n</code></pre>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "78",
    "tags": [
        "disassembly",
        "windows",
        "assembly",
        "x86",
        "patching"
    ],
    "user": "majidarif",
    "time": "Oct 16, 2018 at 12:20",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n RE.SE is not for software development questions, actually. Have you considered using the\n <code>\n  USERPROFILE\n </code>\n variable instead of\n <code>\n  APPDATA\n </code>\n ? That one would exist also on XP and earlier and all you seem to aim for is a writable location, right?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "majidarif",
            "text": "<html><body><span class=\"comment-copy\">\n Yes, a writable location. I do think this question fits right here. I'm reverse engineering an app I have no source code for. I'm trying to create a codecave to replace the filepath. My question really is how do I do\n <code>\n  char* appdata = getenv(\"APPDATA\");\n </code>\n in assembly.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n that's my point. While you're doing this as part of a reverse engineering project, perhaps, the task of writing a certain piece of C code in assembly better fits on StackOverflow. But I'll leave it to the community to decide, especially since for a codecave special limitations apply.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Biswapriyo",
            "text": "<html><body><span class=\"comment-copy\">\n Don't patch the executable. Instead make a symbolic link from that folder to a\n <code>\n  LocalAppData\\foo\\bar\n </code>\n where user has r/w permission.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}