{
    "title": "Deobfuscating a javascript file",
    "link": "https://reverseengineering.stackexchange.com/questions/6334/deobfuscating-a-javascript-file",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am having a obfuscated JS file and I want to deobfuscate it (and\n  <em>\n   not beautify it\n  </em>\n  ). I have seen answer to a\n  <a href=\"https://reverseengineering.stackexchange.com/questions/1436/analyzing-highly-obfuscated-javascript\">\n   similar question here\n  </a>\n  and I tried de-obfuscating a the file using online version of JSUnpack and JSDetox. However, I am still not able to deobfuscate it. The JS file is not a malware but it is used to inject ads into web-page. So, any analyser analysing the file won't find anything malicious. The problem is that the JS stores (hex) strings in string array and using it to concatenate the code. JSDetox atleast decodes the string array in the beginning of the file. However, the readability is not improved anyway as the whole code makes use of the string array. If anyone wants to take a look at the file they can find it\n  <a href=\"http://pastebin.com/vYSVe4KX\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  .\n </p>\n <p>\n  Any kind of help would be appreciated! Thanks.\n </p>\n <p>\n  <strong>\n   Edit:\n  </strong>\n  I have also tried Malzilla now because I found a similar technique\n  <a href=\"https://reverseengineering.stackexchange.com/questions/2103/try-to-deobfuscate-multi-layered-javascript?rq=1\">\n   here\n  </a>\n  . However, the script probably has some errors which is tolerated by Chrome. However, when I click \"Run Script\" in Malzilla, I get a message saying \"Script cannot be compiled\". I tried to debug script using the \"Debug Script\" button, the window highlights some line saying \"InterYeildOptions is not defined\" and I don't know what to do about it. :-/\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 2,
    "views": "5k",
    "tags": [
        "deobfuscation",
        "javascript"
    ],
    "user": "Pervy Sage",
    "time": "Apr 13, 2017 at 12:49",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Well, so, you can use\n  <a href=\"http://jsbeautifier.org/\" rel=\"nofollow\">\n   http://jsbeautifier.org/\n  </a>\n  with unescape printable chars to get the top var decoded, then, if you look closely, you should see  that the values of the var are used everywhere with an index, so you can just write a quick script to replace it with the actual value. End result is\n  <a href=\"http://pastebin.com/iJqs6Jq3\" rel=\"nofollow\">\n   here\n  </a>\n </p>\n <p>\n  Python to replace the var:\n </p>\n <pre><code>#Replace.py //probably not optimized, so dont be too harsh on me\n_0x4b6a=[copy-pasteValueDecodedFromScript]\nwith open('EncodedScript.js') as fp:\n    for line in fp:\n        for i in range(0,608):\n            line = line.replace(\"_0x4b6a[\"+str(i)+\"]\", _0x4b6a[i])      \n        print line\n</code></pre>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Sigtran",
            "time": "Sep 29, 2014 at 8:37",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'd do it as follows:\n </p>\n <p>\n  As far as I can see the main array with strings is static. \nIt is not changed. This means that you can replace all appearances of this array members with their contents (in \"\") after decoding all of it from hex form.\n </p>\n <p>\n  I'd do it with python script, you can do it by the tool of your choice.\n </p>\n <p>\n  Here is the python script (js.js is a copy of your script):\n </p>\n <pre><code>    initial_array = [... here should be the copy of initial array _0x4b6a ...]\n    def stringify(s):\n        return \"\\\"\"+s.replace(\"\\\"\", \"\\\\\\\"\")+\"\\\"\"\n\n    f = open(\"js.js\", \"r\")\n    data = f.read()\n\n    for idx in range(len(initial_array)):\n        member = \"_0x4b6a[%d]\" % idx\n        data = data.replace(member, stringify(initial_array[idx]))\n\n    print data\n</code></pre>\n <p>\n  result is placed here:\n  <a href=\"http://pastebin.com/SYKszfYL\" rel=\"nofollow\">\n   here\n  </a>\n </p>\n <p>\n  Please note that the result is not syntactically correct. \nTo make it better you should work on stringify function in the script\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "w s",
            "time": "Sep 29, 2014 at 8:01",
            "is_accepted": false,
            "comments": []
        }
    ]
}