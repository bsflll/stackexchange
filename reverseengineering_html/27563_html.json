{
    "title": "On Windows, when is a PTE a VAD prototype PTE (with address 0xFFFFFFFF0000) instead of a prototype-pointer PTE?",
    "link": "https://reverseengineering.stackexchange.com/questions/27563/on-windows-when-is-a-pte-a-vad-prototype-pte-with-address-0xffffffff0000-inst",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have reviewed several sources on this PTE type, including Windows internals and the following:\n </p>\n <p>\n  <a href=\"http://blog.rekall-forensic.com/2014/10/windows-virtual-address-translation-and.html\" rel=\"nofollow noreferrer\">\n   http://blog.rekall-forensic.com/2014/10/windows-virtual-address-translation-and.html\n  </a>\n  <a href=\"https://thalium.github.io/blog/posts/windows-full-memory-introspection-with-icebox/\" rel=\"nofollow noreferrer\">\n   https://thalium.github.io/blog/posts/windows-full-memory-introspection-with-icebox/\n  </a>\n  <a href=\"https://cyberforensicator.com/wp-content/uploads/2017/08/Scanning-memory-with-Yara.pdf\" rel=\"nofollow noreferrer\">\n   https://cyberforensicator.com/wp-content/uploads/2017/08/Scanning-memory-with-Yara.pdf\n  </a>\n  <a href=\"https://www.sciencedirect.com/science/article/pii/S1742287619301574\" rel=\"nofollow noreferrer\">\n   https://www.sciencedirect.com/science/article/pii/S1742287619301574\n  </a>\n </p>\n <p>\n  None of them explain when a PTE is actually of the VAD prototype format.\n </p>\n <p>\n  Seeing as PPTEs are created when the section object is created for images, and for data files the PPTEs are created when the view is mapped (which is when the VAD entry is created)\n  <a href=\"https://madoc.bib.uni-mannheim.de/3148/1/InternalsOfWindowsMemoryMangement2.pdf\" rel=\"nofollow noreferrer\">\n   [1]\n  </a>\n  , I can't see a case where the PTEs in the VAD allocation would ever not be able to point directly to the prototype PTEs.\n </p>\n <p>\n  If the PPTEs weren't created once the view is mapped, it would make sense to be a VAD type, because there is no PPTE virtual address to point to, but this is not the case. From now on, there is always a PPTE virtual address to point to. The PPTE itself will point to a subsection object (\n  <code>\n   _MMPTE_SUBSECTION\n  </code>\n  format) in the event that it is a file-backed and not in RAM, and point to a pagefile location if it is pagefile-backed and not in RAM.\n </p>\n <p>\n  I did some further investigation and noticed that the VAD prototype PTEs were all on mapped files, and mapped images had regular prototype pointer PTEs (which is strange because PPTEs are available when you map a view in the VAD in the case of data, and when the section object is created in the case of image, which is before the mapping of the view in the VAD). Also something strange I noticed is that CoW PTEs are blank when they are not pointing to a page in the file, as opposed to pointing to the PPTE. They need to point to a page in the file when they are read and before any writes occur. I'd like that to also be answered.\n </p>\n <p>\n  I have seen a case where more space has been reserved for a data file than the size of the file -- on VMMap it shows 16KiB committed and 512KiB reserved. The committed PTEs are VAD prototypes and the reserved ones are blank (unknown PTEs)\n </p>\n <p>\n  I previously asked this on SO, but obviously nobody replied, so I'm moving it to the correct forum. Before anyone tells me I should have debugged it before asking, this question will be number 1 in the search for 'VAD prototype PTE' and '0xFFFFFFFF0000' and so on, and people will be looking it up when those sources don't elaborate. There is no googlable information on this detail written in a human language, and I know I spent a good few hours on advanced and verbatim search, and it's a fundamental piece of information for people to know.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "289",
    "tags": [
        "windows",
        "kernel",
        "pages"
    ],
    "user": "Lewis Kelsey",
    "time": "Apr 26, 2021 at 15:03",
    "comments": [],
    "answers_data": []
}