{
    "title": "Basic help for reverse engineering for a newbie",
    "link": "https://reverseengineering.stackexchange.com/questions/12165/basic-help-for-reverse-engineering-for-a-newbie",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am a newbie to reverse engineering software.\n </p>\n <p>\n  I am familiar x86 asm language, Linux internals, and c language.\n </p>\n <p>\n  After going through lots of tutorials, I didn't absorb much knowledge.\n  \n\n  So, I have started writing my own programs then reversing them again from their binaries.\n </p>\n <p>\n  Is this approach good?\n </p>\n <p>\n  Also if I want to get more knowledge, a better grip on assembly and c, should I use ollydbg or IDA pro for starting?\n  \n\n  Please recommend some links or books that would be good. :- )\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 4,
    "views": "8k",
    "tags": [
        "assembly",
        "c"
    ],
    "user": "sourav punoriyar",
    "time": "May 5, 2020 at 4:12",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  When I started with reversing about 3 years ago I used the following books:\n </p>\n <ul>\n  <li>\n   <a href=\"http://rads.stackoverflow.com/amzn/click/0764574817\">\n    Reversing:Secrets of Reverse Engineering\n   </a>\n  </li>\n  <li>\n   <a href=\"http://rads.stackoverflow.com/amzn/click/1593272901\">\n    Practical Malware Analysis\n   </a>\n  </li>\n </ul>\n <p>\n  Both of these books have some really good newbie related content like recognizing C/C++ code constructs in assembly and introduction materials to various tools (both Ollydbg and Ida Pro). If you are more interested in Ida pro, I would suggest reading\n  <a href=\"http://rads.stackoverflow.com/amzn/click/1593272898\">\n   The Ida Pro Book\n  </a>\n  . Also the book\n  <a href=\"http://rads.stackoverflow.com/amzn/click/1118787315\">\n   Practical Reverse Engineering\n  </a>\n  has some really nice reviews but I didn't have a chance reading it.\n </p>\n <p>\n  For getting more familiar with Ollydbg I did most of the tutorials from the\n  <a href=\"http://octopuslabs.io/legend/blog/sample-page.html\">\n   Legend Of Random page\n  </a>\n  . I liked those tutorials because they don't just focus on reversing C/C++ binaries but also give you a brief look at tools and techniques with reversing Delphi and Visual Basic applications.\n </p>\n <p>\n  When you get a little bit more familiar with the following, I suggest you to try some crackmes from\n  <a href=\"http://crackmes.de/\">\n   Crackmes.de\n  </a>\n  . There are some great newbie related crackmes there like the\n  <a href=\"http://crackmes.de/users/arturdents\">\n   Artur Dents series\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "ubnix",
            "time": "Mar 7, 2016 at 8:29",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Hackndo",
                    "text": "<span class=\"comment-copy\">I could copy/paste this answer. Exactly the same steps, same books, same websites. Great advice.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Download and read\n  <a href=\"http://beginners.re/RE4B-EN.pdf\" rel=\"nofollow\">\n   Reverse Engineering for Beginners\n  </a>\n  . It is excellent and free to download. It contains lots of theory and examples you can easily understand. Plus, it refers to all major architectures, x86, x86-64bit, ARM and MIPS. And one more thing. Yes, your approach is good, you just have to gradually start reversing more difficult programs, like self-made keygens and stuff.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Chris Tsiakoulas",
            "time": "Mar 7, 2016 at 18:05",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you're looking for more challenges like @ubnix suggested, try looking on the\n  <a href=\"https://tuts4you.com/\" rel=\"nofollow\">\n   Tuts 4 You\n  </a>\n  website. In the downloads section there are a lot of reverse-engineering resources, including crackmes, tutorials, tools, and references. One of the resources I used in learning was Lena's\n  <a href=\"https://tuts4you.com/download.php?view.1089\" rel=\"nofollow\">\n   Reverse Engineering for Newbies\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "dingo_kinznerhook",
            "time": "Mar 7, 2016 at 21:57",
            "is_accepted": false,
            "comments": [
                {
                    "user": "ra170",
                    "text": "<span class=\"comment-copy\">The password is in the pop-up :)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'd suggest:\n  <a href=\"http://crackmes.de/\" rel=\"nofollow\">\n   http://crackmes.de/\n  </a>\n  as a source of problems.  Their problems are graduated from fairly easy to extremely difficult.  In addition to problems, they do maintain a list of solutions (not for all problems though) if you get stuck.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "thurizas",
            "time": "Mar 9, 2016 at 13:41",
            "is_accepted": false,
            "comments": []
        }
    ]
}