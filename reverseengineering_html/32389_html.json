{
    "title": "How to convert variable to struct member in IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/32389/how-to-convert-variable-to-struct-member-in-ida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm working on a windows program which is walking PEB Ldr list. the related types are as follows:\n </p>\n <pre><code>struct LDR_DATA_TABLE_ENTRY {\n    LIST_ENTRY InLoadOrderLinks;         // offset = 0, size = 0x10\n    LIST_ENTRY InMemoryOrderLinks;   // offset = 0x10, size = 0x10\n    // ...\n    UNICODE_STRING FullDllName;       // offset = 0x48, size = 0x10\n    UNICODE_STRING BaseDllName;     // offset = 0x58, size = 0x10\n};\n</code></pre>\n <p>\n  the pseudocode IDA generated is like that:\n </p>\n <pre><code>i = (LDR_DATA_TABLE_ENTRY *)NtCurrentPeb()->Ldr->InMemoryOrderModuleList.Flink;\nCurDllName = i->FullDllName.Buffer;     // FullDllName should be BaseDllName!\nCurDllNameLength = i->FullDllName.Length;\n</code></pre>\n <p>\n  The problem is,\n  <code>\n   i->FullDllName\n  </code>\n  should be\n  <code>\n   i->BaseDllName\n  </code>\n  , because\n  <code>\n   i\n  </code>\n  is not\n  <code>\n   LDR_DATA_TABLE_ENTRY *\n  </code>\n  but actually\n  <code>\n   LDR_DATA_TABLE_ENTRY * + 0x10\n  </code>\n  (address of\n  <code>\n   LDR_DATA_TABLE_ENTRY.InMemoryOrderLinks\n  </code>\n  ).\n </p>\n <p>\n  The correct output should be like that:\n </p>\n <pre><code>i = NtCurrentPeb()->Ldr->InMemoryOrderModuleList.Flink;\nLDR_DATA_TABLE_ENTRY *Node = CONTAINING_RECORD(i, LDR_DATA_TABLE_ENTRY, InMemoryOrderLinks);\nCurDllName = Node->BaseDllName.Buffer;\nCurDllNameLength = Node->BaseDllName.Length;\n</code></pre>\n <p>\n  In case\n  <code>\n   i\n  </code>\n  is an offset, Is there any way I can do to change type of\n  <code>\n   i\n  </code>\n  to something correct (like struct members) or just add the variable\n  <code>\n   Node\n  </code>\n  in IDA? The\n  <code>\n   Node\n  </code>\n  pointer I wrote here seems to be optimized out.\n </p>\n <p>\n  I tried\n  <code>\n   CONTAINING_RECORD\n  </code>\n  but it seems not applicable here.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "197",
    "tags": [
        "ida",
        "windows",
        "pe"
    ],
    "user": "H3d9",
    "time": "Oct 13, 2023 at 2:39",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Right-click\n  <code>\n   i\n  </code>\n  and select either:\n </p>\n <ul>\n  <li>\n   <code>\n    Create new struct type\n   </code>\n   to create a new type deducted from\n   <strong>\n    function-scoped\n   </strong>\n   access to the variable\n  </li>\n  <li>\n   <code>\n    Convert to struct *\n   </code>\n   to apply an existing type\n  </li>\n </ul>\n <p>\n  You can inspect and manage structure types in\n  <code>\n   Local Types\n  </code>\n  tab (\n  <code>\n   View/Open subviews/Local Types\n  </code>\n  ), including the types you already have (found in system APIs and debug symbols).\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "mimak",
            "time": "Oct 13, 2023 at 12:59",
            "is_accepted": true,
            "comments": []
        }
    ]
}