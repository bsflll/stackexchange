{
    "title": "Unable to understand x86 instruction(s)",
    "link": "https://reverseengineering.stackexchange.com/questions/31143/unable-to-understand-x86-instructions",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Recently I have been given a set of assembly instructions which I must learn to understand. I know an\n  <strong>\n   extremely\n  </strong>\n  basic level of x86 assembly but I'm starting to come across more nuances that are very difficult for me to 'just google'. So I have to ask you\n  <em>\n   lovely\n  </em>\n  people.\n </p>\n <p>\n  Below are the instructions\n </p>\n <pre><code>mov     ecx, [esp+10h+arg_0]\n...\n...\nmov     [esp+10h+arg_8], eax\n...\n...\nand     al, 0E0h\n</code></pre>\n <p>\n  Are arg_0 and arg_8 arguments supplied to the program at runtime or arguments supplied to a function within the program? Also please help me understand what 0E0h is in the last instruction. Is that a function, memory address, or hex value? Thank you.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "149",
    "tags": [
        "disassembly",
        "assembly",
        "x86",
        "static-analysis"
    ],
    "user": "guest1",
    "time": "Nov 17, 2022 at 0:06",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  the first instruction is a read\n  \n\n  the second instruction is a write\n  \n\n  the third instruction is a compare\n </p>\n <p>\n  arg0 , arg_8 are arguments provided  to the function and is provided by the caller like\n </p>\n <pre><code>call xyz(arg0,arg1....argn);\n</code></pre>\n <p>\n  normally arguments provided to a function are not modified\nunless the argument is a\n  <strong>\n   pass by reference\n  </strong>\n </p>\n <p>\n  for understanding opcodes operation you must understand\n </p>\n <ol>\n  <li>\n   how an opcode works\n  </li>\n  <li>\n   what are its operands ,\n  </li>\n  <li>\n   how many operands does it take\n  </li>\n  <li>\n   what is result of the operation\n  </li>\n  <li>\n   which flags are affected\n  </li>\n  <li>\n   what exceptions are raised\n  </li>\n  <li>\n   what is the mode in which this opcode can be used\n  </li>\n  <li>\n   are there any bitwise exceptions\n  </li>\n  <li>\n   are there modifiers to the opcode\n  </li>\n  <li>\n   Compatibility etc\nthese are all described in intel / amd manuals\n   \n\n   or you can use any online reference like\n   <a href=\"https://www.felixcloutier.com/x86/and\" rel=\"nofollow noreferrer\">\n    reference for and opcode\n   </a>\n  </li>\n </ol>\n <p>\n  if you go through the linked reference you will understand that the operand can be an immediate (constant value , [imm8 , imm16 , imm32 )\n  \n\n  or register (al...,r8 or ax...,r16 or eax...,r32)\n  \n\n  or memory (byte,m8 or word , m16 or dword , m32)\n </p>\n <p>\n  based on the description infer the type of your operand 0E0h\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "blabb",
            "time": "Nov 17, 2022 at 3:49",
            "is_accepted": true,
            "comments": [
                {
                    "user": "guest1",
                    "text": "<span class=\"comment-copy\">Thanks for the response. One thing that is still unclear to me: I am used to seeing hex in pair I.E. 68 69. But 0E0 is 3 characters? I suppose 0E is one pair and 00 would be the other pair?</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">0e0h is a single hex constant denoting 14 decimal  h denotes it is a hex and by convention a 0 is added by many tools to all of the 0a0h,0b0h,0c0h,0d0h,0e0h,0f0h also some tools (gas iirc needs a #0e0h ) (some discussion about leading zeros for reference)[<a href=\"https://stackoverflow.com/questions/58061348/leading-zeros-in-hex-values]\" title=\"leading zeros in hex values%5d\">stackoverflow.com/questions/58061348/â€¦</a></span>",
                    "time": null
                },
                {
                    "user": "user33885",
                    "text": "<span class=\"comment-copy\"><code>and</code> is not a comparison but a bitwise... and. 0e0h is not 14 but 224.</span>",
                    "time": null
                }
            ]
        }
    ]
}