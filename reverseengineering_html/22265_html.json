{
    "title": "Extracting instruction and operand information in IDA Python",
    "link": "https://reverseengineering.stackexchange.com/questions/22265/extracting-instruction-and-operand-information-in-ida-python",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am writing an IDA python plugin to identify the operands that are defined and used by every instruction. For now, I am using the canonical feature for an instruction to identify if an operand to the instruction is being used or defined.\n </p>\n <p>\n  While it works for the most part, I'm not sure how to extract information for the following cases\n </p>\n <ol>\n  <li>\n   Push/Pop/Retn/Call instructions that modify/use\n   <code>\n    esp\n   </code>\n  </li>\n  <li>\n   Compare and branching instructions that modify the\n   <code>\n    eflags\n   </code>\n   registers\n  </li>\n </ol>\n <p>\n  I could write \"if\" conditions to handle these cases but I'm wondering if there is a better way to extract information.\n </p>\n <p>\n  Thanks\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "958",
    "tags": [
        "ida",
        "idapython",
        "idapro-sdk",
        "ida-plugin"
    ],
    "user": "Ranganatha Rao",
    "time": "Oct 8, 2019 at 0:08",
    "comments": [
        {
            "user": "Avery3R",
            "text": "<html><body><span class=\"comment-copy\">\n For #1 are you just trying to figure out how much it changes the stack pointer by?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Vitalii",
            "text": "<html><body><span class=\"comment-copy\">\n I think the only way is\n <code>\n  if\n </code>\n . Personally me have some private IDA plugins for catching execution events (including memory or register modifications),and IDA doesn't have powerful enough command parser for that. IDA has not to have it actually.\n <code>\n  Capstone\n </code>\n will unlikely help much here.\n <code>\n  if\n </code>\n is your friend for this very specific tasks (i. e. detection of command that modifies anything as \"side effect\" not obvious from operands and opcode).\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I also had this question. The only solution I've found involves using the\n  <a href=\"https://www.capstone-engine.org/lang_python.html\" rel=\"nofollow noreferrer\">\n   Capstone\n  </a>\n  Python bindings in conjunction with IDA. The method call is\n  <code>\n   regs_access\n  </code>\n  <a href=\"https://www.capstone-engine.org/op_access.html\" rel=\"nofollow noreferrer\">\n   https://www.capstone-engine.org/op_access.html\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Trey Keown",
            "time": "Oct 24, 2019 at 21:13",
            "is_accepted": false,
            "comments": []
        }
    ]
}