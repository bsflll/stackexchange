{
    "title": "Decompile ARM native binary - IDA Pro detects file as Shared Object",
    "link": "https://reverseengineering.stackexchange.com/questions/8765/decompile-arm-native-binary-ida-pro-detects-file-as-shared-object",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to decompile a Android ARM native binary using Hex-Rays IDA Pro. IDA detects the possible formats as\n </p>\n <ul>\n  <li>\n   ELF for ARM (Shared object)\n  </li>\n  <li>\n   Binary file\n  </li>\n </ul>\n <p>\n  If I choose ELF for ARM (Shared object), then it correctly decompiles and detect most of the standard functions like tan/sin/cos etc. But when I try to run the remote android debugger, I am getting the alert messages\n </p>\n <ul>\n  <li>\n   Input file is a dynamic library, it cannot be run by itself. Please specify the host application.\n  </li>\n  <li>\n   The file can't be loaded by the debugger plugin. Please verify that the parameters are valid.\n  </li>\n </ul>\n <p>\n  If I select Binary file, then it is not decompiling correctly. Also remote android debugger option is not listed in debuggers list.\n </p>\n <p>\n  I am able to execute the binary file directly on an Android ARM emulator.\n </p>\n <p>\n  What am I doing wrong? How can I debug a ELF for ARM binary executable file with IDA pro?\n </p>\n <hr/>\n <p>\n  <strong>\n   Edit:\n  </strong>\n  I have already tried with\n  <code>\n   android_server\n  </code>\n  running on an AVD and a physical device. When I try to connect [ELF for ARM (Shared object)], I can see the following output in\n  <code>\n   android_server\n  </code>\n </p>\n <pre><code>=========================================================\n[7] Accepting connection from 127.0.0.1...\n[7] Closing connection from 127.0.0.1...\n</code></pre>\n <p>\n  Are all ARM binary executables detected as shared object? Or is my executable file being misidentified as a\n  <code>\n   .so\n  </code>\n  file?\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 3,
    "views": "19k",
    "tags": [
        "ida",
        "android",
        "arm",
        "decompile"
    ],
    "user": "Joyce Babu",
    "time": "Apr 25, 2015 at 21:26",
    "comments": [
        {
            "user": "diff",
            "text": "<html><body><span class=\"comment-copy\">\n If the file is loaded as a Shared Object, then it is a likely a '.so' file and is actually a shared library.  Are you positive that this application can be run independently from the command line (adb)?   If it is a shared library, you will need to attach to a process that can load and call the functionality that you want to step through in IDA.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You'll need to create an Android Virtual Device, copy your ELF program and\n  <code>\n   <IDA directory>\\dbgsrv\\android_server\n  </code>\n  to the virtual device, and run\n  <code>\n   android_server\n  </code>\n  on the virtual device. You can then use IDA to debug the ELF file.\n </p>\n <p>\n  Here are two pages with detailed instructions on how to do this:\n </p>\n <ul>\n  <li>\n   <a href=\"http://resources.infosecinstitute.com/guide-debugging-android-binaries/\" rel=\"nofollow noreferrer\">\n    A Guide to Debugging Android Binaries\n   </a>\n  </li>\n  <li>\n   <a href=\"https://www.trustwave.com/Resources/SpiderLabs-Blog/Debugging-Android-Libraries-using-IDA/\" rel=\"nofollow noreferrer\">\n    Debugging Android Libraries using IDA\n   </a>\n  </li>\n </ul>\n <p>\n  <img alt=\"enter image description here\" src=\"https://i.sstatic.net/5STaE.png\"/>\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Jason Geffner",
            "time": "Apr 25, 2015 at 21:06",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Joyce Babu",
                    "text": "<span class=\"comment-copy\">I have already tried it with an AVD and a physical device. When I run the remote android debugger, I can see the following output in <code>android_server</code> ========================================================= [7] Accepting connection from 127.0.0.1... [7] Closing connection from 127.0.0.1...</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As I've stated in my comment to your question, the file is loaded as a Shared Object, then it is a likely a '.so' file and is actually a shared library. Are you positive that this application can be run independently from the command line (adb)?\n </p>\n <p>\n  If it is a shared library, you will need to attach to a process that can load and call the functionality that you want to step through in IDA. You can do this using an \"shim\" application that I created and posted online;\n </p>\n <p>\n  <a href=\"https://github.com/rednaga/native-shim\" rel=\"nofollow\">\n   https://github.com/rednaga/native-shim\n  </a>\n </p>\n <p>\n  It include directions on how you would compile it, push it to the device and point IDA Pro at it. This allows you to pass the shared library as an argument and allow it to be \"run\" via IDA Pro. Hopefully this solves your issue.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "diff",
            "time": "Oct 9, 2015 at 22:23",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can check the tutorial on this link. It explains how to debug with both gdb and IDA Pro:\n  <a href=\"http://www.aldeid.com/wiki/Category:Architecture/Android#tab=Android_Remote_debugging\" rel=\"nofollow\">\n   http://www.aldeid.com/wiki/Category:Architecture/Android#tab=Android_Remote_debugging\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "William Coen",
            "time": "Oct 6, 2015 at 17:30",
            "is_accepted": false,
            "comments": []
        }
    ]
}