{
    "title": "ACCESS_VIOLATION when attaching a debugger",
    "link": "https://reverseengineering.stackexchange.com/questions/21514/access-violation-when-attaching-a-debugger",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm debugging a software and it hits\n  <code>\n   access violation\n  </code>\n  on\n  <code>\n   wcslen\n  </code>\n  function under debugger but runs normally without it.\n </p>\n <p>\n  First I thought It had some anti-debug trick, but I could not found any indicators of that in the executable, I also could not found any anti-debug technique with\n  <code>\n   access violation\n  </code>\n  .\n </p>\n <p>\n  I've tried using both\n  <code>\n   x64dbg\n  </code>\n  and\n  <code>\n   windbg\n  </code>\n  but I had same problem on both of them. I also launched them with admin privileges since I thought privileges might be needed for something but error didn't go away.\n </p>\n <p>\n  Here is exact line of inside\n  <code>\n   wcslen\n  </code>\n  which causes this:\n </p>\n <pre><code>mov cx, word ptr ds:[eax]\n</code></pre>\n <p>\n  and the address which\n  <code>\n   eax\n  </code>\n  points to is\n  <code>\n   EF415351\n  </code>\n  which is pretty big.\n </p>\n <p>\n  So my question is, is there any anti-debug technique which involves\n  <code>\n   access violation\n  </code>\n  ? How can I workaround this error?\n </p>\n <p>\n  Can I patch program so that it logs\n  <code>\n   wcslen\n  </code>\n  arguments, and then I'll just compare it's argument under debugger and normal execution and maybe find something interesting.\n </p>\n <p>\n  <strong>\n   P.S\n  </strong>\n  I also get same error when launching application under debugger, so attaching or running under it doesn't make any difference.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "disassembly",
        "windows",
        "assembly",
        "x86"
    ],
    "user": "user28768",
    "time": "Jun 19, 2019 at 11:12",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <p>\n   is there any anti-debug technique which involves access violation? How can I workaround this error?\n  </p>\n </blockquote>\n <p>\n  Yes, there is. It is called\n  <em>\n   Structured Exception Handler for Windows\n  </em>\n  . See this\n  <a href=\"https://reverseengineering.stackexchange.com/questions/21367/debug-program-using-peculiar-anti-debugging-technique\">\n   question\n  </a>\n  , where I presented an implementation of such a technique.\n </p>\n <p>\n  Basically, it relies on the fact that, upon normal execution, when an excetion occurs, the control is transfered to the handler registered for such an exception and, as I illustrated in the question I gave a link to, it is possible to continue execution even, when normally program would crash. However, when run in a debugger, the exception is transfered to a debugger first, so the program doesn't receive it and behaves differently than when run without debugger attatched.\n </p>\n <p>\n  So, it is possible that the program you analyse, causes the error\n  <em>\n   intentionally\n  </em>\n  . In such a case, you should be able to pass the exception to the program after debugger receives it, so it behaves like debugger wasn't present (at least in theory).\n </p>\n <blockquote>\n  <p>\n   Can I patch program so that it logs wcslen arguments, and then I'll just compare it's argument under debugger and normal execution and maybe find something interesting\n  </p>\n </blockquote>\n <p>\n  Yes, you could do so. That will show you whether the arguments are the same or not in both cases.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "bart1e",
            "time": "Jun 19, 2019 at 11:21",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user28768",
                    "text": "<span class=\"comment-copy\">thank you :) I will certianly give it a try and let you know the results.</span>",
                    "time": null
                },
                {
                    "user": "bart1e",
                    "text": "<span class=\"comment-copy\">Of course, it would be nice if you could upload the program so we can analyse it and give a more comprehensive answer.</span>",
                    "time": null
                }
            ]
        }
    ]
}