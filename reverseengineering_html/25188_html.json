{
    "title": "What does 'test al, al' mean?",
    "link": "https://reverseengineering.stackexchange.com/questions/25188/what-does-test-al-al-mean",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to reverse engineer a program and i found the following instruction:\n </p>\n <pre><code>test al, al\nje label \n</code></pre>\n <p>\n  what does these two instruction do ? Can someone explain please ?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "18k",
    "tags": [
        "assembly",
        "binary-analysis",
        "x86"
    ],
    "user": "Garde Des Ombres",
    "time": "Jun 1, 2020 at 17:46",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n <code>\n  test\n </code>\n equals\n <code>\n  and\n </code>\n but does not place the result in the target operand. However, like\n <code>\n  and\n </code>\n it manipulates the zero flag (ZF).\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Cody Gray",
            "text": "<html><body><span class=\"comment-copy\">\n This is a standard idiom to test if the 8-bit value stored in\n <code>\n  AL\n </code>\n (the register that is the low 8 bits of\n <code>\n  EAX\n </code>\n ) is zero. In other words, it's checking whether a Boolean is true or false, and branching accordingly.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In x86 assembly,\n  <code>\n   al\n  </code>\n  is the least significant byte of\n  <code>\n   eax\n  </code>\n  register, which is typically used to return values from function calls.\n </p>\n <p>\n  The\n  <code>\n   test al,al\n  </code>\n  is a bitwise AND operation between\n  <code>\n   al\n  </code>\n  and itself.\n </p>\n <p>\n  If\n  <code>\n   al & al\n  </code>\n  == 0, the zero flag will be set to 1.\n </p>\n <p>\n  <code>\n   je\n  </code>\n  (or\n  <code>\n   jz\n  </code>\n  ) instruction will jump to the address of\n  <code>\n   label\n  </code>\n  , if the zero flag is 1. Otherwise, the\n  <code>\n   je\n  </code>\n  will do nothing.\n </p>\n <p>\n  In short:\nIf eax == ######00 jump to label.\n </p>\n</div>\n</body></html>",
            "votes": "13",
            "user": "Yotamz",
            "time": "Jun 1, 2020 at 18:22",
            "is_accepted": false,
            "comments": []
        }
    ]
}