{
    "title": "Hopper: What does stack[xxxx] mean?",
    "link": "https://reverseengineering.stackexchange.com/questions/18617/hopper-what-does-stackxxxx-mean",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  When using the 'decompiler' tool in Hopper on the\n  <code>\n   start\n  </code>\n  function of an application it shows this:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/tm8wi.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"hopper decompiled code\" src=\"https://i.sstatic.net/tm8wi.png\"/>\n  </a>\n </p>\n <p>\n  What does the\n  <code>\n   stack[2043]\n  </code>\n  mean, is it 2043 bytes from the top of high memory and its assigning it to the stack?\n </p>\n <p>\n  Here is what the assembly looks like for the same function:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/cby43.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"hopper dissasembly\" src=\"https://i.sstatic.net/cby43.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "171",
    "tags": [
        "disassembly",
        "decompilation",
        "hopper"
    ],
    "user": "pzirkind",
    "time": "Jun 27, 2018 at 15:19",
    "comments": [
        {
            "user": "Rolf Rolles",
            "text": "<html><body><span class=\"comment-copy\">\n Frankly, it's really difficult to interpret the decompilation. For example, it uses the raw register variable\n <code>\n  esp\n </code>\n in the output, when\n <code>\n  esp\n </code>\n is modified by the prologue -- so which value of\n <code>\n  esp\n </code>\n is it referring to? (Evidently the pre-prologue version.) Also the disassembly listing would be more clear if it showed the symbolic declarations for\n <code>\n  var_14\n </code>\n ,\n <code>\n  var_10\n </code>\n , etc. I have a feeling they refer to\n <code>\n  -0x14\n </code>\n ,\n <code>\n  -0x10\n </code>\n , etc. but it would help clear things up. Anyway, given the tenor of your question, I'd say the decompilation will just confuse you and simply to ignore it (or use Hex-Rays).\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}