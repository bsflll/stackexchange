{
    "title": "Why do we need to know the address of shellcode?",
    "link": "https://reverseengineering.stackexchange.com/questions/19162/why-do-we-need-to-know-the-address-of-shellcode",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have read many articles regarding the buffer overflow exploit. Everywhere its written as follow.\n </p>\n <blockquote>\n  <p>\n   \"It's difficult to know the starting address of the shellcode\"\n  </p>\n </blockquote>\n <p>\n  Why do we need to know the address of the shellcode? Why does stack not execute the shellcode as it is?\n </p>\n <p>\n  say we inject our shellcode this way\n </p>\n <p>\n  <strong>\n   our shellcode -- some padding -- our choice of saved return\naddress\n  </strong>\n </p>\n <p>\n  should the shellcode not be executed by default by the stack? Why do we add NOP sleds and complicate things.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "928",
    "tags": [
        "disassembly",
        "assembly",
        "gdb",
        "buffer-overflow",
        "shellcode"
    ],
    "user": "Sathyam Lokare",
    "time": "Aug 27, 2018 at 5:58",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<html><body><span class=\"comment-copy\">\n Can you link one of those articles? Maybe there's something specific there. I think with the current information you provide it's difficult to correctly answer your questions.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "nornor",
            "text": "<html><body><span class=\"comment-copy\">\n Following @perror answer, you can use address containing\n <code>\n  0x90\n </code>\n as return address\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Exploiting a software by injecting a shellcode in its memory always requires the following steps:\n </p>\n <ol>\n  <li>\n   <p>\n    Have a way to inject your shellcode in memory (usually, it can take place in any buffer of the program).\n   </p>\n  </li>\n  <li>\n   <p>\n    Redirect the execution flow (i.e. be able to write on the\n    <code>\n     rip\n    </code>\n    ) to point to the shellcode and execute it (usually, it is done through a buffer-overflow).\n   </p>\n  </li>\n </ol>\n <p>\n  If you are not sure about the address of your shellcode, the second part of the exploitation (the redirection of the\n  <code>\n   rip\n  </code>\n  ) cannot be achieved reliably.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "perror",
            "time": "Sep 17, 2024 at 9:10",
            "is_accepted": true,
            "comments": []
        }
    ]
}