{
    "title": "Scanning memory accessed by a DLL",
    "link": "https://reverseengineering.stackexchange.com/questions/8668/scanning-memory-accessed-by-a-dll",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I would like to scan (or alternatively dump) memory that a DLL accesses while it's running. Scanning the application's (EXE) memory is not feasible (too large), and the DLL needs the application to run.\n </p>\n <p>\n  Are there any tools like this?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "240",
    "tags": [
        "dll",
        "memory"
    ],
    "user": "Joona",
    "time": "Apr 9, 2015 at 9:43",
    "comments": [
        {
            "user": "rev",
            "text": "<html><body><span class=\"comment-copy\">\n how big is the executable?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Joona",
            "text": "<html><body><span class=\"comment-copy\">\n @AcidShout The EXE itself is about 14MB, but it uses somewhere around 400-500MB of memory. DLL is 2MB and\n <i>\n  should\n </i>\n use significantly less memory.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "rev",
            "text": "<html><body><span class=\"comment-copy\">\n I'm not sure of how much computing power you have, but 500MB is not\n <i>\n  that\n </i>\n much. You should try scanning. If you're on Windows, however, you can set a\n <code>\n  PAGE_GUARD\n </code>\n memory protection, and you'll get a notification (as exception) each time the memory is accesed (execute, read, or write).\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Joona",
            "text": "<html><body><span class=\"comment-copy\">\n @AcidShout I have tried with CheatEngine, and it simply freezes after a few scans. If I could only get the memory the DLL uses, I should be able to find what I need pretty quickly, as well.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Joona",
            "text": "<html><body><span class=\"comment-copy\">\n @AcidShout Thanks, I just found out that  I can actually do that in Python too! Sounds like a feasible project.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}