{
    "title": "MacOS: Output to console in non-console app",
    "link": "https://reverseengineering.stackexchange.com/questions/13992/macos-output-to-console-in-non-console-app",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm working with a program that I can't reasonably run from console; it is started by another program with complex calculated and network-gotten arguments, and that program is complicated as well.\n </p>\n <p>\n  To view output on Windows I can AllocConsole, but it seems there is no such equivalent for Mac. According to Ivan Vuƒçica, \"A console is \"allocated\" by default. You cannot order the OS to open a console though.\" (\n  <a href=\"https://stackoverflow.com/questions/1518717/how-to-get-an-output-console-in-an-ogre-project-under-macosx\">\n   link\n  </a>\n  ).\n </p>\n <p>\n  His answer gives some good information, but little useful in a reverse-engineering context as I don't have the project.\n </p>\n <p>\n  So, if I really, really, really want to get a console instead of outputting to a file or creating some GUI, what might I do? If project options allows for enabling / disabling console, presumably there is some flag in the .app. Is it editable? Are there other options?\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 1,
    "views": "4k",
    "tags": [
        "osx"
    ],
    "user": "Lupe",
    "time": "May 23, 2017 at 12:37",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It really depends what the application you are trying to run is logging to.\n </p>\n <p>\n  If the application uses\n  <code>\n   NSLog()\n  </code>\n  and other associated Cocoa APIs, you're in luck.  The output should appear in the Apple system log and can be viewed and caputired using Console.app.\n </p>\n <p>\n  If the application is logging to stdout, things get a little more challenging.  From\n  <a href=\"https://stackoverflow.com/q/13104588/2415822\">\n   how to get stdout into Console.app\n  </a>\n  on Stack Overflow:\n </p>\n <blockquote>\n  <p>\n   Prior to Mountain Lion, all processes managed by\n   <code>\n    launchd\n   </code>\n   , including\n  regular applications, had their stdout and stderr file descriptors\n  forwarded to the system log. In Mountain Lion and above, stdout and\n  stderr go nowhere for\n   <code>\n    launchd\n   </code>\n   managed applications. Only messages\n  explicitly sent to the system log will end up there.\n  </p>\n </blockquote>\n <p>\n  I'm not sure it would be possible to see these log messages, unless you were to redirect stdout or somehow hook into whatever function that application was using to log and ASL (now deprecated) or\n  <code>\n   os_log\n  </code>\n  .\n </p>\n <p>\n  If you're lucky, you can run the original OS X bundle application from the command line, and look for any useful logging from there.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Community",
            "time": "May 23, 2017 at 12:37",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Lupe",
                    "text": "<span class=\"comment-copy\">As a first step, do you know how to make the console appear in the first place? Running it from a console instance isn't an option.</span>",
                    "time": null
                },
                {
                    "user": "JAL",
                    "text": "<span class=\"comment-copy\">@Lupe Console.app?  It's under Application -&gt; Utilities -&gt; Console.  And to run an OS X application from the command line you would just reference the path of the binary in the bundle: <code>/Applications/Xcode.app/Contents/MacOS/Xcode</code>.</span>",
                    "time": null
                },
                {
                    "user": "Lupe",
                    "text": "<span class=\"comment-copy\">I may be misunderstanding, but while I know how to open Console.app, I can't run my target application from it because it has extremely complicated and network-dependent launch args. It's normally launched by a launcher app.</span>",
                    "time": null
                },
                {
                    "user": "JAL",
                    "text": "<span class=\"comment-copy\">You don't run the application from Console.app.  Console.app is just a frontend to Apple System Logger.  Launch your app normally and then check Console.app for any logging info from the application.</span>",
                    "time": null
                },
                {
                    "user": "Lupe",
                    "text": "<span class=\"comment-copy\">Ahh, sorry for my ignorance. I had no idea it existed. This is exactly what I wanted, thank you!</span>",
                    "time": null
                }
            ]
        }
    ]
}