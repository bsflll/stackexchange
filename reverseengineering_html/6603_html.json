{
    "title": "Finding execution flow/calls to functions?",
    "link": "https://reverseengineering.stackexchange.com/questions/6603/finding-execution-flow-calls-to-functions",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a binary and I'm interested in an high level overview of how it operates. I was trying to generate a list of functions called during a particular execution, with their hierarchy, for example\n </p>\n <pre><code>f1 . f2                . f1 . f2\n        . f3 . f4                . f6\n                  . f5\n</code></pre>\n <p>\n  which would mean that something like this is happening in that particular execution:\n </p>\n <pre><code>main {\n  f1();\n  f2();\n  f1();\n  f2();\n}\n\nf2 {\n  if(something) {\n    f3();\n    f4();\n  }\n  else {\n    f6();\n  }\n}\n\nf4 {\n  f5();\n}\n</code></pre>\n <p>\n  This should make it easier to find the functions I'm interested in, and how they work at an high level. I could compare the flow between different executions where I do or don't do some things which should also help me.\n </p>\n <p>\n  How would I go about doing it? What tools can I use? I'm 100% new to reverse engineering, I've been searching all day and I'm starting to feel like it doesn't actually make sense since it seems something pretty basic but I can't find any result.\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 1,
    "views": "1k",
    "tags": [
        "debugging",
        "dynamic-analysis"
    ],
    "user": "m fran",
    "time": "Nov 6, 2014 at 21:38",
    "comments": [
        {
            "user": "m fran",
            "text": "<html><body><span class=\"comment-copy\">\n that looks cool but not quite what I think i need.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  you can use windbg wt (watch and trace function to generate an execution flow)\n </p>\n <p>\n  the demo below is for the code in your query compiled in debug mode (to ensure function calls exist and not optimised away by a simple substitution)\n </p>\n <p>\n  code used for example compiled in msvcpp2ktenexp debug\n </p>\n <pre><code>    int  glob   = 0;\n    void f1(int a)  { printf(\"%d \",a); glob++;}\n    void f3(int a)  { printf(\"F3 %d \",a);}\n    void f5(int a)  { printf(\"F5 %d \",a);}\n    void f6(int a)  { printf(\"%d \",a);}\n    void f4(int a)  { f5(5);}\n    void f2(int a)  { if(glob == 8) { f3(3); f4(4); } else { f6(6); } }\n    void main()     { rndrob:f1(1);f2(2);f1(1);f2(2);if(glob<10){goto rndrob;} }\ndry run results \n>flowt.exe\n1 6 1 6 1 6 1 6 1 6 1 6 1 6 1 F3 3 F5 5 1 6 1 6\n</code></pre>\n <p>\n  windbg wt results for module flowt function main() edited to remove fluff\nstatistics at the end shows printf() was called 21 times f3() f4() once etc etc\n </p>\n <p>\n  <strong>\n   :>cdb -c \"g main;wt -m flowt\" flowt.exe\n  </strong>\n </p>\n <pre><code>Tracing flowt!main to return address 00411bcf\n   59     0 [  0] flowt!main\n   62     0 [  1]   flowt!f1\n1    72     0 [  2]     MSVCR100D!printf\n   65    72 [  1]   flowt!f1\n   62   156 [  0] flowt!main\n   61     0 [  1]   flowt!f2\n   62     0 [  2]     flowt!f6\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n   61     0 [  1]   flowt!f2\n   62     0 [  2]     flowt!f3\nF3 3    72     0 [  3]       MSVCR100D!printf\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n   64   153 [  1]   flowt!f2\n    62     0 [  3]       flowt!f5\nF5 5    72     0 [  4]         MSVCR100D!printf\n   65    72 [  3]       flowt!f5\n  141  4073 [  0] flowt!main\n\n4214 instructions were executed in 4213 events (0 from other threads)\nFunction Name                               Invocations MinInst MaxInst AvgInst\nMSVCR100D!printf                                     21      72      72      72\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\nflowt!f1                                             10      77      77      77\nflowt!f2                                             10      71      75      71\nflowt!f3                                              1      74      74      74\nflowt!f4                                              1      69      69      69\nflowt!f5                                              1      74      74      74\nflowt!f6                                              9      74      74      74\nflowt!main                                            1     141     141     141\n</code></pre>\n <p>\n  <strong>\n   Answer to Comment\n  </strong>\n </p>\n <p>\n  If you had followed the logic exactly calc.exe will keep on outputting\n  \n\n  the\n  <code>\n   calls in MessageLoop Forever\n  </code>\n  until you\n  <code>\n   close calc.exe\n  </code>\n </p>\n <p>\n  <strong>\n   windbg calc.exe\n  </strong>\n  \n\n  <strong>\n   g calc!WinMain\n  </strong>\n </p>\n <p>\n  This is to\n  <code>\n   go to start of Winmain Function\n  </code>\n  (\n  <code>\n   wt traces and watches a single Function Call and its childcalls N deep\n  </code>\n  so to use wt you need to be on the start of any Function you wish to trace\n  <code>\n   g Winmain Ensures you are on the start of Function WinMain\n  </code>\n </p>\n <p>\n  now do\n </p>\n <p>\n  <strong>\n   wt -m calc\n  </strong>\n </p>\n <p>\n  this will loop forever logging all the sub calls inside calc!WinMain\n </p>\n <p>\n  below is a fine grained example for calc.exe\n </p>\n <p>\n  <code>\n   DoOperation is a Function in calc.exe\n  </code>\n  that does all the operations\n  \n\n  the output below\n  <code>\n   shows how to watch and trace that function a single time\n  </code>\n  it is called\n </p>\n <p>\n  <code>\n   g calc!DoOperation breaks when DoOperation is called\n  </code>\n  \n\n  <code>\n   wt traces the DoOperation for one time\n  </code>\n  (will trace\n  <code>\n   one bracket open\n  </code>\n  if you do\n  <code>\n   3+5 and hit = it will stop tracing\n  </code>\n  it will also\n  <code>\n   stop tracing if you do 3+5 * because *\n   \n\n   (multiplication finishes the first operation viz addition )\n  </code>\n </p>\n <p>\n  and will print the results\n  <code>\n   g;q is required to tell we need to continue executing after wt and quit debugging when calc.exe is closed\n  </code>\n </p>\n <pre><code>>cdb -c \"g calc!DoOperation; wt -m calc ;g;q\" calc\n\n0:000> cdb: Reading initial command 'g calc!DoOperation; wt -m calc ;g;q'\n\nTracing calc!DoOperation to return address 010035a0\n    2     0 [  0] calc!DoOperation\n   10     0 [  1]   calc!_EH_prolog\n   20    10 [  0] calc!DoOperation\n   12     0 [  1]   calc!addrat\n   52     0 [  2]     calc!equnum\n   36    52 [  1]   calc!addrat\n   19     0 [  2]     calc!addnum\n   30     0 [  3]       calc!_addnum\n    6     0 [  4]         calc!_createnum\n   25     0 [  5]           kernel32!LocalAlloc\n   12    25 [  4]         calc!_createnum\n  112    37 [  3]       calc!_addnum\n    3     0 [  4]         calc!_destroynum\n   17     0 [  4]         kernel32!LocalFree\n  118    57 [  3]       calc!_addnum\n   23   175 [  2]     calc!addnum\n   41   250 [  1]   calc!addrat\n   28   301 [  0] calc!DoOperation\n\n329 instructions were executed in 328 events (0 from other threads)\n\nFunction Name                               Invocations MinInst MaxInst AvgInst\ncalc!DoOperation                                      1      28      28      28\ncalc!_EH_prolog                                       1      10      10      10\ncalc!_addnum                                          1     118     118     118\ncalc!_createnum                                       1      12      12      12\ncalc!_destroynum                                      1       3       3       3\ncalc!addnum                                           1      23      23      23\ncalc!addrat                                           1      41      41      41\ncalc!equnum                                           1      52      52      52\nkernel32!LocalAlloc                                   1      25      25      25\nkernel32!LocalFree                                    1      17      17      17\n\n0 system calls were executed\n\nquit:\n</code></pre>\n <p>\n  if you find escaping quotes a bit annoying and would like to keep on tracing DoOperation several times put these commands in a text file say foo.txt and run the script with\n </p>\n <pre><code>cdb -c \"$$>a< c:\\foo.txt\"  calc\n</code></pre>\n <p>\n  contents of foo.txt\n </p>\n <pre><code>bp calc!DoOperation \"bp /1 @$ra \\\"g\\\";wt -m calc\"\ng;\n</code></pre>\n <p>\n  this sets a one shot breakpoint on the return address of DoOperation() and issues a go to tell windbg to keep on executing the target after tracing and returning from the Function DoOperation() in calc.exe\n </p>\n <p>\n  output below contains an addition and LeftShift operation trace in calc.exe\n </p>\n <p>\n  <strong>\n   >cdb -c \"$$>a< c:\\foo.txt\"  calc\n  </strong>\n </p>\n <pre><code>0:000> cdb: Reading initial command '$$>a< c:\\foo.txt'\nAddition operation \n\nTracing calc!DoOperation to return address 010035a0\n    2     0 [  0] calc!DoOperation\n   10     0 [  1]   calc!_EH_prolog\n   18    10 [  0] calc!DoOperation\n    6     0 [  1]   calc!mulrat\n   14     0 [  2]     calc!zernum\n   12    14 [  1]   calc!mulrat\n   22     0 [  2]     calc!mulnumx\n   19     0 [  3]       calc!_mulnumx\n    6     0 [  4]         calc!_createnum\n   25     0 [  5]           kernel32!LocalAlloc\n   12    25 [  4]         calc!_createnum\n  127    37 [  3]       calc!_mulnumx\n    3     0 [  4]         calc!_destroynum\n   17     0 [  4]         kernel32!LocalFree\n  133    57 [  3]       calc!_mulnumx\n   27   190 [  2]     calc!mulnumx\n   17   231 [  1]   calc!mulrat\n   24     0 [  2]     calc!mulnumx\n   19   255 [  1]   calc!mulrat\n   36     0 [  2]     calc!trimit\n   23   291 [  1]   calc!mulrat\n   26   324 [  0] calc!DoOperation\n\n350 instructions were executed in 349 events (0 from other threads)\n\nleft shift operation\n\nTracing calc!DoOperation to return address 010035a0\n    2     0 [  0] calc!DoOperation\n   10     0 [  1]   calc!_EH_prolog\n   26    10 [  0] calc!DoOperation\n    6     0 [  1]   calc!_destroyrat\n   28    16 [  0] calc!DoOperation\n    4     0 [  1]   calc!_createrat\n   25     0 [  2]     kernel32!LocalAlloc\n   12    25 [  1]   calc!_createrat\n   32    53 [  0] calc!DoOperation\n    3     0 [  1]   calc!_destroynum\n   39    56 [  0] calc!DoOperation\n    6     0 [  1]   calc!_createnum\n   25     0 [  2]     kernel32!LocalAlloc\n   12    25 [  1]   calc!_createnum\n   59    93 [  0] calc!DoOperation\n    3     0 [  1]   calc!_destroynum\n   65    96 [  0] calc!DoOperation\n    6     0 [  1]   calc!_createnum\n   25     0 [  2]     kernel32!LocalAlloc\n   12    25 [  1]   calc!_createnum\n   84   133 [  0] calc!DoOperation\n    6     0 [  1]   calc!_destroyrat\n    3     0 [  2]     calc!_destroynum\n   17     0 [  2]     kernel32!LocalFree\n    9    20 [  1]   calc!_destroyrat\n    3     0 [  2]     calc!_destroynum\n   17     0 [  2]     kernel32!LocalFree\n   12    40 [  1]   calc!_destroyrat\n   17     0 [  2]     kernel32!LocalFree\n   14    57 [  1]   calc!_destroyrat\n   86   204 [  0] calc!DoOperation\n    4     0 [  1]   calc!_createrat\n   25     0 [  2]     kernel32!LocalAlloc\n   12    25 [  1]   calc!_createrat\n   89   241 [  0] calc!DoOperation\n    3     0 [  1]   calc!_destroynum\n   95   244 [  0] calc!DoOperation\n    6     0 [  1]   calc!_createnum\n   25     0 [  2]     kernel32!LocalAlloc\n   12    25 [  1]   calc!_createnum\n  114   281 [  0] calc!DoOperation\n    3     0 [  1]   calc!_destroynum\n  120   284 [  0] calc!DoOperation\n    6     0 [  1]   calc!_createnum\n   25     0 [  2]     kernel32!LocalAlloc\n   12    25 [  1]   calc!_createnum\n  139   321 [  0] calc!DoOperation\n    8     0 [  1]   calc!lshrat\n   11     0 [  2]     calc!intrat\n   14     0 [  3]       calc!zernum\n   17    14 [  2]     calc!intrat\n   52     0 [  3]       calc!equnum\n   23    66 [  2]     calc!intrat\n   11    89 [  1]   calc!lshrat\n   14     0 [  2]     calc!zernum\n   16   103 [  1]   calc!lshrat\n   10     0 [  2]     calc!rat_gt\n    6     0 [  3]       calc!_destroyrat\n   12     6 [  2]     calc!rat_gt\n    4     0 [  3]       calc!_createrat\n   25     0 [  4]         kernel32!LocalAlloc\n   12    25 [  3]       calc!_createrat\n   15    43 [  2]     calc!rat_gt\n    3     0 [  3]       calc!_destroynum\n   21    46 [  2]     calc!rat_gt\n    6     0 [  3]       calc!_createnum\n   25     0 [  4]         kernel32!LocalAlloc\n   12    25 [  3]       calc!_createnum\n   40    83 [  2]     calc!rat_gt\n    3     0 [  3]       calc!_destroynum\n   45    86 [  2]     calc!rat_gt\n    6     0 [  3]       calc!_createnum\n   25     0 [  4]         kernel32!LocalAlloc\n   12    25 [  3]       calc!_createnum\n   69   123 [  2]     calc!rat_gt\n   12     0 [  3]       calc!addrat\n   52     0 [  4]         calc!equnum\n   36    52 [  3]       calc!addrat\n   19     0 [  4]         calc!addnum\n   30     0 [  5]           calc!_addnum\n    6     0 [  6]             calc!_createnum\n   25     0 [  7]               kernel32!LocalAlloc\n   12    25 [  6]             calc!_createnum\n  142    37 [  5]           calc!_addnum\n    3     0 [  6]             calc!_destroynum\n   17     0 [  6]             kernel32!LocalFree\n  148    57 [  5]           calc!_addnum\n   23   205 [  4]         calc!addnum\n   41   280 [  3]       calc!addrat\n   74   444 [  2]     calc!rat_gt\n   14     0 [  3]       calc!zernum\n   88   458 [  2]     calc!rat_gt\n    6     0 [  3]       calc!_destroyrat\n    3     0 [  4]         calc!_destroynum\n   17     0 [  4]         kernel32!LocalFree\n    9    20 [  3]       calc!_destroyrat\n    3     0 [  4]         calc!_destroynum\n   17     0 [  4]         kernel32!LocalFree\n   12    40 [  3]       calc!_destroyrat\n   17     0 [  4]         kernel32!LocalFree\n   14    57 [  3]       calc!_destroyrat\n   94   529 [  2]     calc!rat_gt\n   21   726 [  1]   calc!lshrat\n   12     0 [  2]     calc!rattolong\n   10     0 [  3]       calc!rat_gt\n    6     0 [  4]         calc!_destroyrat\n   12     6 [  3]       calc!rat_gt\n    4     0 [  4]         calc!_createrat\n   25     0 [  5]           kernel32!LocalAlloc\n   12    25 [  4]         calc!_createrat\n   15    43 [  3]       calc!rat_gt\n    3     0 [  4]         calc!_destroynum\n   21    46 [  3]       calc!rat_gt\n    6     0 [  4]         calc!_createnum\n   25     0 [  5]           kernel32!LocalAlloc\n   12    25 [  4]         calc!_createnum\n   40    83 [  3]       calc!rat_gt\n    3     0 [  4]         calc!_destroynum\n   45    86 [  3]       calc!rat_gt\n    6     0 [  4]         calc!_createnum\n   25     0 [  5]           kernel32!LocalAlloc\n   12    25 [  4]         calc!_createnum\n   69   123 [  3]       calc!rat_gt\n   12     0 [  4]         calc!addrat\n   52     0 [  5]           calc!equnum\n   36    52 [  4]         calc!addrat\n   17     0 [  5]           calc!addnum\n   30     0 [  6]             calc!_addnum\n    6     0 [  7]               calc!_createnum\n   25     0 [  8]                 kernel32!LocalAlloc\n   12    25 [  7]               calc!_createnum\n  199    37 [  6]             calc!_addnum\n    3     0 [  7]               calc!_destroynum\n   17     0 [  7]               kernel32!LocalFree\n  205    57 [  6]             calc!_addnum\n   21   262 [  5]           calc!addnum\n   41   335 [  4]         calc!addrat\n   74   499 [  3]       calc!rat_gt\n   14     0 [  4]         calc!zernum\n   88   513 [  3]       calc!rat_gt\n    6     0 [  4]         calc!_destroyrat\n    3     0 [  5]           calc!_destroynum\n   17     0 [  5]           kernel32!LocalFree\n    9    20 [  4]         calc!_destroyrat\n    3     0 [  5]           calc!_destroynum\n   17     0 [  5]           kernel32!LocalFree\n   12    40 [  4]         calc!_destroyrat\n   17     0 [  5]           kernel32!LocalFree\n   14    57 [  4]         calc!_destroyrat\n   94   584 [  3]       calc!rat_gt\n   17   678 [  2]     calc!rattolong\n   10     0 [  3]       calc!rat_lt\n    6     0 [  4]         calc!_destroyrat\n   12     6 [  3]       calc!rat_lt\n    4     0 [  4]         calc!_createrat\n   25     0 [  5]           kernel32!LocalAlloc\n   12    25 [  4]         calc!_createrat\n   15    43 [  3]       calc!rat_lt\n    3     0 [  4]         calc!_destroynum\n   21    46 [  3]       calc!rat_lt\n    6     0 [  4]         calc!_createnum\n   25     0 [  5]           kernel32!LocalAlloc\n   12    25 [  4]         calc!_createnum\n   40    83 [  3]       calc!rat_lt\n    3     0 [  4]         calc!_destroynum\n   45    86 [  3]       calc!rat_lt\n    6     0 [  4]         calc!_createnum\n   25     0 [  5]           kernel32!LocalAlloc\n   12    25 [  4]         calc!_createnum\n   69   123 [  3]       calc!rat_lt\n   12     0 [  4]         calc!addrat\n   52     0 [  5]           calc!equnum\n   36    52 [  4]         calc!addrat\n   17     0 [  5]           calc!addnum\n   30     0 [  6]             calc!_addnum\n    6     0 [  7]               calc!_createnum\n   25     0 [  8]                 kernel32!LocalAlloc\n   12    25 [  7]               calc!_createnum\n  157    37 [  6]             calc!_addnum\n    3     0 [  7]               calc!_destroynum\n   17     0 [  7]               kernel32!LocalFree\n  163    57 [  6]             calc!_addnum\n   21   220 [  5]           calc!addnum\n   41   293 [  4]         calc!addrat\n   74   457 [  3]       calc!rat_lt\n   14     0 [  4]         calc!zernum\n   86   471 [  3]       calc!rat_lt\n    6     0 [  4]         calc!_destroyrat\n    3     0 [  5]           calc!_destroynum\n   17     0 [  5]           kernel32!LocalFree\n    9    20 [  4]         calc!_destroyrat\n    3     0 [  5]           calc!_destroynum\n   17     0 [  5]           kernel32!LocalFree\n   12    40 [  4]         calc!_destroyrat\n   17     0 [  5]           kernel32!LocalFree\n   14    57 [  4]         calc!_destroyrat\n   92   542 [  3]       calc!rat_lt\n   21  1312 [  2]     calc!rattolong\n    6     0 [  3]       calc!_destroyrat\n   23  1318 [  2]     calc!rattolong\n    4     0 [  3]       calc!_createrat\n   25     0 [  4]         kernel32!LocalAlloc\n   12    25 [  3]       calc!_createrat\n   26  1355 [  2]     calc!rattolong\n    3     0 [  3]       calc!_destroynum\n   31  1358 [  2]     calc!rattolong\n    6     0 [  3]       calc!_createnum\n   25     0 [  4]         kernel32!LocalAlloc\n   12    25 [  3]       calc!_createnum\n   50  1395 [  2]     calc!rattolong\n    3     0 [  3]       calc!_destroynum\n   55  1398 [  2]     calc!rattolong\n    6     0 [  3]       calc!_createnum\n   25     0 [  4]         kernel32!LocalAlloc\n   12    25 [  3]       calc!_createnum\n   75  1435 [  2]     calc!rattolong\n   11     0 [  3]       calc!intrat\n   14     0 [  4]         calc!zernum\n   17    14 [  3]       calc!intrat\n   52     0 [  4]         calc!equnum\n   23    66 [  3]       calc!intrat\n   79  1524 [  2]     calc!rattolong\n   24     0 [  3]       calc!divnumx\n   82  1548 [  2]     calc!rattolong\n    3     0 [  3]       calc!_destroynum\n   17     0 [  3]       kernel32!LocalFree\n   87  1568 [  2]     calc!rattolong\n    6     0 [  3]       calc!_createnum\n   25     0 [  4]         kernel32!LocalAlloc\n   12    25 [  3]       calc!_createnum\n  107  1605 [  2]     calc!rattolong\n   28     0 [  3]       calc!numtolong\n  110  1633 [  2]     calc!rattolong\n    6     0 [  3]       calc!_destroyrat\n    3     0 [  4]         calc!_destroynum\n   17     0 [  4]         kernel32!LocalFree\n    9    20 [  3]       calc!_destroyrat\n    3     0 [  4]         calc!_destroynum\n   17     0 [  4]         kernel32!LocalFree\n   12    40 [  3]       calc!_destroyrat\n   17     0 [  4]         kernel32!LocalFree\n   14    57 [  3]       calc!_destroyrat\n  116  1704 [  2]     calc!rattolong\n   24  2546 [  1]   calc!lshrat\n    6     0 [  2]     calc!_destroyrat\n   26  2552 [  1]   calc!lshrat\n    4     0 [  2]     calc!_createrat\n   25     0 [  3]       kernel32!LocalAlloc\n   12    25 [  2]     calc!_createrat\n   29  2589 [  1]   calc!lshrat\n    3     0 [  2]     calc!_destroynum\n   35  2592 [  1]   calc!lshrat\n    6     0 [  2]     calc!_createnum\n   25     0 [  3]       kernel32!LocalAlloc\n   12    25 [  2]     calc!_createnum\n   55  2629 [  1]   calc!lshrat\n    3     0 [  2]     calc!_destroynum\n   61  2632 [  1]   calc!lshrat\n    6     0 [  2]     calc!_createnum\n   25     0 [  3]       kernel32!LocalAlloc\n   12    25 [  2]     calc!_createnum\n   82  2669 [  1]   calc!lshrat\n   10     0 [  2]     calc!ratpowlong\n    3     0 [  3]       calc!longtorat\n    4     0 [  4]         calc!_createrat\n   25     0 [  5]           kernel32!LocalAlloc\n   12    25 [  4]         calc!_createrat\n    8    37 [  3]       calc!longtorat\n    3     0 [  4]         calc!longtonum\n    6     0 [  5]           calc!_createnum\n   25     0 [  6]             kernel32!LocalAlloc\n   12    25 [  5]           calc!_createnum\n   21    37 [  4]         calc!longtonum\n   12    95 [  3]       calc!longtorat\n    3     0 [  4]         calc!longtonum\n    6     0 [  5]           calc!_createnum\n   25     0 [  6]             kernel32!LocalAlloc\n   12    25 [  5]           calc!_createnum\n   21    37 [  4]         calc!longtonum\n   17   153 [  3]       calc!longtorat\n   21   170 [  2]     calc!ratpowlong\n   25     0 [  3]       calc!mulnumx\n    3     0 [  4]         calc!_destroynum\n   17     0 [  4]         kernel32!LocalFree\n   28    20 [  3]       calc!mulnumx\n    6     0 [  4]         calc!_createnum\n   25     0 [  5]           kernel32!LocalAlloc\n   12    25 [  4]         calc!_createnum\n   51    57 [  3]       calc!mulnumx\n   27   278 [  2]     calc!ratpowlong\n   24     0 [  3]       calc!mulnumx\n   30   302 [  2]     calc!ratpowlong\n    6     0 [  3]       calc!mulrat\n   14     0 [  4]         calc!zernum\n   12    14 [  3]       calc!mulrat\n   22     0 [  4]         calc!mulnumx\n   19     0 [  5]           calc!_mulnumx\n    6     0 [  6]             calc!_createnum\n   25     0 [  7]               kernel32!LocalAlloc\n   12    25 [  6]             calc!_createnum\n  127    37 [  5]           calc!_mulnumx\n    3     0 [  6]             calc!_destroynum\n   17     0 [  6]             kernel32!LocalFree\n  133    57 [  5]           calc!_mulnumx\n   27   190 [  4]         calc!mulnumx\n   17   231 [  3]       calc!mulrat\n   24     0 [  4]         calc!mulnumx\n   19   255 [  3]       calc!mulrat\n   36     0 [  4]         calc!trimit\n   23   291 [  3]       calc!mulrat\n   33   616 [  2]     calc!ratpowlong\n   36     0 [  3]       calc!trimit\n   35   652 [  2]     calc!ratpowlong\n   36     0 [  3]       calc!trimit\n   43   688 [  2]     calc!ratpowlong\n    6     0 [  3]       calc!mulrat\n   14     0 [  4]         calc!zernum\n   12    14 [  3]       calc!mulrat\n   22     0 [  4]         calc!mulnumx\n   19     0 [  5]           calc!_mulnumx\n    6     0 [  6]             calc!_createnum\n   25     0 [  7]               kernel32!LocalAlloc\n   12    25 [  6]             calc!_createnum\n  127    37 [  5]           calc!_mulnumx\n    3     0 [  6]             calc!_destroynum\n   17     0 [  6]             kernel32!LocalFree\n  133    57 [  5]           calc!_mulnumx\n   27   190 [  4]         calc!mulnumx\n   17   231 [  3]       calc!mulrat\n   24     0 [  4]         calc!mulnumx\n   19   255 [  3]       calc!mulrat\n   36     0 [  4]         calc!trimit\n   23   291 [  3]       calc!mulrat\n   46  1002 [  2]     calc!ratpowlong\n   36     0 [  3]       calc!trimit\n   48  1038 [  2]     calc!ratpowlong\n   36     0 [  3]       calc!trimit\n   57  1074 [  2]     calc!ratpowlong\n   22     0 [  3]       calc!mulnumx\n   19     0 [  4]         calc!_mulnumx\n    6     0 [  5]           calc!_createnum\n   25     0 [  6]             kernel32!LocalAlloc\n   12    25 [  5]           calc!_createnum\n  127    37 [  4]         calc!_mulnumx\n    3     0 [  5]           calc!_destroynum\n   17     0 [  5]           kernel32!LocalFree\n  133    57 [  4]         calc!_mulnumx\n   27   190 [  3]       calc!mulnumx\n   63  1291 [  2]     calc!ratpowlong\n   24     0 [  3]       calc!mulnumx\n   66  1315 [  2]     calc!ratpowlong\n    6     0 [  3]       calc!mulrat\n   14     0 [  4]         calc!zernum\n   12    14 [  3]       calc!mulrat\n   22     0 [  4]         calc!mulnumx\n   19     0 [  5]           calc!_mulnumx\n    6     0 [  6]             calc!_createnum\n   25     0 [  7]               kernel32!LocalAlloc\n   12    25 [  6]             calc!_createnum\n  127    37 [  5]           calc!_mulnumx\n    3     0 [  6]             calc!_destroynum\n   17     0 [  6]             kernel32!LocalFree\n  133    57 [  5]           calc!_mulnumx\n   27   190 [  4]         calc!mulnumx\n   17   231 [  3]       calc!mulrat\n   24     0 [  4]         calc!mulnumx\n   19   255 [  3]       calc!mulrat\n   36     0 [  4]         calc!trimit\n   23   291 [  3]       calc!mulrat\n   69  1629 [  2]     calc!ratpowlong\n   36     0 [  3]       calc!trimit\n   71  1665 [  2]     calc!ratpowlong\n   36     0 [  3]       calc!trimit\n   76  1701 [  2]     calc!ratpowlong\n    6     0 [  3]       calc!_destroyrat\n    3     0 [  4]         calc!_destroynum\n   17     0 [  4]         kernel32!LocalFree\n    9    20 [  3]       calc!_destroyrat\n    3     0 [  4]         calc!_destroynum\n   17     0 [  4]         kernel32!LocalFree\n   12    40 [  3]       calc!_destroyrat\n   17     0 [  4]         kernel32!LocalFree\n   14    57 [  3]       calc!_destroyrat\n   82  1772 [  2]     calc!ratpowlong\n   85  4523 [  1]   calc!lshrat\n    6     0 [  2]     calc!mulrat\n   14     0 [  3]       calc!zernum\n   12    14 [  2]     calc!mulrat\n   22     0 [  3]       calc!mulnumx\n   19     0 [  4]         calc!_mulnumx\n    6     0 [  5]           calc!_createnum\n   25     0 [  6]             kernel32!LocalAlloc\n   12    25 [  5]           calc!_createnum\n  127    37 [  4]         calc!_mulnumx\n    3     0 [  5]           calc!_destroynum\n   17     0 [  5]           kernel32!LocalFree\n  133    57 [  4]         calc!_mulnumx\n   27   190 [  3]       calc!mulnumx\n   17   231 [  2]     calc!mulrat\n   24     0 [  3]       calc!mulnumx\n   19   255 [  2]     calc!mulrat\n   36     0 [  3]       calc!trimit\n   23   291 [  2]     calc!mulrat\n   87  4837 [  1]   calc!lshrat\n    6     0 [  2]     calc!_destroyrat\n    3     0 [  3]       calc!_destroynum\n   17     0 [  3]       kernel32!LocalFree\n    9    20 [  2]     calc!_destroyrat\n    3     0 [  3]       calc!_destroynum\n   17     0 [  3]       kernel32!LocalFree\n   12    40 [  2]     calc!_destroyrat\n   17     0 [  3]       kernel32!LocalFree\n   14    57 [  2]     calc!_destroyrat\n   91  4908 [  1]   calc!lshrat\n  144  5320 [  0] calc!DoOperation\n    6     0 [  1]   calc!_destroyrat\n    3     0 [  2]     calc!_destroynum\n   17     0 [  2]     kernel32!LocalFree\n    9    20 [  1]   calc!_destroyrat\n    3     0 [  2]     calc!_destroynum\n   17     0 [  2]     kernel32!LocalFree\n   12    40 [  1]   calc!_destroyrat\n   17     0 [  2]     kernel32!LocalFree\n   14    57 [  1]   calc!_destroyrat\n  153  5391 [  0] calc!DoOperation\n\n5544 instructions were executed in 5543 events (0 from other threads)\n\nFunction Name                               Invocations MinInst MaxInst AvgInst\ncalc!DoOperation                                      1     153     153     153\ncalc!_EH_prolog                                       1      10      10      10\ncalc!_addnum                                          3     148     205     172\ncalc!_createnum                                      26      12      12      12\ncalc!_createrat                                       8      12      12      12\ncalc!_destroynum                                     40       3       3       3\ncalc!_destroyrat                                     14       6      14      10\ncalc!_mulnumx                                         5     133     133     133\ncalc!addnum                                           3      21      23      21\ncalc!addrat                                           3      41      41      41\ncalc!divnumx                                          1      24      24      24\ncalc!equnum                                           5      52      52      52\ncalc!intrat                                           2      23      23      23\ncalc!longtonum                                        2      21      21      21\ncalc!longtorat                                        1      17      17      17\ncalc!lshrat                                           1      91      91      91\ncalc!mulnumx                                         12      24      51      27\ncalc!mulrat                                           4      23      23      23\ncalc!numtolong                                        1      28      28      28\ncalc!rat_gt                                           2      94      94      94\ncalc!rat_lt                                           1      92      92      92\ncalc!ratpowlong                                       1      82      82      82\ncalc!rattolong                                        1     116     116     116\ncalc!trimit                                          10      36      36      36\ncalc!zernum                                          10      14      14      14\nkernel32!LocalAlloc                                  34      25      25      25\nkernel32!LocalFree                                   34      17      17      17\n\n0 system calls were executed\n\neax=00000000 ebx=00000000 ecx=7c800000 edx=7c97e120 esi=7c90de6e edi=00000000\neip=7c90e514 esp=0007fde8 ebp=0007fee4 iopl=0         nv up ei pl zr na pe nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246\nntdll!KiFastSystemCallRet:\n7c90e514 c3              ret\n0:000> q\nquit:\n</code></pre>\n</div>\n</body></html>",
            "votes": "6",
            "user": "blabb",
            "time": "Nov 7, 2014 at 12:39",
            "is_accepted": true,
            "comments": [
                {
                    "user": "m fran",
                    "text": "<span class=\"comment-copy\">This looks like it's exactly what i need, but I need a little more help on how to use it since i have no experience in windbg. I tried loading calc.exe and doing wt -m calc just for testing it but it only outputs a couple of instructions and then start.</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">look at the additional details added to the answer</span>",
                    "time": null
                }
            ]
        }
    ]
}