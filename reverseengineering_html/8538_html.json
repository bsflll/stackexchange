{
    "title": "Reverse engineering UEFI CAP files",
    "link": "https://reverseengineering.stackexchange.com/questions/8538/reverse-engineering-uefi-cap-files",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm looking to identify code changes in the latest UEFI release for my motherboard, to verify whether the changes include mitigations for the\n  <a href=\"http://en.wikipedia.org/wiki/Row_hammer\" rel=\"nofollow\">\n   row hammer\n  </a>\n  vulnerability. I'm specifically looking at the last 3 releases (2401, 2304, 2201) of the Asus Maximus VII Hero board, which can be downloaded\n  <a href=\"http://www.asus.com/uk/Motherboards/MAXIMUS_VII_HERO/HelpDesk_Download/\" rel=\"nofollow\">\n   here\n  </a>\n  .\n </p>\n <p>\n  The UEFI binaries are provided as CAP files, which I'm not used to seeing. Apparently these are \"UEFI Capsules\", which Intel has\n  <a href=\"http://www.intel.com/content/www/us/en/architecture-and-technology/unified-extensible-firmware-interface/efi-capsule-specification.html\" rel=\"nofollow\">\n   a specification\n  </a>\n  for, but I've tried both automatic analysis (with\n  <a href=\"https://github.com/theopolis/uefi-firmware-parser\" rel=\"nofollow\">\n   uefi-firmware-parser\n  </a>\n  ) and some manual digging to no avail. Running binwalk across them results in the usual noise of supposed LZMA blobs, but even once I grep past those I just run into a couple of false positive detections for encrypted data.\n </p>\n <p>\n  The actual data within alternates between repetitive, structured, and high-entropy (encrypted / compressed) blocks, but I can't find anything obvious. Running a bindiff across the different revisions shows me some majorly changed blocks, and some odd bytes here and there.\n </p>\n <p>\n  IDA doesn't seem to recognise anything in there as being EFI code, so I'm now stumped.\n </p>\n <p>\n  How can I get started with these CAP files? Is there any research out there that I should read? Are there any toolchains to work with them?\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 2,
    "views": "3k",
    "tags": [
        "firmware",
        "static-analysis"
    ],
    "user": "Polynomial",
    "time": "Mar 23, 2015 at 20:53",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Someone pointed me to\n  <a href=\"https://github.com/LongSoft/UEFITool\" rel=\"nofollow\">\n   UEFITool\n  </a>\n  , which does exactly what I wanted. There's also an extractor version which dumps out all the separate nested binary components to directories. From this I was able to go through and analyse individual modules in IDA (they're x86 PE files, so it's easy).\n </p>\n <p>\n  I've not got quite as far as identifying whether the rowhammer mitigations are in place, but I'm writing some scripts to do bindiffs of each changed component, which should hopefully give me some idea of what I'm looking for.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Polynomial",
            "time": "Mar 24, 2015 at 11:35",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The firmware isn't contained in an area denoted by a normal EFI_CAPSULE_GUID, like the specification your link describes. I can't find reference to the GUID in that CAP file in a public specification.\n </p>\n <p>\n  You can use\n  <a href=\"https://gist.github.com/XVilka/8163272\" rel=\"nofollow\">\n   this python script\n  </a>\n  to strip off the capsule and then the resulting firmware file can be parsed with uefi-firmware-parser.\n </p>\n <p>\n  Alternatively, if you're using IDA,\n  <a href=\"https://github.com/snare/ida-efiutils\" rel=\"nofollow\">\n   this\n  </a>\n  looks like it might be pretty useful - it seems to be aware of the strange GUID.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "booto",
            "time": "Mar 24, 2015 at 12:17",
            "is_accepted": false,
            "comments": []
        }
    ]
}