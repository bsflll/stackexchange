{
    "title": "Large memcpy operation before possible obfuscation [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/4414/large-memcpy-operation-before-possible-obfuscation",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed\n        </b>\n        . This question needs\n        <a href=\"/help/closed-questions\">\n         details or clarity\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       <b>\n        Want to improve this question?\n       </b>\n       Add details and clarify the problem by\n       <a href=\"/posts/4414/edit\">\n        editing this post\n       </a>\n       .\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2014-05-30 21:47:51Z\">\n        10 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/4414/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  I am currently reversing a binary and I am stuck at understanding what the application is trying to do. There is a memcpy operation which is copying almost 1MB from a .data section to a .bss section.  This operation is made in an initialising phase and I suspect that the code running subsequently is obfuscated. The reason I think this is that the subsequent code is very convoluted. Would the large memory block being loaded have anything to do with it being obfuscated, a virtual machine maybe? The code isn't junk afterwards but just too complicated to follow what it is doing. It doesn't seem to have any large jump tables so I am sure what I am looking at.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "196",
    "tags": [
        "obfuscation"
    ],
    "user": "allbabel",
    "time": "10 years ago",
    "comments": [
        {
            "user": "Willem Hengeveld",
            "text": "<html><body><span class=\"comment-copy\">\n is the memcpy function from a library?  or did you identify it as memcpy yourself?  I have seen functions which look like memcpy, bug on closer inspection also had some decompression code in them.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Guntram Blohm",
            "text": "<html><body><span class=\"comment-copy\">\n There's not really much you give us to work on, so all answers you're going to get are quite uneducated guesses. My uneducated guess is: the application copies some data to a buffer and decrypts that buffer, and the decryption routine just happens to look convoluted in assembler - hey, most encryption/decryption routines look convoluted even in source code.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "yaspr",
            "text": "<html><body><span class=\"comment-copy\">\n I do agree with @GuntramBlohm about the fact that the memcopy might be moving data to a statically allocated buffer (hence the .bss) for further processing. Could you provide more information, the objdump output for example ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "allbabel",
            "text": "<html><body><span class=\"comment-copy\">\n It came out as memcpy using IDA Pro so I assuming it is memcpy. I could check it further to see if it is actually something else.  I agree that the convoluted section could just be encryption code but I suppose that is my question; how do I work out if something is obfuscated? I am a newbie to this and some pointers on how to spot obfuscation would help dearly.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "yaspr",
            "text": "<html><body><span class=\"comment-copy\">\n Well, a code can be obfuscated using many techniques : padding with garbage bytes, mixing instructions with data, oligomorphism with indirect branches, ... People will be able to help if they have something concrete to look at, mainly\n <i>\n  CODE\n </i>\n .\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I've taken this to mean that you want to know how to analyse further. Load it in IDA pro remotely debugging in a virtual machine (that you can throw away) and have it execute until eip is in an unanalysed region. Highlight, right click, analyse.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "offbyseveral",
            "time": "May 23, 2014 at 4:54",
            "is_accepted": false,
            "comments": [
                {
                    "user": "allbabel",
                    "text": "<span class=\"comment-copy\">I have already pulled out the binary and had a look at it and it seems to be a look up table of sorts</span>",
                    "time": null
                },
                {
                    "user": "offbyseveral",
                    "text": "<span class=\"comment-copy\">Sounds like compression. Look for where the data is written after the lookup.</span>",
                    "time": null
                },
                {
                    "user": "allbabel",
                    "text": "<span class=\"comment-copy\">Could it be a type of encryption also?  I don't think its a public algorithm so I am thinking the complexity I can see in IDA pro is the algorithm for the encryption.</span>",
                    "time": null
                },
                {
                    "user": "offbyseveral",
                    "text": "<span class=\"comment-copy\">From your description it could be anything. I'm just trying to give you method hints. Sounds like it's going to both take a long time and be worth it.</span>",
                    "time": null
                },
                {
                    "user": "offbyseveral",
                    "text": "<span class=\"comment-copy\">But yes it could be encryption.</span>",
                    "time": null
                }
            ]
        }
    ]
}