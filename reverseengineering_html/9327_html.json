{
    "title": "Assembly analyze C system() function",
    "link": "https://reverseengineering.stackexchange.com/questions/9327/assembly-analyze-c-system-function",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  So I made a very simple C program to study how C works on the inside. It has just 1 line in the main() excluding return 0:\n </p>\n <pre><code>system(\"cls\");\n</code></pre>\n <p>\n  If I use ollydebugger to analyze this program It will show something like this(text after the semicolons are comments generated by ollydebugger.\n </p>\n <pre><code>MOV DWORD PTR SS:[ESP],test_1.004030EC     ; ||ASCII \"cls\"\nCALL <JMP.&msvcrt.system>                ; |\\system\n</code></pre>\n <p>\n  Can someone explain what this means, and if I want to change the \"cls\" called in the system() to another command, where is the \"cls\" stored? And how do I modify it?\n </p>\n</div>\n</body></html>",
    "votes": "-2",
    "answers": 1,
    "views": "561",
    "tags": [
        "ollydbg",
        "assembly",
        "c"
    ],
    "user": "Dashadower",
    "time": "Jul 11, 2015 at 12:24",
    "comments": [
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n Ascii string\n <code>\n  cls\n </code>\n is stored at virtual address\n <code>\n  004030EC\n </code>\n . In Olly press ,Ctrl + G to go there.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The Ascii string\n  <code>\n   cls\n  </code>\n  is stored at address\n  <code>\n   0x004030EC\n  </code>\n  . Why is it stored at that location is probably compiler related.\n </p>\n <p>\n  The\n  <code>\n   ESP\n  </code>\n  register holds the address of the top of the stack. What your instruction\n </p>\n <pre><code>MOV DWORD PTR SS:[ESP],test_1.004030EC     ; ||ASCII \"cls\"\n</code></pre>\n <p>\n  means is to put the value\n  <code>\n   0x004030EC\n  </code>\n  to the address pointed to by\n  <code>\n   ESP\n  </code>\n  . If the value of\n  <code>\n   ESP\n  </code>\n  is, lets say,\n  <code>\n   ESP = 0x0018FF8C\n  </code>\n  , then the value at address\n  <code>\n   0x0018FF8C\n  </code>\n  will be\n  <code>\n   0x004030EC\n  </code>\n  after the above\n  <code>\n   MOV\n  </code>\n  instruction is executed.\n </p>\n <p>\n  If you want to change the string\n  <code>\n   cls\n  </code>\n  to something else, you can position at the dump window in Olly and press CTRL-G. A popup box will appear and there you will enter\n  <code>\n   0x004030EC\n  </code>\n  and press\n  <code>\n   Ok\n  </code>\n  . After that right click on the first byte at that address, which should be\n  <code>\n   0x63\n  </code>\n  (the letter 'c' from string \"cls\") and choose\n  <code>\n   Binary -> Edit\n  </code>\n  . There you can enter your new string that will be passed to the\n  <code>\n   CALL\n  </code>\n  instruction.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "ubnix",
            "time": "Jul 13, 2015 at 10:16",
            "is_accepted": false,
            "comments": []
        }
    ]
}