{
    "title": "When defining a structure in IDA, can I define a field that is of another struct type?",
    "link": "https://reverseengineering.stackexchange.com/questions/3859/when-defining-a-structure-in-ida-can-i-define-a-field-that-is-of-another-struct",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm looking to define a structure in IDA like:\n </p>\n <pre><code>struct StructA {\n    int a;\n    int b;\n} StructA;\n\nstruct StructB {\n    StructA a;\n    int b;\n} StructB;\n</code></pre>\n <p>\n  Can I do this in IDA's structure definition box without having to redefine all the members from\n  <code>\n   StructA\n  </code>\n  in\n  <code>\n   StructB\n  </code>\n  ?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "6k",
    "tags": [
        "ida",
        "struct"
    ],
    "user": "crush",
    "time": "Mar 12, 2014 at 21:15",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Yes. In\n  <code>\n   StructB\n  </code>\n  , select the field you want to convert to a sub-structure or create a new field by pressing\n  <kbd>\n   D\n  </kbd>\n  . With the given field selected, press\n  <kbd>\n   Alt\n  </kbd>\n  +\n  <kbd>\n   Q\n  </kbd>\n  and select\n  <code>\n   StructA\n  </code>\n  for the field.\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "Jason Geffner",
            "time": "Mar 12, 2014 at 21:54",
            "is_accepted": true,
            "comments": [
                {
                    "user": "withzombies",
                    "text": "<span class=\"comment-copy\">Additionally, check out the \"Local Types\" window. It can digest the native C structure (right-click and select \"Insert\"). Which then can be synchronized over to the structures window (right-click on the local type and choose \"Syncronize to idb\").    Additionally, the Local Types window can accept typedefs and packing pragmas. In my opinion, it's the better way when manipulating structure definitions.</span>",
                    "time": null
                },
                {
                    "user": "crush",
                    "text": "<span class=\"comment-copy\">@withzombies Nevermind, I was doing it wrong! Thanks.</span>",
                    "time": null
                }
            ]
        }
    ]
}