{
    "title": "Can Glicko-2 accept any outcomes besides wins, losses, and draws?",
    "link": "https://reverseengineering.stackexchange.com/questions/30762/can-glicko-2-accept-any-outcomes-besides-wins-losses-and-draws",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This seems like the best place listed to ask (apologies if it's not) but I'm extremely curious:\n  \n\n  Glicko and Glicko-2 are ratings algorithms designed for chess (as an improvement to the Elo rating system) to assess a player's strength at a game of skill. I've been reading about it the past couple of days and I noticed that the algorithms can only accept 3 outcomes: wins, losses, and draws. As such, the variable in the formulas that represent the match's outcome can only be a 1, 1/2, or 0.\n  <strong>\n   Would it be at all possible to reverse-engineer or modify the equations to accept outcomes beyond this range\n  </strong>\n  - like a \"crushing\" victory or loss?\n  \n\n  I'm hazarding towards \"no\" because even if it were possible to include a \"1.5\" result, in turn a \"-0.5\" result would also have to exist and I'm imagining negative numbers would break the\n  <em>\n   HELL\n  </em>\n  out of these algorithms.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "72",
    "tags": [
        "game"
    ],
    "user": "Emilia Pennykettle",
    "time": "Aug 12, 2022 at 7:10",
    "comments": [
        {
            "user": "raspiduino",
            "text": "<html><body><span class=\"comment-copy\">\n This looks a bit like math rather than software or hardware RE\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n You need to add some references for those who donâ€™t know what are these things.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm basing this answer on the Wikipedia pages about\n  <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\" rel=\"nofollow noreferrer\">\n   Elo\n  </a>\n  and\n  <a href=\"https://en.wikipedia.org/wiki/Glicko_rating_system\" rel=\"nofollow noreferrer\">\n   Glicko\n  </a>\n  . When you say the variable in the formulas that represent the match's outcome\n  <em>\n   have to be\n  </em>\n  a 1, 1/2, or 0, that depends on where you see the match outcome. The expected match outcome in Elo, for instance, is computed using the\n  <a href=\"https://en.wikipedia.org/wiki/Logistic_function\" rel=\"nofollow noreferrer\">\n   logistic curve function\n  </a>\n  which has a range between 0 and 1, so the expected outcome in that system can never be a 1.5 or a -0.5. This looks like it is also true in Glicko. Not the same formula exactly, but one which is based on the logistic curve with the output range between 0 and 1.\n </p>\n <p>\n  The Wikipedia article on Elo also points out that there are multiple ways to interpret the expected outcome.\n </p>\n <blockquote>\n  <p>\n   Thus, an expected score of 0.75 could represent a 75% chance of winning, 25% chance of losing, and 0% chance of drawing. On the other extreme it could represent a 50% chance of winning, 0% chance of losing, and 50% chance of drawing. The probability of drawing, as opposed to having a decisive result, is not specified in the Elo system.\n  </p>\n </blockquote>\n <p>\n  Say there was a \"crushing loss\" with a value of 1.5. You would never be able to have the system predict that it would be a crushing loss with anything more than a 66% chance because that is the maximum output of the logistic curve formula.\n </p>\n <p>\n  Hope that helps.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "dingo_kinznerhook",
            "time": "Aug 26, 2022 at 20:18",
            "is_accepted": false,
            "comments": []
        }
    ]
}