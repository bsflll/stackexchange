{
    "title": "How to view string references?",
    "link": "https://reverseengineering.stackexchange.com/questions/18504/how-to-view-string-references",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have attached debugger to process/application (exe), but when i go to string references, it shows ntdll.dll references, instead of program.\nhow to get the references from program itself?\nis it protected?\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/0Wg7o.png\" rel=\"noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/0Wg7o.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "10",
    "answers": 2,
    "views": "38k",
    "tags": [
        "x64dbg"
    ],
    "user": "T.Todua",
    "time": "Jun 11, 2018 at 15:25",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n If you wanted to conceal the name of the module you should also have looked at line four inside the disassembly :) ... btw: I think the debuggers use heuristics in order to show you cross-references. There are bound to be\n <i>\n  some\n </i>\n false positives.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Benjamin Supaman Perez",
            "text": "<html><body><span class=\"comment-copy\">\n Click right button, search for -----> all modules ---> strings references.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  When x64dbg attaches to a process it will first stop at the 'Attach breakpoint'. The button to search for string references will search the module currently shown in the disassembly. To search in another module you simply have to go there.\n </p>\n <p>\n  One way to do this is to go to the\n  <code>\n   Symbols\n  </code>\n  tab and double click the module you are interested in. This should take you to the code section of the module. From there you can press the button to search for string references.\n </p>\n</div>\n</body></html>",
            "votes": "10",
            "user": "mrexodia",
            "time": "Jun 15, 2018 at 17:51",
            "is_accepted": true,
            "comments": [
                {
                    "user": "KeyC0de",
                    "text": "<span class=\"comment-copy\">That was what I did but wasn't working (always going back to <code>ntddl.dll</code> or some other module), until I RMB on the module and selected \"Follow Entry point in Disassembler\" then I was able to search for strings in my target module.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The way is:\n </p>\n <pre><code>Debug -> Run to user code\n</code></pre>\n <p>\n  Then you will see the strings of the program itself.\nx64dbg/x32dbg as any other debugger, walks you trough all the process initialization code before entering your \"main\".\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "0xfede7c8",
            "time": "Jun 14, 2018 at 16:50",
            "is_accepted": false,
            "comments": [
                {
                    "user": "T.Todua",
                    "text": "<span class=\"comment-copy\">hm, i can only see <b><code>Run</code></b> To User code, however it still shows <code>ntdll.dll</code> when i go to string references.</span>",
                    "time": null
                }
            ]
        }
    ]
}