{
    "title": "Unknown string encoding",
    "link": "https://reverseengineering.stackexchange.com/questions/32836/unknown-string-encoding",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm new to reverse, my question may be stupid.\nI am trying to reverse a function in the application that reads a string at the address and concatenate it to another\n </p>\n <pre><code>char[250] v30;\nchar[20] v31;\n...\nmemcpy(v31, &unk_1ABB65, 20);\nstrcat(v30, v31);\n</code></pre>\n <p>\n  I tried to read the bytes at this address and concluded that the bytes go beyond ASCII and tried to apply various encodings including extended ASCII, but I didn't get any normal result. Maybe the address changes in runtime (no other references), or does this address point to RAM or NVRAM? I don't understand.\nThanks for the help!\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "51",
    "tags": [
        "ida",
        "memory",
        "encodings",
        "strings",
        "unknown-data"
    ],
    "user": "SHVED",
    "time": "Mar 25, 2024 at 13:17",
    "comments": [
        {
            "user": "josh poley",
            "text": "<html><body><span class=\"comment-copy\">\n Read up on stack variable lifetimes. The memory values will only be valid while those instructions are executing. Keep in mind that localized optimizations may reuse stack space when things are no longer used.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}