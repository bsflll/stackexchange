{
    "title": "[windbg]kd - sxe ld <dll> from a process context won't fire",
    "link": "https://reverseengineering.stackexchange.com/questions/17036/windbgkd-sxe-ld-dll-from-a-process-context-wont-fire",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to stop at a specific module load from a kernel debugger inside a specific process context.\n </p>\n <p>\n  What i do is to first set\n  <code>\n   sxe ld [process-name]\n  </code>\n  let's say calc.exe.\n </p>\n <p>\n  Now, when I run calc it works, but when i set\n  <code>\n   sxe ld [dll-name]\n  </code>\n  (say kernel32/ntdll) it won't work.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "6k",
    "tags": [
        "windows",
        "windbg",
        "kernel-mode"
    ],
    "user": "Jimmy",
    "time": "Dec 22, 2017 at 19:50",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I think usually this enables stopping on loading of kernel modules only (e.g. drivers). However,\n  <a href=\"https://stackoverflow.com/questions/24319716/how-do-i-debug-a-process-that-starts-at-boot-time\">\n   this SO answer\n  </a>\n  claims it can work for user-mode processes if you send\n  <code>\n   !gflag +ksl\n  </code>\n  first (Enable loading of kernel debugger symbols).\n </p>\n <p>\n  It also describes how you can set process-specific kernel  breakpoints, e.g.\n </p>\n <pre><code>kd> .process\n    Implicit process is now 00112233`44556677\nbp /p 0011223344556677 nt!NtMapViewOfSection\n</code></pre>\n <p>\n  The\n  <code>\n   NtMapViewOfSection\n  </code>\n  syscall is used, among other purposes, to load DLLs so by stopping at it you should catch all further DLL loads.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Igor Skochinsky",
            "time": "Dec 22, 2017 at 15:08",
            "is_accepted": true,
            "comments": []
        }
    ]
}