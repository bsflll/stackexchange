{
    "title": "Want to use win API hooking to detect wmi query string? But can't find IWbemServices::ExecQuery in fastprox.dll",
    "link": "https://reverseengineering.stackexchange.com/questions/27965/want-to-use-win-api-hooking-to-detect-wmi-query-string-but-cant-find-iwbemserv",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to implement WMI query detection function using apimon plugin in sandbox\n  <a href=\"https://github.com/tklengyel/drakvuf\" rel=\"nofollow noreferrer\">\n   https://github.com/tklengyel/drakvuf\n  </a>\n </p>\n <p>\n  To do it,I have to get the DLL symbol file.\nBut I can't locate the\n  <code>\n   IWbemServices::ExecQuery\n  </code>\n  method in any DLL.\n </p>\n <p>\n  Is there any idea to detect wmi query string like\n  <code>\n   select * from win32_operatingsystem\n  </code>\n  only using API monitoring?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "704",
    "tags": [
        "windows",
        "malware"
    ],
    "user": "jacoblin",
    "time": "Jul 8, 2021 at 9:57",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Well, as the name indicates, it's a service interface. You need to figure out the (COM) server implementing it and that's where you'd be able to peek into data exchange. Alternatively you can look for instances of\n <code>\n  CoCreateInstance\n </code>\n ,\n <code>\n  CoCreateInstanceEx\n </code>\n ,\n <code>\n  CoGetClassObject\n </code>\n and similar being called from that binary, look for the CLSID of the interface and use that to get into the flow of data. I think you need to read up on COM first, you seem to have quite some misunderstandings and that's not even RCE at this point.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "jacoblin",
            "text": "<html><body><span class=\"comment-copy\">\n Actually,I am working on some sandbox features to detect malware evasion point according to the research\n <a href=\"https://evasions.checkpoint.com/techniques/wmi.html\" rel=\"nofollow noreferrer\">\n  evasions.checkpoint.com/techniques/wmi.html\n </a>\n .  After understanding part of the COM, I find fastproxy.dll implementing the method ExecQuery in the IWbemServices interface. But I am not sure if I am on the right point,any advice? Thanks a lot...  Below is my write up.\n <a href=\"https://hackmd.io/zv9rEy5WRYGJ0TDsKQLu5A\" rel=\"nofollow noreferrer\">\n  hackmd.io/zv9rEy5WRYGJ0TDsKQLu5A\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am Not sure what you are looking for\nif you execute in say wmic\n </p>\n <pre><code>C:\\WINDOWS\\system32>wmic os get Name\n</code></pre>\n <p>\n  you get back\n </p>\n <pre><code>Name\nMicrosoft Windows 10 Pro|C:\\WINDOWS|\\Device\\Harddisk0\\Partition4\n</code></pre>\n <p>\n  this is executed with your select *from sql or wql query\n  \n\n  here is a call stack and relevent info\n </p>\n <p>\n  broken at\n </p>\n <pre><code>0:000> rM0\nWMIC!CExecEngine::ProcessSHOWInfo:\n00007ff7`a6fc5590 4053            push    rbx\n</code></pre>\n <p>\n  call stack\n </p>\n <pre><code>0:000> kP\nChild-SP          RetAddr           Call Site\n0000008c`90c9f6a8 00007ff7`a6fc2ffe WMIC!CExecEngine::ProcessSHOWInfo\n0000008c`90c9f6b0 00007ff7`a6fe9141 WMIC!CExecEngine::ExecuteCommand+0x1ae\n0000008c`90c9f750 00007ff7`a6fe8060 WMIC!CWMICommandLine::ProcessCommandAndDisplayResults+0x5f5\n0000008c`90c9f910 00007ff7`a6feee6d WMIC!wmain+0x934\n0000008c`90c9fb20 00007ff8`96f07c24 WMIC!__wmainCRTStartup+0x14d\n0000008c`90c9fb60 00007ff8`986cd721 KERNEL32!BaseThreadInitThunk+0x14\n0000008c`90c9fb90 00000000`00000000 ntdll!RtlUserThreadStart+0x21\n</code></pre>\n <p>\n  script dumping arg1@rcx *rcx **rcx,arg2 @rdx....,arg3@r8....,arg4@r9...\n </p>\n <pre><code>0:000> $$>a< \"xxxxx\\arg64.wds\"\nrcx=00007ff7a70198e0\n=========       @rcx\n00007ff7`a70198e0  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................\n00007ff7`a70198f0  e0 2d 88 07 f5 01 00 00-00 00 00 00 00 00 00 00  .-..............\n=========       *@rcx\n00000000`00000000  ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??  ????????????????\n00000000`00000010  ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??  ????????????????\nrdx=00007ff7a70199e8\n=========       @rdx\n00007ff7`a70199e8  c0 e4 a8 07 f5 01 00 00-60 e5 a8 07 f5 01 00 00  ........`.......\n00007ff7`a70199f8  20 01 73 09 f5 01 00 00-00 00 00 00 00 00 00 00   .s.............\n=========       *@rdx\n000001f5`07a8e4c0  20 00 6f 00 73 00 20 00-67 00 65 00 74 00 20 00   .o.s. .g.e.t. .\n000001f5`07a8e4d0  4e 00 61 00 6d 00 65 00-00 00 ab ab ab ab ab ab  N.a.m.e.........\nr8=0000000000000001\n=========       @r8\n00000000`00000001  ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??  ????????????????\n00000000`00000011  ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??  ????????????????\n=========       *@r8\nMemory access error at ') '\nr9=0000000000000000\n=========       @r9\n00000000`00000000  ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??  ????????????????\n00000000`00000010  ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??  ????????????????\n=========       *@r9\nMemory access error at ') '\n</code></pre>\n <p>\n  the second argument contins your sql/ wql query\n </p>\n <pre><code>0:000> dpu @rdx\n00007ff7`a70199e8  000001f5`07a8e4c0 \" os get Name\"\n00007ff7`a70199f0  000001f5`07a8e560 \"os\"\n00007ff7`a70199f8  000001f5`09730120 \"Installed Operating System/s management. \"\n00007ff7`a7019a00  00000000`00000000\n00007ff7`a7019a08  00000000`00000000\n00007ff7`a7019a10  00000000`00000000\n00007ff7`a7019a18  000001f5`097300d0 \"get\"\n00007ff7`a7019a20  00000000`00000000\n00007ff7`a7019a28  00000000`00000000\n00007ff7`a7019a30  00000000`00000000\n00007ff7`a7019a38  00000000`00000000\n00007ff7`a7019a40  000001f5`07a8ee00 \"Select * from Win32_OperatingSystem\"\n00007ff7`a7019a48  00000000`00000000\n00007ff7`a7019a50  00000000`00000001\n00007ff7`a7019a58  000001f5`07a81770 \"ᝰ.ǵ\"\n00007ff7`a7019a60  00000000`00000000\n0:000>  \n</code></pre>\n <p>\n  if you follow further you can see instead of wildcard a specific attribute is queried\n </p>\n <pre><code>0:000> rM0\nWMIC!CExecEngine::ObtainXMLResultSet:\n00007ff7`a6fc3030 4c8bdc          mov     r11,rsp\n0:000> r rcx,rdx,r8,r9\nrcx=00007ff7a70198e0 rdx=00000204437822d8 r8=00007ff7a70199e8 r9=0000003789d3b5b8\n0:000> du /c 100 @rdx\n00000204`437822d8  \"SELECT Name FROM Win32_OperatingSystem\"\n0:000>  \n</code></pre>\n <p>\n  <a href=\"https://docs.microsoft.com/en-us/windows/win32/wmisdk/example--getting-wmi-data-from-the-local-computer\" rel=\"nofollow noreferrer\">\n   there is a documented example to retrieve data from wmi methods here\n  </a>\n </p>\n <p>\n  compiling it and tracing it you can see the method being resolved in fastprox.dll as below\n </p>\n <pre><code>0:000> dps @rax+0xa0 l1\n00007ff8`855846b0  00007ff8`854ec8f0 fastprox!CWbemSvcWrapper::XWbemServices::ExecQuery\n0:000> r\nrax=00007ff885584610 rbx=00007ff669e67bc8 rcx=00000160178261a0\nrdx=00000160178122b8 rsi=0000000000000000 rdi=00000160177e65e0\nrip=00007ff669da1638 rsp=00000050a376faf0 rbp=0000000000000000\n r8=000001601781fb08  r9=0000000000000030 r10=00000050a376fa20\nr11=00000160178122b8 r12=0000000000000000 r13=0000000000000000\nr14=0000000000000000 r15=0000000000000000\niopl=0         nv up ei pl nz na po nc\ncs=0033  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000206\nwbemexec!main+0x448:\n00007ff6`69da1638 ff90a0000000    call    qword ptr [rax+0A0h] ds:00007ff8`855846b0={fastprox!CWbemSvcWrapper::XWbemServices::ExecQuery (00007ff8`854ec8f0)}\n0:000> ?? @rax == @@masm(poi(@rcx))\nbool true\n0:000> du @rdx\n00000160`178122b8  \"WQL\"\n0:000> du @r8\n00000160`1781fb08  \"SELECT * FROM Win32_OperatingSys\"\n00000160`1781fb48  \"tem\"\n0:000>  \n</code></pre>\n <p>\n  here is the same fastprox::..::execquery being called from wmic command prior to editing of the answer\n </p>\n <pre><code>0:000> rM0\nfastprox!CWbemSvcWrapper::XWbemServices::ExecQuery:\n00007ff8`854ec8f0 4c8bdc          mov     r11,rsp\n0:000> kp\nChild-SP          RetAddr           Call Site\n00000017`37abb518 00007ff7`ce3931c5 fastprox!CWbemSvcWrapper::XWbemServices::ExecQuery\n00000017`37abb520 00007ff7`ce395e3d WMIC!CExecEngine::ObtainXMLResultSet+0x195\n00000017`37abb760 00007ff7`ce392ffe WMIC!CExecEngine::ProcessSHOWInfo+0x8ad\n00000017`37abf960 00007ff7`ce3b9141 WMIC!CExecEngine::ExecuteCommand+0x1ae\n00000017`37abfa00 00007ff7`ce3b8060 WMIC!CWMICommandLine::ProcessCommandAndDisplayResults+0x5f5\n00000017`37abfbc0 00007ff7`ce3bee6d WMIC!wmain+0x934\n00000017`37abfdd0 00007ff8`96f07c24 WMIC!__wmainCRTStartup+0x14d\n00000017`37abfe10 00007ff8`986cd721 KERNEL32!BaseThreadInitThunk+0x14\n00000017`37abfe40 00000000`00000000 ntdll!RtlUserThreadStart+0x21\n0:000> du @rdx; du /c 100 @r8\n00000209`96d22868  \"WQL\"\n00000209`96d76d38  \"SELECT Name FROM Win32_OperatingSystem\"\n0:000> dps poi(@rcx)+a0 l1\n00007ff8`855846b0  00007ff8`854ec8f0 fastprox!CWbemSvcWrapper::XWbemServices::ExecQuery\n0:000>  \n</code></pre>\n</div>\n</body></html>",
            "votes": "0",
            "user": "blabb",
            "time": "Jul 8, 2021 at 19:41",
            "is_accepted": true,
            "comments": [
                {
                    "user": "jacoblin",
                    "text": "<span class=\"comment-copy\">Thanks for your answer! Very Helpful... Go working for the sandbox feature next.</span>",
                    "time": null
                }
            ]
        }
    ]
}