{
    "title": "Reverse Engineer 16 Bit error checking byte calculation",
    "link": "https://reverseengineering.stackexchange.com/questions/31858/reverse-engineer-16-bit-error-checking-byte-calculation",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Hello =) I am attempting to reverse engineer a communications protocol to some obsolete equipment. Communication happens on an RS485 line.\n </p>\n <p>\n  I have captured several exchanges and seem to have figured out a bit the structure.\n </p>\n <p>\n  What I am missing at the moment is to see how I would calculate the last 2 bytes which seem to be a CRC, Checksum, LRC,... some sort of Calculated bytes depending on the data.\n </p>\n <p>\n  This is a Master -> Slave Communication.\nM:\n  <code>\n   Hex bytes sent by master\n  </code>\n  Sx:\n  <code>\n   Hex Bytes replied by Slave x\n  </code>\n </p>\n <p>\n  Serial Numbers of Slaves:\nS1: F376150801196\nS2: F306103101122\nS3: F306093001029\n </p>\n <ul>\n  <li>\n   <p>\n    Broadcasting message to Discover devices\n   </p>\n  </li>\n  <li>\n   <p>\n    M:\n    <code>\n     ff 00 00 04 00 00 00 00 00 13 00 02 00 00 18 01\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S1:\n    <code>\n     fe 00 f3 04 00 00 00 00 00 00 00 00 ac 04 a5 02\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S2:\n    <code>\n     fe 00 f3 04 00 00 00 00 00 00 00 00 62 04 5b 02\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S3:\n    <code>\n     fe 00 f3 04 00 00 00 00 00 00 00 00 05 04 fe 01\n    </code>\n   </p>\n  </li>\n </ul>\n <p>\n  Devices getting enumerated :\n </p>\n <ul>\n  <li>\n   <p>\n    M:\n    <code>\n     ff 00 f3 02 ac 04 00 00 00 1b 00 00 00 00 bf 02\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S1:\n    <code>\n     fe 00 f3 02 ac 04 38 30 35 31 36 37 ac 04 8e 04\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    M:\n    <code>\n     ff 00 f3 03 ac 04 00 00 00 1b 00 00 00 00 c0 02\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S1:\n    <code>\n     fe 00 f3 03 ac 04 38 30 35 31 36 37 ac 04 8f 04\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    M:\n    <code>\n     ff 00 f3 16 ac 04 00 00 00 1b 00 00 ac 04 83 03\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S1:\n    <code>\n     fe 00 f3 16 ac 04 38 30 35 31 36 37 ac 04 a2 04\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    M:\n    <code>\n     ff 00 f3 02 62 04 00 00 00 1b 00 00 00 00 75 02\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S2:\n    <code>\n     fe 00 f3 02 62 04 31 33 30 31 36 30 62 04 ea 03\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    M:\n    <code>\n     ff 00 f3 03 62 04 00 00 00 1b 00 00 00 00 76 02\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S2:\n    <code>\n     fe 00 f3 03 62 04 31 33 30 31 36 30 62 04 eb 03\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    M:\n    <code>\n     ff 00 f3 16 62 04 00 00 00 1b 00 00 62 04 ef 02\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S2:\n    <code>\n     fe 00 f3 16 62 04 31 33 30 31 36 30 62 04 fe 03\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    M:\n    <code>\n     ff 00 f3 02 05 04 00 00 00 1b 00 00 00 00 18 02\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S3:\n    <code>\n     fe 00 f3 02 05 04 30 33 39 30 36 30 05 04 37 03\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    M:\n    <code>\n     ff 00 f3 03 05 04 00 00 00 1b 00 00 00 00 19 02\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S3:\n    <code>\n     fe 00 f3 03 05 04 30 33 39 30 36 30 05 04 38 03\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    M:\n    <code>\n     ff 00 f3 16 05 04 00 00 00 1b 00 00 05 04 35 02\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S3:\n    <code>\n     fe 00 f3 16 05 04 30 33 39 30 36 30 05 04 4b 03\n    </code>\n   </p>\n  </li>\n </ul>\n <hr/>\n <p>\n  Acknowledgement of recieved command from different slaves to the commands of move slave from Master\n </p>\n <ul>\n  <li>\n   S1:\n   <code>\n    fe 00 f3 41 00 00 00 00 00 00 00 00 ac 04 e2 02\n   </code>\n  </li>\n  <li>\n   S2:\n   <code>\n    fe 00 f3 41 00 00 00 00 00 00 00 00 62 04 98 02\n   </code>\n  </li>\n  <li>\n   S3:\n   <code>\n    fe 00 f3 41 00 00 00 00 00 00 00 00 05 04 3b 02\n   </code>\n  </li>\n </ul>\n <p>\n  Commands, acknowledged by the acknowledge command of each respective Slave accordingly\n </p>\n <ul>\n  <li>\n   <p>\n    S1 Stop Movement:\n   </p>\n  </li>\n  <li>\n   <p>\n    M:\n    <code>\n     ff fb f3 41 00 00 90 01 c2 01 00 03 ac 04 35 05\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S2 Stop Movement:\n   </p>\n  </li>\n  <li>\n   <p>\n    M:\n    <code>\n     ff fb f3 41 ff 00 00 00 00 00 00 03 62 04 96 04\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S3 Stop Movement:\n   </p>\n  </li>\n  <li>\n   <p>\n    M:\n    <code>\n     ff fb f3 41 ff 00 00 00 00 00 00 03 05 04 39 04\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S3 Go Right\n    <code>\n     ff fb f3 41 ff 01 00 00 00 00 00 03 05 04 3a 04\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S3 Go Left\n    <code>\n     ff fb f3 41 ff 02 00 00 00 00 00 03 05 04 3b 04\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S3 Go Down\n    <code>\n     ff fb f3 41 ff 03 00 00 00 00 00 03 05 04 3c 04\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S3 Go Up\n    <code>\n     ff fb f3 41 ff 04 00 00 00 00 00 03 05 04 3d 04\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S2 Go Right\n    <code>\n     ff fb f3 41 ff 01 00 00 00 00 00 03 62 04 97 04\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S2 Go Left\n    <code>\n     ff fb f3 41 ff 02 00 00 00 00 00 03 62 04 98 04\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S2 Go Down\n    <code>\n     ff fb f3 41 ff 03 00 00 00 00 00 03 62 04 99 04\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S2 Go Up\n    <code>\n     ff fb f3 41 ff 04 00 00 00 00 00 03 62 04 9a 04\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S1 Go Right\n    <code>\n     ff fb f3 41 ff 01 90 01 c2 01 00 03 ac 04 35 06\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S1 Go Left\n    <code>\n     ff fb f3 41 ff 02 90 01 c2 01 00 03 ac 04 36 06\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S1 Go Down\n    <code>\n     ff fb f3 41 ff 03 90 01 c2 01 00 03 ac 04 37 06\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    S1 Go Up\n    <code>\n     ff fb f3 41 ff 04 90 01 c2 01 00 03 ac 04 38 06\n    </code>\n   </p>\n  </li>\n </ul>\n <p>\n  S3 Go to\n </p>\n <ul>\n  <li>\n   400 , 450 :\n   <code>\n    ff fb f3 41 ff 05 90 01 c2 01 00 03 05 04 92 05\n   </code>\n  </li>\n  <li>\n   401 , 450 :\n   <code>\n    ff fb f3 41 ff 05 91 01 c2 01 00 03 05 04 93 05\n   </code>\n  </li>\n  <li>\n   402 , 450 :\n   <code>\n    ff fb f3 41 ff 05 92 01 c2 01 00 03 05 04 94 05\n   </code>\n  </li>\n  <li>\n   403 , 450 :\n   <code>\n    ff fb f3 41 ff 05 93 01 c2 01 00 03 05 04 95 05\n   </code>\n  </li>\n  <li>\n   404 , 450 :\n   <code>\n    ff fb f3 41 ff 05 94 01 c2 01 00 03 05 04 96 05\n   </code>\n  </li>\n  <li>\n   405 , 450 :\n   <code>\n    ff fb f3 41 ff 05 95 01 c2 01 00 03 05 04 97 05\n   </code>\n  </li>\n  <li>\n   406 , 450 :\n   <code>\n    ff fb f3 41 ff 05 96 01 c2 01 00 03 05 04 98 05\n   </code>\n  </li>\n  <li>\n   407 , 450 :\n   <code>\n    ff fb f3 41 ff 05 97 01 c2 01 00 03 05 04 99 05\n   </code>\n  </li>\n  <li>\n   408 , 450 :\n   <code>\n    ff fb f3 41 ff 05 98 01 c2 01 00 03 05 04 9a 05\n   </code>\n  </li>\n  <li>\n   409 , 450 :\n   <code>\n    ff fb f3 41 ff 05 99 01 c2 01 00 03 05 04 9b 05\n   </code>\n  </li>\n  <li>\n   410 , 450 :\n   <code>\n    ff fb f3 41 ff 05 9a 01 c2 01 00 03 05 04 9c 05\n   </code>\n  </li>\n </ul>\n <hr/>\n <p>\n  From my observations the Structure I have the following identified:\n </p>\n <p>\n  <code>\n   ff    fb    f3    41 ff 05 9a 01 c2 01 00 03 05     04     9c     05\n  </code>\n </p>\n <p>\n  byte1 byte2 byte3 --------------------------------- byte13 byte14 byte15 byte16\n </p>\n <ul>\n  <li>\n   <p>\n    bytes 13 and 14 are to identify the specific device which is in a multi-drop network for whom the command is for. It is the last 5 numbers of the serial number represented in Hexadecimal.\n   </p>\n   <ul>\n    <li>\n     0405 -> 01029 <- S3: F306093001029\n    </li>\n    <li>\n     0462 -> 01122 <- S2: F306103101122\n    </li>\n    <li>\n     04ac -> 01196 <- S1: F376150801196\n    </li>\n   </ul>\n  </li>\n  <li>\n   <p>\n    bytes 15 and 16 are the calculated ones, which I am trying to figure out how they get calculated.\n   </p>\n  </li>\n </ul>\n <hr/>\n <p>\n  I have been manually attempting to calculate and compare several 16 bit CRCs and also tried running several frames through\n  <a href=\"https://reveng.sourceforge.io/\" rel=\"nofollow noreferrer\">\n   Reveng\n  </a>\n  with out much luck, no models ever get found.\n </p>\n <hr/>\n <p>\n  Any help and insights would be greatly apreciated.\n </p>\n <p>\n  Thanks!\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "242",
    "tags": [
        "serial-communication",
        "crc",
        "checksum"
    ],
    "user": "Pau Coma Ramirez",
    "time": "May 12, 2023 at 0:11",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  So, after reviewing\n  <a href=\"https://reverseengineering.stackexchange.com/q/20748/2490\">\n   This following Stack Overflow Question\n  </a>\n </p>\n <p>\n  I opened up an excel and made some tests and effectively\n </p>\n <p>\n  Sum of all bytes is the calculation\n </p>\n <ul>\n  <li>\n   Hex\n   <code>\n    ff  00  00  04  00  00  00  00  00  13  00  02  00  00  18  01\n   </code>\n  </li>\n  <li>\n   Dec\n   <code>\n    255 0   0   4   0   0   0   0   0   19  0   2   0   0\n   </code>\n   <ul>\n    <li>\n     Sum of all in Decimal =\n     <strong>\n      280\n     </strong>\n     --> Respresented in Hex\n     <code>\n      0118\n     </code>\n    </li>\n   </ul>\n  </li>\n </ul>\n <p>\n  Sometimes we search for too complicated answers to simple things.\n </p>\n <p>\n  Thanks anyway for having a look.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Pau Coma Ramirez",
            "time": "May 12, 2023 at 0:19",
            "is_accepted": false,
            "comments": []
        }
    ]
}