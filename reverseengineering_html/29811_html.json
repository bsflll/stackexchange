{
    "title": "Patching Jar File (2022)",
    "link": "https://reverseengineering.stackexchange.com/questions/29811/patching-jar-file-2022",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Currently reversing a .jar program recreationally, and I understand the workflow proposed here:\n </p>\n <p>\n  <a href=\"https://www.netspi.com/blog/technical/thick-application-penetration-testing/patching-java-executables-the-easy-way/\" rel=\"nofollow noreferrer\">\n   https://www.netspi.com/blog/technical/thick-application-penetration-testing/patching-java-executables-the-easy-way/\n  </a>\n </p>\n <p>\n  But whenever I go to repackage the folder containing the .class files into my .jar a couple of things go wrong. Firstly the file is a different size than the original, and the .jar will not run at all and instead throws a manifest error.\n </p>\n <p>\n  \"\"\" no main manifest attribute, in xxx.jar \"\"\"\n </p>\n <p>\n  The only change I am making at this time is to a string changing it from \"Welcome!\" to \"LOL!xox!\".\n </p>\n <p>\n  I repackage the .jar with the following command:\njar -cvf xxx-2.jar -C xxx-1/ .\n </p>\n <p>\n  If I extract the new .jar again and diff the two directories I get changes in directories that I didn't touch\n </p>\n <ul>\n  <li>\n   <p>\n    └──╼ $diff -q xxx-1/ xxx-2/\n   </p>\n   <p>\n    Common subdirectories: xxx-1/META-INF and xxx-2/META-INF\n   </p>\n   <p>\n    Common subdirectories: xxx-1/net and xxx-2/net\n   </p>\n   <p>\n    Common subdirectories: xxx-1/org and xxx-2/org\n   </p>\n  </li>\n </ul>\n <p>\n  It's worth noting that after executing\njar -cvf xxx-2.jar -C xxx-1/ .\n </p>\n <p>\n  I see a significant amount of deflation (30-60%) during execution. I suspect this is some sort of Java version issue, currently running:\n </p>\n <ul>\n  <li>\n   <p>\n    └──╼ $java -version\n   </p>\n   <p>\n    openjdk version \"13.0.5.1\" 2020-11-06\n   </p>\n   <p>\n    OpenJDK Runtime Environment (build 13.0.5.1+1-Debian-1)\n   </p>\n   <p>\n    OpenJDK 64-Bit Server VM (build 13.0.5.1+1-Debian-1, mixed mode)\n   </p>\n  </li>\n </ul>\n <p>\n  And the Manifest contains the following version information:\n </p>\n <ul>\n  <li>\n   Manifest-Version: 1.0\n  </li>\n  <li>\n   Ant-Version: Apache Ant 1.10.10\n  </li>\n  <li>\n   Created-By: 16.0.1+0 (Homebrew)\n  </li>\n  <li>\n   Main-Class: net.xxx-1.Main\n  </li>\n  <li>\n   Build-Date: 2021-08-02\n  </li>\n  <li>\n   Build-Revision: 8736\n  </li>\n </ul>\n <p>\n  Original header:\n  <a href=\"https://i.sstatic.net/HP0fE.jpg\" rel=\"nofollow noreferrer\">\n   https://i.sstatic.net/HP0fE.jpg\n  </a>\n </p>\n <p>\n  \"patched\" header\n  <a href=\"https://i.sstatic.net/qk5Rz.jpg\" rel=\"nofollow noreferrer\">\n   https://i.sstatic.net/qk5Rz.jpg\n  </a>\n </p>\n <p>\n  Original footer:\n  <a href=\"https://i.sstatic.net/rwojo.jpg\" rel=\"nofollow noreferrer\">\n   https://i.sstatic.net/rwojo.jpg\n  </a>\n </p>\n <p>\n  \"patched\" footer:\n  <a href=\"https://i.sstatic.net/zb5Ys.jpg\" rel=\"nofollow noreferrer\">\n   https://i.sstatic.net/zb5Ys.jpg\n  </a>\n </p>\n <p>\n  <strong>\n   How do I generate a .jar file where the only change is the string I want to change?\n  </strong>\n </p>\n <p>\n  Edit:\nAdded header and foot screenshots\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 0,
    "views": "573",
    "tags": [
        "java",
        "patching",
        "jar"
    ],
    "user": "triboulet",
    "time": "Jan 2, 2022 at 17:22",
    "comments": [
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n ZIP/JAR files have different compression levels up to uncompressed for each entry. Therefore the different file size can just mean you have chosen a different compression level when recreating the JAR file. Also relevant: What is the OS you use for patching the JAR file? Windows is case insensitive so files that only differ in case are lost/overwritten when unpacking.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n Depending on how the JAR originally was created there may be data hidden in it that is lost when unpacking it: 1. every ZIP file has a comment 2. Between the last zip file entry and the zip central directory at the end of the file an unlimited bytes can be inserted.\n <a href=\"https://en.wikipedia.org/wiki/ZIP_(file_format)#/media/File:ZIP-64_Internal_Layout.svg\" rel=\"nofollow noreferrer\">\n  en.wikipedia.org/wiki/ZIP_(file_format)#/media/…\n </a>\n Google uses this section for placing cryptographic signatures in APK files (again ZIP files).\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n You should better edit your question and include all the new pictures and info there. I just remembered another ZIP trick: You can have multiple ZIP entries of the same name, or some entries are present as file-entries but not in the central directory (depending on if you enumerate the file entries or use the central directory you would get a different result). ZIP allows quite a few manipulations...\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n If you can't uncompress and recompress the content the only way is to manipulate the file data directly in the ZIP file (assuming the file is stored without compression), or extract the file, modify it, zip it and then use an hex editor to copy the compressed file entry (including header) over the original one (requires that the old entry has the same length as the new one).\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Col-E",
            "text": "<html><body><span class=\"comment-copy\">\n Are you explicitly using the bytecode editor listed in the article? There are newer ones that do not require you to unpack and repack the jar, as they'll do it for you.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}