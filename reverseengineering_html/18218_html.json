{
    "title": "Searching instructions in OllyDbg",
    "link": "https://reverseengineering.stackexchange.com/questions/18218/searching-instructions-in-ollydbg",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a question about using OllyDbg. Is it possible to search for a part of the code through some command? For example I would like to find this value [ESI + 80] in my exe. It's possible?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ollydbg"
    ],
    "user": "Pasquale",
    "time": "May 9, 2018 at 15:00",
    "comments": [
        {
            "user": "zerocool",
            "text": "<html><body><span class=\"comment-copy\">\n it's exist in ollydbg you can search for 1 cmd or multiple cmd\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Pasquale",
            "text": "<html><body><span class=\"comment-copy\">\n would you explain to me how it's done?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  are you looking for finding all of these in one go ? that is not possible ollydbg search is not text grep  copy paste the disassembly to text and use grep\n </p>\n <pre><code>CPU Disasm\nAddress   Hex dump                             Command         \n00743F61      00                               DB      00\n00743F62      00                               DB      00\n00743F63      3E:C785 80000000 03000000        MOV     DWORD PTR DS:[EBP+80], 3\n00743F6E      3E:66:C785 80000000 0300         MOV     WORD PTR DS:[EBP+80], 3\n00743F78      3E:C685 80000000 03              MOV     BYTE PTR DS:[EBP+80], 3\n00743F80      3E:FFB5 80000000                 PUSH    DWORD PTR DS:[EBP+80]\n00743F87      FFB0 80000000                    PUSH    DWORD PTR DS:[EAX+80]\n00743F8D      36:8180 80000000 FF000000        ADD     DWORD PTR SS:[EAX+80], 0FF\n00743F98      0000                             ADD     BYTE PTR DS:[EAX], AL\n00743F9A      0000                             ADD     BYTE PTR DS:[EAX], AL\n</code></pre>\n <p>\n  but if you are looking for finding all one kind of instruction\n  \n\n  like let's say\n </p>\n <p>\n  push dword ptr anyseg:[ANY register +SOMECONST]  (the keyword being the mnemonic)   or\n </p>\n <p>\n  mov dword ptr ANYSEG:[ANYREGISTER + SOMECONST]  (again it is mov that drives the search not the operand\n </p>\n <p>\n  then it is possible   either\n  <strong>\n   ctrl+f  and type  PUSH [R32+CONST]\n  </strong>\n </p>\n <p>\n  or\n  <strong>\n   right click search for all commands and type push [r32+CONST]\n  </strong>\n </p>\n <p>\n  the search for PUSH [R32+CONST] yields ~4500 hits  whereas PUSH [eax+80] yields one hit\n </p>\n <pre><code>>wc -l search.txt\n4581 search.txt\n\n>grep -i +80 search.txt | wc -l\n19\n\n>grep -i EAX+80 search.txt | wc -l\n1\n\n>grep -i EAX+80 search.txt\n00743F87  PUSH    DWORD PTR DS:[EAX+80]\n\n>grep -i EbX+80 search.txt | wc -l\n0\n\n>grep -i ECX+80 search.txt | wc -l\n1\n\n>grep -i ECX+80 search.txt\n00728460  PUSH    DWORD PTR DS:[ECX+80]\n</code></pre>\n <p>\n  here is another example\n </p>\n <p>\n  searching for\n  <code>\n   mov [r32+CONST] , CONST\n  </code>\n </p>\n <pre><code>:\\>wc -l srch.txt\n925 srch.txt\n\n:\\>head -n 3 srch.txt\nSearch - Commands found in calc:.text\nAddress   Command                                  Comments\n006F16F1  MOV     DWORD PTR SS:[EBP-0CF0], 30\n\n:\\>tail -n 3 srch.txt\n00743F70  MOV     DWORD PTR SS:[EBP+80], C63E0003\n00743F78  MOV     BYTE PTR DS:[EBP+80], 3\n00743F79  MOV     BYTE PTR SS:[EBP+80], 3\n\n:\\>grep -i 80 srch.txt | wc -l\n54\n\n:\\>grep -i ebp+80 srch.txt | wc -l\n7\n\n:\\>grep -i ebp+80 srch.txt\n00743F63  MOV     DWORD PTR DS:[EBP+80], 3\n00743F64  MOV     DWORD PTR SS:[EBP+80], 3\n00743F6E  MOV     WORD PTR DS:[EBP+80], 3\n00743F6F  MOV     WORD PTR SS:[EBP+80], 3\n00743F70  MOV     DWORD PTR SS:[EBP+80], C63E0003\n00743F78  MOV     BYTE PTR DS:[EBP+80], 3\n00743F79  MOV     BYTE PTR SS:[EBP+80], 3\n</code></pre>\n</div>\n</body></html>",
            "votes": "2",
            "user": "blabb",
            "time": "May 9, 2018 at 11:30",
            "is_accepted": false,
            "comments": []
        }
    ]
}