{
    "title": "Create key generator algorithm from validation algo",
    "link": "https://reverseengineering.stackexchange.com/questions/6858/create-key-generator-algorithm-from-validation-algo",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I understand that this question will be rather vague, but I'm unsure how to process from here.\n </p>\n <p>\n  I'm trying to see how a key generator can be made.\n </p>\n <p>\n  I have been toying with IDA and managed to reconstruct an application key checking functions into C up to a point that I can check if a key is valid or not. This process uses a lot of bitwise operations such as shifting and masking which leaves me wondering how I can reverse that algo.\n </p>\n <p>\n  The validation steps are as follow :\n </p>\n <ol>\n  <li>\n   From the serial key, use a associative table that maps chars to other values\n  </li>\n  <li>\n   From those values, use a block hashing with bitshift|bitmasks so that\n   <code>\n    char[n]\n   </code>\n   depends on\n   <code>\n    char[n-1]\n   </code>\n   .\n  </li>\n  <li>\n   Generate a key from hard coded values.\n  </li>\n  <li>\n   Generate 2 tables with the result from 2. Table1 = Step2 encoded with Step3. Table2 is Table1 encoded with Step3\n  </li>\n  <li>\n   Encode Step2 with tables from Step4, depending on some bitmasking.\n  </li>\n </ol>\n <p>\n  So this whole thing is rather complicated. Furthermore there is constant loss of information so writing code with exact reverse order of operations is not possible (or I don't know how).\n </p>\n <p>\n  I put myself in the shoes of someone who wants to create this protection scheme. Generating serials from decoded output MUST be possible. Either this whole process is reversible, or there is a function that can act as a backdoor like thing to reverse it right away, which I strongly doubt.\n </p>\n <p>\n  Any idea on things that I should look for at this point?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "1k",
    "tags": [
        "disassembly"
    ],
    "user": "Eric",
    "time": "Mar 6, 2015 at 9:40",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "<html><body><span class=\"comment-copy\">\n If they used some kind of assymetric cryptography, then yes, there is a backdoor to reverse it, and no, you can't derive it from what you have, since you need the private key. Did you run signsrch over your binary to check if it's an implementation of a standard algorithm?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Eric",
            "text": "<html><body><span class=\"comment-copy\">\n signsrch is an interesting tool that I didn't know about. It does identify many ciphers signatures but none in the area of interest\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}