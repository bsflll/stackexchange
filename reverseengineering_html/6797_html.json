{
    "title": "parse PE section variables",
    "link": "https://reverseengineering.stackexchange.com/questions/6797/parse-pe-section-variables",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have extracted the .rdata section from a windows executable. I would like to parse the variables contained in the section into a easily understandable format, such as:\n </p>\n <pre><code>char s[] = \"hello world\"\nint i = 0\n</code></pre>\n <p>\n  There does not appear, however, to be data types associated with the variables, so simply encoding the variable data in hexadecimal might be more realistic.\n </p>\n <p>\n  Is the data stored in the .rdata section in an easily parsable format? If so, what would that be?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "459",
    "tags": [
        "pe"
    ],
    "user": null,
    "time": "Dec 10, 2014 at 0:33",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  No, the data is not easily parsable.\n </p>\n <p>\n  The best option is to use a disassembler (such as\n  <a href=\"https://www.hex-rays.com/products/ida/\" rel=\"nofollow noreferrer\">\n   IDA Pro\n  </a>\n  ) that can create cross-references from code to data in your\n  <code>\n   .rdata\n  </code>\n  section. This can help you better identify strings, bytes, words, and dwords in the\n  <code>\n   .rdata\n  </code>\n  section:\n </p>\n <p>\n  <img alt=\"https://samsclass.info/123/proj10/honeynet/honeynet-rev.html\" src=\"https://i.sstatic.net/IMWrO.png\"/>\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Jason Geffner",
            "time": "Dec 10, 2014 at 0:59",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user4446",
                    "text": "<span class=\"comment-copy\">What if the source code is not available? That is my situation.</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">My answer above already assumes that the source code is not available. The screenshot is that of an <code>.rdata</code> section with cross-references to disassembled code.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  After compiling to a release build with many compilers no debug or symbolic information about the function name or variable names is left in the native binaries, so the data section u have dumped only contains the variable values at different positions, manually its not easy to find variables, so use a debugger or disassembler which will ease the work for you, it will let you see different variables categorized and identified according to their alignment and size.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Alok Saini",
            "time": "Dec 12, 2014 at 11:07",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user4446",
                    "text": "<span class=\"comment-copy\">Thank you for your answer. Is there any debugger/disassembler that you would recommend?</span>",
                    "time": null
                },
                {
                    "user": "Alok Saini",
                    "text": "<span class=\"comment-copy\">Ida olly are the best</span>",
                    "time": null
                }
            ]
        }
    ]
}