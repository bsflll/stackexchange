{
    "title": "Where to start analyzing a 16 bit dos program?",
    "link": "https://reverseengineering.stackexchange.com/questions/27273/where-to-start-analyzing-a-16-bit-dos-program",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I've tried to analyze\n  <a href=\"https://filebin.net/0mopptcxw6yt9ppi\" rel=\"nofollow noreferrer\">\n   this small exe\n  </a>\n  online.\n </p>\n <p>\n  I've tried with\n  <a href=\"https://onlinedisassembler.com/odaweb/\" rel=\"nofollow noreferrer\">\n   https://onlinedisassembler.com/odaweb/\n  </a>\n  (\n  <a href=\"https://onlinedisassembler.com/odaweb/B274LZ2U/0\" rel=\"nofollow noreferrer\">\n   link\n  </a>\n  ) but it's hard for me to get the first question:\n  <a href=\"https://i.sstatic.net/kYXfn.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/kYXfn.png\"/>\n  </a>\n </p>\n <p>\n  Why the tool doesn't try to detect the set of instruction by itself? Dos program could run on architectures different from x86? The base address wasn't the same for every dos program?\n </p>\n <p>\n  I tried also with IDA Free, but it says there are tons of problems\n  <a href=\"https://i.sstatic.net/CvkHr.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/CvkHr.png\"/>\n  </a>\n </p>\n <p>\n  I also tried with radare2 but it's really hard for me..\n </p>\n <pre><code>I've found this info through virustotal:\nFile type   DOS EXE\nMagic   MS-DOS executable, MZ for MS-DOS\nTrID    EXEPACK compressed DOS Executable (68.2%)\nTrID    Clipper DOS Executable (10.5%)\nTrID    Generic Win/DOS Executable (10.5%)\nTrID    DOS Executable Generic (10.4%)\nTrID    VXD Driver (0.1%)\nFile size   63.16 KB (64680 bytes)\n</code></pre>\n <p>\n  EDIT: thanks to the advice I used radare + a graphical interface called Cutter. It seems to work properly but I can't understand how to export the whole pseudocode\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/FqvaQ.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"the pseudocode\" src=\"https://i.sstatic.net/FqvaQ.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "2k",
    "tags": [
        "ida",
        "dos",
        "dos-exe"
    ],
    "user": "Revious",
    "time": "Mar 26, 2021 at 11:06",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n “start” should be the entry point\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Michael Karcher",
            "text": "<html><body><span class=\"comment-copy\">\n EXE files are relocatable. They get adjusted during loading so that changes of the base address do not affect execution. A typical suggestion is to load DOS exe files at an address like 1000:0000, to prevent access to well-known memory areas of a DOS system being misidentified as access to memory areas belonging to the program. As the interrupt vectors and the bios state is near address 0, it is generally unwise to load EXE files with base address 0 into a reverse enigineering tool.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Michael Karcher",
            "text": "<html><body><span class=\"comment-copy\">\n Just ignore the IDA \"problems\" window for now. IDA just points out where the automatic analysis is unsure how to interpret some areas of code. As long as you have no problems reading the parts you are interested in, and you don't rely on Xrefs being complete, there is no harm in having lots of problem in highly optimized library code.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Michael Karcher",
            "text": "<html><body><span class=\"comment-copy\">\n @Revious you need a \"decompiler\" to get pseudocode. There are multiple decompilers available, most include their own disassembler. GHIDRA includes a decompiler for free. IDA has an optional decompiler for a lot of $$$ (called HexRays), and AFAIK radare2 also includes some decompiler. In my experience, the GHIDRA decompiler output on segmented 16-bit executables is mediodcre. I don't think I tried other decompilers on 16-bit executables seriously, yet.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Abdullah Mohamed",
            "text": "<html><body><span class=\"comment-copy\">\n Did you give the old \"debug\" command a try? It's an old Windows debugger that's mainly dedicated for older 16-bit COM/EXE executables.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}