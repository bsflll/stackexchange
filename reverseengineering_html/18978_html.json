{
    "title": "Trap Flag - Anti-debugging trick",
    "link": "https://reverseengineering.stackexchange.com/questions/18978/trap-flag-anti-debugging-trick",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to reverse a program which is employing some kind of anti-debugging trick based on the use of  SEHs and the TF. The code stars with:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/fzMTz.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/fzMTz.png\"/>\n  </a>\n </p>\n <p>\n  So apparently it's generating an exception with\n </p>\n <pre><code>XOR DWORD PTR [ESP], 154h\n</code></pre>\n <p>\n  Which ultimately terminates with a call to\n  <code>\n   ExitProcess()\n  </code>\n  without even running the program.\n </p>\n <p>\n  I tried using\n  <code>\n   NOP\n  </code>\n  s to bypass this but since upon execution the EP is already pointing to this problematic piece of code it did not work.\n </p>\n <p>\n  How can  I bypass this and what's really triggering the exception?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "windows",
        "x86",
        "anti-debugging"
    ],
    "user": "Slava",
    "time": "Aug 5, 2018 at 9:30",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It is setting a trap flag with that xor instruction\n </p>\n <p>\n  when it is run normally (not under debugger)\n </p>\n <p>\n  the trap flag is triggered so the handler gets a chance to execute\n </p>\n <p>\n  when the binary is run under debugger the trap flag is ignored \nand the handler doesn't get a chance to execute\n </p>\n <p>\n  hard patch to point to the handler directly or simply change the eip in debugger  for analyzing\n </p>\n <p>\n  your screenshot looks like you are using ollydbg\n </p>\n <p>\n  if so just press shift + f9 after setting a breakpoint at 0x401060  @ the seh handler  that would pass the exception to the program and would bypass the trick\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "blabb",
            "time": "Aug 5, 2018 at 19:36",
            "is_accepted": true,
            "comments": [
                {
                    "user": "mrexodia",
                    "text": "<span class=\"comment-copy\">Most likely this is ollydbg specific behavior.</span>",
                    "time": null
                }
            ]
        }
    ]
}