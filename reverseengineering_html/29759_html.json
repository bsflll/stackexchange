{
    "title": "How to get function signature using IDA Python in IDA Pro",
    "link": "https://reverseengineering.stackexchange.com/questions/29759/how-to-get-function-signature-using-ida-python-in-ida-pro",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I open .exe file in IDA with .pdb attached to it, so IDA scans .pdb and shows function names.\n </p>\n <p>\n  I need to get signature strings of\n  <strong>\n   many\n  </strong>\n  functions. I\n  <strong>\n   can't\n  </strong>\n  do it\n  <strong>\n   manually\n  </strong>\n  so I want to use built-it IDA Python console\n </p>\n <p>\n  For example: function on address\n  <code>\n   00007FF68E528660\n  </code>\n  has signature\n  <code>\n   int __fastcall lua_error(lua_State *L)\n  </code>\n </p>\n <p>\n  I got my function address (ea)\n </p>\n <pre><code>def GetFunctionByName(name):\n    ea = BeginEA()\n    for funcAddr in Functions(SegStart(ea), SegEnd(ea)):\n        funcName = GetFunctionName(funcAddr)\n        if funcName == name:\n            return funcAddr\n    return None\nprint function_i_need(GetFunctionByName(\"lua_error\"))\n\n#should print \"int __fastcall lua_error(lua_State *L)\" or something familiar\n</code></pre>\n <p>\n  I don't know how to implement\n  <code>\n   function_i_need\n  </code>\n </p>\n <p>\n  How do I get that signature string using python code?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ida",
        "idapython",
        "python",
        "ida-plugin"
    ],
    "user": "Forprix",
    "time": "Dec 22, 2021 at 1:57",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  if you can use idc or adapt idc to python you can do some thing like this\n </p>\n <pre><code>#include <idc.idc>\nstatic main() \n{\n    auto funfirst,funnext,i = 0;\n    funfirst = get_next_func( MinEA() );\n    while (funnext != BADADDR) \n    {\n        Message(\"fun[%04d] %x %s\n\" ,i++ , funfirst, get_name(funfirst,GN_DEMANGLED));\n        funnext = get_next_func(funfirst); \n        funfirst = funnext;\n    }\n}\n</code></pre>\n <p>\n  should yield names as follows\n </p>\n <pre><code>fun[0000] 180001008 private: static long AppContainerRegistration::CreateAppContainerKeySecurityDescriptor(struct _GUID const *,void *,void *,void *,unsigned long,unsigned long *,void * *,unsigned short *)\nfun[0001] 1800014e0 UrlHashW\nfun[0002] 180001590 UrlHashA\nfun[0003] 1800015e8 void _HashData(unsigned char const *,unsigned long,unsigned char *,unsigned long)\nfun[0004] 180001660 SystemTimeToTzSpecificLocalTimeEx\nfun[0005] 18000190c AddTimeZoneRules\nfun[0006] 180001ad4 AddTimeZoneRule\nfun[0007] 180001b28 RtlpGetLastBias\nfun[0008] 180001b60 StrRChrIW\nfun[0009] 180001bcc public: long StateSpace::CreateSystemAppDataRoamingSubkey(struct HKEY__ * *)\n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "blabb",
            "time": "Dec 22, 2021 at 17:42",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Forprix",
                    "text": "<span class=\"comment-copy\">Not working. <code>get_name(0x00007FF758D185B0, GN_DEMANGLED)</code> outputs <code>lua_createtable</code>. It's not signature. It's just a name of a function</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">if it shows up in ida functions window it should print here if ida has just name then it will print name as my output shows both types. urlhashw is just name without type info</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@Forprix if the function prototype is known to IDA it will be printed here. If not (e.g. lack of symbolic information, no or improper signatures loaded), then it will merely use whatever the suitable name (likely from a symbol table such as the export table of a DLL).</span>",
                    "time": null
                }
            ]
        }
    ]
}