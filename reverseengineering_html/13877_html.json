{
    "title": "Linked list in IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/13877/linked-list-in-ida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I debug a program with IDA, it have a part of code that i don't understand\n </p>\n <pre><code>loc_8048E30:                            ; CODE XREF: phase_6+9Ej\n.text:08048E30 mov     esi, [esi+8]\n.text:08048E33 inc     ebx\n.text:08048E34 cmp     ebx, eax\n.text:08048E36 jl      short loc_8048E30   \n</code></pre>\n <p>\n  line 1:\n  <code>\n   mov esi, [esi+8]\n  </code>\n  when I debug address of esi is\n  <code>\n   0x804B260\n  </code>\n  so\n  <code>\n   esi+8\n  </code>\n  is\n  <code>\n   0x804B268\n  </code>\n  .\n </p>\n <p>\n  The value in\n  <code>\n   [esi+8]\n  </code>\n  is\n  <code>\n   60h\n  </code>\n  so after\n  <code>\n   mov esi, [esi+8]\n  </code>\n  , the value in\n  <code>\n   esi\n  </code>\n  is\n  <code>\n   60h\n  </code>\n  but it really is\n  <code>\n   0x804B260\n  </code>\n  . Why it is\n  <code>\n   0x804B260\n  </code>\n  ?\n </p>\n <p>\n  And when esi is named .data:node2, it is linked link?\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/wjNoC.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/wjNoC.png\"/>\n  </a>\n  <a href=\"https://i.sstatic.net/e9u92.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/e9u92.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "453",
    "tags": [
        "ida",
        "x86"
    ],
    "user": "QChí Nguyễn",
    "time": "Nov 11, 2016 at 17:15",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The instruction\n  <code>\n   mov esi, [esi + 8]\n  </code>\n  copies\n  <strong>\n   4 bytes\n  </strong>\n  (DWORD) of data at the location pointed to by\n  <code>\n   esi + 8\n  </code>\n  to register\n  <code>\n   esi\n  </code>\n  .\n </p>\n <p>\n  In your case\n  <code>\n   esi\n  </code>\n  is\n  <code>\n   0804B260\n  </code>\n  so it copies\n  <strong>\n   4 bytes\n  </strong>\n  from\n  <code>\n   0804B268\n  </code>\n  . Since x86_64 is little endian the least significant byte as per the screenshot 1 is 0x60. The remaining three bytes are located below (not in the picture).\n </p>\n <p>\n  It is named\n  <code>\n   node2\n  </code>\n  as it is an exported symbol.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "0xec",
            "time": "Nov 7, 2016 at 8:38",
            "is_accepted": true,
            "comments": []
        }
    ]
}