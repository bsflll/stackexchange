{
    "title": "Calculator shows incorrect result for 32-bit subtraction?",
    "link": "https://reverseengineering.stackexchange.com/questions/30727/calculator-shows-incorrect-result-for-32-bit-subtraction",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I was trying to\n  <a href=\"https://forum.arduino.cc/t/dont-use-millis-or-micros-or-delay-or-even-delaymicroseconds-in-your-project\" rel=\"nofollow noreferrer\">\n   argue\n  </a>\n  about the operation of a routine called micros() and millis() that is used on the Arduino platform, and I ended up finding this\n  <a href=\"https://calc.penjee.com/\" rel=\"nofollow noreferrer\">\n   calculator\n  </a>\n  . The calculator shows a different result than 8-bit (ATmega328 - Arduino Nano) and 32-bit (ESP32) processors. They even cited the result of the Windows calculator, which shows the same result as the aforementioned microcontrollers.\n </p>\n <blockquote>\n  <p>\n   Nano/ESP32: 0x1 - 0xFFFFFF00 = 0x101\n  </p>\n </blockquote>\n <blockquote>\n  <p>\n   Calculator: 0x1 - 0xFFFFFF00 = 0xFFFFFEFF\n  </p>\n </blockquote>\n <p>\n  I found an\n  <a href=\"https://reverseengineering.stackexchange.com/questions/22145/how-is-subtraction-performed-on-unsigned-numbers-within-the-cpu\">\n   explanation\n  </a>\n  for calculating subtraction for 8-bit numbers,\n </p>\n <p>\n  <strong>\n   Does anyone know of an answer made with 32-bit numbers?\n  </strong>\n  .\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "50",
    "tags": [
        "arduino",
        "math"
    ],
    "user": "R R",
    "time": "Aug 2, 2022 at 15:26",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n Is\n <code>\n  0xFFFFFF00\n </code>\n supposed to be\n <code>\n  4294967040\n </code>\n or -256?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "R R",
            "text": "<html><body><span class=\"comment-copy\">\n @IgorSkochinsky, Hi, this is my doubt. Apparently, a microcontroller accepts one thing, but a calculator accepts something else. They commented that in Linux the result is the same as in the microcontroller, so I ended up not being able to argue anymore.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "the busybee",
            "text": "<html><body><span class=\"comment-copy\">\n I doubt the result of the calculator. Are you sure that there is no negative sign missing?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "the busybee",
            "text": "<html><body><span class=\"comment-copy\">\n It is important to know what width the different systems use. You cannot say \"Linux does this.\" It all depends on singed/unsigned and the width.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "the busybee",
            "text": "<html><body><span class=\"comment-copy\">\n Anyway, I'm sure you can use differences of the values coming from\n <code>\n  millis()\n </code>\n or\n <code>\n  micros()\n </code>\n in Arduino, even in very long running applications. That is, as long as the intervals are shorter than the\n <code>\n  unsigned long\n </code>\n can hold.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}