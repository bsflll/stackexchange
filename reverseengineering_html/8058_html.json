{
    "title": "GUI represention in assembly level and another question",
    "link": "https://reverseengineering.stackexchange.com/questions/8058/gui-represention-in-assembly-level-and-another-question",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In advance, I'd say I'm learning reverse engineering newly.\nIndeed, there are some questions to be asked.\n </p>\n <p>\n  First of all I would ask : In assembly level of the applications which use GUI ,how things like forms,buttons,etc are represented ? For example, when we can find out a button is clicked and things like that ? In all languages which support GUI they use same API for buttons or forms or ... ?\n </p>\n <p>\n  And there's an another question in the other side of reversing(from Export tables addresses):\nConsider the example of a program which has two export address (for example start and a debug checker) which they're declared as public in the disassembled approach, so how we can figure out which one would be executed at first ?\n </p>\n <p>\n  Thanks all.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "159",
    "tags": [
        "ida",
        "disassembly",
        "debugging",
        "winapi"
    ],
    "user": "user3679015",
    "time": "Jan 19, 2015 at 19:57",
    "comments": [
        {
            "user": "Mick",
            "text": "<html><body><span class=\"comment-copy\">\n These are 2 distinct questions. Please only ask 1 question per post.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  welcome to the Reverse Engineering SE!\n </p>\n <p>\n  Unfortunately, your question isn't written very well. You shouldn't try to put two different questions into one, because that makes it more difficult to give a good answer.\n </p>\n <p>\n  Also, both parts of your question should probably go better to stackoverflow, as both of them are more about software development than about reverse engineering.\n </p>\n <p>\n  As a rule of thumb, you can't reverse anything that you can't build.\n </p>\n <p>\n  You should get acquainted with various GUI frameworks - plain Windows,\n  <code>\n   MFC\n  </code>\n  ,\n  <code>\n   .net\n  </code>\n  ,\n  <code>\n   delphi\n  </code>\n  .\n  <code>\n   java swing\n  </code>\n  ,\n  <code>\n   gtk\n  </code>\n  ,\n  <code>\n   qt\n  </code>\n  ,\n  <code>\n   wxwidgets\n  </code>\n  ) to find out how they work, which differences there are, and which things they have in common. Then, you'll probably be able to identify which framework a program you're trying to reverse uses, and you'll be able to identify the patterns how they are used. But unless you've written a few programs in at least some of them, you wouldn't even understand other programs if you had their source code, much less if you have the binaries. So get some experience there first.\n </p>\n <p>\n  Also, import and export addresses aren't about where the program starts; they're about putting .dll libraries and the program together before it's being executed. You should learn about dynamic linking and creating DLLs before trying to reverse them. The program entry point is defined in the headers of the program, and it doesn't have anything to do with exports and imports.\n </p>\n</div>\n</body></html>",
            "votes": "6",
            "user": "Guntram Blohm",
            "time": "Jan 19, 2015 at 20:16",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user3679015",
                    "text": "<span class=\"comment-copy\">Thanks for youre well-explained answer.As you said I should lean more and get experience :)</span>",
                    "time": null
                }
            ]
        }
    ]
}