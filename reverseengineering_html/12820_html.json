{
    "title": "Unpacking ASpack Malware",
    "link": "https://reverseengineering.stackexchange.com/questions/12820/unpacking-aspack-malware",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to unpack a binary packed with\n  <code>\n   aspack\n  </code>\n  I loadded it into ollydbg 1.0 with ollydump tool. I setup hardware breakpoint at\n  <code>\n   ECX\n  </code>\n  and then I step over it and it is stopping at this statement:\n  <pre>MOV DWORD PTR DS:[EDI],EBX</pre>\n  I bypassed it by\n  <kbd>\n   shift\n  </kbd>\n  +\n  <kbd>\n   F8\n  </kbd>\n  but it keeps giving access violation error multiple times. How can I proceed further in UnPacking Binary. Binary is working fine when executed without debugger.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "3k",
    "tags": [
        "ollydbg",
        "unpacking"
    ],
    "user": "Umer",
    "time": "Jun 7, 2016 at 13:08",
    "comments": [
        {
            "user": "Sigtran",
            "text": "<html><body><span class=\"comment-copy\">\n maybe upload the binary somewhere? also try just run(F9) option and see if it runs in the debugger...\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Umer",
            "text": "<html><body><span class=\"comment-copy\">\n It is also crashing with\n <code>\n  F9\n </code>\n option.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "fpmurphy",
            "text": "<html><body><span class=\"comment-copy\">\n Load the AnalyzeThis plugin also.  Are you saying that you reached the OEP and dumped the program from memory using OllyDump plugin?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Use the\n  <code>\n   ASPack 2.xx.txt\n  </code>\n  script from the\n  <a href=\"https://github.com/x64dbg/Scripts\" rel=\"nofollow noreferrer\">\n   Collection of x64dbg scripts\n  </a>\n  .\n </p>\n <p>\n  Alternatively, I copied the content of this script file here:\n </p>\n <pre><code>//////////////////////////////////////////////////\n//  FileName    :  ASPack 2.xx.txt\n//  Comment     :  OEP Find For ASPack 2.xx\n//  Author      :  _pusher_\n//  Date        :  2015-07-08\n//////////////////////////////////////////////////\n\n//start\nmsg \"ASPack 2.xx OEP Finder\"\nmsg \"make sure you're at the entry point of the program before you continue\"\npause\n\n//clear breakpoints\nbc\nbphwc\n\n//find oep jump\nfind cip,\"617508B801000000C20C0068\" //some pattern\nlog \"found: {0}\", $result\ncmp $result,0\nje error\n\n//go there\nbp $result\nerun\nbc\n\n$dw = 4:[cip+c]\nlog \"OEP: {0}\", $dw\n\n//Go to OEP\nbp $dw\nerun\n//clear breakpoints\nbc\n\ncmt cip,\"OEP\"\nTimeToDump:\nmsgyn \"Successfully found OEP! Wanna use Scylla to dump the target?\"\ncmp 0,$result\nje finishScript\nscylla\n\nfinishScript:\n//finish script\nret\n\nerror:\nmsg \"didn't find oep jump\"\nret \n</code></pre>\n <p>\n  so\n </p>\n <ul>\n  <li>\n   you may copy/paste/save it in your favorite editor for loading it later, or\n  </li>\n  <li>\n   copy/paste it directly to the\n   <kbd>\n    Script\n   </kbd>\n   tab of the\n   <a href=\"https://x64dbg.com/\" rel=\"nofollow noreferrer\">\n    x64dbg\n   </a>\n   .\n  </li>\n </ul>\n <h3>\n  Instructions in detail:\n </h3>\n <p>\n  Supposing you have\n </p>\n <ul>\n  <li>\n   a freshly loaded / reloaded ASPacked debugee, and\n  </li>\n  <li>\n   the freshly loaded / pasted / reloaded the above script (you may see it in the\n   <kbd>\n    Script\n   </kbd>\n   tab).\n  </li>\n </ul>\n <p>\n  Then\n </p>\n <ol>\n  <li>\n   Press\n   <kbd>\n    F9\n   </kbd>\n   key - only once! - to run debugee up to its entry point.\n  </li>\n  <li>\n   In the\n   <kbd>\n    CPU\n   </kbd>\n   tab check if you see the \"EntryPoint\" comment of the current instruction.\n  </li>\n  <li>\n   Switch to the\n   <kbd>\n    Script\n   </kbd>\n   tab.\n  </li>\n  <li>\n   Press\n   <kbd>\n    space bar\n   </kbd>\n   to run the script. The first message box appears.\n  </li>\n  <li>\n   Click OK. The second message box appears.\n  </li>\n  <li>\n   Click OK. The script is now paused. Press\n   <kbd>\n    space bar\n   </kbd>\n   to continue it.\n  </li>\n  <li>\n   The message box with the message \"Successfully found OEP! Wanna use Scylla to dump the target?\" appears.\n  </li>\n  <li>\n   Press \"No\" for now. (Later you may repeat this procedure and press \"Yes\".)\n  </li>\n  <li>\n   The message box \"Script finished!\" Appears. Click OK.\n  </li>\n </ol>\n <p>\n  The script performed the unpacking code of your ASPacked debugee and stopped at the first instruction (OEP in the comment means \"Original Entry Point\") already in-memory unpacked code.\n </p>\n <p>\n  Now you may analyze your already unpacked debugee.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "MarianD",
            "time": "Jun 15, 2021 at 17:26",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Try to use newer version of ollydbg or\n  <a href=\"http://x64dbg.com/\" rel=\"nofollow noreferrer\">\n   x64dbg\n  </a>\n  (a modern and open-source ollydbg-like) with anti-debug tricks plugins like a\n  <a href=\"https://github.com/mrexodia/TitanHide\" rel=\"nofollow noreferrer\">\n   TitanHide\n  </a>\n  or\n  <a href=\"https://bitbucket.org/NtQuery/scyllahide\" rel=\"nofollow noreferrer\">\n   ScyllaHide\n  </a>\n  to avoid detection by the packer.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "MarianD",
            "time": "Jun 20, 2021 at 10:40",
            "is_accepted": false,
            "comments": []
        }
    ]
}