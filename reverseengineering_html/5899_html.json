{
    "title": "Forwarded call to \"operator new()\" in IDA Pro",
    "link": "https://reverseengineering.stackexchange.com/questions/5899/forwarded-call-to-operator-new-in-ida-pro",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm using\n  <code>\n   IDA Pro\n  </code>\n  with the Hexrays decompiler.\n </p>\n <p>\n  There is a function like this:\n </p>\n <p>\n  <img alt=\"Function 1\" src=\"https://i.sstatic.net/4QJT6.png\"/>\n </p>\n <p>\n  That function assigns the result of\n  <code>\n   sub_100033AE\n  </code>\n  to\n  <code>\n   dword_10005368\n  </code>\n  . So to know what the\n  <code>\n   DWORD\n  </code>\n  is, I checked what does that\n  <code>\n   sub_100033AE\n  </code>\n  do, but surprise...\n </p>\n <p>\n  <img alt=\"Function 2\" src=\"https://i.sstatic.net/JfU1J.png\"/>\n </p>\n <p>\n  Its assembly is:\n </p>\n <p>\n  <img alt=\"enter image description here\" src=\"https://i.sstatic.net/qn1RQ.png\"/>\n </p>\n <p>\n  What I am wondering is: how is it just returning a call to\n  <code>\n   new()\n  </code>\n  ? What is its purpose? What does it return?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ida"
    ],
    "user": "rev",
    "time": "Jul 21, 2014 at 21:39",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Maybe the decompiler failed to recognize a register argument to\n  <code>\n   new()\n  </code>\n  .\n  <code>\n   new(n)\n  </code>\n  usually takes a\n  <code>\n   nr\n  </code>\n  of bytes, and allocates memory.\n </p>\n <p>\n  <code>\n   sub_100033ae\n  </code>\n  just forwards the call to new.\n </p>\n</div>\n</body></html>",
            "votes": "6",
            "user": "perror",
            "time": "Jul 21, 2014 at 21:47",
            "is_accepted": true,
            "comments": [
                {
                    "user": "rev",
                    "text": "<span class=\"comment-copy\">So it's basically something like <code>malloc</code>?</span>",
                    "time": null
                },
                {
                    "user": "Peter Andersson",
                    "text": "<span class=\"comment-copy\">@AcidShout It's basically the C++ version of malloc in that it gives you a pointer to at least x bytes of consecutive  memory. There are some differences though, operator new can throw exceptions and cause new handlers to be called. There could also be a difference between what sort of meta data is stored about the allocated memory between malloc and new. They're different functions so it's best to treat them as such. After allocation you usually have object construction into the allocated memory.</span>",
                    "time": null
                },
                {
                    "user": "rev",
                    "text": "<span class=\"comment-copy\">@PeterAndersson thanks, really good explanation. This can be considered solved!</span>",
                    "time": null
                }
            ]
        }
    ]
}