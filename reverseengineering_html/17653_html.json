{
    "title": "How do I resolve addresses relative to a register in IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/17653/how-do-i-resolve-addresses-relative-to-a-register-in-ida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am reversing an x86 ELF shared object library. Perhaps because of position independence, all functions begin with loading a constant offset into a register:\n </p>\n <pre><code>[... function prologue ...]\ncall    $+5\npop     eax             ; eax = eip = 0x4E2B\nadd     eax, 1009Dh     ; eax = 0x14EC8 = start of .got.plt section\nmov     byte ptr [eax+194h], 0ACh\nmov     dword ptr [eax+190h], 968CC5DEh\n[...]\n</code></pre>\n <p>\n  The first two instructions set\n  <code>\n   eax\n  </code>\n  to the current instruction's address. Then a constant offset is added, this offset is probably calculated during linking. \nFrom there on, all addresses are referenced relative\n  <code>\n   eax\n  </code>\n  (in this case, they point into the\n  <code>\n   .bss\n  </code>\n  segment).\n </p>\n <p>\n  I can manually calculate all addresses since the value of\n  <code>\n   eax\n  </code>\n  is fixed. Is there an automated way to resolve these fixed-register-offsets in IDA, such that IDA can properly resolve X-refs, etc?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "498",
    "tags": [
        "ida",
        "pie"
    ],
    "user": "jojonas",
    "time": "Mar 11, 2018 at 0:24",
    "comments": [
        {
            "user": "w s",
            "text": "<html><body><span class=\"comment-copy\">\n AFAIR One of my colleagues used manticore (\n <a href=\"https://github.com/trailofbits/manticore\" rel=\"nofollow noreferrer\">\n  github.com/trailofbits/manticore\n </a>\n ) for something like this. Any working symbolic execution engine should also fit.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}