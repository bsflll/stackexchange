{
    "title": "Removing personal data from dump file",
    "link": "https://reverseengineering.stackexchange.com/questions/3874/removing-personal-data-from-dump-file",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to publish a crash dump on the Internet for other people to learn from the dump. Usually I take dumps with\n  <code>\n   .dump /ma\n  </code>\n  which is fine.\n </p>\n <p>\n  However, I'm a bit concerned about personal data included in the dump and I'd like to remove it. The WinDbg help file specifies the\n  <code>\n   r\n  </code>\n  and\n  <code>\n   R\n  </code>\n  flags.\n </p>\n <p>\n  <code>\n   R\n  </code>\n  (this part is clear for me):\n </p>\n <blockquote>\n  <p>\n   Deletes the full module paths from the minidump. Only the module names will be included. This is a useful option if you want to protect the privacy of the user's directory structure.\n  </p>\n </blockquote>\n <p>\n  <code>\n   r\n  </code>\n  (I don't fully understand how that protects privacy of\n  <em>\n   other\n  </em>\n  applications):\n </p>\n <blockquote>\n  <p>\n   Deletes from the minidump those portions of the stack and store memory that are not useful for recreating the stack trace. Local variables and other data type values are deleted as well. This option does not make the minidump smaller (because these memory sections are simply zeroed), but it is useful if you want to protect the privacy of other applications.\n  </p>\n </blockquote>\n <p>\n  Which options should I use to re-dump to get a dump without personal information? Are there any other switches I should activate?\n </p>\n <p>\n  Assumptions:\n </p>\n <ul>\n  <li>\n   it's a user mode dump\n  </li>\n  <li>\n   the application itself does not store any sensitive data, so it's basically ok to deliver full memory.\n  </li>\n </ul>\n <p>\n  <strong>\n   Update\n  </strong>\n </p>\n <p>\n  I'm especially interested in removing the process environment block so that\n  <code>\n   !peb\n  </code>\n  does not show all the system information.\n </p>\n</div>\n</body></html>",
    "votes": "6",
    "answers": 2,
    "views": "2k",
    "tags": [
        "windbg"
    ],
    "user": "Thomas Weller",
    "time": "Mar 18, 2014 at 22:51",
    "comments": [
        {
            "user": "Lieven Keersmaekers",
            "text": "<html><body><span class=\"comment-copy\">\n One thing that comes to mind and could potentially leak privacy information in a user dump is if you have applications communicating with each other. You could have application A receiving messages from application B and the stack would then contain the message data of application B.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Wouldn't it be an option to produce the dump within a vanilla VM, such that no personal data could possibly be contained?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  do not use the\n  <code>\n   a in /ma\n  </code>\n  a means all info is dumped\n </p>\n <p>\n  for peb to be included use\n  <code>\n   /p\n  </code>\n </p>\n <pre><code>a basic dump without pdb will be created by\n\nC:\\>cdb -c \".dump /mrR /u c:\\foo.dmp;q\" calc\n\n0:000> cdb: Reading initial command '.dump /mrR /u c:\\foo.dmp;q'\nCreating c:\\foo_0c84_2014-03-21_03-03-38-328_06fc.dmp - mini user dump\nDump successfully written\nquit:\n\nC:\\>cdb -z foo_0bd8_2014-03-21_03-02-11-359_0548.dmp\n\n7c90120e cc              int     3\n\n0:000> !peb\nPEB NULL...\n\n0:000> q\nquit:\n\nC:\\>\n</code></pre>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Thomas Weller",
            "time": "Mar 20, 2014 at 23:14",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Thomas Weller",
                    "text": "<span class=\"comment-copy\">I need more memory than just <code>/m</code> in many cases, so I use <code>/ma</code>. Perhaps I could reduce that to <code>/mwdic</code>, but usually I don't go into that detail of switches. Actually I'm fine with the memory, except the PEB. But even in a <code>/mwdic</code>, the PEB is included.</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">d and c will not put peb as those are related to executable images data and code                w and i will add the memory range which resolves to peb and if the memory range is there in dump !peb command will work</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It seems the following works for me. First, assume I have a full minidump, not necessarily created by WinDbg, but rather ProcDump, Task Manager or Process Explorer. In any case it will be equivalent to\n </p>\n <pre><code>.dump /ma <dumpname>\n</code></pre>\n <p>\n  To remove the personal data, I first erase the PEB:\n </p>\n <pre><code>0:000> ? @$peb\nEvaluate expression: 2130567168 = 7efde000\n\n0:000> ?? sizeof(nt!_PEB)\nunsigned int 0x248\n\n0:000> f 7efde000 L248 0; *** Fill PEB with zeros\n</code></pre>\n <p>\n  After this operation\n  <code>\n   !peb\n  </code>\n  is not useful any more:\n </p>\n <pre><code>0:000> !peb\nPEB at 7efde000\n    InheritedAddressSpace:    No\n    ReadImageFileExecOptions: No\n    BeingDebugged:            No\n    ImageBaseAddress:         00000000\n    Ldr                       00000000\n    *** unable to read Ldr table at 00000000\n    SubSystemData:     00000000\n    ProcessHeap:       00000000\n    ProcessParameters: 00000000\n    *** unable to read process parameters\n</code></pre>\n <p>\n  Next, write the empty PEB and remove module directory names using the\n  <code>\n   r\n  </code>\n  and\n  <code>\n   R\n  </code>\n  switch:\n </p>\n <pre><code>0:000> .dump /marR <dumpname>\n</code></pre>\n <p>\n  Using\n  <a href=\"http://technet.microsoft.com/en-us/sysinternals/bb897439.aspx\" rel=\"nofollow\">\n   SysInternals Strings\n  </a>\n  on that dump does not reveal anything critical in the dump I used for testing.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Thomas Weller",
            "time": "Mar 21, 2014 at 7:36",
            "is_accepted": false,
            "comments": [
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">yes that should work you can use this expression in one line to create a dump thus f @$peb L?@@c++(sizeof(ntdll!_peb)) 0 ; .dump /marR /u c:\\foo.dmp but iirc this will still have your utc (and possibly name of the region :) in time date stamp)</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">but erasing peb like this will render the dump corrupt and will not let windbg read the dump as it relies on certain flags that indicate the presence or absence of peb</span>",
                    "time": null
                }
            ]
        }
    ]
}