{
    "title": "Any Disassembler for iOS?",
    "link": "https://reverseengineering.stackexchange.com/questions/12773/any-disassembler-for-ios",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Is there any iOS app for arm Disassembling?\nI mean one that can run on iPhone. \nNor IDA or Hopper have any iOS version\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 3,
    "views": "3k",
    "tags": [
        "arm",
        "disassemblers",
        "ios"
    ],
    "user": "DineroM34",
    "time": "Jun 1, 2016 at 6:49",
    "comments": [
        {
            "user": "broadway",
            "text": "<html><body><span class=\"comment-copy\">\n r2 can run on a (jailbroken) iphone. see\n <a href=\"https://github.com/radare/radare2/blob/master/doc/iphone.md\" rel=\"nofollow noreferrer\">\n  github.com/radare/radare2/blob/master/doc/iphone.md\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n Isn't the basic idea of iOS that every application runs in its own sandbox? So that means you'd have to load external data into it â€“ other than on a desktop system, you can't go and run it on anything you have installed.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Starwarsfan2099",
            "text": "<html><body><span class=\"comment-copy\">\n Actualy, IDA has been ported to iOS (Jailbroken)\n <a href=\"http://letsunlockiphone.guru/ida-pro-disassembler-ported-iphone/\" rel=\"nofollow noreferrer\">\n  letsunlockiphone.guru/ida-pro-disassembler-ported-iphone\n </a>\n It really can run, I have used it before. I do prefer radare2 though. (See jvoisins answer)\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If your iPhone is jailbroken, you can use\n  <a href=\"http://rada.re\" rel=\"nofollow\">\n   radare2\n  </a>\n  on it. You can follow the process to cross-compile it\n  <a href=\"https://github.com/radare/radare2/blob/master/doc/iphone.md\" rel=\"nofollow\">\n   here\n  </a>\n  , or simply grab the latest release from\n  <a href=\"https://cydia.saurik.com/\" rel=\"nofollow\">\n   Cydia\n  </a>\n  .\n </p>\n <p>\n  A neat feature of radare2 is that you can run it\n  <em>\n   on\n  </em>\n  your iPhone, and debug/analyse your application remotely, since radare2 instances can communicate, either by spawning the\n  <a href=\"https://github.com/radare/radare2-webui\" rel=\"nofollow\">\n   web interface\n  </a>\n  , or with the\n  <a href=\"https://github.com/radare/radare2/blob/master/doc/rap\" rel=\"nofollow\">\n   rap\n  </a>\n  protocol, documented\n  <a href=\"https://radare.gitbooks.io/radare2book/content/remoting_capabilities.html\" rel=\"nofollow\">\n   here\n  </a>\n  .\n </p>\n <p>\n  If your iPhone isn't jailbroken, then there is no way an application could be used to analyse another one, since each of them is running in a separate sandbox.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "jvoisin",
            "time": "Jun 5, 2016 at 22:31",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I think you might try the\n  <strong>\n   otool\n  </strong>\n  command line tool its very basic but it do some disassembling, it just show function names and instructions no fancy links \"showing where code will jump\" it shows only dresses\n </p>\n <p>\n  But definitely you need to be Jailbroken\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Karim H",
            "time": "Jun 2, 2016 at 23:24",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  For a long time, I was using gdb from Cydia on my iPad 2 (it should still work on any 32-bit device).  You can dump memory by attaching gdb to the running application's pid:\n  <code>\n   ps ax | grep [app name]\n  </code>\n  and\n  <code>\n   gdb -p -q [pid]\n  </code>\n  .\n </p>\n <p>\n  If you wanted to add a breakpoint at a symbol or selector, you first needed to extract the headers from the application.  Using any variant of Class Dump (I used class-dump-z), I could break at any symbol dumped from the generated interfaces.  After hitting the breakpoint, just run the\n  <code>\n   disassemble\n  </code>\n  command.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/Ef18B.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"symbolic breakpoint\" src=\"https://i.sstatic.net/Ef18B.png\"/>\n  </a>\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/nB9KR.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"gdb on iOS example\" src=\"https://i.sstatic.net/nB9KR.png\"/>\n  </a>\n </p>\n <p>\n  <a href=\"http://hackoftheday.securitytube.net/2013/04/bypassing-jailbroken-checks-in-ios.html\" rel=\"nofollow noreferrer\">\n   Image source\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "JAL",
            "time": "Nov 18, 2016 at 4:03",
            "is_accepted": false,
            "comments": []
        }
    ]
}