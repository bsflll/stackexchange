{
    "title": "How to change default pointer size in IDA Pro",
    "link": "https://reverseengineering.stackexchange.com/questions/32678/how-to-change-default-pointer-size-in-ida-pro",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  so, I'm writing a script to automate analysis, and the code I'm working with is 64bit.\n </p>\n <p>\n  the\n  <strong>\n   pointer size\n  </strong>\n  field shown here is the wrong one:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/WR3wr.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/WR3wr.png\"/>\n  </a>\n </p>\n <p>\n  I want to change it from within python to 64bit. I've searched the Idapython documentation and previously similar questions and could not find an answer\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "135",
    "tags": [
        "ida",
        "idapython",
        "binary",
        "compilers"
    ],
    "user": "serv0",
    "time": "Feb 1, 2024 at 16:34",
    "comments": [
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<html><body><span class=\"comment-copy\">\n That stuff in the compiler options page comes from the\n <code>\n  compiler_info_t\n </code>\n structure in the documentation. I'm not sure exactly where you're _supposed_ to set it if using IDAPython, but it's part of\n <code>\n  idainfo\n </code>\n . So, you can prolly use the\n <code>\n  idaapi.inf_*\n </code>\n functions, ctypes with the IDA library to call\n <code>\n  setinf\n </code>\n directly, or I think even the \"Root Node\" netnode iirc.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Thanks to Ali's tip I was able to find the answer\n </p>\n <p>\n  in idapython the following can be used to set the pointer size:\n </p>\n <pre><code>ida_ida.inf_set_cc_cm(ida_typeinf.CM_N16_F32)\n</code></pre>\n <p>\n  the enum/definition for 'CM_N16_F32' is found in ida.hpp:\n </p>\n <p>\n  <a href=\"https://hex-rays.com/products/ida/support/sdkdoc/group___c_m__ptr.html\" rel=\"nofollow noreferrer\">\n   https://hex-rays.com/products/ida/support/sdkdoc/group___c_m__ptr.html\n  </a>\n </p>\n <p>\n  <a href=\"https://hex-rays.com/products/ida/support/sdkdoc/structcompiler__info__t.html\" rel=\"nofollow noreferrer\">\n   https://hex-rays.com/products/ida/support/sdkdoc/structcompiler__info__t.html\n  </a>\n </p>\n <p>\n  and to use it in idapython I looked up the function/module Ali mentioned and found ida_ida.inf_set_cc_cm() / ida_ida.inf_get_cc_cm for setting/getting compiler info specifically for the compiler memory model mentioned in the previous links:\n </p>\n <p>\n  <a href=\"https://hex-rays.com//products/ida/support/idapython_docs/ida_ida.html#ida_ida.INF_CC_CM\" rel=\"nofollow noreferrer\">\n   https://hex-rays.com//products/ida/support/idapython_docs/ida_ida.html#ida_ida.INF_CC_CM\n  </a>\n  <a href=\"https://hex-rays.com//products/ida/support/idapython_docs/ida_typeinf.html#ida_typeinf.CM_N64\" rel=\"nofollow noreferrer\">\n   https://hex-rays.com//products/ida/support/idapython_docs/ida_typeinf.html#ida_typeinf.CM_N64\n  </a>\n </p>\n <p>\n  exciting stuff :)\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "serv0",
            "time": "Jan 31, 2024 at 21:00",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As hinted by Ali, this info is stored in the global\n  <code>\n   inf\n  </code>\n  structure. It used to be an actual global variable accessible via the\n  <code>\n   idaapi.cvar\n  </code>\n  wrapper, but now you need to use the various getters/setters in the\n  <a href=\"https://hex-rays.com//products/ida/support/idapython_docs/ida_ida.html\" rel=\"nofollow noreferrer\">\n   <code>\n    ida_ida\n   </code>\n   module\n  </a>\n  .\n </p>\n <p>\n  While you can indeed go down that road and use\n  <code>\n   inf_get_cc\n  </code>\n  /\n  <code>\n   inf_set_cc\n  </code>\n  or\n  <code>\n   inf_set_cc_cm\n  </code>\n  , in case you only need to change the pointers to 64-bit, normally it should be enough to call\n  <strong>\n   <code>\n    inf_set_64bit(True)\n   </code>\n  </strong>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Jan 31, 2024 at 21:08",
            "is_accepted": false,
            "comments": [
                {
                    "user": "serv0",
                    "text": "<span class=\"comment-copy\">indeed, thats a better way to do it.</span>",
                    "time": null
                }
            ]
        }
    ]
}