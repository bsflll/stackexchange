{
    "title": "Reverse engineering a game server",
    "link": "https://reverseengineering.stackexchange.com/questions/32154/reverse-engineering-a-game-server",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It was announced recently that the UGC servers for Mirror's Edge Catalyst servers are going to shut down on December 8th, 2023 for all platforms. I want to reverse engineer the game server and build a server emulator so that Catalyst can be played online for the foreseeable future.\n </p>\n <p>\n  The problem is that I'm not really sure how to go about it. We have a Frostbite engine editor that allows us to look through and edit the game's files and there's no mention of SSL, TLS or any sort of secret key needed to decrypt the game's packets.\n </p>\n <p>\n  Looking at Wireshark, it looks like the game sends its application data with TLS v1.2. Aside from that, I've got no idea what to do.\n </p>\n <p>\n  Would the SSL encryption/decryption key be stored in a place that I can look at?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "318",
    "tags": [
        "decryption",
        "game-hacking"
    ],
    "user": "Loomeh",
    "time": "Aug 10, 2023 at 23:55",
    "comments": [
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n You don't seem familiar with HTTP respectively TLS, because TLS does not use static secrets so checking the binary will not reveal anything. Instead a session keys are dynamically generated which are only kept in RAM. Please read\n <a href=\"https://en.wikipedia.org/wiki/Transport_Layer_Security\" rel=\"nofollow noreferrer\">\n  en.wikipedia.org/wiki/Transport_Layer_Security\n </a>\n for details. For certain SSL/TLS libraries tools exist that allow to extract those session keys to a log file which Wireshark can use to decrypt TLS data.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "mimak",
            "text": "<html><body><span class=\"comment-copy\">\n Usually it's easier to debug the application after it decrypts the payloads, though for that you will need to bypass the game's anti-debugging protection (if present)\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}