{
    "title": "OllyDbg \"runs away\" when stepping over wininet.HttpSendRequestW",
    "link": "https://reverseengineering.stackexchange.com/questions/19431/ollydbg-runs-away-when-stepping-over-wininet-httpsendrequestw",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm, using OllyDbg 1.1 to debug some malware and it's been quite a while since I've dealt with\n  <code>\n   wininet\n  </code>\n  calls. When I set a software or hardware breakpoint directly after the call to\n  <code>\n   wininet.HttpSendRequestW\n  </code>\n  the breakpoint never hits and it seems like the malware hangs.\n </p>\n <p>\n  I've also verified that I can reach the internet and the resource that is involved in the\n  <code>\n   HttpSendRequestW\n  </code>\n  call. What's the trick to allowing a step-over on these wininet functions?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "376",
    "tags": [
        "ollydbg"
    ],
    "user": "vane",
    "time": "Sep 23, 2018 at 2:20",
    "comments": [
        {
            "user": "deon cagadoes",
            "text": "<html><body><span class=\"comment-copy\">\n Can you share this malware ? I want analyze why happens this.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Check if the program calls\n  <a href=\"https://docs.microsoft.com/en-us/windows/desktop/api/wininet/nf-wininet-internetsetstatuscallback\" rel=\"nofollow noreferrer\">\n   <code>\n    InternetSetStatusCallback\n   </code>\n  </a>\n  which allows setting a callback to be called during different stages of the connection.\n </p>\n <p>\n  Possibly the callback performs the actual work, or it detects the debugger and hangs without returning to the caller.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Sep 23, 2018 at 14:16",
            "is_accepted": false,
            "comments": [
                {
                    "user": "vane",
                    "text": "<span class=\"comment-copy\">Unfortunately it doesn't. I worked around the issue by providing the data directly and skipping the call to <code>HttpSendRequest</code> but that's not really a good solution and doesn't help me understand why it's happening</span>",
                    "time": null
                }
            ]
        }
    ]
}