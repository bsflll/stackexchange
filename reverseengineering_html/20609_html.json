{
    "title": "How to set a breakpoint in an execve'd program in radare2?",
    "link": "https://reverseengineering.stackexchange.com/questions/20609/how-to-set-a-breakpoint-in-an-execved-program-in-radare2",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If I have a program A, which uses\n  <code>\n   execve\n  </code>\n  to run program B. How can I set a breakpoint in program B's main routine if I'm debugging program A?\n </p>\n <p>\n  After a certain point in the execve routine, program B will be loaded into memory. After that I can see the symbols in the binary and the regions of memory they have been loaded into. However, to get to that point at the moment I just step through some of the execve instructions which is very fiddly and prone to mistakes.\n </p>\n <p>\n  Is there a simpler approach to this?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "388",
    "tags": [
        "debugging",
        "x86",
        "radare2",
        "executable"
    ],
    "user": "Isaac",
    "time": "Feb 17, 2019 at 16:50",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  There's a debugging flag called\n  <code>\n   dbg.execs\n  </code>\n  that setting it to true should stop the execution when an\n  <code>\n   execv\n  </code>\n  is happening. So try this:\n </p>\n <pre><code>> e dbg.execs = true\n</code></pre>\n <p>\n  It looks like it works on Linux, but I couldn't get the same behaviour on OSX.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Paweł Łukasik",
            "time": "Feb 13, 2019 at 20:15",
            "is_accepted": true,
            "comments": []
        }
    ]
}