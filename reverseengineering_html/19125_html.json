{
    "title": "How to find V-Table in IDA? (Using class informer)",
    "link": "https://reverseengineering.stackexchange.com/questions/19125/how-to-find-v-table-in-ida-using-class-informer",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I've been trying for a while now to get my head around V-Tables, V-Table patching, etc, i understand what V-Tables are and why they are used (At least i think i do).\n </p>\n <p>\n  But how do i find them in IDA? I'm using IDA Pro 7.0, and i created a test program with two classes.\n </p>\n <pre><code>class ClassA\n{\npublic:\n    ClassA();\n    ~ClassA();\n    virtual void Test();\n};\n</code></pre>\n <p>\n  And..\n </p>\n <pre><code>class ClassB : public ClassA\n{\npublic:\n    ClassB();\n    ~ClassB();\n    void Test() override;\n};\n</code></pre>\n <p>\n  The definition for the\n  <code>\n   Test\n  </code>\n  function in both cases is a simple\n  <code>\n   cout\n  </code>\n  to the console.\n </p>\n <p>\n  And in\n  <code>\n   main.cpp\n  </code>\n </p>\n <pre><code>int main()\n{\n    ClassB* BClass = new ClassB();\n    while (1)\n    {\n        BClass->Test();\n        Sleep(1000);\n    }\n    delete BClass;\n    return 0;\n}\n</code></pre>\n <p>\n  I was trying to follow\n  <a href=\"https://youtu.be/RO3pg6ZLGQw?t=504\" rel=\"nofollow noreferrer\">\n   this\n  </a>\n  explanation, but it seems as if the data isn't structured the same way in his version of IDA.\n </p>\n <p>\n  After clicking on the class in the Class Informer window, i'm taken to IDA View-A, and this is what i see.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/oOpZa.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/oOpZa.png\"/>\n  </a>\n </p>\n <p>\n  At this point i'm a bit lost, as i'm not really sure how to find or follow pointers in IDA.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "7k",
    "tags": [
        "ida",
        "ida-plugin",
        "pointer",
        "vtables"
    ],
    "user": "Michael Strobel",
    "time": "Aug 22, 2018 at 2:48",
    "comments": [
        {
            "user": "Michael Strobel",
            "text": "<html><body><span class=\"comment-copy\">\n I really need to figure out how to navigate the pointers, from class instance through the V-Table pointers, to the target function.   It's not something i was taught in programming courses, and difficult to find straight forward information.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Biswapriyo",
            "text": "<html><body><span class=\"comment-copy\">\n This tutorial from @IgorSkochinsky may help:\n <a href=\"http://youtu.be/efkLG8-G3J0\" rel=\"nofollow noreferrer\">\n  youtu.be/efkLG8-G3J0\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  What you're looking it is actually a VTable. As you know, a VTable is a table of function pointers and as you can see, at address\n  <code>\n   0x19B64\n  </code>\n  you actually see a single function address (this looks like\n  <code>\n   dd offset sub_XXXX\n  </code>\n  ). That is actually a virtual function table of a size of one. Since you only have one virtual function in your demo class. That offset points to one implementation of\n  <code>\n   Test\n  </code>\n  . Double-clicking the function name (which defaults to the function's address prefixed with\n  <code>\n   sub_\n  </code>\n  to indicate it is a subroutine) will set the cursor it it's address (and make it visible).\n </p>\n <p>\n  Somewhat below that, at address\n  <code>\n   0x19B8C\n  </code>\n  , you can see the second class's vtable, as you have two classes with differing functions. That offset is the second implementation of\n  <code>\n   Test\n  </code>\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "NirIzr",
            "time": "Aug 22, 2018 at 21:57",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Michael Strobel",
                    "text": "<span class=\"comment-copy\">So if there is more than one virtual function in the class, i would find them here also?</span>",
                    "time": null
                },
                {
                    "user": "NirIzr",
                    "text": "<span class=\"comment-copy\">Yes. You can compile a more elaborate example and see for yourself :) You'll simply see two (or more) lines of <code>dd offset sub_????</code> one following the other, at sequential addresses.</span>",
                    "time": null
                }
            ]
        }
    ]
}