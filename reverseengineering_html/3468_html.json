{
    "title": "How to find how global variables defined in binary",
    "link": "https://reverseengineering.stackexchange.com/questions/3468/how-to-find-how-global-variables-defined-in-binary",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In Visual Studio I have written simple code,\n </p>\n <pre><code>int pranit = 2;\nint& sumit = pranit;\n\nint main(int argc, char** argv) {\n    sumit++;\n    return sumit;\n}\n</code></pre>\n <p>\n  I used OllyDbg to Disassamble, but I am not able to find where\n  <code>\n   sumit\n  </code>\n  ,\n  <code>\n   pranit\n  </code>\n  are defined in assembly. Though doing some string search I got following details:\n </p>\n <pre><code>Names in ConsoleA, item 313  Address=013B8004  Section=.data \nType=Library  Name=sumit\n\nNames in ConsoleA, item 257  Address=013B8000  Section=.data \nType=Library  Name=pranit\n</code></pre>\n <p>\n  How to find, where and how it is used in assembly code. Also, I want to find out both address and value of these global variables.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "5k",
    "tags": [
        "disassembly",
        "debuggers",
        "binary-analysis",
        "c++"
    ],
    "user": "Pranit Kothari",
    "time": "Jan 16, 2014 at 17:25",
    "comments": [
        {
            "user": "LDE",
            "text": "<html><body><span class=\"comment-copy\">\n @blabb: I had Ollydbg on and opened an EXE in it, and also see what you mean by the comment column. I do not understand what you mean by \"Tab the comment column\" though - could you please explain? Secondly I could not find where the \"Recognized args and locals\" was in Ollydbg. Which version are you using? 1.10? 2.01? Other? Do specify. Lastly while your solution possibly works, I'd like to give a slightly different perspective too. Many times you wouldn't even have the\n <code>\n  .pdb\n </code>\n file with you - in that case the variable names\n <code>\n  sumit\n </code>\n and\n <code>\n  pranit\n </code>\n would not show up at all IMO. You would only see s\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "perror",
            "text": "<html><body><span class=\"comment-copy\">\n Your \"answer\" looks like a comment to blabb answer... You should consider deleting it and resubmitting it as a comment to blabb answer.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  opening a vc commandprompt using\n </p>\n <pre><code>start->programs->vc->vc command prompt\n</code></pre>\n <p>\n  Setting environment for using Microsoft Visual Studio 2010 x86 tools.\ncreating a tempdir in desktop for compiling and linking\n </p>\n <pre><code>C:\\Program Files\\Microsoft Visual Studio 10.0\\VC>cd \"c:\\Documents and Settings\\Admin\\Desktop\"\nC:\\Documents and Settings\\Admin\\Desktop>md pran\nC:\\Documents and Settings\\Admin\\Desktop>cd pran\nC:\\Documents and Settings\\Admin\\Desktop\\pran>copy con prankasum.cpp\n^Z\n        1 file(s) copied.\nC:\\Documents and Settings\\Admin\\Desktop\\pran>write prankasum.cpp    \nC:\\Documents and Settings\\Admin\\Desktop\\pran>type prankasum.cpp\n#include <stdio.h>\nint pranit = 2;\nint& sumit = pranit;\nint main(int argc, char** argv)\n{\nsumit++;\nreturn sumit;\n}    \nC:\\Documents and Settings\\Admin\\Desktop\\pran>dir /b\nprankasum.cpp    \nC:\\Documents and Settings\\Admin\\Desktop\\pran>cl /nologo /Zi prankasum.cpp /link /RELEASE\nprankasum.cpp    \nC:\\Documents and Settings\\Admin\\Desktop\\pran>dir /b\nprankasum.cpp\nprankasum.exe\nprankasum.obj\nprankasum.pdb\nvc100.pdb\n</code></pre>\n <p>\n  opening the exe in ollydbg and navigating to main\n  \n\n  tab the comment column to show source and in debugging options ask ollydbg to use recogneized args and locals\n </p>\n <pre><code>C:\\Documents and Settings\\Admin\\Desktop\\pran> ollydbg prankasum.exe      \n00401000  >PUSH    EBP                          ; {\n00401001   MOV     EBP, ESP\n00401003   MOV     EAX, DWORD PTR DS:[sumit]    ; sumit++;\n00401008   MOV     ECX, DWORD PTR DS:[EAX]\n0040100A   ADD     ECX, 1\n0040100D   MOV     EDX, DWORD PTR DS:[sumit]\n00401013   MOV     DWORD PTR DS:[EDX], ECX\n00401015   MOV     EAX, DWORD PTR DS:[sumit]    ; return sumit;\n0040101A   MOV     EAX, DWORD PTR DS:[EAX]\n0040101C   POP     EBP                          ; }\n0040101D   RETN\n</code></pre>\n <p>\n  or in windbg\n </p>\n <pre><code>prankasum!main:\n00401000 55              push    ebp\n0:000> uf @eip\nprankasum!main [c:\\documents and settings\\admin\\desktop\\pran\\prankasum.cpp @ 5]:\n    5 00401000 55              push    ebp\n    5 00401001 8bec            mov     ebp,esp\n    6 00401003 a104b04000      mov     eax,dword ptr [prankasum!sumit (0040b004)]\n    6 00401008 8b08            mov     ecx,dword ptr [eax]\n    6 0040100a 83c101          add     ecx,1\n    6 0040100d 8b1504b04000    mov     edx,dword ptr [prankasum!sumit (0040b004)]\n    6 00401013 890a            mov     dword ptr [edx],ecx\n    7 00401015 a104b04000      mov     eax,dword ptr [prankasum!sumit (0040b004)]\n    7 0040101a 8b00            mov     eax,dword ptr [eax]\n    8 0040101c 5d              pop     ebp\n    8 0040101d c3              ret\n0:000> dv\n           argc = 0n1  argv = 0x00033ba8\n0:000> ?? sumit     int * 0x0040b000\n0:000> ?? pranit    int 0n2\n0:000> pct    0040101d c3              ret\n0:000> ?? sumit    int * 0x0040b000\n0:000> ?? pranit    int 0n3\n0:000> x /t /v /q prankasum!sumit\nprv global 0040b004    4 int * @!\"prankasum!sumit\" = 0x0040b000\n0:000> x /t /v /q prankasum!pranit\nprv global 0040b000    4 int @!\"prankasum!pranit\" = 0n3\n</code></pre>\n <p>\n  <strong>\n   update\n  </strong>\n </p>\n <p>\n  explanation for tabbing through comment column\n </p>\n <p>\n  each mdi window in ollydbg has a bar in top it can be hidden or shown\n </p>\n <pre><code>right click -> appearance -> show bar / hide bar\n</code></pre>\n <p>\n  each of the bars have columns and many of the colums can be configured to show different \nitems in cpu window if you\n  <code>\n   repeatedly click the comment column\n  </code>\n  it will cycle through\n </p>\n <pre><code>comment / profile/ and source\n</code></pre>\n <p>\n  comment will show all the\n </p>\n <pre><code>analysis comments / user comments\n</code></pre>\n <p>\n  profile will show all the\n  <code>\n   run trace / hittrace/ module and global profile statistics\n  </code>\n </p>\n <p>\n  for example this\n  <code>\n   strcpy_s\n  </code>\n  was called 50 times during crt initialisation\n </p>\n <pre><code>004019EC   |.  >|CALL    prankasu.strcpy_s           ;  50.\n</code></pre>\n <p>\n  inside this call this loop was called  ~2700 times\n </p>\n <pre><code>00403D45   /MOV     CL, BYTE PTR DS:[EAX]       ;  2787.\n00403D47   |MOV     BYTE PTR DS:[ESI+EAX], CL   ;  2787.\n00403D4A   |INC     EAX                         ;  2787.\n00403D4B   |TEST    CL, CL                      ;  2787.\n00403D4D   |JE      SHORT prankasu.00403D52     ;  2787.\n00403D4F   |DEC     EDI                         ;  2737.\n00403D50   \\JNZ     SHORT prankasu.00403D45     ;  2737.\n00403D52   TEST    EDI, EDI                     ;  50.\n</code></pre>\n <p>\n  if you cycle through to source column\n </p>\n <pre><code>strcpy_s is from vc\\crt\\stdenvp.c:133.  _ERRCHECK(_tcscpy_s(*env, cchars, p));\n</code></pre>\n <p>\n  see below\n </p>\n <pre><code>004019E9   |PUSH    ESI           ; _ERRCHECK(_tcscpy_s(*env, cchars, p));\n004019EA   |PUSH    EBX\n004019EB   |PUSH    EAX\n004019EC   |CALL    prankasu.strcpy_s\n004019F1   |ADD     ESP, 0C\n</code></pre>\n <p>\n  loop is from\n  <code>\n   vc\\crt\\tcscpy_s_inl\n  </code>\n </p>\n <pre><code>00403D41   MOV     ESI, EDX        ; while ((*p++ = *_SRC++) != 0 && --available > 0)\n00403D43   SUB     ESI, EAX\n00403D45   /MOV     CL, BYTE PTR DS:[EAX]\n00403D47   |MOV     BYTE PTR DS:[ESI+EAX], CL\n00403D4A   |INC     EAX\n00403D4B   |TEST    CL, CL\n00403D4D   |JE      SHORT prankasu.00403D52\n</code></pre>\n <p>\n  cycling to comment back you see\n </p>\n <pre><code>004019E9   |.  56    |PUSH    ESI                         ; /Arg3 = 7C90DE6E\n004019EA   |.  53    |PUSH    EBX                         ; |Arg2 = 00000000\n004019EB   |.  50    |PUSH    EAX                         ; |Arg1 = 00000000\n004019EC   |.  E8 1D>|CALL    prankasu.strcpy_s           ; \\strcpy_s\n</code></pre>\n <p>\n  <code>\n   options->debugging options->cpu->select show symbolic address\n  </code>\n  will make\n  <code>\n   XXXXXX [40xxxx]\n  </code>\n  to be shown as\n </p>\n <pre><code>xxxxxx [sumit]\n</code></pre>\n <p>\n  <code>\n   options ->debugging options->analysis->select show args and locals in procedure\n  </code>\n  will make all\n  <code>\n   ebp+XX\n  </code>\n  to\n  <code>\n   arg.1 arg.2\n  </code>\n  and all\n  <code>\n   ebp-XX\n  </code>\n  to\n  <code>\n   local.1 local.2\n  </code>\n </p>\n <pre><code>both ollydbg 1.10 and 2.01 behave similarly\n</code></pre>\n <p>\n  <code>\n   full\n  </code>\n  or\n  <code>\n   partial (stripped down )\n  </code>\n  symbolic information in any acceptable format (\n  <code>\n   map tds pdb dbg\n  </code>\n  ) is\n  <code>\n   **mandatory**\n  </code>\n  <code>\n   **requirement**\n  </code>\n </p>\n</div>\n</body></html>",
            "votes": "8",
            "user": "blabb",
            "time": "Jan 16, 2014 at 18:47",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  step over in in the visual studio debugger, then right-click->show disassembly and you will see the disassembly, including variable names and addresses.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "bernd feinman",
            "time": "Jan 16, 2014 at 5:16",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Jongware",
                    "text": "<span class=\"comment-copy\">With an obligatory footnote: \"where sumit, pranitare defined in assembly\" -- they are <i>not</i>. They only appear in the debugger courtesy of added debug information (and a debugger that understands the debug format).</span>",
                    "time": null
                }
            ]
        }
    ]
}