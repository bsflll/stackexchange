{
    "title": "Is there a way to reverse engineer this small tool \"website2apk\" and design my own? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/22077/is-there-a-way-to-reverse-engineer-this-small-tool-website2apk-and-design-my-o",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed.\n        </b>\n        This question is\n        <a href=\"/help/closed-questions\">\n         off-topic\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       Questions asking for help\n       <b>\n        reverse-engineering a specific system\n       </b>\n       are off-topic unless they demonstrate an understanding of the concepts involved and clearly identify a specific problem.\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2019-09-12 01:22:29Z\">\n        5 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/22077/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  <img alt=\"enter image description here\" src=\"https://websitetoapk.com/images/screenshots/v3.4_1.png\"/>\n  I recently came across this tool and was amazed by its size and how it can build release-apk, without even bothering about Android development environment set up on the machine, neither Cordova nor Android Studio is required.\n </p>\n <p>\n  A bit of research showed me that the what this tool is doing is simple (most related material I found was of 2008-2014).\n </p>\n <p>\n  Being new in reverse engineering, I wonder if there is a way I can understand its workaround and build a similar tool to automate my Cordova projects.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "123",
    "tags": [
        "android",
        "executable",
        "apk"
    ],
    "user": "Gustaakh",
    "time": "5 years ago",
    "comments": [
        {
            "user": "Biswapriyo",
            "text": "<html><body><span class=\"comment-copy\">\n Never use those type of tools. They tends to inject malware in produced binary blob.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Hi and welcome to RE.SE. This is a fairly broad question. What have you tried so far? The idea doesn't exactly seem too far-fetched that one could come up with a tool like that. APK files are ZIP archives, certain metadata governs stuff like class names (including the directory structure inside the ZIP) and it shouldn't be too hard to replace metadata as well as data (i.e. \"data-driven\") used by the included app. And the app probably makes use of of something like WebView, so not \"much meat\" either. But as @Biswapriyo pointed out, you shouldn't use someone else's, unless it's FLOSS ...\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Depending on what the tool is written in.\nIf you can it with binary analyser like ProtectionId or Pied it should tell you what compile was used to build the binary.\nIf it is build using the .NET library then you can use a decompiler like dnSpy or Reflector to view the source code. Java is also reflectable so a tool like JD/JD-GUI would be able to help recover the source code.\nIf it is a native binary (C/C++) it becomes a little trickier, you will need to use something like hexrays or ghidra to decompile binary and give a C like pseudo code which can be used to rewrite an application.\nHopefully this helps\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Jackson Green",
            "time": "Sep 10, 2019 at 5:57",
            "is_accepted": true,
            "comments": []
        }
    ]
}