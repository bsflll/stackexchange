{
    "title": "Configuring Ghidra to use the Keil 8051 ABI for analysis",
    "link": "https://reverseengineering.stackexchange.com/questions/27890/configuring-ghidra-to-use-the-keil-8051-abi-for-analysis",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to reverse engineer a raw binary image from an nrf24le1 SoC that (I think) has been compiled with the Keil toolchain.  Specifically, I see that C functions in this image usually expect their arguments in r7/r5/r3 as described\n  <a href=\"https://www.keil.com/support/man/docs/c51/c51_ap_parampassreg.htm\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  and that the return value lives in r7.  The behavior I'm seeing is:\n </p>\n <ul>\n  <li>\n   Ghidra thinks that every function in this image takes 0 parameters, even if it's obvious that the function is immediately looking at r7 for its first argument\n  </li>\n  <li>\n   Ghidra thinks the return value lives in ACC\n  </li>\n </ul>\n <p>\n  I have to manually override this for every function.  I would like for Ghidra to automatically figure out when a function has arguments based on the Keil ABI.\n </p>\n <p>\n  By contrast, when I run Ghidra on a raw arm32 binary, it notices when a function looks for arguments in r0/r1/r2/... and it adjusts the function declaration accordingly.  So Ghidra behaves correctly for arm32, but incorrectly for 8051.\n </p>\n <p>\n  Is there a way to fix this (or is there a better tool I should be using instead of Ghidra)?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "968",
    "tags": [
        "ghidra",
        "8051"
    ],
    "user": "Jason",
    "time": "Jun 24, 2021 at 4:17",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You need to use the\n  <a href=\"https://github.com/NationalSecurityAgency/ghidra/blob/master/Ghidra/Processors/8051/data/languages/mx51.cspec\" rel=\"nofollow noreferrer\">\n   mx51\n  </a>\n  variant of the 8051 processor when loading the binary.\n </p>\n <p>\n  The file in the link uses the calling convention found in your link.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "mumbel",
            "time": "Jun 24, 2021 at 11:48",
            "is_accepted": false,
            "comments": []
        }
    ]
}