{
    "title": "What kind of integer obfuscation is this?",
    "link": "https://reverseengineering.stackexchange.com/questions/25663/what-kind-of-integer-obfuscation-is-this",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm looking at the network traffic of a game submitting the user's score to the high-score server. The score value seems to be obfuscated in some way.\n </p>\n <p>\n  The score is a non-negative integer, and not more than half a billion in practice. Here are some scores and their encoded forms:\n </p>\n <pre><code>   0 : 4c\n 100 : 4d 71 06\n 110 : 4d 7f c6\n 210 : 4f bf c6\n 281 : 4f ba 8d b3 ba 94 4d da 9d\n 551 : 69 78 cd b3 bf ee 69 79 1c\n 878 : 66 be 8b b3 b1 14 69 d4 f6\n 990 : 65 74 06 b3 b2 4b 69 d1 2e\n1016 : 4d 71 0d 68 22 f0 4e be b6 68\n1021 : 4d 71 1c 4f 72 dd 6b b2 46 68\n1208 : 4d 70 06 64 a2 cb 66 b2 4d 68\n1361 : 4d 74 f6 4f 72 e2 6b b0 14\n1362 : 4d 74 f6 4c 22 cd 4f b8 dc 4c\n1543 : 4d 78 ee 4d c2 dd 66 b1 06 68\n1673 : 4d 79 30 4d c2 c6 4e b2 6e 4e\n1913 : 4d 74 0d 4d c2 d4 69 70 0d 4d d1 06 4e b1 06 4e b1 1d\n2151 : 4f bf d4 4f 72 dc 4f ba 9d 6a\n2816 : 4f ba 8d 68 22 dc 4d 71 30 4d 71 06 4e b1 06 4e b1 1d\n3540 : 4d d8 ee 4c a2 dc 4d 7f dc 6a\n3819 : 4d da 8d 67 72 c6 66 b4 1d 6a\n3881 : 4d da 8b 4f 72 cd 4e b0 06 69 71 06 4e b1 06 4e b1 2e\n3955 : 4d d4 14 6b 72 dd 6b b2 46 6a b4 22 65 74 22 65 74\n4095 : 6a b1 22 6b 72 dc 6b b4 cd 4c\n4205 : 6a b0 06 6b 72 d4 69 d8 dc 64\n4274 : 6a b0 30 68 a2 dc 4d d1 06 4e\n4444 : 6a b2 6e 68 a2 dc 4e be a2 68\n4602 : 6a b9 06 4c 22 c6 69 71 30 68\n</code></pre>\n <p>\n  I am certain that there is only one input variable to this encoding; the same input always gives the same output across changes of all possibly relevant variables.\n </p>\n <p>\n  This encoding is invertible; sending the encoded string to the server gets a response of the decoded score (if the decoded score is higher than the last one you submitted). Corollarily, we have an oracle.\n </p>\n <p>\n  What I'm having a hard time with is that the output length is variable in a non-monotonic way and is somewhat longer than the input.\n </p>\n <p>\n  For most particular score values, it is difficult to play in such a way to earn that score precisely, but  if more pairs are needed to disambiguate, I can earn scores in an approximate range. (Otherwise I would surely have tried to earn the scores 1, 2, 3, etc.)\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "93",
    "tags": [
        "file-format",
        "unpacking",
        "encodings"
    ],
    "user": "igk",
    "time": "Aug 13, 2020 at 8:17",
    "comments": [
        {
            "user": "trunklop",
            "text": "<html><body><span class=\"comment-copy\">\n You should send that to the puzzling stackexchange :)\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "morsisko",
            "text": "<html><body><span class=\"comment-copy\">\n You have access to the program that generates the data, just reverse the procedure inside the game code\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Anonymous Anonymous",
            "text": "<html><body><span class=\"comment-copy\">\n Given that the first byte seems to correspond to the first digit of the value regardless of the input size (e.g. 210 -> 4f... & 2151 -> 4f...) makes me think of some kind of character encoding (or something else using \"symbolic\" evaluation), but I can't wrap my head around it...\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Anonymous Anonymous",
            "text": "<html><body><span class=\"comment-copy\">\n Actually, it seems the first n bytes directly represents the first n digits - e.g. a 71 in the second column represents a 0 as the 2nd most sig. digit... At least it seems close enough - I can always find about 1 counter example and the remaining bytes still are shrouded in mystery...\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}