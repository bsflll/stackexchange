{
    "title": "IDA Hex-Rays: How to find all references to the certain field of all instances of the data type?",
    "link": "https://reverseengineering.stackexchange.com/questions/20553/ida-hex-rays-how-to-find-all-references-to-the-certain-field-of-all-instances-o",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <a href=\"https://reverseengineering.stackexchange.com/questions/20115/ida-hex-rays-there-are-no-xrefs-to\">\n   This question has already been asked here\n  </a>\n  but for some reason it was deleted, as \"dead\".\n </p>\n <p>\n  I will try to explain again. I have a specific data type. It is used in a large number of disassembled functions. This type has a field whose purpose is unknown. I need to find all references to this field in the entire application.\n </p>\n <p>\n  I can belive to @Biswapriyo, that this behavior is by design and I cannot find xrefs to the field of data type. Ok, got it. Now I need to find a way to do that! :)\n </p>\n <p>\n  Perhaps there are any plugin? I don't understand why this can be difficult, since to perform this action, it is enough to generate a .c file, open it in notepad and press Ctrl+F. I want this functionality to be in IDA Hex-Rays.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "4k",
    "tags": [
        "ida",
        "hexrays"
    ],
    "user": "Albeoris",
    "time": "Feb 4, 2019 at 20:19",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  IDA does support structure member cross-references: it will show you everywhere in the disassembly listing that an instruction operand has had that particular structure reference applied to it. See this picture:\n  <a href=\"https://i.sstatic.net/y8uqw.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"IDA structure cross-references\" src=\"https://i.sstatic.net/y8uqw.png\"/>\n  </a>\n </p>\n <p>\n  However, this only works if the structure has been applied on the assembly-language level. Generally speaking, changing the type of a variable in Hex-Rays does not result in structure cross-references being created. Personally, I think this should be standard behavior.\n </p>\n <p>\n  Nevertheless, there's a Hex-Rays plugin called\n  <a href=\"https://github.com/jkoppel/project-ironfist/tree/master/tools/Revitalize/Referee\" rel=\"nofollow noreferrer\">\n   Referee\n  </a>\n  that automatically adds assembly-level structure references based on the Hex-Rays types. There's also an\n  <a href=\"https://github.com/joeleong/ida-referee\" rel=\"nofollow noreferrer\">\n   IDAPython port of Referee\n  </a>\n  . At the time of writing, neither the C++ nor the IDAPython version has been ported to the latest IDA 7.x SDK.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Rolf Rolles",
            "time": "Feb 5, 2019 at 5:41",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Albeoris",
                    "text": "<span class=\"comment-copy\">Just checked new \"global cross references to...\" in the last version of IDA. It works like a charm but you have to press \"Refresh\" button manually to get actual references to take into account your changes.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  (Since I can't add comments due reputation)\nI ported IDAPython version of Referee to IDA 7.x (works on 7.5 good so far)\nRepository is\n  <a href=\"https://github.com/gamelaster/ida-referee\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "GAMELASTER",
            "time": "Feb 19, 2021 at 7:20",
            "is_accepted": false,
            "comments": []
        }
    ]
}