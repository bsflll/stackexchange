{
    "title": "Determine NAND Flash chip type and dump contents",
    "link": "https://reverseengineering.stackexchange.com/questions/14237/determine-nand-flash-chip-type-and-dump-contents",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a USB stick with a NAND Flash chip that has only a few unhelpful markings on the chip. I desoldered the chip and I have a universal programmer, but I'm having trouble using it with my NAND Flash chip since I can't identify what make/model of chip I have.\n </p>\n <p>\n  Any suggestions on how to determine the NAND Flash chip type if there are not any helpful markings on the package? I don't have the USB BOM either...\n </p>\n <p>\n  I was thinking I might decap an exemplar chip and see if there are more helpful markings on the top layer of the silicon chip itself, but I'd prefer some kind of less invasive method.\n </p>\n <p>\n  Any suggestions or direction to external books/sites are very welcome.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 4,
    "views": "11k",
    "tags": [
        "memory",
        "usb",
        "flash"
    ],
    "user": "hft",
    "time": "Dec 23, 2016 at 21:07",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If it's really a NAND flash chip conforming to ONFI standard and if you have an universal programmer, it should be possible to read its ID.\n </p>\n <p>\n  <a href=\"http://www.onfi.org/~/media/onfi/specs/onfi_2_1_gold.pdf\" rel=\"nofollow noreferrer\">\n   www.onfi.org/~/media/onfi/specs/onfi_2_1_gold.pdf\n  </a>\n  — refer to section 5.5 \"Read ID Definition\"\n </p>\n <p>\n  Also, your programmer may prompt you to specify what kind of NAND chip you're trying to read in order to determine its pinout. Thing is, you could probably get usable results by selecting a NAND chip in the same package with the same (more or less) capacity. Pinout will likely be very similar or the same, ID will be different, but should at least be readable.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Vladislav Ivanov",
            "time": "Nov 20, 2017 at 7:09",
            "is_accepted": false,
            "comments": [
                {
                    "user": "rom1nux",
                    "text": "<span class=\"comment-copy\">Really usefull info</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The site flashboot.ru collects various utilities for working with USB flash drives, including identification tools which can detect the vendor and device ID of the device, and in some cases even the exact flash chip:\n </p>\n <p>\n  <a href=\"http://flashboot.ru/files/vidpid/\" rel=\"nofollow noreferrer\">\n   http://flashboot.ru/files/vidpid/\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Dec 24, 2016 at 10:01",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Igor certainly knows six or seven orders of magnitude more on this subject than me, but it seems to me that if you're trying to get at the flash chip, not the USB controller, you probably won't get that from the VID/PID.  I am probably wrong, bc Igor, and bc I'm unfamiliar with USB Flash Drive designs.\n </p>\n <p>\n  But if I'm right, and if it is an SPI chip, you can try to get the JEDEC manufacturer ID via a fairly standard SPI master command.  You'll need to figure out the pinout to talk to it via SPI, but if you have any markings on the USB controller chip you might be able to figure out which pins can be used for SPI. Do a continuity test to the pads where you removed the chip and figure out which pins on your flash chip are which SPI pins.  Wire it up and use something like the Adafruit FTDI 2232 breakout board or whatever you have on hand to try to run flashrom and ID the chip.  I wish I could remember the exact command over SPI to get back the JEDEC ID, but here's the JEDEC ID spec\n  <a href=\"http://www.softnology.biz/pdf/JEP106AR.pdf\" rel=\"nofollow noreferrer\">\n   http://www.softnology.biz/pdf/JEP106AR.pdf\n  </a>\n  .  Look at the flashrom code if you need to figure out the exact command that needs to be sent.  Sorry, this is not the most helpful answer in the world, but maybe points in a direction you can go.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "user19009",
            "time": "Jul 23, 2017 at 2:19",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">OP mentions specifically NAND, not SPI. They use quite different protocols and flashrom doesn't have any NAND support AFAIK.</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">BTW, some of the tools on the site I mentioned do know how to query the controller for the actual flash chip ID.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You should check this talk at\n  <a href=\"https://www.youtube.com/watch?v=hOKWTeiyy-Q\" rel=\"nofollow noreferrer\">\n   BlackHat 2014\n  </a>\n  and this one from Bunnie & Xobs at\n  <a href=\"https://www.youtube.com/watch?v=ruEn7TE4YMM\" rel=\"nofollow noreferrer\">\n   30CCC\n  </a>\n  .\n </p>\n <p>\n  I could go about some details but it's so vast, it is meaningless to try to explain the details of reversing a chip here. Decapping can be helpful if you're willing to probe the IC using needles and an oscilloscope and reverse engineer a protocol or extract data; or use a microscope to take snapshots which you could compare to some already existing chips, ... Here's a very nice\n  <a href=\"https://www.youtube.com/watch?v=aHx-XUA6f9g\" rel=\"nofollow noreferrer\">\n   Hackaday\n  </a>\n  talk with very interesting links and techniques.\n </p>\n <p>\n  I would recommend getting the data sheet of the chip first -if you can identify it- or check out the manufacturer on-line to see if there's any info about the end product in general that could lead to identifying the components or the manufacturer of the component; or if anybody tried to tinker with the same product or found that same chip in another product.\nUse the Chinese search engine, most of these chips are made in China and, for example, Baidu can return some helpful links and even documentation and tools.\nBear in mind that sometimes unmarked chips are knock-offs of well known chips, you can check a known Flash manufacturer data sheets and compare the pin positions and even probe the pins using an oscilloscope to see if they match the data sheet description.\n </p>\n <p>\n  If you have any deeper technical questions about the output of a process/analysis I'll be able to help more. You need to workout a set of thorough steps before you dive into reversing a chip because it can get VERY confusing at times.\n </p>\n <p>\n  <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.462.8967&rep=rep1&type=pdf\" rel=\"nofollow noreferrer\">\n   Helpful publication 1\n  </a>\n </p>\n <p>\n  <a href=\"http://engineering.nyu.edu/garg/sites/engineering.nyu.edu.garg/files/uploads/ndss218-elmassad%20(1).pdf\" rel=\"nofollow noreferrer\">\n   Helpful publication 2\n  </a>\n </p>\n <p>\n  <a href=\"https://www.cl.cam.ac.uk/~sps32/cardis2016_sem.pdf\" rel=\"nofollow noreferrer\">\n   Helpful publication 3\n  </a>\n </p>\n <p>\n  <a href=\"https://www.blackhat.com/docs/us-14/materials/us-14-Oh-Reverse-Engineering-Flash-Memory-For-Fun-And-Benefit-WP.pdf\" rel=\"nofollow noreferrer\">\n   Helpful publication 4\n  </a>\n </p>\n <p>\n  Check out these guys too :\n  <a href=\"https://hardsploit.io/\" rel=\"nofollow noreferrer\">\n   link\n  </a>\n  , they have developed a whole hardware platform for hardware reversing. Its quite expensive (700€ ~ 680$) but very handy, especially the chip database.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "yaspr",
            "time": "Nov 20, 2017 at 17:28",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Vladislav Ivanov",
                    "text": "<span class=\"comment-copy\">The vast majority of NAND ICs have similar/identical pinout and allow you to read ID without going to such extremities as decapping</span>",
                    "time": null
                },
                {
                    "user": "yaspr",
                    "text": "<span class=\"comment-copy\">I know, that was my point! Decapping is only necessary for advanced reversing of the flash chip.</span>",
                    "time": null
                }
            ]
        }
    ]
}