{
    "title": "Add new subroutine using IDA for ARM binary",
    "link": "https://reverseengineering.stackexchange.com/questions/14688/add-new-subroutine-using-ida-for-arm-binary",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to recreate a patch for an ARM binary. As it shows in attached picture, I have provided the before and after sections of file. In patched file, a new subroutine is added in a cave, and then it branches to an existing subroutine that has changed to an instruction.\n </p>\n <p>\n  My question is, how do you recreate such a patch? I know how to edit bytes in IDA, but not sure how to add new ones.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/DHFS2.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/DHFS2.jpg\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "1k",
    "tags": [
        "ida",
        "disassembly",
        "arm",
        "ios",
        "function-hooking"
    ],
    "user": "abuhun",
    "time": "Feb 18, 2017 at 11:04",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I realized this is done first by determining a code cave. Afterwards, just patch the binary using an application like Hex Fiend. The rest will show in IDA\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "abuhun",
            "time": "Feb 26, 2017 at 14:16",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can perform the task you're looking for using either one of the following approaches:\n </p>\n <ul>\n  <li>\n   Use the built-in IDA feature to assemble instructions and patch the binary available by accessing\n   <code>\n    Edit > Patch Program > Assembly\n   </code>\n   after highlighting the instruction you want to replace\n  </li>\n  <li>\n   Use\n   <a href=\"http://www.keystone-engine.org/keypatch/\" rel=\"nofollow noreferrer\">\n    Keypatch\n   </a>\n   as it adds support for more architectures than what IDA provides by default\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Michael Kiros",
            "time": "Feb 27, 2017 at 20:35",
            "is_accepted": false,
            "comments": []
        }
    ]
}