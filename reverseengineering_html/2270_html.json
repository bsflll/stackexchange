{
    "title": "Remote debugging with IDA and GDB",
    "link": "https://reverseengineering.stackexchange.com/questions/2270/remote-debugging-with-ida-and-gdb",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Recently I've run across an ELF file that I would like to debug using IDA.  I've used GDB for basic debugging but I would like to utilize IDA.  I've been researching for a while and can't seem to find a good tutorial.  I understand how to set IDA up for remote GDB debugging.  My question is how do I set it up on the remote/Ubuntu/GDB end.  Is there additional software that I have to install with GDB?  I've seen some stuff on gdbserver but I can't seem to get that working.  I've also seem some stuff on QEMU.  A little direction is greatly appreciated.\n </p>\n</div>\n</body></html>",
    "votes": "7",
    "answers": 2,
    "views": "18k",
    "tags": [
        "gdb",
        "ida",
        "debugging"
    ],
    "user": "RE Noob",
    "time": "Jun 17, 2013 at 1:39",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'd suggest you use IDA's linux_server for remote debugging , it's located somewhere in your installation.\n </p>\n <p>\n  You copy it to the remote machine and run it. And then in IDA you go Debugger -> Select Remote Linux Debugger. Then Debugging -> Process Options where you set the server IP and port, target location and params.\n </p>\n <p>\n  From then on, you just use IDA's debugger as you would locally. \nThe benefit of using IDA's linux_server is that you can script your debugger more easily.\n </p>\n</div>\n</body></html>",
            "votes": "6",
            "user": "0xea",
            "time": "Jun 17, 2013 at 1:09",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  With regard to your problem setting up gdbserver to run with Ubuntu - it should be sufficient to install the 'gdbserver' package from the universe repository. If it's a local file that you are debugging, you start the server using something like\n  <code>\n   gdbserver localhost:12345 a.out\n  </code>\n  where\n  <code>\n   a.out\n  </code>\n  is the executable and\n  <code>\n   12345\n  </code>\n  is the port number to connect on. That should be a server which you can connect to using IDA's \"Remote GDB debugger\" option.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "dingo_kinznerhook",
            "time": "Jun 19, 2013 at 13:25",
            "is_accepted": false,
            "comments": []
        }
    ]
}