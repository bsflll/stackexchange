{
    "title": "How to find out what stack frame EBP belongs to",
    "link": "https://reverseengineering.stackexchange.com/questions/26037/how-to-find-out-what-stack-frame-ebp-belongs-to",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  i'm newbie to all the subject of RE so this question may sound easy.\non OllyDbg i see a lot of references to EBP & i can not understand to which stack frame does EBP belongs to, since there are many pointers to SS:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/DUgEo.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/DUgEo.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "260",
    "tags": [
        "windows",
        "ollydbg"
    ],
    "user": "Daniel Benisti",
    "time": "Oct 3, 2020 at 16:00",
    "comments": [
        {
            "user": "Shane Reilly",
            "text": "<html><body><span class=\"comment-copy\">\n When\n <code>\n  ebp\n </code>\n is referenced, it usually belongs to the stack frame of the current function. At the beginning of the function, you usually will see a\n <code>\n  push ebp\n </code>\n and a\n <code>\n  mov esp, ebp\n </code>\n to set up the stack frame for the current function.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Daniel Benisti",
            "text": "<html><body><span class=\"comment-copy\">\n so in the image i posted the EBP belongs to the function i'm in & that function calls to more multiple functions?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Shane Reilly",
            "text": "<html><body><span class=\"comment-copy\">\n Most likely, yes. Inside those functions, they will also\n <code>\n  push ebp\n </code>\n and\n <code>\n  mov esp, ebp\n </code>\n to set up their own stack frames.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The Current ebp points to the previous ebp\n  \n\n  and by inference the call that setup the previous ebp\n </p>\n <p>\n  in windbg with a 32 bit binary this script will walk the stack you can use follow in dump in ollydbg to do the same\n </p>\n <pre><code>r $t0 = @eip\nr $t1 = @ebp\n.while (@$t1 !=0) \n{\n    .printf \"eip = %08x\\tebp = %08x\\t callee = %y\n\" , @$t0 ,@$t1,poi(@$t1+4)\n    r $t0 = poi(@$t1+4)\n    r $t1 = poi(@$t1)\n}\n</code></pre>\n <p>\n  executing the script\n </p>\n <pre><code>0:000> $$>a< e:\\stackwalk.wds\neip = 006a163a  ebp = 0023fa54   callee = calc!_initterm_e+0x1a1 (006b219a)\neip = 006b219a  ebp = 0023fae4   callee = kernel32!BaseThreadInitThunk+0xe (7659ed6c)\neip = 7659ed6c  ebp = 0023faf0   callee = ntdll!__RtlUserThreadStart+0x70 (77d237eb)\neip = 77d237eb  ebp = 0023fb30   callee = ntdll!_RtlUserThreadStart+0x1b (77d237be)\neip = 77d237be  ebp = 0023fb48   callee = 00000000\n0:000> k\nChildEBP RetAddr\n0023fa54 006b219a calc!WinMain+0x5\n0023fae4 7659ed6c calc!_initterm_e+0x1a1\n0023faf0 77d237eb kernel32!BaseThreadInitThunk+0xe\n0023fb30 77d237be ntdll!__RtlUserThreadStart+0x70\n0023fb48 00000000 ntdll!_RtlUserThreadStart+0x1b\n0:000>\n</code></pre>\n</div>\n</body></html>",
            "votes": "2",
            "user": "blabb",
            "time": "Oct 4, 2020 at 22:18",
            "is_accepted": false,
            "comments": []
        }
    ]
}