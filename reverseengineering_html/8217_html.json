{
    "title": "Ways to define portable executable bitness 64 vs 32",
    "link": "https://reverseengineering.stackexchange.com/questions/8217/ways-to-define-portable-executable-bitness-64-vs-32",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I found several ways to define the bitness of PE.\n </p>\n <ul>\n  <li>\n   <code>\n    IMAGE_FILE_HEADER\n   </code>\n   contains the/a (how do you choose an article type in such place?) field\n   <code>\n    Characteristics\n   </code>\n   that could be checked for\n   <code>\n    IMAGE_FILE_32BIT_MACHINE\n   </code>\n   .\n  </li>\n  <li>\n   <code>\n    IMAGE_OPTIONAL_HEADER\n   </code>\n   contains the field\n   <code>\n    Magic\n   </code>\n   switched between\n   <code>\n    IMAGE_NT_OPTIONAL_HDR32_MAGIC\n   </code>\n   ,\n   <code>\n    IMAGE_NT_OPTIONAL_HDR64_MAGIC\n   </code>\n   and some\n   <code>\n    IMAGE_ROM_OPTIONAL_HDR_MAGIC\n   </code>\n   .\n  </li>\n  <li>\n   <s>\n    <code>\n     IMAGE_FILE_HEADER\n    </code>\n    also contains Machine field that could be checked for\n    <ul>\n     <li>\n      0x8664 - x64\n     </li>\n     <li>\n      0xaa64 - ARMv8 in 64-bit mode\n     </li>\n     <li>\n      0x0200 - Intel Itanium processor family\n     </li>\n     <li>\n      0x0284 - 64-bit Alpha AXP.\n     </li>\n    </ul>\n   </s>\n  </li>\n </ul>\n <li>\n  <s>\n   Also\n   <code>\n    SizeOfOptionalHeader\n   </code>\n   in\n   <code>\n    IMAGE_FILE_HEADER\n   </code>\n   could be checked for one of two specific values.\n  </s>\n </li>\n <p>\n  Are all of them have the same meaning? Are there any difference, specific conditions, exceptional cases?\n </p>\n <hr/>\n <p>\n  I found that\n  <code>\n   Machine\n  </code>\n  field check is indirect way because the field is aimed to processor architecture defining. So it's indirect and unreliable as heuristic.\n  <code>\n   SizeOfOptionalHeader\n  </code>\n  varies even for the same bitness since some image directories can absent.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 2,
    "views": "791",
    "tags": [
        "windows",
        "pe",
        "executable",
        "binary"
    ],
    "user": "SerG",
    "time": "Feb 13, 2015 at 17:00",
    "comments": [
        {
            "user": "MrSynAckSter",
            "text": "<html><body><span class=\"comment-copy\">\n Is there any reason you can't just check for 64 bit registers in the decomp?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "SerG",
            "text": "<html><body><span class=\"comment-copy\">\n I look for truth. And I need fast and reliable way for automatic files processing.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <code>\n   IMAGE_OPTIONAL_HEADER->MAGIC\n  </code>\n  (which is not optional at all :] ) is what determines for the Windows OS Loader to load this as 32bit vs 64bit. Depending on the value at\n  <code>\n   IMAGE_OPTIONAL_HEADER->MAGIC\n  </code>\n  is how the loader will parse the rest of the\n  <code>\n   IMAGE_OPTIONAL_HEADER\n  </code>\n  .\n </p>\n <p>\n  And as stated\n  <code>\n   SizeOfOptionalHeader\n  </code>\n  can be use as a cross reference.\n </p>\n <p>\n  The IMAGE_FILE_HEADER->MAGIC is used to determine the intended CPU. Mainly use to determine how machine code should be interpret.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "k0ng0",
            "time": "Feb 12, 2015 at 21:22",
            "is_accepted": false,
            "comments": [
                {
                    "user": "SerG",
                    "text": "<span class=\"comment-copy\">As Magic is already located inside optional header structure, it's likely bitness is defined before memory after IMAGE_FILE_HEADER will be \"mapped\" to 32 or 64 -bit kind of optional header struct.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The Machine field will tell you the target platform, which includes its bitness, and the endianness of the section contents.  The PE header itself is little-endian (and the optional header is entirely optional for object files).\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "peter ferrie",
            "time": "Feb 15, 2015 at 4:19",
            "is_accepted": false,
            "comments": []
        }
    ]
}