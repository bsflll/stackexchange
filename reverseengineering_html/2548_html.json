{
    "title": "PDB v2.0 File Format documentation",
    "link": "https://reverseengineering.stackexchange.com/questions/2548/pdb-v2-0-file-format-documentation",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Where I can find such information? I've already read the undocumented windows 2000 secrets explanation of it but it isn't complete. For example the 3rd stream format isn't explained. I have looked at\n  <a href=\"https://code.google.com/p/pdbparser/\" rel=\"nofollow\">\n   this\n  </a>\n  , where some general info about the streams is given but nothing more.\n </p>\n</div>\n</body></html>",
    "votes": "7",
    "answers": 4,
    "views": "5k",
    "tags": [
        "file-format",
        "pdb"
    ],
    "user": "sasho648",
    "time": "Jul 31, 2013 at 16:55",
    "comments": [
        {
            "user": "sasho648",
            "text": "<html><body><span class=\"comment-copy\">\n Thanks for your answers! I looked at the links given. It really seems that this file format isn't very documented. I read this\n <a href=\"http://www.informit.com/articles/article.aspx?p=22685\" rel=\"nofollow noreferrer\">\n  article\n </a>\n and I'm wondering where this \"allocation bit array\" is stored in the file?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jonathan Dickinson",
            "text": "<html><body><span class=\"comment-copy\">\n If anyone is still looking for information I've nailed down reading and writing PDB 7.0 (MSF 7.00). The code is\n <i>\n  much\n </i>\n clearer than other projects so you might want to refer to it:\n <a href=\"https://github.com/jcdickinson/symblr/tree/master/Symblr.Core/Symbols/Pdb70\" rel=\"nofollow noreferrer\">\n  github.com/jcdickinson/symblr/tree/master/Symblr.Core/Symbols/…\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can find some information about PDB on the blog of PDBParse's\n  <a href=\"https://reverseengineering.stackexchange.com/users/257/brendan-dolan-gavitt\">\n   author\n  </a>\n  :\n </p>\n <ul>\n  <li>\n   <a href=\"http://moyix.blogspot.fr/2007/08/pdb-stream-decomposition.html\" rel=\"nofollow noreferrer\">\n    http://moyix.blogspot.fr/2007/08/pdb-stream-decomposition.html\n   </a>\n  </li>\n  <li>\n   <a href=\"http://moyix.blogspot.fr/2007/10/types-stream.html\" rel=\"nofollow noreferrer\">\n    http://moyix.blogspot.fr/2007/10/types-stream.html\n   </a>\n  </li>\n </ul>\n <p>\n  This article is a good resource about PDB :\n </p>\n <ul>\n  <li>\n   <a href=\"http://www.debuginfo.com/articles/debuginfomatch.html\" rel=\"nofollow noreferrer\">\n    http://www.debuginfo.com/articles/debuginfomatch.html\n   </a>\n  </li>\n </ul>\n <p>\n  Other link on the subject :\n </p>\n <ul>\n  <li>\n   <a href=\"http://www.informit.com/articles/article.aspx?p=22685\" rel=\"nofollow noreferrer\">\n    http://www.informit.com/articles/article.aspx?p=22685\n   </a>\n  </li>\n  <li>\n   <a href=\"http://www.informit.com/articles/article.aspx?p=22429&seqNum=5\" rel=\"nofollow noreferrer\">\n    http://www.informit.com/articles/article.aspx?p=22429&seqNum=5\n   </a>\n  </li>\n  <li>\n   <a href=\"http://www.wintellect.com/blogs/jrobbins/pdb-files-what-every-developer-must-know\" rel=\"nofollow noreferrer\">\n    http://www.wintellect.com/blogs/jrobbins/pdb-files-what-every-developer-must-know\n   </a>\n  </li>\n </ul>\n <p>\n  I hope you will find your happiness in these links ;)\n </p>\n</div>\n</body></html>",
            "votes": "7",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Here is something directly from Microsoft.\n </p>\n <p>\n  <a href=\"https://github.com/Microsoft/microsoft-pdb\">\n   https://github.com/Microsoft/microsoft-pdb\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "9",
            "user": "user1961213",
            "time": "Oct 30, 2015 at 20:20",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Jongware",
                    "text": "<span class=\"comment-copy\">Straight from the horse's mouth, as the saying goes: \"Open source, from Microsoft with love\". Well found! (How did you come across it?)</span>",
                    "time": null
                },
                {
                    "user": "phuclv",
                    "text": "<span class=\"comment-copy\">@usr2564301 probably he read some news about that when <a href=\"https://arstechnica.com/gadgets/2018/03/chrome-on-windows-ditches-microsofts-compiler-now-uses-clang/\" rel=\"nofollow noreferrer\">Google started working on switching to Clang</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Since the format is internal to Microsoft you likely won't find any official documentation. The best bet is various reverse engineering efforts on the format:\n </p>\n <ul>\n  <li>\n   <a href=\"https://code.google.com/p/pdbparser/\" rel=\"nofollow\">\n    PDB Parser\n   </a>\n   (the one you found)\n  </li>\n  <li>\n   <a href=\"https://code.google.com/p/pdbparse/\" rel=\"nofollow\">\n    PDBparse\n   </a>\n   (in Python)\n  </li>\n  <li>\n   <a href=\"http://www.winehq.org/\" rel=\"nofollow\">\n    Wine project\n   </a>\n   has a partial implementation of\n   <a href=\"http://source.winehq.org/source/dlls/dbghelp/\" rel=\"nofollow\">\n    dbghelp.dll\n   </a>\n   , including PDB parsing.\n  </li>\n </ul>\n <p>\n  P.S. I just remembered that there is an open-source Microsoft project called\n  <a href=\"http://ccimetadata.codeplex.com/\" rel=\"nofollow\">\n   \"CCI Metadata\"\n  </a>\n  which does provide some C# code for reading and writing PDB files. Not sure about the legality of using it to make your own PDB parser, but it does provide information which is probably as the close to official docs as you can get.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Igor Skochinsky",
            "time": "Jul 28, 2013 at 19:24",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This is what I've found:\n </p>\n <ul>\n  <li>\n   <a href=\"https://www.mandiant.com/blog/exploring-symbol-type-information-pdbxtract/\" rel=\"nofollow noreferrer\">\n    Exploring Symbol Type Information with PdbXtract\n   </a>\n   - from Mendiat.\n  </li>\n </ul>\n <blockquote>\n  <p>\n   PdbXtract is not a pure PDB parser. It only extracts type information using Microsoft’s DebugInterface Access (DIA) COM.  If you are interested in just parsing/dumping raw PDB information, there are a few alternatives out there to DIA, including Volatility’s open source pdbparse (\n   <a href=\"http://code.google.com/p/pdbparse/\" rel=\"nofollow noreferrer\">\n    http://code.google.com/p/pdbparse/\n   </a>\n   ) or the PDB utility that comes with the Undocumented Windows 2000 Secrets book.  However, most of the practical tools I have seen that operate on PDB’s use DIA, including Microsoft’s own Dia2dump, this one\n   <a href=\"http://www.codeproject.com/Articles/37456/How-To-Inspect-the-Content-of-a-Program-Database-P\" rel=\"nofollow noreferrer\">\n    http://www.codeproject.com/Articles/37456/How-To-Inspect-the-Content-of-a-Program-Database-P\n   </a>\n   and this one\n   <a href=\"http://www.ishani.org/web/articles/obsolete/pdb-cracking-tool/\" rel=\"nofollow noreferrer\">\n    http://www.ishani.org/web/articles/obsolete/pdb-cracking-tool/\n   </a>\n   , to name a few.  To reiterate, PdbXtract does not parse or capture the wealth of other information available in a PDB, including:  functions, debug streams, modules, publics, globals, files, section information, injected sources, source files, OEM specific types, compilands, and others.\n  </p>\n </blockquote>\n <ul>\n  <li>\n   <a href=\"https://stackoverflow.com/questions/2040132/help-me-to-read-pdb-file\">\n    Help me to read .pdb file\n   </a>\n   - from stackoverflow\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "4",
            "user": "0xC0000022L",
            "time": "Jul 5, 2018 at 9:38",
            "is_accepted": false,
            "comments": []
        }
    ]
}