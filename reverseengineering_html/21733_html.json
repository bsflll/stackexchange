{
    "title": "Change instruction test eax, eax to text eax, 1",
    "link": "https://reverseengineering.stackexchange.com/questions/21733/change-instruction-test-eax-eax-to-text-eax-1",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to change an instruction in assembly. Try with\n  <code>\n   test eax, eax\n  </code>\n  to\n  <code>\n   test eax, 1\n  </code>\n  . I try modify the opcodes. \nFor example opcode of\n  <code>\n   test eax, eax\n  </code>\n  :\n  <code>\n   85c0\n  </code>\n  <a href=\"https://i.sstatic.net/lTkRF.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/lTkRF.png\"/>\n  </a>\n </p>\n <p>\n  Try to understand why is 85c0 with this table:\n  <a href=\"https://i.sstatic.net/CbEmW.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/CbEmW.png\"/>\n  </a>\n </p>\n <p>\n  <code>\n   85\n  </code>\n  comes from 'test', ok. But\n  <code>\n   c0\n  </code>\n  from\n  <code>\n   EB lb\n  </code>\n  ? I'm a little confused how to create that opcode and how to modify and get\n  <code>\n   test eax, 1\n  </code>\n  .\n </p>\n <p>\n  Thanks, appreciate any help!\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "disassembly",
        "assembly",
        "radare2",
        "patch-reversing"
    ],
    "user": "felix89",
    "time": "Jul 22, 2019 at 6:56",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<html><body><span class=\"comment-copy\">\n This table shows only the first byte. There has to be more on that page that allows to  say what are the next bytes.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "felix89",
            "text": "<html><body><span class=\"comment-copy\">\n Thanks for the answer. Great explanation @bart1e algo the page, it helps a lot!:)\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The opcode you are interested in is\n  <code>\n   a9 01 00 00 00\n  </code>\n  standing for\n  <code>\n   test eax, 1\n  </code>\n  .\n </p>\n <p>\n  The easiest way to get the opcode of assembly instruction is just to\n  <strong>\n   compile\n  </strong>\n  it and\n  <strong>\n   disassemble\n  </strong>\n  the result (for example using\n  <a href=\"https://www.nasm.us/\" rel=\"noreferrer\">\n   nasm\n  </a>\n  and then\n  <a href=\"https://linux.die.net/man/1/objdump\" rel=\"noreferrer\">\n   objdump\n  </a>\n  or simply\n  <a href=\"https://defuse.ca/online-x86-assembler.htm\" rel=\"noreferrer\">\n   this site\n  </a>\n  ) - this way you don't have to remember anything about the opcodes which are sometimes weird.\n </p>\n <p>\n  However, you want to patch 2 bytes instruction and the opcode I gave is 5 bytes. As a workaround, you can do\n  <code>\n   test al, 1\n  </code>\n  (\n  <code>\n   a8 01\n  </code>\n  ), which will do the same (will do\n  <code>\n   test\n  </code>\n  only on the least significant byte of\n  <code>\n   eax\n  </code>\n  ).\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "bart1e",
            "time": "Jul 22, 2019 at 6:03",
            "is_accepted": true,
            "comments": []
        }
    ]
}