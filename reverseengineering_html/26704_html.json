{
    "title": "Assuming x is a number smaller than 0xff what happens to x after the assignment LOBYTE(x)=x-1?",
    "link": "https://reverseengineering.stackexchange.com/questions/26704/assuming-x-is-a-number-smaller-than-0xff-what-happens-to-x-after-the-assignment",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I understand that\n  <a href=\"https://github.com/nihilus/hexrays_tools/blob/master/code/defs.h\" rel=\"nofollow noreferrer\">\n   LOBYTE\n  </a>\n  is an IDA macro for retrieving the lower byte of a variable. My question is what is the difference between the result of\n  <code>\n   x=x-1\n  </code>\n  and\n  <code>\n   LOBYTE(x)=x-1\n  </code>\n  when\n  <code>\n   x\n  </code>\n  is smaller than or equal to\n  <code>\n   0xff\n  </code>\n  ? I should add that I'm implicitly assuming that\n  <code>\n   x>0\n  </code>\n  . Thank you!\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "118",
    "tags": [
        "ida",
        "assembly",
        "c"
    ],
    "user": "Newbie",
    "time": "Jan 4, 2021 at 23:16",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <pre><code>Quote From Link     \n#define LOBYTE(x)   (*((_BYTE*)&(x))) \n</code></pre>\n <p>\n  is that a hypothetical query x is treated as address\n  \n\n  so x-1 will be a 32 bit type on a x86 machine so theoretically\n  \n\n  you cannot assign a 32 bit type to an 8 bit type\n  \n\n  LOBYTE(x) will be a byte and not an address so again\ntheoretically you cannot assign a byte to a byte\n </p>\n <p>\n  LOBYTE(x) is an\n  <strong>\n   AND\n  </strong>\n  operation that extracts the unsigned byte from a specific address\n </p>\n <pre><code>x as address    contents         LOBYTE(x)     (byte *)&x = LOBYTE(x)-1\n0x00400000      0xffffffff       0x000000ff    byte[0x004000000] = 0x000000ff -1 =0x000000fe\n</code></pre>\n <p>\n  so if you look as a DWORD\n  <strong>\n   0x400000 will now contain 0xfffffffe\n  </strong>\n </p>\n <p>\n  demo using a python script\n </p>\n <pre><code>:\\>cat LOBYTE.py\nimport ctypes\n\ndef LOBYTE(arg):\n    return arg.value & 0x000000ff\n\nx = ctypes.c_ulong(0xffffffff)\nprint( \"x as address\" , ctypes.byref(x))\nprint( \"x holds\"  , hex(x.value))\nprint(\"result of LOBYTE(x)\", LOBYTE(x))\nx.value = ( (x.value & 0xffffff00 ) | LOBYTE(x)- 1 )\nprint( \"x holds\"  , hex(x.value))\n\n\n:\\>python LOBYTE.py\nx as address <cparam 'P' (017CA098)>\nx holds 0xffffffff\nresult of LOBYTE(x) 255\nx holds 0xfffffffe\n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "blabb",
            "time": "Jan 5, 2021 at 17:02",
            "is_accepted": true,
            "comments": []
        }
    ]
}