{
    "title": "How to make a apk packages manually like other linux distro packages?",
    "link": "https://reverseengineering.stackexchange.com/questions/32650/how-to-make-a-apk-packages-manually-like-other-linux-distro-packages",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Because Android Linux-based and it has its own package format named APK, so it will be possible to create\n  <a href=\"https://en.wikipedia.org/wiki/Apk_(file_format)\" rel=\"nofollow noreferrer\">\n   APK packages\n  </a>\n  manually from a specification like a specification for\n  <code>\n   pacman\n  </code>\n  packages in Arch Linux.\n </p>\n <p>\n  But I can't find a Specification for APK packages as self-explanatory as other distro packages like\n  <a href=\"https://wiki.archlinux.org/title/Creating_packages\" rel=\"nofollow noreferrer\">\n   <code>\n    pacman\n   </code>\n   (Arch) specification\n  </a>\n  .\n </p>\n <p>\n  How to make an APK package by packing compiled files and others manually like for Linux distros?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "63",
    "tags": [
        "android",
        "apk"
    ],
    "user": "Smm",
    "time": "Jan 17, 2024 at 14:39",
    "comments": [
        {
            "user": "sudhackar",
            "text": "<html><body><span class=\"comment-copy\">\n Hello and welcome to RE.SE! I can't see how this is related to reverse engineering.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n @Smm Welcome to RE.SE. Android can hardly be described as a GNU/Linux distro. Because the GNU part is missing. Sure, you can skip the fact that conventionally Linux distros are defined by kernel+userland and insist on it being purely about the Linux kernel, but even then the relationship to other Linux package formats is distant. APKs are an extension of JARs which themselves are glorified ZIP files.\n <a href=\"https://apktool.org/\" rel=\"nofollow noreferrer\">\n  apktool\n </a>\n can do what you want. That's the only relation I see to reverse engineering (!= RCE). As it stands I have to agree with sudhackar.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Even Arch uses tooling for package creation (\n <code>\n  makepkg(8)\n </code>\n ,\n <code>\n  pacman(8)\n </code>\n ), so I am not sure what it is you want exactly. So you should edit your question to clarify.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Smm",
            "text": "<html><body><span class=\"comment-copy\">\n Thanks , for editing kindly mr \"0xC0000022L\"\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Smm",
            "text": "<html><body><span class=\"comment-copy\">\n Yes \"arch uses tooling for package Creation\"  but its enough transparent about how its works for example I know it moves some files into some standard directories and track them  its simple as I can create a package manager like this of Linux but I can't reach transparency like this in apk files and how they operate also how to pack them in most optimized way what community you suggest to move question into it ?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  From reading your question, I think you're trying to build a command line package manager & compiler for android. Cool & complicated project, but I can atleast point you out to a direction.\n </p>\n <p>\n  All android apks are assembled & compiled through gradle.\nWhile compiling an android app on Android Studio, you'll see gradle in action helping to compile the app.\n </p>\n <p>\n  You can compile the entire app from source through command line using gradlew.bat/sh scripts that android studio generates.\n </p>\n <p>\n  Essentially, the script downloads the compatible gradle version defined in configuration files & uses android SDK & JDK present in the environment.\n </p>\n <p>\n  That gradlew script is where you should start digging.\n </p>\n <p>\n  Useful links:\n  <a href=\"https://developer.android.com/build/building-cmdline\" rel=\"nofollow noreferrer\">\n   https://developer.android.com/build/building-cmdline\n  </a>\n </p>\n <p>\n  Similar Project that's been running for a while:\n  <a href=\"https://github.com/AndroidIDEOfficial/AndroidIDE\" rel=\"nofollow noreferrer\">\n   https://github.com/AndroidIDEOfficial/AndroidIDE\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Vansh Santoshi",
            "time": "Jul 22, 2024 at 9:39",
            "is_accepted": false,
            "comments": []
        }
    ]
}