{
    "title": "How to parse objdump output data?",
    "link": "https://reverseengineering.stackexchange.com/questions/26253/how-to-parse-objdump-output-data",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm somehow newbe in reverse engineering and currently I'm reading\n  <a href=\"https://github.com/ckonstantinou/re4b/blob/master/RE4B-EN.pdf\" rel=\"nofollow noreferrer\">\n   RE4B\n  </a>\n  book.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/pHUSw.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/pHUSw.jpg\"/>\n  </a>\n </p>\n <p>\n  In the image above:\n </p>\n <ol>\n  <li>\n   I can't figure out the role of\n   <code>\n    s\n   </code>\n   in the functions\n   <code>\n    f1\n   </code>\n   and\n   <code>\n    f2\n   </code>\n   . As far as I know, based on the last line in the image (i.e.\n   <code>\n    s     db 'world', 0xa, 0\n   </code>\n   ), the variable\n   <code>\n    s\n   </code>\n   is a pointer to the beginning of\n   <em>\n    world\n   </em>\n   string. So, why this value is over-writed with\n   <em>\n    -1C\n   </em>\n   in the functions? (\n   <code>\n    s = dword ptr -1Ch\n   </code>\n   )\n  </li>\n  <li>\n   As you know, we can use stack to pass function arguments. The question is why the compiler used\n   <code>\n    mov [esp+1Ch+s], offset s ; \"world\n\"\n   </code>\n   instead of\n   <code>\n    mov [esp], offset s ; \"world\n\"\n   </code>\n   ?\n  </li>\n </ol>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "419",
    "tags": [
        "disassembly",
        "objdump"
    ],
    "user": "Ebrahim Ghasemi",
    "time": "Nov 5, 2020 at 11:37",
    "comments": [],
    "answers_data": []
}