{
    "title": "Monitor all changes done by function",
    "link": "https://reverseengineering.stackexchange.com/questions/19317/monitor-all-changes-done-by-function",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  What is the easiest way to track all changes before and after a specific function is executed.\nI know I can trace instruction but that may yield a long list of all command executed.\nI want to stop the debugger before a function is executed and compare with the changes after.\n </p>\n <p>\n  How can it be accomplished?\n </p>\n <p>\n  Thank you,\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "230",
    "tags": [
        "ida",
        "patch-reversing"
    ],
    "user": "dandan",
    "time": "Sep 12, 2018 at 13:11",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Set hooks at all memory allocation functions, mark all writeable memory pages as guard pages. Handle all the STATUS_GUARD_PAGE_VIOLATION exceptions caused by the code when it tries to write.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Anton Kukoba",
            "time": "Sep 12, 2018 at 14:07",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Let's assume You only need to see the changes, and not to understand what they are and how/why they were made\n </p>\n <p>\n  You can do something like this:\n </p>\n <ol>\n  <li>\n   Start process under debugger and run to the specific start of the function. Put breakpoint on the end of function as well  Suspend all other threads.\n  </li>\n  <li>\n   <p>\n    Perform full process memory dump\n   </p>\n   <p>\n    2.1 For windows - use windbg command\n    <code>\n     .writemem c:\\output\\start_address.dmp start_address end_address\n    </code>\n    . Or use  procdump:\n    <a href=\"https://docs.microsoft.com/en-us/sysinternals/downloads/procdump\" rel=\"nofollow noreferrer\">\n     https://docs.microsoft.com/en-us/sysinternals/downloads/procdump\n    </a>\n   </p>\n   <p>\n    2.2 For linux - use\n    <code>\n     cat /dev/[pid]/maps\n    </code>\n    and then from GDB make dumps:\n   </p>\n   <p>\n    <code>\n     dump memory /output/memory_start_address start_address end_address\n    </code>\n   </p>\n  </li>\n  <li>\n   <p>\n    Run to the end of function, perform [2] again in another directory\n   </p>\n  </li>\n  <li>\n   Compare between two dumps to see all the changes [Notepad++]\n  </li>\n  <li>\n   If needed - confirm your findings with RE of the function.\n  </li>\n </ol>\n <p>\n  Good luck\n </p>\n <p>\n  D.L.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Denis Laskov",
            "time": "Sep 12, 2018 at 16:23",
            "is_accepted": false,
            "comments": []
        }
    ]
}