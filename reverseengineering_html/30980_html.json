{
    "title": "How find all kernel functions called by a driver in windows 11",
    "link": "https://reverseengineering.stackexchange.com/questions/30980/how-find-all-kernel-functions-called-by-a-driver-in-windows-11",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am working on a\n  <strong>\n   highly obfuscated\n  </strong>\n  driver that is\n  <strong>\n   virtualized\n  </strong>\n  . In an attempt to work on this driver I asked a question about some python scripts which turned out not to be effective at all so I decided to delete that question and ask my question directly by explaining all the details so maybe I can find a better solution for my problem.\n </p>\n <p>\n  Driver size is about\n  <code>\n   3mb\n  </code>\n  and it is\n  <strong>\n   packed\n  </strong>\n  and when it's loaded on memory it gets around\n  <code>\n   6mb\n  </code>\n  which shows how much\n  <strong>\n   garbage code\n  </strong>\n  is actually there, it used anti static analysis methods like\n  <strong>\n   jumping to different locations by register\n  </strong>\n  , calling\n  <code>\n   API\n  </code>\n  functions using\n  <code>\n   push\n  </code>\n  and\n  <code>\n   ret\n  </code>\n  instructions and getting\n  <code>\n   API\n  </code>\n  addresses using\n  <strong>\n   brute force\n  </strong>\n  and many more methods that I am not aware.\n </p>\n <p>\n  Now when I am using\n  <code>\n   windbg\n  </code>\n  to analyze the driver I tried the\n  <code>\n   ta\n  </code>\n  instruction which was suggested in the previous question about python script,\n  <strong>\n   even 6 hours\n  </strong>\n  was not enough to get to that address. As a result I thought about the ideas below but I am not sure if they are working or if there is any open source tool for these ideas so I would really appreciate it if anyone can give me a solution to this problem.\n </p>\n <ol>\n  <li>\n   <p>\n    Using\n    <code>\n     DTrace\n    </code>\n    is one of the ideas that I tried, the problem is, driver detecting both\n    <strong>\n     debugger\n    </strong>\n    and my\n    <strong>\n     virtual machine\n    </strong>\n    so when I am using\n    <code>\n     sc\n    </code>\n    command to run the driver, its getting\nclosed immediately so I do not know how can I use\n    <code>\n     DTrace\n    </code>\n    since I am not familiar that much\nwith the tool.\n   </p>\n  </li>\n  <li>\n   <p>\n    Using or writing an\n    <code>\n     IRP\n    </code>\n    tracker so I can find out what functions get called when I am using\n    <code>\n     sc\n    </code>\n    command. I found out\nOSR has a tool for this purpose but sadly it is not working for windows 11 but maybe there\nis an open source tool for this idea.\n   </p>\n  </li>\n </ol>\n <p>\n  Tldr; Working on a virtualized and heavily mutated driver with tons of fake calls that hide all import functions and getting addresses using brute forcing memory I need a way to find all those functions.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "254",
    "tags": [
        "windows",
        "windbg",
        "obfuscation",
        "kernel-mode",
        "virtualizers"
    ],
    "user": "user19819208",
    "time": "Oct 10, 2022 at 15:01",
    "comments": [
        {
            "user": "Mega Tonnage",
            "text": "<html><body><span class=\"comment-copy\">\n You might be better off working on the driver when it isn't loaded, maybe copy the binary to another system and analyse it statically so that you can disable the debugger detection. I say driver but this sounds like a rootkit or endpoint security product.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}