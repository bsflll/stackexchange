{
    "title": "Custom Chromium build - find registered extension's JS code",
    "link": "https://reverseengineering.stackexchange.com/questions/29696/custom-chromium-build-find-registered-extensions-js-code",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a custom chromium browser build which has a bunch of \"native\" functions which I would like to have definitions for.\n </p>\n <p>\n  Apparently, these are registered as en extension using this function:\n  <code>\n   Chromium.Remote.CfrRuntime.RegisterExtension(System.String,System.String,Chromium.Remote.CfrV8Handler)\n  </code>\n  which I was able to find in the ChromiumFX.dll.\n </p>\n <p>\n  I found this in the definition:\n </p>\n <blockquote>\n  <p>\n   \"Register a new V8 extension with the specified JavaScript extension\ncode and handler. Functions implemented by the handler are prototyped\nusing the keyword 'native'. The calling of a native function is\nrestricted to the scope in which the prototype of the native function\nis defined. This function may only be called on the render process\nmain thread.\"\n  </p>\n </blockquote>\n <p>\n  I'm a total reverse engineering noob so don't really know what I'm doing. I found the function using dnSpy but that's about it.\n </p>\n <p>\n  I tried looking into extracting the function definitions right from Chrome but apparently in the build they're using you can't do that. Or at least I couldn't find a way.\n </p>\n <p>\n  Is there a somewhat easy way of achieving what I want?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "121",
    "tags": [
        "dll",
        "dnspy"
    ],
    "user": "Seminko",
    "time": "Dec 9, 2021 at 21:04",
    "comments": [],
    "answers_data": []
}