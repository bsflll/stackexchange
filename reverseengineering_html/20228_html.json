{
    "title": "Help with a pointer",
    "link": "https://reverseengineering.stackexchange.com/questions/20228/help-with-a-pointer",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Sorry for this stupid question. It's late here and I've been kinda stuck for a while over this so I hope someone here can answer this easily.\n </p>\n <p>\n  In CheatEngine, 028FA190+374 is pointing to 028F1788. When I type in 028FA190+374 in the calculator I get 28FA504. Can someone explain me why this is different?\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/54OwI.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"Picture 1\" src=\"https://i.sstatic.net/54OwI.jpg\"/>\n  </a>\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/G5maB.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"Picture 2\" src=\"https://i.sstatic.net/G5maB.jpg\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 1,
    "views": "178",
    "tags": [
        "hex",
        "hexadecimal",
        "cheat-engine"
    ],
    "user": "Christian Handest",
    "time": "Dec 29, 2018 at 22:34",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It's different, because it isn't just\n  <code>\n   0x28FA190 + 0x374\n  </code>\n  , but it's\n  <code>\n   *(0x28FA190 + 0x374)\n  </code>\n  .\n </p>\n <p>\n  <code>\n   0x28FA190\n  </code>\n  is a base address, probably of a structure, and\n  <code>\n   0x374\n  </code>\n  is an offset, when you sum these values and dereference the result, you get value of a field that's\n  <code>\n   0x374\n  </code>\n  bytes away from the beginning of this structure. This field seems to be a pointer, that's why it's value is also an address, but it could contain any value.\n </p>\n <pre><code>struct A\n{\n  char padding[0x374]; // occupy the first 0x374 bytes, so that myPointer's address is address of this structure + 0x374 (i.e. (DWORD)this + 0x374)\n\n  int* myPointer;\n};\n\nA a;\n\nint valueOfMyPointer = **(int**)((DWORD)&a + 0x374); // valueOfMyPointer = *a.myPointer;\n</code></pre>\n <p>\n  You need to explicitly cast\n  <code>\n   &a\n  </code>\n  to\n  <code>\n   DWORD\n  </code>\n  (aka\n  <code>\n   unsigned long\n  </code>\n  ), because of pointer arithmetic - if you would do\n  <code>\n   &a + 0x374\n  </code>\n  , the result would actually be\n  <code>\n   (DWORD)&a + 0x374 * sizeof(a)\n  </code>\n  .\n </p>\n <p>\n  You can also write the entire expression from your screen as following:\n </p>\n <p>\n  <code>\n   uint32_t result = *(DWORD*)(*(DWORD*)((DWORD)GetModuleHandle(\"ac_client.exe\") + 0x374) + 0x14);\n  </code>\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "anx199",
            "time": "Dec 29, 2018 at 23:21",
            "is_accepted": false,
            "comments": []
        }
    ]
}