{
    "title": "Analyzing and deobfuscating complex JS code [duplicate]",
    "link": "https://reverseengineering.stackexchange.com/questions/19980/analyzing-and-deobfuscating-complex-js-code",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         This question already has answers here\n        </b>\n        :\n       </div>\n      </div>\n     </div>\n    </div>\n    <div class=\"flex--item mb0 mt4\">\n     <a dir=\"ltr\" href=\"/questions/1436/analyzing-highly-obfuscated-javascript\">\n      Analyzing highly obfuscated JavaScript\n     </a>\n     <span class=\"question-originals-answer-count\">\n      (9 answers)\n     </span>\n    </div>\n    <div class=\"flex--item mb0 mt8\">\n     Closed\n     <span class=\"relativetime\" title=\"2018-11-27 23:43:46Z\">\n      6 years ago\n     </span>\n     .\n    </div>\n   </div>\n  </aside>\n </div>\n <p>\n  I am looking to reverse engineer a very ugly piece of JS\n  <a href=\"https://assets.supremenewyork.com/assets/pooky.min.e89860221b9126c88148.js\" rel=\"nofollow noreferrer\">\n   found here\n  </a>\n  .\n </p>\n <p>\n  As far as I can tell, this script generates and sets some cookies on my browser that identify it on the site. Deobfuscating it seems extremely difficult as it is encrypted by Jscrambler and it is so large that seemingly no site such as\n  <a href=\"https://beautifier.io/\" rel=\"nofollow noreferrer\">\n   https://beautifier.io/\n  </a>\n  can do anything with it.\n </p>\n <p>\n  The goal is to be able to generate these cookies manually and post them to the site so that I do not need a browser to access the site.\n </p>\n <p>\n  My questions are:\n </p>\n <p>\n  1) Is there a way to debug this code in such a s way as to identify which lines generate and set the cookies? I have tried setting breakpoints on cookie set which did not seem to help.\n </p>\n <p>\n  2) Can this be deobfuscated easily by a JS noobie such as myself and what tools should I be using?\n </p>\n <p>\n  EDIT: If anyone can get involved I would be willing to compensate.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "debugging",
        "obfuscation",
        "javascript"
    ],
    "user": "Joxrox",
    "time": "6 years ago",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n You could always attempt to instrument one of the open source JS engines (V8 comes to mind) and debug it there ... of course if the JS script in question relies on the DOM being available, you may have to improvise.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user202729",
            "text": "<html><body><span class=\"comment-copy\">\n The easier way would be to actually use a browser. Even if it's in a script, there are\n <a href=\"https://en.wikipedia.org/wiki/Headless_browser\" rel=\"nofollow noreferrer\">\n  headless browsers\n </a>\n .\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Johann Aydinbas",
            "text": "<html><body><span class=\"comment-copy\">\n Are you still interested in this question?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It requires only a huge amount of time, but there is no JavaScript code that cannot be deobfuscated.\n </p>\n <p>\n  For the first time here I see a piece of obfuscated js without any clear weakness.\n </p>\n <p>\n  But start point after beauty is to find basic var assignment and then accurately replace occurrences of the var with its value\n </p>\n <p>\n  Reiterate\n </p>\n <h2>\n  Step 1\n </h2>\n <p>\n  Replace every\n  <code>\n   ;\n  </code>\n  with\n  <code>\n   ;\n\n  </code>\n  . To fo it, you must use an editor capable of regexp replacing, like VSCode or Sublime Text (and a lot of others)\nI got one and only one instruction per line\n </p>\n <h2>\n  Step 2\n </h2>\n <p>\n  Look at first assignment\n </p>\n <pre><code>T8jj.W4C=\"3421\";\n</code></pre>\n <p>\n  I will replace every occurence of\n  <code>\n   T8jj.h6C\n  </code>\n  in the following code with the value\n  <code>\n   \"3063\"\n  </code>\n  . But before, using regex search, I will ensure that there is only ONE occurrency of assignment, otherwise I will do a more delicate replacement.\n </p>\n <p>\n  In this case, only one assignment! Good, so use a regexp to replace\n </p>\n <pre><code>\\bT8jj\\.W4C\\b\n</code></pre>\n <p>\n  with\n </p>\n <pre><code>\"3421\"\n</code></pre>\n <blockquote>\n  <p>\n   Note !!!! we used word separator and entered the dot as escaped, because otherwiser you could mis-replace ASDAS\n   <strong>\n    T8jj\n   </strong>\n   E\n   <strong>\n    W4CS\n   </strong>\n   DFSDFD and this will create bugs !\n  </p>\n </blockquote>\n <p>\n  The first regexp avoid to change eventually future occurrency of new. Do not forget trailing\n  <code>\n   \"\n  </code>\n  because are syntattically important for js.\n  <code>\n   3421\n  </code>\n  is an integer,\n  <code>\n   \"3421\"\n  </code>\n  is a string.\n </p>\n <p>\n  For example, at roww 22233 this replaces\n </p>\n <pre><code>I(g9L.r3y(+T8jj.W4C));\n</code></pre>\n <p>\n  with\n </p>\n <pre><code>I(g9L.r3y(+\"3421\"));\n</code></pre>\n <p>\n  So string or numeric is very different !\n </p>\n <blockquote>\n  <p>\n   You now think \"I can remove the first line, because there is no more need for it; every referring point has now got the litteral value.\"\n  Wrong ! Some obfuscator use string concatenation and other techs to keep you in a trap, so never remove code !\n  </p>\n </blockquote>\n <p>\n  Only 44042 rows remaining !\n </p>\n <h2>\n  Reiterate\n </h2>\n <pre><code>bx8jj.h8C \n</code></pre>\n <p>\n  has more than one assignment, so must replace with \"3871\" only occurency\n  <em>\n   before\n  </em>\n  the next assignment, there same var receved assigned value of \"1964\"\n </p>\n <h2>\n  Suggestions\n </h2>\n <ul>\n  <li>\n   Use trailing \\b and replace . with . when searching;\n  </li>\n  <li>\n   If you got only one result or no result at all, do not delete assignment; some point in the obfuscated code could use string concatenation or use unicode chars and evals to read the variable value;\n  </li>\n  <li>\n   Replace occurrencies of unicode-only strings with their litteral value; this will speed up code deobfuscation; for example\n   <code>\n    '\\x6e\\x65\\x73\\x74\\x65\\x64'\n   </code>\n   is\n   <code>\n    'nested'\n   </code>\n   ;\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "0",
            "user": "realtebo",
            "time": "Dec 1, 2018 at 12:08",
            "is_accepted": true,
            "comments": []
        }
    ]
}