{
    "title": "Extracting a variable from an executable",
    "link": "https://reverseengineering.stackexchange.com/questions/4710/extracting-a-variable-from-an-executable",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'd like to extract the\n  <code>\n   M__hello_\n  </code>\n  variable of this\n  <a href=\"http://svn.python.org/view/python/trunk/Python/frozen.c?revision=81029&view=markup\" rel=\"nofollow\">\n   code\n  </a>\n  from the executable (for learning purpose). I'd like to have this array back in a variable in any programming language Do you know how can I do this ?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "367",
    "tags": [
        "executable"
    ],
    "user": "Maxence Henneron",
    "time": "Jun 26, 2014 at 13:19",
    "comments": [
        {
            "user": "Dominik Antal",
            "text": "<html><body><span class=\"comment-copy\">\n Please clarify what you mean by \"extract\" the variable.  It's a static variable, if you meant the value of the variable, it's right there. Here is the string representation of that array : \"cs\tdGHdS(sHello world...N((((shello.pys?s\"\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Find the offset of the variable in memory. Using either your debugger or a look like Cheat Engine.\n </p>\n <p>\n  After this you can use\n  <code>\n   ReadProcessMemory()\n  </code>\n  from\n  <code>\n   kernel32.dll\n  </code>\n  in Windows to read the variable in your own program.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "perror",
            "time": "Jun 26, 2014 at 13:19",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Maxence Henneron",
                    "text": "<span class=\"comment-copy\">Thanks for the answer. After looking at how an executable is made, I found that the variable's content was stored in a data segment, since it's a global variable. With p7zip, I got this data segment, but is there a way to parse it or to know where each fragments begin and end by disassembling the EXE?  (I'm knew to reverse engineering, so I'm just wondering how everything is working.)</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">strings -o msgbox.exe | findstr Great ---------------------------------------                                                             2073:Win32 Assembly is Great!  --------------------------------                                                      strings is from sysinternals findstr is an inbox utility</span>",
                    "time": null
                }
            ]
        }
    ]
}