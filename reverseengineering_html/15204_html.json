{
    "title": "Why can't gdb read memory if pwntools is used to send input?",
    "link": "https://reverseengineering.stackexchange.com/questions/15204/why-cant-gdb-read-memory-if-pwntools-is-used-to-send-input",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Here is the program which\n  <code>\n   gdb\n  </code>\n  is attached to:\n </p>\n <p>\n  <strong>\n   prog.c\n  </strong>\n </p>\n <pre><code>#include <stdio.h>\n\nvoid dummy(char* s)\n{\n\n}\n\nint main()\n{\n    char buf[512];\n    scanf(\"%s\", buf);\n    printf(\"%s\n\", buf);\n    dummy(buf);\n    return 0;\n}\n</code></pre>\n <p>\n  It is compiled with:\n </p>\n <pre><code>gcc prog.c o prog\n</code></pre>\n <p>\n  This is the script which drives the program:\n </p>\n <pre><code>from pwn import *\n\np = process(\"./prog\")\nraw_input('>>')\np.sendline('A')\n</code></pre>\n <p>\n  Here's the sequence of operation I perform:\n </p>\n <ol>\n  <li>\n   Run the script in one bash tab. It launches\n   <code>\n    prog\n   </code>\n  </li>\n  <li>\n   In another bash tab:\n   <code>\n    sudo gdb -p `pgrep prog`\n   </code>\n   .\n   <code>\n    gdb\n   </code>\n   attaches itself to the running process\n  </li>\n  <li>\n   Set a breakpoint on\n   <code>\n    dummy\n   </code>\n   call in\n   <code>\n    gdb\n   </code>\n   :\n   <code>\n    b dummy\n   </code>\n  </li>\n  <li>\n   Press\n   <code>\n    c\n   </code>\n   in\n   <code>\n    gdb\n   </code>\n   to continue\n  </li>\n  <li>\n   Hit\n   <kbd>\n    Enter\n   </kbd>\n   in the script to continue\n  </li>\n  <li>\n   <code>\n    gdb\n   </code>\n   gives up by saying:\n   <code>\n    0x000056446a5af764 <dummy+4>:    Cannot access memory at address 0x56446a5af764\n   </code>\n  </li>\n </ol>\n <p>\n  <a href=\"https://i.sstatic.net/RedOd.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/RedOd.png\"/>\n  </a>\n </p>\n <p>\n  If instead of feeding the input programmatically, I launch the program manually, attach gdb and feed the input myself, the breakpoint is correctly hit.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/rYOEA.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/rYOEA.png\"/>\n  </a>\n </p>\n <p>\n  What is the problem in the script?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "gdb"
    ],
    "user": "sherlock",
    "time": "Nov 7, 2021 at 10:03",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The process dies before/while\n  <code>\n   gdb\n  </code>\n  connects to it, as your python script finishes. Use the following line at the end of your script to keep it running.\n </p>\n <pre><code>p.interactive()\n</code></pre>\n</div>\n</body></html>",
            "votes": "5",
            "user": "galoget",
            "time": "Sep 28, 2021 at 8:06",
            "is_accepted": true,
            "comments": []
        }
    ]
}