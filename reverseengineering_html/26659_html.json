{
    "title": "Making a Android Toast via JNI, i.e. calling Java methods via JNI",
    "link": "https://reverseengineering.stackexchange.com/questions/26659/making-a-android-toast-via-jni-i-e-calling-java-methods-via-jni",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Concerning the outputting of an\n  <code>\n   Toast\n  </code>\n  , I found that there are some ways to make a\n  <code>\n   Toast\n  </code>\n  , that invoke calling a\n  <code>\n   FindClass\n  </code>\n  on\n  <code>\n   JNIEnv\n  </code>\n  object with the\n  <code>\n   android/widget/Toast\n  </code>\n  parameter, but I found no references in the code doing this.\n </p>\n <p>\n  I found this code\n  <a href=\"https://github.com/demuyan/AndroidNDKbook/blob/master/ch02/JniToast/jni/jnitoast.c\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n </p>\n <pre><code>jclass toast = (*env)->FindClass(env, \"android/widget/Toast\");\n// ToastクラスのmakeTextスタティックメソッドのメソッドIDを取得する\njmethodID methodMakeText = (*env)->GetStaticMethodID(env, toast, \"makeText\", \"(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;\");\nif(methodMakeText == NULL){\nLOGE(\"toast.makeText not Found\");\n\nreturn;\n</code></pre>\n <p>\n  But when using the\n  <code>\n   strings\n  </code>\n  tool on the C++ compiled files used in the app I'm decompiling, I haven't found any references to a\n  <code>\n   Toast\n  </code>\n  .\n </p>\n <p>\n  What other ways there are to call methods in a Java library, e.g. make a Toast?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "821",
    "tags": [
        "c++",
        "android",
        "java"
    ],
    "user": "Timotej Leginus",
    "time": "Dec 29, 2020 at 16:24",
    "comments": [
        {
            "user": "sudhackar",
            "text": "<html><body><span class=\"comment-copy\">\n Does your app have java components?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Timotej Leginus",
            "text": "<html><body><span class=\"comment-copy\">\n @sudhackar , yes\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can try:\n </p>\n <pre><code>jclass toast = (*env)->FindClass(env, \"android/widget/Toast\"); // get the class you need (need to be already loaded otherwise you have to define it first)\njmethodID methodToCall = env->GetStaticMethodID(toast, \"makeText\", \"(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;\"); // get your desidered method\n\nenv->CallStaticVoidMethod(toast, methodToCall, <your parameters here>); // ask the jvm to call your method (assuming its static)\n</code></pre>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Princekin",
            "time": "Jan 22, 2021 at 4:00",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Timotej Leginus",
                    "text": "<span class=\"comment-copy\">I just posted this code in my answer.. Thank you for your contribution though. Helping me explore options beyond this one and its implementations would've helped me more.</span>",
                    "time": null
                },
                {
                    "user": "Princekin",
                    "text": "<span class=\"comment-copy\">well i actually dont think there are more options.. atleast i never seen something different to call a method via jni</span>",
                    "time": null
                },
                {
                    "user": "Timotej Leginus",
                    "text": "<span class=\"comment-copy\">That is the point. The app is displaying the toast in a very obscure manner</span>",
                    "time": null
                },
                {
                    "user": "Princekin",
                    "text": "<span class=\"comment-copy\">Maybe reflections via jni?</span>",
                    "time": null
                }
            ]
        }
    ]
}