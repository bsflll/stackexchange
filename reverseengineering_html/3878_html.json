{
    "title": "How to analyse the communication between a WebApp loaded with awesomium and the native program?",
    "link": "https://reverseengineering.stackexchange.com/questions/3878/how-to-analyse-the-communication-between-a-webapp-loaded-with-awesomium-and-the",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a Windows program that uses\n  <a href=\"http://www.awesomium.com/\" rel=\"nofollow\">\n   awesomium\n  </a>\n  to display a WebApp. This WebApp communicates in some way with the client program through some native calls. I found references to\n  <code>\n   window.externalHost\n  </code>\n  and\n  <code>\n   window.native\n  </code>\n  in the JS source, but it's build with\n  <a href=\"http://yuilibrary.com\" rel=\"nofollow\">\n   YUI\n  </a>\n  and has tens of thousand lines of code and single character variables and I can't quite figure out what exactly they are doing (static analysis).\n </p>\n <p>\n  I have injected Javascript into the WebApp to check those two objects:\n </p>\n <pre><code>try {\n    document.write(JSON.stringify(window.externalHost, null, 4))\n} catch (err) {\n    document.write(err)\n}\n</code></pre>\n <p>\n  But\n  <code>\n   window.externalHost\n  </code>\n  is\n  <code>\n   undefined\n  </code>\n  and\n  <code>\n   window.native\n  </code>\n  is\n  <code>\n   {}\n  </code>\n  .\n </p>\n <p>\n  So my questions are:\n </p>\n <ul>\n  <li>\n   How are native calls usually set up?\n  </li>\n  <li>\n   What interfaces do exist and how are they used? (Both directions)\n  </li>\n  <li>\n   Can I \"detour\"/\"intercept\" native calls to see what they are sending?\n  </li>\n  <li>\n   Are there any remote JS debug projects which I could inject to dynamically debug the complex WebApp?\n  </li>\n </ul>\n <hr/>\n <p>\n  <strong>\n   update 1:\n  </strong>\n  I am confident that it uses\n  <code>\n   window.native\n  </code>\n  . Because of this Object\n  <code>\n   {}\n  </code>\n  . It seems likely that the communication is not implemented as\n  <code>\n   window.externalHost.postMessage()\n  </code>\n  based on what I have read on the\n  <a href=\"http://wiki.awesomium.com/general-use/introduction-to-javascript-integration.html\" rel=\"nofollow\">\n   awesomium wiki\n  </a>\n  .\n </p>\n <p>\n  I now try to capture what methods are called on it. My idea was to overwrite\n  <code>\n   window.onerror\n  </code>\n  to capture all errors and set\n  <code>\n   window.native = undefined;\n  </code>\n  to capture exceptions like\n  <code>\n   Cannot call aNativeCall() on undefined\n  </code>\n  . Unfortunately it seems that\n  <code>\n   windows.native\n  </code>\n  can't be overwritten - it doesn't stay undefined.\n </p>\n <p>\n  Any other ideas?\n </p>\n <hr/>\n <p>\n  <strong>\n   update 2:\n  </strong>\n </p>\n <p>\n  I came up with this javascript code to check some interesting Objects like\n  <code>\n   window.external\n  </code>\n  , etc...\n </p>\n <pre><code>obj = ['external', 'externalHost', 'native', 'Y', ['Y','native'],['Y','Native'], ['Y','external'], ['Y','externalHost']];\nfor(i=0; i< obj.length; ++i) {\n    try {\n\n        if(obj[i] instanceof Array) {\n            var tmp = window[obj[i][0]];\n            for(j=1; j<obj[i].length; ++j) {\n                tmp = tmp[obj[i][j]]\n            }\n            document.write(obj[i]+\" | <b>\"+Object.getOwnPropertyNames(tmp)+\"</b>\n\");\n        } else {\n            document.write(obj[i]+\" | <b>\"+Object.getOwnPropertyNames(window[obj[i]])+\"</b>\n\");\n        }\n\n    } catch(err) {\n        document.write(obj[i]+\" | <i>Error: \"+err+\"</i>\n\");\n    }\n}\n</code></pre>\n <p>\n  It became slowly more clear that it has to be\n  <code>\n   window.native\n  </code>\n  . This object has the following properties: 'on','isNative','scale','Emitter','call','register','_ready'\n </p>\n <p>\n  When I try to call\n  <code>\n   window.native.call()\n  </code>\n  the native program crashes. And the debug information shows that it crashed in a\n  <code>\n   ProcessRequest\n  </code>\n  function. So I found the right interface.\n </p>\n <p>\n  I now need to find out how exactly this interface is used. Unfortunately I can't overwrite\n  <code>\n   window.native.call = function() { ... }\n  </code>\n  to log the calls.\n </p>\n <p>\n  Anybody another idea?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "929",
    "tags": [
        "javascript"
    ],
    "user": "samuirai",
    "time": "Mar 16, 2014 at 2:49",
    "comments": [],
    "answers_data": []
}