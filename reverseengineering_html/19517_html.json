{
    "title": "Need help identifying main processor for Roland synthesizer",
    "link": "https://reverseengineering.stackexchange.com/questions/19517/need-help-identifying-main-processor-for-roland-synthesizer",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I desperately need help figuring out the ic chips in this unit so I can view the firmware in ida pro.\n </p>\n <p>\n  So the unit is a roland gr-55 guitar synthesizer and i'm trying to disassemble the firmware into assembly language, but I have no info on the processor type. I have tried to analyze the firmware, which is a binary file using binwalk but wasn't able to find any info. I've also used the tool cpu_rec to see if it would give me any info and it told me it's a pic10 but I don't thinks that's accurate. I'll post pics below of the gr-55 motherboard, and the firmware , and some other stuff.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/21XAj.jpg\" rel=\"nofollow noreferrer\">\n   R05011845 WSP\n  </a>\n  IC\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/SSmKJ.jpg\" rel=\"nofollow noreferrer\">\n   R8A02021ABG\n  </a>\n  IC\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/98xW7.jpg\" rel=\"nofollow noreferrer\">\n   MXIC mx29lv640ebti-70g\n  </a>\n  IC\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/pjjOD.jpg\" rel=\"nofollow noreferrer\">\n   ESMT m12l128168a-azl1p10jy\n  </a>\n  IC\n </p>\n <p>\n  <a href=\"https://www.roland.com/us/support/by_product/gr-55/updates_drivers/f64a41ce-c897-4fd5-94d7-71ec8ff6f036/\" rel=\"nofollow noreferrer\">\n   gr-55 firmware link\n  </a>\n  here's the roland gr-55's firmware\n </p>\n <p>\n  <a href=\"https://www.joness.com/gr300/service/GR-55_SERVICE_NOTES.pdf\" rel=\"nofollow noreferrer\">\n   gr-55 schematics\n  </a>\n  here's the roland gr-55 schematics\n </p>\n <p>\n  I think the R8A02021ABG could be the main cpu due to these forms\n  <a href=\"http://forum.pianoworld.com/ubbthreads.php/topics/2385759/roland-bk-9-internals.html\" rel=\"nofollow noreferrer\">\n   (similar sythesizer internals)\n  </a>\n  . This person seems to have some of the same ic numbers, and hes saying the R8A02021ABG is the main processor, and that it's a sh3/sh4 7700 series processor. When I go to the link for his units OS website\n  <a href=\"https://www.toppers.jp/fi4-kernel.html\" rel=\"nofollow noreferrer\">\n   OS website for bk9\n  </a>\n  it tells me that the processor for that OS is a sh3 (sh 7727). It seems that ida pro does not have an option for a (sh 7727). I read another form from someone who said they also have a (sh 7727) in their unit, this website wont let me post any more links so if you type mpc500 os code in google and click link for mpc-forms.com, it's on the second page second comment down. This person says they don't make a disassembler for the (sh 7727) and reverse engineering it would be impossible\n </p>\n <p>\n  My main goal is to be able to change some things in the roland gr-55's firmware, like changing some of the names to make things easier to understand so I can make music in peace. Is what i'm trying to do even possible or am I just giving myself a headache for no reason. Sorry if the post is confusing, and for the excessive links. If anybody can give me any info I would appreciate it.\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ida",
        "disassembly",
        "assembly",
        "decompilation",
        "firmware"
    ],
    "user": "Dukes Mayonnaise",
    "time": "Oct 3, 2018 at 17:32",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n schematics link goes to your local drive :)\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "julian",
            "text": "<html><body><span class=\"comment-copy\">\n The the firmware download EULA forbids reverse engineering, decompilation and disassembly.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The firmware is compressed, so it is no wonder that up to this point attempting to determine the target CPU of the firmware has been so troublesome.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/wpHyV.png\" rel=\"noreferrer\">\n   <img alt=\"compressed firmware image\" src=\"https://i.sstatic.net/wpHyV.png\"/>\n  </a>\n </p>\n <p>\n  A signature scan reveals a signature associated with LHA compression:\n </p>\n <pre><code>$ binwalk gr55.bin \n\nDECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n4             0x4             LHa (2.x) archive data [lh5] [NSRL|LHA2]\n</code></pre>\n <p>\n  <a href=\"http://manpages.ubuntu.com/manpages/trusty/man1/lhasa.1.html\" rel=\"noreferrer\">\n   lhasa\n  </a>\n  can be used to decompress the file, which produces a file called\n  <code>\n   appli.bin\n  </code>\n  . A signature scan of this file produces the following results:\n </p>\n <pre><code>$ binwalk appli.bin \n\nDECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n2229080       0x220358        Ubiquiti partition header, header size: 56 bytes, name: \"PARTITION#\", base address: 0x00040000, data size: 524288 bytes\n3513280       0x359BC0        Copyright string: \"Copyright\"\n3527064       0x35D198        Broadcom 96345 firmware header, header size: 256, board id: \"   1/8\", ~CRC32 header checksum: 0x43452043, ~CRC32 data checksum: 0x43452042\n3579113       0x369CE9        VxWorks symbol table, big endian, first entry: [type: uninitialized data, code address: 0xE00, symbol address: 0x13C18800]\n7197404       0x6DD2DC        Copyright string: \"Copyright Kobe Steel Ltd.\"\n7252974       0x6EABEE        Copyright string: \"Copyright 2004 TEPCO UQUEST, LTD.\"\n</code></pre>\n <p>\n  Be aware that some may be false positives. For example, I believe that Broadcom 96345 firmware typically targets MIPS CPUs in routers. Further investigation is required. An entropy scan of\n  <code>\n   appli.bin\n  </code>\n  reveals that it is not compressed or encrypted:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/EhKPe.png\" rel=\"noreferrer\">\n   <img alt=\"uncompressed\" src=\"https://i.sstatic.net/EhKPe.png\"/>\n  </a>\n </p>\n <p>\n  There is quite a bit of string data in this binary, some of it potentially interesting. For example, this bit:\n </p>\n <pre><code>$Id: k_version.c,v 1.3 2010/09/22 13:10:33 shigeno Exp $\n  SHELL for iTRON ver 1.01\n===========================================================\n  Copyright 2004 TEPCO UQUEST, LTD.\n</code></pre>\n <p>\n  <a href=\"https://www.uquest.co.jp/en/\" rel=\"noreferrer\">\n   Tepco Uquest\n  </a>\n  is a Japanese company that develops middleware for embedded devices.\n </p>\n <p>\n  A search for \"SHELL for iTRON ver 1.01\" results in this:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/c71KH.png\" rel=\"noreferrer\">\n   <img alt=\"dev presentation\" src=\"https://i.sstatic.net/c71KH.png\"/>\n  </a>\n </p>\n <p>\n  There is quite a bit of technical information contained in\n  <a href=\"http://www.t-engine.org/wp-content/themes/wp.vicuna/pdf/specifications/en_US/MW_introduction_e_1.01.pdf\" rel=\"noreferrer\">\n   this document\n  </a>\n  ; for example on page 71:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/7VgeL.png\" rel=\"noreferrer\">\n   <img alt=\"doc page 71\" src=\"https://i.sstatic.net/7VgeL.png\"/>\n  </a>\n </p>\n <p>\n  It may contain information relevant to identifying the CPU, as the SH (SuperH) family of CPUs is discussed (\n  <a href=\"https://www.renesas.com/us/en/products/microcontrollers-microprocessors/superh/sh7144/sh7144.html\" rel=\"noreferrer\">\n   Renesas SH7145\n  </a>\n  , SH7727).\n </p>\n <p>\n  Radare2 supports the SuperH instruction set.\n </p>\n <p>\n  Other strings include things like this:\n </p>\n <pre><code>St.Piano 3\nSt.Piano 4\nSt.Piano 5\nBrite Piano\nStage Piano\nHonky Tonk\nLoFi Piano\nPiano 1 w\nEuropean Pf\nPiano 2 w\nHonky-tonk\nHonky-tonk w\nPop Piano 1\nPop Piano 2\nPop Piano 3\nPiano 3 w\nStage EP 1\nStage EP 2\nStage EP Trm\nTremolo EP 1\nE.Piano 1\n</code></pre>\n <p>\n  Perhaps there is no need for reverse engineering, just patching strings.\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "julian",
            "time": "Oct 4, 2018 at 4:26",
            "is_accepted": true,
            "comments": []
        }
    ]
}