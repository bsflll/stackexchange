{
    "title": "Modify memory without patching the database",
    "link": "https://reverseengineering.stackexchange.com/questions/10888/modify-memory-without-patching-the-database",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Is there a way to modify one or more bytes in memory without making any changes in the database? I know about idc.PatchByte() in idapython, but it will print the message that states that 'This database has been patched' on the next run.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "3k",
    "tags": [
        "ida",
        "idapython"
    ],
    "user": "vdudouyt",
    "time": "Sep 17, 2015 at 14:19",
    "comments": [
        {
            "user": "0xDEADC0DE",
            "text": "<html><body><span class=\"comment-copy\">\n You may also try\n <b>\n  Edit -> Patch program -> Change byte/word\n </b>\n in IDA Pro.  PS: Consider to save the state of your IDA Database before changing bytes with\n <i>\n  Database snapshot manager(Ctrl+Shift+T)\n </i>\n . It will help you to avoid troubles if something will go wrong.  If you want to patch the binary that you dissect, there are a plenty of ways to do that. You may use\n <b>\n  Edit -> Patch program -> Apply patches to input file\n </b>\n in IDA Pro. Alternatively you may modify a binary in a debugger or with some hex editor. What would you like to modify?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "vdudouyt",
            "text": "<html><body><span class=\"comment-copy\">\n This is not suitable for me for exactly the same reason why idc.PatchByte() is not suitable for me. I estimated that the first answer will be like that - sorry that I hadn't mentioned this in op post.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "орион орионВи",
            "text": "<html><body><span class=\"comment-copy\">\n Probably PatchDbgByte(ea,value) from IDA Pro command line or in script will help. As descibed in idc.py this function meant to \"Change a byte in the debugged process memory only\".\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can do it even in free IDA.\nSetup a breakpoint and use its\n  <code>\n   condition\n  </code>\n  property in  Edit BreakPoint.\nThis way you can change registers, memory, and even perform more complex actions.\nFor example:\n </p>\n <pre><code>patch_dbg_byte(rcx+2,0),0\n</code></pre>\n <p>\n  Byte at address\n  <code>\n   rcx+2\n  </code>\n  is cleared when the breakpoint is hit.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Viktor",
            "time": "Jan 20, 2023 at 0:17",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Finally I'm answering my own question:\n </p>\n <pre><code>DbgWrite(ea, data)\n    Write to debugger memory.\n    \n    @param ea: linear address\n    @param data: string to write\n    @return: number of written bytes (-1 - network/debugger error)\n    \n    Thread-safe function (may be called only from the main thread and debthread)\n</code></pre>\n</div>\n</body></html>",
            "votes": "0",
            "user": "vdudouyt",
            "time": "Nov 14, 2021 at 11:26",
            "is_accepted": false,
            "comments": []
        }
    ]
}