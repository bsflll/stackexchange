{
    "title": "objdump says \"64-bit address is disabled\"",
    "link": "https://reverseengineering.stackexchange.com/questions/26801/objdump-says-64-bit-address-is-disabled",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I've run into an issue with the MinGW build of objdump on Windows. Consider this very simple input file:\n </p>\n <pre><code>48 bf 88 77 66 55 44 33 22 11\n</code></pre>\n <p>\n  I want to disassemble this as Intel x86-64 raw machine code. I am expecting this to show a single instruction:\n </p>\n <pre><code>movabs rdi, 0x1122334455667788\n</code></pre>\n <p>\n  I'm passing\n  <code>\n   -mi386:x86-64\n  </code>\n  to objdump but it just gives me this error message. For comparison, with\n  <code>\n   -mi386\n  </code>\n  it works but is obviously the wrong architecture:\n </p>\n <pre><code>C:\\test> objdump.exe -D -b binary -mi386 test.raw\n\ntest.raw:     file format binary\n\n\nDisassembly of section .data:\n\n00000000 <.data>:\n   0:   48                      dec    %eax\n   1:   bf 88 77 66 55          mov    $0x55667788,%edi\n   6:   44                      inc    %esp\n   7:   33 22                   xor    (%edx),%esp\n   9:   11                      .byte 0x11\n</code></pre>\n <p>\n  Versus:\n </p>\n <pre><code>C:\\test> objdump.exe -D -b binary -mi386:x86-64 test.raw\n\ntest.raw:     file format binary\n\n\nDisassembly of section .data:\n\n00000000 <.data>:\n   0:   64-bit address is disabled\n</code></pre>\n <p>\n  Does the MinGW build of objdump not support this architecture?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "158",
    "tags": [
        "x86-64",
        "objdump"
    ],
    "user": "Roman Starkov",
    "time": "Jan 17, 2021 at 15:05",
    "comments": [
        {
            "user": "Roman Starkov",
            "text": "<html><body><span class=\"comment-copy\">\n I guess it doesn't matter what's wrong with the MinGW build; WSL has the full-featured\n <code>\n  objdump\n </code>\n available.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n Seems off topic. You should try minGW support channels.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Roman Starkov",
            "text": "<html><body><span class=\"comment-copy\">\n @IgorSkochinsky you know better... I'll delete it then? It's an impossible to google (no hits) message in a reverse engineering tool though, might be worth keeping.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}