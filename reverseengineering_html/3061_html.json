{
    "title": "IDA Pro: use structs on parameters",
    "link": "https://reverseengineering.stackexchange.com/questions/3061/ida-pro-use-structs-on-parameters",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a small function that is given a\n  <code>\n   struct\n  </code>\n  as parameters. The\n  <code>\n   struct\n  </code>\n  looks to something like this:\n </p>\n <pre><code>struct my_struct {\n  short a;\n  unsigned int b;\n  unsigned int c;\n};\n</code></pre>\n <p>\n  Taking care of the alignment I build the following\n  <code>\n   struct\n  </code>\n  in IDA:\n </p>\n <pre><code>field_0 +0x0\nfield_1 +0x4\nfield_2 +0x8\n</code></pre>\n <p>\n  The compiler builds it so that it takes\n  <code>\n   rbp+0x10\n  </code>\n  as the first field in the\n  <code>\n   struct\n  </code>\n  ,\n  <code>\n   rbp+0x14\n  </code>\n  as the second and so on. The problem now arises because if I try to apply the pre-defined IDA\n  <code>\n   struct\n  </code>\n  to the instructions, I always get something like\n  <code>\n   [rbp+struct.field_0+0x10]\n  </code>\n  . This get more complicated if there is actually something in my struct at\n  <code>\n   +0x10\n  </code>\n  , because then it just shows\n  <code>\n   [rbp+struct_fieldX]\n  </code>\n  (which is wrong).\n </p>\n <p>\n  The question is:\n  <em>\n   Is there a way to tell IDA (I'm using 6.3) to apply the\n   <code>\n    struct\n   </code>\n   with an offset of\n   <code>\n    0x10\n   </code>\n   ?\n  </em>\n </p>\n <p>\n  The dirty trick for this simple case is to create a\n  <code>\n   struct\n  </code>\n  that has 2\n  <code>\n   size_t\n  </code>\n  dummy fields for the\n  <code>\n   RIP\n  </code>\n  and\n  <code>\n   SFP\n  </code>\n  , but that does not seem to be right way to go here.\n </p>\n</div>\n</body></html>",
    "votes": "10",
    "answers": 1,
    "views": "5k",
    "tags": [
        "ida",
        "struct"
    ],
    "user": "sqrtsben",
    "time": "Nov 20, 2013 at 13:36",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Add your struct in the function's stack view:\n </p>\n <ol>\n  <li>\n   With your cursor in the function's disassembly view, press\n   <kbd>\n    Ctrl\n   </kbd>\n   +\n   <kbd>\n    K\n   </kbd>\n   to open the stack view.\n  </li>\n  <li>\n   In the stack view, ensure that enough function arguments exist to get to at least\n   <code>\n    +00000010\n   </code>\n   in the stack. Use\n   <kbd>\n    D\n   </kbd>\n   to add more function arguments as necessary.\n  </li>\n  <li>\n   Position your cursor on the\n   <code>\n    +00000010\n   </code>\n   line in the stack view and press\n   <kbd>\n    Alt\n   </kbd>\n   +\n   <kbd>\n    Q\n   </kbd>\n   to specify\n   <code>\n    my_struct\n   </code>\n   at that offset.\n  </li>\n </ol>\n</div>\n</body></html>",
            "votes": "8",
            "user": "Jason Geffner",
            "time": "Nov 20, 2013 at 14:53",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user1354557",
                    "text": "<span class=\"comment-copy\">Note for emphasis: During step three, you <b>must</b> be on the stack view. If you place your cursor on the corresponding local variable in IDA view and press <code>Alt+Q</code>, IDA will try to interpret <i>the contents of the function</i> as a structure, rather than the variable, which destroys the function.  This is a mistake I see people make pretty often when learning structures in IDA.</span>",
                    "time": null
                }
            ]
        }
    ]
}