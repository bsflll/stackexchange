{
    "title": "Can #if DEBUG in C# become true in the released binary?",
    "link": "https://reverseengineering.stackexchange.com/questions/31058/can-if-debug-in-c-become-true-in-the-released-binary",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have something like this in my code that checks for user's license:\n </p>\n <pre><code>// C# code:\n\n#if DEBUG\n    MakeLicenseValidForever();\n#else\n    CheckLicense();\n#endif\n</code></pre>\n <p>\n  Now, I need to know if these directives get saved in my released binary or not. If they do get saved, then a user can make\n  <code>\n   #if DEBUG\n  </code>\n  return\n  <code>\n   true\n  </code>\n  and bypass the checks. I need to know if\n  <code>\n   #if DEBUG\n  </code>\n  is safe.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "536",
    "tags": [
        "executable",
        "c#"
    ],
    "user": "Gudarzi",
    "time": "Oct 31, 2022 at 6:36",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  best to put the code inside the MakeLicenseValidForever into\n  <code>\n   #if DEBUG\n  </code>\n  ,too. those #if things get processed at compile time and only the code of the taken path exists. Functions don't get stripped if not referenced thats why its best to empty out the function that should not exist in the release binary. They are similar to the C #ifdefs for preprocessor based stripping\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "masterX244",
            "time": "Oct 31, 2022 at 9:04",
            "is_accepted": true,
            "comments": []
        }
    ]
}