{
    "title": "Finding function in IDA from x64dbg",
    "link": "https://reverseengineering.stackexchange.com/questions/27329/finding-function-in-ida-from-x64dbg",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I've found a function I want to call in x64dbg, and wanted to see it's prototype and how it looks like in IDA. However, I was expecting to see a function in IDA but land in the middle of one.\n </p>\n <p>\n  The function I want to call in x64dbg:\n  <a href=\"https://i.sstatic.net/GnS9V.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/GnS9V.png\"/>\n  </a>\n </p>\n <p>\n  I was expecting I could find the static address in IDA doing like so:\n </p>\n <p>\n  RVA: 881C0000\n </p>\n <p>\n  Finding this statically in IDA: 0000000140000000 (base) + 1C88 (RVA) yielding: 140001C88\n </p>\n <p>\n  When seaching for address 140001C88 in IDA I land in the middle of a function, sub_140001B80. I was expecting to land at something like sub_140001C88 Can someone see what I'm doing wrong?\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/FHESY.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/FHESY.png\"/>\n  </a>\n </p>\n <p>\n  (FYI: I'm trying to call a function that presses a button)\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "2k",
    "tags": [
        "ida",
        "x64dbg"
    ],
    "user": "Lubbi",
    "time": "Mar 27, 2021 at 18:42",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Calls on x86/x64 are encoded based on how far the target is from the source, not as an RVA into the image. I.e., the number\n  <code>\n   0x1C88\n  </code>\n  is a distance, not an RVA. To find the RVA, follow the call to its destination, and then subtract that address by the module imagebase. Then, in IDA, press\n  <code>\n   G\n  </code>\n  and enter\n  <code>\n   0x140000000+[RVA HERE]\n  </code>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Rolf Rolles",
            "time": "Mar 27, 2021 at 19:58",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you want to use x64dbg for debugging and at the same time IDA Pro for static analysis, I recommend you one of my favourite plugin:\n  <a href=\"https://github.com/bootleg/ret-sync\" rel=\"nofollow noreferrer\">\n   https://github.com/bootleg/ret-sync\n  </a>\n </p>\n <p>\n  You can for example run your binary program in a VM with x64dbg and synchronize it to highlight the current instruction in IDA Pro and much more like auto rebase, controlling/BP from IDA, Windbg...\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Tony",
            "time": "Mar 28, 2021 at 12:19",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Lubbi",
                    "text": "<span class=\"comment-copy\">Thanks! That's a tool that will come in handy!</span>",
                    "time": null
                }
            ]
        }
    ]
}