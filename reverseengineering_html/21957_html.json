{
    "title": "Info on ProcMon from SysInternals",
    "link": "https://reverseengineering.stackexchange.com/questions/21957/info-on-procmon-from-sysinternals",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I need help. I am reversing\n  <code>\n   Procmon64.exe\n  </code>\n  file. \nIt drops\n  <code>\n   procmon.Sys\n  </code>\n  filesystem minifilter driver which does monitoring.\n </p>\n <p>\n  Question:\nI need to know if filtering of events is done in user-mode or kernel-mode.\n </p>\n <p>\n  My hypothesis is that all events are sent to user-mode application and then are filtered and displayed.\n </p>\n <p>\n  For now i breakpointed procedure that calls\n  <code>\n   FilterGetMessage\n  </code>\n  but can't figure out if it returns all events or just filtered events.\n </p>\n <p>\n  Thank You.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "473",
    "tags": [
        "windows",
        "driver"
    ],
    "user": "guest",
    "time": "Aug 22, 2019 at 9:31",
    "comments": [
        {
            "user": "Biswapriyo",
            "text": "<html><body><span class=\"comment-copy\">\n <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/fltuser/nf-fltuser-filtergetmessage\" rel=\"nofollow noreferrer\">\n  Here\n </a>\n is the docs about\n <code>\n  FilterGetMessage\n </code>\n function.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "guest",
            "text": "<html><body><span class=\"comment-copy\">\n Thanks. Have read that. According to that article\n <code>\n  FltSendMessage\n </code>\n sends message to\n <code>\n  FilterGetMessage\n </code>\n , still don't have clue if user-mode sends the driver filtering conditions. If it does it should happen in\n <code>\n  FilterConnectCommunicationPort\n </code>\n or\n <code>\n  FilterSendMessage\n </code>\n no?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Hi and welcome to RE.SE. There are dozens of ways to communicate something between user and kernel mode in Windows. I concur with your hypothesis, but only actual reverse engineering will tell. It makes sense for user mode to do the filtering for two reasons: 1. user mode doesn't have the memory limitations (NonPagedPool in particular) kernel mode code has and 2. the way the filtering works, most driver developers in their right mind would opt to run that in user mode rather than risk doing these operations in kernel mode. Obviously it can be done, but not everything possible is a good idea.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Most likely the driver only monitors events and send messages to user mode. This approach is used in Microsoft  driver samples.\nIf I remember correctly - that it is:\n  <a href=\"https://github.com/microsoft/Windows-driver-samples/blob/master/filesys/miniFilter/scanner\" rel=\"nofollow noreferrer\">\n   https://github.com/microsoft/Windows-driver-samples/blob/master/filesys/miniFilter/scanner\n  </a>\n </p>\n <p>\n  I think it is good example to understand mini-filter driver and user mode app communication.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "slinkin",
            "time": "Aug 22, 2019 at 16:17",
            "is_accepted": true,
            "comments": [
                {
                    "user": "guest",
                    "text": "<span class=\"comment-copy\">Yeah, probably.</span>",
                    "time": null
                }
            ]
        }
    ]
}