{
    "title": "Cannot detect obfuscator of the obfuscated DLL",
    "link": "https://reverseengineering.stackexchange.com/questions/12707/cannot-detect-obfuscator-of-the-obfuscated-dll",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to do a reverse-engineering of an obfuscated Unity DLL assembly, but de4dot doesn't work. It says \"Unknown Obfuscator\".\nAlso tried iMPROVE and it says that there is a 97% chance that it is a DotWall obfuscated assembly, but deobfuscation doesn't work!\n </p>\n <p>\n  Here is the DLL:\n  <a href=\"http://uploadboy.me/87n60oy2ifiw/Assembly-CSharp.zip.html\" rel=\"nofollow\">\n   http://uploadboy.me/87n60oy2ifiw/Assembly-CSharp.zip.html\n  </a>\n </p>\n <p>\n  Can someone say how can I deobfuscate it? or at least which obfuscator has produced this DLL?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "deobfuscation",
        ".net"
    ],
    "user": "Hadi77",
    "time": "May 22, 2016 at 2:40",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It\n  <em>\n   is\n  </em>\n  <strong>\n   CodeWall\n  </strong>\n  , strings are\n  <em>\n   not\n  </em>\n  encrypted, or really\n  <em>\n   slightly\n  </em>\n  (a simple XOR but nothing more complexe). You can use the\n  <strong>\n   <em>\n    IsLatin\n   </em>\n  </strong>\n  regex with De4Dot to clean the file as far as names are concerned.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "XenocodeRCE",
            "time": "May 23, 2016 at 1:07",
            "is_accepted": false,
            "comments": []
        }
    ]
}