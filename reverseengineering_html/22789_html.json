{
    "title": "How to track/debug/manipulate Windows processes in a VM?",
    "link": "https://reverseengineering.stackexchange.com/questions/22789/how-to-track-debug-manipulate-windows-processes-in-a-vm",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to make some deep-level windows debuggig/tracing, utilizing virtualization.\n </p>\n <p>\n  Considering that if a Windows runs in a virtual machine, theoretically I have total power over it - I could change its kernel/userspace data structures, trace it, modify it and so on.\n  <em>\n   Without the need of its cooperativity\n  </em>\n  .\n </p>\n <p>\n  My favorite virtualization software is qemu, but anything is okay if I can do it.\n </p>\n <p>\n  However, I would need some software support for the task. I need something, what can interact with the virtual machine, and most ideally, some support to track its memory content, find the processes and trace, what are they doing.\n </p>\n <p>\n  Does anything exist for the task?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "209",
    "tags": [
        "windows",
        "debugging",
        "virtual-machines",
        "tracing"
    ],
    "user": "peterh",
    "time": "Dec 20, 2019 at 13:10",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n AFAIK not possible without a\n <i>\n  somewhat\n </i>\n modified hypervisor\n <i>\n  or\n </i>\n an agent inside the VM. This has been done for KVM in the past (~2013) and is sold as\n <a href=\"https://en.wikipedia.org/wiki/VMRay\" rel=\"nofollow noreferrer\">\n  VMRay\n </a>\n these days. You can find the thesis papers and plenty of information by looking for CXPInspector (\n <a href=\"http://syssec.ruhr-uni-bochum.de/media/emma/veroeffentlichungen/2012/11/26/TR-HGI-2012-002.pdf\" rel=\"nofollow noreferrer\">\n  short one\n </a>\n ,\n <a href=\"https://www.syssec.ruhr-uni-bochum.de/media/emma/veroeffentlichungen/2014/11/21/Dissertation-Willems.pdf\" rel=\"nofollow noreferrer\">\n  full dissertation\n </a>\n ). I attended their VB2013 presentation.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "peterh",
            "text": "<html><body><span class=\"comment-copy\">\n @0xC0000022L I think hypervisors could (should?) have some debugging support. For example, qemu\n <a href=\"https://en.wikibooks.org/wiki/QEMU/Debugging_with_QEMU#Launching_QEMU_from_GDB\" rel=\"nofollow noreferrer\">\n  has\n </a>\n something like this. The next step would be some library or anything what can dig into the windows memory structures.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Yep, I am aware Qemu has some. So does DOSBox. But your question doesn't really make clear how invasive your introspection capabilities are allowed to be. It sounds as if you want non-invasive (quote:\n <i>\n  Without the need of its cooperativity.\n </i>\n ). Debug functionality can offer this, but will be slow. The charm with the CXPInspector approach is that it also allows to trace function calls and stuff at a coarse level but without the (performance) penalty that comes with typical debugging features. The penalty is a lot smaller, because hardware support is used ...\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This is called\n  <a href=\"https://en.wikipedia.org/wiki/Virtual_machine_introspection\" rel=\"nofollow noreferrer\">\n   Virtual Machine Introspection\n  </a>\n  (VMI) and, while definitely possible, requires you to implement parsing of the internal OS structures to isolate individual processes, modules etc instead of relying on the built-in OS support (such as used by WinDbg kernel debugger).\n </p>\n <p>\n  You can check for an example of how it could be done using IDA over VMWare's GDB protocol (disclaimer: post written by me):\n </p>\n <p>\n  <a href=\"http://www.hexblog.com/?p=94\" rel=\"nofollow noreferrer\">\n   http://www.hexblog.com/?p=94\n  </a>\n </p>\n <p>\n  I'm not aware of any active projects supporting it out-of-the-box but you can probably start with something like Volatility or\n  <a href=\"https://github.com/ufrisk/MemProcFS\" rel=\"nofollow noreferrer\">\n   MemProcFS\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Dec 20, 2019 at 14:36",
            "is_accepted": false,
            "comments": []
        }
    ]
}