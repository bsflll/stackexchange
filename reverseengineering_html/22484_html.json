{
    "title": "mfc140 dll , what is the usage?",
    "link": "https://reverseengineering.stackexchange.com/questions/22484/mfc140-dll-what-is-the-usage",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  While I open exe file  in ida I can see lot of calls to\n  <code>\n   mfc140_6153\n  </code>\n  or\n  <code>\n   mfc140_8718\n  </code>\n  .\n </p>\n <p>\n  What are those functions ? what they do ?\n </p>\n <p>\n  thanks\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "688",
    "tags": [
        "ida",
        "windows",
        "c",
        "dll",
        "mfc"
    ],
    "user": "joif doi",
    "time": "Nov 7, 2019 at 15:26",
    "comments": [
        {
            "user": "Biswapriyo",
            "text": "<html><body><span class=\"comment-copy\">\n You can find the dll in System32 folder.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "joif doi",
            "text": "<html><body><span class=\"comment-copy\">\n @Biswapriyo I know, but I looking for documentation what the function\n <code>\n  mfc140_6153\n </code>\n or\n <code>\n  mfc140_8718\n </code>\n do please\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Biswapriyo",
            "text": "<html><body><span class=\"comment-copy\">\n Obviously, those are undocumented. The numbers\n <code>\n  6153\n </code>\n and\n <code>\n  8718\n </code>\n looks like ordinal numbers. When there is no name for the exported function programs tends to use ordinal numbers.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  These are functions exported by ordinal rather than by name.\n </p>\n <p>\n  This being a C++ library the actual (mangled) function names are long (up to 200 characters with an average of over 50.)  Dynamic linking using names in this case would involve lots of long string comparisons that would slow down the loading of applications using this library.\n </p>\n <pre><code>6153 \n?GetRecentListOfPanes@CRecentDockSiteInfo@@QEAAAEAV?$CList@PEAUHWND__@@PEAU1@@@H@Z\npublic: class CList<struct HWND__ * __ptr64,struct HWND__ * __ptr64> & __ptr64 __cdecl CRecentDockSiteInfo::GetRecentListOfPanes(int) __ptr64\n\n8718 \n?OnCancelMode@CPane@@IEAAXXZ\nprotected: void __cdecl CPane::OnCancelMode(void) __ptr64\n</code></pre>\n <p>\n  You can find lists of these in several reverse engineering tools.\ne.g.\n  <a href=\"https://github.com/NationalSecurityAgency/ghidra/blob/master/Ghidra/Features/Base/data/symbols/win32/mfc140.exports\" rel=\"nofollow noreferrer\">\n   Ghidra\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Ian Cook",
            "time": "Nov 14, 2019 at 9:19",
            "is_accepted": false,
            "comments": [
                {
                    "user": "joif doi",
                    "text": "<span class=\"comment-copy\">, thanks, is that dll depend at windows version? or in all mfc dll function <code>8718</code> is OnCancelMode ?</span>",
                    "time": null
                },
                {
                    "user": "Ian Cook",
                    "text": "<span class=\"comment-copy\">One downside of exporting by ordinal is that the ordinal numbers cannot change if there are any updates to the DLL. Otherwise applications linked against one version will fail if run against a different version.   The MFC DLLs do not depend on windows version.  They do depend on the version of MFC that app uses though.  See <a href=\"https://en.wikipedia.org/wiki/Microsoft_Foundation_Class_Library#Versions\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/â€¦</a></span>",
                    "time": null
                }
            ]
        }
    ]
}