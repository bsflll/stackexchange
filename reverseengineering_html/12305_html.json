{
    "title": "Call a thiscall method from an injected DLL [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/12305/call-a-thiscall-method-from-an-injected-dll",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed.\n        </b>\n        This question is\n        <a href=\"/help/closed-questions\">\n         off-topic\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       Questions on\n       <b>\n        software development\n       </b>\n       are off-topic here, but can be asked on\n       <a href=\"http://stackoverflow.com/about\">\n        Stack Overflow\n       </a>\n       .\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2016-04-08 20:38:10Z\">\n        9 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/12305/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  I am trying to create a (32-bit) DLL to inject into a target process.\n </p>\n <p>\n  My DLL should call a function inside the original process. So far nothing special, however the target function is using the thiscall calling convention.\n </p>\n <p>\n  I am trying to use my own fake class object. The method does nothing more then setting a few variables in this class object.\n </p>\n <p>\n  My attempt:\n </p>\n <pre><code>class HashClass\n{\npublic:\n    byte data[1024];\n    LPVOID HashFunc(float, char, char);\n};\n\ntypedef LPVOID (HashClass::*HASHFUNC)(float, char, char);\n\nHASHFUNC *HashFunc = (HASHFUNC *) 0xD34DB33F;\n\nvoid CallHashFunction()\n{\n   HashClass *hashClass = new HashClass();\n   (hashClass->*HashFunc)(1.0f, 'a', 'b');  // Getting an error here\n}\n</code></pre>\n <p>\n  What is the best and easiest method for this?\n </p>\n <p>\n  Errors i am getting:\n </p>\n <pre><code>Error   1   error C2297: '.*' : illegal, right operand has type 'HASHFUNC *'\n        2   IntelliSense: expression must have pointer-to-member type\n</code></pre>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "786",
    "tags": [
        "dll-injection",
        "calling-conventions"
    ],
    "user": "eKKiM",
    "time": "9 years ago",
    "comments": [
        {
            "user": "peter ferrie",
            "text": "<html><body><span class=\"comment-copy\">\n consider what is \"this\" in a call - it's just another parameter, so you can HashFunc(hashClass, 1.0f, 'a', 'b').  The callee won't know the difference.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "eKKiM",
            "text": "<html><body><span class=\"comment-copy\">\n I guess this would work with 64-bit applications. However with 32-bit there clearly is a difference between stdcall and thiscall calling convention.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "peter ferrie",
            "text": "<html><body><span class=\"comment-copy\">\n that depends entirely on your compiler.  GCC does it like cdecl.  MSVC is stdcall but with __asm mov ecx, hashClass first.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  What error you get?\n </p>\n <p>\n  Try something like this:\n </p>\n <pre><code>class HashClass\n{\npublic:\n    byte data[1024];\n    LPVOID HashFunc(float, char, char);\n};\n\ntypedef LPVOID (HashClass::*HASHFUNC)(float, char, char);\n\n HASHFUNC *HashFunc = (HASHFUNC *) 0xD34DB33F;\n\n void CallHashFunction()\n {\n    HashClass *hashClass = new HashClass();\n    (*hashClass.*HashFunc)(1.0f, 'a', 'b');\n }\n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "malikcjm",
            "time": "Mar 30, 2016 at 14:26",
            "is_accepted": false,
            "comments": [
                {
                    "user": "eKKiM",
                    "text": "<span class=\"comment-copy\">Updated the code and the errors i get.</span>",
                    "time": null
                }
            ]
        }
    ]
}