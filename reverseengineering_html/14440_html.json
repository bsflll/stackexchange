{
    "title": "Why doesn't the breakpoint get hit in gdb?",
    "link": "https://reverseengineering.stackexchange.com/questions/14440/why-doesnt-the-breakpoint-get-hit-in-gdb",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I was following the\n  <a href=\"https://losfuzzys.github.io/writeup/2016/12/18/sharifctf7-tehran/\" rel=\"nofollow noreferrer\">\n   writeup\n  </a>\n  of the challenge\n  <a href=\"http://www.mediafire.com/file/6kqg3l8yq3cy89z/tehran\" rel=\"nofollow noreferrer\">\n   tehran\n  </a>\n  . If I set a breakpoint\n  <code>\n   0x804bade\n  </code>\n  , it never gets hit for the following input.\n </p>\n <pre><code>begin() {\n    fillout(0x8048000, 16384, 7);\n    puts(\"%144c%n\", 42, 0x804bade);\n    puts(\"%144c%n\", 42, 0x804badf);\n    puts(\"%144c%n\", 42, 0x804bae0);\n    puts(\"%144c%n\", 42, 0x804bae1);\n    puts(\"%144c%n\", 42, 0x804bae2);\n    puts(\"%104c%n\", 42, 0x804bae3);\n    puts(\"%1c%n\", 42, 0x804bae4);\n    puts(\"%1c%n\", 42, 0x804bae5);\n    puts(\"%1c%n\", 42, 0x804bae6);\n    puts(\"%1c%n\", 42, 0x804bae7);\n    puts(\"%129c%n\", 42, 0x804bae8);\n    puts(\"%52c%n\", 42, 0x804bae9);\n    puts(\"%36c%n\", 42, 0x804baea);\n    puts(\"%114c%n\", 42, 0x804baeb);\n    puts(\"%105c%n\", 42, 0x804baec);\n    puts(\"%1c%n\", 42, 0x804baed);\n    puts(\"%1c%n\", 42, 0x804baee);\n    puts(\"%49c%n\", 42, 0x804baef);\n    puts(\"%210c%n\", 42, 0x804baf0);\n    puts(\"%82c%n\", 42, 0x804baf1);\n    puts(\"%106c%n\", 42, 0x804baf2);\n    puts(\"%4c%n\", 42, 0x804baf3);\n    puts(\"%90c%n\", 42, 0x804baf4);\n    puts(\"%1c%n\", 42, 0x804baf5);\n    puts(\"%226c%n\", 42, 0x804baf6);\n    puts(\"%82c%n\", 42, 0x804baf7);\n    puts(\"%137c%n\", 42, 0x804baf8);\n    puts(\"%226c%n\", 42, 0x804baf9);\n    puts(\"%106c%n\", 42, 0x804bafa);\n    puts(\"%104c%n\", 42, 0x804bafb);\n    puts(\"%104c%n\", 42, 0x804bafc);\n    puts(\"%47c%n\", 42, 0x804bafd);\n    puts(\"%47c%n\", 42, 0x804bafe);\n    puts(\"%47c%n\", 42, 0x804baff);\n    puts(\"%115c%n\", 42, 0x804bb00);\n    puts(\"%104c%n\", 42, 0x804bb01);\n    puts(\"%47c%n\", 42, 0x804bb02);\n    puts(\"%98c%n\", 42, 0x804bb03);\n    puts(\"%105c%n\", 42, 0x804bb04);\n    puts(\"%110c%n\", 42, 0x804bb05);\n    puts(\"%106c%n\", 42, 0x804bb06);\n    puts(\"%11c%n\", 42, 0x804bb07);\n    puts(\"%88c%n\", 42, 0x804bb08);\n    puts(\"%137c%n\", 42, 0x804bb09);\n    puts(\"%227c%n\", 42, 0x804bb0a);\n    puts(\"%137c%n\", 42, 0x804bb0b);\n    puts(\"%209c%n\", 42, 0x804bb0c);\n    puts(\"%153c%n\", 42, 0x804bb0d);\n    puts(\"%205c%n\", 42, 0x804bb0e);\n    puts(\"%128c%n\", 42, 0x804bb0f);\n}\n</code></pre>\n <p>\n  What can the reason be?\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/FBqlL.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/FBqlL.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "4k",
    "tags": [
        "gdb",
        "breakpoint",
        "crackme"
    ],
    "user": "sherlock",
    "time": "Jan 19, 2017 at 3:55",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<html><body><span class=\"comment-copy\">\n what is this error at the bottom saying that it cannot insert breakpoint at this location? if it cannot then it won't be hit\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I found out the reason myself and it was truly enlightening! To insert a breakpoint, gcc replaces the bytes at the beginning of the breakpoint location with\n  <code>\n   INT 3\n  </code>\n  instruction (\n  <code>\n   0xCC\n  </code>\n  byte) and records the original byte replaced in its internal table. The input was writing a shellcode at the location I was trying to set a breakpoint on. Since the shellcode was interfereing with the breakpoint, it was overwriting the\n  <code>\n   0xCC\n  </code>\n  bytes, thereby failing gcc to insert a software breakpoint.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "sherlock",
            "time": "Jan 19, 2017 at 9:29",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Nordwald",
                    "text": "<span class=\"comment-copy\">You can use hbreak to set a hardware breakpoint, but be aware that the overall amount you can use is limited by CPU support</span>",
                    "time": null
                },
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">Note also that detecting the modification of the memory (while inserting <code>0xcc</code>) is a well known anti-debug technique for obfuscated software.</span>",
                    "time": null
                },
                {
                    "user": "Michal Fapso",
                    "text": "<span class=\"comment-copy\">Thanks a lot! This was exactly the reason of my breakpoints not working. I am debugging an application packed with the UPX packer. I have to wait until its fully unpacked in memory and just then can I set a breakpoint. Otherwise the <code>0xcc</code> break instruction is rewritten by the unpacking routine.</span>",
                    "time": null
                }
            ]
        }
    ]
}