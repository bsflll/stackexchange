{
    "title": "Is there a way to confirm and decompress files that I suspect are compressed with a very early format of PKZIP?",
    "link": "https://reverseengineering.stackexchange.com/questions/22925/is-there-a-way-to-confirm-and-decompress-files-that-i-suspect-are-compressed-wit",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a very large number of files (tens of thousands) who's binary all begins with 0x00 0x06.  They do not open with 7-ZIP.  I notice also that all Office files seem to share the same next 32 bytes.\n </p>\n <pre><code>A03D8B002E542C0DE10000C41EF0016000007FFF120030483E09F883AD3C0362\n</code></pre>\n <p>\n  It is a very old format, so I cannot find a decompression program, and do not even know how to confirm that it is the indeed an old PKZIP format.\n </p>\n <p>\n  The compressed file is indeed compressed by about 50%.\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 2,
    "views": "2k",
    "tags": [
        "file-format",
        "encryption",
        "decompress"
    ],
    "user": "youcantexplainthat",
    "time": "Jan 9, 2020 at 12:41",
    "comments": [
        {
            "user": "Avery3R",
            "text": "<html><body><span class=\"comment-copy\">\n Do the file contents start with\n <code>\n  PK\n </code>\n ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "youcantexplainthat",
            "text": "<html><body><span class=\"comment-copy\">\n No, with 0x00 0x06\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "tibar",
            "text": "<html><body><span class=\"comment-copy\">\n Do you have the application that created those files ? Can you share one of them ? There are plenty of pkzip-like compression programs out there, so we would need more context to actually provide something meaningful.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  On Linux, creating a fake file using\n </p>\n <pre><code>perl -e 'print \"\\x00\\x06\\xde\\xad\\xbe\\xef\";' > foo\n</code></pre>\n <p>\n  and running\n  <code>\n   file foo\n  </code>\n  yields\n </p>\n <pre><code>foo: TTComp archive data\n</code></pre>\n <p>\n  Then it's easy:\n  <a href=\"http://fileformats.archiveteam.org/wiki/TTComp_archive\" rel=\"nofollow noreferrer\">\n   http://fileformats.archiveteam.org/wiki/TTComp_archive\n  </a>\n  which says that it used the early\n  <a href=\"http://fileformats.archiveteam.org/wiki/PKWARE_DCL_Implode\" rel=\"nofollow noreferrer\">\n   PKWARE \"implode\" algorithm\n  </a>\n </p>\n <blockquote>\n  <p>\n   DCL Implode is not the same format as ZIP's old \"implode\" compression\n  method (#6). It is unfortunate that there are two formats named\n  \"implode\"  associated with the same company. It can be used in ZIP, as\n  compression  method #10, but support for this is limited.\n  </p>\n  <p>\n   The terms \"blast\" and \"explode\" are sometimes used in association with\n  this format.\n  </p>\n </blockquote>\n <p>\n  There are decoders for it, for example\n  <a href=\"https://github.com/JoshVarga/blast\" rel=\"nofollow noreferrer\">\n   this one\n  </a>\n  written in Go.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Leo B.",
            "time": "Jan 14, 2020 at 23:42",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I would first confirm the file format. Without the entire file this is difficult. Recommend you run the application through a signature based identification program to identify matches.\n </p>\n <p>\n  For example TridNet which detects over 12,000 different file types:\n </p>\n <p>\n  <a href=\"http://mark0.net/soft-tridscan-e.html\" rel=\"nofollow noreferrer\">\n   TriDNet\n  </a>\n  <a href=\"http://mark0.net/onlinetrid.html\" rel=\"nofollow noreferrer\">\n   Online TriDNet\n  </a>\n </p>\n <p>\n  Based on the file bytes provided (which may not be sufficient to determine) expect file type is TTComp archive compressed (bin-4K).\n </p>\n <p>\n  If TTComp format, the first byte 0x0 indicates binary file; 0x06 indicates a 4096 byte dictionary which was the most common size dictionary for this file type. \nThese files can be decompressed with\n  <a href=\"http://www.exelana.com/techie/c/ttdecomp.html\" rel=\"nofollow noreferrer\">\n   TTDecomp\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "chentiangemalc",
            "time": "Jan 15, 2020 at 6:40",
            "is_accepted": false,
            "comments": []
        }
    ]
}