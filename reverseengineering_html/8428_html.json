{
    "title": "IDAPro, the arguments could not be passed to the python script",
    "link": "https://reverseengineering.stackexchange.com/questions/8428/idapro-the-arguments-could-not-be-passed-to-the-python-script",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Using IDA 6.6, I cannot pass command line arguments to the IDAPython script.\n </p>\n <p>\n  The command I use is:\n </p>\n <pre><code>idaq64 -c -A -S\"myscrip.py arg1\" thebinpath. \n</code></pre>\n <p>\n  Here is the demo script\n  <code>\n   myscript.py\n  </code>\n  :\n </p>\n <pre><code>import sys\nif len(sys.argv) >= 2:\n    print(\"Successfully received parameters: \" + str(sys.argv))\nelse:\n    print(\"Failed receiving parameters!!\")\n</code></pre>\n <p>\n  I obviously expect the python script to print the \"Successfully received parameters\" sentence with \"arg1\" as the only parameter, however \"Failed receiving parameters!!\" is printed instead.\n </p>\n <p>\n  For some unknown reason\n  <code>\n   sys.argv\n  </code>\n  has only one string (\n  <code>\n   myscript.py\n  </code>\n  ).\n </p>\n <p>\n  I guess that there might be another way of getting these parameters, is this right?\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 1,
    "views": "3k",
    "tags": [
        "ida",
        "idapython"
    ],
    "user": "William",
    "time": "Jul 27, 2018 at 5:01",
    "comments": [
        {
            "user": "joxeankoret",
            "text": "<html><body><span class=\"comment-copy\">\n I have had problems as well with arguments in IDAPython scripts. My recommendation, which is what I do and works, is to use environment variables, like: SOME_VAR=value idaq64 -A -S\"script.py\" binary\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "William",
            "text": "<html><body><span class=\"comment-copy\">\n Thank you for your reply. I later find another solution for this. The python arguments seems to be stored in the idc.ARGV. So I just use idc.ARGV to test the arguments.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Roughly three years have passed and this relatively simple question still lacks a proper answer. Encountering the same issue today using IDA 7.0, I might as well spend the time providing a proper answer.\n </p>\n <hr/>\n <p>\n  Quoting from IDA's help file\n </p>\n <blockquote>\n  <p>\n   <code>\n    -S###\n   </code>\n  </p>\n  <p>\n   Execute a script file when the database is opened.\n  The script file extension is used to determine which extlang will run the script.\n  </p>\n  <p>\n   It is possible to pass command line arguments after the script name.\n  </p>\n  <p>\n   For example:\n   <code>\n    -S\"myscript.idc argument1 \\\"argument 2\\\" argument3\"\n   </code>\n  </p>\n  <p>\n   The passed parameters are stored in the\n   <code>\n    ARGV\n   </code>\n   global IDC variable. Use\n   <code>\n    ARGV.count\n   </code>\n   to determine the number of arguments. The first argument\n   <code>\n    ARGV[0]\n   </code>\n   contains the script name\n  </p>\n </blockquote>\n <p>\n  The documentation quoted above provides an explicit example for the IDC scripting language but leaves us to interpolate / guess what would be the IDAPython equivalent.\n </p>\n <p>\n  Naturally, one might assume idc's\n  <code>\n   ARGV\n  </code>\n  parameter will be translated to python's well known\n  <code>\n   sys.argv\n  </code>\n  , which is used precisely for that in most python files as is well-documented to hold the command line arguments provided when a script is run.\n </p>\n <p>\n  The name resemblance fooled me too, however because of how python scripts are executed in IDA the documentation above should be treated literally in python as well. The\n  <code>\n   ARGV\n  </code>\n  is\n  <em>\n   the only place\n  </em>\n  arguments are accessible to IDA python scrips executed using the\n  <code>\n   -S\n  </code>\n  flag.\n </p>\n <p>\n  In IDA python, however, it is not available as a global paramter but should be accessed through the\n  <code>\n   idc\n  </code>\n  module.\n </p>\n <hr/>\n <p>\n  Here's a simple example;\n </p>\n <p>\n  given the followingf\n  <code>\n   myscript.py\n  </code>\n  file:\n </p>\n <pre><code>import sys, idc\n\nprint(\"Sys args: \" + str(sys.argv))\nprint(\"Idc args: \" + str(idc.ARGV))\n</code></pre>\n <p>\n  Executing the following command (ignoring the usual IDA banner):\n </p>\n <pre><code>ida64 -A -S\"myscript.py\" arg1 \"arg one and a half\" arg2 -L/some/other/flags/logfile.txt -t\n</code></pre>\n <p>\n  Will result in the following output:\n </p>\n <pre><code>Sys args: []\nIdc args: [\"arg1\", \"arg one and a half\", \"arg2\"]\n</code></pre>\n</div>\n</body></html>",
            "votes": "6",
            "user": "0xC0000022L",
            "time": "Jul 27, 2018 at 11:49",
            "is_accepted": false,
            "comments": []
        }
    ]
}