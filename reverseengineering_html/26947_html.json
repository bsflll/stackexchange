{
    "title": "Android app Viber (com.viber.voip) mitm",
    "link": "https://reverseengineering.stackexchange.com/questions/26947/android-app-viber-com-viber-voip-mitm",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to see what viber is sending out of my android phone, I'm using mitm proxy (custom server) but the app is using certificate pining to detect the proxy and\n  <strong>\n   close the connection after the handshake is done.\n  </strong>\n </p>\n <p>\n  I know the basic method of patching OkHttp's CertificatePinner.\nThe problem with viber is that they went to extreme lengths to hide the pinning.\nMost apps I have seen were easy to patch, and the signature or the cert was not hidden.\n </p>\n <p>\n  I found around 7 keystores (bks) in the app, but no calls to CertificatePinner, no sha1/ or sha256/ signatures. am I missing something?\n </p>\n <p>\n  I also looked for Custom TrustManagers but could not find anything useful, mostly because the app is full of ads, (google, facebook, yandex, adjust.com, ...) some of these ad libraries have their own certificates and keystores\n </p>\n <p>\n  <strong>\n   Any ideas on how the app is pinning the certificate? did I miss something?\n  </strong>\n </p>\n <p>\n  (PS: this is for research purposes only)\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "496",
    "tags": [
        "android",
        "apk"
    ],
    "user": "Thabit.exe",
    "time": "Feb 4, 2021 at 21:40",
    "comments": [
        {
            "user": "morsisko",
            "text": "<html><body><span class=\"comment-copy\">\n The cert pinning mechanism might be in native code.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n Typically a pinned certificate is not included in the app, instead just a SHA-1 or SHA-256 of the certificate or it's public key is used and included. Therefore if you know the server cert chain I would hash each cert or it's public key(s) and try a raw search on all files in the app if one of the hashes are included in binary, hex or base64 format. Most likely you will end up in one of the 30+ native libraries included in the app.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "multithr3at3d",
            "text": "<html><body><span class=\"comment-copy\">\n Have you looked into using something like Frida to dynamically hook and disable cert pinning?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}