{
    "title": "How do I determine the length of a routine on ARMv7?",
    "link": "https://reverseengineering.stackexchange.com/questions/2825/how-do-i-determine-the-length-of-a-routine-on-armv7",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am disassembling and reverse engineering the logic of an assembly routine written in ARMv7 (hope I'm using the right terminology, as I'm a newbie for this particular processor).\n </p>\n <p>\n  In doing so, I came across this site:\n  <a href=\"http://www.davespace.co.uk/arm/introduction-to-arm/pc.html\" rel=\"nofollow\" title=\"Introduction to ARM\">\n   Introduction to ARM\n  </a>\n  . In order to determine how much code I need to disassemble, first, I need to determine the length of the code. It is my understanding that I only need to look for\n  <code>\n   [Bxx][2]\n  </code>\n  (branch) instructions and instructions that alter the PC (program counter), for example,\n </p>\n <ul>\n  <li>\n   <code>\n    MOV PC, r14\n   </code>\n  </li>\n  <li>\n   <code>\n    POP {r4, r5, pc}\n   </code>\n  </li>\n </ul>\n <p>\n  Can someone please advise if I have missed out any instructions that I need to look out for? Thank you.\n </p>\n</div>\n</body></html>",
    "votes": "8",
    "answers": 2,
    "views": "276",
    "tags": [
        "disassembly",
        "arm"
    ],
    "user": "chuacw",
    "time": "May 27, 2014 at 20:45",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Here's what IDA considers a return in ARM:\n </p>\n <ul>\n  <li>\n   <code>\n    RET\n   </code>\n   (=\n   <code>\n    MOV PC, LR\n   </code>\n   )\n  </li>\n  <li>\n   <code>\n    POP {reglist}\n   </code>\n   if\n   <code>\n    reglist\n   </code>\n   includes\n   <code>\n    LR\n   </code>\n   or\n   <code>\n    PC\n   </code>\n  </li>\n  <li>\n   <code>\n    LDMFD SP, {reglist}\n   </code>\n   ,\n   <code>\n    LDMED SP, {reglist}\n   </code>\n   or\n   <code>\n    LDMDB R11, {reglist}\n   </code>\n   if\n   <code>\n    reglist\n   </code>\n   includes\n   <code>\n    LR\n   </code>\n   or\n   <code>\n    PC\n   </code>\n  </li>\n  <li>\n   <code>\n    LDR PC, [SP], #4\n   </code>\n  </li>\n  <li>\n   <code>\n    BX LR\n   </code>\n  </li>\n  <li>\n   <code>\n    BX reg\n   </code>\n   if preceded by\n   <code>\n    POP {reglist}\n   </code>\n   and\n   <code>\n    reglist\n   </code>\n   includes\n   <code>\n    reg\n   </code>\n   .\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "7",
            "user": "Igor Skochinsky",
            "time": "Sep 23, 2013 at 10:57",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In fact, there may be something like:\n </p>\n <pre><code>.text:00192CB6                 POP             {R4}\n.text:00192CB8                 B.W             sub_268508\n.text:00192CB8 ; End of function XXX::YYY::zZz(void)\n</code></pre>\n <p>\n  IIRC I also have seen conditional branches leading outside of what I would expect to be function boundaries, but I cannot find any example now.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "18446744073709551615",
            "time": "May 22, 2014 at 7:44",
            "is_accepted": false,
            "comments": []
        }
    ]
}