{
    "title": "Radare2: pd command ignores cfg.bigendian setting",
    "link": "https://reverseengineering.stackexchange.com/questions/19809/radare2-pd-command-ignores-cfg-bigendian-setting",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am currently using\n  <code>\n   radare2\n  </code>\n  to disassemble a raw ARM binary (bootloader) in little endian format. I used the command\n  <code>\n   e cfg.bigendian = false\n  </code>\n  to set the endianness, but the\n  <code>\n   pd\n  </code>\n  command seems to ignore my settings. In particular, I used the following chain of commands:\n </p>\n <pre><code>$ r2 -a arm  bootloader.img\n[0x00000000]> s 0xa48\n[0x00000a48]> e cfg.bigendian = false\n[0x00000a48]> pxw 4\n0x00000a48  0xe92d41c0  // This is correct\n[0x00000a48]> pd 1\n0x00000a48      c0412de9  invalid // This is the wrong ordering\n</code></pre>\n <p>\n  When I use the following command:\n </p>\n <pre><code>[0x00000a48]> e cfg.bigendian = true\n[0x00000a48]> pxw 4\n0x00000a48  0xc0412de9 \n[0x00000a48]> pd 1\n0x00000a48      c0412de9       invalid\n</code></pre>\n <p>\n  The byte ordering of pxw changes, but the byte ordering of pd does not.\n </p>\n <p>\n  How do I tell\n  <code>\n   pd\n  </code>\n  (or any other disassembler command) to assume a certain endianness? I am new to using\n  <code>\n   radare2\n  </code>\n  , so it might be that I am missing something here - feel free to point out any mistakes.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "442",
    "tags": [
        "radare2",
        "disassemblers"
    ],
    "user": "Sleik",
    "time": "Nov 3, 2018 at 19:47",
    "comments": [],
    "answers_data": []
}