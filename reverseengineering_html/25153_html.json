{
    "title": "Intercepting packets from Electron App to keyboard in Linux",
    "link": "https://reverseengineering.stackexchange.com/questions/25153/intercepting-packets-from-electron-app-to-keyboard-in-linux",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a USB keyboard which has an Electron app to set the macros on the keyboard. I unpacked the\n  <code>\n   app.asar\n  </code>\n  file, and the JS files seem to indicate that it is a ReactJS app, and is a minified production build, and obfuscated too much to reverse engineer.\n </p>\n <p>\n  Another way to approach the problem seemed to be to use USB sniffer. I chose WireShark for the job. I wanted to capture all the data packets sent from the app to the keyboard, and hoped to reverse engineer that. The problem is, I can't find a way to capture the raw USB stream. I tried using WireShark to monitor\n  <code>\n   usbmon0\n  </code>\n  , but there is too much metadata, and separating the raw data from the protocol metadata seems to be a daunting task.\n </p>\n <p>\n  I do not have a hardware USB sniffer or a JTAG debugger. Is there a simple way to capture all the raw data going from the app to the keyboard?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "185",
    "tags": [
        "javascript",
        "usb",
        "sniffing"
    ],
    "user": "Sabyasachi Mukherjee",
    "time": "May 29, 2020 at 16:32",
    "comments": [
        {
            "user": "morsisko",
            "text": "<html><body><span class=\"comment-copy\">\n Wireshark has built-in filter. Why don't you use him? Check which method it uses to send/read data and apply correct filter like\n <code>\n  usb.transfer_type == 0x01\n </code>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Sabyasachi Mukherjee",
            "text": "<html><body><span class=\"comment-copy\">\n @morsisko unfortunately, all the transfer type is  0x01. However, this is an example of a packet:\n <code>\n  0000   c0 75 90 00 22 91 ff ff 53 01 84 06 03 00 2d 3c\n </code>\n <code>\n  0010   4b 71 d1 5e 00 00 00 00 7c 67 0d 00 8d ff ff ff\n </code>\n <code>\n  0020   40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n </code>\n <code>\n  0030   08 00 00 00 00 00 00 00 04 02 00 00 00 00 00 00\n </code>\n Unfortunately, I can't make heads or tails of this packet.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "multithr3at3d",
            "text": "<html><body><span class=\"comment-copy\">\n Was there a driver installed?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Sabyasachi Mukherjee",
            "text": "<html><body><span class=\"comment-copy\">\n @multithr3at3d no driver. Like I said, this is a keyboard on Linux. There was no driver installed.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}