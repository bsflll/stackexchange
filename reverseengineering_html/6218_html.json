{
    "title": "Pointer to a structure and TEST operation",
    "link": "https://reverseengineering.stackexchange.com/questions/6218/pointer-to-a-structure-and-test-operation",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have the following assembly line\n </p>\n <pre><code> test byte ptr [esp + 44h], 1\n jmp SomeCode; \n .....\n</code></pre>\n <p>\n  from a further analysis, I know that esp points at wShowWindow of the STARTUPINFO structure. \nI have written the following:\n </p>\n <pre><code>STARTUPINFO *esp_pointer;\nesp_pointer -> wShowWindow; \nif(*(esp_pointer) != 1){\n    SomeCode;\n}\n</code></pre>\n <p>\n  Is that a right transformation in C ? What do you mean?\n </p>\n <p>\n  best regards,\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "133",
    "tags": [
        "assembly"
    ],
    "user": "user3097712",
    "time": "Sep 10, 2014 at 17:41",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n esp_pointer -> wShowWindow is located at 0x30 0r 0n48 not at either 0x44 or at 0n44  you have some wrong analysis also when doing STARTUPINFO *esppointer you need to allocate space for the struct with some malloc etc prior to accessing members else you end up with a crash      STARTUPINFOA *psi = ( STARTUPINFOA * ) calloc(1,sizeof(STARTUPINFOA));     psi->cb = sizeof(STARTUPINFO);     if(psi->wShowWindow )     {         printf(\"foo\");     }\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <ul>\n  <li>\n   Don't try to translate assembly to C line by line. You can't.\n  </li>\n  <li>\n   The assembly you posted is probably wrong. A\n   <code>\n    jmp\n   </code>\n   is an unconditonal jump; what follows after a\n   <code>\n    test\n   </code>\n   instruction is normally a\n   <code>\n    jz\n   </code>\n   or\n   <code>\n    jnz\n   </code>\n   which jump depending on the result of the test.\n  </li>\n  <li>\n   You say\n   <code>\n    esp\n   </code>\n   points at\n   <code>\n    wShowWindow\n   </code>\n   . That would mean\n   <code>\n    [esp+44h]\n   </code>\n   points at something way behind the structure, which makes no sense. Maybe what you wanted to say is \"I know i have a\n   <code>\n    STARTUPINFO\n   </code>\n   structure on the stack at 14h, so\n   <code>\n    [esp+44h]\n   </code>\n   should be the\n   <code>\n    wShowWindow\n   </code>\n   component\" ?\n  </li>\n  <li>\n   If you're right with\n   <code>\n    STARTUPINFO\n   </code>\n   somewhere on the stack - it can't be directly at\n   <code>\n    [esp]\n   </code>\n   , as mentioned -  please make sure\n   <code>\n    [esp+44h]\n   </code>\n   is\n   <code>\n    wShowWindow\n   </code>\n   , not\n   <code>\n    dwFlags\n   </code>\n   , as the\n   <code>\n    test\n   </code>\n   operation would make much more sense with the\n   <code>\n    dwFlags\n   </code>\n   bitmap than an integer.\n  </li>\n </ul>\n <p>\n  All that said,\n  <code>\n   test\n  </code>\n  tests if a bit is set; a compare would be a\n  <code>\n   cmp\n  </code>\n  . So if you really really want an example in C, it would look something like\n </p>\n <pre><code>STARTUPINFO p;\np=(STARTUPINFO *) ((char *) esp+0x14);   // this assumes the structure starts \n                                         // at offset 0x14 from esp\nif (p->wShowWindow & 1) {                // access the wShowWindow component at offset\n                                         // 0x30 in the structure, which is 0x44 from esp\n    ....\n}\n</code></pre>\n <p>\n  Note i didn't include the\n  <code>\n   SomeCode\n  </code>\n  , as the \"jump there\" might just mean \"skip some instructions\", and your unconditional jump seems to be wrong anyways.\n </p>\n <p>\n  Please, when posting a question next time, be a bit more precise in what you ask and what you copy/paste.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Guntram Blohm",
            "time": "Sep 11, 2014 at 7:46",
            "is_accepted": false,
            "comments": []
        }
    ]
}