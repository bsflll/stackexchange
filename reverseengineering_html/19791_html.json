{
    "title": "IDA Pro's debugging - Stack view , Register values and ASCII decoding",
    "link": "https://reverseengineering.stackexchange.com/questions/19791/ida-pros-debugging-stack-view-register-values-and-ascii-decoding",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Below questions are related to IDA Pro debugging:\n </p>\n <p>\n  1) How can I see values of general registers directly in Registers view of IDA Pro similar to Olly instead of clicking on jump link? It is having jump link which takes to declaration of value (See the right top corner of the attached image for comparison between IDA Pro and Olly)\n </p>\n <p>\n  2) How can I see values of stack in ASCII format in Stack view like Ollydb. I see some debug007:1000dfXXXX kind values, but not ASCII decoded values.\n </p>\n <p>\n  3) Further I would like to see arguments being passed to APIs or Functions. For example ReadFile api takes arguments of hFile, Ollydb shows it in stack view but IDA pro's stack view is not clear (See bottom right corner of the attached image to compare between IDA pro and ollydb)\n </p>\n <p>\n  4) When I try to use ASCII as decoding format for Text of HEX view it is not showing right output it is completely different from Olly.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/RuUsb.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"screenshot of IDA Pro and Olly comparison\" src=\"https://i.sstatic.net/RuUsb.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "3k",
    "tags": [
        "ida",
        "debugging"
    ],
    "user": "cheng meng",
    "time": "Nov 2, 2018 at 5:25",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Ida and ollydbg are very different, ollydbg is just a debugger, ida is a powerful disassembler to reverse with a debugger.\n </p>\n <p>\n  In your capture, ollydbg places the names of the arguments in the stack.\nIda is more generic and shows the arguments in the call.\nOllydbg is only a 32-bit debugger and the arguments are passed on the stack, but ida is a 32 and 64 bit disassembler and in 64 bits the arguments are no longer passed through the stack, for this reason it is more effective to show the names of the arguments in the call, which works in 32 and 64 bits.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "ricnar",
            "time": "Jun 14, 2019 at 11:40",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Alya Gomaa",
                    "text": "<span class=\"comment-copy\">ok how to view the arguments of the call in ASCII format in ida though?</span>",
                    "time": null
                }
            ]
        }
    ]
}