{
    "title": "Disassembled code: Find out command-line arguments of program",
    "link": "https://reverseengineering.stackexchange.com/questions/16108/disassembled-code-find-out-command-line-arguments-of-program",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Imagine a program is launched (on windows) with a few starting parameters, for example a number and a string.\n </p>\n <p>\n  When disassembling the program (With PEiD for example), how can I find out the starting parameters? What I'd like to do is find out what \"variable\" the starting parameters are assigned, and then track the use of that variable, in order to find the section in which they get used.\n </p>\n <p>\n  I am completely new to all of this assembly stuff, so this question may be stupid, but I didn't manage to find my answer through simple googling.\nThanks!\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "931",
    "tags": [
        "disassembly",
        "arguments",
        "program-analysis"
    ],
    "user": "user2065501",
    "time": "Aug 16, 2017 at 16:35",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n do you mean command-line arguments?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user2065501",
            "text": "<html><body><span class=\"comment-copy\">\n @IgorSkochinsky Whooops, yeah, that's exactly what I meant. I kind of forgot the word while writing this post, my bad.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Unlike Linux, on Windows command-line arguments are not passed to the program's entrypoint but must be retrieved from the OS by using the API\n  <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms683156(v=vs.85).aspx\" rel=\"nofollow noreferrer\">\n   <code>\n    GetCommandLine\n   </code>\n  </a>\n  . However, it is rarely used in actual programs. Usually it is the CRT startup which calls it, then either passes it to the\n  <a href=\"https://blogs.msdn.microsoft.com/oldnewthing/20110525-00/?p=10573\" rel=\"nofollow noreferrer\">\n   <code>\n    WinMain\n   </code>\n   function\n  </a>\n  (for GUI programs), or splits it into the argument array (\n  <code>\n   argv\n  </code>\n  ) and passes that to\n  <code>\n   main\n  </code>\n  (for console programs).\n </p>\n <p>\n  Some disassemblers (e.g. IDA) can automatically identify the CRT code and show you just the\n  <code>\n   main\n  </code>\n  /\n  <code>\n   WinMain\n  </code>\n  function, in which case you can just look at the corresponding arguments (\n  <code>\n   argv\n  </code>\n  /\n  <code>\n   argc\n  </code>\n  or\n  <code>\n   lpCmdLine\n  </code>\n  ).\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Igor Skochinsky",
            "time": "Aug 16, 2017 at 18:08",
            "is_accepted": true,
            "comments": []
        }
    ]
}