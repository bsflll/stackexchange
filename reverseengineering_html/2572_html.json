{
    "title": "How to zip or compress resources of your .NET application",
    "link": "https://reverseengineering.stackexchange.com/questions/2572/how-to-zip-or-compress-resources-of-your-net-application",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am a Windows application developer, I'd build a few .NET applications and I can see It is\n  <strong>\n   very easy to crack\n  </strong>\n  out resources of my Application even some simple applications like Resource Editor are able to crack my application by just deleting the Registration Dialog Box to make my application a freeware without having a proper license key.\n </p>\n <p>\n  Is there any\n  <code>\n   .EXE\n  </code>\n  compressor or any other other tool which I can use to save my application resources\n  <strong>\n   as well as my scripts\n  </strong>\n  , Can anyone suggest me How can I\n  <strong>\n   avoid Recompilation\n  </strong>\n  of my script. Any help will be appreciated.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 3,
    "views": "391",
    "tags": [
        "decompilation",
        "unpacking",
        "compilers"
    ],
    "user": "khk",
    "time": "Aug 2, 2013 at 11:33",
    "comments": [
        {
            "user": "Ditmar Wendt",
            "text": "<html><body><span class=\"comment-copy\">\n You need to explain what a \"script\" is.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "khk",
            "text": "<html><body><span class=\"comment-copy\">\n I mean assemblies\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The idea of truly protecting resources is impossible -- every protection you implement can and will be broken. Assume this, and do not put credentials or private data in your resources/code.\n </p>\n <p>\n  The idea behind resource encryption/compression is summarized well in\n  <a href=\"http://www.codeproject.com/Articles/19537/XResFile-Files-Stored-in-Resources-Part-3-Encrypte\" rel=\"nofollow\">\n   this codeproject article\n  </a>\n  , the same ideas apply to .NET. You use some encryption method, add the encrypted file to your project, load it via your code, and run your decryption/decompression algorithm on it.\n </p>\n <p>\n  Realistically, though, it sounds like you're looking for a .NET obfuscator with compression features. I don't believe stackexchange is the place for product advertisement, so here is a good objective list:\n  <a href=\"http://en.wikipedia.org/wiki/List_of_obfuscators_for_.NET\" rel=\"nofollow\">\n   http://en.wikipedia.org/wiki/List_of_obfuscators_for_.NET\n  </a>\n </p>\n <p>\n  <strong>\n   In regards to making cracking your application more difficult,\n  </strong>\n  you should consider using asymmetric encryption\n  <a href=\"http://www.drdobbs.com/licensing-using-symmetric-and-asymmetric/184401687\" rel=\"nofollow\">\n   as described here\n  </a>\n  and license key files. Think of creative ways to perform license checks throughout your application. Using a keyfile you're preventing the possibility of anyone ever writing a keygen for your application, and adding a large number of checks for the license will make it arduous for anyone attempting to crack the application.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Ditmar Wendt",
            "time": "Aug 2, 2013 at 12:37",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <ul>\n  <li>\n   <p>\n    If your goal is to prevent someone tampering with your .NET application binaries, then .NET provides a solution:\n    <a href=\"http://msdn.microsoft.com/en-us/library/wd40t7ad.aspx\" rel=\"nofollow\" title=\"MSDN article\">\n     Sign (\"strong-name\") your assemblies\n    </a>\n    . This process makes use of asymmetric keys and checksums, the loader will notice any changes to the signed assemblies and refuse to load them.\n   </p>\n  </li>\n  <li>\n   <p>\n    If your goal is to prevent people from decompiling (looking at) your code, you need a\n    <a href=\"http://en.wikipedia.org/wiki/Obfuscation_%28software%29\" rel=\"nofollow\" title=\"Wikipedia article\">\n     code obfuscation\n    </a>\n    tool.\n   </p>\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "1",
            "user": "stakx",
            "time": "Aug 3, 2013 at 10:25",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Antimony",
                    "text": "<span class=\"comment-copy\">Signing it will only help against MiTM and even then only if you get the key through a seperate channel.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you are looking for freeware tools to zip your resources and to keep your scripts secure, then I'll recommend you to use\n  <strong>\n   <code>\n    Confuser\n   </code>\n  </strong>\n </p>\n <p>\n  This is a freeware application, even you can download its source code.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Chitransh",
            "time": "Aug 3, 2013 at 12:17",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">A link and a little description of the tool wouldn't hurt.</span>",
                    "time": null
                }
            ]
        }
    ]
}