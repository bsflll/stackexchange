{
    "title": "Enumerate all XefsTo a Segment in IDAPython",
    "link": "https://reverseengineering.stackexchange.com/questions/3669/enumerate-all-xefsto-a-segment-in-idapython",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  What is the best method to enumerate all xrefs to addresses in a particular segment? I came up with a brute-force approach (as seen below). The code scans each address in a segment and checks for an XrefTo the address.\n </p>\n <pre><code>seg_list = []\nfor seg in Segments():\n    seg_list.append(seg)\n\n# logic will be added to remove section that are code later\nseg_list.reverse()\nfor seg in seg_list:  \n    start = SegStart(seg)\n    end = SegEnd(seg)\n    while start < end:\n        gen_xrefs = XrefsTo(start, 0)\n        for xx in gen_xrefs:\n            print hex(start), hex(xx.frm)\n        start += 1\n</code></pre>\n <p>\n  This approach is very time consuming if I have multiple large segments. IDA adds\n  <code>\n   DATA XREF\n  </code>\n  comments when viewing the data manually. Are these xrefs stored in an accessible way from IDAPython or is there another more practical approach to find the xrefs to a segment?\n </p>\n <pre><code>mem_15d:00973000                 dd 1C8h dup(0)\nmem_15d:00973720 dword_973720    dd 101011Ch, 1000h      ; DATA XREF: mem_f08:00970678\u0018o\nmem_15d:00973728 off_973728      dd offset off_970178    ; DATA XREF: mem_f08:off_970178\u0018o\nmem_15d:00973728                                         ; mem_f08:0097017C\u0018o \n</code></pre>\n <p>\n  <em>\n   Note: Enumerating all xrefs from the code is not an option.\n  </em>\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 1,
    "views": "5k",
    "tags": [
        "idapython"
    ],
    "user": "alexanderh",
    "time": "Feb 12, 2014 at 17:49",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can use Heads function from idautils module.\nSo your code will look like that:\n </p>\n <pre><code>import idautils\nseg_list = []\nfor seg in Segments():\n    seg_list.append(seg)\n\n# logic will be added to remove section that are code later\nseg_list.reverse()\nfor seg in seg_list:  \n    start = SegStart(seg)\n    end = SegEnd(seg)\n    for ea in idautils.Heads(start, end):\n        gen_xrefs = XrefsTo(ea, 0)\n        for xx in gen_xrefs:\n            print hex(ea), hex(xx.frm)\n</code></pre>\n</div>\n</body></html>",
            "votes": "4",
            "user": "w s",
            "time": "Feb 12, 2014 at 18:49",
            "is_accepted": true,
            "comments": [
                {
                    "user": "alexanderh",
                    "text": "<span class=\"comment-copy\">And I thought idautils.Heads was just for code. Thanks for the answer.</span>",
                    "time": null
                },
                {
                    "user": "Willem Hengeveld",
                    "text": "<span class=\"comment-copy\">There may be xrefs to addresses which are not a Head, like xrefs to undefined data, or xrefs into strutures.</span>",
                    "time": null
                }
            ]
        }
    ]
}