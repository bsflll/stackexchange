{
    "title": "DOS interrupt problem with int 21h 0ah",
    "link": "https://reverseengineering.stackexchange.com/questions/11399/dos-interrupt-problem-with-int-21h-0ah",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have this assembly code that reads a string of 120 bytes. If I try to fill the buffer by pressing a key until it stops writing, the enter key doesn't work. I counted the characters and I found that I have written 121 characters.\n </p>\n <p>\n  Is this normal? Is there a way to avoid it? Another interruption perhaps?\n </p>\n <p>\n  The code:\n </p>\n <pre><code>.model small\n.stack 100h\n.386\n.data \n    MSG DB \"Please give me the string (max 120 chars): \", 10, 13, \"$\"\n    Sentence1 DB 121,?,121 dup(0)\n.code\nstart:\n    mov ax, @data\n    mov ds, ax\n\n    mov ah,09h\n    lea dx,A\n    int 21h\n\n    xor ax,ax        \n    mov dx, offset Sentence1\n    mov ah, 0Ah\n    int 21h\n    xor bx,bx\n    mov bl, Sentence1[1]\n    mov Sentence1[bx+2], '$' \n\n    mov ah, 4ch\n    int 21h\nend start  \n</code></pre>\n <p>\n  An example (imagine that is a 11 bytes buffer and not 121 bytes, for brevity):\n </p>\n <pre><code>Please give me the string (max 10 chars):\nAAAAAAAAAAA\n\\_________/\n     |\n    11 As\n</code></pre>\n <p>\n  If I press Enter at this point it doesn't work, but if I delete an A and press Enter, then it works.\n </p>\n <p>\n  I use Tasm and Tlink for compiling.\n </p>\n <p>\n  Regards.\n </p>\n <p>\n  [Edit] A typo.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "assembly",
        "dos"
    ],
    "user": "Kuro",
    "time": "Nov 25, 2015 at 12:25",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <p>\n   Is this normal?\n  </p>\n </blockquote>\n <p>\n  Yes.\n </p>\n <blockquote>\n  <p>\n   Is there a way to avoid it?\n  </p>\n </blockquote>\n <p>\n  You can use\n  <kbd>\n   Ctrl\n  </kbd>\n  +\n  <kbd>\n   C\n  </kbd>\n  or\n  <kbd>\n   Ctrl\n  </kbd>\n  +\n  <kbd>\n   Break\n  </kbd>\n  to exit buffered-input mode (this results in an\n  <code>\n   INT 23h\n  </code>\n  ).\n </p>\n <blockquote>\n  <p>\n   Another interruption perhaps?\n  </p>\n </blockquote>\n <p>\n  There are several DOS interrupt services that you could use to read input, but\n  <code>\n   INT 21h\n  </code>\n  /\n  <code>\n   AH=01h\n  </code>\n  is probably the next best option.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Jason Geffner",
            "time": "Nov 25, 2015 at 15:54",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">And if you want to see the actual code behind <code>INT 21h</code>/<code>AH=0Ah</code>, see <a href=\"https://www.google.com/webhp?q=%22cpmio.asm%22\" rel=\"nofollow noreferrer\">google.com/webhp?q=%22cpmio.asm%22</a></span>",
                    "time": null
                },
                {
                    "user": "peter ferrie",
                    "text": "<span class=\"comment-copy\">see <a href=\"http://reverseengineering.stackexchange.com/questions/8911/why-int-21h-ah-0ah-doesnt-work-in-emu86\" title=\"why int 21h ah 0ah doesnt work in emu86\">reverseengineering.stackexchange.com/questions/8911/â€¦</a> for the explanation - the enter key requires its own buffer slot.  If you fill the buffer completely, then you can't press enter.</span>",
                    "time": null
                },
                {
                    "user": "Kuro",
                    "text": "<span class=\"comment-copy\">Thank you for your answers. Now I have it clear. I tried with Emu8086 and it worked the another way around. Seems that is because of how dosbox emulates.</span>",
                    "time": null
                }
            ]
        }
    ]
}