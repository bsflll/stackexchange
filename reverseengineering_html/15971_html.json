{
    "title": "Dumpout Process Memory Layout During Loading Time",
    "link": "https://reverseengineering.stackexchange.com/questions/15971/dumpout-process-memory-layout-during-loading-time",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am working on a project where I need to use\n  <code>\n   LD_PRELOAD\n  </code>\n  to load some libraries into the memory space.\n </p>\n <p>\n  It's like:\n </p>\n <pre><code> LD_PRELOAD=\"./libapp.so\" ./my_app\n</code></pre>\n <p>\n  Due to certain reasons (I am actually working on some binary hacking), I must know\n  <strong>\n   the memory address\n  </strong>\n  (not a symbol) of certain functions (let's say,\n  <code>\n   foo\n  </code>\n  ) in\n  <code>\n   libapp.so\n  </code>\n  and instrument the binary code of\n  <code>\n   my_app\n  </code>\n  before execution.\n </p>\n <p>\n  However, due to\n  <code>\n   ASLR\n  </code>\n  (Address Space Layout Randomization), each time\n  <code>\n   libapp.so\n  </code>\n  would be loaded into different memory address, and I am unable to know the memory address of\n  <code>\n   foo\n  </code>\n  before execution.\n </p>\n <p>\n  I am thinking to somehow intercept the loading time, readout the memory address of\n  <code>\n   libapp.so\n  </code>\n  , perform some instrumentation on\n  <code>\n   my_app\n  </code>\n  with the memory address of\n  <code>\n   foo\n  </code>\n  , and then load\n  <code>\n   my_app\n  </code>\n  into the memory space.\n </p>\n <p>\n  So here is my question: how to intercept the loading process and acquire the memory address of\n  <code>\n   libapp.so\n  </code>\n  ?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "140",
    "tags": [
        "instrumentation",
        "binary-editing"
    ],
    "user": "lllllllllllll",
    "time": "Aug 1, 2017 at 2:22",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n gdb does have pending bps , solib events break etc does none of them work. bp xxx pending on , set solibevents x,y etc  or do you mean you want to do it standalone  if you are using ptrace apis u should be able to intercept loading events too ala gdb\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I think that one option could be to use\n  <code>\n   ptrace\n  </code>\n  , for example you can use\n  <code>\n   _dl_open()\n  </code>\n  instead of\n  <code>\n   LD_PRELOAD\n  </code>\n  . Look at this example:\n </p>\n <ul>\n  <li>\n   <a href=\"http://www.ars-informatica.com/Root/Code/2010_04_18/LinuxPTrace.aspx\" rel=\"nofollow noreferrer\">\n    http://www.ars-informatica.com/Root/Code/2010_04_18/LinuxPTrace.aspx\n   </a>\n  </li>\n </ul>\n <p>\n  Another option could be to use\n  <code>\n   gdb\n  </code>\n  for do that, for example you have the possibility to set a pending breakpoint to foo and then run the program.\n </p>\n <p>\n  Another option could be turn off the ASLR, you can do it using the\n  <code>\n   /proc/sys/kernel/randomize_va_space\n  </code>\n </p>\n <p>\n  To disable it you can run:\n </p>\n <pre><code>echo 0 | sudo tee /proc/sys/kernel/randomize_va_space\n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "0xC0000022L",
            "time": "May 28, 2018 at 14:25",
            "is_accepted": true,
            "comments": []
        }
    ]
}