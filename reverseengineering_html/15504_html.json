{
    "title": "Help reading a variable from an address in an executable?",
    "link": "https://reverseengineering.stackexchange.com/questions/15504/help-reading-a-variable-from-an-address-in-an-executable",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  ** Edit ** After some great help from @tylernygaard I have discovered that the same variable is being written to two difference places in the memory. They are both 'static' addresses. Problem solved. Original question below....\n </p>\n <p>\n  I posted a question earlier regarding \"reading\" a variable from an executable\n  <a href=\"https://reverseengineering.stackexchange.com/questions/15500/is-it-possible-to-extract-read-a-variable-out-of-a-running-exe-file/15501\">\n   here\n  </a>\n  (Please excuse my naivety in this area)\n </p>\n <p>\n  I simply wanted to \"read\" a Total variable from an executable whilst it was running.\n </p>\n <p>\n  I was recommended a program called Cheat Engine which I have downloaded, completed the tutorial and then used.\n </p>\n <p>\n  On one PC, Cheat Engine showed the variable at address \"0096E0B4\".\n </p>\n <p>\n  Out of curiosity I installed Cheat Engine on another PC and the variable was at address \"0096E0A4\"\n </p>\n <p>\n  These addresses are so close that I'm assuming this isn't just dynamically chosen at runtime (is it?). So I wondered if anyone knew why they would be different?\n </p>\n <p>\n  And whether it would still be possible to write some code to read the correct value?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "199",
    "tags": [
        "exe"
    ],
    "user": "John T",
    "time": "Jun 8, 2017 at 9:09",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You will know if they are static addresses if Cheat Engine shows them green on the search results screen. See pic related.\n  <a href=\"https://i.sstatic.net/s9c69.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/s9c69.jpg\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "tylernygaard",
            "time": "Jun 8, 2017 at 4:57",
            "is_accepted": true,
            "comments": [
                {
                    "user": "John T",
                    "text": "<span class=\"comment-copy\">That's brilliant info. Thanks. The variable <b>is</b> green. But then why is it a different address slightly from the other PC? Should it not be fixed every time? If you could add to your answer that would be great and I'll 'accept' it.</span>",
                    "time": null
                },
                {
                    "user": "tylernygaard",
                    "text": "<span class=\"comment-copy\">Hmm, that's interesting. Are you sure this value is representing exactly what you want and is not a duplicate/coincidence? I only ask because I have not run into this issue yet. I would suggest browsing that memory region and also seeing if the disassembly that writes/reads that value are the same to verify.  Also, if the address is found using a base pointer with module + offset, that module could possibly vary ever so slightly from your PC to the other's? Different OS, executable version, etc.</span>",
                    "time": null
                },
                {
                    "user": "tylernygaard",
                    "text": "<span class=\"comment-copy\">Are the differing add instructions showing at the same address in the disassembler?</span>",
                    "time": null
                },
                {
                    "user": "tylernygaard",
                    "text": "<span class=\"comment-copy\">Good to hear! If they are truly consecutive instructions, then yes, the value EAX holds is getting written to two different addresses. If they aren't actually consecutive, then it could be conditional (maybe it jumps to one or the other depending on). That should be easy to tell though! :)</span>",
                    "time": null
                },
                {
                    "user": "John T",
                    "text": "<span class=\"comment-copy\">@tylemygaard yep definitely consecutive. This is great news for me as I've only got one address to worry about. A massive thank you for all your help. Really appreciate the time you've spent going through this with me. Cheers :-)</span>",
                    "time": null
                }
            ]
        }
    ]
}