{
    "title": "Call Android method without running whole Android-App",
    "link": "https://reverseengineering.stackexchange.com/questions/13873/call-android-method-without-running-whole-android-app",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to ask if somebody is aware of tools/projects which are similar to the\n  <em>\n   Appcall\n  </em>\n  feature of IDA Pro[1] for Android Apps?\n </p>\n <p>\n  I'm looking for the possibility to run certain methods detected in the smali code without running the whole APK.\n </p>\n <p>\n  Thanks in advance for your help :-)\n </p>\n <p>\n  [1]\n  <a href=\"http://www.hexblog.com/?p=113\" rel=\"nofollow noreferrer\">\n   http://www.hexblog.com/?p=113\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "817",
    "tags": [
        "android",
        "gdb",
        "dynamic-analysis"
    ],
    "user": "bujindo",
    "time": "Nov 6, 2016 at 14:55",
    "comments": [
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n Check this:\n <a href=\"https://github.com/CalebFenton/simplify\" rel=\"nofollow noreferrer\">\n  github.com/CalebFenton/simplify\n </a>\n and this\n <a href=\"http://calebfenton.github.io/2016/04/30/dalvik-virtual-execution-with-smalivm/\" rel=\"nofollow noreferrer\">\n  calebfenton.github.io/2016/04/30/â€¦\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Martin",
            "text": "<html><body><span class=\"comment-copy\">\n Just to clarify:\n <code>\n  Appcall\n </code>\n requires you to run the binary before allowing you to call its functions. It won't work statically.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You should be able to write a separate application that dynamically loads the dex file from the app that you are interested in using\n  <a href=\"https://developer.android.com/reference/dalvik/system/DexClassLoader.html\" rel=\"noreferrer\">\n   DexClassLoader\n  </a>\n  , allowing you to construct classes and call methods from that dex file.\n </p>\n <p>\n  You can get the path to the other apk using PackageManager.getApplicationInfo(). The\n  <a href=\"https://developer.android.com/reference/android/content/pm/ApplicationInfo.html#sourceDir,\" rel=\"noreferrer\">\n   sourceDir\n  </a>\n  field of the returned ApplicationInfo object will have the path to the apk.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "JesusFreke",
            "time": "Nov 6, 2016 at 20:44",
            "is_accepted": true,
            "comments": [
                {
                    "user": "bujindo",
                    "text": "<span class=\"comment-copy\">Thanks for your fast help :-) This sounds like an appropriate solution :-)</span>",
                    "time": null
                }
            ]
        }
    ]
}