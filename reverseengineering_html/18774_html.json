{
    "title": "Recreating a lzma archive (non-streamed)",
    "link": "https://reverseengineering.stackexchange.com/questions/18774/recreating-a-lzma-archive-non-streamed",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am reversing a Dlink camera firmware (\n  <code>\n   dcs5000l_v1.03.05.bin\n  </code>\n  ) and am able to extract lzma data via\n  <code>\n   dd\n  </code>\n  and decompress it via\n  <code>\n   lzma -d lzma_data.lzma\n  </code>\n  . I want to be able to recreate the lzma archive from the extracted file to then later modify it. The problem is, I am not able to recreate the exact lzma file.\n </p>\n <h2>\n  Issue 1\n </h2>\n <p>\n  When I try to recompress the extracted data, I am able to get the the right properties (byte\n  <code>\n   0x5d\n  </code>\n  ) and dictionary size (\n  <code>\n   0x02000000\n  </code>\n  ) via\n </p>\n <p>\n  <code>\n   lzma -8 -z decompressed_data\n  </code>\n </p>\n <p>\n  , but the data is streamed, so the header does contain\n  <code>\n   0xFFFF...\n  </code>\n  instead of the uncompressed size (\n  <code>\n   0x6b660a\n  </code>\n  , in swapped endianess\n  <code>\n   0x0a666b\n  </code>\n  ).\n </p>\n <p>\n  Here is a comparison of the beginning of the original lzma data and my recreation:\n </p>\n <p>\n  <strong>\n   Original\n  </strong>\n </p>\n <pre>\n00000000: 5d00 0000 020a 666b 0000 0000 0000 006f  ].....fk.......o\n</pre>\n <p>\n  <strong>\n   Recreation\n  </strong>\n </p>\n <pre>\n00000000: 5d00 0000 02ff ffff ffff ffff ff00 006f  ]..............o\n</pre>\n <p>\n  From what I\n  <a href=\"http://manpages.ubuntu.com/manpages/trusty/man1/lzmp.1.html\" rel=\"nofollow noreferrer\">\n   read\n  </a>\n  , the data should only be compressed streamed when the lzma tools gets the data from stdin, but in my case I'm giving the complete file to the tool and would expect that the uncompressed size is written into the header. I dont't know whether my camera could handle streamed mode and would like to create non-streamed lzma data.\n </p>\n <p>\n  <em>\n   Any ideas how I could force that?\n  </em>\n </p>\n <h2>\n  Issue 2\n </h2>\n <p>\n  Besides that, I also have the issue of the recreated lzma payload beeing different. Starting from position\n  <code>\n   0000 00B0\n  </code>\n  , the lzma compressed data starts to differ:\n </p>\n <p>\n  <strong>\n   Original\n  </strong>\n </p>\n <pre>\n000000b0: 2d7b 73cd 13f6 1621 2ea9 ea09 20f1 8a47  -{s....!.... ..G\n000000c0: 0c5a 53cc d87f d893 45a2 5196 8960 84dd  .ZS.....E.Q.....\n</pre>\n <p>\n  <strong>\n   Recreation\n  </strong>\n </p>\n <pre>\n000000b0: 2d7b 73cd 13f6 1621 2ea9 ea09 20f1 8a4a  -{s....!.... ..J\n000000c0: 4634 378a ac21 efd9 c3e2 3ada 4744 a347  F47..!....:.GD.G\n</pre>\n <p>\n  The size of the compressed lzma archives also differs between the original (size: 4522684 bytes) and the recreated file (size: 4521221 bytes). From what I understood the streamed vs. non-streamed issue should not affect the actual compressed data and just append a 5 or 6 bytes end-of-stream marker to the end. So even though I have the right properties and dictionary size, the lzma compressed data differs in my recreation and has a different size.\n </p>\n <p>\n  <em>\n   Do you know why this could be the case and if I can fix it?\n  </em>\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "1k",
    "tags": [
        "firmware",
        "file-format",
        "unpacking",
        "embedded",
        "packers"
    ],
    "user": "kerm1t",
    "time": "Jul 12, 2018 at 15:15",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It’s hard to say for sure, but probably you’re not using the same library version or compression parameters as the original program. The same data may be represented by different compressed streams, so they can change with new versions which make compression more optimal or when you tweak some parameters, e.g. compression level. In general, slight differences in the compressed stream should not matter as long as the decompressed data is the same.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Jul 15, 2018 at 9:47",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It's likely that the lzma compressed archive you're working with was generated with an older library version, as Igor said. If you're recompressing the file with your system's built-in\n  <code>\n   lzma\n  </code>\n  command, you might not be getting the right output because it might just be aliased to\n  <code>\n   xz --format=lzma\n  </code>\n  . Refer to your system's man page for\n  <code>\n   xz\n  </code>\n  or\n  <code>\n   lzma\n  </code>\n  to confirm. If\n  <code>\n   lzma\n  </code>\n  is indeed aliased to\n  <code>\n   xz\n  </code>\n  , it's using XZ Utils to compress your archive, which uses a later version of the LZMA SDK.\n </p>\n <p>\n  You can try using LZMA Utils (\n  <a href=\"https://tukaani.org/lzma/\" rel=\"nofollow noreferrer\">\n   https://tukaani.org/lzma/\n  </a>\n  ), which is based on LZMA SDK 4.32. Simply:\n </p>\n <ol>\n  <li>\n   Clone their git repository\n  </li>\n </ol>\n <pre><code>git clone https://git.tukaani.org/lzma.git\n</code></pre>\n <ol start=\"2\">\n  <li>\n   Run\n   <code>\n    autogen.sh\n   </code>\n   in the project's root directory (make sure to install the required dependencies, like\n   <code>\n    automake\n   </code>\n   and\n   <code>\n    libtoolize\n   </code>\n   )\n  </li>\n  <li>\n   Run the newly generated\n   <code>\n    configure\n   </code>\n   shell script\n  </li>\n  <li>\n   Run\n   <code>\n    make\n   </code>\n   to compile the programs\n  </li>\n  <li>\n   You\n   <em>\n    could\n   </em>\n   run\n   <code>\n    make install\n   </code>\n   , but by this point, you should have a runnable\n   <code>\n    lzma\n   </code>\n   executable in\n   <code>\n    <Project Root>/src/lzma/\n   </code>\n   . You can run the executable directly from this directory without changing your system\n   <code>\n    lzma\n   </code>\n   configuration.\n  </li>\n </ol>\n <p>\n  (These instructions are also in the\n  <code>\n   INSTALL\n  </code>\n  file in the project's root directory, but it's fairly difficult to understand first time around. I deciphered it here for convenience.)\n </p>\n <p>\n  You should be able to compress your file by running the following command, assuming\n  <code>\n   in\n  </code>\n  is your input file,\n  <code>\n   out.lzma\n  </code>\n  is your output file, and\n  <code>\n   ~/lzma/src/lzma/lzma\n  </code>\n  is your compiled\n  <code>\n   lzma\n  </code>\n  binary:\n </p>\n <pre><code>~/lzma/src/lzma/lzma -9 -c -z in >out.lzma\n</code></pre>\n <p>\n  I'd suggest trying to recompress the unmodified extracted file to verify this method works before trying to compress the modified file, just in case.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Rafi Mueen",
            "time": "Jan 15, 2020 at 0:32",
            "is_accepted": false,
            "comments": []
        }
    ]
}