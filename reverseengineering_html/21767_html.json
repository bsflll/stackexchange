{
    "title": "DEX file referenced type is not defined in file",
    "link": "https://reverseengineering.stackexchange.com/questions/21767/dex-file-referenced-type-is-not-defined-in-file",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am analyzing a dex file and to ease with reverse engineering, I converted it a jar so it could be decompiled. In the file\n  <code>\n   android/support/v17/leanback/media/MediaControllerGlue.class\n  </code>\n  , the following import appears:\n </p>\n <p>\n  <code>\n   import android.support.v4.media.session.MediaControllerCompat;\n  </code>\n </p>\n <p>\n  However, this class is not defined. In fact, there is no\n  <code>\n   android/support/v4/media\n  </code>\n  package in the file.\n </p>\n <p>\n  To confirm, this, I listed the referenced type in the\n  <code>\n   type_ids\n  </code>\n  section of the dex file, and sure enough, the following type is present:\n  <code>\n   android/support/v4/media/MediaControllerCompat\n  </code>\n  . However, when I then iterate over all entries in the\n  <code>\n   class_defs\n  </code>\n  section, this class is nowhere to be found.\n </p>\n <p>\n  I am new to Android (this is actually an Amazon Firestick APK) development/reverse engineering so I'm not sure how this is possible. Is there some way of defining classes in a separate library that would exist outside of the APK?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "165",
    "tags": [
        "android",
        "java",
        "apk"
    ],
    "user": "genghiskhan",
    "time": "Jul 25, 2019 at 13:47",
    "comments": [
        {
            "user": "Antimony",
            "text": "<html><body><span class=\"comment-copy\">\n Did you check whether there are multiple dex files? What tool did you use to do the jar conversion?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "genghiskhan",
            "text": "<html><body><span class=\"comment-copy\">\n There is only one dex file. I used dex2jar but the problem doesn't lie in the jar conversion since I inspected the contents of the dex file directly.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As it turns out, this class (and other not defined in the DEX file) are part of the standard Android library. Therefore, I suppose they're linked from a shared object at runtime.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "genghiskhan",
            "time": "Jul 28, 2019 at 21:03",
            "is_accepted": false,
            "comments": []
        }
    ]
}