{
    "title": "Reversing Games like Manfred dis",
    "link": "https://reverseengineering.stackexchange.com/questions/30813/reversing-games-like-manfred-dis",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I've looked at as many resources on Manfred and Manfred's work\n </p>\n <p>\n  I've watched the DEFCON 25 Live talk about what he hacked.\n </p>\n <p>\n  <a href=\"https://youtu.be/ZAUf_ygqsDo\" rel=\"nofollow noreferrer\">\n   Here\n  </a>\n </p>\n <p>\n  I've also looked, listened and read the dark net diaries Part One -\n </p>\n <p>\n  <a href=\"https://youtu.be/3dkRG3WlAR8\" rel=\"nofollow noreferrer\">\n   YouTube\n  </a>\n </p>\n <p>\n  <a href=\"https://darknetdiaries.com/episode/7/\" rel=\"nofollow noreferrer\">\n   Dark net diaries part one\n  </a>\n </p>\n <p>\n  Part Two -\n </p>\n <p>\n  <a href=\"https://youtu.be/s2tce_kQ_QE\" rel=\"nofollow noreferrer\">\n   YouTube\n  </a>\n </p>\n <p>\n  <a href=\"https://darknetdiaries.com/episode/8/\" rel=\"nofollow noreferrer\">\n   Dark net diaries part two\n  </a>\n </p>\n <p>\n  From what my understanding is to bypass the HWID bans he ran the game and did a full memory dump, he also captured the packets sent off the game and started reverse engineering the game and started reversing the routines within a game. I've tried for a few month now to figure out how he managed to do things like this but their is no clear method on how Todo so. I figured the best place to ask would be here.\n </p>\n <p>\n  <strong>\n   Questions\n  </strong>\n </p>\n <pre><code>- How did Manfred do it?\n - What can I do to get started in this field of game hacking?\n - What was the method Manfred had used?\n - Is their any resources on this?\nAny help is appreciated. TL;DR - How did Manfred hack so many online games\n</code></pre>\n <p>\n  Thank you.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "134",
    "tags": [
        "assembly",
        "game-hacking",
        "binary-editing",
        "api-hacking"
    ],
    "user": "Silence",
    "time": "Aug 23, 2022 at 20:54",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Manfred has 20+ years of experience and many skills, so don't expect to get there overnight. As a starting point:\n </p>\n <ol>\n  <li>\n   Read Beej's guides:\n   <a href=\"https://beej.us/guide/bgnet/\" rel=\"nofollow noreferrer\">\n    https://beej.us/guide/bgnet/\n   </a>\n  </li>\n  <li>\n   Write a client and server, use a standard protocol like HTTP.\n  </li>\n  <li>\n   Practice intercepting/modifying traffic between your client and server. Try  OWASP ZAP, BurpSuite or similar.\n  </li>\n  <li>\n   Write a dll\n  </li>\n  <li>\n   Read up on dll injection\n  </li>\n  <li>\n   Inject your dll into your client program\n  </li>\n  <li>\n   Use your dll to intercept/modify client/server traffic\n  </li>\n  <li>\n   Modify your server to have a fake inventory/stats/store system.\n  </li>\n  <li>\n   Attempt to use integer overflows to modify the results of inventory/stats/store actions.\n  </li>\n  <li>\n   Add encryption to your client/server communication\n  </li>\n  <li>\n   Does your dll still intercept/modify traffic? If not, fix it\n  </li>\n </ol>\n <p>\n  This should give you plenty of learning without having to jump straight into the deep end with a real game. I find that attempting something without the prerequisite knowledge can result in you being sidetracked reading/learning and/or giving up.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Mega Tonnage",
            "time": "Aug 24, 2022 at 2:27",
            "is_accepted": true,
            "comments": []
        }
    ]
}