{
    "title": "disassembly - bad results generated with ghidra but not with objdump and IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/25385/disassembly-bad-results-generated-with-ghidra-but-not-with-objdump-and-ida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am using Ghidra to analyze\n  <code>\n   libpng-compat.1.5.10.so\n  </code>\n  (downloaded from Fedora mirrors).\n </p>\n <p>\n  But it didn't load the expected disassembly. Then I used Objdump and IDA to check the code and they get the same results and process it correctly. Here are pictures of these three tools about the function\n  <code>\n   png_write_rows\n  </code>\n  :\n </p>\n <p>\n  Ghidra:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/cwR0z.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/cwR0z.png\"/>\n  </a>\n </p>\n <p>\n  we can see that from 0x6bf9, bad results are generated.\n </p>\n <p>\n  For comparison, Objdump:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/ps12M.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/ps12M.png\"/>\n  </a>\n </p>\n <p>\n  and IDA:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/SJWLn.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/SJWLn.png\"/>\n  </a>\n </p>\n <p>\n  I know IDA is the best SRE tool, and I always thought Ghidra and IDA are the top 2. Objdump is a basic, standard and old tool, but why is it that Ghidra can't even get the correct disassembly code while the other two tools do? I use auto-analyze and import the binary file for both IDA and Ghidra.\nHow to correct these errors?\n </p>\n <p>\n  By adjusting analysis options，if\n  <code>\n   Non-Returning Functions - Discovered\n  </code>\n  is set as\n  <code>\n   false\n  </code>\n  , it will be correct.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "1k",
    "tags": [
        "ida",
        "disassembly",
        "ghidra",
        "objdump"
    ],
    "user": "xiaoyao Don",
    "time": "Jul 8, 2020 at 21:28",
    "comments": [
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n (Replicated, using\n <a href=\"http://rpm.pbone.net/index.php3/stat/4/idpl/47213828/dir/fedora_17/com/libpng-compat-1.5.10-1.fc17.i686.rpm.html\" rel=\"nofollow noreferrer\">\n  rpm.pbone.net/index.php3/stat/4/idpl/47213828/dir/fedora_17/com/…\n </a>\n ). Weird. That function\n <code>\n  entry\n </code>\n gets marked\n <code>\n  noreturn\n </code>\n , and it takes a \"Clear flow and repair\" command to get it to recognize it for what it is (a simple localized\n <code>\n  ebx\n </code>\n loader). After that, \"D\" again on the original function appears to work -- but you have to do that on\n <i>\n  every\n </i>\n function using\n <code>\n  entry\n </code>\n .\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "xiaoyao Don",
            "text": "<html><body><span class=\"comment-copy\">\n @usr2564301 \"D\" works for the extra code after \"call entry\", but the next lines following \"call entry\" get wrong disassembly.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "hippietrail",
            "text": "<html><body><span class=\"comment-copy\">\n What does the\n <code>\n  align\n </code>\n mean where an Intel mnemonic should be? I think I ran into this once before and never figured out what it was.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}