{
    "title": "Tracking where an DITL resource is called within a 68k program",
    "link": "https://reverseengineering.stackexchange.com/questions/33179/tracking-where-an-ditl-resource-is-called-within-a-68k-program",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Okay, so I'm a super noob at reverse-engineering and know next to nothing about 68k assembly code. I'm running an emulated version of MacOS 9.0.4, using a program called Resorcerer 2.4.1 to examine my program of choice. I've located a pop-up window in the DITL resources that I'm interested in and I want to track down where it's called. How would I do so?\n </p>\n <p>\n  Or, if you don't want to bother answering my stupidly vague question, could you direct me to a place where I can learn to do this?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "24",
    "tags": [
        "assembly",
        "macos"
    ],
    "user": "joe",
    "time": "Aug 24, 2024 at 5:10",
    "comments": [
        {
            "user": "hippietrail",
            "text": "<html><body><span class=\"comment-copy\">\n Try searching the disassembled code for the\n <a href=\"https://en.wikipedia.org/wiki/FourCC\" rel=\"nofollow noreferrer\">\n  4cc\n </a>\n 'DITL'. There will be some Toolbox calls. I'm not a classic Mac expert but I know resources are treated as 32-bit values and not as strings. I don't know if Resorcerer disassembles the m68k code or not but there are some projects on GitHub that can.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}