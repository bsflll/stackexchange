{
    "title": "How to mass set data type in scalar search in Ghidra?",
    "link": "https://reverseengineering.stackexchange.com/questions/33264/how-to-mass-set-data-type-in-scalar-search-in-ghidra",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In Ghidra, I have an ARM9 binary that in many places stores hard-coded pointers to the same struct at the same location in RAM.\n </p>\n <pre><code>022308c8 a0 9f 23 02     undefined4 02239FA0h\n...\n02233290 a0 9f 23 02     undefined4 02239FA0h\n...\n02233838 a0 9f 23 02     undefined4 02239FA0h\n</code></pre>\n <p>\n  I can easily find all/most references to that struct by doing a scalar search (Search > For Scalars...) and I would like to change the data type of all of those matches to be\n  <code>\n   my_struct*\n  </code>\n  .\n </p>\n <p>\n  In some cases there are too many pointers to the same RAM location to manually change the data type of each within a reasonable amount of time (ex. 1200+ pointers).\n </p>\n <p>\n  Is there any way to have Ghidra automate changing the data types of all of those matching hard-coded pointers?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "61",
    "tags": [
        "ghidra"
    ],
    "user": "Chris",
    "time": "Oct 17, 2024 at 6:48",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n You mean changing the undefined4 doesnt work  ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Chris",
            "text": "<html><body><span class=\"comment-copy\">\n Changing the undefined 4 to\n <code>\n  my_struct*\n </code>\n (using Data >Change Data Type...) works to change a single instance, but currently I would have to do that manually for each of the 1200+ pointers which would probably take several hours to do. I want to know if there is a way to automate changing the data type for 1200+ instances of this pointer.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "the busybee",
            "text": "<html><body><span class=\"comment-copy\">\n Are these pointers in an unbroken range, or are they spread separately all over the binary?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can automate that by using\n  <code>\n   createData\n  </code>\n  and\n  <code>\n   getDataTypes\n  </code>\n  methods from Ghidra API.\n </p>\n <p>\n  Something like that should do the trick:\n </p>\n <pre><code>ptr_type = getDataTypes(\"my_struct*\")[0] \n# getDataTypes returns an array so we pick the first one\n\nfor addr in range(0x022308c8,02233838,4):\n    createData(toAddr(addr), ptr_type)\n</code></pre>\n <p>\n  It will work if there's nothing defined for those bytes already. If there are you need to clear that with\n  <code>\n   clearListing\n  </code>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Paweł Łukasik",
            "time": "Oct 19, 2024 at 21:12",
            "is_accepted": false,
            "comments": []
        }
    ]
}