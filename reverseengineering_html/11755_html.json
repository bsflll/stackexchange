{
    "title": "Isolating encrypt/decrypt instructions in an execution trace",
    "link": "https://reverseengineering.stackexchange.com/questions/11755/isolating-encrypt-decrypt-instructions-in-an-execution-trace",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you have an execution trace of a program, and know it uses say AES for encryption.\n </p>\n <p>\n  Can you isolate the instructions for encryption with that knowledge alone?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "119",
    "tags": [
        "encryption",
        "tracing"
    ],
    "user": "soupman",
    "time": "Jan 13, 2016 at 11:34",
    "comments": [
        {
            "user": "Abr001am",
            "text": "<html><body><span class=\"comment-copy\">\n yes, its called dejunker or deobfuscator\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Generally speaking, it depends on the platform. For example, if the software uses\n  <a href=\"https://en.wikipedia.org/wiki/AES_instruction_set\" rel=\"nofollow\">\n   Intel AES extensions\n  </a>\n  it is possible to find the corresponding instructions in the disassembly. If the software is compiled for other platforms and uses specific hardware accelerators it is possible to find it by accesses to specific addresses of the accelerators registers.\n </p>\n <p>\n  If there is no specific accelerator or specific instruction set it is possible to find\n  <a href=\"https://en.wikipedia.org/wiki/Rijndael_S-box\" rel=\"nofollow\">\n   S-BOX\n  </a>\n  constants and check which instructions are accessing it.\n </p>\n <p>\n  There are some plugins for IDA that able to do this work for you, for example\n  <a href=\"https://www.aldeid.com/wiki/IDA-Pro/plugins/FindCrypt2\" rel=\"nofollow\">\n   FindCrypt2\n  </a>\n  .\n </p>\n <p>\n  In addition there is a presentation from\n  <a href=\"http://recon.cx\" rel=\"nofollow\">\n   recon\n  </a>\n  conference about locating such an algorithms in obfuscated code\n  <a href=\"https://recon.cx/2012/schedule/attachments/46_Joan_CryptographicFunctionIdentification.pdf\" rel=\"nofollow\">\n   here\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "w s",
            "time": "Jan 13, 2016 at 12:04",
            "is_accepted": true,
            "comments": []
        }
    ]
}