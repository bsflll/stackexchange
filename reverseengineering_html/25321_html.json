{
    "title": "How to reverse engineer apks? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/25321/how-to-reverse-engineer-apks",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed.\n        </b>\n        This question is\n        <a href=\"/help/closed-questions\">\n         off-topic\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       Questions asking for help\n       <b>\n        reverse-engineering a specific system\n       </b>\n       are off-topic unless they demonstrate an understanding of the concepts involved and clearly identify a specific problem.\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2020-06-22 13:40:18Z\">\n        4 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/25321/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  is it possible to reverse engineer an apk just to unlock hidden/unreleased features?\n </p>\n</div>\n</body></html>",
    "votes": "-2",
    "answers": 1,
    "views": "244",
    "tags": [
        "decompilation",
        "android",
        "malware",
        "patch-reversing",
        "apk"
    ],
    "user": "hanan",
    "time": "4 years ago",
    "comments": [
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n Note that developer can decide to deliver different app versions based on country, device  manufacturer, device model, ... Additionally beta versions can be released to a small percentage of users. Hence that someone is able to use a dark mode in an app does not have to mean that the app on your device has this feature, too. Usually reverse engineering an app takes you longer than it takes for the features you are looking for to be released on all phones. Especially Facebook apps are heavily obfuscated generated code that takes days or weeks to understand just the basics.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "hanan",
            "text": "<html><body><span class=\"comment-copy\">\n there are methods to start the features which are in the development phase. Well, of course, you will not get full fledged features as they are work in progress but itâ€™s still fun to use them.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Try to learn the structure of the apk, learn\n  <a href=\"https://source.android.com/devices/tech/dalvik/dalvik-bytecode\" rel=\"nofollow noreferrer\">\n   SMALI\n  </a>\n  , understand how the apk works, after understanding what your calls are like and learning smali, it is essential to be able to make calls from resources, but stay tuned for apk protections , even considering a somewhat rare factor, there are also several online tools to assist in this factor, with a simple search for smali studio you will find, good luck;\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Happy",
            "time": "Jun 17, 2020 at 11:57",
            "is_accepted": false,
            "comments": [
                {
                    "user": "hanan",
                    "text": "<span class=\"comment-copy\">could you please clarify \"make calls from resources\"?</span>",
                    "time": null
                },
                {
                    "user": "Happy",
                    "text": "<span class=\"comment-copy\">look for calls to methods, which in your \"analysis\" refer to the resource you want to search for, modify any constant using the operator \"const v0, 0\", to modify or release the resource, also check the application traffic, which it is entering and leaving, through a proxy, these are just some ideas that I hope will be useful to you.</span>",
                    "time": null
                },
                {
                    "user": "hanan",
                    "text": "<span class=\"comment-copy\">I believe your suggestions are generic! for instance monitoring app traffic is trivial IMO.</span>",
                    "time": null
                }
            ]
        }
    ]
}