{
    "title": "Symbols in Ghidra based on r/w possible?",
    "link": "https://reverseengineering.stackexchange.com/questions/32725/symbols-in-ghidra-based-on-r-w-possible",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Is it possible to have a symbol file with different names for an address based on whether a instruction is accessing the address read or write?\n </p>\n <p>\n  For example, I have a hardware address $FF8800 for a sound chip.\n </p>\n <p>\n  In read access, it is PSG Read Data.\nIn write access, it is PSG Register Select.\n </p>\n <p>\n  I would like the disassmbly to reflect the name in context.\n </p>\n <p>\n  Possible?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "54",
    "tags": [
        "ghidra",
        "symbols"
    ],
    "user": "Trevor Acton",
    "time": "Feb 11, 2024 at 15:27",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can use ghidra's Overlay memory blocks to achieve this. How much work this involves will depend on how many such memory locations are involved and whether they are in contiguous range(s).\n </p>\n <p>\n  To get you started for your specific case, the following instructions should help:\n </p>\n <ul>\n  <li>\n   <p>\n    Using the Memory Map window, create two Overlay memory blocks, both located at\n    <code>\n     0xFF8800\n    </code>\n    , allocating to each the larger number of bytes (if they aren't the same) required for either the read or the write version of the register, making the block names something like\n    <code>\n     PSGRead\n    </code>\n    and\n    <code>\n     PSGwrite\n    </code>\n    ,\n   </p>\n  </li>\n  <li>\n   <p>\n    In the Listing window:\n   </p>\n   <ul>\n    <li>\n     Press\n     <code>\n      g\n     </code>\n     (for \"go to address\") and enter\n     <code>\n      PSGRead::FF8800\n     </code>\n     , then,\n    </li>\n    <li>\n     Press\n     <code>\n      l\n     </code>\n     (for \"label\") and enter a label name of your choice--perhaps\n     <code>\n      ReadData\n     </code>\n     .\n    </li>\n   </ul>\n  </li>\n  <li>\n   <p>\n    Repeat those two steps in the Listing window using the address\n    <code>\n     PSGWrite::FF8800\n    </code>\n    and a label something like\n    <code>\n     RegisterSelect\n    </code>\n    .\n   </p>\n  </li>\n  <li>\n   <p>\n    For each instruction in the Listing window that accesses address\n    <code>\n     FF8800\n    </code>\n    :\n   </p>\n   <ul>\n    <li>\n     Click on the operand that references that address.\n    </li>\n    <li>\n     Press\n     <code>\n      r\n     </code>\n     (for \"reference\") to open the Reference Editor window, where, depending on whether the access is a\n     <code>\n      read\n     </code>\n     or a\n     <code>\n      write\n     </code>\n     , you can either:\n     <ul>\n      <li>\n       Alter an existing reference to the corresponding label, or,\n      </li>\n      <li>\n       Add a new reference to the corresponding label.\n      </li>\n     </ul>\n    </li>\n   </ul>\n  </li>\n </ul>\n <p>\n  If that, supplemented by Ghidra's built-in help, doesn't get you there, reply here and either I or someone else can give additional help.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "g1l1t1",
            "time": "Feb 28, 2024 at 18:13",
            "is_accepted": false,
            "comments": []
        }
    ]
}