{
    "title": "How to use dnSpyEx or some other .NET debugger to attach to a .NET process started with a process-hollowing technique?",
    "link": "https://reverseengineering.stackexchange.com/questions/31472/how-to-use-dnspyex-or-some-other-net-debugger-to-attach-to-a-net-process-start",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a .NET executable that is started using the\n  <a href=\"https://www.ired.team/offensive-security/code-injection-process-injection/process-hollowing-and-pe-image-relocations\" rel=\"noreferrer\">\n   process-hollowing\n  </a>\n  technique. Here's how it looks from the Detect-It-Easy tool:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/bPEdv.png\" rel=\"noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/bPEdv.png\"/>\n  </a>\n </p>\n <p>\n  I can open the image file for that process (from disk) with dnSpyEx, but when I try to attach to it with a debugger while it's running (after it was process-hollowed), my breakpoints don't hit:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/Ca3es.png\" rel=\"noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/Ca3es.png\"/>\n  </a>\n </p>\n <p>\n  Any idea how to attach to such process with a debugger - dnSpy or some other one?\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 1,
    "views": "940",
    "tags": [
        "debugging",
        "unpacking",
        ".net",
        "packers",
        "dnspy"
    ],
    "user": "c00000fd",
    "time": "Jan 25, 2023 at 8:55",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can insert an infinite loop in the code that you can find once you attach to the process.\n </p>\n <ol>\n  <li>\n   Right click the method you want to put a breakpoint on and select\n   <code>\n    Edit Method\n   </code>\n   .\n   <a href=\"https://i.sstatic.net/NZsy5.png\" rel=\"nofollow noreferrer\">\n    <img alt=\"enter image description here\" src=\"https://i.sstatic.net/NZsy5.png\"/>\n   </a>\n  </li>\n  <li>\n   Add an infinite loop  inside an\n   <code>\n    if\n   </code>\n   before the code where you wanted to put the breakpoint:\n   <code>\n    bool a = true;if(a){while(true){}}\n   </code>\n   . Click\n   <code>\n    Compile\n   </code>\n   .\n  </li>\n  <li>\n   Save module.\n  </li>\n  <li>\n   Run the sample as desired.\n  </li>\n  <li>\n   Attach to the process with DnSpy (you may need to run it as admin) and pause (\n   <code>\n    Break all\n   </code>\n   ) the debugger, which will stop at the infinite loop.\n  </li>\n  <li>\n   The instruction where you wanted to put the breakpoint is the first after the\n   <code>\n    else\n   </code>\n   . Right click this instruction and select\n   <code>\n    Set Next Statement\n   </code>\n   .\n   <a href=\"https://i.sstatic.net/A2qHT.png\" rel=\"nofollow noreferrer\">\n    <img alt=\"enter image description here\" src=\"https://i.sstatic.net/A2qHT.png\"/>\n   </a>\n  </li>\n </ol>\n <hr/>\n <p>\n  This is similar to the\n  <a href=\"http://paulslaboratory.blogspot.com/2014/04/ebfe-debugging-remote-thread.html\" rel=\"nofollow noreferrer\">\n   <code>\n    EBFE\n   </code>\n   technique\n  </a>\n  .\n </p>\n <p>\n  Note that the definition of\n  <code>\n   bool a = true;\n  </code>\n  and the\n  <code>\n   if\n  </code>\n  surrounding the\n  <code>\n   while(true)\n  </code>\n  is needed to trick the debugger to avoid that compilation remove the rest of the code. If the compiler is still able to remove it, you can try a bit more difficult condition to trick the debugger such as\n  <code>\n   int a = 3; int b = 2; if(a*2-b+1==5){while(true){}};\n  </code>\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Ana María Martínez Gómez",
            "time": "Jan 25, 2023 at 12:36",
            "is_accepted": false,
            "comments": [
                {
                    "user": "c00000fd",
                    "text": "<span class=\"comment-copy\">Hmm, that's an interesting idea. But how would I insert my code into it if my breakpoints don't hit? See that second screenshot.</span>",
                    "time": null
                },
                {
                    "user": "Ana María Martínez Gómez",
                    "text": "<span class=\"comment-copy\">You need to insert the code before the sample is run. Note running the sample is step 4.</span>",
                    "time": null
                },
                {
                    "user": "c00000fd",
                    "text": "<span class=\"comment-copy\">Thanks. That's an interesting technique. I tried it, but step 5 doesn't produce the result that you described. The dnSpy breaks but then it doesn't switch to the source code line. And even if I click \"Show next statement\", nothing happens. My guess is that it can't find symbols.</span>",
                    "time": null
                }
            ]
        }
    ]
}