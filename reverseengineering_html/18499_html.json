{
    "title": "Windows 10 v.1803 boot failure after trying to install network kernel debugging with WinDbg Preview",
    "link": "https://reverseengineering.stackexchange.com/questions/18499/windows-10-v-1803-boot-failure-after-trying-to-install-network-kernel-debugging",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to set up kernel debugging on a physical hardware/desktop to test the new WinDbg Preview. Here's the steps:\n </p>\n <ol>\n  <li>\n   <p>\n    I'm using a desktop with\n    <a href=\"https://ark.intel.com/products/37164/Intel-Desktop-Board-DG41TY\" rel=\"nofollow noreferrer\">\n     Intel DG41TY\n    </a>\n    board.\n   </p>\n  </li>\n  <li>\n   <p>\n    Installed Windows 10 Pro build 1803. (Off USB, created using\n    <a href=\"https://www.microsoft.com/en-us/software-download/windows10\" rel=\"nofollow noreferrer\">\n     media creation tool\n    </a>\n    .)\n   </p>\n  </li>\n  <li>\n   <p>\n    The board has a\n    <a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/supported-ethernet-nics-for-network-kernel-debugging-in-windows-10\" rel=\"nofollow noreferrer\">\n     supported network card\n    </a>\n    :\n   </p>\n   <pre><code>PCI\\VEN_10EC&DEV_8168&SUBSYS_D6128086&REV_03\n</code></pre>\n  </li>\n  <li>\n   <p>\n    Prepped up that debuggee for kernel debugging via Ethernet cable by running the following from an elevated\n    <code>\n     cmd\n    </code>\n    (where\n    <code>\n     192.168.1.29\n    </code>\n    is the debugger machine IP address):\n   </p>\n   <pre><code>bcdedit /debug on\n\nbcdedit /dbgsettings net hostip:192.168.1.29 port:50000 key:1.2.3.4\n\nbcdedit /set \"{dbgsettings}\" busparams 3.0.0\n</code></pre>\n   <p>\n    <a href=\"https://i.sstatic.net/xJgjR.png\" rel=\"nofollow noreferrer\">\n     <img alt=\"enter image description here\" src=\"https://i.sstatic.net/xJgjR.png\"/>\n    </a>\n   </p>\n   <p>\n    I set it all up to the default boot configuration because that PC was not supposed to have a monitor, mouse or keyboard, so that it could boot up into a debugging mode by default. (For further control I was assuming to remote-desktop into it.)\n   </p>\n  </li>\n  <li>\n   <p>\n    Connected it via an Ethernet cable to my Windows 10 Pro laptop.\n   </p>\n  </li>\n  <li>\n   <p>\n    On the debugger laptop, I was using new, Windows Store version of\n    <a href=\"https://www.microsoft.com/en-us/p/windbg-preview/9pgjgd53tn86\" rel=\"nofollow noreferrer\">\n     WinDbg Preview\n    </a>\n    :\n   </p>\n   <pre><code>Debugger client version: 1.0.1805.17002\nDebugger engine version: 10.0.17674.1000\n</code></pre>\n  </li>\n  <li>\n   <p>\n    In WinDbg I set up network kernel debugging as such:\n   </p>\n   <p>\n    I'm not sure what that new \"Target\" field meant, I assumed it to be the target machine (or debuggee) so I gave it that desktop's IP address:\n   </p>\n   <p>\n    <a href=\"https://i.sstatic.net/A4ZSs.png\" rel=\"nofollow noreferrer\">\n     <img alt=\"enter image description here\" src=\"https://i.sstatic.net/A4ZSs.png\"/>\n    </a>\n   </p>\n  </li>\n  <li>\n   <p>\n    Then rebooted the debuggee desktop ... and nothing happened. Windows 10 hung up during the boot process. I assumed that I didn't set something right on the debuggee side, closed WinDbg and tried to reboot the debuggee machine. But it hung up during the boot again.\n   </p>\n  </li>\n  <li>\n   <p>\n    At this point I disconnected the Ethernet cable and had to reboot it using the power button on that desktop. It failed one more time, and then Windows blue menu came up saying that it failed to automatically recover and needs to reset. (I can't remember the exact wording.)\n   </p>\n  </li>\n  <li>\n   <p>\n    So about 2 hours later, it recovered and that desktop (debuggee) can now boot, but it wiped out everything that I installed on it. (I can recover all of my installed software since it was a brand new installation.)\n   </p>\n  </li>\n </ol>\n <p>\n  So I'm wondering if I was doing something wrong, and if anyone else dealt with the same issue?\n </p>\n <p>\n  PS. I'm just trying to avoid wasting 2+ hrs for such a reset in the future.\n </p>\n <hr/>\n <p>\n  <strong>\n   EDIT:\n  </strong>\n  I was able to replace an HDD in this test PC with an SSD, then reinstall Windows 10 from scratch, and repeat the steps I described above. When I enabled kernel network debugging, that PC started booting visibly slower (about 2 minutes vs. original 15-20 sec.)\n </p>\n <p>\n  After that as soon as I connected an Ethernet cable from that test PC to my Windows 10 laptop with WinDbg Preview waiting for connection, the booting process never completed. WinDbg Preview never connected to that remote PC either.\n </p>\n <p>\n  After a while I disconnected the Ethernet cable and forced the reboot by holding down the power button. This time the boot process froze up after about 2-3 minutes of seeing the spinning dots. Here's the exact screen:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/t1guv.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/t1guv.jpg\"/>\n  </a>\n </p>\n <p>\n  Then when I force-rebooted it again, it showed:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/aiJxT.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/aiJxT.jpg\"/>\n  </a>\n </p>\n <p>\n  then:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/nYadd.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/nYadd.jpg\"/>\n  </a>\n </p>\n <p>\n  and eventually:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/OuaZB.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/OuaZB.jpg\"/>\n  </a>\n </p>\n <p>\n  (Luckily this time I created a restore point before doing the tests above. Restore points were off by default in Windows 10. So after clicking \"Advanced options\" I was able to restore from a restore point.)\n </p>\n <p>\n  The\n  <code>\n   C:\\Windows\\System32\\LogFiles\\Srt\\SrtTrail.txt\n  </code>\n  file mentioned in the screenshot above contains the following:\n </p>\n <pre><code>Startup Repair diagnosis and repair log\n---------------------------\nNumber of repair attempts: 1\n\nSession details\n---------------------------\nSystem Disk = \\Device\\Harddisk0\nWindows directory = C:\\Windows\nAutoChk Run = 0\nNumber of root causes = 1\n\nTest Performed: \n---------------------------\nName: Check for updates\nResult: Completed successfully. Error code =  0x0\nTime taken = 0 ms\n\nTest Performed: \n---------------------------\nName: System disk test\nResult: Completed successfully. Error code =  0x0\nTime taken = 0 ms\n\nTest Performed: \n---------------------------\nName: Disk failure diagnosis\nResult: Completed successfully. Error code =  0x0\nTime taken = 16 ms\n\nTest Performed: \n---------------------------\nName: Disk metadata test\nResult: Completed successfully. Error code =  0x0\nTime taken = 296 ms\n\nTest Performed: \n---------------------------\nName: Disk metadata test\nResult: Completed successfully. Error code =  0x0\nTime taken = 16 ms\n\nTest Performed: \n---------------------------\nName: Target OS test\nResult: Completed successfully. Error code =  0x0\nTime taken = 0 ms\n\nTest Performed: \n---------------------------\nName: Volume content check\nResult: Completed successfully. Error code =  0x0\nTime taken = 63 ms\n\nTest Performed: \n---------------------------\nName: Boot manager diagnosis\nResult: Completed successfully. Error code =  0x0\nTime taken = 0 ms\n\nTest Performed: \n---------------------------\nName: System boot log diagnosis\nResult: Completed successfully. Error code =  0x0\nTime taken = 15 ms\n\nRoot cause found: \n---------------------------\nBoot critical file c:\\efi\\microsoft\\boot\\resources\\custom\\bootres.dll is corrupt.\n\nRepair action: File repair\nResult: Failed. Error code =  0x57\nTime taken = 2328 ms\n\n---------------------------\n---------------------------\n</code></pre>\n <p>\n  <em>\n   Additionally, if anyone at Microsoft wants me to email you the entire\n   <code>\n    C:\\Windows\\System32\\LogFiles\\Srt\n   </code>\n   folder, I can do so\n   <a href=\"https://reverseengineering.stackexchange.com/users/14864/c00000fd?tab=profile\">\n    upon request\n   </a>\n   .\n  </em>\n </p>\n</div>\n</body></html>",
    "votes": "6",
    "answers": 1,
    "views": "1k",
    "tags": [
        "windows",
        "debugging",
        "windbg",
        "kernel-mode"
    ],
    "user": "c00000fd",
    "time": "Jun 17, 2018 at 3:41",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n If you're trying to avoid those extra hours, make sure you have a backup handy. And I mean it, no kidding and not meant in any condescending way.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "c00000fd",
            "text": "<html><body><span class=\"comment-copy\">\n @0xC0000022L: Sure. Thanks. I already put in an SSD into that PC to make it boot quicker. Btw, what type of backup is the fastest on Win10?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n I don't know about the new WinDbg from the store, but the old one had an option to sync the connection. Could you try to use that? Also, I typically turn off the graphical boot logo (\n <code>\n  sos yes\n </code>\n ) to see what gets loaded. I'd also recommend to enable\n <code>\n  /bootdebug\n </code>\n - at least temporarily - until you figure out what's wrong (it's not strictly needed for ordinary kernel mode debugging, though).\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "c00000fd",
            "text": "<html><body><span class=\"comment-copy\">\n @0xC0000022L yes, as you reminded me I was trying to set it up on a physical hardware. Tbh, it's been so long ago so I don't remember if I succeeded or not. What I remember though is that I switched away from using COM port for kernel debugging because it makes the process slow af. That connection is also very unstable. Thus, if I can (sometimes it's impossible if you have to debug real hardware device) but if you don't have to, I always set it up in a VM via the new WinDbg Next and its \"Net\" connection type. The experience is so much better than the old school COM port.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "c00000fd",
            "text": "<html><body><span class=\"comment-copy\">\n @0xC0000022L yes for sure. Or, if you have access to a JTAG debugger that's the best.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You need to use the correct ethernet cable. If you are connecting target directly to your debugger host you need to use a cross over cable, not a regular ethernet cable. Alternately if you don't have a crossover a cable using a switch/hub is required to connect the devices. I'd check TCP/IP communication is working between devices prior to enabling debugging if possible.\n </p>\n <p>\n  Simply you should check:\n </p>\n <ol>\n  <li>\n   On debugger host run\n   <strong>\n    ipconfig\n   </strong>\n   and identify IP address of the ethernet adapter you will be using\n  </li>\n  <li>\n   On target computer ensure\n   <strong>\n    ping -4\n    <em>\n     hostip\n    </em>\n   </strong>\n   works. You may need to allow ICMP traffic through firewall for this to work.\n  </li>\n </ol>\n <p>\n  In addition on host debugger machine you will need to allow traffic through Windows firewall (or any other 3rd party firewalls installed)\n </p>\n <blockquote>\n  <p>\n   When you first attempt to establish a network debugging connection,\nyou might be prompted to allow the debugging application (WinDbg or\nKD) access through the firewall. Client versions of Windows display\nthe prompt, but Server versions of Windows do not display the prompt.\nYou should respond to the prompt by checking the boxes for all three\nnetwork types: domain, private, and public. If you do not get the\nprompt, or if you did not check the boxes when the prompt was\navailable, you must use Control Panel to allow access through the\nfirewall. Open Control Panel > System and Security and select Allow an\napp through Windows Firewall. In the list of applications, locate\nWindows GUI Symbolic Debugger and Windows Kernel Debugger. Use the\ncheck boxes to allow those two applications through the firewall.\nRestart your debugging application (WinDbg or KD).\n  </p>\n </blockquote>\n</div>\n</body></html>",
            "votes": "2",
            "user": "chentiangemalc",
            "time": "Aug 24, 2021 at 1:40",
            "is_accepted": false,
            "comments": []
        }
    ]
}