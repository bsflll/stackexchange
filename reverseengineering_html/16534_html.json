{
    "title": "Obtaining the decryption keys for Super Mario Run (Android/iOS Game)",
    "link": "https://reverseengineering.stackexchange.com/questions/16534/obtaining-the-decryption-keys-for-super-mario-run-android-ios-game",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Super Mario Run is a\n  <em>\n   il2cpp\n  </em>\n  Unity game. Most of its assets are downloaded in-game through http requests. I particularly want the OGG files of the music. I can see the list of their names comes from this\n  <a href=\"https://download-cdn-supermariorun.akamaized.net/native/e07e1191b490a31c/3.0.1/raw/RawSound/DeALProject.json\" rel=\"nofollow noreferrer\">\n   file\n  </a>\n  .\n </p>\n <p>\n  I know this because it appears before all the requests of the OGGs are made, sadly it and the OGGs are\n  <a href=\"https://download-cdn-supermariorun.akamaized.net/native/e07e1191b490a31c/3.0.1/raw/RawSound/sound/BGM/Athletic_RB_32.ogg\" rel=\"nofollow noreferrer\">\n   encrypted\n  </a>\n  .\n </p>\n <p>\n  Since Super Mario Run is an\n  <em>\n   il2cpp\n  </em>\n  game, the strings and function names and whatnot are contained in a different file -- \"\n  <em>\n   global-metadata.dat\n  </em>\n  \". Looking at this file I can see a function named\n  <code>\n   get_OggEncryptionAesKey\n  </code>\n  , as for where this function is and what it returns I cannot find out.\n </p>\n <p>\n  I disassembled the \"\n  <em>\n   libil2cpp.so\n  </em>\n  \" with IDA, but did not seem to find this function or anything useful.\n </p>\n <p>\n  I believe that the libraries that deal with the encryption might be \"\n  <em>\n   libdeal.so\n  </em>\n  \" or \"\n  <em>\n   libDeALWrapper.so\n  </em>\n  \".\n </p>\n <p>\n  Closest I've came was pulling the ogg's from memory, but the best I got was some interface sounds.\n </p>\n <p>\n  Does anyone have any other ideas to decrypt these files?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "1k",
    "tags": [
        "ida",
        "encryption",
        "decryption"
    ],
    "user": "Michael",
    "time": "Oct 11, 2017 at 18:47",
    "comments": [
        {
            "user": "Jevgeni Geurtsen",
            "text": "<html><body><span class=\"comment-copy\">\n If you obtain the encrypted files through http requests on runtime I can imagine the related decryption is also send somewhere during this process. Did you try to sniff the network requests/responses?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Michael",
            "text": "<html><body><span class=\"comment-copy\">\n I checked them all and didn't find anything that looked like an encryption key.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jevgeni Geurtsen",
            "text": "<html><body><span class=\"comment-copy\">\n I believe\n <code>\n  libdeal\n </code>\n is just a library for dealing with algorithms and complex data structures in C++ (not sure though). Atleast we know they use\n <code>\n  AES\n </code>\n encryption. Maybe you can try to find the\n <code>\n  Rijndael\n </code>\n algorithm and work from there?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jevgeni Geurtsen",
            "text": "<html><body><span class=\"comment-copy\">\n Also, have you looked at\n <a href=\"https://github.com/nevermoe/unity_metadata_loader\" rel=\"nofollow noreferrer\">\n  github.com/nevermoe/unity_metadata_loader\n </a>\n ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Michael",
            "text": "<html><body><span class=\"comment-copy\">\n @JevgeniGeurtsen I used that, but none of the files I've decompiled had the OggEncryptionAesKey function although they had all the other functions from the same class, very strange.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}