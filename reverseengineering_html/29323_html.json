{
    "title": "Not Understanding the FU540 Boot Process",
    "link": "https://reverseengineering.stackexchange.com/questions/29323/not-understanding-the-fu540-boot-process",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm reading the\n  <a href=\"https://starfivetech.com/uploads/fu540-c000-manual-v1p4.pdf\" rel=\"nofollow noreferrer\">\n   manual\n  </a>\n  for the SiFive FU540-C000 trying to understand the boot process, and I'm not making sense of the initial steps after power on.\n </p>\n <p>\n  I'm using\n  <code>\n   MSEL = 1111\n  </code>\n  based on the recommendation for the\n  <a href=\"https://docs.sel4.systems/Hardware/hifive.html\" rel=\"nofollow noreferrer\">\n   software I'm booting\n  </a>\n  from SD card.\n </p>\n <blockquote>\n  <p>\n   On power-on, all cores jump to 0x1004 while running directly off of the external clock input,\nexpected to be 33.3 MHz. The memory at this location contains:\n  </p>\n  <p>\n   Table 8: Reset vector ROM\n  </p>\n  <div class=\"s-table-container\">\n   <table class=\"s-table\">\n    <thead>\n     <tr>\n      <th style=\"text-align: center;\">\n       Address\n      </th>\n      <th style=\"text-align: center;\">\n       Contents\n      </th>\n     </tr>\n    </thead>\n    <tbody>\n     <tr>\n      <td style=\"text-align: center;\">\n       0x1000\n      </td>\n      <td style=\"text-align: center;\">\n       The MSEL pin state\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       0x1004\n      </td>\n      <td style=\"text-align: center;\">\n       auipc t0, 0\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       0x1008\n      </td>\n      <td style=\"text-align: center;\">\n       lw t1, -4(t0)\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       0x100C\n      </td>\n      <td style=\"text-align: center;\">\n       slli t1, t1, 0x3\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       0x1010\n      </td>\n      <td style=\"text-align: center;\">\n       add t0, t0, t1\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       0x1014\n      </td>\n      <td style=\"text-align: center;\">\n       lw t0, 252(t0)\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       0x1018\n      </td>\n      <td style=\"text-align: center;\">\n       jr t0\n      </td>\n     </tr>\n    </tbody>\n   </table>\n  </div>\n </blockquote>\n <p>\n  This is how I've decoded the instructions.\n </p>\n <ol>\n  <li>\n   <code>\n    0x1004 = auipc t0, 0\n   </code>\n   <ul>\n    <li>\n     AUIPC uses the top 20 bits of the immediate, extends 0 to the low 12, then adds the PC value of the auipc instruction. Store in t0\n    </li>\n    <li>\n     t0 = 0x0 << 12 = 0x0 + 0x1004\n    </li>\n   </ul>\n  </li>\n </ol>\n <div class=\"s-table-container\">\n  <table class=\"s-table\">\n   <thead>\n    <tr>\n     <th style=\"text-align: center;\">\n      Register\n     </th>\n     <th style=\"text-align: center;\">\n      Value\n     </th>\n    </tr>\n   </thead>\n   <tbody>\n    <tr>\n     <td style=\"text-align: center;\">\n      t0\n     </td>\n     <td style=\"text-align: center;\">\n      0x1004\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      t1\n     </td>\n     <td style=\"text-align: center;\">\n      UNDEF\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      PC (next)\n     </td>\n     <td style=\"text-align: center;\">\n      0x1008\n     </td>\n    </tr>\n   </tbody>\n  </table>\n </div>\n <ol start=\"2\">\n  <li>\n   <code>\n    0x1008 = lw t1, -4(t0)\n   </code>\n   <ul>\n    <li>\n     Load value in memory address\n     <code>\n      (t0 - 4)\n     </code>\n     , store in t1\n    </li>\n    <li>\n     t1 = Mem[0x1004 - 4] = Mem[0x1000] = MSEL = 0b1111 = 0xF\n    </li>\n   </ul>\n  </li>\n </ol>\n <div class=\"s-table-container\">\n  <table class=\"s-table\">\n   <thead>\n    <tr>\n     <th style=\"text-align: center;\">\n      Register\n     </th>\n     <th style=\"text-align: center;\">\n      Value\n     </th>\n    </tr>\n   </thead>\n   <tbody>\n    <tr>\n     <td style=\"text-align: center;\">\n      t0\n     </td>\n     <td style=\"text-align: center;\">\n      0x1004\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      t1\n     </td>\n     <td style=\"text-align: center;\">\n      0x000F\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      PC (next)\n     </td>\n     <td style=\"text-align: center;\">\n      0x100C\n     </td>\n    </tr>\n   </tbody>\n  </table>\n </div>\n <ol start=\"3\">\n  <li>\n   <code>\n    0x100C = slli t1, t1, 0x3\n   </code>\n   <ul>\n    <li>\n     t1 is left shifted 3, store in t1\n    </li>\n    <li>\n     t1 = 0b1111 << 3 = 0b1111000 = 0x78\n    </li>\n   </ul>\n  </li>\n </ol>\n <div class=\"s-table-container\">\n  <table class=\"s-table\">\n   <thead>\n    <tr>\n     <th style=\"text-align: center;\">\n      Register\n     </th>\n     <th style=\"text-align: center;\">\n      Value\n     </th>\n    </tr>\n   </thead>\n   <tbody>\n    <tr>\n     <td style=\"text-align: center;\">\n      t0\n     </td>\n     <td style=\"text-align: center;\">\n      0x1004\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      t1\n     </td>\n     <td style=\"text-align: center;\">\n      0x0078\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      PC (next)\n     </td>\n     <td style=\"text-align: center;\">\n      0x1010\n     </td>\n    </tr>\n   </tbody>\n  </table>\n </div>\n <ol start=\"4\">\n  <li>\n   <code>\n    0x1010 = add t0, t0, t1\n   </code>\n   <ul>\n    <li>\n     t1 is added to t0, store in t0\n    </li>\n    <li>\n     t0 = 0x1004 + 0x0078 = 0x107C\n    </li>\n   </ul>\n  </li>\n </ol>\n <div class=\"s-table-container\">\n  <table class=\"s-table\">\n   <thead>\n    <tr>\n     <th style=\"text-align: center;\">\n      Register\n     </th>\n     <th style=\"text-align: center;\">\n      Value\n     </th>\n    </tr>\n   </thead>\n   <tbody>\n    <tr>\n     <td style=\"text-align: center;\">\n      t0\n     </td>\n     <td style=\"text-align: center;\">\n      0x107C\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      t1\n     </td>\n     <td style=\"text-align: center;\">\n      0x0078\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      PC (next)\n     </td>\n     <td style=\"text-align: center;\">\n      0x1014\n     </td>\n    </tr>\n   </tbody>\n  </table>\n </div>\n <ol start=\"5\">\n  <li>\n   <code>\n    0x1014 = lw t0, 252(t0)\n   </code>\n   <ul>\n    <li>\n     Load value in memory address\n     <code>\n      t0 +  252\n     </code>\n     , store in t0\n    </li>\n    <li>\n     t0 = Mem[0x107C + 0xFC] = Mem[0x1178] = 0x????\n    </li>\n   </ul>\n  </li>\n </ol>\n <div class=\"s-table-container\">\n  <table class=\"s-table\">\n   <thead>\n    <tr>\n     <th style=\"text-align: center;\">\n      Register\n     </th>\n     <th style=\"text-align: center;\">\n      Value\n     </th>\n    </tr>\n   </thead>\n   <tbody>\n    <tr>\n     <td style=\"text-align: center;\">\n      t0\n     </td>\n     <td style=\"text-align: center;\">\n      0x????\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      t1\n     </td>\n     <td style=\"text-align: center;\">\n      0x0078\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      PC (next)\n     </td>\n     <td style=\"text-align: center;\">\n      0x1018\n     </td>\n    </tr>\n   </tbody>\n  </table>\n </div>\n <ol start=\"6\">\n  <li>\n   <code>\n    0x1018 = jr t0\n   </code>\n   <ul>\n    <li>\n     jump directly to address in t0\n    </li>\n    <li>\n     PC = 0x????\n    </li>\n   </ul>\n  </li>\n </ol>\n <div class=\"s-table-container\">\n  <table class=\"s-table\">\n   <thead>\n    <tr>\n     <th style=\"text-align: center;\">\n      Register\n     </th>\n     <th style=\"text-align: center;\">\n      Value\n     </th>\n    </tr>\n   </thead>\n   <tbody>\n    <tr>\n     <td style=\"text-align: center;\">\n      t0\n     </td>\n     <td style=\"text-align: center;\">\n      0x????\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      t1\n     </td>\n     <td style=\"text-align: center;\">\n      0x0788\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      PC (next)\n     </td>\n     <td style=\"text-align: center;\">\n      0x????\n     </td>\n    </tr>\n   </tbody>\n  </table>\n </div>\n <p>\n  The problem is that, according to the manual, MSEL = 0b1111 should jump to 0x0001_0000, doesn't mention anything about what's at 0x1178\n </p>\n <div class=\"s-table-container\">\n  <table class=\"s-table\">\n   <thead>\n    <tr>\n     <th style=\"text-align: center;\">\n      Base\n     </th>\n     <th style=\"text-align: center;\">\n      Top\n     </th>\n     <th style=\"text-align: center;\">\n      Attr.\n     </th>\n     <th style=\"text-align: left;\">\n      Description Notes\n     </th>\n    </tr>\n   </thead>\n   <tbody>\n    <tr>\n     <td style=\"text-align: center;\">\n      0x0000_0000\n     </td>\n     <td style=\"text-align: center;\">\n      0x0000_00FF\n     </td>\n     <td style=\"text-align: center;\">\n     </td>\n     <td style=\"text-align: left;\">\n      Reserved\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      0x0000_0100\n     </td>\n     <td style=\"text-align: center;\">\n      0x0000_0FFF\n     </td>\n     <td style=\"text-align: center;\">\n      RWX A\n     </td>\n     <td style=\"text-align: left;\">\n      Debug\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      0x0000_1000\n     </td>\n     <td style=\"text-align: center;\">\n      0x0000_1FFF\n     </td>\n     <td style=\"text-align: center;\">\n      R X\n     </td>\n     <td style=\"text-align: left;\">\n      Mode Select\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      0x0000_2000\n     </td>\n     <td style=\"text-align: center;\">\n      0x0000_FFFF\n     </td>\n     <td style=\"text-align: center;\">\n     </td>\n     <td style=\"text-align: left;\">\n      Reserved\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      0x0001_0000\n     </td>\n     <td style=\"text-align: center;\">\n      0x0001_7FFF\n     </td>\n     <td style=\"text-align: center;\">\n      R X\n     </td>\n     <td style=\"text-align: left;\">\n      Mask ROM (32 KiB)\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      0x0001_8000\n     </td>\n     <td style=\"text-align: center;\">\n      0x00FF_FFFF\n     </td>\n     <td style=\"text-align: center;\">\n     </td>\n     <td style=\"text-align: left;\">\n      Reserved\n     </td>\n    </tr>\n    <tr>\n     <td style=\"text-align: center;\">\n      0x0100_0000\n     </td>\n     <td style=\"text-align: center;\">\n      0x0100_1FFF\n     </td>\n     <td style=\"text-align: center;\">\n      RWX A\n     </td>\n     <td style=\"text-align: left;\">\n      S51 DTIM (8 KiB)\n     </td>\n    </tr>\n   </tbody>\n  </table>\n </div>\n <p>\n  Did I interpret something wrong, or is there something else going on in this boot sequence that I'm not getting?\n </p>\n <p>\n  --EDIT 1--\n </p>\n <p>\n  In my original math I shifted the hex values left instead of binary. Going to attribute that to brain tired. It still isn't any more clear what's happening after the jump instruction.\n </p>\n <p>\n  --EDIT 2--\n </p>\n <p>\n  It was\n  <a href=\"https://forums.sifive.com/t/whats-the-fu540-boot-sequence/5206\" rel=\"nofollow noreferrer\">\n   pointed out\n  </a>\n  that I was using LW incorrectly, loading the value in the register instead of the value in memory indicated by the address in register. Updated the math and still no more clear.\n </p>\n <p>\n  --EDIT 3--\n </p>\n <p>\n  Thanks to mumbel for pointing out my incorrect use of the MSEL value. I treated as 0x1111 instead 0f 0b1111 = 0xF. I swear I know hex and binary.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "107",
    "tags": [
        "assembly",
        "firmware",
        "memory",
        "static-analysis",
        "risc-v"
    ],
    "user": "Jonathon Anderson",
    "time": "Sep 24, 2021 at 22:22",
    "comments": [
        {
            "user": "mumbel",
            "text": "<html><body><span class=\"comment-copy\">\n I would use the tag risc-v not risc for this question\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jonathon Anderson",
            "text": "<html><body><span class=\"comment-copy\">\n @mumbel oddly, I don't see a risc-v tag\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  MSEL is 4 pins, as in 4 bits.  This means\n  <code>\n   1111\n  </code>\n  is not 0x1111, but 0b1111 or 0xf.  So your math is correct everywhere but the 0x8888 would be 0x78 instead.\n </p>\n <pre><code>auipc t0, 0       <- t0 = pc + 0 => 0x1004\nlw t1, -4(t0)     <- t1 = -4(0x1004) => 0xf\nslli t1, t1, 0x3  <- t1 = 0xf << 3 == 0xf * 8 => 0x78\nadd t0, t0, t1    <- t0 = 0x1004 + 0x78 => 0x107c\nlw t0, 252(t0)    <- t0 = 252(0x107c) == 0(0x1178) => ???\njr t0             <- goto ???\n</code></pre>\n</div>\n</body></html>",
            "votes": "0",
            "user": "mumbel",
            "time": "Sep 24, 2021 at 3:25",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Jonathon Anderson",
                    "text": "<span class=\"comment-copy\">Well that leaves me equally as confused 😂</span>",
                    "time": null
                },
                {
                    "user": "mumbel",
                    "text": "<span class=\"comment-copy\">Heh, at least 0x1178 is mapped.  Which part is confusing or just no clue what's in memory at 0x1178?</span>",
                    "time": null
                },
                {
                    "user": "Jonathon Anderson",
                    "text": "<span class=\"comment-copy\">@mumble no clue what's at that address, and the pin select guide suggests 0b1111 should jump to 0x0001_0000 for ZSBL</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I can't find the full memory map, but I've been told that this table can be interpreted similarly. Basically, whatever address is calculated using MSEL will have the value in the \"Reset address\" field. So, it's not an address to value mapping, but since it's the only variable in the algorithm, it alone determines what address will be jumped to in the final instruction, so the mapping is still valid.\n </p>\n <p>\n  Another way to look at it is that MSEL is an index into a jump table, and the base is calculated in the rest of the algorithm.\n </p>\n <blockquote>\n  <p>\n   Table 9: Target of the reset vector\n  </p>\n  <div class=\"s-table-container\">\n   <table class=\"s-table\">\n    <thead>\n     <tr>\n      <th style=\"text-align: center;\">\n       MSEL\n      </th>\n      <th style=\"text-align: center;\">\n       Reset address\n      </th>\n      <th style=\"text-align: center;\">\n       Purpose\n      </th>\n     </tr>\n    </thead>\n    <tbody>\n     <tr>\n      <td style=\"text-align: center;\">\n       0000\n      </td>\n      <td style=\"text-align: center;\">\n       0x0000_1004\n      </td>\n      <td style=\"text-align: center;\">\n       loops forever waiting for debugger\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       0001\n      </td>\n      <td style=\"text-align: center;\">\n       0x2000_0000\n      </td>\n      <td style=\"text-align: center;\">\n       memory-mapped QSPI0\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       0010\n      </td>\n      <td style=\"text-align: center;\">\n       0x3000_0000\n      </td>\n      <td style=\"text-align: center;\">\n       memory-mapped QSPI1\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       0011\n      </td>\n      <td style=\"text-align: center;\">\n       0x4000_0000\n      </td>\n      <td style=\"text-align: center;\">\n       uncached ChipLink\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       0100\n      </td>\n      <td style=\"text-align: center;\">\n       0x6000_0000\n      </td>\n      <td style=\"text-align: center;\">\n       cached ChipLink\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       0101\n      </td>\n      <td style=\"text-align: center;\">\n       0x0001_0000\n      </td>\n      <td style=\"text-align: center;\">\n       ZSBL\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       0110\n      </td>\n      <td style=\"text-align: center;\">\n       0x0001_0000\n      </td>\n      <td style=\"text-align: center;\">\n       ZSBL\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       0111\n      </td>\n      <td style=\"text-align: center;\">\n       0x0001_0000\n      </td>\n      <td style=\"text-align: center;\">\n       ZSBL\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       1000\n      </td>\n      <td style=\"text-align: center;\">\n       0x0001_0000\n      </td>\n      <td style=\"text-align: center;\">\n       ZSBL\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       1001\n      </td>\n      <td style=\"text-align: center;\">\n       0x0001_0000\n      </td>\n      <td style=\"text-align: center;\">\n       ZSBL\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       1010\n      </td>\n      <td style=\"text-align: center;\">\n       0x0001_0000\n      </td>\n      <td style=\"text-align: center;\">\n       ZSBL\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       1011\n      </td>\n      <td style=\"text-align: center;\">\n       0x0001_0000\n      </td>\n      <td style=\"text-align: center;\">\n       ZSBL\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       1100\n      </td>\n      <td style=\"text-align: center;\">\n       0x0001_0000\n      </td>\n      <td style=\"text-align: center;\">\n       ZSBL\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       1101\n      </td>\n      <td style=\"text-align: center;\">\n       0x0001_0000\n      </td>\n      <td style=\"text-align: center;\">\n       ZSBL\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       1110\n      </td>\n      <td style=\"text-align: center;\">\n       0x0001_0000\n      </td>\n      <td style=\"text-align: center;\">\n       ZSBL\n      </td>\n     </tr>\n     <tr>\n      <td style=\"text-align: center;\">\n       1111\n      </td>\n      <td style=\"text-align: center;\">\n       0x0001_0000\n      </td>\n      <td style=\"text-align: center;\">\n       ZSBL\n      </td>\n     </tr>\n    </tbody>\n   </table>\n  </div>\n </blockquote>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Jonathon Anderson",
            "time": "Sep 25, 2021 at 17:56",
            "is_accepted": true,
            "comments": []
        }
    ]
}