{
    "title": "print format in radare2 cannot output all my string",
    "link": "https://reverseengineering.stackexchange.com/questions/29090/print-format-in-radare2-cannot-output-all-my-string",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I was doing a CTF challenge and I need to see the value of RAX register in radare2.\nI first dumped all of printable ascii characters as input, one of the function encoded the input and spit out the result into RAX registers.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/XrPoS.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/XrPoS.png\"/>\n  </a>\n </p>\n <p>\n  Each integer separated by space represents one character. The problem is it cut shorts at the 52th character (... 1248 1264 12) where is my input has 94 characters.\nIn GDB you can do\n  <code>\n   set print elements 0\n  </code>\n  to remove the output limit. Is there such thing in radare? How can I print the entire register value in string?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "183",
    "tags": [
        "debugging",
        "radare2"
    ],
    "user": "Haekal Al Ghifary",
    "time": "Aug 3, 2021 at 12:06",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  change block size to what you want  by default block size is 255 or 0x100\n </p>\n <pre><code>[0x7ff7d0644570]> cls\n[0x7ff7d0644570]> b 10\n[0x7ff7d0644570]> ps @r8\n\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\n[0x7ff7d0644570]> b 20\n[0x7ff7d0644570]> ps @r8\n\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\n[0x7ff7d0644570]> b 300\n[0x7ff7d0644570]> ps @r8\n\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\n[0x7ff7d0644570]>          \n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "blabb",
            "time": "Aug 3, 2021 at 18:18",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Haekal Al Ghifary",
                    "text": "<span class=\"comment-copy\">It still doesn't work. Even if I limit the block size to 10 or expand it to 1000 the <code>pf s @rax</code> command would still show the same output.</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">pf s seems to take a 32 bit register    s       32bit pointer to string (4 bytes) |  S       64bit pointer to string (8 bytes)</span>",
                    "time": null
                }
            ]
        }
    ]
}