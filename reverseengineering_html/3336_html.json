{
    "title": "How to dump a DLL not listed using Process Explore and similar tools",
    "link": "https://reverseengineering.stackexchange.com/questions/3336/how-to-dump-a-dll-not-listed-using-process-explore-and-similar-tools",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to reverse engineer a DLL that may contain malware. One thing I noticed is that it hides itself from the DLL\n  <code>\n   LDR_MODULE\n  </code>\n  list. So, when I use Ollydbg or smiler tools I do not see it and cannot dump it.\n </p>\n <p>\n  I don't have the DLL file. I just have an executable file that injects the DLL into a certain process.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "malware",
        "ollydbg",
        "dll"
    ],
    "user": "mhazer",
    "time": "Jan 1, 2014 at 19:09",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'll list some ways to do it. Obviously there are many others and most likely other fellows here will add. Start with those as they are ones of the mostly used.\n </p>\n <ol>\n  <li>\n   While debugging a malicious process, BP on\n   <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms681674%28v=vs.85%29.aspx\" rel=\"nofollow\">\n    WriteProcessMemory\n   </a>\n   /NtMapViewOfSection API. Those are used to copy/map potential DLL into the remote process. Before the copying or mapping is done, you can dump the buffer to disk. Check the manual of the above APIs to find the local buffer which will be copied to remote process.\n  </li>\n  <li>\n   Alternatively, if you have s little understanding what malicious code is doing you can follow it by inspecting the log of\n   <a href=\"http://technet.microsoft.com/en-us/sysinternals/bb896645.aspx\" rel=\"nofollow\">\n    procmon\n   </a>\n   . Once you see something in the log that is 100% done by the mal-DLL, you can open that log line and inspect the stack. The stack will tell you at what page the mal-DLL resides. If you know at what memory page the DLL resides in the infected process, you can use for example\n   <a href=\"http://processhacker.sourceforge.net/\" rel=\"nofollow\">\n    Process Hacker\n   </a>\n   for dumping this specific memory page by clicking on the process and inspecting memory tab.\n  </li>\n  <li>\n   Alternatively, you can dump the whole memory of the infected machine and use tool -\n   <a href=\"https://code.google.com/p/volatility/\" rel=\"nofollow\">\n    Volatility\n   </a>\n   to inspect the memory of a specific process or all the processes.\n  </li>\n </ol>\n</div>\n</body></html>",
            "votes": "4",
            "user": "PhoeniX",
            "time": "Jan 8, 2014 at 15:41",
            "is_accepted": true,
            "comments": [
                {
                    "user": "mhazer",
                    "text": "<span class=\"comment-copy\">Find something interesting. This sample actually dumps a randomized copy to disk then injects that. Cool :)</span>",
                    "time": null
                }
            ]
        }
    ]
}