{
    "title": "Reverse Engineering API's of Browser games",
    "link": "https://reverseengineering.stackexchange.com/questions/26751/reverse-engineering-apis-of-browser-games",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I like the idea of Reverse Engineering API's and creating bots/scripts for Browser games. However, I am a beginner in the Computer Science field. I recently started my Computer Science Degree and would like to know what modules should I look out for that typically covers this sort of thing.\n </p>\n <p>\n  We have a course in second year labelled - 'Full Stack Developing' would that be something I should take?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "549",
    "tags": [
        "game-hacking",
        "api",
        "api-hacking",
        "api-reversing"
    ],
    "user": "john doe",
    "time": "Jan 11, 2021 at 21:21",
    "comments": [
        {
            "user": "pythonpython",
            "text": "<html><body><span class=\"comment-copy\">\n Can you share the course offerings from your degree program?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n Browser games are HTTP(S) based. Therefore the best start is to set-up a proxy like mitmproxy, Zap, Fiddler, Chares, redirect your web-browser to the proxy and look at the HTTP requests.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This depends on the implementation of the game in the browser.\n </p>\n <p>\n  The API is likely a\n  <a href=\"https://en.wikipedia.org/wiki/Representational_state_transfer\" rel=\"nofollow noreferrer\">\n   RESTful\n  </a>\n  API and the format for data exchange is likely\n  <a href=\"https://en.wikipedia.org/wiki/JSON\" rel=\"nofollow noreferrer\">\n   JSON\n  </a>\n  .\n </p>\n <p>\n  A modern full stack web development course will often cover both of these subjects.\n </p>\n <p>\n  In terms of reverse engineering the API itself, there's not a huge challenge. Restful APIs and JSON are chosen because they're easy to use and easy to integrate.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "pythonpython",
            "time": "Jan 12, 2021 at 0:38",
            "is_accepted": false,
            "comments": []
        }
    ]
}