{
    "title": "Unix system with windows-style registry",
    "link": "https://reverseengineering.stackexchange.com/questions/32505/unix-system-with-windows-style-registry",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  When trying to determine the filesystem of a firmware image using binwalk, I encountered a strange combination.\nThe binwalk is returning a lot of Unix paths, but some of them contain a typical windows-style registry.\n </p>\n <pre><code>3157752       0x302EF8        Unix path: /dev/ffd/DNL\n3159348       0x303534        Unix path: /dev/fgs/download\n3166204       0x304FFC        Unix path: /dev/rp_if/download\n3198300       0x30CD5C        Unix path: /dev/registry/LOCAL_MACHINE/SOFTWARE/BLAUPUNKT/PROCESS\n3201380       0x30D964        Unix path: /dev/registry/LOCAL_MACHINE/SOFTWARE/BLAUPUNKT/PROCESS/%s\n</code></pre>\n <p>\n  Did you see anything like this before?\nWhat could the filesystem/operating system be?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "106",
    "tags": [
        "windows",
        "linux",
        "binwalk"
    ],
    "user": "Suske Lambik",
    "time": "Nov 17, 2023 at 15:18",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Unix goes by \"everything is a file\". Technically this is also true for Windows at the NT native API level - much more so than it lets on - but this means first and foremost that a path can be accessed uniformly through a common root. This is true on Windows (\n <code>\n  \\\n </code>\n ->\n <code>\n  \\REGISTRY\n </code>\n and\n <code>\n  \\GLOBAL??\\C:\n </code>\n ) as well as Unix. My guess is that a driver exists that populates whatever is in there and you can use standard read/write to interact with that data.\n <code>\n  /proc\n </code>\n and\n <code>\n  /sys\n </code>\n are not much different in that respect. But I didn't see\n <i>\n  that\n </i>\n exact system, no.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n As a side-note, I believe binwalk points out a mere\n <i>\n  path\n </i>\n in this case, not an actual file. I reckon the \"file\" will only become visible on a running kernel that provides the\n <code>\n  /dev/registry\n </code>\n device.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This may be related to automotive. I had seen something like this in\n  <a href=\"https://github.com/ea/bosch_headunit_root/blob/main/README.md\" rel=\"nofollow noreferrer\">\n   this\n  </a>\n  repository, strings including /dev/registry/LOCAL_MACHINE/SOFTWARE/BLAUPUNKT are mentioned directly\n  <a href=\"https://github.com/ea/bosch_headunit_root/blob/main/docs/rtos_interaction.md\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  .\nUsing word \"registry\" here looks like a coincidence.\n  \n\n  <a href=\"https://i.sstatic.net/Tjj1w.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Explanation on libOSAL, OS abstraction layer\" src=\"https://i.sstatic.net/Tjj1w.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "w s",
            "time": "Nov 18, 2023 at 20:53",
            "is_accepted": true,
            "comments": []
        }
    ]
}