{
    "title": "x64dbgpy: application unresponsive when trying to automate inside breakpoint callback",
    "link": "https://reverseengineering.stackexchange.com/questions/22506/x64dbgpy-application-unresponsive-when-trying-to-automate-inside-breakpoint-cal",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  When a breakpoint callback is triggered trying to automate the debugger inside the callback causes the application to become unresponsive.\n  <code>\n   x64dbg\n  </code>\n  continues functioning but the application itself doesn't resume execution.\n </p>\n <p>\n  This is only happening when the functions are called inside the BP callback.\n </p>\n <p>\n  Script:\n </p>\n <pre><code>from x64dbgpy import *\n\ndef handle():\n    pluginsdk.Run()\n\n\nBreakpoint.add(0x81755, handle)\n</code></pre>\n <p>\n  Calling any function such as\n  <code>\n   pluginsdk.StepOver\n  </code>\n  , etc also causes the freeze.\n </p>\n <p>\n  Does x64dbgpy not support automating the debugger inside breakpoint callbacks? Or am I doing something wrong? Suggestions would be great.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "231",
    "tags": [
        "binary-analysis",
        "python",
        "dynamic-analysis",
        "x64dbg",
        "automation"
    ],
    "user": "user3238415",
    "time": "Nov 11, 2019 at 9:43",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Currently it is not supported to do debug automation in callbacks. This is related to the threading model and is further explained at\n  <a href=\"https://x64dbg.com/blog/2016/10/20/threading-model.html\" rel=\"nofollow noreferrer\">\n   https://x64dbg.com/blog/2016/10/20/threading-model.html\n  </a>\n  , which links to some older resources.\n </p>\n <p>\n  Recently there was an interesting development though, because it became possible to automate in the debug callbacks with x64dbgâ€™s built in scripting language (which I do not recommend). The idea now is to port this idea to a C api, which can then be used by plugins like x64dbgpy or x64dbgPlaytime.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "mrexodia",
            "time": "Nov 12, 2019 at 4:50",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user3238415",
                    "text": "<span class=\"comment-copy\">Thank you for your answer and the work you do. Is there somewhere I can read about the recent developments? I looked around on GitHub but nothing stood out</span>",
                    "time": null
                }
            ]
        }
    ]
}