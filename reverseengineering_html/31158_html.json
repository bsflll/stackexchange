{
    "title": "Next steps for android native library RE (JNI_OnLoad, root check)",
    "link": "https://reverseengineering.stackexchange.com/questions/31158/next-steps-for-android-native-library-re-jni-onload-root-check",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to RE an Android app that detects root on a system.\nUsing frida to backtrace 'access' calls I found out that the root check happens natively:\n </p>\n <pre><code>access(/system/xbin/su, 0x0)\n\nInterceptor Backtrace: 0x7a9d8b12dc libnoncnliheopp.so!0x2a72dc\n    0x7a9d8b12dc libnoncnliheopp.so!0x2a72dc\n    0x7a9d8bd608 libnoncnliheopp.so!0x2b3608\n    0x7a9d8bf29c libnoncnliheopp.so!0x2b529c\n    0x7a9d7a66bc libnoncnliheopp.so!0x19c6bc\n    0x7a9d9a7aa4 libnoncnliheopp.so!0x39daa4\n    0x7a9d9aa1d0 libnoncnliheopp.so!JNI_OnLoad+0x24\n    0x7ab198a17c libart.so!_ZN3art9JavaVMExt17LoadNativeLibraryEP7_JNIEnvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEP8_jobjectP7_jclassPS9_+0xd18\n    0x7aa7231170 libopenjdkjvm.so!JVM_NativeLoad+0x1a4\n    0x70c16a28 boot.oat!0x81a28\n    0x70c16a28 boot.oat!0x81a28\n\nretval: 0xffffffffffffffff\n</code></pre>\n <p>\n  I've looked into to the libnoncnliheopp.so and it looks scrambled, the address from the backtrace (0x2a72dc + ghidra base 0x100000) doesn't point to a function but something like a data block (see below). Since the app runs the root checks at startup it's difficult to hook it.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/9hiRt.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Ghidra listing\" src=\"https://i.sstatic.net/9hiRt.png\"/>\n  </a>\n </p>\n <p>\n  <a href=\"https://jsfiddle.net/p07zat6d/\" rel=\"nofollow noreferrer\">\n   Frida code\n  </a>\n </p>\n <p>\n  What's the best way to continue?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "323",
    "tags": [
        "android",
        "ghidra",
        "frida"
    ],
    "user": "Linus",
    "time": "Nov 20, 2022 at 18:25",
    "comments": [
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n Are you sure the used base address included in the frida address is the same as used by Ghidra? Although frida is so nice to calculate the non-ASLR address there is still a base address included. I would first check if Ghidra uses the same base address (here called\n <a href=\"https://stackoverflow.com/a/68335254/150978\">\n  image base\n </a>\n ). If the so file is compressed/packed you could try to dump the library from memory\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Linus",
            "text": "<html><body><span class=\"comment-copy\">\n Oops.. Thank you. Updated. I dumped the memory right after getting the backtrace, but I don't see anything familiar..\n <a href=\"https://i.sstatic.net/kmKcT.png\" rel=\"nofollow noreferrer\">\n  i.sstatic.net/kmKcT.png\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}