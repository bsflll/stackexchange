{
    "title": "Memory address conversion",
    "link": "https://reverseengineering.stackexchange.com/questions/32585/memory-address-conversion",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have 32 bit MS-DOS app, it used dos4gw.exe extender. I run this app in DosBox debug mode. I looked at IDA - and function main() in this app has address:\n </p>\n <pre><code>cseg01:00038460 main_           proc near\n</code></pre>\n <p>\n  Addressing for this app in IDA starts at 0x10000.\n </p>\n <p>\n  But DosBox has addressing mode looks like XXXX:XXXX. I a bit confused, how to convert from IDA address to DosBox address?\n </p>\n <p>\n  Also in heading IDA shows information:\n </p>\n <p>\n  Program Entry Point   (CS:EIP)  1:0003A574h\n </p>\n <p>\n  How to convert this address?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "81",
    "tags": [
        "disassembly",
        "dos"
    ],
    "user": "black4joss",
    "time": "Dec 19, 2023 at 18:03",
    "comments": [
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<html><body><span class=\"comment-copy\">\n Back then, to convert from seg:offset you'd multiply by 0x10 and add the offset. So if you wanted to write to B800:0000 or A000:0000, your linear address was 0xB8000 or 0xA0000. So, you'd probably want to invert the expression to get the offset (but its been forever for me, so it might be wrong). However, you'll likely find a duplicate answer if you search for the words \"converting linear address to segment:offset\"..and if I recall correctly, dosbox-x's debugger does the linear conversion depending on whether paging is enabled.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Max",
            "text": "<html><body><span class=\"comment-copy\">\n Are you sure that you are looking at the same code in DOSBox debugger and IDA? For programs that use DOS/4GW XXXX:XXXX format is used by DOSBox to display code of initial loader and when the real code start to execute the format of the address will change to XXXX:XXXXXX (e.g. \"0160:1B7AA4  882594681C00        mov  [001C6894],ah\")\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}