{
    "title": "Explenation about opcode and operand",
    "link": "https://reverseengineering.stackexchange.com/questions/20188/explenation-about-opcode-and-operand",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I need an explanation about the term \"opcode\". I have found this :\n </p>\n <blockquote>\n  <p>\n   An opcode is binary or hex value of the machine instruction in the cpu\n  instruction set.\n  </p>\n </blockquote>\n <p>\n  If I understand correctly the definition, for instance :\n </p>\n <pre><code>6A 03  push 3\n</code></pre>\n <p>\n  6A is the opcode et 03 the operand. But in several posts on different forums, people talk about 03 as if it was an opcode (for instance\n  <a href=\"https://reverseengineering.stackexchange.com/questions/17671/what-is-an-immediate-value\">\n   this\n  </a>\n </p>\n <blockquote>\n  <p>\n   Here, 3 is an immediate because it's included directly as part of the opcode (in the second byte).\n  </p>\n </blockquote>\n <p>\n  ).\n </p>\n <p>\n  Does 03 is an opcode\n  <strong>\n   and\n  </strong>\n  an operand?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "582",
    "tags": [
        "assembly"
    ],
    "user": "Valala",
    "time": "Dec 24, 2018 at 13:48",
    "comments": [
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n An instruction is composed of many parts which are not necessarily byte sized.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n To reduce confusion, it's better to refer\n <code>\n  6A 03\n </code>\n as the instruction with opcode and operand being\n <code>\n  6A\n </code>\n and\n <code>\n  03\n </code>\n respectively. The mnemonic would be\n <code>\n  push 3\n </code>\n .\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n Compare\n <code>\n  0xCC INT 3\n </code>\n – an opcode\n <i>\n  and\n </i>\n its operand, in a single byte.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Regarding this specific push and according to the\n  <a href=\"https://software.intel.com/sites/default/files/managed/39/c5/325462-sdm-vol-1-2abcd-3abcd.pdf\" rel=\"nofollow noreferrer\">\n   Intel SDM\n  </a>\n  (Page can be identified by searching Vol. 2B 4-507) 03 is both a part of the opcode and the \"argument\". The full opcode of \"\n  <code>\n   push 03\n  </code>\n  \" is \"\n  <code>\n   6A 03\n  </code>\n  \"\n </p>\n <p>\n  As far as I know Intel SDM consistently uses the term opcode as \"all the content of the assembly command, including operands\".\n  <a href=\"https://i.sstatic.net/sJZWz.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Table of possible PUSH opcodes in the SDM\" src=\"https://i.sstatic.net/sJZWz.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "w s",
            "time": "Dec 24, 2018 at 14:27",
            "is_accepted": false,
            "comments": []
        }
    ]
}