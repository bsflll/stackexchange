{
    "title": "radare2 not resolve XREF",
    "link": "https://reverseengineering.stackexchange.com/questions/12452/radare2-not-resolve-xref",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying analyze\n  <a href=\"http://csapp.cs.cmu.edu/3e/bomb.tar\" rel=\"nofollow\">\n   study example\n  </a>\n  . Some article illustrates radar2 work, and there radar2 resolve string by XREF:\n </p>\n <pre><code>0x00400ee4    be00244000   mov esi, str.Border_relations_with_Canada_have_never_been_better. ; \"Border relations with Canada have never been better\" @ 0x402400\n</code></pre>\n <p>\n  But my instance of radar2 prints:\n </p>\n <pre><code>0x00400ee4    be00244000   mov esi, str.BorderrelationswithCanadahaveneverbeenbetter. ; CODE (CALL) XREF from 0x00401338 (unk)\n</code></pre>\n <p>\n  How I can see this string? Maybe I must specify some settings?\n(P.S. Miscusi my English, if it incorrect)\n </p>\n <p>\n  UPD: using\n  <code>\n   strings ./binaryFile | grep someTemplate\n  </code>\n  , I find string... but radare2 behaviour has higher priority. Therefore this string exists in file.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "690",
    "tags": [
        "radare2"
    ],
    "user": "LXA",
    "time": "Apr 15, 2016 at 20:46",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This seems like the version of radare that you're using is slightly different from the version that has been used in the example.\n </p>\n <p>\n  Note that the 2nd argument to\n  <code>\n   mov esi,\n  </code>\n  is not the string itself, it's the address of the string in memory. radare detects what looks like a string, generates a\n  <strong>\n   label\n  </strong>\n  at that address, and uses the label as a synonym for the address in the\n  <code>\n   mov esi\n  </code>\n  instruction.\n </p>\n <p>\n  As labels cannot contain blanks, radare has to handle them in some way. Seems the example version of radare replaces them with underscores, while your version just omits them. But, this is the name of the label, not the real string, and if you display the memory at that location, you should see the real string, including the space characters.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Guntram Blohm",
            "time": "Apr 15, 2016 at 21:28",
            "is_accepted": true,
            "comments": [
                {
                    "user": "LXA",
                    "text": "<span class=\"comment-copy\">excellent shot! Author recommends to install radare2 from <a href=\"http://www.radare.org/r/down.html\" rel=\"nofollow noreferrer\">git-repo</a>, there is version 0.10.2. Ubuntu repository get me version 0.9.6. Thanks!</span>",
                    "time": null
                }
            ]
        }
    ]
}