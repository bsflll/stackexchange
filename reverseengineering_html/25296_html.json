{
    "title": "pick dump from a specific process from virtualbox coredump",
    "link": "https://reverseengineering.stackexchange.com/questions/25296/pick-dump-from-a-specific-process-from-virtualbox-coredump",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  i'm interested in reverse engineering and assembly stuff i have started to do some research and im still a complete beginner \nwhat i have learned so far that we could use virtualbox to dump the RAM for us so we can get a full memory dump and look at the actual assembly code of a packed program, and that what i did so far on a x86 Windows 7 Ultimate VM\n </p>\n <p>\n  First Starting the vm with debugging mode enabled\n </p>\n <pre><code>virtualboxvm --startvm \"Windows 7\" --dbg\n</code></pre>\n <p>\n  Then opening VirtualBox Debugging Console Via\n  <code>\n   Debug -> Command Line\n  </code>\n </p>\n <p>\n  and using this command you can get a full RAM dump file:\n </p>\n <pre><code>VBoxDbg> .pgmphystofile 'dump.bin'\n</code></pre>\n <p>\n  So now i have the file, and im not sure about the correct ways to analyse it, it's a \"flat binary\" i guess\n </p>\n <pre><code>file dump.bin\n</code></pre>\n <p>\n  will output:\n </p>\n <pre><code>dump.bin :data\n</code></pre>\n <p>\n  i tried to use\n  <code>\n   volatility\n  </code>\n  to get some info:\n </p>\n <pre><code>volatility -f dump.bin imageinfo\n</code></pre>\n <p>\n  output:\n </p>\n <pre><code>Volatility Foundation Volatility Framework 2.6\nINFO    : volatility.debug    : Determining profile based on KDBG search...\n          Suggested Profile(s) : Win7SP1x86_23418, Win7SP0x86, Win7SP1x86_24000, Win7SP1x86\n                     AS Layer1 : IA32PagedMemoryPae (Kernel AS)\n                     AS Layer2 : FileAddressSpace (/root/w7-nc-shell.bin)\n                      PAE type : PAE\n                           DTB : 0x185000L\n                          KDBG : 0x8292dc28L\n          Number of Processors : 1\n     Image Type (Service Pack) : 1\n                KPCR for CPU 0 : 0x8292ec00L\n             KUSER_SHARED_DATA : 0xffdf0000L\n           Image date and time : 2020-06-14 17:41:24 UTC+0000\n     Image local date and time : 2020-06-14 09:41:24 -0800\n</code></pre>\n <p>\n  A bunch of informations that im not sure what they really mean (if you can suggest me some useful resource in deep about those kind of informations in comment will be appreciated)\n </p>\n <p>\n  So Anyway using volatitlity we can get a process list using this command:\n </p>\n <pre><code>volatility -f dump.bin --profile=Win7SP1x86_23418 pslist\n</code></pre>\n <p>\n  output:\n </p>\n <pre><code>Volatility Foundation Volatility Framework 2.6\nOffset(V)  Name                    PID   PPID   Thds     Hnds   Sess  Wow64 Start                          Exit                          \n---------- -------------------- ------ ------ ------ -------- ------ ------ ------------------------------ ------------------------------\n0x8415e558 System                    4      0     83      503 ------      0 2020-06-15 04:31:21 UTC+0000                                 \n0x84874560 smss.exe                248      4      2       29 ------      0 2020-06-15 04:31:21 UTC+0000                                 \n0x850579b0 csrss.exe               324    316     10      452      0      0 2020-06-15 04:31:25 UTC+0000                                 \n0x850ead40 csrss.exe               376    368     10      267      1      0 2020-06-15 04:31:26 UTC+0000                                 \n0x850e9030 wininit.exe             392    316      3       76      0      0 2020-06-15 04:31:26 UTC+0000                                 \n0x8511ad40 winlogon.exe            420    368      3      110      1      0 2020-06-15 04:31:26 UTC+0000                                 \n....\n</code></pre>\n <p>\n  is there a way, to get the dump of one specific processe and convert it back to PE? so i can easily debug the unpacked code? if not, is there a way to just dump the process and just dissassemble it?\n </p>\n <p>\n  Thanks in advance.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "293",
    "tags": [
        "debugging",
        "memory-dump",
        "virtual-machines"
    ],
    "user": "Someone",
    "time": "Jun 14, 2020 at 19:37",
    "comments": [],
    "answers_data": []
}