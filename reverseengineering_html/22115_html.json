{
    "title": "Understanding operand forms",
    "link": "https://reverseengineering.stackexchange.com/questions/22115/understanding-operand-forms",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  9(%rax, %rdx): What happens here? Is\n  <em>\n   9\n  </em>\n  the offset? and do you add the two registers together?\n </p>\n <p>\n  I'm reading Randal E. Bryant and David R. O'Hallaran's\n  <em>\n   \"Computer Systems - A programmer's Persepctive\"\n  </em>\n </p>\n <p>\n  At page 209 we are presented with a table (Operand forms):\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/eN3LA.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/eN3LA.png\"/>\n  </a>\n </p>\n <hr/>\n <p>\n  It's then possible to do a little assignment where I have to fill the empty table with values. I tried my best but am stuck as you can see:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/C3nNb.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/C3nNb.png\"/>\n  </a>\n </p>\n <p>\n  9(%rax, %rdx). Is the\n  <em>\n   9\n  </em>\n  the offset? And do you add the two registers here? Not quite sure what to add. I would really appreciate if someone could walk me through the last empty values I need to fill.\n </p>\n <hr/>\n <p>\n  Below is the solutions:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/Yb9Hq.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/Yb9Hq.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 1,
    "views": "601",
    "tags": [
        "assembly",
        "x86-64"
    ],
    "user": "user10829235",
    "time": "Sep 13, 2019 at 6:35",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Welcome to the wonderful world of AT&T assembly! The 9 in\n  <code>\n   9(%rax, %rdx)\n  </code>\n  is commonly called\n  <em>\n   displacement\n  </em>\n  or sometimes\n  <em>\n   base\n  </em>\n  , and you should indeed just add all three values:\n </p>\n <p>\n  9+rax+rdx = 9+0x100+0x3 = 0x10C\n </p>\n <p>\n  This address is then dereferenced so the value 0x11 is loaded from the address 0x10C.\n </p>\n <p>\n  I would recommend reading the Solaris\n  <a href=\"https://docs.oracle.com/cd/E26502_01/html/E28388/ennby.html\" rel=\"nofollow noreferrer\">\n   x86 Assembly Language Reference Manual\n  </a>\n  if you plan to stick with AT&T, or just switch to Intel syntax since it's much more widely used (especially in processor documentation).\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Igor Skochinsky",
            "time": "Sep 13, 2019 at 9:47",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user10829235",
                    "text": "<span class=\"comment-copy\">Thank you, Igor. Makes sense now!</span>",
                    "time": null
                }
            ]
        }
    ]
}