{
    "title": "create pem from ecc signature bytes",
    "link": "https://reverseengineering.stackexchange.com/questions/12352/create-pem-from-ecc-signature-bytes",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am researching an QNX ARM based car navigation and it seems this system has a backdoor that enables telnet access without password to the system if a challenge/response succeeds.\n </p>\n <p>\n  When a file called\n  <code>\n   challenge\n  </code>\n  is placed on a USB key and inserted in the system it will write some bytes in it. Here are a few examples:\neaxj2ABs4BeMQqQJamOH?smOCVEC\nKKUcw5m:vvJXmCIK3SBDDqv9p:Or\nodlwY@ed6B?8OKCmaqIDdFz7YSnv\nBBqGoWKocmAuvSDacMAkZ:83:QVq\n </p>\n <p>\n  I found the ELF file that handles the challenge/response in the firmware (can share this upon request) and it reads a public key file:\n  <code>\n   hChallengePub = sub_1030A0((int)\"/ifs/challenge.pub\", &v11, &v13)\n  </code>\n </p>\n <p>\n  challenge.pub contains the following bytes:\n </p>\n <pre><code>30 29 03 02 07 00 02 01 0E 02 0F 00 9C 9C A4 5A\nFA 1E 2D 32 2A 93 9D 37 41 93 02 0F 00 95 AB 6B\nDB 94 29 4D C3 C6 07 3B B7 31 40\n</code></pre>\n <p>\n  Debug text in the ELF points to source file\n  <code>\n   src/pk/ecc/ecc_import.c\n  </code>\n  which leds me to believe it's an ECC public key but it seems to be incomplete (eg no ASN.1 header).\n </p>\n <p>\n  I want to be able to convert this key into pem format so I can run some tests with openssl so I am looking for pointers how to do this.\n </p>\n <p>\n  Ultimately I'd like to see if I can create proper response and get access but maybe this is impossible if it requires private key (which it should if it's any good).\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "372",
    "tags": [
        "encryption",
        "qnx"
    ],
    "user": "Remko",
    "time": "Apr 5, 2016 at 16:26",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <code>\n   src/pk/ecc/ecc_import.c\n  </code>\n  strongly suggests that it's using LibTomCrypt:\n  <a href=\"https://github.com/libtom/libtomcrypt/blob/develop/src/pk/ecc/ecc_import.c\" rel=\"nofollow\">\n   https://github.com/libtom/libtomcrypt/blob/develop/src/pk/ecc/ecc_import.c\n  </a>\n </p>\n <p>\n  The content of\n  <code>\n   challenge.pub\n  </code>\n  appears to be DER-encoded.\n  <a href=\"https://lapo.it/asn1js/#30290302070002010E020F009C9CA45AFA1E2D322A939D374193020F0095AB6BDB94294DC3C6073BB73140\" rel=\"nofollow\">\n   It can be decoded as follows\n  </a>\n  :\n </p>\n <pre><code>SEQUENCE(4 elem)\n    BIT STRING (1 bit) 0\n    INTEGER            14\n    INTEGER (112 bit)  3176466357047968568460177262985619\n    INTEGER (112 bit)  3035660427084515633934604600553792\n</code></pre>\n <p>\n  As can be seen in the\n  <code>\n   ecc_import.c\n  </code>\n  code referenced above, this translates to:\n </p>\n <ul>\n  <li>\n   <code>\n    key->type\n   </code>\n   =\n   <code>\n    PK_PUBLIC\n   </code>\n  </li>\n  <li>\n   <code>\n    key_size\n   </code>\n   =\n   <code>\n    14\n   </code>\n   bytes\n  </li>\n  <li>\n   <code>\n    key->pubkey.x\n   </code>\n   =\n   <code>\n    3176466357047968568460177262985619\n   </code>\n  </li>\n  <li>\n   <code>\n    key->pubkey.y\n   </code>\n   =\n   <code>\n    3035660427084515633934604600553792\n   </code>\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Jason Geffner",
            "time": "Apr 5, 2016 at 16:51",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Remko",
                    "text": "<span class=\"comment-copy\">How to verify it with openssl ? <code>openssl ec -noout -text -inform DER -in challenge.pub -pubin</code> fails: <code>read EC key unable to load Key 24340:error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag:tasn_dec.c:1198: 24340:error:0D07803A:asn1 encoding routines:ASN1_ITEM_EX_D2I:nested asn1 error:tasn_dec.c:372:Type=X509_ALGOR 24340:error:0D08303A:asn1 encoding routines:ASN1_TEMPLATE_NOEXP_D2I:nested asn1 error:tasn_dec.c:694:Field=algor, Type=X509_PUBKEY</code>  Missing ASN1 ?</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">LibTomCrypt uses a different format than openssl expects. See <a href=\"http://superuser.com/questions/900918/get-x-and-y-components-of-ec-public-key-using-openssl#comment1207840_900918\" title=\"get x and y components of ec public key using openssl%23comment1207840_900918\">superuser.com/questions/900918/â€¦</a> for openssl's expected format.</span>",
                    "time": null
                },
                {
                    "user": "Remko",
                    "text": "<span class=\"comment-copy\">Accepting this answer as it's very helpful (would still like to convert to OpenSSL compatible PEM format but I will research that)</span>",
                    "time": null
                }
            ]
        }
    ]
}