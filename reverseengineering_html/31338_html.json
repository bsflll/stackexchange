{
    "title": "How to correctly inject a [jump + address] instruction into another process (code injection)?",
    "link": "https://reverseengineering.stackexchange.com/questions/31338/how-to-correctly-inject-a-jump-address-instruction-into-another-process-cod",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to inject a jump instruction into another process (External injection), although the injection operation has been completed the address was not correct.\n </p>\n <p>\n  <strong>\n   For example:\n  </strong>\n </p>\n <pre><code>unsigned int addr = 0x0048DA03;\nunsigned int jumpToAddr = 0x0048D9B2;\nunsigned char command[] = { 0xEA };\nWriteProcessMemory(hProcess, (void*)addr, (void*)command, sizeof(command), NULL); // this line for jmp\nWriteProcessMemory(hProcess, (void*)addr, (void*)jumpToAddr, sizeof(jumpToAddr), NULL); // this line for the address\n</code></pre>\n <p>\n  <strong>\n   The result:\n  </strong>\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/P5Zwh.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"\" src=\"https://i.sstatic.net/P5Zwh.png\"/>\n  </a>\n </p>\n <p>\n  As you see, after executing that code, the jump address is wrong.\n </p>\n <p>\n  Also, the same problem occurs with the following code:\n </p>\n <pre><code>void* reservedMemAddress = VirtualAllocEx(hProcess, NULL, 100, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);\nif (reservedMemAddress) {\n    WriteProcessMemory(hProcess, (void*)addr, (void*)command, sizeof(command), NULL);\n    WriteProcessMemory(hProcess, (void*)addr, (void*)reservedMemAddress, sizeof(reservedMemAddress), NULL);\n}\n</code></pre>\n <ol>\n  <li>\n   <strong>\n    How can I write the address correctly?\n   </strong>\n  </li>\n  <li>\n   <strong>\n    How can I merge the two\n    <code>\n     WriteProcessMemory\n    </code>\n    lines into one to\nwrite the entire instruction ex:\n    <code>\n     JMP 0x0048D9B2\n    </code>\n    ?\n   </strong>\n  </li>\n </ol>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 0,
    "views": "239",
    "tags": [
        "c++",
        "byte-code",
        "injection"
    ],
    "user": "Lion King",
    "time": "Dec 31, 2022 at 1:34",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<html><body><span class=\"comment-copy\">\n <code>\n  EA\n </code>\n is the\n <code>\n  seg:off\n </code>\n jump. You really want to use this one and not\n <code>\n  EB\n </code>\n with relative offset? Also the writes seems to use the same address of the write?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Lion King",
            "text": "<html><body><span class=\"comment-copy\">\n @PawełŁukasik: I want you to instruct me on the correct way to apply what I said before, injecting (ex:\n <code>\n  JMP 0x0048D9B2\n </code>\n ).\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "gipi",
            "text": "<html><body><span class=\"comment-copy\">\n I think that if you look at what is written in the address\n <code>\n  addr\n </code>\n you might understand what is wrong\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Lion King",
            "text": "<html><body><span class=\"comment-copy\">\n @gipi: You might see something I don't. Please clarify.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}