{
    "title": "Changing a windows name by patching create window function call",
    "link": "https://reverseengineering.stackexchange.com/questions/16979/changing-a-windows-name-by-patching-create-window-function-call",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I use x64dbg and IDA Pro the process is 32bit. I'm not sure if I'm doing this right or not because I'm getting a crash which I'm not sure if it's caused by me doing something wrong or the startup process of the application failing for some reason because it can't find the window.\n </p>\n <p>\n  Basically what I'm trying to do is change the window title of some application on startup. I'm trying to achieve this by setting a break point on the\n  <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms632680(v=vs.85).aspx\" rel=\"nofollow noreferrer\">\n   user32 function\n  </a>\n  <code>\n   CreateWindowExA\n  </code>\n  and then attempting to change the\n  <code>\n   lpWindowName\n  </code>\n  parameter.\n </p>\n <p>\n  Here is what execution looks like when the bp is hit:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/gKGKv.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"code\" src=\"https://i.sstatic.net/gKGKv.png\"/>\n  </a>\n </p>\n <p>\n  Where you see the string \"Title possibly\" originally contained what was the windows title, so I assume that's the location I need to change. When changing at that address is when I get the error though.\n </p>\n <p>\n  Sorry for any ignorance, I'm new to this and practicing. Thanks.\n </p>\n <p>\n  Edit: I worked on this a little more and made a dummy program to help me figure out what was happening. So the\n  <code>\n   CreateWindowExA\n  </code>\n  function in this application used the same pointer for both\n  <code>\n   lpClassName\n  </code>\n  and\n  <code>\n   lpWindowName\n  </code>\n  args. So patching the program to push just a string instead of that pointer successfully achieved what I was aiming for.\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 3,
    "views": "2k",
    "tags": [
        "ida",
        "debugging",
        "binary-analysis",
        "x86"
    ],
    "user": "notvita",
    "time": "Dec 19, 2017 at 22:17",
    "comments": [
        {
            "user": "EWD-0-",
            "text": "<html><body><span class=\"comment-copy\">\n Do you change the pointer or the bytes it points to? What is the size in bytes of the original window title?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "notvita",
            "text": "<html><body><span class=\"comment-copy\">\n I change the bytes it points to and keep it with a string of the same length if that counts for anything.   The original title I believe is a string of 10 characters including the\n <code>\n  0/\n </code>\n (if I need to include it?) unless it's a wide char I guess. Not exactly sure how I would confirm that though sorry\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "EWD-0-",
            "text": "<html><body><span class=\"comment-copy\">\n Take a look\n <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms632680(v=vs.85).aspx\" rel=\"nofollow noreferrer\">\n  msdn.microsoft.com/en-us/library/windows/desktop/â€¦\n </a>\n to see if you change the right parameter. There is no need to guess which parameter is the window name when it's documented.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "notvita",
            "text": "<html><body><span class=\"comment-copy\">\n Thanks. I was trying to but I'm a bit confused about things. Where the line is it breaks, but that to me doesn't look like a function. Are all those instructions leading up to the\n <code>\n  call user32.76F8AA9C\n </code>\n down the bottom the functions prologue and then the actual call the function being called? That's kind of the conclusion I came to and all the\n <code>\n  dword ptr ss\n </code>\n pushes above\n <code>\n  call user32.76F8AA9C\n </code>\n being the functions parameters?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "EWD-0-",
            "text": "<html><body><span class=\"comment-copy\">\n Yes, as in stdcall we have the parameters in the stack you can just check/change them in the debugger stack view. What you see here is a functions which is somehow working as an interface to call the main functionality.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Tip: Install xAnalyzer for x64dbg, that might help you in your reversing efforts.\n </p>\n <p>\n  Now, you are in the\n  <code>\n   user32.dll\n  </code>\n  function\n  <code>\n   CreateWindowExA\n  </code>\n  . I would not change that parameter there, but outside in user code (familiarize yourself with the\n  <code>\n   stdcall\n  </code>\n  convention, its what WinApi uses). The parameter you are shooting for is three pushes above the\n  <code>\n   call CreateWindowExA\n  </code>\n  in user code. Either change the pointer or the content under it and don't forget to null-terminate.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "barnaby-b",
            "time": "Dec 20, 2017 at 14:55",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">Kernel function? For starters this is not a function in kernel32.dll and furthermore just because that DLL has \"kernel\" in its name doesn't make the function a kernel function.</span>",
                    "time": null
                },
                {
                    "user": "barnaby-b",
                    "text": "<span class=\"comment-copy\">@0xC0000022L You are completely right. It was late here and I just typed up a quick answer. Of course that CreateWindow does not go through the sysenter system, I just saw he's inside a dll and called it a kernel function for whatever reason. (edited the aswer)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Hook it, then set the parameter\n  <code>\n   lpWindowName\n  </code>\n  to\n  <code>\n   \"your name here\"\n  </code>\n  (no promises this will work) OR breakpoint on\n  <code>\n   mov edx, dword ptr ss:[EBP+C]\n  </code>\n  , then grab EBP from the FPU (registers box), go in to a program like ReClass and set the\n  <code>\n   EBP+0xC\n  </code>\n  (window name) to whatever name you want (90% sure this will work). References:\n  <a href=\"https://stackoverflow.com/questions/873658/how-can-i-hook-windows-functions-in-c-c\">\n   https://stackoverflow.com/questions/873658/how-can-i-hook-windows-functions-in-c-c\n  </a>\n  <a href=\"https://www.youtube.com/watch?v=K_jj6yF5ac0\" rel=\"nofollow noreferrer\">\n   https://www.youtube.com/watch?v=K_jj6yF5ac0\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Graham Best",
            "time": "Dec 15, 2017 at 15:14",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Thanks for the responses guys. I managed to achieve my goal which is detailed in the OP edit:\n </p>\n <p>\n  The\n  <code>\n   CreateWindowExA\n  </code>\n  function in this application used the same pointer for both\n  <code>\n   lpClassName\n  </code>\n  and\n  <code>\n   lpWindowName\n  </code>\n  args. So patching the program to push just a string instead of that pointer for\n  <code>\n   lpWindowName\n  </code>\n  successfully achieved what I was aiming for. I believe changing the\n  <code>\n   lpClassName\n  </code>\n  was causing the crash I described in the OP.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "notvita",
            "time": "Dec 19, 2017 at 22:20",
            "is_accepted": true,
            "comments": []
        }
    ]
}