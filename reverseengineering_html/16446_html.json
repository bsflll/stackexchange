{
    "title": "How can I dynamically debug a malicious DLL? [duplicate]",
    "link": "https://reverseengineering.stackexchange.com/questions/16446/how-can-i-dynamically-debug-a-malicious-dll",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         This question already has answers here\n        </b>\n        :\n       </div>\n      </div>\n     </div>\n    </div>\n    <div class=\"flex--item mb0 mt4\">\n     <a dir=\"ltr\" href=\"/questions/15572/x64dbg-how-to-debug-a-dll-called-from-an-application\">\n      x64dbg how to debug a DLL called from an application\n     </a>\n     <span class=\"question-originals-answer-count\">\n      (3 answers)\n     </span>\n    </div>\n    <div class=\"flex--item mb0 mt8\">\n     Closed\n     <span class=\"relativetime\" title=\"2017-10-01 19:46:50Z\">\n      7 years ago\n     </span>\n     .\n    </div>\n   </div>\n  </aside>\n </div>\n <p>\n  English isn't my first language, So I will do my best )\n </p>\n <p>\n  I am trying to analyze some malware\n  <a href=\"https://github.com/ytisf/theZoo/blob/master/malwares/Binaries/Ransomware.Petrwrap/Ransomware.Petrwrap.zip\" rel=\"nofollow noreferrer\" title=\"NotPetya\">\n   NotPetya\n  </a>\n  and I can run the malware by running :\n </p>\n <p>\n  <code>\n   rundll32.exe notpetya.dll #1\n  </code>\n </p>\n <p>\n  I am using Olly and trying to use the LoadDLL feature. I see where the DLL calls some of it's functions, however I am not able to follow and watch it work. I want to be able to debug this DLL and see what is happening as it's working.\n </p>\n <p>\n  As far as I can tell, there doesn't appear to be anything to obfuscate me from doing this.\n </p>\n <p>\n  I hope I have made this clear enough for people to understand. I don't require the answer to use OllyDBG , but I would like to be able to follow this DLL.\n </p>\n <p>\n  Thank you\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ollydbg",
        "debugging",
        "malware",
        "dll",
        "dynamic-analysis"
    ],
    "user": "LUser",
    "time": "7 years ago",
    "comments": [
        {
            "user": "Mick",
            "text": "<html><body><span class=\"comment-copy\">\n Have a look at this existing answer:\n <a href=\"https://reverseengineering.stackexchange.com/a/15796/161\">\n  reverseengineering.stackexchange.com/a/15796/161\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Perhaps the simplest thing would be to find the entrypoint in the DLL, make a note of the byte at that location, and then replace it with an \"int 3\" (0xcc) instruction.  Then you can use a debugger to run the command-line that will cause the DLL to be loaded, and the debugger will regain control.  At that point, you can restore the replaced byte with the original value, and single-step or run to breakpoints that you set.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "peter ferrie",
            "time": "Sep 29, 2017 at 20:47",
            "is_accepted": true,
            "comments": [
                {
                    "user": "LUser",
                    "text": "<span class=\"comment-copy\">The answer.was similar. I realized that the dll had two entry points and the first entry just closes the application. Anyway, I just made some assembly that loaded the dll and pulled the exports from.jt and jmped to it. The int 3 helps stop on secondary entry.</span>",
                    "time": null
                }
            ]
        }
    ]
}