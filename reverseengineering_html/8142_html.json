{
    "title": "finding a RC4 Encryption function in obfuscated assembly code with no symbols",
    "link": "https://reverseengineering.stackexchange.com/questions/8142/finding-a-rc4-encryption-function-in-obfuscated-assembly-code-with-no-symbols",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  RC4 encryption is quite basic and its Pseudo random generation algorithm is given at\n  <a href=\"http://en.wikipedia.org/wiki/RC4#Pseudo-random_generation_algorithm_.28PRGA.29\" rel=\"nofollow\">\n   Wikipedia\n  </a>\n </p>\n <p>\n  When Looking for a hashing algorithm like MD5 or SHAx it is pretty simple to look for the Hashing constants in the code, for example to find the MD5 code most times looking for the byte sequense of\n  <strong>\n   0x01234567\n  </strong>\n  is enough and you'd probably hit the function iterating the text section.\n </p>\n <p>\n  Now that example gives the MD5 function. but what if i would like to find an implementation of the symmetric RC4 encryption? would there be any obvious opcode sequense that would repeat itself?\n </p>\n <p>\n  I'm asking that question because im working on some heavily anti-debugging obfuscated piece of code with no symbols. I know for a high chance (like 90% sure) it is using a RC4 encryption. now i want to be able to find that RC4 function just like i was able to find the MD5 hashing functions.\n </p>\n <p>\n  Just in case i was wrong, and its not hard-coded inside the main executable itself (Because md5 is, so i can assume it should be too), i have already tried to set a BreakPoint at\n  <strong>\n   <em>\n    CRYPTSP!CryptEncrypt\n   </em>\n  </strong>\n  with no success, are there any alternative Api functions to Encrypt using RC4?\n </p>\n <p>\n  So to sum my questions up:\n </p>\n <ol>\n  <li>\n   Is there any static opcode usage or number in the assembly of an RC4 encryption?\n  </li>\n  <li>\n   Are there any alternative WinAPI calls for encrypting using RC4 encryption beside\n   <em>\n    CRYPTSP!CryptEncrypt\n   </em>\n   ?\n  </li>\n  <li>\n   Any other way to look for the RC4 encryption algorithm you can help me think about is blessed.\n  </li>\n </ol>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 2,
    "views": "1k",
    "tags": [
        "assembly",
        "ollydbg",
        "obfuscation",
        "encryption",
        "winapi"
    ],
    "user": "0xAK",
    "time": "Feb 1, 2015 at 14:55",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <ol>\n   <li>\n    Is there any static opcode usage or number in the assembly of an RC4 encryption?\n   </li>\n  </ol>\n </blockquote>\n <ul>\n  <li>\n   Opcode: Search the disassembly for\n   <code>\n    xor <x>, <y>\n   </code>\n   where\n   <code>\n    <x>\n   </code>\n   !=\n   <code>\n    <y>\n   </code>\n   .\n  </li>\n  <li>\n   Number: Search for\n   <code>\n    0x100\n   </code>\n  </li>\n </ul>\n <p>\n  Obviously both of these searches will yield many false-positives, so you'd have to look at each match manually to see if it's part of an RC4 function.\n </p>\n <blockquote>\n  <ol start=\"2\">\n   <li>\n    Are there any alternative WinAPI calls for encrypting using RC4 encryption beside\n    <em>\n     CRYPTSP!CryptEncrypt\n    </em>\n    ?\n   </li>\n  </ol>\n </blockquote>\n <p>\n  Every time I see software using RC4, the RC4 code is always written inline, not imported from a dynamic library.\n </p>\n <blockquote>\n  <ol start=\"3\">\n   <li>\n    Any other way to look for the RC4 encryption algorithm you can help me think about is blessed.\n   </li>\n  </ol>\n </blockquote>\n <p>\n  You could try\n  <a href=\"https://code.google.com/p/aligot/\" rel=\"nofollow\">\n   Aligot\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Jason Geffner",
            "time": "Feb 1, 2015 at 15:56",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I would first start by reading the following article\n  <a href=\"https://blog.talosintelligence.com/2014/06/an-introduction-to-recognizing-and.html\" rel=\"nofollow noreferrer\">\n   https://blog.talosintelligence.com/2014/06/an-introduction-to-recognizing-and.html\n  </a>\n </p>\n <p>\n  For some other encryption you could also try to use\n  <a href=\"https://hex-rays.com/blog/findcrypt/\" rel=\"nofollow noreferrer\">\n   https://hex-rays.com/blog/findcrypt/\n  </a>\n  this plugin that identifies crypto constants in the IDA database, then find xrefs to those constants usually will help you find the encryption/decryption loop.\n </p>\n <p>\n  The previous answer also had some good thumb rules.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "rotem.salinas",
            "time": "Jul 20, 2022 at 9:08",
            "is_accepted": false,
            "comments": []
        }
    ]
}