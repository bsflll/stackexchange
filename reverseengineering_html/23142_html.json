{
    "title": "Within A Folder of 100s of 16-bit MS-DOS Disassembled EXEs Identify Ones That Need/Use DOS/4GW",
    "link": "https://reverseengineering.stackexchange.com/questions/23142/within-a-folder-of-100s-of-16-bit-ms-dos-disassembled-exes-identify-ones-that-ne",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  So far I batch disassembled all files using following PowerShell and IDA:\n </p>\n <pre><code>$files = Get-Content S:\\files.txt\nForEach ($file in $files)\n{\n    Write-Host \"Processing $file\"\n    &\"C:\\Program Files\\IDA Pro 7.4\\ida.exe\" -B $file \n}\n</code></pre>\n <p>\n  I then did a simple processing to try and identify DOS APIs used:\n </p>\n <pre><code>$files = Get-ChildItem -Path S:\\ -Filter *.asm -Recurse\n\n$ApiNames = @()\n\nForEach ($file in $files)\n{\n    Write-Host \"Processing $file\"\n    $content = Get-Content $file.Fullname \n    $APIs = $content | Where-Object { $_.Contains(\"                int     \") }\n    ForEach($API in $APIs)\n    {\n        if ($API.Contains(\";\"))\n        {\n            $split = $API.Split(\";\").Trim().Replace(\"     \", \" \")\n            $ApiName = \"$($split[0]) - $($split[1])\"\n            $ApiName = $ApiName.Replace(\"- -\",\"-\").Trim()\n            if ($apiName -eq \"int 3 - software interrupt to invoke the debugger\") { $apiName = \"int 3 - Trap to Debugger\" }\n            if (!$ApiName.EndsWith(\" -\"))\n            {\n                if (!$ApiNames.Contains($ApiName))\n                {\n                    $ApiNames += $ApiName\n                }\n            }\n        }\n    }\n\n}\n\n$SortedApiNames = $ApiNames | Sort-Object\n\n$table = New-Object System.Data.DataTable\n\n$table.Columns.Add(\"Process\")\nForEach ($ApiName in $SortedApiNames)\n{\n    $table.Columns.Add($ApiName)\n}\n\nForEach ($file in $files)\n{\n    Write-Host \"Processing $file\"\n    $content = Get-Content $file.Fullname \n    $APIs = $content | Where-Object { $_.Contains(\"                int     \") }\n    $row = @()\n    $row+= $file.FullName\n    $ApiList = @()\n    ForEach($API in $APIs)\n    {\n        if ($API.Contains(\";\"))\n        {\n            $split = $API.Split(\";\").Trim().Replace(\"     \", \" \")\n            $ApiName = \"$($split[0]) - $($split[1])\"\n            $ApiName = $ApiName.Replace(\"- -\",\"-\").Trim()\n            if ($apiName -eq \"int 3 - software interrupt to invoke the debugger\") { $apiName = \"int 3 - Trap to Debugger\" }\n            $ApiList+=$ApiName\n        }\n    }\n\n    For($i=1;$i -lt $table.Columns.Count;$i++)\n    {\n        if ($ApiList.Contains($table.Columns[$i].ColumnName))\n        {\n            $row+= \"Yes\"\n        }\n        else\n        {\n            $row+=\"No\"\n        }\n    }\n\n    $table.Rows.Add($row)\n\n}\n\n$table | Export-Csv -NoTypeInformation APIUse.csv\n</code></pre>\n <p>\n  This identified the following interrupt calls used:\n </p>\n <pre><code>int 0C7h - used by BASIC while in interpreter\nint 0Dh - IRQ5 - FIXED DISK (PC), LPT2 (AT/PS)\nint 0E4h - used by BASIC while in interpreter\nint 0Fh - IRQ7 - PRINTER INTERRUPT\nint 10h - VIDEO - ALTERNATE FUNCTION SELECT (PS, EGA, VGA, MCGA) - GET EGA INFO\nint 10h - VIDEO - DISPLAY COMBINATION (PS,VGA/MCGA): read display combination code\nint 10h - VIDEO - GET CURRENT VIDEO MODE\nint 10h - VIDEO - GET INDIVIDUAL PALETTE REGISTER (VGA)\nint 10h - VIDEO - INSTALLATION CHECK (Video7 VGA,VEGA VGA)\nint 10h - VIDEO - Microsoft Mouse driver EGA support - WRITE ONE REGISTER\nint 10h - VIDEO - READ ATTRIBUTES/CHARACTER AT CURSOR POSITION\nint 10h - VIDEO - READ CURSOR POSITION\nint 10h - VIDEO - READ INDIVIDUAL DAC REGISTER (EGA, VGA/MCGA)\nint 10h - VIDEO - SCROLL PAGE UP\nint 10h - VIDEO - SELECT DISPLAY PAGE\nint 10h - VIDEO - SET CURSOR CHARACTERISTICS\nint 10h - VIDEO - SET CURSOR POSITION\nint 10h - VIDEO - SET INDIVIDUAL DAC REGISTER (EGA, VGA/MCGA)\nint 10h - VIDEO - SET VIDEO MODE\nint 10h - VIDEO - WRITE ATTRIBUTES/CHARACTERS AT CURSOR POSITION\nint 10h - VIDEO - WRITE CHARACTERS ONLY AT CURSOR POSITION\nint 11h - EQUIPMENT DETERMINATION\nint 15h - Get Extended Memory Size\nint 15h - SYSTEM - GET CONFIGURATION (XT after 1/10/86,AT mdl 3x9,CONV,XT286,PS)\nint 16h - KEYBOARD - CHECK BUFFER, DO NOT CLEAR\nint 16h - KEYBOARD - GET SHIFT STATUS\nint 16h - KEYBOARD - READ CHAR FROM BUFFER, WAIT IF EMPTY\nint 1Ah - CLOCK - GET TIME OF DAY\nint 20h - DOS - PROGRAM TERMINATION\nint 21h - DOS - 2+ - ADJUST MEMORY BLOCK SIZE (SETBLOCK)\nint 21h - DOS - 2+ - ALLOCATE MEMORY\nint 21h - DOS - 2+ - CHANGE THE CURRENT DIRECTORY (CHDIR)\nint 21h - DOS - 2+ - CLOSE A FILE WITH HANDLE\nint 21h - DOS - 2+ - CREATE A FILE WITH HANDLE (CREAT)\nint 21h - DOS - 2+ - CREATE A SUBDIRECTORY (MKDIR)\nint 21h - DOS - 2+ - CREATE DUPLICATE HANDLE (DUP)\nint 21h - DOS - 2+ - DELETE A FILE (UNLINK)\nint 21h - DOS - 2+ - FIND FIRST ASCIZ (FINDFIRST)\nint 21h - DOS - 2+ - FIND NEXT ASCIZ (FINDNEXT)\nint 21h - DOS - 2+ - FORCE DUPLICATE HANDLE (FORCDUP,DUP2)\nint 21h - DOS - 2+ - FREE MEMORY\nint 21h - DOS - 2+ - GET COUNTRY-DEPENDENT INFORMATION\nint 21h - DOS - 2+ - GET CURRENT DIRECTORY\nint 21h - DOS - 2+ - GET DISK SPACE\nint 21h - DOS - 2+ - GET EXIT CODE OF SUBPROGRAM (WAIT)\nint 21h - DOS - 2+ - GET FILE ATTRIBUTES\nint 21h - DOS - 2+ - GET FILE'S DATE/TIME\nint 21h - DOS - 2+ - GET INTERRUPT VECTOR\nint 21h - DOS - 2+ - GET VERIFY FLAG\nint 21h - DOS - 2+ - IOCTL - GET DEVICE INFORMATION\nint 21h - DOS - 2+ - IOCTL - READ CHARACTER DEVICE CONTROL STRING\nint 21h - DOS - 2+ - IOCTL - SET DEVICE INFORMATION\nint 21h - DOS - 2+ - LOAD OR EXECUTE (EXEC)\nint 21h - DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK)\nint 21h - DOS - 2+ - OPEN DISK FILE WITH HANDLE\nint 21h - DOS - 2+ - QUIT WITH EXIT CODE (EXIT)\nint 21h - DOS - 2+ - READ FROM FILE WITH HANDLE\nint 21h - DOS - 2+ - REMOVE A DIRECTORY ENTRY (RMDIR)\nint 21h - DOS - 2+ - RENAME A FILE\nint 21h - DOS - 2+ - SET FILE ATTRIBUTES\nint 21h - DOS - 2+ - SET FILE'S DATE/TIME\nint 21h - DOS - 2+ - WRITE TO FILE WITH HANDLE\nint 21h - DOS - 2+ internal - GET LIST OF LISTS\nint 21h - DOS - 2+ internal - GET SWITCHAR/AVAILDEV\nint 21h - DOS - 2+ internal - RETURN CritSectFlag (InDOS) POINTER\nint 21h - DOS - 2+ internal - SET PSP SEGMENT\nint 21h - DOS - 3.1+ internal - GET ADDRESS OF DOS SWAPPABLE DATA AREA\nint 21h - DOS - 3+ - CREATE NEW FILE\nint 21h - DOS - 3+ - GET EXTENDED ERROR CODE\nint 21h - DOS - 3+ - GET PSP ADDRESS\nint 21h - DOS - 4.0 - EXTENDED OPEN/CREATE\nint 21h - DOS - BUFFERED KEYBOARD INPUT\nint 21h - DOS - CLEAR KEYBOARD BUFFER\nint 21h - DOS - DIRECT CONSOLE I/O CHARACTER OUTPUT\nint 21h - DOS - DIRECT STDIN INPUT, NO ECHO\nint 21h - DOS - DISK RESET\nint 21h - DOS - DISPLAY OUTPUT\nint 21h - DOS - DOS 2+ - TERMINATE BUT STAY RESIDENT\nint 21h - DOS - DOS v??? - OEM FUNCTION\nint 21h - DOS - EXTENDED CONTROL-BREAK CHECKING\nint 21h - DOS - GET ALLOCATION TABLE INFORMATION FOR SPECIFIC DRIVE\nint 21h - DOS - GET CURRENT DATE\nint 21h - DOS - GET CURRENT TIME\nint 21h - DOS - GET DEFAULT DISK NUMBER\nint 21h - DOS - GET DISK TRANSFER AREA ADDRESS\nint 21h - DOS - GET DOS VERSION\nint 21h - DOS - KEYBOARD INPUT\nint 21h - DOS - KEYBOARD INPUT, NO ECHO\nint 21h - DOS - Novell Advanced NetWare 2.0+ - FILE SERVER FILE COPY\nint 21h - DOS - PARSE FILENAME\nint 21h - DOS - PRINT STRING\nint 21h - DOS - SELECT DISK\nint 21h - DOS - SET CURRENT DATE\nint 21h - DOS - SET CURRENT TIME\nint 21h - DOS - SET DISK TRANSFER AREA ADDRESS\nint 21h - DOS - SET INTERRUPT VECTOR\nint 21h - DOS - SET VERIFY FLAG\nint 2Fh - Multiplex - MS WINDOWS -  3+ - BEGIN CRITICAL SECTION\nint 2Fh - Multiplex - MS WINDOWS - ENHANCED WINDOWS INSTALLATION CHECK\nint 2Fh - Multiplex - MS WINDOWS - Mode Interface - INSTALLATION CHECK\nint 2Fh - Multiplex - XMS - GET DRIVER ADDRESS\nint 2Fh - Multiplex - XMS - INSTALLATION CHECK\nint 3 - Trap to Debugger\nint 31h - DPMI Services   ax=func xxxxh\nint 33h - MS MOUSE - DEFINE DOUBLE-SPEED THRESHOLD\nint 33h - MS MOUSE - DEFINE INTERRUPT SUBROUTINE PARAMETERS\nint 33h - MS MOUSE - DEFINE SCREEN REGION FOR UPDATING\nint 33h - MS MOUSE - DEFINE TEXT CURSOR\nint 33h - MS MOUSE - HIDE MOUSE CURSOR\nint 33h - MS MOUSE - POSITION MOUSE CURSOR\nint 33h - MS MOUSE - READ MOTION COUNTERS\nint 33h - MS MOUSE - RESET DRIVER AND READ STATUS\nint 33h - MS MOUSE - RESTORE DRIVER STATE\nint 33h - MS MOUSE - RETURN DRIVER STORAGE REQUIREMENTS\nint 33h - MS MOUSE - RETURN POSITION AND BUTTON STATUS\nint 33h - MS MOUSE - SAVE DRIVER STATE\nint 33h - MS MOUSE - SHOW MOUSE CURSOR\nint 3Fh - Overlay manager interrupt\nint 48h - PCjr - Cordless Keyboard Translation\nint 67h - LIM EMS - GET HANDLE AND ALLOCATE MEMORY\nint 67h - LIM EMS - GET NUMBER OF PAGES\nint 67h - LIM EMS - GET PAGE FRAME SEGMENT\nint 67h - LIM EMS - MAP MEMORY\nint 67h - LIM EMS - RELEASE HANDLE AND MEMORY\nint 67h - LIM EMS 4.0 - REALLOCATE PAGES\nint 67h - LIM EMS Program Interface - FREE 4K PAGE\nint 67h - LIM EMS Program Interface - GET 8259 INTERRUPT VECTOR MAPPINGS\nint 67h - LIM EMS Program Interface - GET PROTECTED MODE INTERFACE\nint 67h - LIM EMS Program Interface - INSTALLATION CHECK\nint 67h - LIM EMS Program Interface - SWITCH TO PROTECTED MODE\nint 75h - IRQ13 - AT/XT286/PS50+ - 80287 ERROR\nint 7Ah - Novell NetWare to v2.0a - LOW-LEVEL API\nint 89h - used by BASIC while in interpreter\nint 8Ch - used by BASIC while in interpreter\nint 91h - used by BASIC while in interpreter\nint 98h - used by BASIC while in interpreter\n</code></pre>\n <p>\n  What can I look for to confirm if an app uses DOS/4GW?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "214",
    "tags": [
        "disassembly",
        "dos",
        "dos-exe"
    ],
    "user": "chentiangemalc",
    "time": "Jan 29, 2020 at 5:59",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  DOS/4GW executables normally use LE (linear executable) format for the actual main program (the DOS stub is just a launcher for the DOS4GW.EXE extender) and should be detected as such by IDA so you can probably just check the loaded file format.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Jan 29, 2020 at 12:43",
            "is_accepted": true,
            "comments": [
                {
                    "user": "chentiangemalc",
                    "text": "<span class=\"comment-copy\">I found the executables with text \"Format      : Linear Executable (LE)\"</span>",
                    "time": null
                }
            ]
        }
    ]
}