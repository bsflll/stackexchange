{
    "title": "Reverse Engineering Legacy iPod Click Wheel Games",
    "link": "https://reverseengineering.stackexchange.com/questions/13965/reverse-engineering-legacy-ipod-click-wheel-games",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have recently found a bunch of old iPod (pre-touch) games.  These\n  <code>\n   ipg\n  </code>\n  files (similar to modern iOS\n  <code>\n   ipa\n  </code>\n  files).  Are application bundles which contain resources (images, music files, textures), sometimes a localized strings file, and executables.\n </p>\n <p>\n  Each bundle contains a Manifest.plist file, with executable information.  Below is the manifest for Bomberman 1.0:\n </p>\n <pre><code><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>BuildIdentifier</key>\n    <string>1465338237-ae7bdef1533\n</string>\n    <key>Files</key>\n    <array>\n        <dict>\n            <key>Digest</key>\n            <string>D576EBCA193EA6C08060394435497CBE52288730</string>\n            <key>Path</key>\n            <string>bombLaunchm25.raw.lcd5</string>\n            <key>Size</key>\n            <integer>138256</integer>\n        </dict>\n        <dict>\n            <key>DRM</key>\n            <true/>\n            <key>Digest</key>\n            <string>10A5CD8E82B692D4A3136753639FFE9EC96F9E72</string>\n            <key>Path</key>\n            <string>Executables/iPodBomberman_7052137.bin</string>\n            <key>Size</key>\n            <integer>425664</integer>\n            <key>Verify</key>\n            <true/>\n        </dict>\n        <dict>\n            <key>Digest</key>\n            <string>3DBFC1556706CF12555448CC5103FCCB59E6E773</string>\n            <key>Path</key>\n            <string>bombLaunchm1a.raw.lcd5</string>\n            <key>Size</key>\n            <integer>6176</integer>\n        </dict>\n        <dict>\n            <key>DRM</key>\n            <true/>\n            <key>Digest</key>\n            <string>99B99192D77939DAB9A7E05AEB9ED564D33ECFDB</string>\n            <key>Path</key>\n            <string>Executables/iPodBomberman_7052208.bin</string>\n            <key>Size</key>\n            <integer>633344</integer>\n            <key>Verify</key>\n            <true/>\n        </dict>\n    </array>\n    <key>GUID</key>\n    <string>20000</string>\n    <key>Name</key>\n    <string>Bomberman</string>\n    <key>Platforms</key>\n    <array>\n        <dict>\n            <key>BuildID</key>\n            <integer>7052137</integer>\n            <key>ExecutablePath</key>\n            <string>Executables/iPodBomberman_7052137.bin</string>\n            <key>LaunchingArtwork</key>\n            <string>bombLaunchm25.raw.lcd5</string>\n            <key>PlatformID</key>\n            <integer>1</integer>\n            <key>PlatformVersion</key>\n            <integer>1</integer>\n            <key>Size</key>\n            <integer>425664</integer>\n        </dict>\n        <dict>\n            <key>BuildID</key>\n            <integer>7052208</integer>\n            <key>ExecutablePath</key>\n            <string>Executables/iPodBomberman_7052208.bin</string>\n            <key>LaunchingArtwork</key>\n            <string>bombLaunchm1a.raw.lcd5</string>\n            <key>PlatformID</key>\n            <integer>2</integer>\n            <key>PlatformVersion</key>\n            <integer>1</integer>\n            <key>Size</key>\n            <integer>633344</integer>\n        </dict>\n        <dict>\n            <key>BuildID</key>\n            <integer>7052208</integer>\n            <key>ExecutablePath</key>\n            <string>Executables/iPodBomberman_7052208.bin</string>\n            <key>LaunchingArtwork</key>\n            <string>bombLaunchm1a.raw.lcd5</string>\n            <key>PlatformID</key>\n            <integer>3</integer>\n            <key>PlatformVersion</key>\n            <integer>1</integer>\n            <key>Size</key>\n            <integer>633344</integer>\n        </dict>\n    </array>\n    <key>Version</key>\n    <string>1.0</string>\n</dict>\n</plist>\n</code></pre>\n <p>\n  The Manifest appears to contain two different builds (one is listed twice), presumably for two different iPod architectures (?).  For each executable there also appears to be an accompanying\n  <code>\n   .bin.sinf\n  </code>\n  file, which I believe contains purchaser information used by Apple's FairPlay DRM.\n </p>\n <p>\n  Here's where I get stuck:\n </p>\n <ul>\n  <li>\n   <p>\n    Running\n    <code>\n     strings\n    </code>\n    on either of the executables,\n    <code>\n     .bin.sinf\n    </code>\n    files, or the\n    <code>\n     .raw.lcd5\n    </code>\n    files prints garbage.\n   </p>\n  </li>\n  <li>\n   <p>\n    Running\n    <code>\n     nm\n    </code>\n    gives me an error that the files are not object files.\n   </p>\n  </li>\n  <li>\n   <p>\n    <code>\n     file\n    </code>\n    just tells me that the files are binary data.\n   </p>\n  </li>\n  <li>\n   <p>\n    I cannot use\n    <code>\n     otool\n    </code>\n    because the files are not Mach-O binaries.\n   </p>\n  </li>\n </ul>\n <p>\n  According to Wikipedia, all iPods before the 6th gen classic used an ARM processor (one or more 7TDMI-derived CPUs).\n </p>\n <p>\n  What are my options for dissembling or reading any of the information (strings, etc) of these executables and binary files?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "392",
    "tags": [
        "ipod"
    ],
    "user": "JAL",
    "time": "Nov 18, 2016 at 8:22",
    "comments": [
        {
            "user": "Jongware",
            "text": "<html><body><span class=\"comment-copy\">\n Modern IPA files are\n <i>\n  heavily\n </i>\n encrypted. Could it be the same for these old files? Your search for plain text strings seems to indicate that.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "JAL",
            "text": "<html><body><span class=\"comment-copy\">\n @RadLexus That could be the case.  All of the binaries should be the same for all purchasers, but the\n <code>\n  sinf\n </code>\n contain purchaser-specific keys to start the executable.  But wouldn't it be odd for all the binary files in the bundle to be encrypted?  Surely the game data should be somehow visible.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}