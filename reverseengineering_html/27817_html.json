{
    "title": "Bypass Javascript Debug Prevention in Firefox",
    "link": "https://reverseengineering.stackexchange.com/questions/27817/bypass-javascript-debug-prevention-in-firefox",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I've looked around, and can't find an answer for my specific question. The closest I could find was\n  <a href=\"https://stackoverflow.com/q/53970719\">\n   this\n  </a>\n  .\n </p>\n <p>\n  I'm trying to reverse engineer some suspicious Javascript, but it repeatedly calls a debugger statement, preventing any meaningful use of breakpoints. The question linked above describes some methods for Chrome, but I was curious if this was possible in Firefox?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 0,
    "views": "777",
    "tags": [
        "debugging",
        "anti-debugging",
        "javascript"
    ],
    "user": "Enki",
    "time": "Jun 8, 2021 at 19:26",
    "comments": [
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n This should be possible using the FF Remote Protocol. Using the\n <a href=\"https://developer.mozilla.org/en-US/docs/Tools/Debugger-API\" rel=\"nofollow noreferrer\">\n  Debugger API\n </a>\n you can write a script that listens for\n <code>\n  onDebuggerStatement\n </code>\n <a href=\"https://developer.mozilla.org/en-US/docs/Tools/Debugger-API/Debugger#debugger_handler_functions\" rel=\"nofollow noreferrer\">\n  events\n </a>\n and automatically resumes execution.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user3840170",
            "text": "<html><body><span class=\"comment-copy\">\n Run it through some kind of AST analyser and remove the debugger statements?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}