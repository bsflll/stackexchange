{
    "title": "COM interface call from managed code",
    "link": "https://reverseengineering.stackexchange.com/questions/15020/com-interface-call-from-managed-code",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have managed assembly that calls COM interface methods. I am interested in\n  <code>\n   IManager\n  </code>\n  interface, here is the code from\n  <code>\n   NET Reflector\n  </code>\n  :\n </p>\n <pre><code>namespace Lib\n{\n     [ComImport, CompilerGenerated, CoClass(typeof(object)), Guid(\"5D3D2B5F-1AD8-48F7-BC63-DFF7E6BED182\"), TypeIdentifier]\n    public interface Service : IService\n\n     [ComImport, CompilerGenerated, Guid(\"1A5BCF9B-039D-4422-9380-274D98D27265\"), TypeIdentifier]\n    public interface IManager\n\n    // another interfaces...\n}\n</code></pre>\n <p>\n  As I understand assembly should contain reference to another assembly that contains metadata required to call COM interface methods at runtime. However there is no referenced assembly with name that would indicate possible COM metadata.\n </p>\n <p>\n  I already have interface GUID, now I believe I need to obtain GUID for COM object itself and code small C++ program that will use\n  <code>\n   CoCreateInstance\n  </code>\n  and\n  <code>\n   QueryInterface\n  </code>\n  . After that I will be able to make call trough virtual table without providing full interface definition. Than we load our program in IDA and follow the call.\n </p>\n <p>\n  I am not very familiar with COM, is it technically possible to achieve? How can I get GUID for COM object itself? (I will use it in\n  <code>\n   CoCreateInstance\n  </code>\n  ) Thank you.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "357",
    "tags": [
        "c#",
        "com",
        "interoperability"
    ],
    "user": "igntec",
    "time": "Mar 26, 2017 at 18:45",
    "comments": [],
    "answers_data": []
}