{
    "title": "How to clear all comments created in ida using funcap?",
    "link": "https://reverseengineering.stackexchange.com/questions/25194/how-to-clear-all-comments-created-in-ida-using-funcap",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  How to clear the comments created by funcap and restore database to it's previous state?\n </p>\n <p>\n  I tried reanalyzing the program but comments do not seems to go away from database.\n </p>\n <p>\n  Though, checking-off Comments in IDA Options seems to work, but it also remove comments that I have made.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/bQ83R.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/bQ83R.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "476",
    "tags": [
        "ida",
        "ida-plugin"
    ],
    "user": "Viktor",
    "time": "Jun 2, 2020 at 11:26",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I would like to answer my own question. Firstly, we need to understand that funcap annotates disassembly with anterior comments which are helpful most of the time. But, sometimes it can provide redundant information which can hinder the normal workflow. Unlike normal comments and repeatable comments which usually appear at the end of the line, anterior comments appear above any instruction or data. While posterior comments appear below any given data or instruction in disassembly.\n </p>\n <p>\n  Therefore, the above problem of clearing comments can be broken down into 2 steps:\n </p>\n <ol>\n  <li>\n   Delete anterior comments while retainingÂ other comments at the end of line(comments, repeatable comments).\n  </li>\n  <li>\n   Set the color of the disassembly view to default.\n  </li>\n </ol>\n <p>\n  Opening and deleting every individual comment manually using\n  <kbd>\n   Insert\n  </kbd>\n  is a tedious task. We can automate this (boring) task using IDC script or IDAPython script.\n </p>\n <p>\n  <strong>\n   clear_comments.idc\n  </strong>\n  - idc script\n </p>\n <pre><code>// clear_comments.idc - clear all (anterior)comments by funcap using IDC\n\n#include <idc.idc>\nstatic main(void) {\n    auto ea;\n    for (ea=MinEA(); ea != BADADDR; ea=NextHead(ea, BADADDR))\n    {\n        DelExtLnA(ea, 0);  // delete anterior comments\n        SetColor(ea, CIC_FUNC, DEFCOLOR);  // set default color of functions and data\n        SetColor(ea, CIC_ITEM, DEFCOLOR);\n    }\n    Message(\"[*] refreshing disassembly.\");\n    Refresh();\n    Message(\".ok\n\");\n    Message(\"[*] refreshing lists.\");\n    RefreshLists();\n    Message(\".ok\n\");\n}\n</code></pre>\n <p>\n  <strong>\n   clear_comments.py\n  </strong>\n  - idapython script\n </p>\n <pre><code># clear_comments.py - clear all (anterior)comments by funcap using IDAPython (python 2.7.10)\n\nfrom idaapi import *\nfrom idc import DelExtLnA, SetColor, Refresh, RefreshLists\n\ndef refresh_disassembly():\n    Refresh()\n    return \"disassembly\"\n\ndef refresh_lists():\n    RefreshLists()\n    return \"lists\"\n\ndef clear_comments():\n    ea = idaapi.cvar.inf.minEA   \n    while ea != BADADDR:\n        DelExtLnA(ea, 0)                    # delete anterior comments\n        SetColor(ea, CIC_FUNC, DEFCOLOR)    # set default color of functions and data\n        SetColor(ea, CIC_ITEM, DEFCOLOR)\n        ea = idaapi.next_head(ea, idaapi.cvar.inf.maxEA)\n    \n    print \"[*] refreshing\", refresh_disassembly(), \"..ok\"\n    print \"[*] refreshing\", refresh_lists(), \"..ok\"\n    return None\n\nclear_comments()\n</code></pre>\n <p>\n  <em>\n   Note 1: I have tested the idapython script in IDA 6.6 with python 2.7.10. For using this script with python 3.x.x we just need some minor adjustments to\n   <code>\n    print(...)\n   </code>\n   statements at\n   <code>\n    line:22\n   </code>\n   <code>\n    line:23\n   </code>\n   only.\n  </em>\n </p>\n <p>\n  <em>\n   Note 2: These scripts can be used to delete pseudo comments or to reset the color of the disassembly view to default.\n  </em>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Viktor",
            "time": "Jul 25, 2022 at 9:28",
            "is_accepted": true,
            "comments": []
        }
    ]
}