{
    "title": "Changing the jne to je instruction causes program to generate error",
    "link": "https://reverseengineering.stackexchange.com/questions/30210/changing-the-jne-to-je-instruction-causes-program-to-generate-error",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to change the instruction from\n  <code>\n   jne\n  </code>\n  to\n  <code>\n   je\n  </code>\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/lZQlE.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"jne instruction\" src=\"https://i.sstatic.net/lZQlE.png\"/>\n  </a>\n </p>\n <p>\n  I've change an instruction\n </p>\n <pre><code>75 0c        jne [some_location]\n</code></pre>\n <p>\n  <code>\n   75 0c\n  </code>\n  is a 2 jump instruction.\n </p>\n <p>\n  So, I've a chaged it to from\n  <code>\n   75 0c\n  </code>\n  to\n  <code>\n   74 0c\n  </code>\n  which is also a 2 byte\n  <code>\n   jcc\n  </code>\n  instruction.\n </p>\n <p>\n  The error:\n </p>\n <pre><code>./binary: 1: 00000000:: not found\n/* Repeat of the same error but instead of 0000000X where is X is some number */\n</code></pre>\n <p>\n  EDIT: The problem was the hex editor was filtering lines and corrupting data? I was using nvim as the hex edior\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "669",
    "tags": [
        "binary-analysis",
        "radare2",
        "binary",
        "patching"
    ],
    "user": "user40683",
    "time": "Apr 6, 2022 at 2:59",
    "comments": [
        {
            "user": "Rolf Rolles",
            "text": "<html><body><span class=\"comment-copy\">\n Your question doesn't indicate what tool you're using when the error occurs.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user40683",
            "text": "<html><body><span class=\"comment-copy\">\n @RolfRolles It should be tool agnostic, right? Nothing here is really dependent on the tool I use. I use a disassembler to view the assembly and use a hex editor to edit the instruction.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Rolf Rolles",
            "text": "<html><body><span class=\"comment-copy\">\n Oh, I misread. The\n <i>\n  program that you patched\n </i>\n is generating this error, not the tool that did the patching. In any case, this question is impossible to answer. We have 3 lines of assembly code and the knowledge that if you invert a jump, the program spits out a message that it didn't produce before you patched it. What answer are you looking for beyond \"you altered the logic of the program, and its behavior changed as a result\"?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "sudhackar",
            "text": "<html><body><span class=\"comment-copy\">\n We can help you better with more info on the binary - maybe attach it? Additionally any more details on the crash/error in the patched binary - maybe run it under a debugger?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user40683",
            "text": "<html><body><span class=\"comment-copy\">\n @RolfRolles The problem was the hex editor was filtering lines and corrupting data? I switched do a new hex editor. I was using nvim and it was filtering liines\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You do not need to use an hexadecimal editor with radare2. r2 is a reverse engineering framwork. It does everything.\n </p>\n <p>\n  First ensure radare2 is updated with the latest version:\n </p>\n <pre><code>git clone https://github.com/radareorg/radare2\nsh radare2/sys/install.sh\n</code></pre>\n <p>\n  Then open your program in write mode, replace NAMEOFYOURPROGRAM by the name of the program that you want to patch. Then you can overwrite the instruction:\n </p>\n <pre><code>radare2 -a x86 -b 32 -w NAMEOFYOUREXECUTABLE\n=> s 0x1343\n=> \"wa jn 0x1351\"\n</code></pre>\n</div>\n</body></html>",
            "votes": "2",
            "user": "ultimate-anti-reversing",
            "time": "Apr 18, 2022 at 20:26",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you want to swap a conditional jump you can use the\n  <code>\n   wao\n  </code>\n  command like this:\n  <code>\n   r2 -qc 'wao recj @ 0x1343' -w YOURPROGRAM\n  </code>\n  .\n </p>\n <p>\n  But you can also use:\n </p>\n <ul>\n  <li>\n   <code>\n    wx 74@0x1343\n   </code>\n  </li>\n  <li>\n   <code>\n    wai jne 0x1351@0x1343\n   </code>\n  </li>\n  <li>\n   <code>\n    woa 01@!1\n   </code>\n  </li>\n </ul>\n <p>\n  (there are many other ways to achieve the same, pick the one you like more)\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "pancake",
            "time": "Jul 1, 2022 at 13:28",
            "is_accepted": false,
            "comments": []
        }
    ]
}