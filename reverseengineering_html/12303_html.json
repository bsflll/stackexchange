{
    "title": "What checksum is Super Smash Bros. Wii U using?",
    "link": "https://reverseengineering.stackexchange.com/questions/12303/what-checksum-is-super-smash-bros-wii-u-using",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  When you save a screenshot in\n  <em>\n   Super Smash Bros.\n  </em>\n  for Wii U on the SD card it writes to, it makes two files: a\n  <code>\n   .JPG\n  </code>\n  and a\n  <code>\n   .BIN\n  </code>\n  file. Both these files are in the format of\n  <code>\n   HNI_XXXX.\n   <em>\n    EXTENTION\n   </em>\n  </code>\n  , where\n  <em>\n   XXXX\n  </em>\n  is the number of the screenshot. I believe that the\n  <code>\n   .BIN\n  </code>\n  file is (at least in part) a checksum to verify that the images are not edited (outside of the game), because modifying the\n  <code>\n   .JPG\n  </code>\n  file in any way will cause the game to refuse to recognize it.\n </p>\n <p>\n  Since the\n  <code>\n   .BIN\n  </code>\n  file is always 32-bytes exactly, I've tried using some of the common 265-bit checksums like SHA-256, and GOST. But none have ever matched up what has been contained in the\n  <code>\n   .BIN\n  </code>\n  files.\n </p>\n <p>\n  I've included three sets of images and their respective checksums in a\n  <a href=\"http://www.speedyshare.com/tuyB3/snapshots.zip\" rel=\"nofollow\">\n   convenient zip file\n  </a>\n  , so please take a look.\n </p>\n <p>\n  Does anyone have any ideas what checksum\n  <em>\n   Super Smash Bros.\n  </em>\n  might be using? If you need any more details I'd be more than happy to provide them.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "250",
    "tags": [
        "hash-functions"
    ],
    "user": "Miguel",
    "time": "Mar 30, 2016 at 4:54",
    "comments": [
        {
            "user": "0xec",
            "text": "<html><body><span class=\"comment-copy\">\n The sha-256 checksums of the image does not match with the ones you provided. Perhaps you may like to upload the images to a service which does not alter them.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jason Geffner",
            "text": "<html><body><span class=\"comment-copy\">\n I'm voting to close this as off-topic because this is not a question about reverse engineering. If the only two datapoints are a data file and a digest, then there's nothing to reverse engineer. If you'd like to share the code for the software that generates the digest, then feel free to re-open this question.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Miguel",
            "text": "<html><body><span class=\"comment-copy\">\n @ExtremeCoders Sorry about that. I've added a link to download a zip file containing them all. Hopefully they didn't get messed up this time. :)\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}