{
    "title": "Two arguments pushed on stack, callee only shows one argument",
    "link": "https://reverseengineering.stackexchange.com/questions/15505/two-arguments-pushed-on-stack-callee-only-shows-one-argument",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have found myself confused while reversing some programs (specifically the IOLI Crackme challenges). I have no trouble solving them, but I have come across something that I do not understand and it irks me.\n </p>\n <p>\n  I have a function call to, in this example,\n  <strong>\n   sub_80484B4\n  </strong>\n  . The caller is\n  <strong>\n   sub_8048542\n  </strong>\n  . It pushes to values on the stack, (\n  <strong>\n   arg_4\n  </strong>\n  and\n  <strong>\n   num\n  </strong>\n  ). However, As you can see in the disassembly of\n  <strong>\n   sub_80484B4\n  </strong>\n  , it only shows one argument,\n  <strong>\n   arg_4\n  </strong>\n  .\n </p>\n <p>\n  What happened to\n  <strong>\n   num\n  </strong>\n  ? Is Ida just saying\n  <strong>\n   arg_4\n  </strong>\n  only because\n  <strong>\n   num's\n  </strong>\n  value is not referenced in the callee?\n </p>\n <p>\n  I use Radare2 and it showed the same thing. Am I missing something or are the tools just simplifying?\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/0USWi.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Caller pushes two values onto stack\" src=\"https://i.sstatic.net/0USWi.png\"/>\n  </a>\n  <a href=\"https://i.sstatic.net/zLRc7.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"Callee shows one argument\" src=\"https://i.sstatic.net/zLRc7.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 2,
    "views": "193",
    "tags": [
        "disassembly",
        "radare2",
        "stack",
        "arguments"
    ],
    "user": "tylernygaard",
    "time": "Dec 16, 2017 at 16:52",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Yes, the disassembler is not including it since\n  <code>\n   [ebp+8]\n  </code>\n  is not referenced anywhere in the procedure.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "cimarron",
            "time": "Jun 8, 2017 at 5:16",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The function at sub_80484B4 does however return its value in eax, so the push could be to preserve the original value of eax. Which isn't used either from what can be seen in the disassembly.\nProbably wasn't compiled with optimisation in that case\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Unlogic",
            "time": "Jun 9, 2017 at 21:49",
            "is_accepted": false,
            "comments": []
        }
    ]
}