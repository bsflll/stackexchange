{
    "title": "HTML/JS app - getting a reference to an element which is not part of the DOM",
    "link": "https://reverseengineering.stackexchange.com/questions/31345/html-js-app-getting-a-reference-to-an-element-which-is-not-part-of-the-dom",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to debug an app which I don't own which uses HTML5 and JS, which displays a video stream.  The issue is that the video stutters when viewed in high resolution.\n </p>\n <p>\n  Note that the code is obfuscated, but has been prettyfied which helps a little.  So far using Chrome developer tools and by injecting listeners I have determined that the video is being displayed in a\n  <code>\n   <canvas>\n  </code>\n  element.  From my research, I have determined that displaying video content in\n  <code>\n   <canvas>\n  </code>\n  requires the use of\n  <code>\n   <video>\n  </code>\n  , where the data taken from the video element is manipulated and written on to the\n  <code>\n   <canvas>\n  </code>\n  .\n </p>\n <p>\n  My problem is that I want to get a reference to the\n  <code>\n   <video>\n  </code>\n  element, which apparently is not a part of the DOM.  The use of Chrome developer tools reveals no such element, nor does\n  <code>\n   getElementsByTagName()\n  </code>\n  .  I find clues in the code which indicate a\n  <code>\n   <video>\n  </code>\n  element most likely exists, so my conclusion is that it is just used in memory as a tool and is not added to the DOM.\n </p>\n <p>\n  Does anyone have any suggestions as to how I can get a reference to this element?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "70",
    "tags": [
        "javascript"
    ],
    "user": "KevinHJ",
    "time": "Jan 2, 2023 at 14:34",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <ul>\n  <li>\n   <p>\n    Look for any requests to\n    <code>\n     document.createElement\n    </code>\n    or\n    <code>\n     document.createElementNS\n    </code>\n    in the code that may be creating and appending the\n    <code>\n     <video>\n    </code>\n    element to the DOM. You might be able to locate the\n    <code>\n     <video>\n    </code>\n    element by searching the child nodes of its parent element.\n   </p>\n  </li>\n  <li>\n   <p>\n    Look for any event listeners associated with the\n    <code>\n     <video>\n    </code>\n    element. For example, if the\n    <code>\n     <video>\n    </code>\n    element has a onended event listener, you could try triggering it and seeing if it produces any output in the console or other visible effects.\n   </p>\n  </li>\n  <li>\n   <p>\n    Search the code for any mentions of the\n    <code>\n     <video>\n    </code>\n    element. You might notice references to an attribute in the code, for instance, if the\n    <code>\n     src\n    </code>\n    attribute of the\n    <code>\n     <video>\n    </code>\n    element is set dynamically.\n   </p>\n  </li>\n  <li>\n   <p>\n    You might be able to locate the\n    <code>\n     <video>\n    </code>\n    element by looking for it in the virtual DOM or component tree if the code makes use of a JavaScript library or framework (like React or Angular).\n   </p>\n  </li>\n  <li>\n   <p>\n    If the\n    <code>\n     <video>\n    </code>\n    element is being used to display a video stream from a server, you may be able to locate it by inspecting the network traffic in the developer tools. For example, if the video stream is served via the HTML5\n    <code>\n     MediaSource\n    </code>\n    API, network requests for video segments should be visible in the network panel.\n   </p>\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "2",
            "user": "r0xdeadbeef",
            "time": "Jan 3, 2023 at 2:04",
            "is_accepted": true,
            "comments": []
        }
    ]
}