{
    "title": "Giving labels to local variables with GDB",
    "link": "https://reverseengineering.stackexchange.com/questions/12368/giving-labels-to-local-variables-with-gdb",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In the GDB debugger of Linux, is it possible to give a local variable (at specific offset from the %esp register) a constant name, which I will see everytime I call\n  <strong>\n   disassemble\n  </strong>\n  instead of seeing the address?\n </p>\n <p>\n  I mean something like the capability of IDA Pro to set names to unknown variables.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "326",
    "tags": [
        "disassembly",
        "gdb"
    ],
    "user": "Reflection",
    "time": "Aug 27, 2018 at 20:56",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Use IDA to attach to a remote GDB instance? This combines the best of both worlds.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "perror",
            "text": "<html><body><span class=\"comment-copy\">\n @Reflection:\n <code>\n  gdb\n </code>\n is not really meant for that, I mean reverse-engineering tasks. It is really intended to be a debugger. You may combine it with a reverse-engineering tool (as suggested by 0xC0000022L.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}