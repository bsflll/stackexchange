{
    "title": "How to decompile heavily obfuscated classes mixed with Arabic/Chinese/Korean characters?",
    "link": "https://reverseengineering.stackexchange.com/questions/27085/how-to-decompile-heavily-obfuscated-classes-mixed-with-arabic-chinese-korean-cha",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I recently downloaded a\n  <code>\n   jar\n  </code>\n  file and was curious to see if it was malicious, so I ran it through\n  <code>\n   FernFlower\n  </code>\n  and it wasn't able to deobfuscate it. When I unzipped the jar, I looked inside it and saw multiple folders, maybe 40~ ish consisting of a mixture of Chinese, Korean, and Arabic. This was raising a heavy red flag for me; so I tried multiple decompiliers consisting of things like JD-Gui, Bytecode viewer, and Krakatau. All seemed to decompile the normal folders fine, but not the mixed language ones.\n </p>\n <p>\n  I think its safe to say that whoever made this jar, clearly didn't want me to check whats inside. I want to make sure it's not a malicious\n  <code>\n   jar\n  </code>\n  file (like I said earlier...)\n </p>\n <p>\n  So how would I go around deobfuscating the jar file?\n </p>\n <p>\n  Because the entire jar is\n  <code>\n   73MB (yikes)\n  </code>\n  , here is a\n  <a href=\"http://www.mediafire.com/file/n7d38rcj6dmcuu3/encryptedFolder.zip/file\" rel=\"nofollow noreferrer\">\n   zip\n  </a>\n  file of one of the language folders\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "java",
        "deobfuscation",
        "jar"
    ],
    "user": "reversesigmathx",
    "time": "Feb 24, 2021 at 7:06",
    "comments": [
        {
            "user": "Col-E",
            "text": "<html><body><span class=\"comment-copy\">\n Can you share this sample somewhere? Also you may want to look at tools like\n <code>\n  java-deobfuscator\n </code>\n /\n <code>\n  threadtear\n </code>\n to remove common obfuscation techniques. You can use any obfuscator like Proguard to rename things for you because applying weaker names is better than dealing with ugly names.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I gave it my shot at this question but the output is still very obfuscated code you will need to re-run it a few passes through some more deobfuscators the code has alot of goto's code and math, you can do it all by hand but it will take months!.\n </p>\n <p>\n  It seems it contains classes to\n  <code>\n   com.mojang.brigadier.exceptions.CommandSyntaxException\n  </code>\n </p>\n <p>\n  Which means this jar file is for Minecraft game.\n </p>\n <p>\n  Since it's for minecraft I found this.\n  <a href=\"https://github.com/PetoPetko/Minecraft-Deobfuscator3000\" rel=\"nofollow noreferrer\">\n   https://github.com/PetoPetko/Minecraft-Deobfuscator3000\n  </a>\n </p>\n <p>\n  I played around with Minecraft Deobfuscator 3000 it seems it renames all fields/methods/params based on 2 different minecraft versions 1.7.10 and 1.12\n </p>\n <p>\n  You would need to get mappings for whichever version this encrypted java file used, both mappings versions failed for me.\n </p>\n <p>\n  <img alt=\"minecraft\" src=\"https://i.imgur.com/MxjKxn2.png\"/>\n </p>\n <p>\n  This may help you also it's a site with like 6 different online java decompilers.. you can try all 6.\n  <a href=\"http://www.javadecompilers.com/\" rel=\"nofollow noreferrer\">\n   http://www.javadecompilers.com/\n  </a>\n </p>\n <p>\n  This tool also looks very promising on this project.\n  <a href=\"https://javadeobfuscator.com/\" rel=\"nofollow noreferrer\">\n   https://javadeobfuscator.com/\n  </a>\n  \n\n  (Takes about 3 hours with all transformations and does help with this project..)\n  \n\n  Use Transformers:\n </p>\n <pre><code>allatori.FlowObfuscationTransformer\nspecial.FlowObfuscationTransformer\nnormalizer.SourceFileClassNormalizer\n</code></pre>\n <p>\n  mess around with the\n  <code>\n   general.peephole\n  </code>\n  remove the Transformers that fail.. I removed 2 of em.\n  <code>\n   RedundantGotoRemover\n  </code>\n  and\n  <code>\n   PeepholeOptimizer\n  </code>\n  the PeepholeOptimizer does do alot of fixes but it crashes.. so maybe you can run it somehow at the very end.\n </p>\n <p>\n  Try getting in contact with Janmm14 or samczsun he made the\n  <a href=\"https://javadeobfuscator.com/\" rel=\"nofollow noreferrer\">\n   https://javadeobfuscator.com/\n  </a>\n  and also works on Minecraft mods so he can help you 100% on this issue.\n </p>\n <p>\n  <a href=\"https://github.com/Janmm14\" rel=\"nofollow noreferrer\">\n   https://github.com/Janmm14\n  </a>\n  \n\n  <a href=\"https://github.com/samczsun\" rel=\"nofollow noreferrer\">\n   https://github.com/samczsun\n  </a>\n </p>\n <p>\n  The Fernflower or CFR works on some files, Krakatau doesn't seem to work.\n </p>\n <p>\n  <strong>\n   CFR gives the best results..\n  </strong>\n </p>\n <p>\n  Output Decompiled Files:\n  <a href=\"http://www.mediafire.com/file/fh74g6uovc4ji2i/encrypted+output.zip/file\" rel=\"nofollow noreferrer\">\n   http://www.mediafire.com/file/fh74g6uovc4ji2i/encrypted+output.zip/file\n  </a>\n </p>\n <p>\n  I used Procyon on your\n  <code>\n   encryptedFolder.zip\n  </code>\n  it managed to decompile all the files without a problem although some stuff bytecode isn't fully implemented in Procyon so some functions just got comments (no code).\n </p>\n <p>\n  Here is a example of 1 of your files how the code looks like.\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/JQlP5.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"a\" src=\"https://i.sstatic.net/JQlP5.jpg\"/>\n  </a>\n  <a href=\"https://i.sstatic.net/iVN4O.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"b\" src=\"https://i.sstatic.net/iVN4O.jpg\"/>\n  </a>\n </p>\n <p>\n  Procyon can generate java code for any java class which will compile without problems.. (wasn't the case for this example, won't compile). Since it is still obfuscated like crazy.\n </p>\n <p>\n  People in the RuneScape hacking community mastered the skill of Java deobfuscating they can unprotect any java code, pretty sure you can find a product in the RuneScape Hacking Community which will do a perfect job.\nThe tools they use are Zelix KlassMaster, Kopi Java Compiler Suite, jode, and Procyon. That's pretty much all you need.\n </p>\n <p>\n  You may find all you need from this github project\n  <a href=\"https://github.com/Rune-Status/rscdump.com-runescape-classic-dump\" rel=\"nofollow noreferrer\">\n   https://github.com/Rune-Status/rscdump.com-runescape-classic-dump\n  </a>\n </p>\n <p>\n  it has a bunch of runescape java projects that were made in the community which has a bunch of deobfuscators.\n </p>\n <p>\n  When runescape protection got more stronger each time, the community started building their own deobfuscators using java asm, which can outperform any java deobfuscator currently in the public.\n </p>\n <p>\n  You can find some deobfuscators in the public from runescape community on github. I was a member of the runescape community for like 10 years and let me tell you those people are very talented when it comes to java and hacking. One of the users who worked in the Runescape hacking community went on and created a popular website called pastebin.com which shows how smart they are :)\n </p>\n <p>\n  <a href=\"https://github.com/search?q=runescape+deobfuscator\" rel=\"nofollow noreferrer\">\n   https://github.com/search?q=runescape+deobfuscator\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "SSpoke",
            "time": "Feb 27, 2021 at 6:20",
            "is_accepted": true,
            "comments": []
        }
    ]
}