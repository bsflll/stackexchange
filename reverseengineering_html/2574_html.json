{
    "title": "Changing parameter of function call in ELF executable",
    "link": "https://reverseengineering.stackexchange.com/questions/2574/changing-parameter-of-function-call-in-elf-executable",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to alter a ELF executable function call and replace one of it's parameters.\nThe executable calls\n  <code>\n   dlopen()\n  </code>\n  function and passes\n  <code>\n   RTLD_NOW\n  </code>\n  as the flag parameter.\nI want to change it to\n  <code>\n   RTLD_LAZY\n  </code>\n  .\n </p>\n <p>\n  What's the easiest way to detect the exact place where this call is done, and replacing the parameter.\n </p>\n <p>\n  I have to do it on production environment, so I only have GNU toolchain, gcc, gdb, etc.\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 1,
    "views": "878",
    "tags": [
        "linux",
        "elf"
    ],
    "user": "Mellowcandle",
    "time": "Aug 3, 2013 at 7:29",
    "comments": [
        {
            "user": "PSS",
            "text": "<html><body><span class=\"comment-copy\">\n Are you talking about permanently patching the executable or modifying at run time?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Mellowcandle",
            "text": "<html><body><span class=\"comment-copy\">\n Both. At runtime to test it. And then persist it.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Theoretically\n <code>\n  LD_PRELOAD\n </code>\n would be your friend, but given that\n <code>\n  dlopen\n </code>\n is implemented within the loader, it's possible that this approach would fail.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The easiest way to do this is with\n  <a class=\"post-tag\" href=\"/questions/tagged/gdb\" rel=\"tag\" title=\"show questions tagged 'gdb'\">\n   gdb\n  </a>\n  . Put a breakpoint on the\n  <code>\n   dlopen\n  </code>\n  function, and change the parameters (likely passed on the stack).\n  <code>\n   RTLD_NOW\n  </code>\n  is defined as 2. Simply change it by 1 (\n  <code>\n   RTLD_LAZY\n  </code>\n  ).\n </p>\n <p>\n  To sum up, in\n  <code>\n   gdb\n  </code>\n </p>\n <pre><code>breakpoint dlopen\nrun\nset stack_memory_address = 1\ncontinue\n</code></pre>\n <p>\n  Where\n  <code>\n   stack_memory_address\n  </code>\n  is the address of your mode parameter.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "0xC0000022L",
            "time": "Aug 4, 2013 at 19:26",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Mellowcandle",
                    "text": "<span class=\"comment-copy\">How do I save it, is it possible from gdb ?</span>",
                    "time": null
                },
                {
                    "user": "jvoisin",
                    "text": "<span class=\"comment-copy\">You can use an hex-editor, seek to the offset that you broke on in GDB, and change the 2 in a 1.</span>",
                    "time": null
                }
            ]
        }
    ]
}