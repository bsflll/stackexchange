{
    "title": "Glitch attack on a SPI flash eeprom",
    "link": "https://reverseengineering.stackexchange.com/questions/20671/glitch-attack-on-a-spi-flash-eeprom",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm investigating the glitch attacks scenario and in particular, I read about the\n  <em>\n   Nand Glitching\n  </em>\n  with an example\n  <a href=\"https://www.youtube.com/watch?v=16-9BNDYxjY\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  . During my steps into reverse engineering a home router - you can read my steps\n  <a href=\"https://blog.kartone.ninja/2019/02/07/reverse-engineering-the-router-technicolor-tg582n/\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  - I was wondering if this attack is applicable not only to NAND memory but also to the classic SPI Flash memory, like the one you can read in the aforementioned post.\n </p>\n <p>\n  In case it's possible, do you have any resource where I can study from? Also, what PINs need to be shortcircuited to try the attack?\n </p>\n <p>\n  Thanks!\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "571",
    "tags": [
        "hardware"
    ],
    "user": "Kartone",
    "time": "Feb 21, 2019 at 10:59",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As I know that specific glitch is specific to that device. I.e. it's firmware is written so that the device switches to the prompt in case it failed to access NAND. And if there was some other logic, like \"reboot the device if NAND is not accessible\", this NAND glitch won't be exploitable at all. Thus if it will work for EEPROM or not, depends on how the boot logic is organized in TG582N firmware.\n </p>\n <p>\n  Regarding the EEPROM pin, which you need to ground:\n  <a href=\"https://www.exploitee.rs/index.php/Wink_Hub\" rel=\"nofollow noreferrer\">\n   https://www.exploitee.rs/index.php/Wink_Hub\n  </a>\n  ​​ they are grounding pin 29 of NAND chip, which is I/O1 pin. In case of EEPROM (which in your case is s25fl064l) I would try to ground SO/IO 1, SO/IO 0 pins, see the datasheet of s25fl064l.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Anton Kukoba",
            "time": "Feb 25, 2019 at 8:31",
            "is_accepted": true,
            "comments": []
        }
    ]
}