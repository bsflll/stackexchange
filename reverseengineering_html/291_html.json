{
    "title": "Determining RS232 bus settings",
    "link": "https://reverseengineering.stackexchange.com/questions/291/determining-rs232-bus-settings",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a device with two chips without part numbers. It looks like their using RS232 for serial communication (proper setup, right voltage), but I do not know the bus settings (speed, parity, etc.). Is there any way to determine the bus settings without brute force (trying everything)?\n </p>\n <p>\n  I have a multimeter and an oscilloscope on my workbench.\n </p>\n</div>\n</body></html>",
    "votes": "8",
    "answers": 2,
    "views": "2k",
    "tags": [
        "communication",
        "serial-communication"
    ],
    "user": null,
    "time": "Mar 27, 2013 at 17:47",
    "comments": [
        {
            "user": "asheeshr",
            "text": "<html><body><span class=\"comment-copy\">\n Communication is too general a tag and can have many meanings.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "user187",
            "text": "<html><body><span class=\"comment-copy\">\n @AshRj I disagree.\n <a href=\"https://reverseengineering.stackexchange.com/questions/tagged/serial-communication\">\n  serial-communication\n </a>\n is a good idea, but\n <a href=\"https://reverseengineering.stackexchange.com/questions/tagged/communication\">\n  communication\n </a>\n should do it as well. We have a\n <a href=\"http://electronics.stackexchange.com/questions/tagged/communication\">\n  <code>\n   communication\n  </code>\n  tag on EE\n </a>\n as well.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you have an oscilloscope, it should be pretty easy to determine at least the baud rate. Then you just need to play with the parity and stop bits.\n </p>\n <p>\n  If you don't have it, there's no real way around bruteforce. However, usually you don't have to try all combinations.\n </p>\n <ul>\n  <li>\n   probably at least 90% embedded devices I've seen use 115200-8-N-1 (115200 baud, 8 data bits, no parity, 1 stop bit), no flow control.\n  </li>\n  <li>\n   of the rest, majority seem to use 8-N-1 with a lower baudrate, such as 38400\n  </li>\n  <li>\n   in\n   <em>\n    one\n   </em>\n   case, I saw 38400-8-E-1.\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "8",
            "user": "Igor Skochinsky",
            "time": "Mar 26, 2013 at 17:09",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@CamilStaps Um, that's what I describe in the second part of my answer. Or did you mean something else?</span>",
                    "time": null
                },
                {
                    "user": "Remko",
                    "text": "<span class=\"comment-copy\">9600-N-8-1 is very common as well. My approach is usually to start there and work up if that works since many devices support multiple speeds.</span>",
                    "time": null
                },
                {
                    "user": "ixje",
                    "text": "<span class=\"comment-copy\">As said above try 9600-8-N-1 and 115200-8-N-1 and you've hit 98% of the cases in my experience.</span>",
                    "time": null
                },
                {
                    "user": "cb88",
                    "text": "<span class=\"comment-copy\">19200-8N1 is also quite common...</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  A simple logic analyzer, such as the\n  <a href=\"http://www.saleae.com/\">\n   Saleae\n  </a>\n  is invaluable for finding simple transmit serial pins. Receive serial pins are harder due to them being silent.\n </p>\n <p>\n  Are you sure that this is\n  <a href=\"http://en.wikipedia.org/wiki/RS232\">\n   RS232\n  </a>\n  and not just serial? It's pretty rare to see RS232 on embedded systems unless they're industrial.\n  <a href=\"http://en.wikipedia.org/wiki/RS232#Voltage_levels\">\n   RS232 goes way above TTL levels\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Peter Andersson",
            "time": "Mar 26, 2013 at 18:07",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user187",
                    "text": "<span class=\"comment-copy\">I'm sure, the voltage level actually is why I thought it to be RS232. There are some modules, GPS e.g., that use the full RS232 protocol. But they are rare indeed.</span>",
                    "time": null
                }
            ]
        }
    ]
}