{
    "title": "Get used jQuery plugins from website",
    "link": "https://reverseengineering.stackexchange.com/questions/90/get-used-jquery-plugins-from-website",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to know what jQuery plugins Facebook uses for their special scrollbar, like the two on the left, not the normal one on the right:\n </p>\n <p>\n  <img alt=\"enter image description here\" src=\"https://i.sstatic.net/odVcU.png\"/>\n </p>\n <p>\n  (\n  <a href=\"http://www.pcworld.com/article/240475/two_important_facebook_hover_tricks.html\" rel=\"nofollow noreferrer\">\n   source\n  </a>\n  )\n </p>\n <p>\n  Generally, how should I go when I want to know what jQuery plugin [website X] uses for [behaviour Y]?\n </p>\n</div>\n</body></html>",
    "votes": "7",
    "answers": 3,
    "views": "2k",
    "tags": [
        "javascript",
        "websites"
    ],
    "user": null,
    "time": "Mar 20, 2013 at 18:51",
    "comments": [
        {
            "user": "user187",
            "text": "<html><body><span class=\"comment-copy\">\n I know this\n <a href=\"http://stackoverflow.com/q/7125185/1544337\">\n  has been asked on SO\n </a>\n , but the answers do not provide basic ideas to reverse engineer javascript.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Both Firefox and Chrome have useful debugging tools to help you find out more information about scripts relating to a behavior. I'll be explaining mostly in Chrome as their default debug tools are more extensive\n </p>\n <p>\n  As a start, you can usually use\n  <code>\n   Right Click->Inspect Element\n  </code>\n  to find out information about an element quickly. However this does not appear to work on Facebook's ticker - doing so will select the \"Ticker News\" behind the scrollbar like this:\n </p>\n <p>\n  <img alt=\"inspect fail\" src=\"https://i.sstatic.net/Iq3Vy.png\"/>\n </p>\n <p>\n  Because we cannot see the element being modified, we will have to make some guesses. The ticker stories themselves do not appear to have anything related to the scrollbars. After traveling up to the parent and folding\n  <code>\n   <div class=\"tickerActivityStories\">\n  </code>\n  , we can start to see things clearly\n </p>\n <p>\n  By hovering over (and invoking the scrollbars's \"appear\" code) we can observe the page's DOM and note the differences.\n </p>\n <p>\n  <img alt=\"comparison\" src=\"https://i.sstatic.net/2lWVK.png\"/>\n </p>\n <p>\n  So it appears that\n  <code>\n   <div class=\"uiScrollableAreaTrack\">\n  </code>\n  as it responds accordingly whenever the mouse enters/leaves. The name also makes sense (implies that it's the scrollbar's tracks). By unfolding that\n  <code>\n   div\n  </code>\n  , we'll notice that there is even a \"gripper\" for the scrollbar!\n </p>\n <p>\n  <img alt=\"gripper\" src=\"https://i.sstatic.net/gAaV3.png\"/>\n </p>\n <p>\n  To find out what Javascript is involved with the scrollbars, click on\n  <code>\n   <div class=\"uiScrollableAreaGripper\"\n  </code>\n  , and on the right pane, unfold the\n  <code>\n   Event Listeners\n  </code>\n  tab. We can assume that it responds to focus, and under the\n  <code>\n   Focus\n  </code>\n  section, you'll notice a few references to Javascript files. Hover over the filenames and Chrome will show you the link of the Javascript files.\n </p>\n <p>\n  <img alt=\"listeners\" src=\"https://i.sstatic.net/5WKL1.png\"/>\n </p>\n <p>\n  If you're in luck, the files may have a recognizable name (such as\n  <code>\n   typeahead.min.js\n  </code>\n  or similar, which you can google). Unfortunately in most cases, including ours, we are likely looking at proprietary code or minified code. (Minified code is extremely common to reduce file sizes so that pages load faster)\n </p>\n</div>\n</body></html>",
            "votes": "8",
            "user": "jg0",
            "time": "Mar 21, 2013 at 16:23",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can use a profiler and debug tool in your browser to examine the website. Webkit browsers (like Google chromium) have those build in. Firefox has a good plugin called firebug.\n </p>\n <p>\n  With the profiler you can see which functions are called how often, which can give you an idea where to look. Then with the debugger you can set break points in the javascript code to narrow down the exact location\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "txwikinger",
            "time": "Mar 21, 2013 at 13:29",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I used\n  <a href=\"https://noraesae.github.io/perfect-scrollbar/\" rel=\"nofollow noreferrer\">\n   https://noraesae.github.io/perfect-scrollbar/\n  </a>\n  that is very similar and easy to use\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Nicol√°s Kuglien",
            "time": "Jan 26, 2017 at 19:51",
            "is_accepted": false,
            "comments": []
        }
    ]
}