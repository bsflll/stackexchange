{
    "title": "Strange behaviour of Wine dlls under OllyDbg [duplicate]",
    "link": "https://reverseengineering.stackexchange.com/questions/3553/strange-behaviour-of-wine-dlls-under-ollydbg",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         This question already exists\n        </b>\n        :\n       </div>\n      </div>\n     </div>\n    </div>\n    <div class=\"flex--item mb0 mt4\">\n     <a dir=\"ltr\" href=\"/questions/3339/puzzling-behaviour-when-loading-wines-oleaut32-dll-in-ollydbg\">\n      Puzzling behaviour when loading Wine's oleaut32.dll in OllyDbg\n     </a>\n    </div>\n    <div class=\"flex--item mb0 mt8\">\n     Closed\n     <span class=\"relativetime\" title=\"2014-01-30 12:07:14Z\">\n      11 years ago\n     </span>\n     .\n    </div>\n   </div>\n  </aside>\n </div>\n <p>\n  I've noticed something strange. OllyDbg seems to correctly load Wine's own dlls. But when I check PE header in OllyDBG it differs from that what I would expect. In all other cases file content is an exact match of PE header in OllyDbg. But in case of Wine libraries even the file signature is different.\n </p>\n <p>\n  First three bytes in file: \n4D 5A 40\nOllyDbg memory dump: \n4D 5A 90\n </p>\n <p>\n  Then the rest of loaded library differs as well. I did not notice such behaviour with few Windows dlls that I have checked. Googling didn't help either. Does anybody know what's going on?\n </p>\n <h2>\n  more finds\n </h2>\n <p>\n  Example of differences\n </p>\n <p>\n  in file - OllyDbg PE header\n </p>\n <p>\n  DOS_PEOffset 60 - 40\n </p>\n <p>\n  Number of Sections 3 - 2\n </p>\n <p>\n  OllyDbg seems to be able to read exported Wine dll symbols despite of my own file analysis expecting Export Table RVA and Export Table Size to be 0. Please note that my own analysis works correctly on normal Windows dll files.\n </p>\n <p>\n  Above differences are from oleaut32.dll, but Iâ€™ve noticed similar when checking other Wine dlls. Location of Wine dlls:\n~/.wine/drive_c/windows/system32\n </p>\n <p>\n  I'm using wine-1.4.1 and OllyDbg 2.01.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "437",
    "tags": [
        "ollydbg",
        "dll",
        "wine"
    ],
    "user": "ruby_object",
    "time": "11 years ago",
    "comments": [
        {
            "user": "ruby_object",
            "text": "<html><body><span class=\"comment-copy\">\n It's not a duplicate, but related question. I still do not understand how loaders work, but my previous question was about parts of Imports table being overwritten by the loader. In this case very beginning of PE header differs from that on file. does Wine's loader have to do anything with it?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <p>\n   First three bytes in file: 4D 5A 40 OllyDbg memory dump: 4D 5A 90\n  </p>\n </blockquote>\n <p>\n  As far as we can see from Wine's loader codes\n  <a href=\"https://github.com/mirrors/wine/blob/master/libs/wine/loader.c\" rel=\"nofollow\">\n   https://github.com/mirrors/wine/blob/master/libs/wine/loader.c\n  </a>\n </p>\n <pre><code>dos->e_magic    = IMAGE_DOS_SIGNATURE;\ndos->e_cblp     = 0x90;                           <-- hardcoded 0x90 val\ndos->e_cp       = 3;\ndos->e_cparhdr  = (sizeof(*dos)+0xf)/0x10;\ndos->e_minalloc = 0;\ndos->e_maxalloc = 0xffff;\ndos->e_ss       = 0x0000;\ndos->e_sp       = 0x00b8;\n</code></pre>\n <blockquote>\n  <p>\n   Number of Sections 3 - 2\n  </p>\n </blockquote>\n <p>\n  I dont know, but maybe WINE processes section with IMAGE_SCN_MEM_DISCARDABLE flag ( which is used only in r0 drivers in Windows ), so when you are standing on EntryPoint - those sections are not mapped already ?\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "helloworld",
            "time": "Jan 28, 2014 at 11:41",
            "is_accepted": false,
            "comments": []
        }
    ]
}