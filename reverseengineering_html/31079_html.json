{
    "title": "Are there websites for reverse engineering challenges similar the programming challenges? [duplicate]",
    "link": "https://reverseengineering.stackexchange.com/questions/31079/are-there-websites-for-reverse-engineering-challenges-similar-the-programming-ch",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         This question already has answers here\n        </b>\n        :\n       </div>\n      </div>\n     </div>\n    </div>\n    <div class=\"flex--item mb0 mt4\">\n     <a dir=\"ltr\" href=\"/questions/15774/crack-me-material\">\n      Crack Me Material\n     </a>\n     <span class=\"question-originals-answer-count\">\n      (3 answers)\n     </span>\n    </div>\n    <div class=\"flex--item mb0 mt8\">\n     Closed\n     <span class=\"relativetime\" title=\"2022-11-08 03:34:11Z\">\n      2 years ago\n     </span>\n     .\n    </div>\n   </div>\n  </aside>\n </div>\n <p>\n  As a developer, reverse engineering has always fascinated me. It amazes me to see what some people can figure out just from a dump of assembly code, and I would like to become better at doing the same.\n </p>\n <p>\n  There are many websites that specialize in helping developers become better at writing code and solving problems through small challenges. An example of what I mean are websites like LeetCode, Codewars, etc. What websites are available with challenges that are specific to reverse engineering?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "480",
    "tags": [
        "decompilation"
    ],
    "user": "Entangled Superposition",
    "time": "2 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The best way to learn is really 4 things:\n </p>\n <ol>\n  <li>\n   <p>\n    Search up \"Crackme\" and \"reverseme\" on your favorite search engine\n   </p>\n  </li>\n  <li>\n   <p>\n    Go to CTFTime.org,\n    <a href=\"https://www.picoctf.org/\" rel=\"nofollow noreferrer\">\n     https://www.picoctf.org/\n    </a>\n    and similar sites, and work on the Reverse Engineering challenges there\n   </p>\n  </li>\n  <li>\n   <p>\n    Try reverse engineering actual software you are interested in learning\n   </p>\n  </li>\n  <li>\n   <p>\n    Learn about interaction between the operating system and the application you are reverse engineering interact. For example on Windows, learning the WinAPI would be useful, and on Linux the Linux programming interface. The reason is that you will know simply by a program's imported functions on those operating systems what it is likely doing in a broad sense. Like, if it imports networking and cryptography OS APIs, well, you can surmise what it might be doing, etc...\n   </p>\n  </li>\n </ol>\n <p>\n  You could also look at YouTube videos. Other than that, it's basically trial and error, there aren't really many \"official courses\" on it tbh. AFAIK, there isn't an equivalent to something like leetcode or AlgoExpert aside from that I suggested.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "the_endian",
            "time": "Nov 5, 2022 at 7:48",
            "is_accepted": true,
            "comments": []
        }
    ]
}