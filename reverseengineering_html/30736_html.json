{
    "title": "x64 Windows: Why is ExAllocatePool stepping on the caller's stack?",
    "link": "https://reverseengineering.stackexchange.com/questions/30736/x64-windows-why-is-exallocatepool-stepping-on-the-callers-stack",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am playing around with windbg on a 64-bit machine and noticed something interesting:\n </p>\n <pre><code>nt!ExAllocatePool:\n    ...\n    sub rsp, 0xd0\n    ...\n    mov qword ptr [rsp+0xf8], rbx\n</code></pre>\n <p>\n  Windows only allocated 0xd0 bytes for locals but then it decides to step on the callers stack since 0xf8 is > 0xd0! What am I missing here?\n  <strong>\n   This HAS to be a bug in Windows.\n  </strong>\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "115",
    "tags": [
        "windows",
        "x86-64"
    ],
    "user": "Yolo41251263",
    "time": "Aug 4, 2022 at 15:46",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Hi and welcome to RE.SE. This is lacking a little information. So you're saying this was built\n <i>\n  with\n </i>\n frame pointer omission active? What exact build? I'd like to have a look myself.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Yolo41251263",
            "text": "<html><body><span class=\"comment-copy\">\n This is Windows, I didn't build anything, I just attached a kernel debugger and looked at ntoskrnl\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n At what point did I write anything about\n <i>\n  you built\n </i>\n anything? Thing is, you don't provide enough context, so I was asking a very pointed question. And I was also asking about what exact build you are looking at. In my version of\n <code>\n  ntoskrnl.exe\n </code>\n <code>\n  ExAllocatePool()\n </code>\n encompasses\n <b>\n  5 instructions\n </b>\n including a\n <code>\n  sub rsp, 28h\n </code>\n which clearly doesn't match whatever you have. The\n <code>\n  ExAllocatePoolWithTag()\n </code>\n it calls takes merely one more argument, meaning everything fits into registers anyway and stack is used only for locals. But none of what I see matches what you got. So what exact version of ntoskrnl?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n What are the instructions before sub rsp? and does the rsp change afterwards? Please post a longer snippet or tell us where to find this code.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}