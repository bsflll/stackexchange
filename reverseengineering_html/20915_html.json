{
    "title": "Startdard singleton class implementation generate access to TLS memory",
    "link": "https://reverseengineering.stackexchange.com/questions/20915/startdard-singleton-class-implementation-generate-access-to-tls-memory",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'v examine the assembly output in Windows of basic singleton implementation of using static variable to be initialized with new class instance from static function.\n </p>\n <p>\n  to my surprise, although the class has process-wide scope, the inner implementation uses access to TLS.\n </p>\n <pre><code>myClass::getInstance()\n{\n    static v = new myClass();\n    return v; \n}\n</code></pre>\n <p>\n  and the assembly output (the first relevant lines) :\n </p>\n <pre><code>push    rdi\nsub     rsp, 40h\nmov     rdi, rsp\nmov     ecx, 10h\nmov     eax, 0CCCCCCCCh\nrep stosd\nmov     [rsp+48h+var_18], 0FFFFFFFFFFFFFFFEh\nmov     eax, 4\nmov     eax, eax\nmov     ecx, cs:_tls_index\nmov     rdx, gs:58h\nmov     rcx, [rdx+rcx*8]\n</code></pre>\n <p>\n  Perhaps anybody can provide some insights about why this is needed (maybe performance) ?\n </p>\n <p>\n  thanks\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "95",
    "tags": [
        "windows",
        "c++"
    ],
    "user": "Zohar81",
    "time": "Mar 19, 2019 at 8:33",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It's generated by the\n  <a href=\"https://docs.microsoft.com/en-us/cpp/build/reference/zc-threadsafeinit-thread-safe-local-static-initialization\" rel=\"nofollow noreferrer\">\n   thread-safe local static initialization\n  </a>\n  feature.\n </p>\n <blockquote>\n  <p>\n   Thread-safe static local variables use thread-local storage (TLS) internally to provide efficient execution when the static has already been initialized.\n  </p>\n </blockquote>\n <p>\n  See\n  <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2660.htm\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  for the original proposal.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "booto",
            "time": "Mar 19, 2019 at 10:39",
            "is_accepted": true,
            "comments": []
        }
    ]
}