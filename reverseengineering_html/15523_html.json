{
    "title": "What's the best way of improving already compiled binary?",
    "link": "https://reverseengineering.stackexchange.com/questions/15523/whats-the-best-way-of-improving-already-compiled-binary",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Like if I want to patch a function in a PE.\n </p>\n <p>\n  Now my way of doing this would be inserting a new section using lets say LordPE and then compiling anything I want to add up here and patching the original code to link up there but is there a better way?\n </p>\n <p>\n  I don't know, maybe some way to export the binary to ASM files which then I could compile back with GCC.\n </p>\n <p>\n  Because like I want to make big changes to the binary - I'm thinking of parallelizing a part of the code. Thanks.\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 2,
    "views": "280",
    "tags": [
        "c",
        "binary",
        "patching"
    ],
    "user": "rec",
    "time": "Jun 11, 2017 at 4:29",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  To me it seems the best way to approach this, if planned changes are considerable, is to instead create a DLL (you seem to be discussing windows, although this could work in most environments).\n </p>\n <p>\n  Then, you'll only need to patch calls to your modified or new functionality functions. Either by first editing the Import Table or by dynamically loading your DLL using\n  <code>\n   LoadLibrary\n  </code>\n  and functions using\n  <code>\n   GetProcAddress\n  </code>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "NirIzr",
            "time": "Jun 11, 2017 at 4:32",
            "is_accepted": false,
            "comments": [
                {
                    "user": "rec",
                    "text": "<span class=\"comment-copy\">But how will I refer variables and functions from the original binary from my DLL?</span>",
                    "time": null
                },
                {
                    "user": "NirIzr",
                    "text": "<span class=\"comment-copy\">Variables that are only used within the secret parts should be stored in the DLL, variables that are to be shared should be passed through some kind of simple API as function parameters. If creating such an API complicates the process, I would strongly recommend packing the entire executable.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Exporting the file to ASM then re-compiling takes a very long time, is very complicated and should be only done if you have a decent active intelligent group. Believe me, I have done this. We reverse engineered a program back to compilable source. This project took way too long.\n </p>\n <p>\n  If your changes were minor, I would recommend codecaving. Just create a PE section jump to it and make your changes , then jump back.\n  <a href=\"http://resources.infosecinstitute.com/adding-a-section-to-pe-binary/\" rel=\"nofollow noreferrer\">\n   Tutorial on how to expand PE binary\n  </a>\n </p>\n <p>\n  I have done this before on large projects. And Usually a good clean approach is to use DLL injection.\n </p>\n <p>\n  You can just make your functions to over write parts of the .exe and have your functions take place. I will post a few examples as well as a youtube series which goes into decent detail on what to do.\n </p>\n <ul>\n  <li>\n   <a href=\"http://www.mpgh.net/forum/showthread.php?t=332194\" rel=\"nofollow noreferrer\">\n    Thread: How To : Make DLL Injection in C++\n   </a>\n  </li>\n  <li>\n   <a href=\"https://www.youtube.com/watch?v=mCHYhOxwXuQ\" rel=\"nofollow noreferrer\">\n    Video Game Hacker Series Youtube\n   </a>\n  </li>\n  <li>\n   <a href=\"http://blog.opensecurityresearch.com/2013/01/windows-dll-injection-basics.html\" rel=\"nofollow noreferrer\">\n    Open Security reseacher\n   </a>\n  </li>\n </ul>\n <p>\n  I will let you know that these methods can be dangerous and require administrator privileges to inject into the process.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "LUser",
            "time": "Jun 12, 2017 at 11:30",
            "is_accepted": false,
            "comments": []
        }
    ]
}