{
    "title": "Extract certificate information of a process from memory dump",
    "link": "https://reverseengineering.stackexchange.com/questions/29915/extract-certificate-information-of-a-process-from-memory-dump",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a\n  <code>\n   .dmp\n  </code>\n  file for\n  <code>\n   googleupdate.exe\n  </code>\n  process. I wanted to check in WinDbg this process has a certificate or not in order to detect this process has modified or not because this process has tried access\n  <code>\n   lsass.exe\n  </code>\n  multiple time.\n </p>\n <p>\n  How can I check the integrity and also maliciousness of this process in WinDbg? I have just a memory dump from that process and nothing more. I should check it in WinDbg.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "278",
    "tags": [
        "memory",
        "memory-dump",
        "digital-forensics"
    ],
    "user": "Timberwolf",
    "time": "Jan 30, 2022 at 19:36",
    "comments": [
        {
            "user": "Robert",
            "text": "<html><body><span class=\"comment-copy\">\n This paper seems to exactly match your question:\n <a href=\"https://www.sciencedirect.com/science/article/pii/S2666281720300123\" rel=\"nofollow noreferrer\">\n  On Challenges in Verifying Trusted Executable Files in Memory Forensics - DFRWS 2020 EU\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In short, the PE loader does not explicitly load up the certificate details into the new process at run-time.\n </p>\n <p>\n  In the binary, the certificates are referenced via the IMAGE_DIRECTORY_ENTRY_SECURITY directory; but they are not in a section that is mapped into virtual memory. The data is instead appended to the file.\n </p>\n <p>\n  You might get lucky and find the cert data has been mapped via a memory mapped file, or if you captured a full kernel dump you might have a copy of it. Otherwise you will have to try and source the file from the computer.\n </p>\n <p>\n  Your best bet is to manually compare the code-in-memory to a valid copy of googleupdate.\n </p>\n <p>\n  Also keep in mind that the source binary could be completely valid, but the behavior changed at run-time (via code injection, etc.). So even if you could easily validate the integrity of the certificate, it wouldn't detect rogue threads, hooked functions, etc.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "josh poley",
            "time": "Feb 9, 2022 at 22:20",
            "is_accepted": true,
            "comments": []
        }
    ]
}