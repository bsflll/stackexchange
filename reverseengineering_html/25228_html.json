{
    "title": "How are single-player games made into multiplayer ones? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/25228/how-are-single-player-games-made-into-multiplayer-ones",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed\n        </b>\n        . This question needs to be more\n        <a href=\"/help/closed-questions\">\n         focused\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       <b>\n        Want to improve this question?\n       </b>\n       Update the question so it focuses on one problem only by\n       <a href=\"/posts/25228/edit\">\n        editing this post\n       </a>\n       .\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2020-06-23 21:08:34Z\">\n        4 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/25228/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  I was always curious about how some single-player games are turned into multiplayer ones. Some samples are\n  <a href=\"https://www.sa-mp.com/\" rel=\"nofollow noreferrer\">\n   SA-MP\n  </a>\n  and\n  <a href=\"https://multitheftauto.com/\" rel=\"nofollow noreferrer\">\n   MTA\n  </a>\n  , that turn\n  <em>\n   Grand Theft Auto: San Andreas\n  </em>\n  into a multiplayer game.\n </p>\n <p>\n  In an\n  <em>\n   infrastructure\n  </em>\n  perspective, I know you might have a server that receives packets from a client and makes sure all the other clients receive these packets as well.\n </p>\n <p>\n  For example, whenever a player moves, the client sends a message to the server. The server then redirects the messages to each connected client. Each connected client updates the player's position.\n </p>\n <p>\n  However, how the engineers can \"inject a code\" into the game to make it send a network packet to a server whenever a player moves? How can they \"inject a code\" into the game, so it listens to a network packet to react over it?\n </p>\n <p>\n  The \"inject a code\" term is between quotes because I don't even know if a code is really injected into the game. That's exactly what I'm curious about. Which techniques are used? How can this be possible?\n </p>\n <p>\n  Do they hook into specific events to execute a custom code that performs networking communication? If so, could you guys elaborate that a bit further?\n </p>\n <p>\n  I'm not planning to do so, and I have no prior experience with Reverse Engineering. I couldn't find anything on the Internet. Due to that, feel free to explain any \"basic concept\" as well. :) I'd like to understand as much as possible about it, and different opinions and perspectives are more than welcome.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "252",
    "tags": [
        "function-hooking"
    ],
    "user": "Stanley Sathler",
    "time": "4 years ago",
    "comments": [
        {
            "user": "Trass3r",
            "text": "<html><body><span class=\"comment-copy\">\n Well you can inject any kind of code you want, create new threads etc. Usually it's done via\n <a href=\"https://en.m.wikipedia.org/wiki/DLL_injection\" rel=\"nofollow noreferrer\">\n  en.m.wikipedia.org/wiki/DLL_injection\n </a>\n techniques. The hard part is finding all the game state in memory and all the functions involved with updating it.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Stanley Sathler",
            "text": "<html><body><span class=\"comment-copy\">\n Thanks, @Trass3r! From what I understood by quickly reading about DLL Injection, you then create a small executable lib file that overrides the original process' functions. By overriding it, you're allowed to run your own code and then call the original process' function again. That said, I would need to find out WHICH functions are called whenever the - let's say - W key is pressed (in theory, it moves the player), intercept it, send a packet to a server, and then call the original process' function again, so the player is really moved. Is this reasoning right?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Trass3r",
            "text": "<html><body><span class=\"comment-copy\">\n Yep it's called function hooking.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}