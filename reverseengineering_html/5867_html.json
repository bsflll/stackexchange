{
    "title": "Can someone compile a program for me with gcc-mips? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/5867/can-someone-compile-a-program-for-me-with-gcc-mips",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed.\n        </b>\n        This question is\n        <a href=\"/help/closed-questions\">\n         off-topic\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       Questions on\n       <b>\n        software development\n       </b>\n       are off-topic here, but can be asked on\n       <a href=\"http://stackoverflow.com/about\">\n        Stack Overflow\n       </a>\n       .\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2014-07-17 07:43:05Z\">\n        10 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/5867/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  I am close to having root on my DVR device running busybox. I figured out one of the user login/passwords and am able to telnet in, but that's it. I have a drive that is attached which automatically mounts, which I can plug into my PC to add/subtract files.  I made a copy of the bash and busybox binaries (including a few others), and gave them\n  <code>\n   u+s\n  </code>\n  , hoping setuid root would give me some root privileges.  Unfortunately that did not work.  Running\n  <code>\n   bash\n  </code>\n  (\n  <code>\n   -rwsr-xr-x\n  </code>\n  ),\n  <code>\n   id\n  </code>\n  still shows up as just user.  For some reason it doesn't seem to honor the setuid bit for bash or busybox (or a few others) to give me root privs.\n </p>\n <p>\n  So, I had an idea, which brings me to my question: maybe I could compile a small C program, such as:\n </p>\n <pre><code>#include <stdio.h>\n#include <stdlib.h>\n#include <sys/types.h>\n#include <unistd.h>\n\nint main()\n{\n   setuid( 0 );\n   system( \"/tmp/rootscript.sh\" );\n\n   return 0;\n}\n</code></pre>\n <p>\n  Which, maybe, would allow me to run a script as root.  Unfortunately, after a few days of trying to compile various versions of\n  <code>\n   gcc-mips\n  </code>\n  on various systems, I've not been able to do so.  Which leads me to ask if someone who already has the tools built would mind compiling the above code for me. I realize it's an odd request, but I guess it's come to this.\n </p>\n <p>\n  Some potentially helpful info:\n </p>\n <pre><code>bash-3.00$ cat cpuinfo \nsystem type             : Viper\nprocessor               : 0\ncpu model               : MIPS 74Kc V4.12  FPU V0.0\nBogoMIPS                : 324.40\nwait instruction        : yes\nmicrosecond timers      : yes\ntlb_entries             : 32\nextra interrupt vector  : yes\nhardware watchpoint     : yes, count: 4, address/irw mask: [0x0000, 0x0000, 0x0000, 0x0000]\nASEs implemented        : mips16 dsp\nshadow register sets    : 2\ncore                    : 0\nVCED exceptions         : not available\nVCEI exceptions         : not available\n</code></pre>\n <p>\n  and\n </p>\n <pre><code>file /tmp/bash \n/tmp/bash: setuid ELF 32-bit LSB  executable, MIPS, MIPS32 rel2 version 1, dynamically linked (uses shared libs), for GNU/Linux 2.6.12, not stripped\n</code></pre>\n <p>\n  Any thoughts or advice from anyone?  Hopefully this counts enough as a \"reverse engineering\" post!\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "638",
    "tags": [
        "compilers",
        "mips"
    ],
    "user": "justin",
    "time": "10 years ago",
    "comments": [
        {
            "user": "perror",
            "text": "<html><body><span class=\"comment-copy\">\n Why don't you install a cross-compiler on your own ? And, no, installing a cross-compiler isn't enough to justify a question here...\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Gabriel Ratener",
            "text": "<html><body><span class=\"comment-copy\">\n Jesus! Just chill!\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm afraid your post won't count as reverse engineering :-(\n </p>\n <p>\n  Anyway, don't expect this to work; your setuid(0) won't work unless the uid is 0 in the first place, in which case you had root access without the extra setuid().\n </p>\n <p>\n  Check the mount options on your drive - is the nosuid option set?\n </p>\n <p>\n  Can you change that setting (hint: mount -o remount)?\n </p>\n <p>\n  You did format the drive with an ext[234] filesystem, didn't you? If it's a [V]fat fs, there's no support for unix attributes.\n </p>\n <p>\n  What exactly does\n  <code>\n   id\n  </code>\n  say? Anything about an euid? Like in\n </p>\n <pre><code># cp /usr/bin/id /usr/bin/suid\n# chmod u+s /usr/bin/suid\n# ls -l /usr/bin/suid\n-rwsr-xr-x 1 root root 25152 Jul 16 08:42 /usr/bin/suid\n\n$ /usr/bin/id\nuid=1000(gbl) gid=100(users) groups=100(users)\n$ /usr/bin/suid\nuid=1000(gbl) gid=100(users) euid=0(root) groups=100(users)\n</code></pre>\n <p>\n  You see, the special suid-version of id sets your effective uid, not the real one; but if they are different, id should report about it. If it doesn't, the problem is probably your mount options; if it does, chances are your C program would actually work, but in that case, it shouldn't even be neccesary.\n </p>\n <p>\n  If you want a compiler that creates mips binaries, you might also find the\n  <a href=\"http://www.linux-mips.org/wiki/Toolchains\" rel=\"nofollow\">\n   Mips-Toolchains\n  </a>\n  page helpful.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Guntram Blohm",
            "time": "Jul 16, 2014 at 6:47",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Thanks for the thoughts guys. Here's what I came up with in case anyone needs this in the future.  I didn't end up compiling my own program (as above), but I got close. I downloaded a large virtual machine file which already had the tools compiled (but it had errors with my program calling setuid). So I went another route: I grabbed the pre-compiled mips binary from\n  <code>\n   https://packages.debian.org/sid/super\n  </code>\n  and copied the binary file\n  <code>\n   setuid\n  </code>\n  onto the box with u+s set, root as owner.\n </p>\n <pre><code>$ id\nuid=1001(ftpuser) gid=1001(ftpuser) groups=1001(ftpuser)\n$ ./setuid 0 id\nuid=0(root) gid=1001(ftpuser) groups=1001(ftpuser)\n$ ./setuid 0 bash\nbash-3.00# id\nuid=0(root) gid=1001(ftpuser) groups=1001(ftpuser)\n</code></pre>\n <p>\n  As they say on TV.. Bingo, bango, bongo.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "justin",
            "time": "Jul 17, 2014 at 0:32",
            "is_accepted": false,
            "comments": []
        }
    ]
}