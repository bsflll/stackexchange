{
    "title": "Immnunity Debugger Python API Incorrect code execution order",
    "link": "https://reverseengineering.stackexchange.com/questions/13077/immnunity-debugger-python-api-incorrect-code-execution-order",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <strong>\n   PyCommand\n  </strong>\n </p>\n <pre><code>   import immlib\n    def main(args):\n        imm = immlib.Debugger()\n        imm.setBreakpoint(0x411077)\n        imm.setReg(\"EAX\",0x0)\n        imm.log(\"EAX: {}\".format(imm.getRegs()['EAX']))\n        imm.run()\n\n    return \"OK\"\n</code></pre>\n <p>\n  <strong>\n   Log\n  </strong>\n </p>\n <pre><code>EAX: 0\nBreakpoint at 0x411077\nOK\n</code></pre>\n <p>\n  The log write happens before\n  <code>\n   setBreakpoint()\n  </code>\n  according to the log.\n </p>\n <p>\n  What is the problem?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "79",
    "tags": [
        "python",
        "immunity-debugger"
    ],
    "user": "Goose",
    "time": "Jul 19, 2016 at 8:00",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It looks like \"Breakpoint at\" means \"the breakpoint was hit\", not \"breakpoint was set\".\n </p>\n <p>\n  The breakpoint can be only triggered\n  <em>\n   once the program is running\n  </em>\n  . Since you call\n  <code>\n   log()\n  </code>\n  before\n  <code>\n   run()\n  </code>\n  , the log message is printed first. If you want to log\n  <em>\n   when the breakpoint is hit\n  </em>\n  , you need to use another approach (not familiar with ImmDbg API so can't recommend anything specific).\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Jul 18, 2016 at 17:58",
            "is_accepted": false,
            "comments": [
                {
                    "user": "JeffreyZ",
                    "text": "<span class=\"comment-copy\">You need to use a BpHook, see the documentation for more information</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@JeffreyZ: you probably should post that as an answer (with a small example)</span>",
                    "time": null
                }
            ]
        }
    ]
}