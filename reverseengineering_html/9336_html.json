{
    "title": "Can mprotect set the stack itself as executable?",
    "link": "https://reverseengineering.stackexchange.com/questions/9336/can-mprotect-set-the-stack-itself-as-executable",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm taking my first steps in memory exploitation in Linux. I'm following a tutorial for a practice VM(\n  <code>\n   $ uname -r -> 3.13.0-32-generic\n  </code>\n  )\n </p>\n <p>\n  The tutorial makes a call to\n  <code>\n   mprotect\n  </code>\n  to set a certain region of memory executable, then uses\n  <code>\n   read\n  </code>\n  to manually input some shellcode.\n </p>\n <p>\n  I occurred to me that perhaps I could load my shellcode on the stack using the buffer and use\n  <code>\n   mprotect\n  </code>\n  to set the buffer region on the stack as executable and return to it. But that throws an error for reasons I'm not sure of.\n </p>\n <p>\n  In short, this call to\n  <code>\n   mprotect\n  </code>\n  works:\n </p>\n <pre><code># mprotect: set memory executable\npayload += p(0x080523e0) # mprotect addr\npayload += p(0x08048882) # return to: pop, pop, pop, retn\npayload += p(0xb7ffd000) # arg1: address of 'mapped' region\npayload += p(0x2000)     # arg2: length\npayload += p(0x7)        # arg3: rwx\n</code></pre>\n <p>\n  But this call fails:\n </p>\n <pre><code># mprotect: set memory executable\npayload += p(0x080523e0) # mprotect addr\npayload += p(0xbffff6c0) # return to shellcode in buffer on stack\npayload += p(0xbffff6c0) # arg1: beginning of shellcode on stack\npayload += p(0x2000)     # arg2: length\npayload += p(0x7)        # arg3: rwx\n</code></pre>\n <p>\n  Stepping through\n  <code>\n   mprotect\n  </code>\n  in that second example shows me that it takes an error jump:\n </p>\n <pre><code>=> 0x80523fa <mprotect+26>: jae    0x8053870 <__syscall_error>\n</code></pre>\n <p>\n  As the only difference between the two is the address I want to set executable, I'm wondering if it's simply that\n  <code>\n   mprotect\n  </code>\n  can't set the stack as executable?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "4k",
    "tags": [
        "linux",
        "executable",
        "stack"
    ],
    "user": "Juicy",
    "time": "Jul 12, 2015 at 14:28",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Yes,\n  <a href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?mprotect\" rel=\"nofollow\">\n   <code>\n    mprotect\n   </code>\n  </a>\n  can be used to make the stack executable.\n </p>\n <p>\n  See, for example:\n </p>\n <ul>\n  <li>\n   <a href=\"https://github.com/gcc-mirror/gcc/blob/master/libgcc/enable-execute-stack-mprotect.c\" rel=\"nofollow\">\n    https://github.com/gcc-mirror/gcc/blob/master/libgcc/enable-execute-stack-mprotect.c\n   </a>\n  </li>\n  <li>\n   <a href=\"http://rethinkdb.com/blog/handling-stack-overflow-on-custom-stacks/\" rel=\"nofollow\">\n    http://rethinkdb.com/blog/handling-stack-overflow-on-custom-stacks/\n   </a>\n  </li>\n </ul>\n <p>\n  You can troubleshoot further by examining the value of\n  <code>\n   errno\n  </code>\n  after the\n  <code>\n   mprotect\n  </code>\n  call.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Jason Geffner",
            "time": "Jul 12, 2015 at 18:33",
            "is_accepted": false,
            "comments": []
        }
    ]
}