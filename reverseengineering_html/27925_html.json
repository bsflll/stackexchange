{
    "title": "Read and write to register with Frida",
    "link": "https://reverseengineering.stackexchange.com/questions/27925/read-and-write-to-register-with-frida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have an instruction that looks like this in Ghidra:\n </p>\n <pre><code>       100168ff0 e9 13 00 32     orr        w9,wzr,#0x1f\n</code></pre>\n <p>\n  Using\n  <code>\n   lldb\n  </code>\n  I can set a breakpoint on the instruction after this, read\n  <code>\n   w9\n  </code>\n  to confirm what value it is storing and modify it if needs be.\n </p>\n <p>\n  I am trying to do something similar with Frida with the following script:\n </p>\n <pre><code>var t_module = 'testApp';\nvar loadAddress = Module.getBaseAddress(t_module);\nvar instructionOffset = ptr(0x168ff4);\n\nvar toAtt = loadAddress.add(instructionOffset);\n\nInterceptor.attach(toAtt, {\n    onEnter: function(args) {\n        console.log(\"[+] Module base address found at \" + loadAddress)\n        console.log(\"[+] Found instruction at \" + toAtt)\n        console.log(\"[+] Attempting to read w9: \" + this.context.w9)\n    }\n});\n</code></pre>\n <p>\n  however trying to read\n  <code>\n   w9\n  </code>\n  just returns\n  <code>\n   undefined\n  </code>\n  .  It is defined\n  <a href=\"https://frida.re/docs/javascript-api/#aarch64-enum-types\" rel=\"nofollow noreferrer\">\n   here\n  </a>\n  so is not that Frida is calling it something else.\n </p>\n <p>\n  I can confirm the right address is being reached using:\n </p>\n <pre><code>Memory.readByteArray(ptr(\"0x102ab4ff0\"),4)\n</code></pre>\n <p>\n  where\n  <code>\n   0x102ab4ff0\n  </code>\n  is the address printed by the script, and comparing it to the instruction at the beginning from Ghidra.\n </p>\n <p>\n  I'm not sure if I've misunderstood something about Frida or where I should attach.\n  <a href=\"https://reverseengineering.stackexchange.com/questions/21701/dump-value-of-register-using-frida\">\n   This\n  </a>\n  is the closest question I could find and that just says to use\n  <code>\n   this.context.eax\n  </code>\n  .\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "3k",
    "tags": [
        "ios",
        "register",
        "frida",
        "arm64",
        "aarch64"
    ],
    "user": "Jon",
    "time": "Jul 1, 2021 at 11:48",
    "comments": [
        {
            "user": "James W.",
            "text": "<html><body><span class=\"comment-copy\">\n did you see any of your logs from\n <code>\n  onEnter\n </code>\n ? ( also, you don't need to\n <code>\n  .add\n </code>\n a\n <code>\n  ptr\n </code>\n , you can just add the offset using\n <code>\n  .add(0x11)\n </code>\n . there is no\n <code>\n  eax\n </code>\n in arm64 ) to answer your question please print\n <code>\n  console.log(JSON.stringify(this.context))\n </code>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Jon",
            "text": "<html><body><span class=\"comment-copy\">\n Thank you very much @whoopdedoo! This suggestion helped me work out the problem.  The comment about eax was more to illustrate that that was what I understood to be the correct way to address a register as opposed to eax being used by arm64, I am a complete RE n00b though so it was a fair assumption to make.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The issue was that\n  <code>\n   w9\n  </code>\n  is a 32-bit register and I was using a 64 bit device.  By calling\n  <code>\n   this.context.x9\n  </code>\n  for the 64 bit register the Frida script worked perfectly.  Many thanks to @whoopdedoo, their suggestion to log\n  <code>\n   this.context\n  </code>\n  was what led me to search more about ARM registers and realise my mistake.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Jon",
            "time": "Sep 10, 2021 at 15:01",
            "is_accepted": true,
            "comments": []
        }
    ]
}