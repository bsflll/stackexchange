{
    "title": "rasm2 output differs from radare2",
    "link": "https://reverseengineering.stackexchange.com/questions/12045/rasm2-output-differs-from-radare2",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <code>\n   radare2\n  </code>\n  disassembles an instruction in the following way (\n  <a href=\"http://crackmes.de/users/sx0r/crackme4_by_sx0r/download\" rel=\"nofollow\">\n   binary here\n  </a>\n  ):\n </p>\n <pre><code>0x0040425f 0f847b020000   je 0x4044e0\n</code></pre>\n <p>\n  Why is giving\n  <code>\n   rasm2\n  </code>\n  different result?\n </p>\n <pre><code>rasm2 -a x86 -b 64 -d '0f847b020000'\nje 0x281\n</code></pre>\n</div>\n</body></html>",
    "votes": "-1",
    "answers": 2,
    "views": "219",
    "tags": [
        "radare2"
    ],
    "user": "robert",
    "time": "Feb 15, 2016 at 21:37",
    "comments": [
        {
            "user": "robert",
            "text": "<html><body><span class=\"comment-copy\">\n Please give some reasons why you downvoted my question.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "robert",
            "text": "<html><body><span class=\"comment-copy\">\n I am just curious. Why was this downvoted?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <pre><code>rasm2 -d -o 0x40425f 0f847b020000\nje 0x4044e0\n</code></pre>\n</div>\n</body></html>",
            "votes": "5",
            "user": "blabb",
            "time": "Feb 16, 2016 at 4:51",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I don't think it is a different result, only a different representation.\nThe\n  <code>\n   radare2\n  </code>\n  output tells you at which absolute address will the jump take you (in this case\n  <code>\n   0x004044e0\n  </code>\n  ), while the\n  <code>\n   rasm2\n  </code>\n  output tells you how far from the current address (in this case\n  <code>\n   0x0040425f\n  </code>\n  ) will the jump take you.\n </p>\n <p>\n  To make it more clear: Your current instruction starts at address\n  <code>\n   0x0040425f\n  </code>\n  , while your destination address is\n  <code>\n   0x004044e0\n  </code>\n  . If you substitute the two addresses you get:\n  <code>\n   0x004044e0 - 0x0040425f = 0x00000281\n  </code>\n  , which is the parameter to the jump in the\n  <code>\n   rasm2\n  </code>\n  tool.\n </p>\n <p>\n  Also, the opcode\n  <code>\n   0x0F 0x84\n  </code>\n  stands for\n  <code>\n   JE rel16/rel32\n  </code>\n  and since you haven't specified at which address your instruction\n  <code>\n   0f847b020000\n  </code>\n  resides the\n  <code>\n   rasm2\n  </code>\n  tool is correctly telling you that it is\n  <code>\n   0x281\n  </code>\n  bytes from wherever the instruction is:\n  <code>\n   parameter_value(0x0000027b) + instruction_length(0x06) = 0x00000281\n  </code>\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "ubnix",
            "time": "Feb 15, 2016 at 22:28",
            "is_accepted": false,
            "comments": []
        }
    ]
}