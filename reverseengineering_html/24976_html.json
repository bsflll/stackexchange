{
    "title": "reversing enrichment routine",
    "link": "https://reverseengineering.stackexchange.com/questions/24976/reversing-enrichment-routine",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to know where a specific\n  <code>\n   std::string\n  </code>\n  comes from, find the enrichment routine in the\n  <code>\n   C++\n  </code>\n  application I'm reversing.\n </p>\n <p>\n  The variable I'm looking for it at @\n  <code>\n   [X21,#8]\n  </code>\n  , I don't fully understand the following code, is that @\n  <code>\n   *(*off_1B2000) + 8)\n  </code>\n  ?  ( off_1B2000.readPointer().add(8).readPointer() ? )\n </p>\n <p>\n  Do I need to look for who sets the global pointer\n  <code>\n   off_1B2000\n  </code>\n  ?\n </p>\n <p>\n  Is that an inline constructor ?\n </p>\n <p>\n  Let's assume I break in the start routine, I want to know where to set write\n  <strong>\n   watchpoint\n  </strong>\n  to figure out who writes to\n  <code>\n   *(x21+8)\n  </code>\n  do I set @\n  <code>\n   *(*off_1B2000) + 8)\n  </code>\n  ?\n </p>\n <pre><code>loc_9F0000\nADRP            X0, #off_1B2000@PAGE\nADD             X21, SP, #0x260+v1\nADD             X24, SP, #0x260+v1\nMOV             X8, X24\nLDR             X0, [X0,#off_1B2000@PAGEOFF]\nSTR             XZR, [X21,#0x50]\nADD             X0, X0, #0x18\nSTR             X0, [X21]\nSTR             X0, [X21,#8] // <<  *(x21+8)=x0 This is who I'm looking for\nSTR             X0, [X21,#0x10]\nSTR             X0, [X21,#0x18]\nSTR             X0, [X21,#0x20]\nSTR             X0, [X21,#0x28]\nSTR             X0, [X21,#0x30]\nSTR             X0, [X21,#0x38]\nSTR             X0, [X21,#0x40]\nMOV             W0, #0xFFFFFFFF\nSTR             W0, [X21,#0x48]\nMOV             W0, #1\nSTR             W0, [X21,#0x4C]\nMOV             X0, X19\nSTR             WZR, [X21,#0x58]\nSTR             WZR, [X21,#0x5C]\nSTRB            WZR, [X21,#0x60]\nBL              sub_9F7000\n</code></pre>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "66",
    "tags": [
        "arm64",
        "aarch64"
    ],
    "user": "James W.",
    "time": "May 13, 2020 at 14:09",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n What exactly is \"enrichment routine\"? I'm not familiar with the term.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "James W.",
            "text": "<html><body><span class=\"comment-copy\">\n Terminology; for example,\n <code>\n  person_id\n </code>\n to\n <code>\n  Person\n </code>\n object -> enrichment. Some routine takes an\n <code>\n  id\n </code>\n and I want to figure out where the enrichment takes place, find the query to the DB (not the case, or might be.. statically compiled)\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n so it's just a weird term for \"lookup\"?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This\n  <code>\n   STR\n  </code>\n  operation adds 8 bytes to the offset at X21, then stores the value of X0 there.\n </p>\n <p>\n  You are working with QWORD sized variables (8), so in C code it is something like:\n </p>\n <p>\n  <code>\n   (uint64_t *)(offset_at_X21 + 1) = X0\n  </code>\n </p>\n <p>\n  Edit:\n </p>\n <p>\n  The first instruction sets\n  <code>\n   X0=address of off_1B2000\n  </code>\n  (const 0x1B2000). Later it is dereferenced\n  <code>\n   [X0,#offset...]\n  </code>\n  . This is *(0x1B2000+0x1B2000), which is odd. Could it be\n  <code>\n   LDR X0,[X0]\n  </code>\n  ? IDA may give it the name \"#off_1B2000\" because it is clear that this is the value.\n </p>\n <p>\n  X21 pointes to the variable \"v1\" on the stack, (set by\n  <code>\n   ADD X21,SP,#0x260+v1\n  </code>\n  ).\n </p>\n <p>\n  The result of the code is something like this:\n </p>\n <p>\n  <code>\n   [v1+8] = *(off_1B2000)\n  </code>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Yotamz",
            "time": "May 11, 2020 at 9:55",
            "is_accepted": false,
            "comments": [
                {
                    "user": "James W.",
                    "text": "<span class=\"comment-copy\">That I understood, please explain the relation to <code>off_1B2000</code></span>",
                    "time": null
                },
                {
                    "user": "Yotamz",
                    "text": "<span class=\"comment-copy\">Edited my answer</span>",
                    "time": null
                },
                {
                    "user": "James W.",
                    "text": "<span class=\"comment-copy\">Thanks but where do I set the watchpoint ?</span>",
                    "time": null
                },
                {
                    "user": "Yotamz",
                    "text": "<span class=\"comment-copy\">The watchpoint is on write to <code>off_1B2000</code>. And yes it looks like a constructor of a class instance, pointed to by <code>v1</code> on the stack. The v1+8 is the second QWORD of the class.</span>",
                    "time": null
                }
            ]
        }
    ]
}