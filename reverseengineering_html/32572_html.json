{
    "title": "How to search a sequence of instructions in Ghidra?",
    "link": "https://reverseengineering.stackexchange.com/questions/32572/how-to-search-a-sequence-of-instructions-in-ghidra",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'd like to identify in Ghidra a specific sequence of instructions, which I get from MSVC Debug in Visual Studio compiling my own function:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/rMoq1.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/rMoq1.png\"/>\n  </a>\n </p>\n <p>\n  What I'm looking for so is (for the same DLL, decompiled in Ghidra) to intercept the sequence\n  <code>\n   movss/movss/movss/movss/lea/lea/lea\n  </code>\n  , in the hoping to intercept the C++ Clamp function I've defined:\n </p>\n <pre><code>template <typename T>\nT Clamp(const T& min, const T& max, const T& value)\n{\n    if (value < min)\n    {\n        return min;\n    }\n    else if (value > max)\n    {\n        return max;\n    }\n    return value;\n}\n</code></pre>\n <p>\n  What's the correct way to do this in Ghidra?\n </p>\n <p>\n  If I try\n  <em>\n   Instruction Pattern Search\n  </em>\n  feature in Ghidra, inserting the first 4 movss of the sequence (selecting the instructions show in the VS Debugger, after enabling\n  <em>\n   Show Code Bytes\n  </em>\n  ; i.e. in order\n  <code>\n   f3 0f 10/f3 0f 11/f3 0f 10/f3 0f 11\n  </code>\n  ):\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/IaKEU.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/IaKEU.png\"/>\n  </a>\n </p>\n <p>\n  it doesn't return any hit.\n </p>\n <p>\n  So, is this a mismatch from VS Code disassembly and the Listing elaborated by Ghidra, or am I searching in a wrong way?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "c++",
        "ghidra",
        "msvc"
    ],
    "user": "markzzz",
    "time": "Dec 16, 2023 at 14:55",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n <b>\n  Comments have been\n  <a href=\"https://chat.stackexchange.com/rooms/150384/discussion-on-question-by-markzzz-how-to-search-a-sequence-of-instructions-in-gh\">\n   moved to chat\n  </a>\n  ; please do not continue the discussion here.\n </b>\n Before posting a comment below this one, please review the\n <a href=\"/help/privileges/comment\">\n  purposes of comments\n </a>\n . Comments that do not request clarification or suggest improvements usually belong as an\n <a href=\"/help/how-to-answer\">\n  answer\n </a>\n , on\n <a href=\"https://reverseengineering.meta.stackexchange.com\">\n  Reverse Engineering Meta\n </a>\n , or in\n <a href=\"https://chat.stackexchange.com\">\n  Reverse Engineering Chat\n </a>\n . Comments continuing discussion may be removed.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'll post an answer here with the conclusions we came to in the chat, in case anyone finds it useful in the future.\n </p>\n <p>\n  There seems to be a limitation of the Instruction Pattern Search tool in that the patterns must contain a fixed amount of bytes. In the screenshot posted in the original post, the second and fourth pattern are looking for\n  <code>\n   movss [addr], xmm\n  </code>\n  instructions (operands encoded in 5 bytes, first operand is\n  <code>\n   00...101\n  </code>\n  ), while the instructions that need to be found are\n  <code>\n   movss [reg+offs], xmm\n  </code>\n  (operands encoded in 3 bytes, first operand is\n  <code>\n   01...100\n  </code>\n  ). To correct the patterns, one needs to find an appropriate instruction in code or insert the bytes manually into the tool and then unmask the operands (as far as Ghidra allows).\n </p>\n <p>\n  Alternatively, one can also use the memory search ('S' hotkey or Search -> Memory) and insert a pattern matching the instruction bytes. For this specific question, the pattern would be:\n </p>\n <blockquote>\n  <p>\n   f3 0f 10 ?? ?? ?? ?? ?? f3 0f 11 ?? ?? ?? f3 0f 10 ?? ?? ?? ?? ?? f3 0f 11 ?? ?? ??\n  </p>\n </blockquote>\n <p>\n  Ghidra also allows searching in a more dynamic manner via\n  <a href=\"https://fossies.org/linux/ghidra/Ghidra/Features/Base/src/main/help/help/topics/Search/Regular_Expressions.htm\" rel=\"nofollow noreferrer\">\n   regular expressions\n  </a>\n  . This would allow one to craft a regex pattern that matches against four consecutive movss instructions, regardless of their operands, but may make it more difficult to guard against false positives.\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "ynwarcs",
            "time": "Dec 22, 2023 at 11:24",
            "is_accepted": true,
            "comments": [
                {
                    "user": "markzzz",
                    "text": "<span class=\"comment-copy\">Nice, thanks. For this specific case, can you give an example of regex? Or do you need a new question maybe?</span>",
                    "time": null
                },
                {
                    "user": "Ali Rizvi-Santiago",
                    "text": "<span class=\"comment-copy\">@markzzz, there's two regexes for both instruction types in the chat. Use <code>[DLT\\\\dlt]..</code>  to match the 3-byte operands exactly (the <code>?? ?? ??</code>), or <code>[\\x05\\x0D\\x15\\x1D\\x25\\x2D\\x35]....</code> for the longer ones (the <code>?? ?? ?? ?? ??</code>), or if you don't care about the variations for the SIB byte at all, the pattern given by @ynwarcs could just be <code>\\xF3\\x0F\\x10.....\\xF3\\x0F\\x11...\\xF3\\x0F\\x10.....\\xF3\\x0F\\x11...</code>. (The '<code>.</code>' character in a regular expression matches any byte).</span>",
                    "time": null
                }
            ]
        }
    ]
}