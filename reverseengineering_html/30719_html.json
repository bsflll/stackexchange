{
    "title": "How to reverse an import function?",
    "link": "https://reverseengineering.stackexchange.com/questions/30719/how-to-reverse-an-import-function",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm reversing windows\n  <code>\n   .sys\n  </code>\n  file and an import function\n  <code>\n   RtlLookupEntryHashTable\n  </code>\n  appears in my target functions. I want to know the pseudocode of it. How to achieve this?\n </p>\n <pre><code>.text:00000001C00218C2                 call    cs:wcsnlen\n.text:00000001C00218C9                 nop     dword ptr [rax+rax+00h]\n.text:00000001C00218CE                 mov     rdx, r15\n.text:00000001C00218D1                 mov     ecx, ebx\n.text:00000001C00218D3                 lea     r8d, [rax+rax]\n.text:00000001C00218D7                 call    RtlCompute37Hash\n.text:00000001C00218DC                 bts     eax, 1Fh\n.text:00000001C00218E0                 lea     r8, [rsp+0B8h+Context] ; Context\n.text:00000001C00218E5                 xorps   xmm0, xmm0\n.text:00000001C00218E8                 mov     edx, eax        ; Signature\n.text:00000001C00218EA                 lea     rcx, stru_1C0077988 ; HashTable\n.text:00000001C00218F1                 mov     ebx, eax\n.text:00000001C00218F3                 movdqu  xmmword ptr [rsp+0B8h+Context.ChainHead], xmm0\n.text:00000001C00218F9                 call    cs:RtlLookupEntryHashTable\n.text:00000001C0021900                 nop     dword ptr [rax+rax+00h]\n</code></pre>\n <p>\n  When I double clicked it, I got this\n </p>\n <pre><code>.idata:00000001C007E378                                         ; sub_1C0014BCC+107↑p ...\n.idata:00000001C007E380 ; PRTL_DYNAMIC_HASH_TABLE_ENTRY __stdcall RtlLookupEntryHashTable(PRTL_DYNAMIC_HASH_TABLE HashTable, ULONG_PTR Signature, PRTL_DYNAMIC_HASH_TABLE_CONTEXT Context)\n.idata:00000001C007E380                 extrn RtlLookupEntryHashTable:qword\n.idata:00000001C007E380                                         ; CODE XREF: KfdAleRemoveFlowContextTable+102↑p\n.idata:00000001C007E380                                         ; KfdAleAcquireEndpointContextFromFlow+92↑p ...\n.idata:00000001C007E388 ; BOOLEAN __stdcall KeTestSpinLock(PKSPIN_LOCK SpinLock)\n.idata:00000001C007E388                 extrn KeTestSpinLock:qword\n</code></pre>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "94",
    "tags": [
        "windows",
        "functions",
        "windows-10"
    ],
    "user": "anonymous bear",
    "time": "Aug 1, 2022 at 7:28",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Hi and welcome to RE.SE. It's not quite clear what you want. What's your question? If you want to see pseudo-code for a function imported from elsewhere, you'll have to open that\n <i>\n  elsewhere\n </i>\n location (in this case likely\n <code>\n  ntoskrnl.exe\n </code>\n ) and find the function there and throw a decompiler at that.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "raspiduino",
            "text": "<html><body><span class=\"comment-copy\">\n Like 0xC0000022L said, it's a function from\n <code>\n  ntoskrnl.exe\n </code>\n that your\n <code>\n  .sys\n </code>\n file imported and used. If you just want to know that that function does, you can search on Google. If you want to know the pseudo-code, you can decompile\n <code>\n  ntoskrnl.exe\n </code>\n or you can view the (clone) source code of that function from ReactOS project\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "anonymous bear",
            "text": "<html><body><span class=\"comment-copy\">\n I found it in the import finally. Thx\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}