{
    "title": "Structure Definitions for PEB in IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/2610/structure-definitions-for-peb-in-ida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  When reversing shellcode, we see the PEB walk fairly often at various stages. I am curious however, if there is any pre-defined standard structure for this in IDA? If so, what is it called? After looking and googling around I haven't been able to find anything. I would also be very interested in definitions for PEB_LDR_DATA and RTL_USER_PROCESS_PARAMETERS.\n </p>\n <p>\n  I could create them myself and export them somehow (would have to figure out how). But before doing that I am really curious if there is just something I am missing amongst the standard structure definitions in IDA.\n </p>\n</div>\n</body></html>",
    "votes": "8",
    "answers": 2,
    "views": "6k",
    "tags": [
        "ida",
        "shellcode"
    ],
    "user": "Elias51",
    "time": "Aug 10, 2013 at 17:11",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The structures for the PEB are\n  <strong>\n   _PEB\n  </strong>\n  and\n  <strong>\n   PEB_LDR_DATA\n  </strong>\n  . You need to have the\n  <strong>\n   ntapi\n  </strong>\n  type library loaded, you can add it by going in the\n  <strong>\n   Type Libraries\n  </strong>\n  view (\n  <kbd>\n   Shift\n  </kbd>\n  +\n  <kbd>\n   F11\n  </kbd>\n  ) and then press\n  <kbd>\n   Ins\n  </kbd>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "9",
            "user": "0xC0000022L",
            "time": "Aug 10, 2013 at 16:50",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  if you are using\n  <code>\n   IDA FREE\n  </code>\n  then this and several other type libraries are not available\n </p>\n <p>\n  and if you intend to\n </p>\n <pre><code>create them yourself and export them somehow (would have to figure out how). \n</code></pre>\n <p>\n  this walk through provides few hints on how to accomplish it\n </p>\n <p>\n  os winxp sp3 vm\n </p>\n <pre><code>(all opaque structures like EPROCESS can vary from os to os / hotfix to hotfix patch tuesday to patch tuesday )\n</code></pre>\n <p>\n  supposing you are reversing PsGetProcessId() in ntkrnlpa.exe\n </p>\n <pre><code>                  ; Exported entry 872. PsGetProcessId    \n                  ; Attributes: bp-based frame    \n                  ; __stdcall PsGetProcessId(x)\n                  public _PsGetProcessId@4\n                  _PsGetProcessId@4 proc near\n8B FF             mov     edi, edi\n55                push    ebp\n8B EC             mov     ebp, esp\n8B 45 08          mov     eax, [ebp+8]\n8B 80 84 00 00 00 mov     eax, [eax+84h] <-----\n5D                pop     ebp\nC2 04 00          retn    4\n                  _PsGetProcessId@4 endp\n</code></pre>\n <p>\n  and you find out 84 is EPROCESS->Pid and want to impart this information to the disassembly\n </p>\n <p>\n  make a text file named\n  <code>\n   EPROCESS.h\n  </code>\n </p>\n <p>\n  type the following in the text file and save it for accessing it later\n </p>\n <pre><code>typedef struct EPROCESS \n{\n  BYTE unknown[0x84];\n  DWORD Pid;\n} EPROCESS, *EPROCESS;\n</code></pre>\n <p>\n  go to\n  <code>\n   ida free ->File->Load File->Parse Header File\n  </code>\n  or shortcut\n  <code>\n   ctrl+f9\n  </code>\n  browse to the\n  <code>\n   EPROCESS.h\n  </code>\n </p>\n <p>\n  you should see this is\n  <code>\n   ida information window\n  </code>\n  on being successful\n </p>\n <pre><code>The initial autoanalysis has been finished.\nC:\\Documents and Settings\\Admin\\Desktop\\EPROCESS.h: `successfully compiled`\n</code></pre>\n <p>\n  view->\n  <code>\n   open subviews->structures\n  </code>\n  or shortcut\n  <code>\n   shift+f9\n  </code>\n  press\n  <code>\n   insert\n  </code>\n  key click\n  <code>\n   add standard structure\n  </code>\n  start typing\n  <code>\n   peb\n  </code>\n  and you should see the window scrolling and showing you the  structure you just added\n </p>\n <pre><code>00000000 EPROCESS        struc ; (sizeof=0x88, standard type)\n00000000 unknown         db 132 dup(?)\n00000084 Pid             dd ?\n00000088 EPROCESS        ends\n</code></pre>\n <p>\n  go to idaview select\n  <code>\n   84h\n  </code>\n  /\n  <code>\n   right click->select structure offset\n  </code>\n </p>\n <p>\n  and apply the\n  <code>\n   Eprocess.Pid\n  </code>\n </p>\n <p>\n  disassembly will become a bit more readable\n </p>\n <pre><code>8B 80 84 00 00 00 mov     eax, [eax+EPROCESS.Pid]\n</code></pre>\n <p>\n  start adding other discovered offset to this eprocess.h and load it again for updated \nstructure definitions\n </p>\n <p>\n  many of the structures definitions can be viewed via windbg\n </p>\n <p>\n  for example peb and peb_ldr_data can be viewed like this\n </p>\n <pre><code>dt nt!_PEB\ndt nt!_PEB_LDR_DATA\n</code></pre>\n <p>\n  Additional Details\n </p>\n <p>\n  if you modify the .h file to add another structure member like this\n </p>\n <pre><code>typedef struct EPROCESS \n{\n  BYTE unknown[0x84];\n  DWORD Pid;\n  BYTE unk2[0xbc-0x88];\n  DWORD DebugPort;\n  BYTE unknown1[0x174-0xc0];\n  BYTE ImageFileName[16];\n} EPROCESS, *PEPROCESS;\n</code></pre>\n <p>\n  Be Aware you would need to delete the earlier definitions before parsing the header file again and this implies all your earlier work will be lost on reloading \nso save your work\n </p>\n</div>\n</body></html>",
            "votes": "6",
            "user": "blabb",
            "time": "Aug 11, 2013 at 10:53",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Elias51",
                    "text": "<span class=\"comment-copy\">Thanks for this! I was using IDA Pro, but this information is helpful in situations where the definition I am looking for is indeed absent.</span>",
                    "time": null
                }
            ]
        }
    ]
}