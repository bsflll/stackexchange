{
    "title": "How to decrypt data in binary file by XOR operator using a given key at specific offset? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/11033/how-to-decrypt-data-in-binary-file-by-xor-operator-using-a-given-key-at-specific",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed.\n        </b>\n        This question is\n        <a href=\"/help/closed-questions\">\n         off-topic\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       Questions on\n       <b>\n        software development\n       </b>\n       are off-topic here, but can be asked on\n       <a href=\"http://stackoverflow.com/about\">\n        Stack Overflow\n       </a>\n       .\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2015-10-06 15:36:48Z\">\n        9 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/11033/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  I've a binary data files which are encrypted by a simple\n  <a href=\"https://en.wikipedia.org/wiki/XOR_cipher\" rel=\"nofollow\">\n   XOR cipher\n  </a>\n  using a given key at offset\n  <code>\n   +0x88\n  </code>\n  (which is\n  <code>\n   0x80\n  </code>\n  long), then the data (\n  <code>\n   +0x108\n  </code>\n  ) is compressed by\n  <code>\n   lzo1x\n  </code>\n  .\n </p>\n <p>\n  What would be the most efficient way of decrypting such files?\n </p>\n <p>\n  Preferably by using some command-line utilities (where I can specify the input offsets) or some script (without too much coding)?\n </p>\n <p>\n  What would be the right approach?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "11k",
    "tags": [
        "linux",
        "decryption",
        "decompress",
        "xor",
        "command-line"
    ],
    "user": "kenorb",
    "time": "9 years ago",
    "comments": [
        {
            "user": "w s",
            "text": "<html><body><span class=\"comment-copy\">\n The right approach is writing script in a language of your choice. I'd do it in Python.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "perror",
            "text": "<html><body><span class=\"comment-copy\">\n As @ws suggested, you should just take your favorite language and make a tool for that... In fact, I don't see the point of this question. Am I missing something ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "w s",
            "text": "<html><body><span class=\"comment-copy\">\n No there isn't.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "kenorb",
            "text": "<html><body><span class=\"comment-copy\">\n @perror The point is to have useful Q&A about simple XOR deciphering (which seems there is a lack in here) and to share the knowledge. I don't see the reason why criticise the question by people who doesn't know the answer.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "kenorb",
            "text": "<html><body><span class=\"comment-copy\">\n @ws Now there is one.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Use\n  <code>\n   dd\n  </code>\n  to extract the data what you need, e.g. (using bash syntax):\n </p>\n <pre><code>dd if=foo.dat bs=1 skip=$((0x88)) count=$((0x80)) of=xorkey.bin\ndd if=foo.dat bs=1 skip=$((0x108)) of=data1.bin\n</code></pre>\n <p>\n  Then convert it using simple Python code:\n </p>\n <pre><code>#!/usr/bin/env python3\n\ndef str_xor(data, key):\n    for i in range(len(data)):\n        data[i] ^= key[i % len(key)]\n    return data\n\nkey  = bytearray(open('xorkey.bin', 'rb').read())\ndata = bytearray(open('data1.bin',  'rb').read())\nencoded = str_xor(data, key)\nopen(\"data1.bin.xor\", \"wb\").write(encoded)\ndecoded = str_xor(data, key)\nopen(\"data1.bin.xor.xor\", \"wb\").write(decoded)\n</code></pre>\n <p>\n  Then install\n  <code>\n   lzop\n  </code>\n  tool which offers compression/decompression of the LZO1X algorithms (install via:\n  <code>\n   apt-get\n  </code>\n  /\n  <code>\n   brew\n  </code>\n  <code>\n   install lzop\n  </code>\n  ), e.g.:\n </p>\n <pre><code>lzop -dc data1.bin.xor > data1.out\n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "kenorb",
            "time": "Oct 6, 2015 at 11:36",
            "is_accepted": true,
            "comments": [
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">you could use powershell to get the bytes from a specific block of file and use it foreach operator to xor the bytes like this $foo=(($c=gc .\\encrypted.dat -Encoding byte)[0x80..$C.Length]) |%{$_ -bxor 63}</span>",
                    "time": null
                },
                {
                    "user": "cweiske",
                    "text": "<span class=\"comment-copy\">Instead of writing your own python code, you can use <code>xortool-xor</code> from <a href=\"https://github.com/hellman/xortool\" rel=\"nofollow noreferrer\">github.com/hellman/xortool</a></span>",
                    "time": null
                }
            ]
        }
    ]
}