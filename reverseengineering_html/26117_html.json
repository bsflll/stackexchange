{
    "title": "How can I tell whether or not a given library method is being referenced by a consumer program statically in OOP languages?",
    "link": "https://reverseengineering.stackexchange.com/questions/26117/how-can-i-tell-whether-or-not-a-given-library-method-is-being-referenced-by-a-co",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Preface: This question is about\n  <strong>\n   source code reverse engineering and static analysis\n  </strong>\n  . Meaning, there is no built code available but I have access to the source code of the program.\n </p>\n <p>\n  Imagine I'm looking at some source code for a Java library. I know that in class\n  <code>\n   foo\n  </code>\n  , there is a\n  <strong>\n   public\n  </strong>\n  method\n  <code>\n   bar()\n  </code>\n  that either contains a bug or calls another\n  <strong>\n   private\n  </strong>\n  method which contains the bug.\n </p>\n <p>\n  With no prior knowledge of the codebase, and by only looking at source code,\n  <em>\n   what are some techniques I can employ to find out if a given program that consumes this Java library, potentially calls the functionality, or triggers execution of the code with the bug in it?\n  </em>\n </p>\n <p>\n  I'm looking to answer the question\n  <em>\n   \"Does this program use the vulnerable method/function either directly or indirectly?\"\n  </em>\n  I know that technically it may not be possible without running the program to determine if the functionality is\n  <em>\n   actually called\n  </em>\n  because there may be a branch that is resolved at runtime based on external input. However, I only need to know whether or not the method\n  <em>\n   has any chance at or could potentially be\n  </em>\n  called.\n </p>\n <p>\n  I know how to find out if a method is used directly. I will search for the name of the class with vulnerable/buggy code throughout the program consuming the library, or even just search for the method itself. However, if the buggy function is not directly called by that program, this is where I am needing some tips. If the method is\n  <code>\n   private\n  </code>\n  or internal, it will never be directly called by the consuming program, but I've also seen cases where a method is\n  <code>\n   public\n  </code>\n  but isn't directly called by the consuming program, however, another method in the library calls it.\n </p>\n <p>\n  This has made it difficult to find out if code using a given library is vulnerable to a bug. What are some tips to statically hunt down these references for Java? If you have relevant information that is for another OOP language, that could be useful here as well.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "41",
    "tags": [
        "c++",
        "static-analysis",
        "java",
        "c#"
    ],
    "user": "the_endian",
    "time": "Oct 15, 2020 at 15:52",
    "comments": [],
    "answers_data": []
}