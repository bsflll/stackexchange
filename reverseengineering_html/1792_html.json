{
    "title": "Is there any simple open source Windows packer?",
    "link": "https://reverseengineering.stackexchange.com/questions/1792/is-there-any-simple-open-source-windows-packer",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  There are great questions here about different types of packers and that is very interesting to me.  I would like to try my hand at reverse engineering one.  Since I am very new to this, I would like the source code as well.\n </p>\n <p>\n  I am hoping that by continuously compiling and recompiling the source, I can learn to match it up in IDA Pro and gain a better understanding of both topics at once.\n </p>\n <p>\n  I've checked out the source code for UPX but it is very complex as it handles many different platforms and types.\n </p>\n <p>\n  Is there an open source code packer that deals exclusively with Windows executables and is\n  <strong>\n   very simple\n  </strong>\n  to understand?\n </p>\n</div>\n</body></html>",
    "votes": "18",
    "answers": 5,
    "views": "8k",
    "tags": [
        "windows",
        "packers"
    ],
    "user": "mikhailzhan",
    "time": "Apr 16, 2013 at 12:46",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n A packer isn't the best method to learn to correlate pseudo-C with the disassembly in front of you. You should instead focus on learning these skills separately. Once learned, it becomes a matter of training (experience) more than anything, so once you \"mastered\" the skills separately to an extent where you can\n <i>\n  use\n </i>\n them, you can still go and combine them and will still learn a whole lot of new things.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "mikhailzhan",
            "text": "<html><body><span class=\"comment-copy\">\n @0xC0000022L Sure, I was hoping that that motivation to understand packers would help keep me focused.  Short-sighted and instant gratification-minded youth and all that.  I appreciate the suggestion, though.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <ul>\n  <li>\n   <p>\n    <a href=\"http://mordor.in/\">\n     SimplePack\n    </a>\n    is\n    <em>\n     simple\n    </em>\n    and open-source (albeit in ASM, not in C)\n   </p>\n   <p>\n    SimplePack is not\n    <em>\n     trivial\n    </em>\n    , yet simple enough so that I typically use it myself as a first 'hands-on' for binary packer training.\n   </p>\n  </li>\n  <li>\n   <p>\n    also, my minimalists packers (\n    <a href=\"https://code.google.com/p/corkami/source/browse/#svn%2Ftrunk%2Fwip%2FMakePE%2Fexamples%2Fpacker\">\n     source\n    </a>\n    /\n    <a href=\"http://corkami.googlecode.com/files/mini_packers.zip\">\n     binaries\n    </a>\n    ) in python (EP-patcher, compresser, cryptor, dropper, protecter, virtualizer, mutater). No  real use, but made as smallest possible examples for studies.\n   </p>\n  </li>\n  <li>\n   For reference only,\n   <a href=\"http://hem.passagen.se/polyene/\">\n    PolyEnE\n   </a>\n   is also open-source (in ASM, again), but not very simple - YMMV.\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "12",
            "user": "Ange",
            "time": "Apr 16, 2013 at 19:32",
            "is_accepted": true,
            "comments": [
                {
                    "user": "mikhailzhan",
                    "text": "<span class=\"comment-copy\">Your minimalists packers in Python are fantastic.  Just reading the code for that makes the rest of this make more sense.  I'm curious though, I'm trying to use compressor.py on a calc.exe from Windows XP and aplib is failing to do the compression (assert &gt;= 2 in line 91 of _bits).  Is this possibly a known bug?  Or (very likely) I'm just doing something wrong?</span>",
                    "time": null
                },
                {
                    "user": "Ange",
                    "text": "<span class=\"comment-copy\">Thanks - it's no surprise they work badly though, they just had to work on my helloworld.exe program (the virt&amp;mutaters only handle push/call) - they're PoCs skeletons to give an idea, for training, nothing more.</span>",
                    "time": null
                },
                {
                    "user": "mrduclaw",
                    "text": "<span class=\"comment-copy\">@mikhailzhan I got a little further exchanging the lzss algorithm for a different one (<a href=\"https://quibble.googlecode.com/hg/dgreed/tools/lzss.py\" rel=\"nofollow noreferrer\">quibble.googlecode.com/hg/dgreed/tools/lzss.py</a>).  But now the application fails to start (side-by-side error. Depends.exe blows up at the lack of imports table).  Still, great work to build from.  Ange deserves much praise for writing very readable code.</span>",
                    "time": null
                },
                {
                    "user": "mikhailzhan",
                    "text": "<span class=\"comment-copy\">@Ange Thank you for your response!  I'll try compiling just a hello world to play with, then.  Thank you very much!</span>",
                    "time": null
                },
                {
                    "user": "Ange",
                    "text": "<span class=\"comment-copy\">I just added a link to binaries</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This looks like what you want:\n  <a href=\"http://sourceforge.net/projects/sepacker/\">\n   sePACK\n  </a>\n </p>\n <blockquote>\n  <p>\n   A simple windows .exe/.dll packer. (Compresses code section and your\n  compiled binaries waste less space) Almost whole codes written in pure\n  C and very minimal also understandable (which makes modifying very\n  easy; like debugger traps, encryption etc.)\n  </p>\n </blockquote>\n</div>\n</body></html>",
            "votes": "9",
            "user": "cb88",
            "time": "Apr 15, 2013 at 22:23",
            "is_accepted": false,
            "comments": [
                {
                    "user": "mikhailzhan",
                    "text": "<span class=\"comment-copy\">I installed CodeBlocks (the suggested IDE in the ReadMe) and it fails to build sePack. Looks like a newer version of gcc broke it. :/</span>",
                    "time": null
                },
                {
                    "user": "cb88",
                    "text": "<span class=\"comment-copy\">I suppose you could ask how to fix it on stackoverflow and if it is something pertaining to reversing here! Specific errors help of course... I would build it myself but haven't the time this week.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I recommend you to take a look to\n  <a href=\"http://sourceforge.net/projects/yodap/files/Yoda%20Protector/1.02/yP1.02src.zip/download\">\n   Yoda's Protector\n  </a>\n  . There is a version with source code. Unfortunately, it doesn't work on Windows 7 for some reason (but does work on Win XP). Apart from this, I don't know any other open source packer or protector (except UPX, as you mentioned).\n </p>\n</div>\n</body></html>",
            "votes": "6",
            "user": "joxeankoret",
            "time": "Apr 15, 2013 at 22:21",
            "is_accepted": false,
            "comments": [
                {
                    "user": "cb88",
                    "text": "<span class=\"comment-copy\">Yoda's looks a bit more complex for a beginner as it also includes encryption and optimisation as well as anti debugging. I guess it depends on if he wants to focus on one thing packing or bite off a bigger chunk and learn it all in one place.</span>",
                    "time": null
                },
                {
                    "user": "mikhailzhan",
                    "text": "<span class=\"comment-copy\">@cb88 Yes, just the simplest please.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Here are 4 open-source packers, written in\n  <a href=\"http://en.wikipedia.org/wiki/Embarcadero_Delphi\" rel=\"nofollow\">\n   Delphi\n  </a>\n  (you can\n  <a href=\"http://docwiki.embarcadero.com/RADStudio/XE3/en/Delphi_to_C++_types_mapping\" rel=\"nofollow\">\n   convert to C++ if you want\n  </a>\n  ):\n </p>\n <ol>\n  <li>\n   <a href=\"http://www.delphibasics.info/home/delphibasicscounterstrikewireleases/exefog11-executablepackerbybagie\" rel=\"nofollow\">\n    ExeFog 1.1\n   </a>\n  </li>\n  <li>\n   <a href=\"http://www.delphibasics.info/home/delphibasicscounterstrikewireleases/polymorphiccrypter-morphine27byholyfather\" rel=\"nofollow\">\n    Polymorphic Crypter, Morphine\n   </a>\n  </li>\n  <li>\n   <a href=\"http://www.delphibasics.info/home/delphibasicscounterstrikewireleases/ahpacker01byfeuerraderahteam\" rel=\"nofollow\">\n    AHPacker 0.1\n   </a>\n  </li>\n  <li>\n   <a href=\"http://www.delphibasics.info/home/delphibasicscounterstrikewireleases/ghfprotector10\" rel=\"nofollow\">\n    GHF Protector 1.0\n   </a>\n  </li>\n </ol>\n <p>\n  If you don't have a copy of Delphi, you can use the open-source Lazarus IDE with the Free Pascal (FPC) compiler.\n </p>\n <p>\n  Lazarus + FPC can open Delphi project files and can usually compile Delphi projects without modification:\n  <a href=\"http://sourceforge.net/projects/lazarus/\" rel=\"nofollow\">\n   http://sourceforge.net/projects/lazarus/\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "Mick",
            "time": "Apr 16, 2013 at 15:11",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You might be better off looking at a generic data packer first, such as\n  <a href=\"http://code.google.com/p/lz4/\">\n   LZ4\n  </a>\n  .  It's a very simple packer written in C.  There are various unpackers in several languages, too, on the same site.  Jumping right into a runtime packer means lots of file format details that, really, no-one gets quite right in all cases.\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "peter ferrie",
            "time": "Apr 16, 2013 at 17:18",
            "is_accepted": false,
            "comments": []
        }
    ]
}