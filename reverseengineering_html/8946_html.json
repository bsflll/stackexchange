{
    "title": "Working with unsupported binary formats",
    "link": "https://reverseengineering.stackexchange.com/questions/8946/working-with-unsupported-binary-formats",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Sometimes I can't start debugging binary due to being unsupported format for example in IDA. For example I found a Nintendo 3DS game and want to debug it. But the problem is that I can't start debugging because IDA doesn't know this binary format.\n </p>\n <p>\n  What should I do to tell the debugger the structure of the binary (what  text structure, etc)?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "571",
    "tags": [
        "ida",
        "disassembly",
        "binary-analysis",
        "debugging",
        "reassembly"
    ],
    "user": "user2779060",
    "time": "Apr 2, 2018 at 10:47",
    "comments": [
        {
            "user": "Maurice",
            "text": "<html><body><span class=\"comment-copy\">\n You can always load your target manually as a Binary file, and define the Processor type and Loading address.  But, if you are familiar with the specific file format, then writing a Loader is probably the best option.  There is a full chapter on Loader Modules in the (\n <a href=\"http://www.nostarch.com/idapro2.htm](IDA\" rel=\"nofollow noreferrer\">\n  nostarch.com/idapro2.htm](IDA\n </a>\n Pro Book)\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  There are two separate issue:\n </p>\n <ol>\n  <li>\n   in order for IDA to show the disassembly for some new format it must have a loader plugin which understands the file format and provides IDA with information on how the data and code should be loaded from it. And there must be a processor module which will know how to dissemble the data loaded by loader plugin. Otherwise IDA will load the file as binary and that's it.\n  </li>\n  <li>\n   even if you have loader + processor module, this doesn't mean you can debug it. You need a debugger module which will know how to load the initial binary file into device and the through some communication will run it step by step in the remote debugger.\n  </li>\n </ol>\n <p>\n  Nintendo 3DS is ARM11, so there's a processor module in IDA. As for loader you'll have to search if somebody made one or implement it yourself. As for 3DS debugger plugin for IDA, I highly doubt it exists.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Anton Kukoba",
            "time": "Apr 3, 2018 at 8:35",
            "is_accepted": false,
            "comments": []
        }
    ]
}