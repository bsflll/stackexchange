{
    "title": "How to figure out which library a native JNI function is calling?",
    "link": "https://reverseengineering.stackexchange.com/questions/14503/how-to-figure-out-which-library-a-native-jni-function-is-calling",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to perform static analysis on Android framework code, and I'm coming across some Java methods that are calling JNI functions. How do I figure out which native libraries these functions reside in?\n </p>\n <p>\n  Thanks.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 2,
    "views": "2k",
    "tags": [
        "android",
        "libraries"
    ],
    "user": "user1118764",
    "time": "Jan 26, 2017 at 9:05",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I haven't touched Android in almost a year but IIRC:\n </p>\n <p>\n  All JNI libraries need to be loaded from Java side first e.g.\n </p>\n <pre><code>System.loadLibrary(\"hello-jni\");\n</code></pre>\n <p>\n  which translates to\n  <code>\n   invoke-virtual\n  </code>\n  in compiled Java.\n </p>\n <p>\n  Also, IDA Pro identifies fully qualified names in\n  <code>\n   .so\n  </code>\n  s it decompiles, so you will be able to figure out Java names for those JNI functions. See also\n  <a href=\"http://www.hexblog.com/?p=809\" rel=\"nofollow noreferrer\">\n   http://www.hexblog.com/?p=809\n  </a>\n  .\n </p>\n <p>\n  This tool may also be of help, although it's rather old\n  <a href=\"https://github.com/maaaaz/jnianalyzer\" rel=\"nofollow noreferrer\">\n   https://github.com/maaaaz/jnianalyzer\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Vitaly Osipov",
            "time": "Jan 28, 2017 at 6:42",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It's been a while, but there should be a static code block with the .so they are calling. I would need to disassemble a file using a shared library.\n </p>\n <p>\n  It will resemble:\n  <a href=\"https://stackoverflow.com/questions/8437106/java-jni-call-to-load-library\">\n   https://stackoverflow.com/questions/8437106/java-jni-call-to-load-library\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Community",
            "time": "May 23, 2017 at 12:37",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user1118764",
                    "text": "<span class=\"comment-copy\">Thanks. In the example given, would the static library be libndkfoo.so?</span>",
                    "time": null
                }
            ]
        }
    ]
}