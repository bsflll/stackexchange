{
    "title": "How to detect md5 and sha256?",
    "link": "https://reverseengineering.stackexchange.com/questions/20496/how-to-detect-md5-and-sha256",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I use\n  <code>\n   FindCrypt2\n  </code>\n  Ida plugin but it detect md4 and not md5 , and not detect sha256.\n </p>\n <ol>\n  <li>\n   <p>\n    How can I detect md5 in assembly?\n   </p>\n  </li>\n  <li>\n   <p>\n    How can I detect sha256 in assembly?\n   </p>\n  </li>\n </ol>\n <p>\n  thanks\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "939",
    "tags": [
        "ida",
        "assembly",
        "hash-functions"
    ],
    "user": "Uiomkokf",
    "time": "Jan 28, 2019 at 20:31",
    "comments": [
        {
            "user": "NirIzr",
            "text": "<html><body><span class=\"comment-copy\">\n Your intention is a little unclear to me. Do you mean to say it generally doesn't detect MD5s (i.e. it says so in it's documentation), that you know it failed detecting an implementation of MD5, or that it didn't find an implementation of MD5 in a given program?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "peter ferrie",
            "text": "<html><body><span class=\"comment-copy\">\n the simplest way might be to look for the constants like 0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can usually spot MD5 quite easily by looking for a huge function. It tends to be the biggest function in the whole binary. That's the\n  <code>\n   MD5_Process()\n  </code>\n  (if I recall the name correctly) function which compilers like to unroll completely, thus making it huge.\n </p>\n <p>\n  Generally, typical hash functions have 3 distinct functions:\n </p>\n <ul>\n  <li>\n   An init function setting up the hash context\n  </li>\n  <li>\n   An update function processing data and updating the hash context\n  </li>\n  <li>\n   A finish function generating the final hash from the hash context\n  </li>\n </ul>\n <p>\n  Both MD5 and SHA256 use magic constants in their init function. You should try to find a C source for either, look for the init functions and the constants (usually hidden in some macro) and then search for those constants in your disassembly.\n </p>\n <p>\n  This is general advice for cryptographic stuff. Find sourcecode, look for distinct constants/patterns and then see if you can find them in disassembly.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Johann Aydinbas",
            "time": "Jan 28, 2019 at 21:20",
            "is_accepted": false,
            "comments": []
        }
    ]
}