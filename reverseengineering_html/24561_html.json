{
    "title": "How can I get classes from \"protected\" JAR file?",
    "link": "https://reverseengineering.stackexchange.com/questions/24561/how-can-i-get-classes-from-protected-jar-file",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to get classes from JAR file / actually running JVM machine but:\n </p>\n <p>\n  When I'm trying to open JAR file using for example 7Zip I dont see any classes. After unzip Manifest file is empty too.\n </p>\n <p>\n  When I'm trying to \"dump\" classes from running JVM machine, I got \"very funny\" named - empty classes (not really empty, but contains info like \"gtfo\" etc..)\n </p>\n <p>\n  JD-Gui showed nothing - just nothing.\n </p>\n <p>\n  Around month ago, when I tried to open it using 7Zip, there was classes with same name, and custom extension.\n </p>\n <p>\n  What should I do, and what tools do You recommend for actions like this?\n </p>\n <p>\n  Link:\n  <a href=\"https://drive.google.com/file/d/1qhfEXu-ITQLW1mi55hMqnHmWt9BM5ur3/view\" rel=\"nofollow noreferrer\">\n   https://drive.google.com/file/d/1qhfEXu-ITQLW1mi55hMqnHmWt9BM5ur3/view\n  </a>\n </p>\n <p>\n  EDIT: Every decompiler I tested show info like this:\n </p>\n <blockquote>\n  <p>\n   mv.visitMethodInsn(INVOKESTATIC, \"net/minecraft/client/main/Main\",\n\"\\u0000extends throws try goto 8 \n 9 * package * + finally return\nstatic * \" float abstract | transient \n synchronized catch =\nstrictfp transient static extends while final long ! 0 throws & \n %\ndouble 4 this if const \n interface ' ^ ~ do 1 ] % ? throws super\nlong\", \"(Ljava/lang/String;)Ljava/lang/String;\", false)\n  </p>\n </blockquote>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "698",
    "tags": [
        "java",
        "decompile"
    ],
    "user": "CospriMalice",
    "time": "Nov 21, 2020 at 1:49",
    "comments": [
        {
            "user": "Antimony",
            "text": "<html><body><span class=\"comment-copy\">\n Those \"very funny\" names are probably the actual names of the classfiles in the JAR\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "CospriMalice",
            "text": "<html><body><span class=\"comment-copy\">\n But \"extracted\" class names depends on method how I get them. When dumping classes  I got those funny names, but when tried JD-Gui or other \"extractors?\" I got fragments from poems or sth like that:\n <a href=\"https://i.imgur.com/sL9W6g3.png\" rel=\"nofollow noreferrer\">\n  i.imgur.com/sL9W6g3.png\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Antimony",
            "text": "<html><body><span class=\"comment-copy\">\n JD-Gui is really unreliable. Trust your zip extractor. Also, I'd recommend checking out the Krakatau disassembler:\n <a href=\"https://github.com/Storyyeller/Krakatau\" rel=\"nofollow noreferrer\">\n  github.com/Storyyeller/Krakatau\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "CospriMalice",
            "text": "<html><body><span class=\"comment-copy\">\n I got those output when trying to use decompiler and no result in output directory.\n <a href=\"https://pastebin.com/EGMbeUeN\" rel=\"nofollow noreferrer\">\n  pastebin.com/EGMbeUeN\n </a>\n Diassembler give the same error.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Antimony",
            "text": "<html><body><span class=\"comment-copy\">\n It appears that your Jar file is malformed then. If you upload it, then maybe I can take a look later.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The obfuscator probably used the '\\u0000' \"exploit\".\nThis character is known as NUL terminator and its used for terminate the length of a character string in C/C++.\nAll renamed classes will contain that character, this will confuse tools like 7Zip, WinRar etc..\n </p>\n <p>\n  Quick explanation:\n </p>\n <p>\n  =======\n </p>\n <p>\n  Original file names:\n </p>\n <ol>\n  <li>\n   Main.class\n  </li>\n  <li>\n   Main2.class\n  </li>\n  <li>\n   Main3.class\n  </li>\n </ol>\n <p>\n  Renamed file names:\n </p>\n <ol>\n  <li>\n   Main.class\\u0000.class -> 7Zip ->\n   <em>\n    Main.class\n   </em>\n   (\\u0000 is the string end so the other characters will be not displayed)\n  </li>\n  <li>\n   Main.class\\u0000\n   <strong>\n    2\n   </strong>\n   .class -> 7Zip ->\n   <em>\n    Main.class\n   </em>\n  </li>\n  <li>\n   Main.class\\u0000\n   <strong>\n    3\n   </strong>\n   .class -> 7Zip ->\n   <em>\n    Main.class\n   </em>\n  </li>\n </ol>\n <p>\n  =======\n </p>\n <p>\n  Try to use\n  <a href=\"https://github.com/TerriblePanda/JByteMod-Reborn\" rel=\"nofollow noreferrer\">\n   https://github.com/TerriblePanda/JByteMod-Reborn\n  </a>\n  or\n  <a href=\"https://github.com/GraxCode/threadtear\" rel=\"nofollow noreferrer\">\n   https://github.com/GraxCode/threadtear\n  </a>\n  to decompile your jar.\n </p>\n <p>\n  Probable obfuscator used:\n  <a href=\"https://paramorphism.dev/\" rel=\"nofollow noreferrer\">\n   https://paramorphism.dev/\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Yennefer",
            "time": "Sep 28, 2020 at 21:50",
            "is_accepted": false,
            "comments": [
                {
                    "user": "CospriMalice",
                    "text": "<span class=\"comment-copy\">wow, in my opinion it can be this one. I will test it in ~3days</span>",
                    "time": null
                },
                {
                    "user": "Princekin",
                    "text": "<span class=\"comment-copy\">Anyway, can you provide the jar?</span>",
                    "time": null
                },
                {
                    "user": "CospriMalice",
                    "text": "<span class=\"comment-copy\">Link was in comments, but added it and it's in post now</span>",
                    "time": null
                },
                {
                    "user": "Princekin",
                    "text": "<span class=\"comment-copy\">I can confirm my theory. The classes starts with \\u0000.</span>",
                    "time": null
                }
            ]
        }
    ]
}