{
    "title": "Finding address from function name",
    "link": "https://reverseengineering.stackexchange.com/questions/9169/finding-address-from-function-name",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  By checking the human-readable strings in my target application, I found several interesting function names:\n </p>\n <pre><code>...\nDataIntegrityError\nGetObjectIdsOfDuplicateLinksErrors\nGetInvalidClusterIdsExists\nMain\nIsCommandLineInvalid\nShowDebugOnlyOptions\nDoDecrypt\nIStorageLogger\nDoExport\nDoImport\nIsDebugOptionActive\nGetRootPath\n...\n</code></pre>\n <p>\n  Using Immunity Debugger (or any other free debugger, IDA doesn't appear to be compatible with my target application), how can I jump to one of these functions, say\n  <code>\n   DoDecrypt\n  </code>\n  ?\n </p>\n <p>\n  I can only find commands to jump to an address, so how can I find a function's address from it's name?\n </p>\n</div>\n</body></html>",
    "votes": "6",
    "answers": 1,
    "views": "7k",
    "tags": [
        "windows",
        "immunity-debugger",
        "functions",
        "address"
    ],
    "user": "Juicy",
    "time": "Jun 18, 2015 at 0:16",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <h2>\n  Ollydbg\n </h2>\n <ul>\n  <li>\n   <p>\n    if you want to search references for intermodular functions (calls to dll libraries) , go to : searche for -> All intermodular calls.\n   </p>\n  </li>\n  <li>\n   <p>\n    if you want to search for all readable labels (including that every human readable function) go to : searche for -> Name in all modules , or current module.\n   </p>\n  </li>\n </ul>\n <p>\n  <img alt=\"enter image description here\" src=\"https://i.sstatic.net/rTlaC.gif\"/>\n </p>\n</div>\n</body></html>",
            "votes": "8",
            "user": "Abr001am",
            "time": "Jun 18, 2015 at 4:19",
            "is_accepted": false,
            "comments": []
        }
    ]
}