{
    "title": "Recovering variable name in debugger",
    "link": "https://reverseengineering.stackexchange.com/questions/11995/recovering-variable-name-in-debugger",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This question somehow relates to my previous\n  <a href=\"https://reverseengineering.stackexchange.com/questions/11990/reversing-qt-application\">\n   question\n  </a>\n  , but now I have a binary which is not stripped.\n </p>\n <p>\n  Let's say I have the following code snippet\n </p>\n <pre><code>QString my_variable(\"almafa\");\nqDebug() << my_variable;\n</code></pre>\n <p>\n  Before calling the\n  <code>\n   <<\n  </code>\n  operator I expect that either\n  <code>\n   rsi\n  </code>\n  or\n  <code>\n   rdi\n  </code>\n  to contain the address of\n  <code>\n   my_variable\n  </code>\n  . Correct me if I am wrong.\n </p>\n <pre><code>   0x0000000000400aca <+100>:    lea    -0x60(%rbp),%rdx\n   0x0000000000400ace <+104>:    lea    -0x50(%rbp),%rax\n   0x0000000000400ad2 <+108>:    mov    %rdx,%rsi\n   0x0000000000400ad5 <+111>:    mov    %rax,%rdi\n   0x0000000000400ad8 <+114>:    callq  0x400d40 <QDebug::operator<<(QString const&)>\n</code></pre>\n <p>\n  <code>\n   strings a.out | grep my_variable\n  </code>\n  returns\n  <code>\n   my_variable\n  </code>\n  , so it is present in the executable. Is it somehow possible to ask\n  <code>\n   gdb\n  </code>\n  (or any other linux debugger) what is the variable name which belongs to a given address?\n  <code>\n   my_variable\n  </code>\n  is recognized by\n  <code>\n   gdb\n  </code>\n  since command\n  <code>\n   print my_variable\n  </code>\n  is working.\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "2k",
    "tags": [
        "gdb"
    ],
    "user": "robert",
    "time": "Apr 13, 2017 at 12:49",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I was trying amritanshu's answer using the following code:\n </p>\n <pre><code>int z;\nint main() \n{\n    int x;\n    x = 5;\n    z = 6;\n    return 0; \n}\n</code></pre>\n <p>\n  Please note that z is a global variable and x is a local variable.  I ran the program in gdb, paused execution of the program at the line\n  <strong>\n   x = 5\n  </strong>\n  . When I used the command\n </p>\n <pre><code>info address z\n</code></pre>\n <p>\n  I got the following response:\n </p>\n <pre><code>Symbol \"z\" is static storage at address 0x601030.\n</code></pre>\n <p>\n  And when I typed:\n </p>\n <pre><code>info symbol 0x601030\n</code></pre>\n <p>\n  GDB displayed:\n </p>\n <pre><code>z in section .bss\n</code></pre>\n <p>\n  So, the\n  <strong>\n   info symbol address\n  </strong>\n  command worked for me when examining a global variable.  But, I wasn't able to do the same thing for the local variable\n  <strong>\n   x\n  </strong>\n  .  I determined the address of\n  <strong>\n   x\n  </strong>\n  using the following command:\n </p>\n <pre><code>print &x\n</code></pre>\n <p>\n  When I used the address that was displayed in the\n  <strong>\n   info symbol\n  </strong>\n  command, GDB displayed\n </p>\n <pre><code>No symbol matches ...\n</code></pre>\n <p>\n  So, it may depend on whether the address your examining is used for a global or local variable.  As a workaround, you can try using the command\n  <a href=\"https://sourceware.org/gdb/current/onlinedocs/gdb/Frame-Info.html#Frame-Info\" rel=\"nofollow\">\n   info locals\n  </a>\n  , and then use the\n  <strong>\n   print &\n   <em>\n    variable\n   </em>\n  </strong>\n  command on each local variable that is displayed.\n </p>\n <p>\n  GDB documentation on the info commands related to examining the symbol table can be found at\n  <a href=\"https://sourceware.org/gdb/current/onlinedocs/gdb/Symbols.html#Symbols\" rel=\"nofollow\">\n   Examining the Symbol Table\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "ashleydc",
            "time": "Mar 17, 2016 at 15:28",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  To identify the nearest symbol for a given address you can try \"info\" command:\n </p>\n <p>\n  info symbol address\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "amritanshu",
            "time": "Feb 11, 2016 at 17:52",
            "is_accepted": false,
            "comments": []
        }
    ]
}