{
    "title": "Firmware disassembler for c-sky processor (ck803s)",
    "link": "https://reverseengineering.stackexchange.com/questions/32676/firmware-disassembler-for-c-sky-processor-ck803s",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  can you tell me why objdump does not correctly disassemble the firmware for the C-SKY (ck803s) processor? what is .long: between the lines, unknown instructions? or am I setting the parameters for objdump incorrectly? here are mine: ./objdump -D -b binary -m csky:cs803 -EL firmware.bin\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/HKxkC.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/HKxkC.jpg\"/>\n  </a>\n </p>\n <p>\n  from off. sources use CK803S processor\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/VpNPu.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/VpNPu.jpg\"/>\n  </a>\n </p>\n <p>\n  this is how the bootloader works\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/7UutO.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/7UutO.jpg\"/>\n  </a>\n </p>\n <p>\n  The firmware is launched from the specified address at offset 0x04, look at the dump merged from the flash drive\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/dd0ov.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/dd0ov.jpg\"/>\n  </a>\n </p>\n <p>\n  objdump output\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/9l5dQ.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/9l5dQ.jpg\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "203",
    "tags": [
        "firmware-analysis"
    ],
    "user": "Andynvkz",
    "time": "Jan 29, 2024 at 13:32",
    "comments": [
        {
            "user": "Rup",
            "text": "<html><body><span class=\"comment-copy\">\n Are you sure that’s a code segment? I haven’t used objdump for ages, but it does say data at the top not code. Do you know what the entry point for the loaded firmware is?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Andynvkz",
            "text": "<html><body><span class=\"comment-copy\">\n There is no 32-bit instruction from the entire dump\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Andynvkz",
            "text": "<html><body><span class=\"comment-copy\">\n I had an idea to write my own disassembler, but then the first instruction is 0xC001112C, according to the description this is a 32-bit instruction, this is indicated by bits 30 and 31, but I did not find such an instruction in the documentation\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Andynvkz",
            "text": "<html><body><span class=\"comment-copy\">\n Is it possible to tell objdump that the data and instructions are 32 bit? it even selects the data as 16-bit little-endian\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "jsotola",
            "text": "<html><body><span class=\"comment-copy\">\n please do not post pictures of text ... post the text instead ...\n <a href=\"https://idownvotedbecau.se/imageofcode\" rel=\"nofollow noreferrer\">\n  idownvotedbecau.se/imageofcode\n </a>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You've asked multiple questions. I don't know that version of\n  <code>\n   objdump\n  </code>\n  enough to comment on whether its a bug or missing option.\n </p>\n <p>\n  However, I can explain how the 32-bit instructions work.\n </p>\n <p>\n  The c-sky instruction stream is a series of 16-bit words.  If bits 15 and 14 of the instruction word are NOT both\n  <code>\n   1\n  </code>\n  s then it's a 16-bit instruction.\nHowever, if bits 15 and 14 of the instruction word are both\n  <code>\n   1\n  </code>\n  s then it's a 32-bit instruction with the low 16-bits of the instruction in the following word.\n </p>\n <p>\n  Consider a hypothetical instruction with hex coding\n  <code>\n   C1234567\n  </code>\n  .\n </p>\n <p>\n  This will be stored as two 16-bit words\n  <code>\n   C123\n  </code>\n  and\n  <code>\n   4567\n  </code>\n  in that order\n </p>\n <p>\n  In a big-endian environment, this will be stored as the following bytes -\n </p>\n <pre><code>C1 23 45 67\n</code></pre>\n <p>\n  In a little-endian environment, this will be stored as the following bytes -\n </p>\n <pre><code>23 C1 67 45\n</code></pre>\n <hr/>\n <p>\n  In your firmware above the instruction at\n  <code>\n   3001000\n  </code>\n  is correct but the following instruction at\n  <code>\n   3001002\n  </code>\n  is actually\n  <code>\n   C0016420\n  </code>\n </p>\n <pre><code>03001000: 112c      lrw     r1, 0x80000100\n03001002: c0016420  mtcr    r1, cr<0,0>\n</code></pre>\n <p>\n  Writing to control registers is very plausible in boot/init code.\n </p>\n <p>\n  The later 32-bit instruction with .long in the objdump output also seem to make sense.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Ian Cook",
            "time": "Feb 10, 2024 at 16:39",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The whole problem is that all versions of objdump and even llvm-objdump incorrectly disassemble 32-bit instructions of C-SKY processors, I managed to find a working objdump version 2.27 on the website\n  <a href=\"https://www.xrvm.cn/\" rel=\"nofollow noreferrer\">\n   https://www.xrvm.cn/\n  </a>\n  there is also an Eclipse-based IDE\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/fZfAe.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/fZfAe.jpg\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Andynvkz",
            "time": "Feb 24, 2024 at 4:19",
            "is_accepted": true,
            "comments": []
        }
    ]
}