{
    "title": "IDAPython - Find the start of an undefined code blob",
    "link": "https://reverseengineering.stackexchange.com/questions/21828/idapython-find-the-start-of-an-undefined-code-blob",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm currently working on an IDAPython script that aims to remove various rogue-byte from the malware that I'm reversing.\n </p>\n <p>\n  I'm in a case where some portions of my code contain this type of anti-disassembly trick:\n  <a href=\"https://i.sstatic.net/sKd7W.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/sKd7W.png\"/>\n  </a>\n </p>\n <p>\n  The fact is that without patching the rogue byte, I can't define this undefined blob as a proper function (P shortcut).\n </p>\n <p>\n  So the script is basically doing this:\n </p>\n <ul>\n  <li>\n   <p>\n    Find the following opcode: \"\n    <em>\n     90 C3 FE\n    </em>\n    \" (for \"\n    <em>\n     nop, retn, FE\n    </em>\n    \", FE is the rogue-byte).\n   </p>\n  </li>\n  <li>\n   <p>\n    Patch the \"FE\" byte and replace it by a NOP (\n    <em>\n     0x90\n    </em>\n    ).\n   </p>\n  </li>\n  <li>\n   <p>\n    Define the new NOP as code.\n   </p>\n  </li>\n </ul>\n <p>\n  As all the function having this rogue-bytes in it are undefined, I now need to define them as proper function.\n </p>\n <p>\n  But I don't know how to go back to the address of the beginning of the undefined function. For instance, that's the result after executing my IDAPython script:\n  <a href=\"https://i.sstatic.net/VyosA.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/VyosA.png\"/>\n  </a>\n </p>\n <p>\n  The rogue-byte is indeed patch, but now I just need to find the address of \"\n  <em>\n   loc_410687\n  </em>\n  \".\n </p>\n <p>\n  How can I get this address within my IDAPython script?\n </p>\n <p>\n  <em>\n   (I specify that not all of the function that contains the rogue-byte start by those 3 xors, that's a coincidence. So I can't look for them in order to get the start of the function.)\n  </em>\n </p>\n <p>\n  Any idea?\n </p>\n <p>\n  Thanks!\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "682",
    "tags": [
        "ida",
        "malware",
        "idapython"
    ],
    "user": "Guillaume",
    "time": "Aug 3, 2019 at 2:01",
    "comments": [
        {
            "user": "Johann Aydinbas",
            "text": "<html><body><span class=\"comment-copy\">\n That's the PonyLoader btw. for which the source got leaked:\n <a href=\"https://github.com/nyx0/Pony/blob/master/source/PonySrc/Pony.asm\" rel=\"nofollow noreferrer\">\n  github.com/nyx0/Pony/blob/master/source/PonySrc/Pony.asm\n </a>\n Search for \"AntiDisasmTrick\" - at least in the sourcecode those 3 xors are fixed.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Guillaume",
            "text": "<html><body><span class=\"comment-copy\">\n Yeah, that's indeed a pony sample! That's amazing how you recognize it with only 20 instructions :) Thanks for the source code, it's really helping me\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "w s",
            "text": "<html><body><span class=\"comment-copy\">\n Did you try to reanalyze program after all patching is done ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Guillaume",
            "text": "<html><body><span class=\"comment-copy\">\n Yes, I started the analysis even before the rogue-byte things, I'm just trying to make the code cleaner and more pleasant to look at ^^ It even work perfectly in a debugger, the rogue-byte are not affecting anything !\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}