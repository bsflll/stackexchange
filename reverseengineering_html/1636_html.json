{
    "title": "Advantages of OllyDbg 1 over OllyDbg 2",
    "link": "https://reverseengineering.stackexchange.com/questions/1636/advantages-of-ollydbg-1-over-ollydbg-2",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I see that most RE tutorials around the web that give RE examples use OllyDbg 1, even if the tutorial was written after the release of OllyDbg 2.\n </p>\n <p>\n  Is there any particular reason for that? Is version 2 too buggy, or were some of the features dropped?\n </p>\n</div>\n</body></html>",
    "votes": "24",
    "answers": 3,
    "views": "11k",
    "tags": [
        "ollydbg"
    ],
    "user": "Mellowcandle",
    "time": "Apr 7, 2013 at 9:19",
    "comments": [
        {
            "user": "RobotHumans",
            "text": "<html><body><span class=\"comment-copy\">\n It mystifies me as well when people have already written plug-in converters for ImmDbg, which I honestly prefer for the python bindings.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "asheeshr",
            "text": "<html><body><span class=\"comment-copy\">\n \"Why are more tutorials using version A rather than version B ?\" cannot be objectively answered, in my opinion. Voting to close.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Mellowcandle",
            "text": "<html><body><span class=\"comment-copy\">\n I don't agree. Usually these kind of things boil down to a very specific reason.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Well, there is another reason. Historical one, actually.\n </p>\n <p>\n  At end of 2001, when the first versions of Ollydbg were presented, there was SoftICE, which was at its end, and IDA was not that popular yet. So OllyDBG became sort of the de-facto replacement for the main black-hat tool for cracking\\patching\\keygen-writing. And OllyDBG 1.x is a good, handy tool.\n </p>\n <p>\n  Since then, the development of OllyDBG became a slow process, with lots of delays. When it was finally announced, there appeared to be some problems, plug-ins compatibility etc. You may see the  story at OllyDBG 2.x\n  <a href=\"http://www.ollydbg.de/version2.html\">\n   webpage\n  </a>\n  on offsite.\n </p>\n <p>\n  On the other hand, IDA Pro of Hex-Rays proved itself as a useful tool, very handy.\n </p>\n <p>\n  The bottom line - when in June 2010 version 2.0 of OllyDBG was released, it was buggy, didn't support old plug-ins and there were no reason to change to the new version, at least for me. In addition, many manuals were available for version 1.x, and the benefits of version 2.0 for tasks OllyDBG was used for were not attractive enough, IMHO.\n </p>\n <p>\n  End of story :)\n </p>\n</div>\n</body></html>",
            "votes": "25",
            "user": "APerson",
            "time": "Apr 7, 2013 at 4:09",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Jonathon Reinhart",
                    "text": "<span class=\"comment-copy\">I really don't see how IDA fits into the equation here. IDA is a static analysis tool while Ollydbg is a debugger. Sure Ollydbg does basic flow analysis, and IDA can talk to debuggers, but they are very different tools.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The main reason I believe is the scripts and plugins that exist for OllyDbg 1. Tuts4you.com has around 250 plugins for version 1 and only 30 for version 2.\n </p>\n <ul>\n  <li>\n   <a href=\"http://tuts4you.com/download.php?list.9\">\n    Ollydbg Version 1 plugins\n   </a>\n   .\n  </li>\n  <li>\n   <a href=\"http://tuts4you.com/download.php?list.94\">\n    Ollydbg Version 2 plugins\n   </a>\n   .\n  </li>\n </ul>\n <p>\n  Also the feature list is not great anymore to make someone change from version 1 to the new version. If someone is changing from OllyDbg v1 to something else, WinDbg could be a choice.\n </p>\n</div>\n</body></html>",
            "votes": "20",
            "user": "Igor Skochinsky",
            "time": "Apr 6, 2013 at 18:28",
            "is_accepted": false,
            "comments": [
                {
                    "user": "DOD",
                    "text": "<span class=\"comment-copy\">or  <a href=\"http://x64dbg.com/\" rel=\"nofollow noreferrer\">x64dbg</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Hiï¼Œthe most important reason is: debugging / reversing is quite abstruse and difficult, when you see a full screen assembly codes, and then suddently, they carsh/ fatals / freeze ... You just have no any idea to go on. So you have to search the answer in Internet, but most informations are all about Ollydbg 1.1, and there are lots of plugins to help you resolve the problem, enen though you don't know any secret inside the plugin or else.\n </p>\n <p>\n  So, would you take your advantage to try the v2.0, face to helpless situation lonely ?\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "klise",
            "time": "Jul 15, 2016 at 12:43",
            "is_accepted": false,
            "comments": []
        }
    ]
}