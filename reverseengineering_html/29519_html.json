{
    "title": "What is \"nullsub_XXX\" in vtable in IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/29519/what-is-nullsub-xxx-in-vtable-in-ida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  When I looking in a vtable structure in IDA pro, I know that\n  <code>\n   ___cxa_pure_virtual\n  </code>\n  means that the function is virtual.\n </p>\n <p>\n  But what does\n  <code>\n   nullsub_XXX\n  </code>\n  mean in a vtable structure?\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "671",
    "tags": [
        "ida",
        "c++",
        "static-analysis",
        "vtables"
    ],
    "user": "vtable",
    "time": "Nov 9, 2021 at 10:06",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <em>\n   Welcome to the Reverse engineering stack exchange Q&A site! Although you only asked about\n   <code>\n    nullsub_\n   </code>\n   , you described\n   <code>\n    ___cxa_pure_virtual\n   </code>\n   slightly incorrectly so I'll describe it as well\n  </em>\n </p>\n <h3>\n  nullsub_X\n </h3>\n <p>\n  IDA makes a minimal effort of providing meaningful, yet general, names for functions according to their implementation by adding a prefix or name for certain\n  <em>\n   types\n  </em>\n  of functions.\n </p>\n <p>\n  One such case is\n  <code>\n   nullsub\n  </code>\n  , which is a name automatically given (during the analysis phase) to all\n  <em>\n   empty\n  </em>\n  functions. Meaning functions that simply return without doing\n  <strong>\n   anything\n  </strong>\n  .\n </p>\n <p>\n  Additionally, since names are unique in IDA, when an in-use name is set to a function IDA will postfix it with an underscore and then an auto-incremented number (starting with 1).\n </p>\n <p>\n  If you're wondering why such functions should exist in the first place,\n  <a href=\"https://reverseengineering.stackexchange.com/questions/2420/what-are-nullsub-functions-in-ida/2422#2422\">\n   this\n  </a>\n  post answers that question quite diligently.\n </p>\n <h3>\n  ___cxa_pure_virtual\n </h3>\n <p>\n  This is a function implemented by\n  <a href=\"https://gcc.gnu.org/onlinedocs/libstdc++/\" rel=\"nofollow noreferrer\">\n   <code>\n    libstdc++\n   </code>\n  </a>\n  (and a similar function is implemented by other C++ standard libraries) as a place-holder to\n  <strong>\n   pure\n  </strong>\n  virtual functions in virtual function tables.\n </p>\n <p>\n  Although pure virtual functions have no implementation the compiler cannot eliminate the risk of pure virtual functions being called at run-time, and so a stub such as\n  <code>\n   ___cxa_pure_virtual\n  </code>\n  is used as a place-holder for all pure virtual functions, so that if it ever happens that a pure virtual function would be called at runtime, there an explicit handling (termination of the program with a somewhat meaningful crash, often).\n </p>\n</div>\n</body></html>",
            "votes": "6",
            "user": "NirIzr",
            "time": "Nov 11, 2021 at 12:59",
            "is_accepted": true,
            "comments": []
        }
    ]
}