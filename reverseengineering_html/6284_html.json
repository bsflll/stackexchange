{
    "title": "Add Section to pe file function error [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/6284/add-section-to-pe-file-function-error",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed.\n        </b>\n        This question is\n        <a href=\"/help/closed-questions\">\n         off-topic\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       Questions on\n       <b>\n        software development\n       </b>\n       are off-topic here, but can be asked on\n       <a href=\"http://stackoverflow.com/about\">\n        Stack Overflow\n       </a>\n       .\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2014-09-26 15:50:11Z\">\n        10 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/6284/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  I'm having some strange errors with the following function which adds a section to a pe executable. When I run the program I get the success message, when I proceed to try to open the executable in ollydbg I get an invalid file error, I then open it in LordPE and find that the section has been added and everything seems to be in order, when I again open the executable in ollydbg it opens the executable and I can see that the section has been added though all the fields aside from section name are set to 0. I have tried this many times and get the same result with different executables.\n </p>\n <pre><code>void addSection(char* fileName)\n{\nHANDLE hFile = CreateFile(fileName, GENERIC_READ | GENERIC_WRITE, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);\nif(hFile !=INVALID_HANDLE_VALUE){\n    DWORD fileSize = GetFileSize(hFile, NULL);\n    BYTE *byte = new BYTE[fileSize];\n    DWORD numberOfBytesReadTracker;\n    ReadFile(hFile, byte, fileSize, &numberOfBytesReadTracker, NULL);\n\n    IMAGE_DOS_HEADER *dosHeader = (IMAGE_DOS_HEADER*)byte;\n    IMAGE_NT_HEADERS *ntHeader = (IMAGE_NT_HEADERS*)((DWORD)byte+dosHeader->e_lfanew);\n    if(dosHeader->e_magic==IMAGE_DOS_SIGNATURE && ntHeader->Signature == IMAGE_NT_SIGNATURE){\n        IMAGE_FILE_HEADER *fileHeader = (IMAGE_FILE_HEADER*)((DWORD)byte+dosHeader->e_lfanew+sizeof(IMAGE_NT_SIGNATURE));\n        IMAGE_OPTIONAL_HEADER *optionalHeader = (IMAGE_OPTIONAL_HEADER*)((DWORD)byte+dosHeader->e_lfanew+sizeof(IMAGE_NT_SIGNATURE)+sizeof(IMAGE_FILE_HEADER));\n        IMAGE_SECTION_HEADER *sectionHeader = (IMAGE_SECTION_HEADER*)((DWORD)ntHeader+sizeof(IMAGE_NT_HEADERS));\n\n        const char *sectionName = \"AddedSec\";\n        ZeroMemory(&sectionHeader[fileHeader->NumberOfSections], sizeof(IMAGE_SECTION_HEADER));\n        CopyMemory(&sectionHeader[fileHeader->NumberOfSections].Name, sectionName, 8);\n        sectionHeader[fileHeader->NumberOfSections].Characteristics = 0x60500060;\n        sectionHeader[fileHeader->NumberOfSections].Misc.VirtualSize = 0x1000;\n        sectionHeader[fileHeader->NumberOfSections].VirtualAddress = sectionHeader[fileHeader->NumberOfSections-1].VirtualAddress+optionalHeader->SectionAlignment;\n        sectionHeader[fileHeader->NumberOfSections].SizeOfRawData = optionalHeader->FileAlignment;\n        sectionHeader[fileHeader->NumberOfSections].PointerToRawData = sectionHeader[fileHeader->NumberOfSections-1].PointerToRawData+sectionHeader[fileHeader->NumberOfSections-1].SizeOfRawData;\n\n        fileHeader->NumberOfSections = fileHeader->NumberOfSections+1;\n        optionalHeader->SizeOfImage = optionalHeader->SizeOfImage+alignToSectionAlignment(sectionHeader[fileHeader->NumberOfSections].Misc.VirtualSize, optionalHeader->SectionAlignment);\n        cout << \"ADDED SECTION\" << endl;\n        SetFilePointer(hFile, 0, NULL, FILE_BEGIN);\n        WriteFile(hFile, byte, fileSize, &numberOfBytesReadTracker, NULL);\n    }else{\n        cout << \"Is not a PE executbale\" << endl;\n    }\n    CloseHandle(hFile);\n}\n</code></pre>\n <p>\n  }\n </p>\n</div>\n</body></html>",
    "votes": "-1",
    "answers": 2,
    "views": "985",
    "tags": [
        "ollydbg",
        "c++"
    ],
    "user": "user28130",
    "time": "10 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <pre><code>IMAGE_SECTION_HEADER *sectionHeader = (IMAGE_SECTION_HEADER*)((DWORD)ntHeader+sizeof(IMAGE_NT_HEADERS));\n</code></pre>\n <p>\n  The line above is incorrect. It should be:\n </p>\n <pre><code>IMAGE_SECTION_HEADER *sectionHeader = (IMAGE_SECTION_HEADER*)((DWORD)ntHeader+sizeof(IMAGE_NT_SIGNATURE)+sizeof(IMAGE_FILE_HEADER)+fileHeader->SizeOfOptionalHeader);\n</code></pre>\n <p>\n  You're setting the\n  <code>\n   IMAGE_SCN_ALIGN_16BYTES\n  </code>\n  flag in\n  <code>\n   Characteristics\n  </code>\n  , though this is only valid for object files.\n </p>\n <pre><code>sectionHeader[fileHeader->NumberOfSections].VirtualAddress = sectionHeader[fileHeader->NumberOfSections-1].VirtualAddress+optionalHeader->SectionAlignment;\n</code></pre>\n <p>\n  The line above will cause problems if the last section in the original PE file has a virtual size greater than the section alignment.\n </p>\n <pre><code>sectionHeader[fileHeader->NumberOfSections].PointerToRawData = sectionHeader[fileHeader->NumberOfSections-1].PointerToRawData+sectionHeader[fileHeader->NumberOfSections-1].SizeOfRawData;\n</code></pre>\n <p>\n  The line above will cause problems if the last section in the original PE file has a raw size that is not a multiple of the file alignment.\n </p>\n <pre><code>fileHeader->NumberOfSections = fileHeader->NumberOfSections+1;\n</code></pre>\n <p>\n  The line above will cause problems if the original PE file had 65535 sections.\n </p>\n <pre><code>optionalHeader->SizeOfImage = optionalHeader->SizeOfImage+alignToSectionAlignment(sectionHeader[fileHeader->NumberOfSections].Misc.VirtualSize, optionalHeader->SectionAlignment);\n</code></pre>\n <p>\n  The line above should be:\n </p>\n <pre><code>optionalHeader->SizeOfImage = optionalHeader->SizeOfImage+alignToSectionAlignment(sectionHeader[fileHeader->NumberOfSections-1].Misc.VirtualSize, optionalHeader->SectionAlignment);\n</code></pre>\n <p>\n  Your code assumes that there's space between the last\n  <code>\n   IMAGE_SECTION_HEADER\n  </code>\n  and the beginning of the first section to add another\n  <code>\n   IMAGE_SECTION_HEADER\n  </code>\n  ; this isn't always the case.\n </p>\n <p>\n  Also, it's very likely that the new section's\n  <code>\n   PointerToRawData\n  </code>\n  +\n  <code>\n   SizeOfRawData\n  </code>\n  is greater than the size of the file, which will cause the loader to fail.\n </p>\n <p>\n  In the future, please post these types of programming questions to\n  <a href=\"https://stackoverflow.com/\">\n   https://stackoverflow.com/\n  </a>\n  instead.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Community",
            "time": "May 23, 2017 at 12:37",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Consider using\n  <code>\n   TitanEngine\n  </code>\n  (\n  <a href=\"https://bitbucket.org/mrexodia/titanengine-update\" rel=\"nofollow\">\n   https://bitbucket.org/mrexodia/titanengine-update\n  </a>\n  )\n </p>\n <p>\n  and its function\n  <code>\n   AddNewSection\n  </code>\n  or\n  <code>\n   AddNewSectionEx\n  </code>\n  .\n </p>\n <p>\n  Or have a look how its implemented there\n  <a href=\"https://bitbucket.org/mrexodia/titanengine-update/src/50379e53e9f3a1d9cf835e37e2fd7cbade61dc6a/TitanEngine/TitanEngine.PE.Section.cpp?at=master#cl-512\" rel=\"nofollow\">\n   https://bitbucket.org/mrexodia/titanengine-update/src/50379e53e9f3a1d9cf835e37e2fd7cbade61dc6a/TitanEngine/TitanEngine.PE.Section.cpp?at=master#cl-512\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "pHiL",
            "time": "Sep 23, 2014 at 12:00",
            "is_accepted": false,
            "comments": []
        }
    ]
}