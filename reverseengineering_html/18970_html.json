{
    "title": "Generate c like pseudo code from objdump output",
    "link": "https://reverseengineering.stackexchange.com/questions/18970/generate-c-like-pseudo-code-from-objdump-output",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Ida has a feature which generates pseudo code from assembly.\n </p>\n <p>\n  Is there a tool under Linux that make the same job, from objdump output for example ?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "2k",
    "tags": [
        "decompilation",
        "objdump"
    ],
    "user": "Bob5421",
    "time": "Aug 3, 2018 at 16:35",
    "comments": [
        {
            "user": "Twifty",
            "text": "<html><body><span class=\"comment-copy\">\n There is a utility called\n <code>\n  snowman\n </code>\n , but I'd recommend against it. The biggest hurdle, I guess, for any ASM to C converter are the calling conventions.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Thorbj√∏rn Ravn Andersen",
            "text": "<html><body><span class=\"comment-copy\">\n I believe the general consensus is that raw machine code has too much information discarded to allow correctly deriving e.g. C code in all cases.   If you know the compiler generating the machine code you are looking at intimately, you may possibly use pattern recognition to figure out which part of the compiler generated each instruction and get more information that way.  In some cases that may be enough.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  No.\n </p>\n <p>\n  IDA generates C-like pseudo code from\n  <em>\n   object code\n  </em>\n  . That is, the input to the decompiler is object code - not assembly language, which is represented in ASCII - and the output is a high-level language approximation.\n </p>\n <p>\n  Note that assembly language is a human-readable mnemonic representation of object code operation codes (opcodes) and operands.\n </p>\n <p>\n  Since decompilation is a major technical challenge, no Linux utilities have been developed to accomplish decompilation.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "julian",
            "time": "Aug 3, 2018 at 23:58",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Bob5421",
                    "text": "<span class=\"comment-copy\">In fact what i need is to replace esp offsets by a local variable name</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@Bob5421 then you should make a question about your <i>real</i> problem</span>",
                    "time": null
                }
            ]
        }
    ]
}