{
    "title": "Sniffing traffic of Outlook android app",
    "link": "https://reverseengineering.stackexchange.com/questions/13508/sniffing-traffic-of-outlook-android-app",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have been trying to get the traffic of the Outlook email app for Android to show up in my Fiddler for months with no success. Although some traffic from the app does show in Fiddler, but not all. For example when I send a message I see the following POST request\n </p>\n <pre><code>POST https://mobile.pipe.aria.microsoft.com/Collector/3.0/ HTTP/1.1\nx-apikey: MYAPIKEY\nContent-Type: application/bond-compact-binary\nClient-Id: JavaLibrary\nsdk-version: ACT-Android-Java-no-2.0.7.0-ECS\nUser-Agent: Dalvik/2.1.0 (Linux; U; Android 5.1.1; Nexus 4 Build/LMY48T)\nHost: mobile.pipe.aria.microsoft.com\nConnection: Keep-Alive\nAccept-Encoding: gzip\nContent-Length: 1943\n\nK  f ՝\u0010 2 w  2h  EP^     \u0013 ^K+\nIact_default_source $4f9c4caf-b12c-46b6-8d69-160f4ed5ea7d   ۿ U   \n)$3c249ec9-dc4e-4c1a-8a94-0828b6d0d9deq  ۿ U custom \fsend_message \n        \u0010EventInfo.Sourceact_default_sourceDeviceInfo.OsName AndroidCustom.first_launch_date\n2016-09-14Custom.correlation_id\u001043c97824f9e48f50EventInfo.Sequence138\u0010AppInfo.Languageen-USDeviceInfo.OsBuild 2237560DeviceInfo.NetworkCost UnknownUserInfo.Languageen-USUserInfo.TimeZone-04:00\u0013Custom.OutlookOAuth1\u000eCustom.MsDrive1\u000eEventInfo.Time2016-09-15T03:54:41.704Z\u000fAppInfo.Version2.1.65    Custom.ci\n1x0RPaHRLo\u000fDeviceInfo.MakeLGE\u0010DeviceInfo.Model Nexus 4\nDeviceInfo.Id\u001043c97824f9e48f50\nSession.Id$3722b64a-0582-4709-9e14-230036b55856DeviceInfo.SDKUid$60a51498-07e5-4d46-92b4-574023226050\neventpriorityNormal\u0010EventInfo.InitId$79f1ffb3-fa19-4f5d-b88b-714b862e0cadEventInfo.SdkVersionACT-Android-Java-no-2.0.7.0-ECS\u000eEventInfo.Name\fsend_messageDeviceInfo.OsVersion5.1.1DeviceInfo.NetworkTypeWifiCustom.has_attachment0   \n  )$79e9da80-8d9c-4a35-85c9-e0baec49e4a5q  ۿ U custom feature_flags_test \n        \u0010EventInfo.Sourceact_default_sourceDeviceInfo.OsName AndroidCustom.first_launch_date\n2016-09-14Custom.correlation_id\u001043c97824f9e48f50EventInfo.Sequence139\u0010AppInfo.Languageen-USDeviceInfo.OsBuild 2237560DeviceInfo.NetworkCost UnknownUserInfo.Languageen-USCustom.feature_enabledyesUserInfo.TimeZone-04:00\u0013Custom.OutlookOAuth1\u000eCustom.MsDrive1\u000eEventInfo.Time2016-09-15T03:54:41.761Z\u000fAppInfo.Version2.1.65 Custom.ci\n1x0RPaHRLo\u000fDeviceInfo.MakeLGE\u0010DeviceInfo.Model Nexus 4\nDeviceInfo.Id\u001043c97824f9e48f50\nSession.Id$3722b64a-0582-4709-9e14-230036b55856DeviceInfo.SDKUid$60a51498-07e5-4d46-92b4-574023226050\neventpriorityNormal\u0010EventInfo.InitId$79f1ffb3-fa19-4f5d-b88b-714b862e0cadEventInfo.SdkVersionACT-Android-Java-no-2.0.7.0-ECS\u000eEventInfo.Namefeature_flags_testDeviceInfo.OsVersion5.1.1DeviceInfo.NetworkTypeWifi     \n</code></pre>\n <p>\n  But I do not see the text of the email in Fiddler. I don't think they are using SSL Pinning. From what I have seen apps that use SSL Pinning any attempt for man-in-the-middle attack would cause errors on the app. I am not getting any errors on the app and the email does get delivered. But I can not capture any traffic related to the email sent.\n </p>\n <p>\n  Any ideas how I can capture all the traffic for the Outlook Android app?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 2,
    "views": "3k",
    "tags": [
        "android",
        "sniffing"
    ],
    "user": "Arya",
    "time": "Sep 15, 2016 at 4:12",
    "comments": [
        {
            "user": "Arya",
            "text": "<html><body><span class=\"comment-copy\">\n @kennytm but I am checking the requests not the responses. Would that happen to requests too?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I believe the key here is \"Content-Type: application/bond-compact-binary\"\n </p>\n <p>\n  Have a look at\n  <a href=\"https://microsoft.github.io/bond/manual/bond_cpp.html#protocols\" rel=\"nofollow noreferrer\">\n   https://microsoft.github.io/bond/manual/bond_cpp.html#protocols\n  </a>\n  , maybe that might help. A plugin for Fiddler or ZAP Proxy would be great!\n </p>\n <blockquote>\n  <p>\n   Protocols\n  </p>\n  <p>\n   Bond protocols are pluggable, allowing application to choose the most\n  appropriate encoding format. Bond supports three kinds of protocols:\n  </p>\n  <p>\n   Tagged protocols\n  </p>\n  <p>\n   Tagged protocols interleave schema metadata within the payload. This\n  makes the payload self-describing, allowing consumers to interpret it\n  even without knowing the schema used by the producer.\n  </p>\n  <p>\n   Untagged protocols\n  </p>\n  <p>\n   Untagged protocols serialize only data and thus require that consumers\n  know the payload schema via some out-of-band mechanism. Untagged\n  protocols are often used in storage scenarios because they allow\n  storing a schema once (e.g. in a system table in a database) and thus\n  eliminating metadata overhead from many records using the same schema.\n  </p>\n  <p>\n   DOM-based protocols\n  </p>\n  <p>\n   DOM-based protocol parse whole payload into an in-memory Data Object\n  Model which then is queried during deserialization. Typically this\n  kind of protocol is used to implement text based encoding such as JSON\n  or XML.\n  </p>\n  <p>\n   Compact Binary\n  </p>\n  <p>\n   A binary, tagged protocol using variable integer encoding and compact\n  field header. A good choice, along with Fast Binary, for RPC\n  scenarios.\n  </p>\n  <p>\n   Implemented in CompactBinaryReader and CompactBinaryWriter classes.\n  </p>\n  <p>\n   Version 2 of Compact Binary adds length prefix for structs. This\n  enables deserialization of bonded and skipping of unknown struct\n  fields in constant time. The trade-off is double pass encoding,\n  resulting in up to 30% slower serialization performance.\n  </p>\n  <p>\n   See also Compact Binary encoding reference.\n  </p>\n </blockquote>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Alexandre Dumont",
            "time": "Jan 12, 2017 at 0:23",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You could use\n  <a href=\"https://mitmproxy.org/\" rel=\"nofollow noreferrer\">\n   mitmproxy\n  </a>\n  .\n </p>\n <ul>\n  <li>\n   Use a local wifi\n  </li>\n  <li>\n   Install mitmproxy on a laptop which connects to that wifi\n   <a href=\"http://docs.mitmproxy.org/en/stable/introduction.html\" rel=\"nofollow noreferrer\">\n    doc\n   </a>\n  </li>\n  <li>\n   On your smartphone, install the CA certificate provided by mitmproxy. Then, connect the smartphone to your wifi, and specify your laptop as proxy. The default proxy port for mitmproxy is 8080.\n  </li>\n  <li>\n   Launch your Outlook Android app, and view the HTTP(S) requests in the mitmproxy console on the laptop.\n  </li>\n </ul>\n</div>\n</body></html>",
            "votes": "0",
            "user": "user369353",
            "time": "Jan 13, 2017 at 11:39",
            "is_accepted": false,
            "comments": []
        }
    ]
}