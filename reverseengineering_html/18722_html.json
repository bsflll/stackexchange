{
    "title": "How to unpack(carve) files from a camera firmware .bin file? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/18722/how-to-unpackcarve-files-from-a-camera-firmware-bin-file",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <div>\n  <aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n   <div class=\"d-flex fd-column fw-nowrap\">\n    <div class=\"d-flex fw-nowrap\">\n     <div class=\"flex--item wmn0 fl1 lh-lg\">\n      <div class=\"flex--item fl1 lh-lg\">\n       <div>\n        <b>\n         Closed.\n        </b>\n        This question is\n        <a href=\"/help/closed-questions\">\n         off-topic\n        </a>\n        . It is not currently accepting answers.\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n   <hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n   <div class=\"fw-nowrap fc-black-500\">\n    <div class=\"d-flex fd-column lh-md\">\n     <div class=\"mb0 d-flex\">\n      <div class=\"flex--item mr8\">\n       <svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\">\n        <path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\">\n        </path>\n       </svg>\n      </div>\n      <p>\n       Questions asking for help\n       <b>\n        reverse-engineering a specific system\n       </b>\n       are off-topic unless they demonstrate an understanding of the concepts involved and clearly identify a specific problem.\n      </p>\n     </div>\n     <div class=\"mb0 mt6 d-flex\">\n      <p class=\"ml24 pl2\">\n       Closed\n       <span class=\"relativetime\" title=\"2018-07-10 08:31:49Z\">\n        6 years ago\n       </span>\n       .\n      </p>\n     </div>\n     <div class=\"ml24 pl2\">\n     </div>\n    </div>\n   </div>\n   <div class=\"mt24 d-flex gsx gs8\">\n    <a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/18722/edit\">\n     Improve this question\n    </a>\n   </div>\n  </aside>\n </div>\n <p>\n  Would anyone be willing to help me with carving/extracting files from a firmware file? I've tried to extract with\n  <code>\n   binwalk\n  </code>\n  , but it didn't extract everything. I checked it out with ent to see if there's any encryption and there doesn't appear to be any from what I can tell.\n </p>\n <p>\n  It's firmware for\n  <a href=\"https://www.insta360.com/product/insta360-one/?inspm=77c1c2.6666cd.0.0\" rel=\"nofollow noreferrer\">\n   Insta360 One\n  </a>\n  camera and I want to inspect the file system/code to see how it works.\n  <code>\n   Binwalk\n  </code>\n  enumerates a unix filesystem, and I'm pretty sure the thing just runs on an ARM processor. Any help would be appreciated.\n </p>\n <p>\n  Here's a link to the .bin file\n </p>\n <p>\n  <a href=\"https://www.dropbox.com/s/ut9is9k1t6ih0gf/Insta360FW.bin?dl=0\" rel=\"nofollow noreferrer\">\n   https://www.dropbox.com/s/ut9is9k1t6ih0gf/Insta360FW.bin?dl=0\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "4k",
    "tags": [
        "firmware",
        "unpacking"
    ],
    "user": "FakeHelicopterPilot",
    "time": "6 years ago",
    "comments": [
        {
            "user": "realtebo",
            "text": "<html><body><span class=\"comment-copy\">\n And what tell you that is not extracted at all\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "julian",
            "text": "<html><body><span class=\"comment-copy\">\n Can you narrow your question down to a specific problem? The\n <code>\n  strings\n </code>\n command and a\n <code>\n  binwalk\n </code>\n signature scan reveal a tremendous amount of information. If you can locate the firmware image entry point you can disassemble the code in the firmware.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "FakeHelicopterPilot",
            "text": "<html><body><span class=\"comment-copy\">\n Biswaprio - The best I can provide is the dropbox link there. You just have to click download and direct download in the top right corner.  The camera is the Insta 360 one 360 cam. ----------------------   SYS_V - When I use the -Me flags to auto extract any found archives with binwalk, I end up with some empty folders and empty archives in the resulting extracted folder. I've tried using dd to copy and then extract specific areas, but I'm having a hard time locating a solution.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "julian",
            "text": "<html><body><span class=\"comment-copy\">\n @FakeHelicopterPilot If nothing is compressed then there is nothing to extract. The signatures corresponding with compression are probably false positives, hence the empty folders. Looking at an entropy scan of the file shows that there are very few regions of high entropy and that these regions are very small. That means there is no compressed kernel or file system to extract.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  From brief analysis of the file it looks that the\n  <code>\n   Insta360 One\n  </code>\n  camera is based on or variant of the\n  <a href=\"https://www.ambarella.com/uploads/docs/A9-product-brief.pdf\" rel=\"noreferrer\">\n   Ambarella A9 SoC\n  </a>\n  . So lets assume for the moment that we are dealing with Ambarella camera itself and its firmware as it's pretty hard IMO to develop your own HD camera HW and SW stack from scratch. There are some substantial evidence for that if one check strings in the firmware file:\n </p>\n <ul>\n  <li>\n   <code>\n    /home/users/vincent/Insta360_ONE/insta360_one_u05/ambalink_sdk_3_10/output.oem/a12_ambalink/build/dbus-1.8.16/dbus/.libs\n   </code>\n  </li>\n  <li>\n   <code>\n    AmbarellaInc A9 Platform\n   </code>\n  </li>\n </ul>\n <p>\n  Some further googling revealed that this SoC is also used in other products, among which is DJI Mavic drone. Following that lead, the following repo popped up with the tools that could be of help with your research:\n  <a href=\"https://github.com/o-gs/dji-firmware-tools\" rel=\"noreferrer\">\n   dji-firmware-tools\n  </a>\n </p>\n <p>\n  Before going further into file extraction, some words about the bin file itself. It is divided into several parts because I think of how the camera SoC loads things into RAM. Some parts are actually ELF files (part 00) and others are UBIFS partitions which you can inspect with the help of\n  <a href=\"https://github.com/jrspruitt/ubi_reader\" rel=\"noreferrer\">\n   ubi_reader\n  </a>\n  . So moving on to examples.\n </p>\n <p>\n  By using\n  <code>\n   amba_fwpak.py\n  </code>\n  ,\n  <code>\n   amba_romfs.py\n  </code>\n  ,\n  <code>\n   arm_bin2elf.py\n  </code>\n  it was possible to:\n </p>\n <ul>\n  <li>\n   <p>\n    slice firmware into parts\n   </p>\n   <pre><code>/ubidump/dji-firmware-tools # ./amba_fwpak.py -s -vv -m /Research/Insta360FW.bin \n/Research/Insta360FW.bin: Opening for search\n/Research/Insta360FW.bin: Extracting entry  0, pos      252, len  6919456 bytes\n/Research/Insta360FW.bin: Entry  0 checksum B77204FE\n/Research/Insta360FW.bin: Extracting entry  1, pos  6919964, len  5079040 bytes\n/Research/Insta360FW.bin: Entry  1 checksum F1EC7657\n/Research/Insta360FW.bin: Extracting entry  2, pos 11999260, len  7266304 bytes\n/Research/Insta360FW.bin: Entry  2 checksum F525FC58\n/Research/Insta360FW.bin: Extracting entry  3, pos 19265820, len  6002936 bytes\n/Research/Insta360FW.bin: Entry  3 checksum 13FB09E6\n/Research/Insta360FW.bin: Extracting entry  4, pos 25269012, len 12976128 bytes\n/Research/Insta360FW.bin: Entry  4 checksum 03A65A19\n</code></pre>\n  </li>\n  <li>\n   <p>\n    extract binaries - it's from one file, others have much more:\n   </p>\n   <pre><code>/ubidump/dji-firmware-tools/file # ../amba_romfs.py -vv -s -p /Research/insta/Insta360FW_part_01.a9s \n/Research/insta/Insta360FW_part_01.a9s: Opening for search\n/Research/insta/Insta360FW_part_01.a9s: Extracting entry 0: orccode.bin, 4376293 bytes\n/Research/insta/Insta360FW_part_01.a9s: Extracting entry 1: orcme.bin, 432320 bytes\n/Research/insta/Insta360FW_part_01.a9s: Extracting entry 2: default_binary.bin, 262144 bytes\n</code></pre>\n  </li>\n  <li>\n   <p>\n    converts one of the parts into a ELF file for static research - the base address comes from Insta360FW_part_00.a9h file:\n   </p>\n   <pre><code>/ubidump/dji-firmware-tools # ./amba_sys2elf.py -vv -e -l 0xA0001000 -p /Research/insta/Insta360FW_part_00.a9s \n/Research/insta/Insta360FW_part_00.a9s: Opening for conversion to ELF\n/Research/insta/Insta360FW_part_00.a9s: Opening         /Research/insta/Insta360FW_part_00.a9h\n/Research/insta/Insta360FW_part_00.a9s: Memory base address set to 0xa0001000\n/Research/insta/Insta360FW_part_00.a9s: Searching for sections\n/Research/insta/Insta360FW_part_00.a9s: Matching '.ARM.exidx' section at 0x0054af80: 1 exception entries\n/Research/insta/Insta360FW_part_00.a9s: Set '.ARM.exidx' section at file pos 0x0054af80, size 0x00000008\n/Research/insta/Insta360FW_part_00.a9s: Set '.text' section at file pos 0x00000000, size 0x0054af80\n/Research/insta/Insta360FW_part_00.a9s: Set '.data' section at file pos 0x0054af88, size 0x0014e598\n/Research/insta/Insta360FW_part_00.a9s: Set '.bss' section at file pos 0x00699520, size 0x9f967ae0\n/Research/insta/Insta360FW_part_00.a9s: ELF template 'amba_sys2elf_template.elf' copied to 'Insta360FW_part_00.elf', 5140 bytes\n/Research/insta/Insta360FW_part_00.a9s: Section '.text' memory address set to 0xa0001000, alignment 0x40\n/Research/insta/Insta360FW_part_00.a9s: Section '.ARM.exidx' memory address set to 0xa054bf80, alignment 0x40\n/Research/insta/Insta360FW_part_00.a9s: Section '.data' memory address set to 0xa054bf88, alignment 0x08\n/Research/insta/Insta360FW_part_00.a9s: Section '.bss' memory address set to 0xa069a520, alignment 0x20\n/Research/insta/Insta360FW_part_00.a9s: Updating entry point and section headers\n/Research/insta/Insta360FW_part_00.a9s: Preparing ELF section '.text' from binary pos 0x00000000\n/Research/insta/Insta360FW_part_00.a9s: Preparing ELF section '.ARM.exidx' from binary pos 0x0054af80\n/Research/insta/Insta360FW_part_00.a9s: Preparing ELF section '.data' from binary pos 0x0054af88\n/Research/insta/Insta360FW_part_00.a9s: Preparing ELF section '.bss' from binary pos 0x00699520\n/Research/insta/Insta360FW_part_00.a9s: Writing changes to 'Insta360FW_part_00.elf'\n</code></pre>\n  </li>\n </ul>\n <p>\n  And UBI partition looks similar to the following:\n </p>\n <pre><code>/ubidump # ubireader_display_info /Research/insta/Insta360FW_part_04.a9s\nUBI File\n---------------------\n    Min I/O: 2048\n    LEB Size: 126976\n    PEB Size: 131072\n    Total Block Count: 99\n    Data Block Count: 97\n    Layout Block Count: 2\n    Internal Volume Block Count: 0\n    Unknown Block Count: 0\n    First UBI PEB Number: 0\n\n    Image: 891379931\n    ---------------------\n        Image Sequence Num: 891379931\n        Volume Name:linux\n        PEB Range: 0 - 98\n\n        Volume: linux\n        ---------------------\n            Vol ID: 0\n            Name: linux\n            Block Count: 97\n\n            Volume Record\n            ---------------------\n                alignment: 1\n                crc: '0xeae44dff'\n                data_pad: 0\n                errors: ''\n                flags: 0\n                name: u'linux'\n                name_len: 5\n                padding: u'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n                rec_index: 0\n                reserved_pebs: 389\n                upd_marker: 0\n                vol_type: 'dynamic'\n</code></pre>\n <p>\n  So I think this should be enough for you to get started. \nGood luck and have fun!\n </p>\n</div>\n</body></html>",
            "votes": "7",
            "user": "PhoeniX",
            "time": "Jul 9, 2018 at 11:44",
            "is_accepted": false,
            "comments": [
                {
                    "user": "FakeHelicopterPilot",
                    "text": "<span class=\"comment-copy\">Wow, PhoeniX. I really appreciate all the trouble you went to with this. Thanks so much for the detailed breakdown.</span>",
                    "time": null
                }
            ]
        }
    ]
}