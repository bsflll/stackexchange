{
    "title": "Recognizing instructions containing low-level control flows",
    "link": "https://reverseengineering.stackexchange.com/questions/19347/recognizing-instructions-containing-low-level-control-flows",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  There are some\n  <code>\n   x86\n  </code>\n  instructions which containing a low-level** control flow in its semantics, for example\n  <a href=\"https://c9x.me/x86/html/file_module_x86_id_72.html\" rel=\"nofollow noreferrer\">\n   div\n  </a>\n  because its semantics is roughly as:\n </p>\n <pre><code>if (source == 0)\n   throw exception...\nelse\n   return rdx:rax / source\n</code></pre>\n <p>\n  or instructions with\n  <code>\n   rep\n  </code>\n  prefix, etc. While a\n  <code>\n   mov\n  </code>\n  or a\n  <code>\n   xor\n  </code>\n  doesn't contain any control flow.\n </p>\n <p>\n  I am trying to classify instructions of\n  <code>\n   x86\n  </code>\n  ISA depending on this criteria, my starting point now is looking into\n  <a href=\"https://intelxed.github.io/\" rel=\"nofollow noreferrer\">\n   Xed\n  </a>\n  's API to know if there exists some function which can give such an information, but it doesn't seem having any.\n </p>\n <p>\n  Concretely for\n  <code>\n   div\n  </code>\n  , I've checked\n  <a href=\"https://intelxed.github.io/ref-manual/group__DEC.html#gad267d2d08e002b027915248689d1defe\" rel=\"nofollow noreferrer\">\n   xed_decoded_inst_conditionally_writes_registers\n  </a>\n  ,\n  <a href=\"https://intelxed.github.io/ref-manual/group__DEC.html#gad6b80021a33c772fa74a038f17343562\" rel=\"nofollow noreferrer\">\n   xed_operand_conditional_read/write\n  </a>\n  , but all of them return false.\n </p>\n <p>\n  ** I'm sorry for this word, I don't know the precise terminology for this case.\n </p>\n <p>\n  Edit: many thanks for comments but I've badly expressed my question. I update in the following some discussion to make the context more clear.\n </p>\n <p>\n  Xed's API would not give full instruction semantics, but some. For example, with some xed API (which I described above) we can get:\n </p>\n <pre><code>mov rax, r8\n\noperands:                       2\nuses rflag:                     no\nhas conditional read operand:   no\nhas conditional write operand:  no\nconditionally write register:   no\n</code></pre>\n <p>\n  and\n </p>\n <pre><code>cmovb rax, r8\n\noperands:                       3\nuses rflag:                     yes\nhas conditional read operand:   no\nhas conditional write operand:  yes\nconditionally write register:   yes\n</code></pre>\n <p>\n  so at least I know that\n  <code>\n   cmovb\n  </code>\n  should have some conditional control flow in its semantics, while\n  <code>\n   mov\n  </code>\n  has not.\n </p>\n <p>\n  I tried to apply this logic for other instructions: it works for some (e.g.\n  <code>\n   rep movsb\n  </code>\n  , etc.), but not all:\n </p>\n <ul>\n  <li>\n   for\n   <code>\n    div\n   </code>\n   *** (or\n   <code>\n    mov\n   </code>\n   ), it would be \"acceptable\"* to say that there is no\nconditional control flow, IMHO. We consider that an exception is side\neffect: the instruction is not executed (or only partially executed)\nif the exception is thrown\n  </li>\n  <li>\n   for other cases of, e.g.\n   <code>\n    minps\n   </code>\n   , this logic simply doesn't work\n  </li>\n </ul>\n <p>\n  *** I have initially thought that\n  <code>\n   div\n  </code>\n  contains conditional data-flow, but changed later :)\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "78",
    "tags": [
        "x86",
        "control-flow-graph"
    ],
    "user": "Ta Thanh Dinh",
    "time": "Sep 16, 2018 at 8:19",
    "comments": [
        {
            "user": "mrexodia",
            "text": "<html><body><span class=\"comment-copy\">\n Not automated, but in the Intel manual for instructions there is information about when exceptions happen. See for example\n <a href=\"https://c9x.me/x86/html/file_module_x86_id_176.html\" rel=\"nofollow noreferrer\">\n  c9x.me/x86/html/file_module_x86_id_176.html\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Abigail",
            "text": "<html><body><span class=\"comment-copy\">\n A\n <code>\n  mov\n </code>\n or\n <code>\n  xor\n </code>\n may alter control flow in the same way by triggering a page fault eception with invalid memory access.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}