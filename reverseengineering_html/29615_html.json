{
    "title": "How can I tell ld to link to a local symbol in a shared object?",
    "link": "https://reverseengineering.stackexchange.com/questions/29615/how-can-i-tell-ld-to-link-to-a-local-symbol-in-a-shared-object",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Symbols in shared objects can be either local or global.  This is controlled by a flag in the symbol table. If the symbol is local, ld won't resolve to it.\n </p>\n <p>\n  Reverse engineering can often be aided by doing this, by linking a shared object and referencing its symbols (e.g.\n  <code>\n   printf(\"%p\", main_arena)\n  </code>\n  .  Since all the information is there, and its only a flag telling ld to ignore this, it should be possible to tell ld to resolve a local symbol as well.  How can I do this?\n </p>\n <p>\n  Note that a simple patch of the flag isn't enough:\n </p>\n <pre><code>objcopy --globalize-symbol=main_arena libc-2.30.so libc-2.30.global_symbols.so\n</code></pre>\n <p>\n  even though the symbol is now listed as global,\n  <code>\n   ld\n  </code>\n  still can't find it, because all global symbols must be before any local (see\n  <a href=\"https://github.com/lief-project/LIEF/issues/112\" rel=\"nofollow noreferrer\">\n   https://github.com/lief-project/LIEF/issues/112\n  </a>\n  ) and perhaps for other issues (see\n  <a href=\"https://stackoverflow.com/questions/6527014/making-a-local-symbol-global\">\n   https://stackoverflow.com/questions/6527014/making-a-local-symbol-global\n  </a>\n  ).  It might be possible to rebuild the entire symbol table, but this will introduce other changes that we don't want.  What we want is simply to tell\n  <code>\n   ld\n  </code>\n  \"Please break the rules and resolve local symbols as well, just like gdb does.\"\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 0,
    "views": "419",
    "tags": [
        "symbols",
        "gcc",
        "dynamic-linking"
    ],
    "user": "SRobertJames",
    "time": "Nov 25, 2021 at 5:01",
    "comments": [
        {
            "user": "sudhackar",
            "text": "<html><body><span class=\"comment-copy\">\n Why not change\n <code>\n  ld\n </code>\n 's source, build and do whatever?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n By\n <code>\n  ld\n </code>\n you mean\n <code>\n  ld\n </code>\n (from Binutils, or\n <code>\n  lld.ld\n </code>\n from Clang) or you mean\n <code>\n  ld.so\n </code>\n ?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "SRobertJames",
            "text": "<html><body><span class=\"comment-copy\">\n @0xC0000022L\n <code>\n  ld.so\n </code>\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}