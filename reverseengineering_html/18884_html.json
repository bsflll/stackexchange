{
    "title": "Android 7.0+ Monitoring application HTTPS requests",
    "link": "https://reverseengineering.stackexchange.com/questions/18884/android-7-0-monitoring-application-https-requests",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to capture https requests an application performs during runtime without any success yet. Different failing approaches, using mitmproxy / charles proxy and user ca certificates, obtaining smali code in order to bypass x509Certificate checks, installing ca cert as system to avoid certificate pinning, using different xposed applications (outdated, still worth a try), make me wonder what it is that I am missing. It is only possible to capture chrome's https traffic, other applications refuse to load / connect. To be fair, one might ask why I don't figure out myself where requests are built and log all needed information. Personally, I think a working method capturing said traffic saves a lot of time and work.\n </p>\n <pre><code># virtual methods\n.method public checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V\n    .locals 1\nreturn-void #!!\n\niget-object v0, p0, La/a/a/a/e/d/d$a;->a:Ljavax/net/ssl/X509TrustManager;\n\ninvoke-interface {v0, p1, p2}, Ljavax/net/ssl/X509TrustManager;->checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V\n\nreturn-void\n.end method\n\n.method public checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V\n    .locals 1\n\nreturn-void #!!\n\niget-object v0, p0, La/a/a/a/e/d/d$a;->b:La/a/a/a/e/d/i;\n\ninvoke-interface {v0, p1, p2}, La/a/a/a/e/d/i;->a([Ljava/security/cert/X509Certificate;Ljava/lang/String;)Z\n\nmove-result v0\n\nif-nez v0, :cond_0\n\niget-object v0, p0, La/a/a/a/e/d/d$a;->a:Ljavax/net/ssl/X509TrustManager;\n\n    invoke-interface {v0, p1, p2}, Ljavax/net/ssl/X509TrustManager;->checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V\n\n    :cond_0\n    return-void\n.end method\n\n.method public getAcceptedIssuers()[Ljava/security/cert/X509Certificate;\n    .locals 1\n\nreturn-void #!!\n\niget-object v0, p0, La/a/a/a/e/d/d$a;->a:Ljavax/net/ssl/X509TrustManager;\n\ninvoke-interface {v0}, Ljavax/net/ssl/X509TrustManager;->getAcceptedIssuers()[Ljava/security/cert/X509Certificate;\n\nmove-result-object v0\n\nreturn-object v0\n.end method\n</code></pre>\n <p>\n  If you're successfully capturing traffic (especially https) please let me know your procedure in order to achieve what the question is asking for.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "380",
    "tags": [
        "decompilation",
        "android"
    ],
    "user": "Xatev",
    "time": "Jul 24, 2018 at 20:26",
    "comments": [
        {
            "user": "Biswapriyo",
            "text": "<html><body><span class=\"comment-copy\">\n Use this\n <a href=\"https://play.google.com/store/apps/details?id=app.greyshirts.sslcapture\" rel=\"nofollow noreferrer\">\n  play.google.com/store/apps/details?id=app.greyshirts.sslcapture\n </a>\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Xatev",
            "text": "<html><body><span class=\"comment-copy\">\n @Biswapriyo Unfortunately, applications offered on the Play Store for such purposes prove to be only useful for http requests, https capturing results in network ssl errors.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Biswapriyo",
            "text": "<html><body><span class=\"comment-copy\">\n Did you try it?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Xatev",
            "text": "<html><body><span class=\"comment-copy\">\n @Biswapriyo Yes, I did install most of the available options from the Play Store (including play.google.com/store/apps/details?id=app.greyshirts.sslcapture). None of them work, most being outdated using only methods which used to work before Android 6.0.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Do you have root on your phone or not? If yes - install\n  <a href=\"https://repo.xposed.info/module/de.robv.android.xposed.installer\" rel=\"nofollow noreferrer\">\n   xposed framework\n  </a>\n  and try one of this modules:\n </p>\n <ol>\n  <li>\n   <a href=\"https://github.com/ac-pm/SSLUnpinning_Xposed\" rel=\"nofollow noreferrer\">\n    SSLUnpining\n   </a>\n  </li>\n  <li>\n   <a href=\"https://github.com/Fuzion24/JustTrustMe\" rel=\"nofollow noreferrer\">\n    JustTrustMe\n   </a>\n  </li>\n </ol>\n <p>\n  As the alternative to xposed framework you can use frida and\n </p>\n <p>\n  <a href=\"https://techblog.mediaservice.net/2017/07/universal-android-ssl-pinning-bypass-with-frida/\" rel=\"nofollow noreferrer\">\n   universal bypass script\n  </a>\n </p>\n <p>\n  If you don't have root on your device you need to change \nthe smali code in few places, look for SSlContext and SSLSocketFactory.\n </p>\n <p>\n  You can check this\n  <a href=\"https://github.com/iSECPartners/android-ssl-bypass/blob/master/AndroidSSLBypassHelperApp/src/com/isec/helperapp/TrustAllTrustManager.java\" rel=\"nofollow noreferrer\">\n   implementation of trust manager\n  </a>\n  and recreate this in the app.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "NirIzr",
            "time": "Jul 27, 2018 at 20:30",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Xatev",
                    "text": "<span class=\"comment-copy\">Tried SSLUnpining - failed. No data captured. Tried JustTrustMe - failed. Applications refuse to connect. Frida looks promising and I will proceed to use it, although on Windows building the libraries seems to fail for me.</span>",
                    "time": null
                },
                {
                    "user": "TheKalin",
                    "text": "<span class=\"comment-copy\">If you have problem with libraries building, use pre-compiled ones, <a href=\"https://github.com/frida/frida/releases\" rel=\"nofollow noreferrer\">github.com/frida/frida/releases</a>. Make sure that lib versions matches both platforms (mobile and PC).</span>",
                    "time": null
                }
            ]
        }
    ]
}