{
    "title": "calculate branch target address powerpc",
    "link": "https://reverseengineering.stackexchange.com/questions/23097/calculate-branch-target-address-powerpc",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I want to know how next instruction address (NIA) is calculated for BL instruction. Lets assume that there is such instruction:\n </p>\n <pre><code>.text:100004C8    BL sub_10000670.\n</code></pre>\n <p>\n  This command in hex is:\n </p>\n <pre><code>48 00 01 A9\n</code></pre>\n <p>\n  Here we have that current instruction address (CIA) is\n  <code>\n   100004C8\n  </code>\n  and NIA is\n  <code>\n   10000670\n  </code>\n  . So accroding to\n  <a href=\"http://math-atlas.sourceforge.net/devel/assembly/ppc_isa.pdf\" rel=\"nofollow noreferrer\">\n   this book (page 33 in pdf)\n  </a>\n  we have to concatenate LI (in our case it is\n  <code>\n   6A\n  </code>\n  ) and\n  <code>\n   0B00\n  </code>\n  , sign extend it and sunm with 32 high ordered bits of\n  <code>\n   NIA\n  </code>\n  . The formula is\n </p>\n <pre><code>NIA = CIA + EXTS(LI || 0B00).\n\nNIA - CIA = 10000670 - 100004C8 = 1A8.\n</code></pre>\n <p>\n  How can i get from\n  <code>\n   1A8\n  </code>\n  my\n  <code>\n   LI = 6A\n  </code>\n  value? What do i misunderstand?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 2,
    "views": "299",
    "tags": [
        "address",
        "powerpc"
    ],
    "user": "Setplus",
    "time": "Jan 25, 2020 at 9:24",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <p>\n   NIA = CIA + EXTS(LI || 0B00)\n  </p>\n </blockquote>\n <p>\n  The\n  <code>\n   ||\n  </code>\n  notation denotes concatenation. So if you take LI\n </p>\n <blockquote>\n  <p>\n   0x6A -> 0b1101010\n  </p>\n </blockquote>\n <p>\n  And add two zeroes:\n </p>\n <blockquote>\n  <p>\n   0b1101010 || 0b00  -> 0b110101000 -> 0x1A8\n  </p>\n </blockquote>\n <p>\n  You get: NIA = 0x100004C8 + 0x1A8 = 10000670\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Jan 25, 2020 at 15:53",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Setplus",
                    "text": "<span class=\"comment-copy\">Thank you for your answer! And what should i do, if NIA less then CIA? For example. NIA = 1000029C, CIA = 1000052C, and instruction in hex = 4B FF FD 6D?</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">In that case LI is treated as a signed number and is sign extended (this is what SEXT notation means)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  base16 0x480001a9 == base2 1001000000000000000000110101001\n </p>\n <p>\n  chop of 5 upper bits and two lower bits for LI = 000000000000000001101010   = 0x6a\n </p>\n <p>\n  shift left 0x6a by two  0x6a << 2 = 0x1a8\n </p>\n <p>\n  add current instruction Address 0x100004c8 to the result 0x10000670  is the Target Address\n </p>\n <p>\n  since LK = 1 put 0x100004cc in link register\n </p>\n <p>\n  a simple python demo (edited to add negative )\n </p>\n <pre><code>instruction = [0x480001a9,0x4BFFFD6D]\nCIA = [0x100004c8,0x1000052C]\nfor i in range(0,len(instruction),1):\n    asbin = bin(instruction[i])\n    print (hex(instruction[i]) +' = '+ asbin)\n    print (\"length of asbin = \" + str(len(asbin)))\n    Displacement  = ((int( '0b'+ asbin[8:31] ,2) << 2) & 0xffff )\n    if((Displacement & 0x8000) == 0x8000):\n        Displacement = -(0x10000-Displacement)\n    print hex(Displacement)\n    NIA = hex(CIA[i] + Displacement)\n    print (NIA)\n</code></pre>\n <p>\n  executed\n </p>\n <pre><code>0x480001a9 = 0b1001000000000000000000110101001\nlength of asbin = 33\n0x1a8\n0x10000670\n0x4bfffd6d = 0b1001011111111111111110101101101\nlength of asbin = 33\n-0x294\n0x10000298\n</code></pre>\n</div>\n</body></html>",
            "votes": "1",
            "user": "blabb",
            "time": "Jan 25, 2020 at 17:44",
            "is_accepted": false,
            "comments": [
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">edited the code to address your comment take a look</span>",
                    "time": null
                }
            ]
        }
    ]
}