{
    "title": "Load to Ida binary with all of SO",
    "link": "https://reverseengineering.stackexchange.com/questions/30419/load-to-ida-binary-with-all-of-so",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a Linux ARM binary with a lot of shared libraries.\n </p>\n <p>\n  Can I load all of them into one IDA instance so that I can easily navigate between functions? For example: functions that the binary calls and is implemented in one of the shared libraries.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "911",
    "tags": [
        "ida",
        "linux",
        "ida-plugin",
        "shared-object"
    ],
    "user": "Kokomelom",
    "time": "May 23, 2022 at 21:19",
    "comments": [
        {
            "user": "Viktor",
            "text": "<html><body><span class=\"comment-copy\">\n Which version of IDA you are using?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n You can simply use\n <code>\n  File\n </code>\n ->\n <code>\n  Load File\n </code>\n ->\n <code>\n  Additional binary file ...\n </code>\n , but I haven't ever done it for your target, so possible there are issues I am unaware of.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Kokomelom",
            "text": "<html><body><span class=\"comment-copy\">\n @ViktorWolf Ida Pro 7.7\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'd suggest running your binary, attach it using IDA debug server, then take memory snapshot.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Misty",
            "time": "Jun 7, 2022 at 10:25",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">Fair point, but not viable with malware or other potentially malicious code, for example.</span>",
                    "time": null
                }
            ]
        }
    ]
}