{
    "title": "What's the meaning of dword_XXXX and offset dword_XXXX in IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/18946/whats-the-meaning-of-dword-xxxx-and-offset-dword-xxxx-in-ida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Consider the following code:\n </p>\n <p>\n  In C++:\n </p>\n <pre><code>SomeClass* globalPointer; // we don't know what it points to, but it's not null a pointer, it's initialized\n\nvoid someFunction()\n{\n  globalPointer->someVirtualFunction();\n}\n</code></pre>\n <p>\n  In IDA (inside\n  <code>\n   someFunction\n  </code>\n  ):\n </p>\n <pre><code>mov     ecx, dword_XXXX ; ecx = globalPointer\nmov     eax, [ecx] ; eax = vtable\njmp     dword ptr [eax+30h] ; call vtable[0x30]\n</code></pre>\n <p>\n  The meaning of\n  <code>\n   dword_XXXX\n  </code>\n  is just a pointer value. I tried to check it this way:\n </p>\n <pre><code>printf(\"Address of pointer = %p, pointer's value = %p\n\", &otherPointer, otherPointer);\n</code></pre>\n <p>\n  And I got:\n </p>\n <pre><code>push dword_XXXX ; otherPointer\npush offset dword_XXXX ; &otherPointer\npush offset format ; \"Address of pointer = %p, pointer's value = %p\n\"\n\ncall printf\n</code></pre>\n <p>\n  Thus\n  <code>\n   dword_XXXX\n  </code>\n  seems to be a pointer's value and\n  <code>\n   offset dword_XXXX\n  </code>\n  seems to be an address of the pointer.\n </p>\n <p>\n  However, I noticed another code (which can be expressed the same as the c++ function I provided above):\n </p>\n <pre><code>SomeClass2* globalPointer2;\n\nvoid someFunction2()\n{\n  globalPointer2->someVirtualFunction2();\n}\n</code></pre>\n <p>\n  And IDA surprisingly gave me (inside\n  <code>\n   someFunction2\n  </code>\n  ):\n </p>\n <pre><code>mov eax, dword_XXXX ; eax = globalPointer2\nmov ecx, offset dword_XXXX ; ecx = &globalPointer2\njmp dword ptr [eax+5Ch] ; call [globalPointer2+0x5C] with &globalPointer2 as this?? It should be call vtable[0x5C]\n</code></pre>\n <p>\n  I checked the values and found out that IDA somehow \"changes\" the meaning of\n  <code>\n   dword_XXXX\n  </code>\n  , in this case it actually was:\n </p>\n <pre><code>mov eax, dword_XXXX ; eax = vtable\nmov ecx, offset dword_XXXX ; ecx = globalPointer2\njmp dword ptr [eax+5Ch] ; call vtable[0x5C]\n</code></pre>\n <p>\n  Why the meaning of\n  <code>\n   dword_XXXX\n  </code>\n  was different in the second case? In the first case it was just\n  <code>\n   pointer\n  </code>\n  , but in the second case it was\n  <code>\n   *pointer\n  </code>\n  .\n </p>\n <p>\n  And the meaning of\n  <code>\n   offset dword_XXXX\n  </code>\n  in the first case was\n  <code>\n   &pointer\n  </code>\n  and in the second case was\n  <code>\n   pointer\n  </code>\n  .\n </p>\n <p>\n  I'm sorry if something is unclear, I really tried to simplify that as much as possible.\n </p>\n</div>\n</body></html>",
    "votes": "5",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "x86",
        "nasm"
    ],
    "user": "anx199",
    "time": "Jul 31, 2018 at 18:03",
    "comments": [
        {
            "user": "Avery3R",
            "text": "<html><body><span class=\"comment-copy\">\n Remove your answer from the question and add it as an answer. You can post answers to your own questions\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I think I figured out what's going on.\n </p>\n <p>\n  The opcodes for the printing were (assuming\n  <code>\n   dword_AAAAAAAA\n  </code>\n  instead of general\n  <code>\n   dword_XXXX\n  </code>\n  ):\n </p>\n <pre><code>FF 35 AA AA AA AA    push dword_AAAAAAAA; otherPointer\n68 AA AA AA AA       push offset dword_AAAAAAAA; &otherPointer\n</code></pre>\n <p>\n  Thanks to\n  <a href=\"https://defuse.ca/online-x86-assembler.htm\" rel=\"nofollow noreferrer\">\n   this\n  </a>\n  site, I know that the above instructions are equal to:\n </p>\n <pre><code>push [0xAAAAAAAA]; push otherPointer\npush 0xAAAAAAAA;   push &otherPointer\n</code></pre>\n <p>\n  So, in this case,\n  <code>\n   dword_XXXX\n  </code>\n  is equal to value of a pointer. However, in the second case (again assuming\n  <code>\n   dword_AAAAAAAA\n  </code>\n  instead of general\n  <code>\n   dword_XXXX\n  </code>\n  ):\n </p>\n <pre><code>A1 AA AA AA AA    mov eax, dword_AAAAAAAA ; eax = vtable\nB9 AA AA AA AA    mov ecx, offset dword_AAAAAAAA ; ecx = globalPointer2\n</code></pre>\n <p>\n  And it's equal to:\n </p>\n <pre><code>mov eax, [0xAAAAAAAA] ; eax = vtable\nmov ecx, 0xAAAAAAAA ; ecx = globalPointer2\n</code></pre>\n <p>\n  Thus in this case\n  <code>\n   dword_XXXX\n  </code>\n  is equal to\n  <code>\n   *pointer\n  </code>\n  rather than\n  <code>\n   pointer\n  </code>\n  .\n </p>\n <p>\n  Therefore I think the answer is: it depends. We need to understand what\n  <code>\n   dword_XXXX\n  </code>\n  means - it can be a pointer, an address of the pointer, or even pointer to pointer to pointer, and so on. But IDA gives us a hint:\n  <code>\n   offset dword_XXXX\n  </code>\n  means a raw value of whatever\n  <code>\n   dword_XXXX\n  </code>\n  is and\n  <code>\n   dword_XXXX\n  </code>\n  gives a dereferenced value of it.\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "anx199",
            "time": "Aug 3, 2018 at 12:41",
            "is_accepted": true,
            "comments": []
        }
    ]
}