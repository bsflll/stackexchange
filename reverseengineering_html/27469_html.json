{
    "title": "Changing value of parameter with gdb",
    "link": "https://reverseengineering.stackexchange.com/questions/27469/changing-value-of-parameter-with-gdb",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a file named exploit.c inside which:\n </p>\n <pre><code>#include <stdbool.h>\n#include <stdio.h>\n\nconst char y1 = 'a';\nconst char y2 = 'b';\nconst char y3 = 'x';\nconst char y4 = 'y';\nconst char y5 = 'i';\nconst char y6 = 'j';\n\nchar x1 = 'f' ^ 'a';\nchar x2 = 'l' ^ 'b';\nchar x3 = 'a' ^ 'x';\nchar x4 = 'g' ^ 'y';\nchar x5 = 'y' ^ 'i';\nchar x6 = '-' ^ 'j';\n\nint main() {\n  bool c = false;\n  if(c) { printf(\"The flag is: %c%c%c%c%c%c%c%c%c%c%c\n\", x1 ^ y1, x2 ^ y2, x3 ^ y3, x4 ^\ny4, x4 ^ y4, x5 ^ y5, x6 ^ y6, x1 ^ y1, x2 ^ y2, x3 ^ y3, x4 ^ y4); }\n  return 0;\n}\n</code></pre>\n <p>\n  How can I print out the flag without changing the value of boolean but with gcc and gdb?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 2,
    "views": "551",
    "tags": [
        "disassembly",
        "assembly",
        "debugging",
        "gdb",
        "gcc"
    ],
    "user": "Mark Ezberg",
    "time": "Apr 14, 2021 at 9:24",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n f^a^a  = f and so on flaggy-flag is spottable visually\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Dvd848",
            "text": "<html><body><span class=\"comment-copy\">\n Do you assume that you don't have the sources or debug symbols?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Mark Ezberg",
            "text": "<html><body><span class=\"comment-copy\">\n We assume that at least we have executable files\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Ian Cook",
            "text": "<html><body><span class=\"comment-copy\">\n You'd also need to assume that it has been compiled\n <i>\n  without\n </i>\n optimisations; otherwise the executable would likely contain no remnants of the flag at all\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The if statement is likely compiled into a conditional jump so you just need to step until the comparison and change the result. For example, if the jump is\n  <code>\n   je\n  </code>\n  or\n  <code>\n   jne\n  </code>\n  , you need to change the zero flag (ZF) to force the jump in the opposite direction.\n </p>\n <p>\n  For changing flags in GDB, see\n </p>\n <p>\n  <a href=\"https://stackoverflow.com/a/31339372\">\n   https://stackoverflow.com/a/31339372\n  </a>\n </p>\n <p>\n  Another option is to change the instruction pointer ($rip or $eip) to the location which corresponds to the if body.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Igor Skochinsky",
            "time": "Apr 16, 2021 at 23:41",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  It was pretty easy one so I could do myself:)\nWe have exploit.c file where I need to debug it in order to get the flag with 'gcc'. I run the program with:\n </p>\n <p>\n  <code>\n   gcc -g exploit.c -o exploit\n  </code>\n </p>\n <p>\n  and got 'exploit' which is executable\n  <code>\n   exploit.c\n  </code>\n  file.\nTo launch the binary under a debugger - gdb\n </p>\n <p>\n  <code>\n   gdb exploit\n  </code>\n </p>\n <p>\n  We have\n  <code>\n   bool c = false;\n  </code>\n  on line 21, so put the break line on it:\n </p>\n <pre><code>break 21\n</code></pre>\n <p>\n  Then: I changed the value of c by this command:\n  <code>\n   set variable c = true\n  </code>\n  However, when I went to the  next line by “next” it become false again.\nSo I reset the value again:\n  <code>\n   set variable c = true\n  </code>\n  and then next button:\nYay, it printed out the flag:\n </p>\n <pre><code>(gdb) next\n\nThe flag is: flaggy-flag\n23    return 0;\n</code></pre>\n</div>\n</body></html>",
            "votes": "0",
            "user": "sudhackar",
            "time": "May 17, 2022 at 15:15",
            "is_accepted": true,
            "comments": []
        }
    ]
}