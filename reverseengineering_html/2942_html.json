{
    "title": "Break points in OllyDBG",
    "link": "https://reverseengineering.stackexchange.com/questions/2942/break-points-in-ollydbg",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to set breakpoints in OllyDBG, I found the address that I wish to break on and I've hit F2 in order to set the breakpoint.\n </p>\n <p>\n  However, when the program runs the code, it doesn't break. I'm not very familiar with OllyDBG and don't know how it works on multithreaded applications.\n </p>\n <p>\n  1) If a new thread opens to execute the instruction set with the breakpoint, will it still break?\n  \n\n  2) What else might I check to get it to break?\n </p>\n <p>\n  I used OllyDBG before and never had problems with getting it to break, so I'm not sure what's changed.\n </p>\n</div>\n</body></html>",
    "votes": "6",
    "answers": 3,
    "views": "6k",
    "tags": [
        "ollydbg"
    ],
    "user": "user1960364",
    "time": "Oct 24, 2013 at 8:53",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <ol>\n  <li>\n   <p>\n    Yes\n   </p>\n  </li>\n  <li>\n   <p>\n    Either the instruction is never actually executed by the target program (likely), or the target program is using anti-debugging code to disable your breakpoint (unlikely). For the former, reevaluate your assumptions about what code is executed; for the latter, try different types of breakpoints (software, hardware, and memory).\n   </p>\n  </li>\n </ol>\n</div>\n</body></html>",
            "votes": "3",
            "user": "perror",
            "time": "Apr 15, 2014 at 9:41",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If the program does not use anti-debugging techniques, it is possible to debug multithreaded applications, so you can run the code step by step. Surely you can help \"Hit trace\", in a nutshell sets INT3 breakpoints on all branches that were not traced so far. You can see this\n  <a href=\"https://www.youtube.com/watch?v=jtteWZhD8l8\" rel=\"nofollow\">\n   https://www.youtube.com/watch?v=jtteWZhD8l8\n  </a>\n  , it use\n  <a href=\"http://www.openrce.org/downloads/details/188/OllySnake\" rel=\"nofollow\">\n   OllySnake\n  </a>\n  plugin\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "invictus85",
            "time": "Apr 5, 2014 at 19:59",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  the problem would be the address at which you have placed your break point would not have been executed (or) you would not have placed the break point at the beginning of the instruction address (BP won't work if it is placed at the middle of an instruction)\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Palaniyappan Bala",
            "time": "Apr 9, 2014 at 11:29",
            "is_accepted": false,
            "comments": []
        }
    ]
}