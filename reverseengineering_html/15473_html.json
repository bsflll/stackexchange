{
    "title": "Why is IDA call analysis failing?",
    "link": "https://reverseengineering.stackexchange.com/questions/15473/why-is-ida-call-analysis-failing",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am trying to reverse an ELF (C++) binary using IDA v6.95. Decompiler complains that the call analysis is failing. I am attaching the\n  <a href=\"https://www.mediafire.com/?16nrnhnuxo7gz4l\" rel=\"nofollow noreferrer\">\n   IDB database\n  </a>\n  . What can I do to fix the IDB?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 2,
    "views": "14k",
    "tags": [
        "ida",
        "decompiler"
    ],
    "user": "sherlock",
    "time": "Jun 3, 2017 at 9:26",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  <code>\n   Call analysis failed at: 08048B19\n  </code>\n </p>\n <p>\n  The instruction at that location:\n </p>\n <pre><code>call __ZNSaIcEC1Ev ; std::allocator<char>::allocator(void)\n</code></pre>\n <p>\n  Now decompile this function:\n </p>\n <pre><code>int __stdcall std::allocator<char>::allocator(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8) {\n    return std::allocator<char>::allocator(a1, a2, a3, a4, a5, a6, a7, a8);\n}\n</code></pre>\n <p>\n  Notice that hexrays has the function signature wrong, it expects too many arguments. After changing it to:\n </p>\n <pre><code>void __stdcall std__allocator_char___allocator()\n</code></pre>\n <p>\n  The main functon will decompile.\n </p>\n <p>\n  Note that hexrays doesn't accept the template arguments\n  <code>\n   <char>\n  </code>\n  and namespace specifier\n  <code>\n   std::\n  </code>\n  in a function prototype.\nSince changing the prototype does not rename the function you can replace the function name with any name, as long as ida considers it valid.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Willem Hengeveld",
            "time": "Jun 6, 2017 at 6:42",
            "is_accepted": false,
            "comments": [
                {
                    "user": "sherlock",
                    "text": "<span class=\"comment-copy\">Doesn't work for me. Can you please share your IDB?</span>",
                    "time": null
                },
                {
                    "user": "Willem Hengeveld",
                    "text": "<span class=\"comment-copy\">ah, i made a typo: the function signature should be: <code>void __stdcall std__allocator_char___allocator()</code>  without the &lt; and &gt;</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  the\n  <code>\n   IDB database\n  </code>\n  can not open now.\n </p>\n <p>\n  list my case for other refer:\n </p>\n <h1>\n  Error case\n </h1>\n <p>\n  in IDA:\n </p>\n <ul>\n  <li>\n   caller:\n   <code>\n    some_parent_function\n   </code>\n   <ul>\n    <li>\n     callee:\n     <code>\n      sub_9D6B278\n     </code>\n    </li>\n   </ul>\n  </li>\n </ul>\n <p>\n  in\n  <code>\n   some_parent_function\n  </code>\n  , do\n  <code>\n   F5\n  </code>\n  =\n  <code>\n   decompile\n  </code>\n  , report error:\n </p>\n <p>\n  <code>\n   Decompilation failure: 9D6ADDC: call analysis failed\n  </code>\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/mwlS9.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/mwlS9.jpg\"/>\n  </a>\n </p>\n <h1>\n  Error Reason\n </h1>\n <ul>\n  <li>\n   <a href=\"https://www.hex-rays.com/products/decompiler/manual/failures.shtml#11\" rel=\"nofollow noreferrer\">\n    call analysis failed\n   </a>\n   <blockquote>\n    <p>\n     the decompiler could not determine the calling convention and the call parameters.\n    </p>\n   </blockquote>\n  </li>\n </ul>\n <p>\n  ->\n </p>\n <ul>\n  <li>\n   = decompiled function's parameter number is wrong\n   <ul>\n    <li>\n     = (probably) decompiled function have too many parameters\n    </li>\n   </ul>\n  </li>\n </ul>\n <p>\n  ->\n </p>\n <ul>\n  <li>\n   here\n   <code>\n    sub_9D6B278\n   </code>\n   's decompiled function have too many parameters, which seems is wrong\n  </li>\n </ul>\n <h2>\n  <code>\n   sub_9D6B278\n  </code>\n  decompiled pseudocode\n </h2>\n <pre><code>void __usercall sub_9D6B278(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10, ...)\n{\n  va_list va; // [xsp+50h] [xbp+50h]\n\n  va_start(va, a10);\n  _Block_object_dispose(va, 8);\n}\n</code></pre>\n <h1>\n  Solution\n </h1>\n <ul>\n  <li>\n   <a href=\"https://www.hex-rays.com/products/decompiler/manual/failures.shtml#11\" rel=\"nofollow noreferrer\">\n    call analysis failed\n   </a>\n   <blockquote>\n    <p>\n     If this is a direct non-variadic call, you can fix it by specifying the callee type: just jump to the callee and hit Y to specify the type.\n    </p>\n    <p>\n     For variadic functions too it is a good idea to specify the type, but the call analysis could still fail because the decompiler has to find out the actual number of arguments in the call.\n    </p>\n   </blockquote>\n  </li>\n </ul>\n <p>\n  means:\n </p>\n <ul>\n  <li>\n   <code>\n    change decompiled function's type/definition\n   </code>\n   <ul>\n    <li>\n     == change function to correct number of parameters\n    </li>\n   </ul>\n  </li>\n </ul>\n <h2>\n  how to know what is the correct number of parameters?\n </h2>\n <p>\n  you should look inside the error callee function assembly code\n </p>\n <p>\n  try to understand it real used parameters (and better to understand it internal logic)\n </p>\n <p>\n  here related assembly code is:\n </p>\n <h3>\n  <code>\n   sub_9D6B278\n  </code>\n  disassembly code\n </h3>\n <pre><code>__text:0000000009D6B278 ; =============== S U B R O U T I N E =======================================\n__text:0000000009D6B278\n__text:0000000009D6B278\n__text:0000000009D6B278 ; __int64 __fastcall sub_9D6B278(int, char)\n__text:0000000009D6B278 sub_9D6B278       ; CODE XREF: -[NSObject bdp_addObserverForKeyPaths:identifier:options:context:task:]+1D8↑p\n__text:0000000009D6B278                                         ; __text:0000000009D6AF04↑p\n__text:0000000009D6B278\n__text:0000000009D6B278 arg_50          =  0x50\n__text:0000000009D6B278\n__text:0000000009D6B278                 ADD             X0, SP, #arg_50 ; void *\n__text:0000000009D6B27C                 MOV             W1, #8  ; int\n__text:0000000009D6B280                 B               __Block_object_dispose\n__text:0000000009D6B280 ; End of function sub_9D6B278\n</code></pre>\n <p>\n  and can figure out: only two real parameter\n </p>\n <h2>\n  how to edit/change function type/definition ?\n </h2>\n <p>\n  so here change function to correct\n  <code>\n   two parameters\n  </code>\n  :\n </p>\n <p>\n  cursor selected function name -> right click -> Set Type (Y)\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/bbhWY.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/bbhWY.jpg\"/>\n  </a>\n </p>\n <p>\n  change from (too many, wrong number of parameter) :\n </p>\n <ul>\n  <li>\n   <code>\n    __int64 __fastcall sub_9D6B278(int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, char)\n   </code>\n   <ul>\n    <li>\n     <a href=\"https://i.sstatic.net/MjqcK.jpg\" rel=\"nofollow noreferrer\">\n      <img alt=\"enter image description here\" src=\"https://i.sstatic.net/MjqcK.jpg\"/>\n     </a>\n    </li>\n   </ul>\n  </li>\n </ul>\n <p>\n  to (correct number of parameter):\n </p>\n <ul>\n  <li>\n   <code>\n    __int64 __fastcall sub_9D6B278(int, char)\n   </code>\n   <ul>\n    <li>\n     <a href=\"https://i.sstatic.net/78XwF.jpg\" rel=\"nofollow noreferrer\">\n      <img alt=\"enter image description here\" src=\"https://i.sstatic.net/78XwF.jpg\"/>\n     </a>\n    </li>\n    <li>\n     <a href=\"https://i.sstatic.net/y6hOC.png\" rel=\"nofollow noreferrer\">\n      <img alt=\"enter image description here\" src=\"https://i.sstatic.net/y6hOC.png\"/>\n     </a>\n    </li>\n   </ul>\n  </li>\n </ul>\n <p>\n  then decompiled is OK:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/etIcU.jpg\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/etIcU.jpg\"/>\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "crifan",
            "time": "Jun 23, 2022 at 1:10",
            "is_accepted": false,
            "comments": []
        }
    ]
}