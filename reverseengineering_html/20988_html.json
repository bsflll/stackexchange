{
    "title": "Is it possible to import an open source framework into a closed source project in ida?",
    "link": "https://reverseengineering.stackexchange.com/questions/20988/is-it-possible-to-import-an-open-source-framework-into-a-closed-source-project-i",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am working on reversing a closed source project that uses a well known open source framework.\n </p>\n <p>\n  I am thinking that theoretically, by diffing the program and the framework, I should at least get a few matches that could aid me in cleaning up and understanding more of what I'm doing.\n </p>\n <p>\n  Is there something that does this for me?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "75",
    "tags": [
        "ida"
    ],
    "user": "G. Ramistella",
    "time": "Mar 28, 2019 at 20:50",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you have the exact copy of the open-source library binary used in the project (the\n  <code>\n   .a\n  </code>\n  or\n  <code>\n   .lib\n  </code>\n  file), you can use\n  <a href=\"https://www.hex-rays.com/products/ida/support/download.shtml\" rel=\"nofollow noreferrer\">\n   Flair\n  </a>\n  to generate\n  <a href=\"https://www.hex-rays.com/products/ida/tech/flirt/in_depth.shtml\" rel=\"nofollow noreferrer\">\n   FLIRT\n  </a>\n  signatures for it and then load and apply these signatures in your closed-source IDA project.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "xyz",
            "time": "Mar 29, 2019 at 14:05",
            "is_accepted": false,
            "comments": [
                {
                    "user": "G. Ramistella",
                    "text": "<span class=\"comment-copy\">I do not, I have only the source code. I'm also expecting that the source code of this library will be slightly altered in some points, so I'd want to import only whatever matches completely.</span>",
                    "time": null
                }
            ]
        }
    ]
}