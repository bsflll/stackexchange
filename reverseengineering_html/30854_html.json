{
    "title": "Auto-loaded type information and relationship between .til and .sig: how to find links and how to change them (config)?",
    "link": "https://reverseengineering.stackexchange.com/questions/30854/auto-loaded-type-information-and-relationship-between-til-and-sig-how-to-find",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  NB: most of my targets are PE files for\n  <code>\n   pc\n  </code>\n  , so I'll stick with that for the question. But I suppose the principle holds also for the related directories, like\n  <code>\n   $IDADIR/sig/arm\n  </code>\n  .\n </p>\n <p>\n  Let's say I load a PE file, which happens to be a 64-bit Windows driver. I may then see in the Output pane (redacted for brevity):\n </p>\n <pre><code>IDA is analysing the input file...\nYou may start to explore the input file right now.\n...\nUsing FLIRT signature: Windows Driver Kit 7/10 64bit\nPropagating type information...\n</code></pre>\n <p>\n  Now \"Windows Driver Kit 7/10 64bit\" corresponds to\n  <code>\n   $IDADIR/sig/pc/ms64wdk.sig\n  </code>\n  (found with\n  <code>\n   dumpsig\n  </code>\n  ). Fair enough. I also know that\n  <code>\n   $IDADIR/sig/pc/autoload.cfg\n  </code>\n  governs what type information library (\n  <code>\n   .til\n  </code>\n  ) file gets loaded based on the loading of a signature.\n </p>\n <p>\n  Alas, there is no entry that maps the aforementioned\n  <code>\n   $IDADIR/sig/pc/ms64wdk.sig\n  </code>\n  to\n  <code>\n   ntddk64_win7\n  </code>\n  and\n  <code>\n   ntapi64_win7\n  </code>\n  . Yet, when I use\n  <kbd>\n   Produce file\n  </kbd>\n  ->\n  <kbd>\n   Dump database to IDC file...\n  </kbd>\n  the resulting\n  <code>\n   .idc\n  </code>\n  file has the following calls among its first actions (again redacted for brevity):\n </p>\n <pre><code>#define UNLOADED_FILE   1\n#include <idc.idc>\n\nstatic main(void) {\n    // ...\n    GenInfo();            // various settings\n    // ...\n}\n\nstatic GenInfo(void) {\n\n    // ...\n    add_default_til(\"ntddk64_win7\");\n    add_default_til(\"ntapi64_win7\");\n}\n</code></pre>\n <h3>\n  Questions:\n </h3>\n <ul>\n  <li>\n   How does IDA make the connection between the FLIRT (\n   <code>\n    .sig\n   </code>\n   ) and the\n   <code>\n    .til\n   </code>\n   here? (Apparently\n   <code>\n    $IDADIR/sig/pc/autoload.cfg\n   </code>\n   has no bearing.)\n  </li>\n  <li>\n   Given there are also other\n   <code>\n    .til\n   </code>\n   files like\n   <code>\n    ntddk64_win10.til\n   </code>\n   ,\n   <code>\n    ntapi64_win10.til\n   </code>\n   :\n   <ul>\n    <li>\n     How can I configure IDA to load those instead of the somehow implicit\n     <code>\n      ntddk64_win7\n     </code>\n     and\n     <code>\n      ntapi64_win7\n     </code>\n     respectively?\n    </li>\n    <li>\n     Assuming I can't override the behavior or have an existing IDB which had the implicit\n     <code>\n      ntddk64_win7\n     </code>\n     and\n     <code>\n      ntapi64_win7\n     </code>\n     applied: If I now use\n     <code>\n      add_default_til(\"ntddk64_win10\")\n     </code>\n     and\n     <code>\n      add_default_til(\"ntapi64_win10\")\n     </code>\n     (no matter whether IDC or IDAPython) will this adversely affect existing usage of type information (e.g. enums which were imported from standard enums)? How does it affect existing usage?\n    </li>\n   </ul>\n  </li>\n  <li>\n   What is the relation between the\n   <code>\n    ntddk64.til\n   </code>\n   and, say,\n   <code>\n    ntddk64_vista.til\n   </code>\n   ,\n   <code>\n    ntddk64_win7.til\n   </code>\n   ,\n   <code>\n    ntddk64_win8.til\n   </code>\n   ,\n   <code>\n    ntddk64_win81.til\n   </code>\n   and\n   <code>\n    ntddk64_win10.til\n   </code>\n   ? Is\n   <code>\n    ntddk64.til\n   </code>\n   the superset? Some subset?\n  </li>\n </ul>\n <p>\n  PS: Pointers to official documentation very much welcome.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "206",
    "tags": [
        "ida"
    ],
    "user": "0xC0000022L",
    "time": "Sep 5, 2022 at 15:34",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Meanwhile I noticed, that a bunch of those names are hardcoded in some of the loaders, processors and plugins that come with IDA, as well as the\n <code>\n  ida.dll\n </code>\n and\n <code>\n  ida64.dll\n </code>\n . So there's clearly more than\n <code>\n  autoload.cfg\n </code>\n at work here.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}