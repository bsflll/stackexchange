{
    "title": "DCD data in IDA disassmbed file",
    "link": "https://reverseengineering.stackexchange.com/questions/16815/dcd-data-in-ida-disassmbed-file",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  There is some DCD data in a disassembled binary using IDA as shown the image description. The binary is an ELF of ARM processor type. I want to know what are these data? Is it possible they be code which IDA could not disassembled?\n  <a href=\"https://i.sstatic.net/vVhHA.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/vVhHA.png\"/>\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "-1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "disassembly",
        "arm"
    ],
    "user": "hamid darabian",
    "time": "Nov 22, 2017 at 14:48",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  That is the ELF header from your executable, and IDA is aware that there is no practical use to disassemble it as if it's\n  <em>\n   code\n  </em>\n  .\n </p>\n <p>\n  See\n  <a href=\"https://linux-audit.com/elf-binaries-on-linux-understanding-and-analysis/\" rel=\"nofollow noreferrer\">\n   The 101 of ELF Binaries on Linux: Understanding and Analysis\n  </a>\n  in case you don't know what an \"ELF header\" is or if you want to know the meaning of every single byte in the header you show.\n </p>\n <p>\n  More generally speaking, IDA automatically tries to determine what parts are code and data, but it may fail on both. Data that gets treated as code will usually contain undefined bytes â€“ these will appear as literal\n  <code>\n   dcd\n  </code>\n  bytes among seemingly valid disassembled instructions. (And on close inspection, those \"instructions\" are usually nonsensical.)\n </p>\n <p>\n  Code that gets treated as data is more difficult to spot, especially if there are no obvious references into it. With sufficient experience, one may be able to recognize certain hex sequences as \"most likely code\"; in that case, instruct IDA to disassemble such a sequence and see what it produces.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "user22100",
            "time": "Nov 22, 2017 at 15:10",
            "is_accepted": true,
            "comments": []
        }
    ]
}