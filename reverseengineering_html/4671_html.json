{
    "title": "Image base of unknown file format?",
    "link": "https://reverseengineering.stackexchange.com/questions/4671/image-base-of-unknown-file-format",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  As a beginner I'm trying to load an unknown format binary file with IDA Pro,but I don't know the Image Base of this file. Are there any methods to get the Image Base. Could you also reference related papers in your answer.\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 2,
    "views": "1k",
    "tags": [
        "ida",
        "firmware"
    ],
    "user": "user6903",
    "time": "Jun 23, 2014 at 6:26",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n Search for questions tagged\n <a href=\"https://reverseengineering.stackexchange.com/questions/tagged/firmware\">\n  firmware\n </a>\n . It's possible that your alleged image contains a full file system.\n <code>\n  firmware-mod-kit\n </code>\n would be the way to go in such a case.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  One possible method is if there are string tables present, and pointer tables to those strings, is load the bin into IDA at zero and find the strings, then write a program to search the binary looking for int32 differences that matched the differences in the start of each string.\n </p>\n <p>\n  I searched for byte/word/int's in big/little endian formats, and once you find the match, then you can calc the correct base from the difference from you search address and the resulting address/pointer table.\n </p>\n <p>\n  Here's the C# code I used\n </p>\n <pre><code>static void SearchDumpsForIntDiff(string filename, params int[] dcode)\n{\n    var sw = new StreamWriter(File.Open(filename + \"status.txt\", FileMode.Create, FileAccess.Write, FileShare.ReadWrite));\n\n    byte[] data = File.ReadAllBytes(filename);\n\n    if (data.Length == 0) return;\n\n    int dl = dcode.Length;\n    for(int loc = 0; loc < (data.Length - (dcode.Length*4)); loc++)     \n    {\n        for(int off = 0; off < (dcode.Length-1); off++)\n        {\n            int t1 = dcode[off];\n            int t2 = dcode[off + 1];\n            int d1 = (t2 - t1)/8;\n            int v1 = (int)ReadUint32(data, loc + ((off + 0) * 4));\n            int v2 = (int)ReadUint32(data, loc + ((off + 1) * 4));\n\n            int d2 = v2 - v1; \n\n            if( d1 != d2 )\n                break;\n\n            if( off == (dcode.Length-2))\n            {                            \n                sw.WriteLine(\"Match at {0:X8}\",  loc);\n                Console.WriteLine(\"Match at {0:X8}\",  loc);\n            }\n        }\n\n    }\n\n    sw.Close();\n    sw.Dispose();\n}\n</code></pre>\n <p>\n  which I used like\n </p>\n <pre><code>SearchDumpsForIntDiff(@\"Nikon\\D7000Update\\b750103a.bin\", 0x79DF9A, 0x79DFB2, 0x79DFBA, 0x79DFC2);\n</code></pre>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Simeon Pilgrim",
            "time": "Jun 23, 2014 at 22:30",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I wrote something for Cortex M3 MCUs here:\n  <a href=\"http://www.reddit.com/r/ReverseEngineering/comments/21kgtc/beginners_project_logitech_g940_firmware/cgeokv3\" rel=\"noreferrer\">\n   http://www.reddit.com/r/ReverseEngineering/comments/21kgtc/beginners_project_logitech_g940_firmware/cgeokv3\n  </a>\n </p>\n <p>\n  As you didn't write anything about the device your blob is for and how it gets there no conclusion can be made from us.\n </p>\n <p>\n  But you really need to know which CPU you have, where the flash memory is at and how vector tables and such work on this specific model to determine something.\n </p>\n <p>\n  Some MCUs have a bootloader at the beginning of the flash and the user code is begind it, other MCUs have the bootloader in the upper region of the flash and user code starts at the front.\n </p>\n</div>\n</body></html>",
            "votes": "5",
            "user": "user2011659",
            "time": "Jun 23, 2014 at 4:58",
            "is_accepted": false,
            "comments": []
        }
    ]
}