{
    "title": "How does a stripped XCOFF binary still remain usable?",
    "link": "https://reverseengineering.stackexchange.com/questions/18479/how-does-a-stripped-xcoff-binary-still-remain-usable",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  IBM's AIX\n  <a href=\"https://www.ibm.com/support/knowledgecenter/en/ssw_aix_71/com.ibm.aix.cmds5/strip.htm\" rel=\"nofollow noreferrer\">\n   <code>\n    strip\n   </code>\n  </a>\n  utility documentation states the following:\n </p>\n <blockquote>\n  <p>\n   The strip command with no options removes the line number information,\n  relocation information, symbol table, the debug section, and the\n  typchk section, and the comment section.\n  </p>\n </blockquote>\n <p>\n  If relocation information is removed, how come the stripped executable still remain usable?\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 2,
    "views": "1k",
    "tags": [
        "file-format"
    ],
    "user": "sherlock",
    "time": "Jun 7, 2018 at 19:22",
    "comments": [
        {
            "user": "manduca",
            "text": "<html><body><span class=\"comment-copy\">\n Okay, that‘s weird. Without relocation information, the binary either has to be position independent code or cannot be ASLRed. I‘m looking forward to the answer.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n That's not exactly a reverse engineering question, though.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  COFF files were not designed to support relocation after link-time:\n </p>\n <blockquote>\n  <p>\n   The binary format used initially for Linux was an\n   <code>\n    a.out\n   </code>\n   variant.\n   <strong>\n    When introducing shared libraries certain design\n  decisions had to be made to work in the limitations of\n    <code>\n     a.out\n    </code>\n    . The main accepted limitation was that no\n    <em>\n     relocations\n    </em>\n    are performed at the time of loading and afterward.\n  The shared libraries have to exist in the form they are\n  used at run-time on disk.\n   </strong>\n   This imposes a major restriction on the way shared libraries are built and used: every\n  shared library must have a fixed load address; otherwise it\n  would not be possible to generate shared libraries which\n  do not have to be relocated.\n   <sup>\n    1\n   </sup>\n  </p>\n </blockquote>\n <p>\n  While XCOFF represents an extension of COFF that does support use of shared libraries, the relocation information removed by\n  <code>\n   strip\n  </code>\n  pertains to information used for link-time relocation rather than load- or run-time relocation:\n </p>\n <ul>\n  <li>\n   <blockquote>\n    <p>\n     Reduces the size of an Extended Common Object File Format (XCOFF) object file by removing information used by the binder and symbolic debug program.\n    </p>\n   </blockquote>\n  </li>\n  <li>\n   <blockquote>\n    <p>\n     The binder uses the relocation information to modify address constants and other relocatable values when individual XCOFF object files are linked to create an XCOFF executable file.\n     <sup>\n      2\n     </sup>\n    </p>\n   </blockquote>\n  </li>\n </ul>\n <p>\n  The binder appears to play a role similar to that of the link editor\n  <a href=\"http://man7.org/linux/man-pages/man1/ld.1.html\" rel=\"nofollow noreferrer\">\n   <code>\n    ld\n   </code>\n  </a>\n  on Linux systems.\n </p>\n <p>\n  See the description of the\n  <code>\n   -x\n  </code>\n  flag:\n </p>\n <blockquote>\n  <p>\n   Removes the symbol table information but does not remove static or external symbol information.\n   <strong>\n    The -x flag also removes relocation information, therefore linking to the file would not be possible.\n   </strong>\n  </p>\n </blockquote>\n <hr/>\n <ol>\n  <li>\n   <p>\n    <a href=\"https://software.intel.com/sites/default/files/m/a/1/e/dsohowto.pdf\" rel=\"nofollow noreferrer\">\n     How to Write Shared Libraries\n    </a>\n   </p>\n  </li>\n  <li>\n   <p>\n    <a href=\"https://www.ibm.com/support/knowledgecenter/en/ssw_aix_71/com.ibm.aix.files/XCOFF.htm#XCOFF__sua3i125jbau\" rel=\"nofollow noreferrer\">\n     Relocation Information for XCOFF File (reloc.h)\n    </a>\n   </p>\n  </li>\n </ol>\n</div>\n</body></html>",
            "votes": "6",
            "user": "julian",
            "time": "Jun 7, 2018 at 21:47",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  apparently the\n  <a href=\"https://www.ibm.com/support/knowledgecenter/en/ssw_aix_71/com.ibm.aix.files/XCOFF.htm\" rel=\"nofollow noreferrer\">\n   XCOFF format\n  </a>\n  has a separate section for dynamic linker (\n  <em>\n   system loader\n  </em>\n  ):\n </p>\n <blockquote>\n  <h1>\n   Loader Section (loader.h)\n  </h1>\n  <p>\n   The loader section contains information required by the system loader\nto load and relocate an executable XCOFF object. The loader section is\ngenerated by the binder. The loader section has an s_flags section\ntype flag of STYP_LOADER in the XCOFF section header. By convention,\n.loader is the loader section name. The data in this section is not\nreferenced by entries in the XCOFF symbol table.\n  </p>\n </blockquote>\n <p>\n  Presumably this one is not removed by\n  <code>\n   strip\n  </code>\n  , so the file still works.\n </p>\n <p>\n  See also similar question on what happens with\n  <a href=\"https://reverseengineering.stackexchange.com/questions/2539/what-symbol-tables-stay-after-a-strip-in-elf-format\">\n   stripped ELF files\n  </a>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": []
        }
    ]
}