{
    "title": "Assembly output too complicated",
    "link": "https://reverseengineering.stackexchange.com/questions/16949/assembly-output-too-complicated",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  This is a probably a very basic question, please bear with me.\n </p>\n <p>\n  I'm starting to get into reverse engineering following this pdf I found online:\n  <a href=\"https://beginners.re/\" rel=\"nofollow noreferrer\">\n   https://beginners.re/\n  </a>\n  \n\n  I am, however, stuck at the very basic steps.\n </p>\n <p>\n  The relevant part from the PDF:\n  <img alt=\"1]\" src=\"https://i.sstatic.net/yGeqF.png\"/>\n </p>\n <p>\n  When I try to compile my c++ code (which is the same as in the book) with the following command:\n </p>\n <pre><code>gcc main.cpp -S -O\n</code></pre>\n <p>\n  This is the output I get:\n </p>\n <p>\n  <img alt=\"\" src=\"https://i.sstatic.net/z9FJ6.png\"/>\n  <a href=\"https://i.sstatic.net/z9FJ6.png\" rel=\"nofollow noreferrer\">\n   2\n  </a>\n </p>\n <p>\n  Which, as you can see, is very different, and a lot more complicated than the supposed output written in the pdf. I'm unsure what I'm doing wrong, could anyone help me?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "179",
    "tags": [
        "assembly"
    ],
    "user": "Bobobot",
    "time": "Dec 9, 2017 at 19:06",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Both outputs show the same effective assembly code.  In both outputs, there is only a single instruction:\n </p>\n <pre><code>ret\n</code></pre>\n <p>\n  The second example output is a variation of\n  <code>\n   ret\n  </code>\n  the reason for which is listed in\n  <a href=\"https://stackoverflow.com/questions/20526361/what-does-rep-ret-mean#20526918\">\n   this answer on Stackoverflow\n  </a>\n  .\n </p>\n <p>\n  The\n  <em>\n   more complicated\n  </em>\n  output has several code organizational assembler directives.  These directives are not instructions.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "RubberStamp",
            "time": "Dec 9, 2017 at 19:37",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Bobobot",
                    "text": "<span class=\"comment-copy\">Thank you! So if I understand correctly, assembler directives are to assembly what preprocessor directives are to C?  Also, is there a way to generate a simplified output file similar to the one in the pdf (function names remaining, directives removed etc.), or did the author presumably manually clean up the codes himself?</span>",
                    "time": null
                },
                {
                    "user": "Vladislav Ivanov",
                    "text": "<span class=\"comment-copy\">The author probably cleaned up it himself. You can also use <a href=\"https://godbolt.org\" rel=\"nofollow noreferrer\">godbolt.org</a> to quickly view disassembly for a given code</span>",
                    "time": null
                }
            ]
        }
    ]
}