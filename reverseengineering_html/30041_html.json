{
    "title": "(Ghidra) How to get the parameter name given a Function object and the storage location as a register string?",
    "link": "https://reverseengineering.stackexchange.com/questions/30041/ghidra-how-to-get-the-parameter-name-given-a-function-object-and-the-storage-l",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Given an instance of something that implements\n  <code>\n   ghidra.program.model.listing.Function\n  </code>\n  , and the register as a string (e.g.\n  <code>\n   x0\n  </code>\n  ) how can I get the name of the argument (e.g.\n  <code>\n   param1\n  </code>\n  )?\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ghidra"
    ],
    "user": "Florian Magin",
    "time": "Feb 13, 2022 at 18:17",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The first way I found is (as Kotlin code)\n </p>\n <pre><code>function.parameters.first { it.variableStorage.register.toString() == \"x0\" }.name\n</code></pre>\n <p>\n  i.e. go through the parameters and find the first (and hopefully only one), that has a storage location with the string representation\n  <code>\n   x0\n  </code>\n  .\n </p>\n <p>\n  This feels somewhat hacky, but should at least work. The whole expression type checks, so it should cover basically all cases, and I am not sure if there can ever be a case where somehow multiple parameters are stored in the same register that have the same string representation.\n </p>\n</div>\n</body></html>",
            "votes": "-1",
            "user": "Florian Magin",
            "time": "Feb 13, 2022 at 18:17",
            "is_accepted": false,
            "comments": []
        }
    ]
}