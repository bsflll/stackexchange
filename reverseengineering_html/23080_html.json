{
    "title": "Some obstacles in reversing a JNI Native library",
    "link": "https://reverseengineering.stackexchange.com/questions/23080/some-obstacles-in-reversing-a-jni-native-library",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I deleted my last question (it was not still answered and none's effort was wasted) as I got back and thought to re-read JNI documentation, to find I misinterpreted some bits. Things are now clearer\n </p>\n <p>\n  Though I still cannot understand how JavaObject is passed on? Looking through radare2,\n </p>\n <pre><code>410: sym.Java_com_asobimo_common_jni_NativeResource_getZipedFile (int16_t arg1, int16_t arg3, int16_t arg4);\n           ; var int16_t var_0h @ sp+0x0\n           ; var int16_t var_ch @ sp+0xc\n           ; var int16_t var_14h @ sp+0x14\n           ; var int16_t var_18h @ sp+0x18\n           ; var int16_t var_1ch @ sp+0x1c\n           ; var int16_t var_34h @ sp+0x34\n           ; var int16_t var_40h @ sp+0x40\n           ; arg int16_t arg1 @ r0\n           ; arg int16_t arg3 @ r2\n           ; arg int16_t arg4 @ r3\n           ; DATA XREF from aav.0x0000c664 @ +0x64\n           0x0000c974  ~   f0b5           push {r4, r5, r6, r7, lr}\n</code></pre>\n <p>\n  this is how the static function is called. I feel like the function makes references to passed class objects, since it subtracts\n  <code>\n   0x44\n  </code>\n  from\n  <code>\n   sp\n  </code>\n  letter on and then do some stuffs. But, how does this referencing works actually? I am pretty clueless. This is how the Java class looks like which corresponds to it:-\n </p>\n <pre><code>package com.asobimo.common.jni;\n\npublic final class NativeResource {\n  static {\n    System.loadLibrary(\"NativeResource\");\n  }\n\n  public static native void deleteFile(String paramString);\n\n  public static native byte[] getFile(String paramString);\n\n  public static native byte[] getZipedFile(String paramString1, String paramString2);\n\n  public static native boolean isZipedNormality(String paramString);\n\n  public static native void saveFile(String paramString, byte[] paramArrayOfbyte, int paramInt);\n}\n</code></pre>\n <p>\n  Also, this is not really a necessary thing to answer (and it kinda shifts away from focus of it, I am sorry) but how radare identifies the arguments' size? As it's clear by\n  <code>\n   var int16_t var_40_h @ sp+0x40\n  </code>\n  being a reference (even though sp is subtracted by\n  <code>\n   0x40\n  </code>\n  ) and the fact that string function were being called using\n  <code>\n   r0\n  </code>\n  pointer, over\n  <code>\n   r2\n  </code>\n  and\n  <code>\n   r3\n  </code>\n  , (which makes it more obvious that they probably are\n  <code>\n   int32_t\n  </code>\n  )\n </p>\n <p>\n  And why radare didn't assign\n  <code>\n   r1\n  </code>\n  to anything? And skipped\n  <code>\n   arg2\n  </code>\n  ? It probably also has to do with\n  <code>\n   JavaObject\n  </code>\n  , but I can't really find anything by researching myself. I would really appreciate any help, I badly want that boss battle music hidden behind some encrypted zip files\n </p>\n <p>\n  In case it would help in making some sense, here is the\n  <code>\n   .so\n  </code>\n  file\n  <a href=\"https://files.catbox.moe/foss7s.so\" rel=\"nofollow noreferrer\">\n   https://files.catbox.moe/foss7s.so\n  </a>\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 0,
    "views": "815",
    "tags": [
        "android",
        "radare2",
        "c",
        "java",
        "shared-object"
    ],
    "user": "CortexAuth",
    "time": "Jan 23, 2020 at 14:47",
    "comments": [
        {
            "user": "Olvin Roght",
            "text": "<html><body><span class=\"comment-copy\">\n I highly recommend you to get in touch with\n <a href=\"https://github.com/frida/frida\" rel=\"nofollow noreferrer\">\n  frida\n </a>\n , especially with\n <a href=\"https://github.com/chame1eon/jnitrace\" rel=\"nofollow noreferrer\">\n  jnitrace\n </a>\n , which could help you to understand\n <b>\n  how\n </b>\n and\n <b>\n  where\n </b>\n shared object call jni functions which works with Java objects. Also will be good to read about\n <a href=\"https://docs.oracle.com/javase/8/docs/technotes/guides/jni/index.html\" rel=\"nofollow noreferrer\">\n  jni\n </a>\n to understand how does it work at all.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "CortexAuth",
            "text": "<html><body><span class=\"comment-copy\">\n @OlvinRoght I will try Frida later, thanks! And I did read Oracle's documentation. It did cleared some doubts I had earlier (or I would say, I just read it previously in hurry) but now I don't get these stuffs\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Olvin Roght",
            "text": "<html><body><span class=\"comment-copy\">\n I have no much time to explain with details, but main idea is next: 1) native function receive pointer to Java\n <i>\n  String\n </i>\n (I'll proceed with\n <i>\n  getZipedFile\n </i>\n from post); 2) to get string bytes in native code used\n <a href=\"https://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/functions.html#GetStringChars\" rel=\"nofollow noreferrer\">\n  GetStringChars\n </a>\n which returns pointer to simple\n <i>\n  char\n </i>\n array; 3) function do smth and then it uses\n <a href=\"https://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/functions.html#New_PrimitiveType_Array_routines\" rel=\"nofollow noreferrer\">\n  NewByteArray\n </a>\n to create Java array and return it. Maybe I'll post an answer later.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "CortexAuth",
            "text": "<html><body><span class=\"comment-copy\">\n @OlvinRoght Yeap! but it also does some stuffs with some values in stack, which probably came from the Java program. but I have no idea what those values could be That's kinda necessary to figure out because it could be part of how the zip files are encrypted\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Olvin Roght",
            "text": "<html><body><span class=\"comment-copy\">\n <code>\n  sub sp, #0x48\n </code>\n is allocation of\n <code>\n  0x48\n </code>\n bytes for local variables.\n <a href=\"https://developer.arm.com/docs/ihi0042/g/procedure-call-standard-for-the-arm-architecture-abi-2018q4-documentation\" rel=\"nofollow noreferrer\">\n  Procedure Call Standard for the ARM architecture\n </a>\n .\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": []
}