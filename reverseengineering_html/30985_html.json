{
    "title": ".NET: How to debug or decompile a DanamicMethod with dnSpy?",
    "link": "https://reverseengineering.stackexchange.com/questions/30985/net-how-to-debug-or-decompile-a-danamicmethod-with-dnspy",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I have a managed .NET executable that supplies the msil bytecode of a function as raw bytes. It constructs a\n  <code>\n   DynamicMethod\n  </code>\n  object, sets the bytecode with\n  <code>\n   DynamicMethod.DynamicILInfo.SetCode()\n  </code>\n  and invokes it with\n  <code>\n   DynamicMetho.Invoke()\n  </code>\n  .\n </p>\n <p>\n  What is the best way to decompile or step into this DynamicMethod thing? How do I reverse it?\n </p>\n <p>\n  DnSyp doc has this to say:\n </p>\n <blockquote>\n  <p>\n   Dynamic modules can be debugged (but not dynamic methods due to CLR limitations)\n  </p>\n </blockquote>\n <p>\n  But there has to be a way to deal with it.\n </p>\n <p>\n  I am new to .NET debugging so there might be a simple solution I am missing.\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "719",
    "tags": [
        "dynamic-analysis",
        ".net",
        "dnspy"
    ],
    "user": "bernd feinman",
    "time": "Oct 12, 2022 at 22:24",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<html><body><span class=\"comment-copy\">\n Flare-On chall 8? ;)\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "bernd feinman",
            "text": "<html><body><span class=\"comment-copy\">\n yes. .NET is entirely beyond me. i have literally opened dnspy for the first time yesterday.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  You can debug\n  <code>\n   DynamicMethod\n  </code>\n  's using the\n  <code>\n   EventPipe\n  </code>\n  API. I've written a library that uses it to allow for code injection via\n  <code>\n   DynamicMethod\n  </code>\n  that can be debugged:\n  <a href=\"https://github.com/damieng/DamienG.Library/blob/master/DamienG.Library/Diagnostics/EventPipe/DynamicMethodInjector.cs\" rel=\"nofollow noreferrer\">\n   https://github.com/damieng/DamienG.Library/blob/master/DamienG.Library/Diagnostics/EventPipe/DynamicMethodInjector.cs\n  </a>\n </p>\n <p>\n  First, create a new\n  <code>\n   DynamicMethodInjector\n  </code>\n  object:\n  <code>\n   var injector = new DynamicMethodInjector(\"MyTypeName\", \"MyMethodName\");\n  </code>\n </p>\n <p>\n  Then, add some IL to your\n  <code>\n   DynamicMethod\n  </code>\n  :\n  <code>\n   injector.AddMethodBody(ILGenerator il);\n  </code>\n </p>\n <p>\n  You can then invoke the\n  <code>\n   DynamicMethod\n  </code>\n  as normal, adding a breakpoint to the\n  <code>\n   EventPipe.Start\n  </code>\n  method to avoid hitting the breakpoint before the IL is injected:\n  <code>\n   // Inject IL into the process\ninjector.Inject();\n  </code>\n </p>\n <p>\n  // Invoke your DynamicMethod\nvar result = (int)m.Invoke(obj, new object[] { 1, 2 });\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "evandrix",
            "time": "Mar 1, 2023 at 2:32",
            "is_accepted": false,
            "comments": [
                {
                    "user": "evandrix",
                    "text": "<span class=\"comment-copy\">The file <a href=\"https://github.com/damieng/DamienG.Library/blob/master/DamienG.Library/Diagnostics/EventPipe/DynamicMethodInjector.cs\" rel=\"nofollow noreferrer\">github.com/damieng/DamienG.Library/blob/master/DamienG.Library/…</a> is no longer available. Has it been moved elsewhere? Is there another mirror to it?</span>",
                    "time": null
                }
            ]
        }
    ]
}