{
    "title": "Ghidra with Swift/Objective-C datatypes (NSString)",
    "link": "https://reverseengineering.stackexchange.com/questions/31991/ghidra-with-swift-objective-c-datatypes-nsstring",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm new to using Ghidra, so apologies if this has been asked before, but I couldn't find an answer.\n </p>\n <p>\n  I'm looking at an iOS app, and I can see a function signature that looks like this:\n </p>\n <pre><code>ID Class::DoTheThing(ID param_1, SEL param_2, ID param_3)\n</code></pre>\n <p>\n  I know that\n  <code>\n   param_3\n  </code>\n  is an\n  <code>\n   NSString\n  </code>\n  , but Ghidra doesn't seem to know what an\n  <code>\n   NSString\n  </code>\n  is.\n </p>\n <p>\n  Is there a datatype library that I can add to Ghidra to give it support for this, or do I need to manually tell it what an\n  <code>\n   NSString\n  </code>\n  looks like?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ghidra"
    ],
    "user": "Tony",
    "time": "Jun 22, 2023 at 7:49",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I followed this guide on PoomSmart's GitHub page (\n  <a href=\"https://github.com/PoomSmart/IDAObjcTypes\" rel=\"nofollow noreferrer\">\n   https://github.com/PoomSmart/IDAObjcTypes\n  </a>\n  ) and it seems to have worked. PoomSmart is quite respected in the jailbreak community and I have used their tweaks for long with no issues.\n </p>\n <p>\n  There is one additional step not explicitly mentioned in the guide, which is to select the program architecture. Since I didn't specifically know what to pick, I tried a few of the ARM processor options and it looks good.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "George Katsikas",
            "time": "Jun 28, 2023 at 9:54",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Tony",
                    "text": "<span class=\"comment-copy\">Thanks very much, I'll check that out.</span>",
                    "time": null
                }
            ]
        }
    ]
}