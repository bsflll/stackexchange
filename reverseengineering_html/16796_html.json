{
    "title": "How to step into kernel code from a user-mode code using IDA Pro and WinDbg as a debugger?",
    "link": "https://reverseengineering.stackexchange.com/questions/16796/how-to-step-into-kernel-code-from-a-user-mode-code-using-ida-pro-and-windbg-as-a",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm using\n  <code>\n   IDA Pro\n  </code>\n  and\n  <code>\n   WinDbg\n  </code>\n  as a debugger to step through a WinAPI from a user-mode code. I can do all this, except that when the assembly code encounters the\n  <code>\n   syscall\n  </code>\n  instruction (that enters\n  <code>\n   ring-0\n  </code>\n  code) I cannot step into it:\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/gEms3.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"enter image description here\" src=\"https://i.sstatic.net/gEms3.png\"/>\n  </a>\n </p>\n <p>\n  Can someone show if it's possible to step into a kernel code?\n </p>\n <p>\n  PS. I'm running IDA Pro in a VM from my host Windows system.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "windows",
        "windbg",
        "kernel-mode"
    ],
    "user": "c00000fd",
    "time": "Nov 20, 2017 at 18:22",
    "comments": [
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n you cannot step into kernel mode from usermode seamlessly if you have a pair (physc/vm , vm/vm , physc/physc ) set a breakpoint on the Actual System Call in kernel mode and step in to break  the one in ntdll is just a stub that transfers the execution to kmode\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n a kernel debugger may work I think @blabb\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n <a href=\"https://stackoverflow.com/questions/42776503/how-to-do-hybrid-user-mode-kernel-mode-debugging\" title=\"how to do hybrid user mode kernel mode debugging\">\n  stackoverflow.com/questions/42776503/…\n </a>\n has some ideas and actually mentions IDA, and an answer from blabb :)\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "blabb",
            "text": "<html><body><span class=\"comment-copy\">\n @igor yes a kernel debugger connection needs a pair iiur op expects  to do  it in a single machine\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n oh indeed, it won’t work on the same box.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  In order to step into syscall you must debug your machine from kernel mode debugger.\n  <a href=\"https://www.hex-rays.com/products/ida/support/tutorials/debugging_windbg.pdf\" rel=\"nofollow noreferrer\">\n   https://www.hex-rays.com/products/ida/support/tutorials/debugging_windbg.pdf\n  </a>\n  see Debugging the kernel with VMWare section. \nBut be aware, that in kernel mode debugger you won't be able to debug your single process as it was in user mode. Kernel mode debugging is about debugging all the processes in the system. So you'll have to attach to the target process before you can do anything, and you'll need to learn how to set breakpoints, which will trigger only in your target process.\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Anton Kukoba",
            "time": "Nov 23, 2017 at 9:05",
            "is_accepted": true,
            "comments": []
        }
    ]
}