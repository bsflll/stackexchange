{
    "title": "Convert string to byte array in frida js script",
    "link": "https://reverseengineering.stackexchange.com/questions/32790/convert-string-to-byte-array-in-frida-js-script",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I am having an issue with a JavaScript script to be executed in Frida. In this case, I am intercepting an input from a function where I receive an array of bytes. I need to convert this array to a string, modify it, and then convert it back to an array of bytes before returning the value.\n </p>\n <p>\n  I managed to make the first step work correctly, which is converting the array of bytes into a string and modifying the string. However, the problem arises when I try to convert the string back into an array of bytes; it throws an error. I tried using the Java native function getBytes(), but it gives the error below:\n </p>\n <pre><code>TypeError: not a function\n</code></pre>\n <p>\n  My code is:\n </p>\n <pre><code>//result is byte[]\nlet StringJava = Java.use(\"java.lang.String\");\nvar json = StringJava.$new(result);\ntry {\n  let arg1 = StringJava.$new(\": 0,\");\n  let arg2 = StringJava.$new(\": 1000,\");\n  json = json.replace(arg1,arg2);\n  let newByte = json.getBytes(); //error in line\n  return newByte;\n} catch (error) {\n  console.log(\"error:\", error);\n}\n</code></pre>\n <p>\n  Is there a simple way for me to convert this string back into an array of bytes?\n </p>\n</div>\n</body></html>",
    "votes": "1",
    "answers": 1,
    "views": "453",
    "tags": [
        "java",
        "javascript",
        "frida"
    ],
    "user": "VinixF",
    "time": "Dec 7, 2024 at 14:35",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  The only problem of your code seems to that frida wants to help you too much:\n </p>\n <p>\n  Before you call\n  <code>\n   json = json.replace(arg1,arg2);\n  </code>\n  json is an instance of the Java type\n  <code>\n   java.lang.String\n  </code>\n  .\n </p>\n <p>\n  When you assign the return value of the\n  <code>\n   replace\n  </code>\n  method to\n  <code>\n   json\n  </code>\n  ,  frida seems to automatically convert the Java String to a JavaScript string (I assume for convenience).\n </p>\n <p>\n  If you then try to call\n  <code>\n   getBytes()\n  </code>\n  on the JavaScript string it fails because JavaScript strings don't have this method. As workaround you could change the line to\n  <code>\n   json = StringJava.$new(json).getBytes()\n  </code>\n  , however that would require a lot of unnecessary conversions.\n </p>\n <p>\n  In the end I would recommend to do the whole string replacement with JavaScript code and only for calling\n  <code>\n   getBytes()\n  </code>\n  make it a Java string.\n </p>\n <p>\n  My complete and working test script is this:\n </p>\n <pre><code>Java.perform(() => {\n\n    function test(result) {\n        let StringJava = Java.use(\"java.lang.String\");\n        var json = String(result); // may be unnecessary, just to make sure json is a JavaScript string\n        try {\n            let arg1 = \": 0,\";\n            let arg2 = \": 1000,\";\n            json = json.replace(arg1, arg2);\n            return StringJava.$new(json).getBytes();\n        } catch (error) {\n            console.log(\"error:\", error);\n        }\n    }\n\n    var bytes = test('{ \"a\": 0, \"b\": 1 }');\n    // do something with bytes\n\n});\n</code></pre>\n</div>\n</body></html>",
            "votes": "0",
            "user": "Robert",
            "time": "Mar 8, 2024 at 16:28",
            "is_accepted": false,
            "comments": []
        }
    ]
}