{
    "title": "statically placing hooks on PE file's IAT",
    "link": "https://reverseengineering.stackexchange.com/questions/31233/statically-placing-hooks-on-pe-files-iat",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  recently I started writing my own PE library for C++, and wanted to implement\n  <strong>\n   static IAT/EAT hooking\n  </strong>\n  , (basically hooking by patching the file instead of hooking at runtime), I managed to successfully iterate all the thunk data and retrieve FTs/Names etc.\n </p>\n <p>\n  So where's the issue?\nWell...\n </p>\n <p>\n  <a href=\"https://i.sstatic.net/TOuYM.png\" rel=\"nofollow noreferrer\">\n   <img alt=\"IMAGE_IMPORT_BY_NAME\" src=\"https://i.sstatic.net/TOuYM.png\"/>\n  </a>\n </p>\n <p>\n  As you can see in this scheme, the\n  <em>\n   PE Loader\n  </em>\n  <strong>\n   replaces the IMAGE_THUNK_DATA with the actual dynamic address at runtime\n  </strong>\n  , so, statically, you would have an offset, say\n  <code>\n   0x28010\n  </code>\n  , and at runtime the PE Loader overwrites it with\n  <code>\n   module_base + 0x28010\n  </code>\n  , where module_base would be the dynamically obtained base address of (always as an example)\n  <code>\n   USER32.dll\n  </code>\n  .\n </p>\n <p>\n  If you still don't understand where I want to get; to statically hook the function I would have to do the following steps, taking as an example\n  <code>\n   MessageBoxA\n  </code>\n  function in\n  <code>\n   USER32.dll\n  </code>\n </p>\n <ol>\n  <li>\n   <p>\n    <strong>\n     copy\n    </strong>\n    the\n    <strong>\n     original function\n    </strong>\n    in the\n    <strong>\n     main module memory\n    </strong>\n    (say\n    <code>\n     .text\n    </code>\n    section) and save the address, we're going to use this as an \"original\" for the\n    <strong>\n     detour\n    </strong>\n    (the original function which gets called/returned at the end of the detour, to not break anything)\n   </p>\n  </li>\n  <li>\n   <p>\n    <strong>\n     write/patch\n    </strong>\n    the actual\n    <strong>\n     detour function\n    </strong>\n    in the main module memory (again, say\n    <code>\n     .text\n    </code>\n    section) and use the address as the detour function (the offset to replace instead of the FTs)\n   </p>\n  </li>\n </ol>\n <p>\n  but then here's the problem, replacing the FTs with the detour, the PE Loader would calculate the FTs like\n  <code>\n   USER32.dll\n  </code>\n  +\n  <code>\n   detourOffset\n  </code>\n  , where it should instead calculate\n  <code>\n   mainModuleBase\n  </code>\n  +\n  <code>\n   detourOffset\n  </code>\n  .\n </p>\n <p>\n  one way to \"fix\" this would be replacing the FTs with the \"\"ready\"\" address, so base + detour, but we're talking about STATICALLY hooking IATs, so\n  <strong>\n   we dont have a base address\n  </strong>\n  .\n </p>\n <p>\n  Other than having to patch something that hooks the IAT at runtime, any idea how I could achieve this?\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 0,
    "views": "169",
    "tags": [
        "c++",
        "pe",
        "function-hooking",
        "iat"
    ],
    "user": "VEIL",
    "time": "Dec 5, 2022 at 13:55",
    "comments": [],
    "answers_data": []
}