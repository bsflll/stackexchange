{
    "title": "How can I progress reverse engineering this Novatek NT96650 firmware",
    "link": "https://reverseengineering.stackexchange.com/questions/31461/how-can-i-progress-reverse-engineering-this-novatek-nt96650-firmware",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm trying to RE a Novatek NT96650 based trail cam. This device is circa 2012, and has a MIPS32 24Kec core.\n </p>\n <ul>\n  <li>\n   I have copies of the firmware,\n  </li>\n  <li>\n   I have extracted the contents of flash,\n  </li>\n  <li>\n   and have a pretty good assembly language listing of it from Ghidra.\n  </li>\n </ul>\n <p>\n  But I am now stuck trying to get any further. The listing shows the detail of (what I assume is) device drivers for memory-mapped peripherals, but the\n  <strong>\n   Novatek\n  </strong>\n  device and dev environment are not documented. Without the ability to (say) isolate LCD management code or flash access code, I am really struggling to make any sense of it.\n </p>\n <p>\n  I do not have any low-level access to the device, or the ability to upload amended firmware. Does anyone have any suggestions on other information sources I could use or techniques I could try? I did wonder if Novatek's SoC architecture is maybe similar to other MIPS vendor's devices, and I might get some clues from that. Does anyone have any idea if that idea is a runner, and if so where I could look?\n </p>\n</div>\n</body></html>",
    "votes": "4",
    "answers": 0,
    "views": "165",
    "tags": [
        "ghidra"
    ],
    "user": "Observer42",
    "time": "Jan 24, 2023 at 8:46",
    "comments": [],
    "answers_data": []
}