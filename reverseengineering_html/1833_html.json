{
    "title": "How to find offsets in OllyDBG from IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/1833/how-to-find-offsets-in-ollydbg-from-ida",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm currently trying to gain some practice in RE and I need some help for patching a DLL.\nHere are my steps:\nI first analyze the main program and the dll in IDA trying to understand the logic. I then switch to OllyDBG for patching. Well, the problem is, since Olly dynamically loads the dll (in contrast to the static standalone analysis in IDA), the offsets are different and I don't know how to find the offset that I've inspected in IDA.\nIs there some easy way to \"rediscover\" the offset in the dll?\n </p>\n <p>\n  Thanks in advance!\n </p>\n</div>\n</body></html>",
    "votes": "11",
    "answers": 5,
    "views": "12k",
    "tags": [
        "ida",
        "ollydbg"
    ],
    "user": "Caroline",
    "time": "Apr 17, 2013 at 14:17",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<html><body><span class=\"comment-copy\">\n You patch a live program or on disk? Why not do all of it in IDA?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "0xea",
            "text": "<html><body><span class=\"comment-copy\">\n i'd guess that actual offsets are the same, but the base is changed?\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Caroline",
            "text": "<html><body><span class=\"comment-copy\">\n Running a patched program directly in IDA (Pro 6.1)? How? I can use the \"Assemble\" function in IDA and then export the diff. But running the changed code directly? Additionally, since the changes are in the dll and I can only open one file at a time, I wonder how this should work...\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<html><body><span class=\"comment-copy\">\n @Caroline: IDA has a debugger, you know.\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If only the base is changed, but offsets are constant (as I'd guess is the case), you can just rebase the program in IDA. You can do so by edit->segments->Rebase program ... menu. \nSpecifying the same starting base in IDA as is in Olly should help. Base may be different for numerous reasons, one of which might be ASLR.\n </p>\n</div>\n</body></html>",
            "votes": "12",
            "user": "0xea",
            "time": "Apr 17, 2013 at 14:50",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Peter Andersson",
                    "text": "<span class=\"comment-copy\">I usually calculate it using calc which feels really clumsy. There has to be a better way than doing this sort of stuff manually or rebasing things back and forth. In my experience  after you rebase you can get some notation errors in IDA.</span>",
                    "time": null
                },
                {
                    "user": "0xea",
                    "text": "<span class=\"comment-copy\">I think I had encountered the same issue, and sometimes am calculating the addresses back and forth which is error prone and tedious. Would like to see a better solution too.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <blockquote>\n  <p>\n   Is there some easy way to \"rediscover\" the offset in the dll?\n  </p>\n </blockquote>\n <p>\n  Yes, here's the algorithm:\n </p>\n <p>\n  <code>\n   Target_Address_in_OllyDbg = Source_Address_in_IDA - Base_Address_in_IDA + Base_Address_in_OllyDbg\n  </code>\n </p>\n <p>\n  Here are the definitions:\n </p>\n <p>\n  <code>\n   Target_Address_in_OllyDbg\n  </code>\n  : The target address in OllyDbg.\n </p>\n <p>\n  <code>\n   Source_Address_in_IDA\n  </code>\n  : The source address in IDA.\n </p>\n <p>\n  <code>\n   Base_Address_in_IDA\n  </code>\n  : The base address of the disassembled module in IDA. You can find this value by going to\n  <em>\n   Edit --> Segments --> Rebase program...\n  </em>\n  in IDA's menu bar. The\n  <em>\n   Value\n  </em>\n  for\n  <em>\n   Image base\n  </em>\n  in that dialog box is the\n  <code>\n   Base_Address_in_IDA\n  </code>\n  .\n </p>\n <p>\n  <code>\n   Base_Address_in_OllyDbg\n  </code>\n  : The base address of the target module in OllyDbg. You can find this value by pressing\n  <em>\n   Alt-E\n  </em>\n  in OllyDbg (or by going to\n  <em>\n   View --> Executable modules\n  </em>\n  in OllyDbg's menu bar). Find your target module in the\n  <em>\n   Executable modules\n  </em>\n  window; the leftmost field (\n  <em>\n   Base\n  </em>\n  ) is the\n  <code>\n   Base_Address_in_OllyDbg\n  </code>\n  .\n </p>\n</div>\n</body></html>",
            "votes": "8",
            "user": "Jason Geffner",
            "time": "Apr 17, 2013 at 15:05",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If anyone finds it useful I made myself a little calculator to easily get addresses for locations in my disassembler which uses the same  algorithm described above.\nIt currently defaults to binary ninja's base address but this is easy to change in the code.\n  <a href=\"https://github.com/scrapbird/OffsetCalc\" rel=\"nofollow noreferrer\">\n   https://github.com/scrapbird/OffsetCalc\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "scrapbird",
            "time": "Feb 21, 2017 at 10:47",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  i use this small idc script \ni set the base once and input the olly address using the AskAddr\n </p>\n <pre><code>auto olbase , oladdr , rva;\nolbase = 0x20000;\noladdr = AskAddr(0,\"enter address as seen in olly\");\nJump(  MinEA() + oladdr - olbase);\n</code></pre>\n</div>\n</body></html>",
            "votes": "0",
            "user": "blabb",
            "time": "Feb 24, 2017 at 9:56",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I usually rebase it in IDA to\n  <code>\n   0\n  </code>\n  . Then using\n  <code>\n   Adv Ctr + G\n  </code>\n  option of StrongOD, you can just put the address from IDA as RVA to needed module.\n </p>\n</div>\n</body></html>",
            "votes": "0",
            "user": "h0m3us3r",
            "time": "Apr 28, 2020 at 21:39",
            "is_accepted": false,
            "comments": []
        }
    ]
}