{
    "title": "convert a memory location to string in Ghidra",
    "link": "https://reverseengineering.stackexchange.com/questions/32474/convert-a-memory-location-to-string-in-ghidra",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I asked exactly the same question\n  <a href=\"https://stackoverflow.com/questions/77429840/convert-a-memory-location-to-string-in-ghidra\">\n   here\n  </a>\n  , but later I figure out this community and found out this helpful to ask it here as well.\n </p>\n <p>\n  I would like to have a decompiled pseudo-code in\n  <code>\n   Ghidra\n  </code>\n  like:\n </p>\n <pre><code>FUN_4c4363e8(\"Hello world\");\n</code></pre>\n <p>\n  This is what usually I see in\n  <code>\n   IDA\n  </code>\n  , but in Ghidra, by default I get such a code:\n </p>\n <pre><code>FUN_4c4363e8((char*)(DAT_4c447798));\n</code></pre>\n <p>\n  Is there a way to force the decompiler to convert the\n  <code>\n   DAT_4c447798\n  </code>\n  memory address to\n  <code>\n   \"Hello world\"\n  </code>\n  null-terminated string?\n </p>\n <p>\n  Thanks.\n </p>\n</div>\n</body></html>",
    "votes": "3",
    "answers": 1,
    "views": "755",
    "tags": [
        "ida",
        "ghidra"
    ],
    "user": "Iman Abdollahzadeh",
    "time": "Nov 6, 2023 at 9:09",
    "comments": [
        {
            "user": "sudhackar",
            "text": "<html><body><span class=\"comment-copy\">\n right click on the location > Data > Choose TerminatedCString\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "Iman Abdollahzadeh",
            "text": "<html><body><span class=\"comment-copy\">\n @sudhackar Did not help. It still stays the same LABEL pointer and not a string in decompiled C pseudocode.\n</span>\n</body></html>",
            "time": null
        },
        {
            "user": "sudhackar",
            "text": "<html><body><span class=\"comment-copy\">\n Can you share the bytes that's supposed to be the string? possible to share binary?\n</span>\n</body></html>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Probably this DAT_4c447798 is a pointer and it should point to the string.\n </p>\n <p>\n  Ghidra acts much better, if you specify that some memory areas are constant.\nIn the menu check\n  <code>\n   Window\n  </code>\n  ->\n  <code>\n   Memory map\n  </code>\n  and remove ticks at\n  <code>\n   W\n  </code>\n  column for all areas where your code does not wrote to.\n </p>\n <p>\n  And of course, please provide more details in further questions.\n </p>\n</div>\n</body></html>",
            "votes": "2",
            "user": "Alexey Esaulenko",
            "time": "Nov 13, 2023 at 6:57",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Iman Abdollahzadeh",
                    "text": "<span class=\"comment-copy\">Solved my problem. Thanks. I had a lot limitations to tell more than what I said in my question.</span>",
                    "time": null
                }
            ]
        }
    ]
}