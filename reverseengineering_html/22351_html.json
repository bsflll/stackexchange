{
    "title": "How to navigate Disassembly view to the current instruction location?",
    "link": "https://reverseengineering.stackexchange.com/questions/22351/how-to-navigate-disassembly-view-to-the-current-instruction-location",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'm using x32dbg and I've set a hardware memory breakpoint. It triggers successfully for a specified module and the debugger pauses and a message on the bottom says:\n </p>\n <pre><code>Hardware breakpoint (byte, read/write) at mscorlib.ni.69`9d3d9 (6919d3d9)!\n</code></pre>\n <p>\n  All good so far. Now naturally I want to go to address\n  <code>\n   6919d3d9\n  </code>\n  , which I assume to be the starting memory address of the code that accessed my target memory location.\n </p>\n <p>\n  So I go to Breakpoints view (\n  <kbd>\n   Alt\n  </kbd>\n  +\n  <kbd>\n   B\n  </kbd>\n  ) double click on the breakpoint and it gets me to Dump, ie the memory view.. This is where I'm confused. I can't find out how to go to address\n  <code>\n   6919D3D9\n  </code>\n  to see the disassembled instructions. Kindly help if you can.\n </p>\n</div>\n</body></html>",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "disassembly",
        "x64dbg",
        "breakpoint",
        "memory-dump"
    ],
    "user": "KeyC0de",
    "time": "Apr 11, 2022 at 18:32",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Normally the debugger should pause at the location where breakpoint is triggered, or you can use \"jump to EIP\" or similar command to navigate to the instruction being executed (which should be the one that triggered the exception).\n </p>\n</div>\n</body></html>",
            "votes": "3",
            "user": "Igor Skochinsky",
            "time": "Oct 20, 2019 at 17:32",
            "is_accepted": true,
            "comments": []
        }
    ]
}