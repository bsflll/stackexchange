{
    "title": "Getting Xrefs to Windows Library Functions in IDA Pro",
    "link": "https://reverseengineering.stackexchange.com/questions/16129/getting-xrefs-to-windows-library-functions-in-ida-pro",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Ok so let's say that a program obfuscated its IAT and i can't see it in IDA Pro. In OllyDbg there is a plugin where you press\n  <code>\n   Ctrl+G\n  </code>\n  you can search for a library function and set a breakpoint even though that function is not listed in the IAT. My question is how can i do this in IDA Pro?\n </p>\n <p>\n  Thanks\n </p>\n</div>\n</body></html>",
    "votes": "0",
    "answers": 1,
    "views": "460",
    "tags": [
        "ida",
        "ollydbg",
        "malware",
        "ida-plugin",
        "iat"
    ],
    "user": "rustam Shirinov",
    "time": "Aug 18, 2017 at 11:15",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  During debugging, you can use names in format \"DllName_export\" (e.g.\n  <code>\n   kernel32_CreateFileA\n  </code>\n  ) to jump to functions exported by the loaded DLLs, or you can use such names in \"symbolic breakpoints\" so they're automatically added when DLL gets loaded.\n </p>\n <p>\n  Also: double-click a DLL in the Modules list to see its exports and jump to/set breakpoints on them.\n </p>\n</div>\n</body></html>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Aug 18, 2017 at 13:05",
            "is_accepted": true,
            "comments": [
                {
                    "user": "rustam Shirinov",
                    "text": "<span class=\"comment-copy\">taking a look at the module list answered my question :)</span>",
                    "time": null
                }
            ]
        }
    ]
}