{
    "title": "Windows API reference for OllyDbg",
    "link": "https://reverseengineering.stackexchange.com/questions/1603/windows-api-reference-for-ollydbg",
    "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  There is an old help file containing Windows API I used few years ago with ollydebug, which can jump to the appropriate help page of function when double clicking on the function in the disassembly window.\n </p>\n <p>\n  Is there a more recent reference like this which includes also Windows 7 library calls ?\n </p>\n <p>\n  I managed to find an online reference in Microsoft website but a local file is much easier to work with...\n </p>\n</div>\n</body></html>",
    "votes": "10",
    "answers": 3,
    "views": "6k",
    "tags": [
        "winapi",
        "ollydbg"
    ],
    "user": "Mellowcandle",
    "time": "Apr 5, 2013 at 19:32",
    "comments": [],
    "answers_data": [
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  If you are using OllyDbg 1.x, you could use the\n  <a href=\"http://blog.buguroo.com/?p=4071&lang=en\" rel=\"noreferrer\">\n   MSDN Help Plugin\n  </a>\n  which simply looks up the requested API call on MSDN. It works for me on my Windows XP sp3 system with OllyDbg 1.x.\n </p>\n <p>\n  Of course, this requires internet connectivity.\n </p>\n <p>\n  Another incomplete option that\n  <em>\n   may\n  </em>\n  work is to obtain the Windows 7 SDK and be sure to install the \"Documentation / Win32 and COM\" sub feature.\n </p>\n <p>\n  Then copy all the *.HXS files from the SDK install folder. Then the only task left is to find a way to convert *.HXS files into a single *.HLP file....not sure if that's possible or not.\n </p>\n <p>\n  FWIW, the\n  <a href=\"https://bitbucket.org/daniel_plohmann/simplifire.idascope\" rel=\"noreferrer\">\n   IDA Scope\n  </a>\n  plugin (for IDA Pro) recommends this in their\n  <a href=\"http://pnx-tf.blogspot.com/2012/07/idascope-update-winapi-browsing.html\" rel=\"noreferrer\">\n   manual\n  </a>\n  for integrating offline MSDN help. Except their instructions have the user extract the HXS files to a folder and point IDA Scope to it where IDA Scope knows how to read/parse the files extracted from the HXS files. The HXS files can be deleted after extracting.\n </p>\n</div>\n</body></html>",
            "votes": "7",
            "user": "Mick",
            "time": "Apr 5, 2013 at 13:57",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Mellowcandle",
                    "text": "<span class=\"comment-copy\">MSDN plugin is an excellent solution for me, thanks.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  Is this something You looking for?\n </p>\n <p>\n  <a href=\"http://tuts4you.com/download.php?view.3307\" rel=\"nofollow\">\n   Win32api and x86 Opcodes\n  </a>\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "Denis Laskov",
            "time": "Apr 5, 2013 at 13:00",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">Not up-to-date, though. And wouldn't be. But the new help systems also would allow for integration, probably the OllyDbg author simply hasn't done it.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<html><body><div class=\"s-prose js-post-body\" itemprop=\"text\">\n <p>\n  I'd recommend installing the\n  <a href=\"http://msdn.microsoft.com/en-us/library/ms717422.aspx\" rel=\"nofollow\">\n   Windows SDK\n  </a>\n  documentation and the\n  <a href=\"http://www.microsoft.com/en-us/download/details.aspx?id=11800\" rel=\"nofollow\">\n   Driver Development Kit\n  </a>\n  if you don't have them already. It might seem like overkill but it's extremely helpful to have both of these documentation kits locally.\n </p>\n <p>\n  A word of caution when installing the Windows SDK documentation. Microsoft removed dexplore.exe (viewer) in the Windows 7 2010 SDK update. It now relies on the default browser and the documentation has to be pre-configured and downloaded. The new viewing option feels much slower than dexplorer.exe. I have the Windows XP SDK and the Windows 7 SDK documentation installed because I prefer dexplorer.exe\n </p>\n</div>\n</body></html>",
            "votes": "4",
            "user": "alexanderh",
            "time": "Apr 5, 2013 at 14:11",
            "is_accepted": false,
            "comments": []
        }
    ]
}