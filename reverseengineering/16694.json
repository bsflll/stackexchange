{
    "title": "How to decompile an exe file? [duplicate]",
    "link": "https://reverseengineering.stackexchange.com/questions/16694/how-to-decompile-an-exe-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>This question already has answers here</b>:\n                                \n                            </div>\n</div>\n</div>\n</div>\n<div class=\"flex--item mb0 mt4\">\n<a dir=\"ltr\" href=\"/questions/3800/why-there-are-not-any-disassemblers-that-can-generate-re-assemblable-asm-code\">Why there are not any disassemblers that can generate re-assemblable asm code?</a>\n<span class=\"question-originals-answer-count\">\n                                (5 answers)\n                            </span>\n</div>\n<div class=\"flex--item mb0 mt8\">Closed <span class=\"relativetime\" title=\"2017-11-04 19:23:58Z\">7 years ago</span>.</div>\n</div>\n</aside>\n</div>\n<p>I have been wondering, if every program is based on machine code, can we not decompile a program until it hits machine code and make it up to real programming languages? </p>\n<p>How to decompile exe files with a rate of 100%? If my computer understands the processes it should take, isn't it also be able return me the steps of what's its done, values from memory exc..? </p>\n<p>How do I decompile an exe file without an error?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "52k",
    "tags": [
        "windows",
        "decompilation",
        "decryption"
    ],
    "user": "Ahmed Can Unbay",
    "time": "7 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<ol>\n<li><blockquote>\n<p>I have been wondering, if every program is based on machine code, can we not decompile a program until it hits machine code and make it up to real programming languages?</p>\n</blockquote>\n<p>This question is based on a false premise; namely that every program is based on machine code. Programs are typically written in high-level languages, which are by design architecture independent and therefore must be translated into an architecture-specific form in order to be executed:</p>\n<ul>\n<li><blockquote>\n<p>“High-level” programming languages take their name from the relatively\n  high level, or degree of abstraction, of the features they provide, relative to those of the assembly languages they were originally designed to replace. The adjective “abstract,” in this context, refers to the degree to which language features are separated from the details of any particular computer architecture.<sup>1</sup> </p>\n</blockquote></li>\n<li><blockquote>\n<p>Machine independence is a fairly simple concept. Basically it says that a programming language should not rely on the features of any particular instruction set for its efficient implementation.<sup>1</sup></p>\n</blockquote></li>\n</ul>\n<p>Programming languages are examples of formal languages:</p>\n<ul>\n<li><a href=\"https://cs.stackexchange.com/questions/30639/what-is-the-relationship-between-programming-languages-regular-expressions-and/30667#30667\">What is the Relationship Between Programming Languages, Regular Expressions and Formal Languages</a></li>\n<li><a href=\"http://www.its.caltech.edu/~matilde/FormalLanguageTheory.pdf\" rel=\"nofollow noreferrer\">Formal Language Theory</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Syntax_(programming_languages)#Levels_of_syntax\" rel=\"nofollow noreferrer\">Programming language syntax</a>\n<br/>\n<br/></li>\n</ul>\n<p>The translation of the series of statements written in a programming language in a program source file to semantically equivalent object code is accomplished by a compiler. Decompilation involves translation of architecture-dependent object code to a semantically equivalent representation (source code) that is not architecture specific, the reverse process of compilation.</p></li>\n<li><blockquote>\n<p>How to decompile exe files with a rate of 100%? </p>\n</blockquote>\n<p>This does not seem to be possible.</p>\n<blockquote>\n<p>Certainly, fully automated decompilation of arbitrary machine-code programs is not possible -- this problem is theoretically equivalent to the Halting Problem, an undecidable problem in Computer Science. What this means is that automatic (no expert intervention) decompilation cannot be achieved for all possible programs that are ever written. Further, even if a certain degree of success is achieved, the automatically generated program will probably lack meaningful variable and function names as these are not normally stored in an executable file (except when stored for debugging purposes).<sup><a href=\"http://program-transformation.org/Transform/DecompilationPossible\" rel=\"nofollow noreferrer\">2</a></sup></p>\n</blockquote></li>\n</ol>\n<p>Further description of the challenges posed for decompilation can be found here:</p>\n<ul>\n<li><a href=\"https://yurichev.com/mirrors/DCC_decompilation_thesis.pdf\" rel=\"nofollow noreferrer\">Reverse Compilation Techniques</a></li>\n<li><a href=\"https://users.ece.cmu.edu/~dbrumley/pdf/Schwartz%20et%20al._2013_Native%20x86%20Decompilation%20using%20Semantics-Preserving%20Structural%20Analysis%20and%20Iterative%20Control-Flow%20Structuring.pdf\" rel=\"nofollow noreferrer\">Native x86 Decompilation using Semantics-Preserving Structural Analysis and Iterative Control-Flow Structuring</a></li>\n<li><a href=\"http://decompilation.info/sites/all/files/articles/C%20decompilation.pdf\" rel=\"nofollow noreferrer\">C Decompilation: Is It Possible?</a></li>\n</ul>\n<p>In fact, correct disassembly (much less decompilation) is a major challenge:</p>\n<ul>\n<li><a href=\"https://reverseengineering.stackexchange.com/questions/2580/why-is-disassembly-not-an-exact-science/8677#8677\">Why is disassembly not an exact science</a></li>\n<li><a href=\"https://silviocesare.wordpress.com/2007/11/17/on-disassembling-obfuscated-assembly/\" rel=\"nofollow noreferrer\">Disassembling Obfuscated Assembly</a></li>\n</ul>\n<hr/>\n<p><sub>1. Scott, Michael L. <em>Programming Language Pragmatics</em>. 3rd ed. Page 111</sub></p>\n<p><sub>2. <a href=\"http://program-transformation.org/Transform/DecompilationPossible\" rel=\"nofollow noreferrer\">Is Decompilation Possible?</a></sub></p>\n</div>",
            "votes": "7",
            "user": "julian",
            "time": "Nov 3, 2017 at 19:08",
            "is_accepted": true,
            "comments": []
        }
    ]
}