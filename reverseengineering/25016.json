{
    "title": "Is address in program can change",
    "link": "https://reverseengineering.stackexchange.com/questions/25016/is-address-in-program-can-change",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I talking about linux arch.</p>\n<p>When I open program in Ida (statically ) I can see all instructions address like <code>0x20da mov r8 r2</code> </p>\n<p>When I want  use that address to breakpoint (for example with <code>ptrace</code> or <code>gdb</code> ) Is there ant situation that this address will change?</p>\n<p>I know the ASLR can change the base address of libraries that loaded , but is <strong>instruction's address that not include in library</strong> can change when the program is running?</p>\n<p>All  of process/binary that I see the address's instruction didn't change compare runtime and what you can see in Ida .</p>\n<p>If this address can change, how can I know if is this address may change (maybe flag in binary or flag in system) and how can I find out what is the address when the process is already running.</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "334",
    "tags": [
        "ida",
        "linux",
        "gdb"
    ],
    "user": "yfr24493AzzrggAcom",
    "time": "May 15, 2020 at 6:07",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Yes, this is called Position Independent Executable (PIE). It randomizes the base address of the executable. It is enabled by default nowadays in most cases by gcc/the linker.</p>\n<p>There are several ways to statically determine whether a binary is built with PIE. One method is to use <code>file</code>; a PIE binary reports \"shared object\" (since that's what it is) compared to just \"executable\". Other tools e.g. <code>checksec</code> can tell you as well. You will certainly know when you open the program in your debugger and the program addresses look nothing like what you're used to.</p>\n<p>If the binary is not stripped, you should be able to set breakpoints normally using function names after the executable has started. However, a stripped binary becomes much more difficult; I am not aware of a way to do that effectively. </p>\n<p>You can do <code>cat /proc/&lt;PID&gt;/maps</code> on the process to view the memory mappings. The ones you want will show as mapped to the executable on disk. The first value should give you the starting offset.</p>\n<p>Here's an example on my current process, <code>cat</code>:</p>\n<pre><code>$ cat /proc/self/maps\n559912213000-559912215000 r--p 00000000 07:00 1191827                    /usr/bin/cat\n559912215000-55991221a000 r-xp 00002000 07:00 1191827                    /usr/bin/cat\n55991221a000-55991221d000 r--p 00007000 07:00 1191827                    /usr/bin/cat\n55991221d000-55991221e000 r--p 00009000 07:00 1191827                    /usr/bin/cat\n55991221e000-55991221f000 rw-p 0000a000 07:00 1191827                    /usr/bin/cat\n559912b4c000-559912b6d000 rw-p 00000000 00:00 0                          [heap]\n&lt;snip&gt;\n</code></pre>\n<p>In this case, <code>0x559912213000</code> would be your base address.</p>\n</div>",
            "votes": "1",
            "user": "multithr3at3d",
            "time": "May 15, 2020 at 15:00",
            "is_accepted": false,
            "comments": [
                {
                    "user": "yfr24493AzzrggAcom",
                    "text": "<span class=\"comment-copy\">1)  Is executed file can be <code>Position Independent Executable</code> ? Is not only for library? 2) when the process already running, is there any way to find this offset?</span>",
                    "time": null
                },
                {
                    "user": "multithr3at3d",
                    "text": "<span class=\"comment-copy\">@yfr24493AzzrggAcom 1. Yes, it is common for executables 2. Yes, see my edit</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It is possible that the address is relocated.</p>\n<p>The relocation table, typically named <code>.reloc</code> contains address \"translations\" for the loader, placing bytes in file offsets in different addresses in runtime.</p>\n</div>",
            "votes": "0",
            "user": "Yotamz",
            "time": "May 16, 2020 at 13:08",
            "is_accepted": false,
            "comments": []
        }
    ]
}