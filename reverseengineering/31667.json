{
    "title": "How do you identify a software framework?",
    "link": "https://reverseengineering.stackexchange.com/questions/31667/how-do-you-identify-a-software-framework",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I downloaded a free app but I want to stop it from showing ads.</p>\n<p><a href=\"https://www.statista.com/statistics/869224/worldwide-software-developer-working-hours/\" rel=\"nofollow noreferrer\">https://www.statista.com/statistics/869224/worldwide-software-developer-working-hours/</a></p>\n<p>Apparently it's almost certainly in one of the top two frameworks, but which?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "101",
    "tags": [
        "android",
        "apk"
    ],
    "user": "Ethan Miller",
    "time": "Mar 13, 2023 at 17:06",
    "comments": [
        {
            "user": "Mega Tonnage",
            "text": "<span class=\"comment-copy\">If you unpack it, you can browse through all the classes to see which one.</span>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">Why do you think it is \"almost certainly in one of the top two frameworks\"? A lot of apps are still developed naively using Java/Kotlin code without using any of these frameworks.</span>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">I don't know you and thus don't know how much you know about those frameworks therefore I am asking. If you would already know for sure that one of the two too frameworks was used that you may already have found indicators for the one or the other framework, which would make writing a concrete answer much easier. If this was just a guess by you than it would be better to remove it from the question as it could mislead people and end up in answers that are not helpful to you.</span>",
            "time": null
        },
        {
            "user": "julian",
            "text": "<span class=\"comment-copy\">@EthanMiller Your comments have been deleted for violating the <a href=\"https://reverseengineering.stackexchange.com/conduct\">code of conduct</a>. Specifically for ad hominem and unfriendliness. Please refrain from communicating this way. Further, it's not clear from the way the question is currently worded what it has to do with reverse engineering.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There are several ways to identify which cross platform framework(s) are used within an app:</p>\n<ol>\n<li><p>Use the Internet and learn what files and components are added by a certain framework and then look at the APK file of your app. Often certain file-names or file extensions inside the APK are good indicators which framework is used. <a href=\"https://stackoverflow.com\">https://stackoverflow.com</a> is a good place to start. Read questions on different framework and make yourself familiar with file names mentioned for each framework. You will soon be able to see which files are specific for which framework.</p>\n</li>\n<li><p>Use sample apps that make use of a certain cross platform framework. Often you can find sample apps (e.g. Hello world) in compiled form in Play Store or on  Github project pages (or other developer services). Download them and unzip them and and compare them to your APK file. Note that some frameworks may change over time so old apps of framework X my look on APK level totally different than newer apps.</p>\n</li>\n</ol>\n<p>Alternatively you can try to build sample apps you find in source code form yourself but that would require to make yourself familiar with every framework technology and build-system.</p>\n</div>",
            "votes": "1",
            "user": "Robert",
            "time": "Mar 14, 2023 at 12:45",
            "is_accepted": false,
            "comments": []
        }
    ]
}