{
    "title": "Technicolor TG799vac Modem/Router Dumping The Nand Flash",
    "link": "https://reverseengineering.stackexchange.com/questions/13575/technicolor-tg799vac-modem-router-dumping-the-nand-flash",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Ok, so I have been trying to dump the contents of a Technicolor TG799vac.</p>\n<p>So far I have removed the flash chip and read out the chip using the DumpFlash.py utility\nand used binwalk to locate the Squashfs File system </p>\n<pre><code>DECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n39436         0x9A0C          SHA256 hash constants, big endian\n31764480      0x1E4B000       JFFS2 filesystem, big endian\n32013764      0x1E87DC4       JFFS2 filesystem, big endian\n32242272      0x1EBFA60       JFFS2 filesystem, big endian\n36765696      0x2310000       Squashfs filesystem, little endian, version 4.0, compression:xz, size: 14928222 bytes, 3253 inodes, blocksize: 262144 bytes, created: 2016-06-28 03:08:22\n51709334      0x3150596       xz compressed data\n51855814      0x31741C6       xz compressed data\n51922474      0x318462A       xz compressed data\n52004354      0x3198602       xz compressed data\n52046150      0x31A2946       xz compressed data\n52047662      0x31A2F2E       xz compressed data\n52091472      0x31ADA50       xz compressed data\n52093306      0x31AE17A       xz compressed data\n52095388      0x31AE99C       xz compressed data\n52097286      0x31AF106       xz compressed data\n52099504      0x31AF9B0       xz compressed data\n52101750      0x31B0276       xz compressed data\n52103748      0x31B0A44       xz compressed data\n52106574      0x31B154E       xz compressed data\n52108628      0x31B1D54       xz compressed data\n52110506      0x31B24AA       xz compressed data\n52112416      0x31B2C20       xz compressed data\n52114650      0x31B34DA       xz compressed data\n52116652      0x31B3CAC       xz compressed data\n52118514      0x31B43F2       xz compressed data\n52118772      0x31B44F4       xz compressed data\n52122718      0x31B545E       xz compressed data\n52126772      0x31B6434       xz compressed data\n52131218      0x31B7592       xz compressed data\n52135620      0x31B86C4       xz compressed data\n52138550      0x31B9236       xz compressed data\n52141480      0x31B9DA8       xz compressed data\n52144930      0x31BAB22       xz compressed data\n52148772      0x31BBA24       xz compressed data\n52152506      0x31BC8BA       xz compressed data\n52153220      0x31BCB84       xz compressed data\n52153882      0x31BCE1A       xz compressed data\n52155856      0x31BD5D0       xz compressed data\n52157758      0x31BDD3E       xz compressed data\n52159824      0x31BE550       xz compressed data\n137234956     0x82E0A0C       SHA256 hash constants, big endian\n</code></pre>\n<p>I used <code>dd</code> to extract the Image: </p>\n<pre><code>$ dd  if=Modem.img bs=1 skip=36765696 count=14928222 of=Modem.squashfs\n14928222+0 records in\n14928222+0 records out\n14928222 bytes (15 MB) copied, 22.0777 s, 676 kB/s\n</code></pre>\n<p>I tried to <code>unsuqashfs</code> the image:</p>\n<pre><code>$ unsquashfs -s Modem.squashfs\nFound a valid SQUASHFS 4:0 superblock on Modem.squashfs.\nCreation or last append time Tue Jun 28 13:08:22 2016\nFilesystem size 14578.34 Kbytes (14.2 Mbytes)\nCompression xz\nxz: error reading stored compressor options from filesystem! \nBlock size 262144 \nFilesystem is exportable via NFS                                                                           Inodes are compressed\nData is compressed                                                                    Fragments are compressed                                                                  Always-use-fragments option is not specified                                                                     Xattrs are not stored                                                                        Duplicates are Removed                                                                       Number of fragments 85                                                                            Number of inodes 3253                                                                         Number of ids 1\n\n$ unsquashfs -d squash-root1  Modem.squashfs\nParallel unsquashfs: Using 4 processors\nLseek failed because Invalid argument\nread_block: failed to read block @0x71eed2525ee8f30e\nread_uids_guids: failed to read id table block\nFATAL ERROR:failed to uid/gid table\n</code></pre>\n<p>But, it failed. So, I tried to extract with <code>firmware-mod-kit</code>:</p>\n<pre><code>$ ./unsquashfs_all.sh ~/projects/Telstra/DumpFlash/Modem.squashfs ~/projects/Telstra/DumpFlash/Squashfs/\n\nAttempting to extract SquashFS .X file system...\n\nTrying ./src/squashfs-2.1-r2/unsquashfs-lzma... \nTrying ./src/squashfs-2.1-r2/unsquashfs... \nTrying ./src/squashfs-3.0/unsquashfs-lzma... \nTrying ./src/squashfs-3.0/unsquashfs... \nTrying ./src/squashfs-3.0-lzma-damn-small-variant/unsquashfs-lzma... \nTrying ./src/others/squashfs-2.0-nb4/unsquashfs... \nTrying ./src/others/squashfs-3.0-e2100/unsquashfs-lzma... \nTrying ./src/others/squashfs-3.0-e2100/unsquashfs... \nTrying ./src/others/squashfs-3.2-r2/unsquashfs... \nTrying ./src/others/squashfs-3.2-r2-lzma/squashfs3.2-r2/squashfs-tools/unsquashfs... \nTrying ./src/others/squashfs-3.2-r2-hg612-lzma/unsquashfs... \nTrying ./src/others/squashfs-3.2-r2-wnr1000/unsquashfs... \nTrying ./src/others/squashfs-3.2-r2-rtn12/unsquashfs... \nTrying ./src/others/squashfs-3.3/unsquashfs... \nTrying ./src/others/squashfs-3.3-lzma/squashfs3.3/squashfs-tools/unsquashfs... \nTrying ./src/others/squashfs-3.3-grml-lzma/squashfs3.3/squashfs-tools/unsquashfs... \nTrying ./src/others/squashfs-3.4-cisco/unsquashfs... \nTrying ./src/others/squashfs-3.4-nb4/unsquashfs-lzma... \nTrying ./src/others/squashfs-3.4-nb4/unsquashfs... \nTrying ./src/others/squashfs-4.2-official/unsquashfs... Parallel unsquashfs: Using 4 processors\nTrying ./src/others/squashfs-4.2/unsquashfs... Parallel unsquashfs: Using 4 processors\nTrying ./src/others/squashfs-4.0-lzma/unsquashfs-lzma... Parallel unsquashfs: Using 4 processors\nTrying ./src/others/squashfs-4.0-realtek/unsquashfs... Skipping others/squashfs-hg55x-bin (wrong version)...\nFile extraction failed!\n</code></pre>\n<p>I also tried <code>sasquatch</code>:</p>\n<pre><code>$ sasquatch  -trace Modem.squashfs \nsquashfs: read_bytes: reading from position 0x0, bytes 32\nSquashFS version [4.0] / inode count [3253] suggests a SquashFS image of the same endianess\nsquashfs: read_bytes: reading from position 0x0, bytes 96\nsquashfs: read_bytes: reading from position 0x60, bytes 2\nsquashfs: read_block: block @0x60, 12 uncompressed bytes\nsquashfs: read_bytes: reading from position 0x62, bytes 12\nParallel unsquashfs: Using 1 processor\nsquashfs: read_uids_guids: no_ids 1\nsquashfs: read_bytes: reading from position 0xe3c956, bytes 8\nsquashfs: read_bytes: reading from position 0x71eed2525ee8f30e, bytes 2\nLseek failed because Invalid argument\nread_block: failed to read block @0x71eed2525ee8f30e\nread_uids_guids: failed to read id table block\nFATAL ERROR:failed to uid/gid table\n</code></pre>\n<p>But still no joy. :-(</p>\n<p>Can anyone offer any advice or maybe point out any mistakes as I am new to this all and still learning any tips or pointers would be a great help.</p>\n</div>",
    "votes": "3",
    "answers": 2,
    "views": "2k",
    "tags": [
        "linux",
        "firmware",
        "embedded"
    ],
    "user": "Path-E-Tech Management",
    "time": "Sep 25, 2016 at 13:35",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Ok I managed to get it to extract.... Yay</p>\n<p>As it turns out when I did the NAND dump I also dumped the OOB part of the NAND.<br/>\nSo I had to run it through Jean-Michel Picod's <code>Nand-dump-tool.py</code> program to separate out the OOB area.</p>\n<pre><code>$ python Nand-dump-tool.py  -i ModemRaw.img -o Split_seperate.img -I\n01f1801d  --layout separate\n\n[*] Using given ID code ID code  : 01f1801d\nManufacturer                     : AMD / Spansion\nDevice                           : NAND 128MiB 3,3V 8-bit\nDie/Package                      : 1\nCell type                        : 2 Level Cell\nSimultaneously programmed paged  : 1\nInterleave between multiple chips: False\nWrite cache                      : True\nPage size                        : 2048 bytes (2 K)\nSpare area size                  : 16 bytes / 512 byte\nBlock size                       : 131072 bytes (128 K)\nOrganization                     : X16\nSerial access time               : 29 ns\nOOB size                         : 64 bytes\n\n[*] Start dumping...\n[*] Finished\n\nTotal: 138412032 bytes (132.00 MB)\nData : 134217728 bytes (128.00 MB)\nOOB  : 4194304 bytes (4.00 MB)\nClear: 86.69% of the flash is empty (56813 pages out of 65536)\n</code></pre>\n<p>Once that was done running it through binwalk again gave me a much more sensible output and a extracted File System... </p>\n</div>",
            "votes": "1",
            "user": "NirIzr",
            "time": "Sep 27, 2016 at 12:57",
            "is_accepted": true,
            "comments": [
                {
                    "user": "tibar",
                    "text": "<span class=\"comment-copy\">Could you please add URL to the python script, thanks.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I recommend you to try to find out, <em>why</em> unsquashing does fail. As you can read in <code>sasquatch</code> README:</p>\n<pre><code>The sasquatch project is a set of patches to the standard unsquashfs utility (part of squashfs-tools) that attempts to add support for as many hacked-up vendor-specific SquashFS implementations as possible.\n</code></pre>\n<p>So you might just found an unsupported implementation. Try to find, why <code>sasquatch</code> is failing to Lseek. Read the squashfs design papers. Maybe the structures was adjusted, and you just need to change the offset to some pointer.</p>\n<p>This is what reverse engineering is about. Digging in the code. Not blindly using someone else's tools :)</p>\n</div>",
            "votes": "0",
            "user": "aleek",
            "time": "Sep 27, 2016 at 9:28",
            "is_accepted": false,
            "comments": []
        }
    ]
}