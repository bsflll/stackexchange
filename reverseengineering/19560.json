{
    "title": "Analyze raw assembly using IDA Pro",
    "link": "https://reverseengineering.stackexchange.com/questions/19560/analyze-raw-assembly-using-ida-pro",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a raw assembly dump i.e.</p>\n<pre><code>.intel_syntax noprefix\n.bits 32\n.global main    \n\nmain:\n    push   ebp\n...\n</code></pre>\n<p>And I know it's Intel x86 and the original function was most likely written in C. Now the question is whether I could use IDA to reverse this and get the original function?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "assembly"
    ],
    "user": "S. L.",
    "time": "Oct 6, 2018 at 15:15",
    "comments": [
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">IDA disassembles binaries. (It's what \"IDA\" stands for.) What you <i>have</i> here is disassembled code, as plain text. What do you hope IDA will do with it?</span>",
            "time": null
        },
        {
            "user": "S. L.",
            "text": "<span class=\"comment-copy\">Ideally spit out some nice pseudocode?</span>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">From a text file? No. It needs a binary.</span>",
            "time": null
        },
        {
            "user": "mrexodia",
            "text": "<span class=\"comment-copy\">If you assemble the file you can load it in ida</span>",
            "time": null
        },
        {
            "user": "S. L.",
            "text": "<span class=\"comment-copy\">@mrexodia that could work. can I just use gcc?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>IDA does not accept assembly input, so you need to convert it to some binary format first. This is generally done with an <em>assembler</em>, such as GNU Assembler or <code>gas</code> (part of GNU Binutils and usually installed with <code>gcc</code>), or different alternative assemblers such as <code>nasm</code>, <code>yasm</code>, <code>fasm</code> and so on. If you need help assembling a specific file, you can ask on <a href=\"https://stackoverflow.com/\">Stack Overflow</a>, providing as much info as possible.</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Oct 15, 2018 at 19:40",
            "is_accepted": true,
            "comments": [
                {
                    "user": "S. L.",
                    "text": "<span class=\"comment-copy\">This worked like a charm: I compiled the original snippet and got into a good old executable and then was able to analyze that with IDA and dump some useable pseudocode. Not exactly reverse engineer of the year over here but it works!</span>",
                    "time": null
                }
            ]
        }
    ]
}