{
    "title": "Re-run autoanalysis in Hopper?",
    "link": "https://reverseengineering.stackexchange.com/questions/2054/re-run-autoanalysis-in-hopper",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have loaded a raw binary (ARM firmware image) into Hopper, and manually marked the entry point as code. But now I'd like to have Hopper do auto-analysis (recursive traversal) starting from that code region, and I can't figure out how to get it to do that (the way it would if I'd loaded a standard PE or elf binary). I can use \"Disassemble whole segment\", but that seems to do a linear sweep of the entire (30M) binary, which results in a lot of garbage.</p>\n<p>Is there any way to do this?</p>\n</div>",
    "votes": "11",
    "answers": 1,
    "views": "1k",
    "tags": [
        "tools",
        "disassembly",
        "hopper"
    ],
    "user": "Brendan Dolan-Gavitt",
    "time": "May 17, 2013 at 18:46",
    "comments": [
        {
            "user": "Brendan Dolan-Gavitt",
            "text": "<span class=\"comment-copy\">Thanks for the input, but IDA isn't mentioned anywhere in my question. Recursive disassembly is clearly something Hopper is capable of, I'm just asking how to trigger it. Do you have some source or reference that says that it can't be done?</span>",
            "time": null
        },
        {
            "user": "joxeankoret",
            "text": "<span class=\"comment-copy\">I tried with the latest demo version with an ELF binary: pressing C to make code doesn't make code for all the jumps and calls. Pressing 'P' creates a procedure for the function at cursor but doesn't do anything for the functions referenced from that function. So, while recursive disassembly is supported by Hopper it fails to do so properly in current versions.</span>",
            "time": null
        },
        {
            "user": "David Hoelzer",
            "text": "<span class=\"comment-copy\">I haven't run into this with Hopper, but I do use IDA far more. Does the Scripts -&gt; Mark All Procedures make any difference for you?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can mark your entrypoint as <em>unexplored</em> (U) and then mark it as <em>code</em> (C) your segment: Hopper will re-analyse it, as code.</p>\n</div>",
            "votes": "1",
            "user": "jvoisin",
            "time": "Oct 26, 2013 at 18:07",
            "is_accepted": false,
            "comments": []
        }
    ]
}