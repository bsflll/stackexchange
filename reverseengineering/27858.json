{
    "title": "Firmware RE (Beginner)",
    "link": "https://reverseengineering.stackexchange.com/questions/27858/firmware-re-beginner",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to learn RE, and I thought I'd look at some firmware that interests me.  I'm looking at the Roland TD-11 drum module firmware, which is available for download from the <a href=\"https://www.roland.com/us/support/by_product/td-11/updates_drivers/37449833-4f06-4d6c-bccd-e348e981b406/\" rel=\"nofollow noreferrer\">Roland website</a></p>\n<p>I found a few guides to get me started, and most seem to recommend binwalk.  Unfortunately, binwalk doesn't seem to return anything when I run it against the firmware file.  I ran the entropy analysis, and from what I've been reading, the firmware doesn't seem to be encrypted.<br/>\n<a href=\"https://i.sstatic.net/EbDJn.png\" rel=\"nofollow noreferrer\"><img alt=\"TD11 Firmware Entropy\" src=\"https://i.sstatic.net/EbDJn.png\"/></a></p>\n<p>Running strings, I can find strings in the firmware image as well.  And binwalk -Y returned:</p>\n<pre><code>1189309       0x1225BD        ARM executable code, 16-bit (Thumb), little endian, at least 779 valid instructions\n</code></pre>\n<p>I'm also looking at Ghidra, but I'm not sure where to start.  Should I try to unravel some of the instructions in Ghidra?  I don't think Ghidra is identifying the functions properly.  Is there a way to identify the entry point of the firmware program?  What are some avenues I should explore to get a starting point in analyzing this firmware?</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "485",
    "tags": [
        "firmware",
        "firmware-analysis",
        "binwalk"
    ],
    "user": "Odysseus",
    "time": "Jun 18, 2021 at 3:29",
    "comments": [
        {
            "user": "julian",
            "text": "<span class=\"comment-copy\">Firmware analysis is not a suitable starting point for beginners. You should include the exact URL that you downloaded the firmware from. The entropy in the plot is not high enough to indicate encryption, but it is high enough to indicate compression. The ARM result from binwalk is likely a false positive, since most of the binary is likely compressed. Once decompressed, use <a href=\"https://isadetect.com/\" rel=\"nofollow noreferrer\">ISAdetect</a> to identify the target CPU. Roland firmware I've seen previously targeted a Renesas CPU, which ISAdetect and binwalk won't identify properly.</span>",
            "time": null
        },
        {
            "user": "Odysseus",
            "text": "<span class=\"comment-copy\">The link was pointing to the download page for the TD-11 module but I updated it to go directly to the firmware download page.  How would I go about decompressing the firmware?  Binwalk -X gives me a ton of hits, which makes me suspect they are false positives.  And -Z doesn’t give me anything.   Aren’t some of the Renesas CPUs ARM based?</span>",
            "time": null
        }
    ],
    "answers_data": []
}