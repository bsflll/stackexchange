{
    "title": "PIN tool doesn't write to stdout or sterr on windows",
    "link": "https://reverseengineering.stackexchange.com/questions/27575/pin-tool-doesnt-write-to-stdout-or-sterr-on-windows",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm writing a pin tool (Windows, x64, PIN 3.18), and it starts like this:</p>\n<pre><code>int main(int argc, char *argv[]) {\n    std::cerr &lt;&lt; \"Initializing...\" &lt;&lt; std::endl;\n</code></pre>\n<p>This is how I'm calling the tool:\n<code>C:\\pin\\intel64\\bin\\pin -t C:\\pin\\source\\tools\\MyPinTool\\x64\\Release\\MyPinTool.dll -- mspaint.exe</code></p>\n<p>Nothing is ever printed to stderr. <code>fprintf(stderr, ...)</code> also prints nothing. stdout seems to behave in the same way.\nThe tool itself works, and if I instead fprintf to a file, that works as well.\nIt doesn't seem to me like I'm deviating from the docs examples.</p>\n<p>I also searched in the docs for stuff related to output with no luck.</p>\n<p>Why is nothing getting printed?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "377",
    "tags": [
        "pintool"
    ],
    "user": "ophicleidon",
    "time": "Apr 28, 2021 at 8:16",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The pintool is a DLL which is injected into the target process and runs in its context. Since mspaint is a GUI program, it does not have a console to which print output could go. You have the following options:</p>\n<ol>\n<li>Change mspaint.exe subsystem to console so that a console window is allocated on startup.</li>\n<li>Call <code>AllocConsole()</code> in your pintool and set up stdout/stderr to go there (not sure about the details here).</li>\n<li>Use an explicitly opened log file for output instead of stderr.</li>\n</ol>\n</div>",
            "votes": "0",
            "user": "Igor Skochinsky",
            "time": "Apr 28, 2021 at 22:03",
            "is_accepted": true,
            "comments": []
        }
    ]
}