{
    "title": "Reassemble function that has its control flow chopped so that it can be decompiled by IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/13183/reassemble-function-that-has-its-control-flow-chopped-so-that-it-can-be-decompil",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I try to decompile a function that is obfuscated by having split \nup the controlflow into asmblocks scattered around the .text section \nand connected by \"jmpq\" jumps. </p>\n<pre><code>&lt;func1&gt;:\n0:    insn..\n1:    jmpq xx100\n2:    callq sub\n3:    jmpq  xx104\n...\n&lt;nonfunc&gt;:\n..\nxx100: insn...\nxx101: jmpq 2\n..\nxx104: insn \n...\n</code></pre>\n<p>Is there a tool/plugin that can reassemble the function code by following the jmpq blocks and appending the chunks? I guess it is not that\ntrivial because you also have to account for relative offsets and patch\nrelocation sections, etc. .</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "151",
    "tags": [
        "ida",
        "deobfuscation",
        "decompile"
    ],
    "user": "Konrad Eisele",
    "time": "Aug 1, 2016 at 6:45",
    "comments": [
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">If you are pressing &lt;kbd&gt;P&lt;/kbd&gt; on the function start what do you see ? (Save the database before conducting this experiment)</span>",
            "time": null
        },
        {
            "user": "Konrad Eisele",
            "text": "<span class=\"comment-copy\">I dont have any action linked to the key \"P\" in IDA. What action should key \"P\" trigger?</span>",
            "time": null
        },
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">It is create function. As far as I know it may handle such a functions in significant part of cases</span>",
            "time": null
        },
        {
            "user": "Vitaly Osipov",
            "text": "<span class=\"comment-copy\">I am probably not helping - but this strikes me as a typical graph isomorphism question. Perhaps tools like Binnavi could help.</span>",
            "time": null
        },
        {
            "user": "Konrad Eisele",
            "text": "<span class=\"comment-copy\">Tryping to write it myself: <a href=\"https://github.com/eiselekd/perlx8664\" rel=\"nofollow noreferrer\">github.com/eiselekd/perlx8664</a> .</span>",
            "time": null
        }
    ],
    "answers_data": []
}