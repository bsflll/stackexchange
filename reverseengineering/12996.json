{
    "title": "Function is returning to somewhere in stack",
    "link": "https://reverseengineering.stackexchange.com/questions/12996/function-is-returning-to-somewhere-in-stack",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to hook this 'recv callback' function and can manage to hook the function. However, when the 'new function' is supposed to return to its caller, it's instead returning to somewhere in stack, causing an access violation while executing opcodes which are actually some data on stack. </p>\n<p>I've been trying to debug this for hours but got nowhere. If someone did experience a similar issue and can point me to possible solutions I'd appreciate it very much.</p>\n<p>If you've got a clue of what could be the issue and need further information on anything please let me know and I'll try to provide the best I can.</p>\n<h2>Update 1</h2>\n<p>Function information from IDA:\n<a href=\"https://i.sstatic.net/MU2mU.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/MU2mU.png\"/></a></p>\n<p>My function:\n<a href=\"https://i.sstatic.net/GHfE0.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/GHfE0.png\"/></a></p>\n<p>Also need to point that I can call original function(non-hooked) using:</p>\n<pre><code>on_recv((char*)buf, ARRAYSIZE(buf), 0, 0x0018F7AC);\n</code></pre>\n<p>Also tried changing myOnRecv to __cdecl and __fastcall but no luck there either. </p>\n<h2>Update 2</h2>\n<p>Upon further debugging I figured that function is returning to whatever was passed as 4th(last) parameter. What could be the reason of this?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "97",
    "tags": [
        "c",
        "stack"
    ],
    "user": "AcarX",
    "time": "Jul 5, 2016 at 18:01",
    "comments": [
        {
            "user": "Jason Geffner",
            "text": "<span class=\"comment-copy\">It sounds like your new function's prototype doesn't match the original function's prototype.</span>",
            "time": null
        },
        {
            "user": "AcarX",
            "text": "<span class=\"comment-copy\">Edited my post.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It was as Jason Geffner suspected. My function prototype was correct but the pOnRecv typedef didn't have __stdcall in it. </p>\n<p>I couldn't figure it out until I've looked at assembly of the function and seen it did add to esp. I'm leaving it here, incase someone else happens so have a similar issue.</p>\n</div>",
            "votes": "2",
            "user": "AcarX",
            "time": "Jul 6, 2016 at 20:13",
            "is_accepted": false,
            "comments": []
        }
    ]
}