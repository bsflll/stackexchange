{
    "title": "IDA 7 handling strings in debugger pseudocode",
    "link": "https://reverseengineering.stackexchange.com/questions/19774/ida-7-handling-strings-in-debugger-pseudocode",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>When running a remote debugger to a linux server, is there a way to get IDA (7.0) to properly handle strings? When I go to the pseudocode view, I get things like this;</p>\n<pre><code>v7 = sub_804AD60((std::string *)&amp;v16);\nchar *v5;\n</code></pre>\n<p>So clearly IDA has some handling of string types, and it's able to infer that one of these is a C++ string and the other a pointer to a C string. What I can't figure out is how to get that string? I've been searching for a locals window or something in the debugger with no luck, and hovering over <code>v16</code> gets an <code>int v16</code> with a memory address value. Surely there's some way to just get the actual string value of <code>v16</code> or <code>v5</code> in plain old ASCII or UTF-8 without having to dig it out of the hex view?</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "939",
    "tags": [
        "ida",
        "x86",
        "decompilation",
        "c++",
        "hexrays"
    ],
    "user": "XeroxDucati",
    "time": "Oct 31, 2018 at 21:14",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Hi and welcome to RE.SE! For <code>v5</code> you should be shown the value, but for something like a <code>std::string</code> it depends. I have IDA, but not the HexRays plugin, so I can't be of much help here.</span>",
            "time": null
        },
        {
            "user": "Biswapriyo",
            "text": "<span class=\"comment-copy\">Sometimes, we've to guess the data type. You can get the data type while debugging. Then press Y to change it.</span>",
            "time": null
        },
        {
            "user": "XeroxDucati",
            "text": "<span class=\"comment-copy\">The datatype is spot-on, it's 100% an std::string, but that string -- <code>Hello World\\0</code>, should be somehow visible to me, and yet I can't find a way.</span>",
            "time": null
        },
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">Locate a cursor on v16, press &lt;kbd&gt;Y&lt;/kbd&gt;, enter std::string, press enter.</span>",
            "time": null
        }
    ],
    "answers_data": []
}