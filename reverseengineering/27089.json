{
    "title": "Wrap-around MCU memory map definition with negative addresses",
    "link": "https://reverseengineering.stackexchange.com/questions/27089/wrap-around-mcu-memory-map-definition-with-negative-addresses",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I figured it'd be more appropriate to ask this question here:</p>\n<p><a href=\"https://github.com/NationalSecurityAgency/ghidra/issues/2530#issuecomment-785007613\" rel=\"nofollow noreferrer\">https://github.com/NationalSecurityAgency/ghidra/issues/2530#issuecomment-785007613</a></p>\n<p>Given this linear address space a particular MCU:</p>\n<p><a href=\"https://i.sstatic.net/ok1wt.png\" rel=\"nofollow noreferrer\"><img alt=\"V850 mem space\" src=\"https://i.sstatic.net/ok1wt.png\"/></a></p>\n<p>It's not easily definable as-is on the memory manager, see:</p>\n<pre><code>memory = currentProgram.getMemory()\nfb = memory.getAllFileBytes()   \nblk = memory.getBlock(toAddr(0x0))\nmemory.removeBlock(blk, monitor)\n\nmemory.createUninitializedBlock(\"internal_ram\",toAddr(0x3ff8000),0x2fff,False)\nmemory.createUninitializedBlock(\"peripherals\", toAddr(0x3ffefff),0xfff, False)\nmemory.createInitializedBlock(\"rom\", toAddr(0x0), fb[0], 0, 0x1000000, False)\ndisassemble(toAddr(0x0))\n</code></pre>\n<p>Yields:</p>\n<pre><code>Traceback (most recent call last):\n  File \"python\", line 1, in &lt;module&gt;\n    at ghidra.program.database.mem.MemoryMapDB.checkBlock(MemoryMapDB.java:1043)\n    at ghidra.program.database.mem.MemoryMapDB.removeBlock(MemoryMapDB.java:1850)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.base/java.lang.reflect.Method.invoke(Method.java:566)\njava.lang.IllegalArgumentException: java.lang.IllegalArgumentException: Blocks do not belong to this program\nghidra.program.database.mem.MemoryBlockDB@6f03ae13\nghidra.program.database.mem.MemoryBlockDB@38d5ac1c\nghidra.program.database.mem.MemoryBlockDB@6ad8b9ac\n</code></pre>\n<p>What would be the correct sequence of arguments/flags/(instruction ordering?) to have a correct representation of a loaded V850 16MB firmware (size 0x1000000) on Ghidra? What am I doing wrong?</p>\n<p><a href=\"https://github.com/NationalSecurityAgency/ghidra/files/6035639/nec-.PD703128-mem-address-1.pdf\" rel=\"nofollow noreferrer\">Here's the MCU PDF address space section for reference</a></p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "261",
    "tags": [
        "ghidra"
    ],
    "user": "brainstorm",
    "time": "Feb 24, 2021 at 12:09",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">If it's really Ghidra-specific it might be better handled over there. If you think it's a generic RE problem, please state it as such and provide the actual question instead of a link which may be wrong or dead in several years.</span>",
            "time": null
        },
        {
            "user": "brainstorm",
            "text": "<span class=\"comment-copy\">Oh, sorry about that, I thought that the <code>ghidra</code> tag was meant for specific Ghidra questions as I was directed here a while ago in  <a href=\"https://stackoverflow.com/questions/65314484/clear-several-functions-with-options#comment116289824_65314484\" title=\"clear several functions with options%23comment116289824_65314484\">stackoverflow.com/questions/65314484/â€¦</a></span>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">sure we can (try to) answer RE questions in the context of Ghidra. But this is not an official support site for it.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Note to self, when running <code>memory.removeBlock(blk, monitor)</code> make sure that the memory map is not empty from previous wipes/redefinitions (iterations of the script).</p>\n<p>In other words, opening a file creates a default memory map, but the script wasn't contemplating the case where the address map was empty to begin with.</p>\n</div>",
            "votes": "1",
            "user": "brainstorm",
            "time": "Feb 24, 2021 at 22:38",
            "is_accepted": true,
            "comments": []
        }
    ]
}