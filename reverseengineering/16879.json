{
    "title": "Help with anti-disassembly trick inside a hooked function",
    "link": "https://reverseengineering.stackexchange.com/questions/16879/help-with-anti-disassembly-trick-inside-a-hooked-function",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to understand a hook installed by a program within the Win32 API function ZwWriteVirtualMemory.</p>\n<p>It seems that a jmp inside an instruction is used and I couldn't fix  it to be able to continue my analysis.</p>\n<p>Any help on this would be greatly appreciated !</p>\n<p><a href=\"https://i.sstatic.net/WQsmf.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/WQsmf.png\"/></a></p>\n<p><a href=\"https://i.sstatic.net/B30yY.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/B30yY.png\"/></a></p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "150",
    "tags": [
        "ida",
        "anti-debugging",
        "function-hooking"
    ],
    "user": "plowsec",
    "time": "Dec 1, 2017 at 10:22",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There is no obfuscation here, it is a fairly standard jump to a fixed address.</p>\n<p>Breaking it down:</p>\n<pre><code>FF 25 00 00 00 00        ; jmp  qword ptr [rip]\n68 01 4A 00 00 00 00 00  ; dq   00000004A0168h\n</code></pre>\n<p>The first instruction says to read the value at RIP and then jump to that address. Since RIP is already advanced past the end of the instruction, the data value is in the 8 bytes following the jump (which happens to be the value 0x4A0168). So the code that executes next is at that virtual address.</p>\n</div>",
            "votes": "2",
            "user": "josh poley",
            "time": "Dec 1, 2017 at 16:24",
            "is_accepted": true,
            "comments": [
                {
                    "user": "plowsec",
                    "text": "<span class=\"comment-copy\">And the value following the jump is in little-endian ? How can I easily tell IDA to follow the jump ?</span>",
                    "time": null
                }
            ]
        }
    ]
}