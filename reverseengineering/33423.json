{
    "title": "Reverse Engineering - JFFS2 extraction failed from Ubiquiti firmware",
    "link": "https://reverseengineering.stackexchange.com/questions/33423/reverse-engineering-jffs2-extraction-failed-from-ubiquiti-firmware",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I’m analyzing a firmware image dumped from a Ubiquiti device with UART, and I’m running into issues trying to extract user-modified configuration files from what appears to be a JFFS2 partition.</p>\n<p>Goal:\nAccess the writable partition (JFFS2) to extract actual user data (credentials, configs). I’ve already extracted the squashfs successfully, but that only contains factory defaults.</p>\n<p>What I’ve done so far:</p>\n<ul>\n<li>Identified JFFS2 signature (0x85 0x19) at offset 0x55686.</li>\n<li>Tried extracting from both:</li>\n<li>Used jefferson (latest version from GitHub):</li>\n<li>No error messages, but the output folder is empty.</li>\n<li>Tried a 130 MB full extract from 0x55686 to EOF – same result.</li>\n</ul>\n<p>Things I’ve tried:</p>\n<ul>\n<li>Tried older Jefferson versions</li>\n<li>Binwalk with --extract, still no usable JFFS2 filesystem, same result empty folder</li>\n</ul>\n<p>Questions:</p>\n<ol>\n<li>Has anyone encountered similar issues with Ubiquiti firmware and Jefferson?</li>\n<li>Could it be a fragmented or raw NAND layout that Jefferson cannot parse?</li>\n<li>Any tools or techniques recommended to recover real user data from this type of dump?</li>\n</ol>\n<p>Any insight would be really appreciated.</p>\n<p>Thanks in advance!</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "48",
    "tags": [
        "binwalk"
    ],
    "user": "Viciu Dicard",
    "time": "Apr 4 at 6:47",
    "comments": [
        {
            "user": "hold-me",
            "text": "<span class=\"comment-copy\">Did you identify the presence of a JFFS2 file system only based on 2 bytes? Can a tool such as binwalk not identify that? Are you sure it not a random sequence of bytes you see as an fs?</span>",
            "time": null
        },
        {
            "user": "Viciu Dicard",
            "text": "<span class=\"comment-copy\">Hi, thanks for your reply!  You’re right — I spotted JFFS2 by the 0x85 0x19 signature, and yes, it could be a coincidence. But first I also ran binwalk on the full image, and it detected a JFFS2 filesystem.  However, running binwalk -e firmware.bin just gives me an empty folder, same as Jefferson.  Any idea what I should try next? Could this be a Ubiquiti-specific layout issue?  Thanks again!</span>",
            "time": null
        }
    ],
    "answers_data": []
}