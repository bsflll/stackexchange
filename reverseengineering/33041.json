{
    "title": "Trying to decode a data structure from a COM structured storage stream",
    "link": "https://reverseengineering.stackexchange.com/questions/33041/trying-to-decode-a-data-structure-from-a-com-structured-storage-stream",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a CAD file that is a COM structured storage file. One of the streams in this file contains some configuration data. I can see the ASCII strings that have the descriptions of the data I'm looking for. One example:</p>\n<pre><code>17 00 00 00 53 00 69 00 6D 00 70 00 6C 00 69 00\n66 00 79 00 42 00 73 00 70 00 6C 00 69 00 6E 00\n65 00 73 00 4F 00 70 00 74 00 69 00 6F 00 6E 00\n5F 00 00 00 00 00 00 F2 00 00 00 0F 00 00 00 52\n</code></pre>\n<p>In this hex you can see the text SimplifyBsplinesOption. SimplifyBsplinesOption should be a check box.</p>\n<pre><code>00 00 00 FB 00 00 00 10 00 00 00 4D 00 69 00 6E\n00 69 00 6D 00 75 00 6D 00 41 00 72 00 63 00 4C\n00 65 00 6E 00 67 00 74 00 68 00 01 00 00 00 04\n00 00 00 0D 00 00 00 01 FC 00 00 00 11 00 00 00\n4D 00 69 00 6E 00 69 00 6D 00 75 00 6D 00 41 00\n72 00 63 00 4C 00 65 00 6E 00 67 00 74 00 68 00\n5F 00 00 00 00 00 00 FE 00 00 00 14 00 00 00 44\n00 65 00 76 00 69 00 61 00 74 00 69 00 6F 00 6E\n00 61 00 6C 00 54 00 6F 00 6C 00 65 00 72 00 61\n00 6E 00 63 00 65 00 01 00 00 00 04 00 00 00 0E\n00 00 00 01 FF 00 00 00 15 00 00 00 44 00 65 00\n76 00 69 00 61 00 74 00 69 00 6F 00 6E 00 61 00\n6C 00 54 00 6F 00 6C 00 65 00 72 00 61 00 6E 00\n63 00 65 00 5F 00 00 00 00 00 00 4F 01 00 00 23\n00 00 00 46 00 6C 00 61 00 74 00 5F 00 50 00 61\n</code></pre>\n<p>In this block you can see \"MinimumArcLength\" and \"DeviationalTolerance\" strings.</p>\n<p>MinimumArcLength and DeviationalTolerance are values measured in thousandths of an inch. I know behind the scenes in the API, the software stores all linear spacial measurements in meters. I thought it interesting that in the first hex block, F2 represents -2.53530120045646E30 as a float32 because 1 inch is 0.0254 meters. This value doesn't change based on any settings. I'm guessing it's like a unit of measurement multiplier or a coincidence. I guess it's not really relevant to the actual problem though.</p>\n<p>I created three files by changing the min arc length and deviational tolerance to different values.</p>\n<p>Attached to <a href=\"https://github.com/ChrisClems/EdgeSharp/issues/13\" rel=\"nofollow noreferrer\">this Github issue</a> you can see the files I'm working with in the PSMclusterVariance.zip file. The only changes to the files are the -001 file has the minimum arc and deviational tolerance set to 0.001\". -005 is 0.005\", and -1000 is 1\"</p>\n<p>I am expecting to see these values in meters, so something close to or computable to 0.0000254, 0.000127, and 0.0254 in the respective files. I found them stored in close proximity just before one of the instances of the description strings.</p>\n<p><a href=\"https://i.sstatic.net/vWJ5hFo7.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/vWJ5hFo7.png\"/></a></p>\n<p>By changing these bytes to a float64 of 0.007 and importing the stream back into the CAD file I was able to determine that this is the Deviational Tolerance value as it showed the new value in the GUI. So I'm close-ish. I need to figure out how to check the box that enables the minimum arc and deviational tolerance settings in the first place. I've tried doing compare searches in HxD to find differences, but I can't find anything that stands out as the (presumably bool) flag that enables the options. Enough changes in the file simply changing that setting and saving that I'm having trouble doing a good comparison. I've also uploaded to the Github issue a PSMcluster0-off file which is the state of the file when the box is unchecked. I think I'm going to have to understand the larger data organization scheme before I find the part of the file to turn it on. I'll also need to understand the overall data structure to safely change the values from my library.</p>\n<p>What should my next steps be? I've ran this data through tools like trid and foremost and it doesn't pick up any known signatures. I'm excited to have found the values I want to change, but I'm about at the extent of my knowledge here. Any guidance would be appreciated.</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "75",
    "tags": [
        "file-format",
        "unknown-data"
    ],
    "user": "Chris",
    "time": "Jun 20, 2024 at 19:10",
    "comments": [
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">I created a .par with a sketch and a protrusion  and saved all the streams 26 streams in total opened again changed protrusion depth resaved and saved 26 stream again. Dumped both into winmerge and i onserve 6 streams are different and have very large changes  just could comfirm that the dimension is stored as double float64  other than that it does not appear the resource modification is stored in .par file  and only the par file appears to be com storafe the streams may be in an app understandabke format</span>",
            "time": null
        },
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<span class=\"comment-copy\">To add to blabb's comment, some of the streams also contain references to other stream names which implies a relationship across multiple streams. So, you might not find all your data in a single stream, but rather spread through multiple streams in a doc.  In structured-storage, although an IStore (\"directory\" from your terminology used on GH) can be used to store data that is related, it doesn't actually have to and can be app-specific. i.e. \"PSMclustertable\", may ref names for a cluster table, but their attribs could be in \"Unclustered Dynamic Attributes\", or even outside the document.</span>",
            "time": null
        },
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<span class=\"comment-copy\">Appears that Okino.com has a product, Nugraf and Polytrans, with a demo and a single dll (SEPartReader) if you're interested in reversing/debugging. You'd start with a breakpoint at <code>StgOpenStorageSomething</code>, then that'll spit out a reference to an <code>IStorage</code> interface. From that you can breakpoint on each of its methods to figure out which <code>IStream</code> it opens to figure out the correct workflow.</span>",
            "time": null
        },
        {
            "user": "Chris",
            "text": "<span class=\"comment-copy\">@AliRizvi-Santiago Thank you for the tips. I'll give it a deeper look, but I believe that software is simply extracting the parasolid data (the streams in the PARASOLID storage) from the native files. This is where all the modeling information is stored. I'm also looking to grab that but there are a lot of resources to pull from already there like open libraries that support the format.  The target I'm looking for is a Solid Edge specific property that controls how Solid Edge approximates splines to lines and arcs while generating an unrolled model from a part with curves.</span>",
            "time": null
        }
    ],
    "answers_data": []
}