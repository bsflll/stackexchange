{
    "title": "Getting the current process in Windows",
    "link": "https://reverseengineering.stackexchange.com/questions/16474/getting-the-current-process-in-windows",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>While reading Practical Reverse Engineering by Bruce Dang, I came across the following.</p>\n<p><a href=\"https://i.sstatic.net/N6Xu8.png\" rel=\"noreferrer\"><img alt=\"Image from Practical Reverse Engineering\" src=\"https://i.sstatic.net/N6Xu8.png\"/></a></p>\n<ol>\n<li>Am I correct in my assumption that the procedures return a pointer to the current thread and current process respectively?</li>\n<li><p>In <em>PsCurrentProcess</em>, the offset into the current thread is <em>0B8h</em> whereas in the comment it is written as <em>0x70</em>. I do not understand what the author means by this. In an attempt to find out I tried to debug a x64 Windows 10 Kernel. </p>\n<p><a href=\"https://i.sstatic.net/meB1Z.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/meB1Z.png\"/></a></p>\n<p><a href=\"https://i.sstatic.net/4TLmt.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/4TLmt.png\"/></a></p></li>\n</ol>\n<p>I couldn't find any thing at offsets 70h nor B8h. But I did find a <em>_KPROCESS</em> at offset <em>220h</em>. Is this what I am looking for?</p>\n<p><a href=\"https://i.sstatic.net/een6v.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/een6v.png\"/></a></p>\n<ol start=\"3\">\n<li>Will this offset be the same for all Windows 10 x64 systems?</li>\n<li>I would like to know about the internals of all these structures. Is there any resource that explains all the important internal data structures in Windows from a reverse engineering stand point. </li>\n</ol>\n</div>",
    "votes": "8",
    "answers": 2,
    "views": "2k",
    "tags": [
        "process",
        "kernel"
    ],
    "user": "Aswin P J",
    "time": "Oct 3, 2017 at 7:52",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>To start with, the offsets are more likely to match the current OS at the time of the book's writing (probably Win7) than Windows 10. That said, a good reference to internal kernel structures over different Windows versions is Geoff Chapell's website: <a href=\"https://www.geoffchappell.com/studies/windows/km/index.htm\" rel=\"nofollow noreferrer\">https://www.geoffchappell.com/studies/windows/km/index.htm</a></p>\n<p>For example, looking at <a href=\"https://www.geoffchappell.com/studies/windows/km/ntoskrnl/structs/kpcr.htm\" rel=\"nofollow noreferrer\"><code>KPCR</code></a>, we can see that at <code>0x0180</code> we have <code>KPRCB Prcb;</code>, so 188h is 8 bytes into <code>KPRCB</code>. Checking <a href=\"https://www.geoffchappell.com/studies/windows/km/ntoskrnl/structs/kprcb/amd64.htm?tx=111\" rel=\"nofollow noreferrer\"><code>KPRCB</code></a>, in turn, we see that offset 8 is <code>KTHREAD *CurrentThread;</code>. So the offset <code>0B8h</code> should be looked up in the <code>KTHREAD</code> struct. I was able to find on <a href=\"https://www.geoffchappell.com/studies/windows/km/ntoskrnl/structs/kthread/current.htm?tx=109\" rel=\"nofollow noreferrer\">this page</a> the member <code>KAPC_STATE ApcState;</code> at offset <strong>0x70</strong> in x86 version and <strong>0x98</strong> in x64. \nI'm not sure what OS version is the quoted disassembly coming from, but it looks like there's been some mixup. You should probably submit an errata report on the <a href=\"http://eu.wiley.com/WileyCDA/WileyTitle/productCd-1118787315,subjectCd-CSJ0.html\" rel=\"nofollow noreferrer\">book's page at Wiley</a>.</p>\n<p>In the meantime look at the disassembly of mentioned functions in the kernel you're actually running and <em>then</em> match it against the structs you're printing.</p>\n</div>",
            "votes": "3",
            "user": "Igor Skochinsky",
            "time": "Oct 3, 2017 at 13:34",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Aswin P J",
                    "text": "<span class=\"comment-copy\">Thanks for answering. As adviced, I looked into the dissasembly of the function on my system. The offset to ApcState is 0x98 in x64. It seems to be an array. At an offset x20 into the array is the ApcState.Process. So the effective offset is 98h + 20h = B8. Also after googling a lot I found <a href=\"http://terminus.rewolf.pl/terminus/\" rel=\"nofollow noreferrer\">the terminus project</a>. It shows a nice representation of some internal structures in Windows. Thought you might be interested.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>most of these structures can be queried with windbg  </p>\n<p>if you are running in usermode ntdll.pdb has these type information </p>\n<p>if you are running in kernelmode ntos/ntkr/ aka nt*.pdb  has these type information </p>\n<p>you can use a tool like livekd from sysinternals along with windbg to do a \nlocal kernel debugging session </p>\n<p>following are output from livekd on a win7 x86 machine as far as possible \nthe commands are kept os / version agnostic</p>\n<p>the current process can be queried as <strong>? @$proc</strong> </p>\n<pre><code>kd&gt; ? @$proc\nEvaluate expression: -2050188616 = 85cc9ab8\nkd&gt;\n</code></pre>\n<p>the <strong>single question mark ?</strong> represents masm expresssion evaluator \nyou can use <strong>?? question marks</strong> to turn on c++ expression evaluator </p>\n<pre><code>kd&gt; ?? @$proc-&gt;UniqueProcessId\nvoid * 0x00000538\nkd&gt;\n</code></pre>\n<p>the above Current process pid is also represented by @$tpid</p>\n<pre><code>kd&gt; ? @$tpid\nEvaluate expression: 1336 = 00000538\nkd&gt; ?? @$tpid\nunsigned int 0x538\nkd&gt;\n</code></pre>\n<p>the pcr is represented by <strong>@$pcr</strong></p>\n<p>you can mix and match the expression evaluator the @@() lets you insert a c++ expression into a masm evaluation</p>\n<pre><code>kd&gt; ? @$pcr\nEvaluate expression: -2097779712 = 82f66c00\nkd&gt; ?  @@(@$pcr-&gt;PrcbData.CurrentThread)\nEvaluate expression: -2048806120 = 85e1b318\nkd&gt;\n</code></pre>\n<p>in my system  PsGetCurrentProcess is as follows</p>\n<pre><code>kd&gt; uf nt!PsGetCurrentThread\nnt!PsGetCurrentThread:\n82e72b99 64a124010000    mov     eax,dword ptr fs:[00000124h]\n82e72b9f c3              ret\nkd&gt;\n</code></pre>\n<p>you can directly get the raw contents of this segment:offset </p>\n<pre><code>kd&gt; ? poi(fs:00000124)\nEvaluate expression: -2048806120 = 85e1b318\nkd&gt;\n</code></pre>\n<p>the current thread is denoted by <strong>@$thread</strong></p>\n<pre><code>kd&gt; ? @$thread\nEvaluate expression: -2048806120 = 85e1b318\nkd&gt;\n</code></pre>\n<p>ApcState is not an array it is a structure </p>\n<pre><code>kd&gt; ?? @$thread-&gt;Tcb.ApcState\nstruct _KAPC_STATE\n   +0x000 ApcListHead      : [2] _LIST_ENTRY [ 0x85e1b358 - 0x85e1b358 ]\n   +0x010 Process          : 0x85cc9ab8 _KPROCESS\n   +0x014 KernelApcInProgress : 0 ''\n   +0x015 KernelApcPending : 0 ''\n   +0x016 UserApcPending   : 0 ''\nkd&gt;\n</code></pre>\n<p>you can get the offset to Process mention in you post like this </p>\n<pre><code>kd&gt; ?? &amp;(@$thread-&gt;Tcb.ApcState.Process)\nstruct _KPROCESS ** 0x85e1b368\nkd&gt; ?? *(unsigned long *)&amp;(@$thread-&gt;Tcb.ApcState.Process)\nunsigned long 0x85cc9ab8\nkd&gt;\n</code></pre>\n<p>in my system PsGetCurrentProcss is as follows</p>\n<pre><code>kd&gt; uf nt!PsGetCurrentProcess\nnt!PsGetCurrentProcess:\n82ec5fce 64a124010000    mov     eax,dword ptr fs:[00000124h]\n82ec5fd4 8b4050          mov     eax,dword ptr [eax+50h]\n82ec5fd7 c3              ret\nkd&gt;\n</code></pre>\n<p>raw query </p>\n<pre><code>kd&gt; ? poi(30:124)\nEvaluate expression: -2048806120 = 85e1b318\nkd&gt; ? poi(poi(30:124)+50)\nEvaluate expression: -2050188616 = 85cc9ab8\nkd&gt;\n</code></pre>\n<p>expression query</p>\n<pre><code>kd&gt; ? @@(@$prcb-&gt;CurrentThread-&gt;ApcState.Process)\nEvaluate expression: -2050188616 = 85cc9ab8\nkd&gt;\n</code></pre>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "Oct 4, 2017 at 18:12",
            "is_accepted": false,
            "comments": []
        }
    ]
}