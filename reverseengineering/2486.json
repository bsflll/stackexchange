{
    "title": "Is there an equivalent of 'Run trace' as in OllyDbg for IDA PRO?",
    "link": "https://reverseengineering.stackexchange.com/questions/2486/is-there-an-equivalent-of-run-trace-as-in-ollydbg-for-ida-pro",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have been looking for the equivalent of the \"Run Trace\" option of OllyDbg in IDA Pro. Can anyone mention if there is one and how to use it ?</p>\n</div>",
    "votes": "14",
    "answers": 1,
    "views": "4k",
    "tags": [
        "ida",
        "ollydbg",
        "ida-plugin"
    ],
    "user": "Higet",
    "time": "Oct 14, 2013 at 8:16",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>IDA Pro offers two tracing options:</p>\n<ol>\n<li><strong>Instruction tracing</strong> <kbd>Debugger-&gt;Tracing-&gt;Instruction Tracing</kbd> It is very slow tracing process, since IDA monitors registers and has to record the address, the instruction, and changes values of registers, that were changed by the instruction.</li>\n<li><strong>Function tracing</strong> <kbd>Debugger-&gt;Tracing-&gt;Function Tracing</kbd>. It is a subcategory of instruction tracing, where only function calls are logged. </li>\n</ol>\n<p>There are also three types of tracing events: execution traces, write traces, and read/write traces. </p>\n<p>A trace in IDA Pro could by replayed by using <em>Trace replayer</em>. It is located within <em>Debuggers</em> submenu. You could switch to <em>Trace-replayer</em> by going to <kbd>Debugger-&gt;Switch Debugger...-&gt;Trace replayer</kbd></p>\n<p><img alt=\"enter image description here\" src=\"https://i.sstatic.net/0Hbix.png\"/></p>\n<p>One thing to remember that you have to have trace created before you can replay it. In order to create a trace you will need to do the following:</p>\n<ol>\n<li>Set a breakpoint at the point where you want you trace started. </li>\n<li>Run the program with the debugger of your choice. </li>\n<li>Whenever it breaks, select desired tracing <em>style</em> (Instruction or Function)</li>\n<li>Run as far as necessary. You could set a second breakpoint to stop the trace.</li>\n<li>You can optionally save the trace.</li>\n<li>Replay the trace by switching debugger to <em>Trace replayer</em>.  </li>\n</ol>\n</div>",
            "votes": "15",
            "user": "PSS",
            "time": "Jul 16, 2013 at 1:54",
            "is_accepted": true,
            "comments": []
        }
    ]
}