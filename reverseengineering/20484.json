{
    "title": "CRC8 reverse engineering",
    "link": "https://reverseengineering.stackexchange.com/questions/20484/crc8-reverse-engineering",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am creating a CAN Bus on-bench testing solution which replicates the entire vehicle to test a single module. I have a number of messages that require a CRC byte in order to be valid. The messages are in little-endian byte order, and the CRC value is held in byte 0. I have collected valid messages with a changing 4 bit alive-counter along with their CRC byte with the hope someone can help. I have tried CRC reveng, but either do not know hot to use it correctly or it is unable to find the polynomial, as it shows \"No models found\" when searching.</p>\n<p>For reference, I found documentation that suggests the polynomial used is the standard SAE J1850 CRC8 polynomial x^8 + x^4 + x^3 + x^2 + 1, with a CRC-ID in decimal of 166 (stated as used for the low byte). I have also tried with the online calculator available here: <a href=\"http://www.sunshine2k.de/coding/javascript/crc/crc_js.html\" rel=\"nofollow noreferrer\">http://www.sunshine2k.de/coding/javascript/crc/crc_js.html</a>, but cannot get the correct result.</p>\n<p>If anyone could provide some assistance, I would greatly appreciate it. I would like help in clarifying the correct polynomial, along with any other relevant parameters. Here are a list of values captured:</p>\n<p><a href=\"https://i.sstatic.net/2mjtt.png\" rel=\"nofollow noreferrer\">CRC in Byte0</a></p>\n<p>This is the text version of above. I've separated the CRC value in byte 0 from the rest of the message for clarity.</p>\n<pre><code>57   0000C0F0C1FFFF\n0A   0100C0F0C1FFFF\nED   0200C0F0C1FFFF\nB0   0300C0F0C1FFFF\n3E   0400C0F0C1FFFF\n63   0500C0F0C1FFFF\n84   0600C0F0C1FFFF\nD9   0700C0F0C1FFFF\n85   0800C0F0C1FFFF\nD8   0900C0F0C1FFFF\n3F   0A00C0F0C1FFFF\n62   0B00C0F0C1FFFF\nEC   0C00C0F0C1FFFF\nB1   0D00C0F0C1FFFF\n56   0E00C0F0C1FFFF\n</code></pre>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "2k",
    "tags": [
        "crc"
    ],
    "user": "JPToadstool",
    "time": "Jan 27, 2019 at 20:11",
    "comments": [
        {
            "user": "vas",
            "text": "<span class=\"comment-copy\">Can you tell me what is the routine for calculating crc8, 1D polynomial, initial value FF, final xor value 7A? Thank you.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Use that same <a href=\"http://www.sunshine2k.de/coding/javascript/crc/crc_js.html\" rel=\"noreferrer\">page</a>, and select CRC_SAE_J1850, but then switch to 'Custom' and change the 'Final Xor Value' to 0x7a.</p>\n<p>The settings should be:</p>\n<ul>\n<li>Input Reflected: No</li>\n<li>Output Reflected: No</li>\n<li>Polynomial: 0x1d</li>\n<li>Initial Value: 0xff</li>\n<li>Final Xor Value: 0x7a</li>\n</ul>\n<p>Use Byte1-Byte7 as input.</p>\n<p>Given:</p>\n<ul>\n<li><code>crc_data[n]</code> is the crc from your provided data for dataset <code>n</code></li>\n<li><code>crc_sae_j1850[n]</code> is the standard CRC SAE J1850 value for dataset <code>n</code></li>\n</ul>\n<p>I noticed that for any <code>i</code>, <code>j</code>:</p>\n<pre><code>crc_data[i] ^ crc_data[j] = crc_sae_j1850[i] ^ crc_sae_j1850[j]\n</code></pre>\n<p>e.g. for <code>i=0</code>, <code>j=1</code>:</p>\n<pre><code>0x57 ^ 0x0a = 0xd2 ^ 0x8f\n0x5d        = 0x5d\n</code></pre>\n<p>This means that the final xor value can be adjusted to get the desired values:</p>\n<pre><code>new_final_xor = original_final_xor ^ crc_data[i] ^ crc_sae_j1850[i]\n              = 0xff               ^ 0x57        ^ 0xd2\n              = 0x7a\n</code></pre>\n</div>",
            "votes": "5",
            "user": "booto",
            "time": "Jan 27, 2019 at 22:40",
            "is_accepted": true,
            "comments": []
        }
    ]
}