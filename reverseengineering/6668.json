{
    "title": "Determine endianness of file opened in IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/6668/determine-endianness-of-file-opened-in-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Looking for a way to determine whether the loaded binary in IDA is either little or big endian (example do i have a MIPSLE or MIPSBE binary open). I want to avoid just running \"file\" on the executable, as I may just not have a copy of the executable.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida"
    ],
    "user": "Bambu",
    "time": "Nov 21, 2014 at 2:52",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Found the solution. It is slightly hidden but it is: <code>idaapi.cvar.inf.mf</code></p>\n<p>This returns true on Big and false on Little endian. </p>\n<p>idaapi.py uses it:</p>\n<pre><code>def as_unicode(s):\n    \"\"\"\n    Convenience function to convert a string into appropriate unicode format\n    \"\"\"\n    # use UTF16 big/little endian, depending on the environment?\n    return unicode(s).encode(\"UTF-16\" + (\"BE\" if _idaapi.cvar.inf.mf else \"LE\"))\n</code></pre>\n</div>",
            "votes": "1",
            "user": "Bambu",
            "time": "Nov 21, 2014 at 5:20",
            "is_accepted": true,
            "comments": []
        }
    ]
}