{
    "title": "Ghidra define c++ string",
    "link": "https://reverseengineering.stackexchange.com/questions/20819/ghidra-define-c-string",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>So I want to define a c++ string in ghidra struct. I noticed while reverse engineering a C++ binary, I found that, it defines a <code>basic_string</code> class in the symbol tree. </p>\n<p>Now I want to define a <code>std::string</code> (not a pointer to it) within a struct. Is there a way to do it automatically right now, or will I still need to manually define a <code>basic_string</code> struct and go from there? Is there currently a way to associate classes and structs together like so (currently I think classes only act as namespaces?</p>\n<p>I also tried just simply adding a field with the type <code>basic_string</code> in my struct, but it complains that <code>basic_string</code> is just a placeholder struct.</p>\n<p>Haven't yet tested how ghidra would handle a <code>std::string</code> local variable.</p>\n<p>EDIT: example code for what I described above:</p>\n<pre><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\n\nstruct Human {\n  int age;\n  bool is_male;\n  std::string name;\n\npublic:\n  Human(int age, bool is_male, const std::string &amp;name) : age(age), is_male(is_male), \n    name(name) { }\n\n  void say_hello() {\n    std::cout &lt;&lt; \"Hello, I am a \" &lt;&lt; (is_male ? \"male \" : \"female \") &lt;&lt; age &lt;&lt; \n      \"-year old named \" &lt;&lt; name &lt;&lt; \"!\" &lt;&lt; std::endl;\n  }\n};\n\nint main() {\n  Human *human = new Human(17, true, \"Adam\");\n  human-&gt;say_hello();\n}\n</code></pre>\n<p>When you putting this into ghidra, and then do auto-fill struct fields, it will recognize the <code>age</code> and <code>is_male</code> fields, but not the <code>name</code> field, as this is an opaque <code>std::string</code> object.</p>\n<p>Up to this point, when I was reversing another (much larger) binary, I simply  manually created a new struct:</p>\n<pre><code>struct basic_string {\n  char *ptr;\n  size_t len;\n  char buff[0x10]\n};\n</code></pre>\n<p>Is there something that ghidra can do this automatically? Also I'm wondering would there be any portability issues if I just always assume the above struct?</p>\n</div>",
    "votes": "9",
    "answers": 1,
    "views": "6k",
    "tags": [
        "ghidra"
    ],
    "user": "theKidOfArcrania",
    "time": "Mar 8, 2019 at 16:45",
    "comments": [
        {
            "user": "camp0",
            "text": "<span class=\"comment-copy\">is not clear your problem, would you mind to paste an example code?</span>",
            "time": null
        },
        {
            "user": "theKidOfArcrania",
            "text": "<span class=\"comment-copy\">Added an example code</span>",
            "time": null
        },
        {
            "user": "Scott",
            "text": "<span class=\"comment-copy\">Unable to add a comment, but here is a link to the <a href=\"https://github.com/NationalSecurityAgency/ghidra/issues/305\" rel=\"nofollow noreferrer\">GitHub Issue</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>EDIT: I misread the question. The solution I provided only shows how structures can be manually added. There does not appear to be a way in Ghidra to import a struct by text blob.</p>\n<hr/>\n<p>Yes.</p>\n<p>To add a structure in Ghidra, you have to go to the Data Type Manager - for me it's the third frame on the left-most vertical pane.</p>\n<p><a href=\"https://i.sstatic.net/35DM8.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/35DM8.png\"/></a></p>\n</div>",
            "votes": "2",
            "user": "SW_user2953243",
            "time": "Mar 9, 2019 at 16:23",
            "is_accepted": false,
            "comments": [
                {
                    "user": "theKidOfArcrania",
                    "text": "<span class=\"comment-copy\">Hmm yeah I guess that's what I figure... do you think ghidra would be implementing something like this in the future for c++ structs?</span>",
                    "time": null
                }
            ]
        }
    ]
}