{
    "title": "OllyDbg and XMM0 vs MM0 registers",
    "link": "https://reverseengineering.stackexchange.com/questions/4362/ollydbg-and-xmm0-vs-mm0-registers",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>How can I view the <code>XMM0</code>-<code>XMM7</code> registers within OllyDbg? I can right click on the registers window and go to <code>view MMX</code> registers, but I'm not exactly sure that these are the same. I see an instruction: <code>MOVSS DWORD PTR DS:[ESI+8],XMM0</code> and as step through that instruction, the value shown in <code>MM0</code> on the register window does not become the value stored at <code>[ESI+8]</code>.</p>\n<p>So, I suppose another question is: <em>Are the <code>XMM0</code> and <code>MM0</code> registers different?</em></p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "2k",
    "tags": [
        "ollydbg"
    ],
    "user": "zz3star90",
    "time": "May 18, 2014 at 7:20",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>To answer properly your question, yes. <code>xmm</code> registers were introduced by Intel with the <code>SSE</code> instruction set (IS) in 1999 with the Pentium III CPU. <code>SSE</code> stands for Streaming SIMD Extension and is a set of vector instructions. <code>xmm</code> registers are 128bit wide and can hold 4 <code>floats</code>, 2 <code>doubles</code>, or 16 <code>chars</code>. <code>SSE</code> can speed up signal processing applications (image processing, sound processing, compression, ...), encryption, and others quite dramatically when used properly. </p>\n<p>On the other hand, <code>mm</code> registers are part of the <code>MMX</code> IS, another vector instruction set older than <code>SSE</code> (1997 I suppose), and are 64bit wide. \nNowadays the vector instruction sets are becoming quite a <em>fashion</em> in a certain way (vector <code>CPUs</code> were the standard for supercomputers back in the 70s &amp; 80s - Cray's, ThinkingMachine's, ... computer were all vector based). In the past few years, Intel came up with many versions of <code>SSE</code> and two new IS called <code>AVX</code> &amp; <code>AVX2</code> (Advanced Vector Extension) with 256bit wide vectors implemented on SandyBridge/IvyBridge/Haswell, and <code>AVX-512</code> first implemented on the KNC (Knight's Corner) of the Xeon Phi processor &amp; co-processor line.</p>\n<p>I encourage you to check the Intel documentation &amp; Wikipedia for more information.   </p>\n</div>",
            "votes": "2",
            "user": "yaspr",
            "time": "May 18, 2014 at 18:17",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>So it turns out the <a href=\"http://en.wikipedia.org/wiki/Streaming_SIMD_Extensions\" rel=\"nofollow\">SSE Registers (XMM0-7)</a> are not supported within OllyDbg v1.10, but are in v2.0 which I found, <a href=\"http://www.ollydbg.de/version2.html\" rel=\"nofollow\">and downloaded here</a>, and works great so far. The newest version does not, however, support plugins.</p>\n</div>",
            "votes": "3",
            "user": "zz3star90",
            "time": "May 18, 2014 at 4:50",
            "is_accepted": false,
            "comments": []
        }
    ]
}