{
    "title": "ARM Cortex-M0 - How to either (non-intrusively) extract firmware or modify downloadable firmware (NuMicro NUC126)",
    "link": "https://reverseengineering.stackexchange.com/questions/27795/arm-cortex-m0-how-to-either-non-intrusively-extract-firmware-or-modify-downl",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>As a hands-on introduction into RE, I've decided to take on a small, simple embedded device. In hindsight, it was probably a mistake. This \"project\" has consumed me for about 2 weeks. However, I'm determined to see this through, by god.</p>\n<p><strong>Here's what I've got so far:</strong></p>\n<ul>\n<li><p>The brain of the device is a NuMicro NUC126 (Cortex-M0) microcontroller. (<a href=\"https://www.nuvoton.com/export/resource-files/DS_NUC126_Series_EN_Rev1.04.pdf\" rel=\"nofollow noreferrer\">datasheet</a>)</p>\n</li>\n<li><p>The device also houses a BY25Q64ASSIG SPI NOR Flash (irrelevant?) (<a href=\"https://datasheet.lcsc.com/szlcsc/2001181032_BOYAMICRO-BY25Q64ASSIG-T_C484306.pdf\" rel=\"nofollow noreferrer\">datasheet</a>)</p>\n</li>\n<li><p>The firmware download is a single .bin file (available if requested).</p>\n</li>\n<li><p>The firmware is loaded to the device over USB via the (custom?) device-in-question vendor's ISP tool. (<a href=\"https://www.nuvoton.com/tool-and-software/software-development-tool/programmer/\" rel=\"nofollow noreferrer\">official non-vendor tool</a>). <em>Even the source is available for the ISP tool.</em></p>\n</li>\n<li><p>Output of <code>binwalk -B</code>: <em>97640 0x17D68 CRC32 polynomial table, little endian</em>. Nothing else.</p>\n</li>\n<li><p><code>binwalk -E</code> indicates no compression/encryption:</p>\n<p><a href=\"https://i.sstatic.net/bDUOD.png\" rel=\"nofollow noreferrer\"><img alt=\"binwalk\" src=\"https://i.sstatic.net/bDUOD.png\"/></a></p>\n<p>as does binvis.io:</p>\n<p><a href=\"https://i.sstatic.net/jzTAo.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/jzTAo.png\"/></a></p>\n</li>\n<li><p><code>strings</code> indeed finds strings visible when using the device</p>\n</li>\n<li><p><code>dfu-util -l</code> and <code>dfu-util -d &lt;VID:PID&gt;</code> doesn't appear to be able to find the device, which tells me that it does not utilize DFU. Even more likely, I'm just using it wrong. Perhaps the ISP tool puts it into DFU mode before flashing? I was hoping to perhaps extract the firmware this way.</p>\n</li>\n<li><p>Applied segment maps in IDA, aligned vectors, analyzed at reset vector, ???, no profit (yet).</p>\n</li>\n</ul>\n<p><strong>My intentions:</strong></p>\n<p>The device comes with 3 \"themes\". I either want to replace/edit, or add more. The problem is, while I (think I) have disassembled the firmware correctly, as noted above, I don't know where to go from there.</p>\n<p><strong>Questions:</strong></p>\n<ol>\n<li>Since I feel like I'm (somewhat) close to a solution, is there something I'm missing? Reading assembly, sure. But I mean, are the themes simply bitmap style images? Are they vector? How would I know? After scanning the file using a resource extractor, it didn't find any embedded images. Though I'm curious as to whether disassembling the downloaded firmware would yield the same results as if I were to actually pull the firmware from the chip and disassembling it that way.</li>\n<li>Is JTAG/UART absolutely necessary? The reason I ask is because practically all guides I've found utilize something similar. I've looked into OpenOCD, Segger, etc. and I'm really trying to avoid purchasing extra stuff, but will if necessary.</li>\n</ol>\n<hr/>\n<p>Thank you all for the help! If you require more information, please ask!</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "509",
    "tags": [
        "firmware",
        "arm",
        "patching",
        "embedded"
    ],
    "user": "Steve",
    "time": "Jun 6, 2021 at 2:38",
    "comments": [
        {
            "user": "Karol Kowalewski",
            "text": "<span class=\"comment-copy\">hello I've been working on this for a year, and I can't find anything meaningful. the only thing i did you have below <a href=\"https://www.youtube.com/watch?v=1659stkBegE&amp;t=40s\" rel=\"nofollow noreferrer\">youtube.com/watch?v=1659stkBegE&amp;t=40s</a></span>",
            "time": null
        }
    ],
    "answers_data": []
}