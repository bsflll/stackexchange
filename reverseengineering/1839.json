{
    "title": "Can't access process memory when dumping",
    "link": "https://reverseengineering.stackexchange.com/questions/1839/cant-access-process-memory-when-dumping",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to analyse a piece of malware and after finding the OEP I'm having trouble dumping the process.</p>\n<p>Using LordPE (and IDA) I get an error saying \"Couldn't grab process memory\", I searched for this and resolved it by using the intellidump engine in LordPE. Although this produces an exe, the file doesn't have an icon. I also tried using OllyDump and get the error: \"Unable to read memory of debugged process...\". I tried to fix this by modifying memory segments in Olly, setting their access to 'full access' however I'm still getting the same error.</p>\n<p>When I try to use ImpREC on the dump from LordPE, I get sometimes get another error with similar gist.</p>\n<p>I'm guessing there's some kind of memory protection going on here but really have no idea what to do next. Any help would be much appreciated.</p>\n</div>",
    "votes": "7",
    "answers": 3,
    "views": "3k",
    "tags": [
        "unpacking",
        "dumping"
    ],
    "user": "James",
    "time": "Apr 17, 2013 at 19:45",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Try <a href=\"http://cracking.z0ro.com/Reverse-Engineering/Unpackers-Dumpers-Decrypters/Iczelion%20Dump/iczdump.zip\">IczDump</a> -- it works by injecting itself as a DLL into the target process and dumping the target process's memory from within the process itself.</p>\n</div>",
            "votes": "5",
            "user": "Jason Geffner",
            "time": "Apr 17, 2013 at 19:54",
            "is_accepted": false,
            "comments": [
                {
                    "user": "James",
                    "text": "<span class=\"comment-copy\">IczDump seems to run the program but when the malware deletes itself it also quits</span>",
                    "time": null
                },
                {
                    "user": "amccormack",
                    "text": "<span class=\"comment-copy\">Is there a branch it takes to delete itself that you could patch out?</span>",
                    "time": null
                },
                {
                    "user": "Ange",
                    "text": "<span class=\"comment-copy\">You can try to hook the deletion part yourself, or use a ready-made tool for that, such as <a href=\"http://www.hbgary.com/free-tools#flypaper\" rel=\"nofollow noreferrer\">Flypaper</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm not sure how much trouble you'd be willing to go through, but I'd suggest taking a full memory dump with something like <a href=\"http://www.moonsols.com/2011/07/18/moonsols-dumpit-goes-mainstream/\" rel=\"nofollow\">DumpIt</a> and use <a href=\"https://www.volatilesystems.com/default/volatility\" rel=\"nofollow\">Volatitlity</a>s' \"<a href=\"http://code.google.com/p/volatility/wiki/CommandReference#procmemdump\" rel=\"nofollow\">procmemdump</a>\" command to pull the running process.</p>\n</div>",
            "votes": "4",
            "user": "Brandon  Young",
            "time": "Apr 19, 2013 at 16:14",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>the lack of icon is merely due to the unpacked executable not having a correct resource DataDirectory.</p>\n<p>does the dumped executable actually run (under a debugger)?</p>\n<p>You might want to try <a href=\"http://qunpack.ahteam.org/\" rel=\"nofollow\">QuickUnpack</a> or Deroko's <a href=\"http://deroko.phearless.org/doer.html\" rel=\"nofollow\">Dream of every reverser</a>.</p>\n</div>",
            "votes": "3",
            "user": "Ange",
            "time": "Apr 17, 2013 at 19:55",
            "is_accepted": false,
            "comments": [
                {
                    "user": "James",
                    "text": "<span class=\"comment-copy\">It does run, and it definitely looks unpacked (in IDA) however it seems to exit very quickly. Is there any way to fix the icon (just out of curiousity)?</span>",
                    "time": null
                },
                {
                    "user": "James",
                    "text": "<span class=\"comment-copy\">The above may be somewhat unclear. It runs in IDA but will exit before actually doing much. When running the original exe, the malware installs itself etc and starts running.</span>",
                    "time": null
                },
                {
                    "user": "Ange",
                    "text": "<span class=\"comment-copy\">It's possible that it detects that's it's unpacked, then exists. Fixing the icon is a matter of finding the resource DataDirectory (if it's still present in memory) and fix it in the PE Header.</span>",
                    "time": null
                },
                {
                    "user": "James",
                    "text": "<span class=\"comment-copy\">hmm, looking at the graph in IDA, it seems that the split between exiting and executing the rest of it comes from a compare of BL. The problem is that ebx is zeroed earlier and I can't see anything that sets it to something other than 0. Could it be set in an interrupt or something?</span>",
                    "time": null
                },
                {
                    "user": "Ange",
                    "text": "<span class=\"comment-copy\">It looks like on EntryPoint, EBX <a href=\"https://code.google.com/p/corkami/wiki/InitialValues\" rel=\"nofollow noreferrer\">always</a> points to some valid address like 7EFXX000. So, if the packer was changing that, it's an easy way for the packed code to check if it has been unpacked or not.</span>",
                    "time": null
                }
            ]
        }
    ]
}