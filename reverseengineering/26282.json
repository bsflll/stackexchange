{
    "title": "Finding Code Reference String in MS-DOS 16-bit Executable with IDA Pro",
    "link": "https://reverseengineering.stackexchange.com/questions/26282/finding-code-reference-string-in-ms-dos-16-bit-executable-with-ida-pro",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Have an application that has code to detect serial port model. I'm trying to work out how it works through static analysis. I have unpacked the EXE and can find the references to the strings:</p>\n<pre><code>dseg:2DA8 38 32 35 30 00           a8250     db '8250',0      ; DATA XREF: seg124:4EC1↑o\ndseg:2DAD 31 36 34 35 30 00        a16450    db '16450',0     ; DATA XREF: seg124:4EC6↑o\ndseg:2DB3 31 36 35 35 30 00        a16550    db '16550',0     ; DATA XREF: seg124:4ECB↑o\ndseg:2DB9 31 36 35 35 30 41 46 00  a16550af  db '16550AF',0   ; DATA XREF: seg124:4ED0↑o\ndseg:2DC1 31 36 35 35 31 00        a16551    db '16551',0     ; DATA XREF: seg124:4ED5↑o\ndseg:2DC7 31 36 35 35 32 00        a16552    db '16552',0     ; DATA XREF: seg124:4EDA↑o\ndseg:2DCD 38 32 30 35 30 00        a82050    db '82050',0     ; DATA XREF: seg124:4EDF↑o\ndseg:2DD3 38 32 35 31 30 00        a82510    db '82510',0     ; DATA XREF: seg124:4EE4↑o\n</code></pre>\n<p>Now when when I hit <kbd>x</kbd> to find the XRef for these I am taking to strings and the string length values:</p>\n<pre><code>seg124:4EC0 04                               db    4   \nseg124:4EC1 A8 2D 26 6A                      dd a8250         ; \"8250\"\nseg124:4EC5 05                               db    5   \nseg124:4EC6 AD 2D 26 6A                      dd a16450        ; \"16450\"\nseg124:4ECA 05                               db    5   \nseg124:4ECB B3 2D 26 6A                      dd a16550        ; \"16550\"\nseg124:4ECF 07                               db    7   \nseg124:4ED0 B9 2D 26 6A                      dd a16550af      ; \"16550AF\"\nseg124:4ED4 05                               db    5   \nseg124:4ED5 C1 2D 26 6A                      dd a16551        ; \"16551\"\nseg124:4ED9 05                               db    5   \nseg124:4EDA C7 2D 26 6A                      dd a16552        ; \"16552\"\nseg124:4EDE 05                               db    5   \nseg124:4EDF CD 2D 26 6A                      dd a82050        ; \"82050\"\nseg124:4EE3 05                               db    5   \nseg124:4EE4 D3 2D 26 6A                      dd a82510        ; \"82510\"\n</code></pre>\n<p>There is no reference to these automatically found by IDA. Is there a value or instruction I could search for to narrow the search. i.e. a reference to <code>seg124:4ECB</code></p>\n<p>I have also tried to use a live debugger but I get <a href=\"https://stackoverflow.com/questions/64778815/out-of-memory-borland-turbo-debugger-ms-dos-6-22\">Out of Memory error</a> which is why I'm trying to work it out statically</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "537",
    "tags": [
        "ida",
        "dos"
    ],
    "user": "chentiangemalc",
    "time": "Nov 11, 2020 at 7:50",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Have you tried it in DOSBox? There's a project out there somewhere which helps connecting the \"checked\" build of DOSBox with IDA. I think IDADos or so?</span>",
            "time": null
        },
        {
            "user": "Dvd848",
            "text": "<span class=\"comment-copy\">In the past I was able to use W32Dasm (version 10.0) in order to find string references for 16-bit programs when IDA and Ghidra failed</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I found the code accessing the string using <a href=\"https://vetusware.com/download/SoftICE%202.80/\" rel=\"nofollow noreferrer\">SoftICE</a> for MS-DOS.\nTo use I did the following:</p>\n<ol>\n<li>Add SoftICE driver as first entry in CONFIG.SYS</li>\n</ol>\n<p><strong>DEVICE=C:\\SICE\\S-ICE.EXE /SYM 50</strong></p>\n<p><a href=\"https://i.sstatic.net/LAv9r.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/LAv9r.png\"/></a></p>\n<ol start=\"2\">\n<li><p>Launch program and Alt+PrintScreen triggered break into SoftICE Window. (SoftIce Documentation also mentioned Ctrl+D but this didn't work for me)</p>\n</li>\n<li><p>Searched memory for my target string:</p>\n</li>\n</ol>\n<p><em><strong>s 0 L FFFFFFFF \"16550AF</strong></em></p>\n<p>Which output memory address <strong>6AF0:2DB9</strong></p>\n<ol start=\"3\">\n<li>Set breakpoint on read/write memory access for that location:</li>\n</ol>\n<p><strong>bpm 6AF0:2DB9</strong> RW</p>\n<p><a href=\"https://i.sstatic.net/pbOSm.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/pbOSm.png\"/></a></p>\n<ol start=\"4\">\n<li><p>X to continue program execution</p>\n</li>\n<li><p>On breakpoint the instruction <strong>mov al,ES:[BX]</strong> access the string location</p>\n</li>\n<li><p>IDA pro was searched for the bytes i.e. <strong>26 8A 07 25 FF 00 75 03</strong> to find the instruction:</p>\n</li>\n</ol>\n</div>",
            "votes": "2",
            "user": "chentiangemalc",
            "time": "Nov 13, 2020 at 20:35",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It seems you have an array of records of the following format:</p>\n<pre><code>struct msg_rec\n{\n char len;\n char __far *string;\n};\n</code></pre>\n<p>(possibly the fields are swapped)</p>\n<p>In such case a good strategy is to scroll up until the first read or offset xref - that should be the code which walks or indexes the array and retrieves the string address.</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Nov 16, 2020 at 18:40",
            "is_accepted": false,
            "comments": []
        }
    ]
}