{
    "title": "Basic help for reverse engineering for a newbie",
    "link": "https://reverseengineering.stackexchange.com/questions/12165/basic-help-for-reverse-engineering-for-a-newbie",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am a newbie to reverse engineering software.</p>\n<p>I am familiar x86 asm language, Linux internals, and c language.</p>\n<p>After going through lots of tutorials, I didn't absorb much knowledge.<br/>\nSo, I have started writing my own programs then reversing them again from their binaries.</p>\n<p>Is this approach good?</p>\n<p>Also if I want to get more knowledge, a better grip on assembly and c, should I use ollydbg or IDA pro for starting?<br/>\nPlease recommend some links or books that would be good. :- )</p>\n</div>",
    "votes": "2",
    "answers": 4,
    "views": "8k",
    "tags": [
        "assembly",
        "c"
    ],
    "user": "sourav punoriyar",
    "time": "May 5, 2020 at 4:12",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>When I started with reversing about 3 years ago I used the following books:</p>\n<ul>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/0764574817\">Reversing:Secrets of Reverse Engineering</a></li>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/1593272901\">Practical Malware Analysis</a></li>\n</ul>\n<p>Both of these books have some really good newbie related content like recognizing C/C++ code constructs in assembly and introduction materials to various tools (both Ollydbg and Ida Pro). If you are more interested in Ida pro, I would suggest reading <a href=\"http://rads.stackoverflow.com/amzn/click/1593272898\">The Ida Pro Book</a>. Also the book <a href=\"http://rads.stackoverflow.com/amzn/click/1118787315\">Practical Reverse Engineering</a> has some really nice reviews but I didn't have a chance reading it.</p>\n<p>For getting more familiar with Ollydbg I did most of the tutorials from the <a href=\"http://octopuslabs.io/legend/blog/sample-page.html\">Legend Of Random page</a>. I liked those tutorials because they don't just focus on reversing C/C++ binaries but also give you a brief look at tools and techniques with reversing Delphi and Visual Basic applications. </p>\n<p>When you get a little bit more familiar with the following, I suggest you to try some crackmes from <a href=\"http://crackmes.de/\">Crackmes.de</a>. There are some great newbie related crackmes there like the <a href=\"http://crackmes.de/users/arturdents\">Artur Dents series</a>.</p>\n</div>",
            "votes": "5",
            "user": "ubnix",
            "time": "Mar 7, 2016 at 8:29",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Hackndo",
                    "text": "<span class=\"comment-copy\">I could copy/paste this answer. Exactly the same steps, same books, same websites. Great advice.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Download and read <a href=\"http://beginners.re/RE4B-EN.pdf\" rel=\"nofollow\">Reverse Engineering for Beginners</a>. It is excellent and free to download. It contains lots of theory and examples you can easily understand. Plus, it refers to all major architectures, x86, x86-64bit, ARM and MIPS. And one more thing. Yes, your approach is good, you just have to gradually start reversing more difficult programs, like self-made keygens and stuff.</p>\n</div>",
            "votes": "3",
            "user": "Chris Tsiakoulas",
            "time": "Mar 7, 2016 at 18:05",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If you're looking for more challenges like @ubnix suggested, try looking on the <a href=\"https://tuts4you.com/\" rel=\"nofollow\">Tuts 4 You</a> website. In the downloads section there are a lot of reverse-engineering resources, including crackmes, tutorials, tools, and references. One of the resources I used in learning was Lena's <a href=\"https://tuts4you.com/download.php?view.1089\" rel=\"nofollow\">Reverse Engineering for Newbies</a>.</p>\n</div>",
            "votes": "1",
            "user": "dingo_kinznerhook",
            "time": "Mar 7, 2016 at 21:57",
            "is_accepted": false,
            "comments": [
                {
                    "user": "ra170",
                    "text": "<span class=\"comment-copy\">The password is in the pop-up :)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'd suggest: <a href=\"http://crackmes.de/\" rel=\"nofollow\">http://crackmes.de/</a> as a source of problems.  Their problems are graduated from fairly easy to extremely difficult.  In addition to problems, they do maintain a list of solutions (not for all problems though) if you get stuck.</p>\n</div>",
            "votes": "0",
            "user": "thurizas",
            "time": "Mar 9, 2016 at 13:41",
            "is_accepted": false,
            "comments": []
        }
    ]
}