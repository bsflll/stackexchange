{
    "title": "How to define a 28-bit integer in Ghidra",
    "link": "https://reverseengineering.stackexchange.com/questions/32047/how-to-define-a-28-bit-integer-in-ghidra",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm working on reverse-engineering firmware for an STM32G0B1, which has two onboard CAN modules, in Ghidra.</p>\n<p>I think that a proper data structure for both the Tx and Rx FIFO buffers would help me greatly, and also I'm trying to learn more about Ghidra in the process.</p>\n<p>The node ID is either an 11- or 28-bit unsigned integer (though I'll be treating every ID as a 28-bit integer), and I'm struggling to define that number as a data type.</p>\n<p>I haven't found anything in either Google search or ChatGPT either.</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "169",
    "tags": [
        "decompilation",
        "ghidra",
        "type-reconstruction"
    ],
    "user": "Vincent Guttmann",
    "time": "Jul 9, 2023 at 18:55",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm not sure what exactly you want, but my best guess that defining a struct with a 28 bits long bitfield is the way to correctly model this.</p>\n</div>",
            "votes": "2",
            "user": "Florian Magin",
            "time": "Jul 13, 2023 at 12:55",
            "is_accepted": false,
            "comments": []
        }
    ]
}