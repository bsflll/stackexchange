{
    "title": ".NET: It's possible to recover original source code from compiled .exe when I have all the .vshost, .pdb and compiled files?",
    "link": "https://reverseengineering.stackexchange.com/questions/18033/net-its-possible-to-recover-original-source-code-from-compiled-exe-when-i-ha",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have the compiled code with all .pdb, vshost and everything that is generated.\nI am already using DotPeek without too much hassle. Would like to know If I can retrieve the original code with all the pdb and vshost files generated from compilation with the original names.</p>\n<p>I know pdb maps your compiled exe to the original source code you have in visual studio to make debugging available. </p>\n<p>So basically pdb should be a \"map\" to what you wrote in visual studio and the optimized binary you have, that results in a CIL/C# code in DotPeek decompiled source.</p>\n<p>There is a way with those files to retrieve the code in a non-optimized way (or to say differently, like it was in visual studio original source?)</p>\n\n#\n\n<p>EDIT</p>\n\n#\n\n<p>Well, it seems it's not possible. Peace :)</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "8k",
    "tags": [
        "decompilation",
        ".net",
        "pdb"
    ],
    "user": "Liquid Core",
    "time": "May 2, 2018 at 10:41",
    "comments": [
        {
            "user": "Biswapriyo",
            "text": "<span class=\"comment-copy\">It is possible untill the executable is not obfuscated.</span>",
            "time": null
        },
        {
            "user": "Liquid Core",
            "text": "<span class=\"comment-copy\">@Biswapriyo It's not. I have compiled it, but I am missing some of the original classes and I have 95% of the original source. I Already have decompiled it with DotPeek, but I would like to have a more readable code instead of the IL/C# generated because it will speed up my reconstruction work a lot.  It it's possible, then how to?</span>",
            "time": null
        },
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">what is this 5% missing? Maybe the code was removed from the exe as it was not used? Can you provide the binaries?</span>",
            "time": null
        },
        {
            "user": "Liquid Core",
            "text": "<span class=\"comment-copy\">@PawełŁukasik Cannot provide the binary as it's my client project. The code missing is due to GIT misbehavior so it's just a data loss. The full code, with 100% of the classes is compiled tough and I would like to retrieve the code from there.</span>",
            "time": null
        },
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">you can't retrieve the original code as you wrote it, you can get sth that behaves the same but might look different. A lot of code that is written is just a syntactic sugar and look completely different when compiled</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>While PDBs will certainly <em>help</em> in decompilation (e.g. with you may be able to recover names of functions, classes, and maybe even local variables), they don't contain the original source code and other things unnecessary for debugging (such as comments).</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Apr 19, 2018 at 8:46",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Liquid Core",
                    "text": "<span class=\"comment-copy\">How I can do that? I Don't need comments and other things.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If the program is not obfuscated you can recover something very similar to the source code (even if you don't have a PDB file), I've done it once using reflector (you can use also dnSpy, which is an open source software), but after that you have to fix a lot of things (like the names of anonymous method)</p>\n</div>",
            "votes": "0",
            "user": "COB RCE",
            "time": "Apr 23, 2018 at 17:03",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Liquid Core",
                    "text": "<span class=\"comment-copy\">Dotpeek or similar gives you the clear optimized code. There's no doubt about it. My idea was how to retrieve the original code as close as possible to the real original source.  i.e:  Dotpeek retrieve all the loops and conditions optimized and scrambled in a better way, but I want them back in a readable way.</span>",
                    "time": null
                },
                {
                    "user": "COB RCE",
                    "text": "<span class=\"comment-copy\">In my experience, I noticed that dnSpy gives the most readable decompiled code, and if the code flow is obfuscated (you still notice that the code of every method is similar to a finite state machine) use de4dot or some specific deobfuscator (de4dot can also detect the protection), decompile it again and check</span>",
                    "time": null
                }
            ]
        }
    ]
}