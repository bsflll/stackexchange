{
    "title": "Decompilation output modification in IDA Pro",
    "link": "https://reverseengineering.stackexchange.com/questions/30730/decompilation-output-modification-in-ida-pro",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to modify cfunc AST from</p>\n<pre><code>If (a1 &amp;&amp; some_func_ptr) {\n  some_func_ptr();\n}\n</code></pre>\n<p>To</p>\n<pre><code>if (a1) {\n  some_func_ptr();\n}\n</code></pre>\n<p>But I constantly get INTERR 50683 error. I tried</p>\n<pre><code>new_item = idaapi.cexpr_t(item.cif.expr.x)\nitem.cif.expr.swap(new_item)\n</code></pre>\n<p>Also many other attempts to modify other parts of AST fail in the same way. I suspect that it has something to do with thisown flag, but various changes did nothing.</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "194",
    "tags": [
        "ida",
        "decompilation",
        "hexrays"
    ],
    "user": "mizari",
    "time": "Aug 3, 2022 at 7:08",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Have you tried getting in touch with the Hex-Rays support? While I'd love to see the answer to your question also here in our Q&amp;A, contacting the support is oftentimes faster and leads to better results for very specific questions like this.</span>",
            "time": null
        },
        {
            "user": "mizari",
            "text": "<span class=\"comment-copy\">Due to political reasons Hex-Rays support stopped answering.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The 50683 INTERR means address is invalid. There is a check applied by verifier (<strong>\\IDAFolder\\plugins\\hexrays_sdk\\verifier\\cverify.cpp</strong>) in <strong>cfunc_t::verify_insn</strong> function:</p>\n<pre><code>case cit_if:\n  if ( maturity &lt; CMAT_TRANS1 || maturity &gt;= CMAT_CASTED )\n  {\n    ea_t jea = i-&gt;cif-&gt;expr.calc_jmp_cnd_ea();\n    if ( jea != BADADDR &amp;&amp; i-&gt;ea != jea )\n      // ctree: mismatch in if-statement and its expression addresses\n      CFAIL_QASSERT(50683, i);\n  }\n</code></pre>\n<p>There are also many other INTERRs for decompilation in case anyone is looking. So, the correct code in my case had to have something like this:</p>\n<pre><code>new_item = idaapi.cexpr_t(item.cif.expr.x)\nnew_item.ea = item.cif.expr.ea\n# or just new_item.ea = idaapi.BADADDR it works too\nitem.cif.expr.swap(new_item)\n</code></pre>\n</div>",
            "votes": "1",
            "user": "mizari",
            "time": "Aug 4, 2022 at 1:55",
            "is_accepted": true,
            "comments": []
        }
    ]
}