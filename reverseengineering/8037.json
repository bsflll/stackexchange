{
    "title": "Reversing iOS games with LLDB and IDA on arm64",
    "link": "https://reverseengineering.stackexchange.com/questions/8037/reversing-ios-games-with-lldb-and-ida-on-arm64",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Cracked the game with clutch and set watchpoint on the value address, when the value changes it breaks just fine but when i go to that binary address in IDA it shows me different instruction, here's some Pic's for more explanation:</p>\n<p><img alt=\"Image1\" src=\"https://i.sstatic.net/YPwxA.png\"/>\n<img alt=\"Image2\" src=\"https://i.sstatic.net/ajLUq.png\"/>\n<img alt=\"Image3\" src=\"https://i.sstatic.net/csxSD.png\"/></p>\n<p>I have tried disabling ASLR but nothing changed.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "ios",
        "lldb"
    ],
    "user": "Cyb3r",
    "time": "Jan 16, 2015 at 23:33",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This might be stupid, but you say you are debugging the ARM64 binary, and yet in IDA Pro it says you are disassembling the ARMv7 binary. So you are disassembling the incorrect binary in IDA Pro.</p>\n<p>To fix this, open the binary in 64 bit version of IDA Pro. It will automatically disassemble the 64 bit binary.</p>\n</div>",
            "votes": "4",
            "user": "rendari",
            "time": "Jan 20, 2015 at 19:23",
            "is_accepted": true,
            "comments": []
        }
    ]
}