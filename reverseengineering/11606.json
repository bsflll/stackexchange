{
    "title": "How Can I Debug A Bios Better",
    "link": "https://reverseengineering.stackexchange.com/questions/11606/how-can-i-debug-a-bios-better",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to reverse engineer a firmkit in a bios, but in general I would like to know how can I debug a bios better.</p>\n<p>I found a way to attach IDA to a vmware instance usign a GDB session <a href=\"https://cyberview.wordpress.com/2010/09/16/debugging-bios-under-vmware-using-idas-gdb-debugger/\" rel=\"nofollow\">GDB Debugging With VMware</a>, but it seems like I am always racing to against the bios and boot up of the VM. I am wanting to have it stop in a place that I can follow and make sense of.</p>\n<p>In general, What are some better practices when debugging a bios? Is IDA a decent debugger for this task? Is there something more meant for this task? Any other ideas are welcome also, I am really wanting to focus on reversing malware that is written to the bios.</p>\n<p>Thanks!</p>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "debugging",
        "gdb",
        "bios"
    ],
    "user": "LUser",
    "time": "Dec 21, 2015 at 2:27",
    "comments": [
        {
            "user": "fpmurphy",
            "text": "<span class=\"comment-copy\">UEFI firmware is relatively easy to reverse engineer as most of the protocols are well documented and most implementations are based on the Tianocore reference implementation.   A traditional BIOS is harder to reverse engineer as documentation is not readily available</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can try running your BIOS in QEMU. QEMU's <code>-S</code> option will pause boot until a debugger (gdb) is attached. IDA's debugger apparently works fine with QEMU, according to this article: <a href=\"https://www.hex-rays.com/products/ida/support/tutorials/debugging_gdb_qemu.pdf\" rel=\"nofollow\">https://www.hex-rays.com/products/ida/support/tutorials/debugging_gdb_qemu.pdf</a></p>\n</div>",
            "votes": "2",
            "user": "Brendan Dolan-Gavitt",
            "time": "Dec 21, 2015 at 3:45",
            "is_accepted": true,
            "comments": [
                {
                    "user": "LUser",
                    "text": "<span class=\"comment-copy\">Same idea, I managed to use VMware 7 and it worked fine.</span>",
                    "time": null
                }
            ]
        }
    ]
}