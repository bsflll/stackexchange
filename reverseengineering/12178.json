{
    "title": "Virtual Method that returns <this>?",
    "link": "https://reverseengineering.stackexchange.com/questions/12178/virtual-method-that-returns-this",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In my vtable i found a method that simply returns ecx.\nNow im confused as to what this tries to accomplish ? \nIs this a known useful sequence ?</p>\n</div>",
    "votes": "2",
    "answers": 3,
    "views": "178",
    "tags": [
        "ida",
        "c++"
    ],
    "user": "Blob31",
    "time": "Mar 8, 2016 at 17:37",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The C++ compiler of Visual Studio uses <code>ecx</code> as the default register for <code>this</code> pointer, a virtual method which returns <code>ecx</code> then actually returns <code>this</code> or <code>*this</code>. For example, you can test the following code:</p>\n<pre><code>class A\n{\npublic:\n  virtual A getmyself() { return *this; }\n  virtual A* getmyselfpointer() { return this; }\n}\n</code></pre>\n<p>The generated assembly code for <code>getmyself</code> (the same for <code>getmyselfpointer</code>) is</p>\n<pre><code>getmyself:\n  mov     eax, ecx\n  retn\n</code></pre>\n<p>This detail is not true for <code>clang</code> or <code>gcc</code> since they do not use <code>ecx</code> as default register for <code>this</code>.</p>\n</div>",
            "votes": "1",
            "user": "Ta Thanh Dinh",
            "time": "Mar 9, 2016 at 16:30",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It could be a method that at a high-level is intended to return a <a href=\"https://en.wikipedia.org/wiki/Covariance_and_contravariance_(computer_science)\" rel=\"nofollow\">covariant</a> object pointer.</p>\n</div>",
            "votes": "0",
            "user": "Jason Geffner",
            "time": "Mar 8, 2016 at 17:59",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If it would be ARM I'd say that it is constructor or destructor (see <a href=\"https://stackoverflow.com/questions/15452133/arm-c-abi-constructor-destructor-return-values\">this answer</a> for more details). As a part of more general pattern I had seen such a things in a multi-platform applications where the main code of the function was <code>#ifdef</code>'ed out and only return value was left for compatibility with other platforms/build configurations.</p>\n<p>Did you see calls to this function?</p>\n</div>",
            "votes": "0",
            "user": "Community",
            "time": "May 23, 2017 at 12:37",
            "is_accepted": false,
            "comments": []
        }
    ]
}