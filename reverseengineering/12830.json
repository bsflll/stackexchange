{
    "title": "ollydbg plugin patch notification",
    "link": "https://reverseengineering.stackexchange.com/questions/12830/ollydbg-plugin-patch-notification",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Im developing a plugin in which I would like to be notified when user makes some modification to the code. I know there is a patch table which can be accessed through <code>Plugingetvalue</code> function but I would like to do some actions as soon as user modifes code and not to check patch table every now and then. Is it possible to do this and how?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "158",
    "tags": [
        "ollydbg",
        "plugin"
    ],
    "user": "newbie",
    "time": "Jun 11, 2016 at 12:49",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Given your reference to <code>Plugingetvalue()</code>, it looks like you're trying to write your plugin for OllyDbg v1.</p>\n<p>In that case, you could do the following:</p>\n<ul>\n<li>Get the address of the patch table's <code>t_table</code>: <code>pPatchTable = Plugingetvalue(VAL_PATCHES);</code></li>\n<li>Hook <code>Addsorteddata()</code>, such that any time you see it called with <code>sd == &amp;pPatchTable-&gt;data</code>, you'll see that the user just added a patch.</li>\n<li>Analyze the <code>item</code> value passed to <code>Addsorteddata()</code> above as a pointer to a <code>t_patch</code> structure, which will give you the base address of the patch in memory, the size of the patch, the type of patch, the original code, and the patched code.</li>\n</ul>\n<p>There may be a formal way to get patch notifications, but if not, the above solution should work.</p>\n</div>",
            "votes": "1",
            "user": "Jason Geffner",
            "time": "Jun 11, 2016 at 16:58",
            "is_accepted": true,
            "comments": []
        }
    ]
}