{
    "title": "Reassembler toolchain",
    "link": "https://reverseengineering.stackexchange.com/questions/6186/reassembler-toolchain",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm looking for tools to:</p>\n<ol>\n<li>Disassemble a function from a x86 Windows executable into an asm file.</li>\n<li>Edit the file.</li>\n<li>Assemble the file again into an object file that can then be linked into a DLL.</li>\n<li>Inject this DLL into the original target executable.</li>\n</ol>\n<p>What disassembler and assembler combo allows me to do this ? </p>\n<p>I'm currently using Visual Studio 2013 to inject C++ code which works fine but being able to edit the original assembly code without having to translate it to C++ first would be a nice improvement.</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "246",
    "tags": [
        "windows",
        "x86",
        "c++",
        "reassembly"
    ],
    "user": "XTF",
    "time": "Sep 6, 2014 at 17:20",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>I'm currently using Visual Studio 2013 to inject C++ code which works\n  fine but being able to edit the original assembly code without having\n  to translate it to C++ first would be a nice improvement.</p>\n</blockquote>\n<p>If you're using Visual Studio 2013, you don't need to translate the assembly code into C++. Just use <a href=\"http://msdn.microsoft.com/en-us/library/45yd4tzz.aspx\" rel=\"nofollow\">__asm</a>.</p>\n</div>",
            "votes": "1",
            "user": "Jason Geffner",
            "time": "Sep 6, 2014 at 16:12",
            "is_accepted": false,
            "comments": [
                {
                    "user": "XTF",
                    "text": "<span class=\"comment-copy\">Right, but I'd still need something to disassemble parts of the original binary into something that can be reassembled with __asm.</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">Your original question makes it sound like you already have the assembly code. You may want to reword your question to make it more clear.</span>",
                    "time": null
                },
                {
                    "user": "JamalS",
                    "text": "<span class=\"comment-copy\">Just FYI, the __asm feature does not work for 64-Bit projects; you need to create a separate .asm and compile with the MS macro-assembler.</span>",
                    "time": null
                },
                {
                    "user": "XTF",
                    "text": "<span class=\"comment-copy\">It's about a x86 game (Red Alert 2), so that's not an issue.</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">It sounds like you'd be better off hooking the target function than going through the rigmarole you outlined above. Check out <a href=\"http://research.microsoft.com/en-us/projects/detours/\" rel=\"nofollow noreferrer\">research.microsoft.com/en-us/projects/detours</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>disassembling the whole thing to something reassembleable is a huge feat, with high potential for errors if theres no reloc information or other things to 'assist' the disassembly.. i dont know of anything that will do this entirely.. there were old programs like sourcer etc in the dos days, but even then they got close, but not perfect.. what you're looking for i dont think exists.. yet</p>\n</div>",
            "votes": "1",
            "user": "evlncrn8",
            "time": "Sep 6, 2014 at 16:25",
            "is_accepted": false,
            "comments": [
                {
                    "user": "XTF",
                    "text": "<span class=\"comment-copy\">I'd like to do it one (or a few) functions at a time, not the whole executable at once.</span>",
                    "time": null
                },
                {
                    "user": "evlncrn8",
                    "text": "<span class=\"comment-copy\">hmm well the ida is probably good for that, i've done it myself, but it does require careful analysis of the code, the data blocks it access and other functions it calls.. i hope your target function is small :)</span>",
                    "time": null
                }
            ]
        }
    ]
}