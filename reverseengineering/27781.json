{
    "title": "How to decompile external functions of *.so library in ELF with Ghidra?",
    "link": "https://reverseengineering.stackexchange.com/questions/27781/how-to-decompile-external-functions-of-so-library-in-elf-with-ghidra",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There are some *.so libraries in my ELF file.<br/>\nI can see the *.so names in \"Imports\" directory of \"Symbol Tree\" Window in Ghidra tool. <br/>\nI think there are some external functions in the *.so libraries.<br/>\nHow can I decompile external functions of *.so libraries in ELF with Ghidra?</p>\n</div>",
    "votes": "5",
    "answers": 2,
    "views": "9k",
    "tags": [
        "ghidra",
        "elf"
    ],
    "user": "three2zero",
    "time": "Jun 4, 2021 at 2:08",
    "comments": [
        {
            "user": "macro_controller",
            "text": "<span class=\"comment-copy\">How do you see them in Ghidra? Do you mean that you have a call in your elf file to a function from another file? (imported function)</span>",
            "time": null
        },
        {
            "user": "three2zero",
            "text": "<span class=\"comment-copy\">@macro_controller, thanks for your comment. I edited my question again.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The cleanest way to do this is to click on <code>Options</code> when importing a file:</p>\n<p><a href=\"https://i.sstatic.net/0a1El.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/0a1El.png\"/></a></p>\n<p>then activate <code>Load External Libraries</code>\n<a href=\"https://i.sstatic.net/abJau.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/abJau.png\"/></a></p>\n<p>and make sure that the paths where the libraries are located appear in the list you can change with <code>Edit Paths</code> <a href=\"https://i.sstatic.net/aBcnY.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/aBcnY.png\"/></a></p>\n<p>This will import all required libraries into Ghidra:</p>\n<p><a href=\"https://i.sstatic.net/fGuRR.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/fGuRR.png\"/></a></p>\n<p>and resolve the external symbols to the providing library:</p>\n<p><a href=\"https://i.sstatic.net/fdIOj.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/fdIOj.png\"/></a></p>\n<p>You can now (auto) analyze the libraries as you would any other binary, and clicking on the \"thunked Function\" <a href=\"https://i.sstatic.net/RkUOI.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/RkUOI.png\"/></a> will open the library in which the function is defined in, in a new tab.</p>\n<p>If you want to do it afterwards, you can still manually import the libraries and then link them via the context menu action <code>Set External Program</code> in the <code>Symbol Tree</code> (for the specific library), then run the <code>FixupELFExternalSymbolsScript.java</code> GhidraScript</p>\n</div>",
            "votes": "6",
            "user": "Florian Magin",
            "time": "Jun 21, 2021 at 10:58",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In order to do that, go to <code>File-&gt;Add to Program...</code> and pick this file from the file system. It will be added to ghidra. you might need to reanalyze the whole program. Afterward, you should find those functions in the function list and can view them in the decompile.</p>\n</div>",
            "votes": "1",
            "user": "macro_controller",
            "time": "Jun 4, 2021 at 9:42",
            "is_accepted": false,
            "comments": [
                {
                    "user": "three2zero",
                    "text": "<span class=\"comment-copy\">thanks for your answer. When I try \"Add to Program\", I got an error in \"Add to Program\" dialog.   <code>Memory Conflict: Use &lt;options...&gt; to change the base address!</code>  I chose my elf file for add to program in the codebrowser windows, am I right?</span>",
                    "time": null
                },
                {
                    "user": "three2zero",
                    "text": "<span class=\"comment-copy\">You said, <code>pick this file from the file system.</code>  I am not clear this. The <code>file system</code> is my OS and <code>this file</code> is my ELF file, right?</span>",
                    "time": null
                },
                {
                    "user": "macro_controller",
                    "text": "<span class=\"comment-copy\">Try to load the file to another address. You have the other elf on your computer - you basically loading two elf files into the same memory space in Ghidra by doing this.</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">@macro_controller i think the op is loading the same file as his target (loading foo.exe twice) not foo.exe and blah.so i think misunderstanding your ThisFile please clarify what your intent was</span>",
                    "time": null
                },
                {
                    "user": "Florian Magin",
                    "text": "<span class=\"comment-copy\"><code>Add to Program</code> is a really hacky way to achieve something that Ghidra can do a lot more elegantly. I posted another answer describing that process, because I think this is what the OP actually is looking for</span>",
                    "time": null
                }
            ]
        }
    ]
}