{
    "title": "How are ARMv7 assembly opcodes and operands stored in bytes?",
    "link": "https://reverseengineering.stackexchange.com/questions/19643/how-are-armv7-assembly-opcodes-and-operands-stored-in-bytes",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've been trying to analyze an ARM binary but cannot figure out how the operators and operands are stored in the bytes of a program.</p>\n<p>For example, by looking at the disassembly listing of an ARMv7 binary,  I cannot deduce what the opcode for <code>cmp</code> is from these three lines, nor do I understand how it's encoded or how it's operands are encoded:</p>\n<pre><code>cmp r5, #0; 0x2d00\ncmp r4, #0; 0x2c00\ncmp r0, r2; 0x4290\n</code></pre>\n<p>How is the <code>cmp</code> operator, and it's respective operands encoded into two bytes?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "398",
    "tags": [
        "disassembly",
        "arm"
    ],
    "user": "edition",
    "time": "Oct 17, 2018 at 6:28",
    "comments": [
        {
            "user": "edition",
            "text": "<span class=\"comment-copy\">I've tried comparing the bits using <code>print \"{:16b}\\n{:16b}\\n{:16b}\".format(0x2d00,0x2c00,0x4290)</code> in Python, and I can't see a pattern emerging for <code>cmp</code>.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>See <a href=\"http://lars.nocrew.org/computers/processors/ARM/ARM7/manual.pdf\" rel=\"nofollow noreferrer\">ARM7 Data Sheet</a> \n4.4 Data processing page 23.\nBut there will be the different encoding of the instruction depending on the instruction set (ARM or Thumb). See also this <a href=\"https://stackoverflow.com/questions/10638130/what-is-the-arm-thumb-instruction-set\">question</a> </p>\n</div>",
            "votes": "3",
            "user": "Anton Kukoba",
            "time": "Oct 17, 2018 at 7:49",
            "is_accepted": true,
            "comments": [
                {
                    "user": "edition",
                    "text": "<span class=\"comment-copy\">That clears up the confusion I was having, as I now know how the bits affect the operator.</span>",
                    "time": null
                }
            ]
        }
    ]
}