{
    "title": "Reverse ASCII checksum algorithm",
    "link": "https://reverseengineering.stackexchange.com/questions/22328/reverse-ascii-checksum-algorithm",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am looking to reverse engineer what appears to be a 24-bit ASCII checksum.  I tried the standard CRC 16 and 32-bit checksums and they don't work.  Any pointers would be appreciated.  Here is some samples:</p>\n<pre><code>CMD21415A00M40C153S117!D0H$\nCMD21415A00M40C197S439!EJG$\nCMD21415A00M40C239S825!CIB$\nCMD21415A00M40C239S029!FHZ$\nCMD21415A00M40C197S275!BJE$\nCMD21415A00M40C153S302!N7W$\nCMD21415A00M40C153S141!A4I$\nCMD21415A00M40C197S266!8KE$\nCMD21415A00M40C197S714!RD0$\n</code></pre>\n<p>I believe for each line the checksum (3 ASCII characters between '!' and '$') is for the ASCII data between 'CMD' and '!'.  It does not seems to match any of basic checksum algorithms that I am familiar with.</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "217",
    "tags": [
        "decryption"
    ],
    "user": "jamaica8484",
    "time": "Oct 17, 2019 at 5:43",
    "comments": [
        {
            "user": "sudhackar",
            "text": "<span class=\"comment-copy\">Please add a bit more context as to where did you find this, any program or device? What's the CMD supposed to be?</span>",
            "time": null
        },
        {
            "user": "jamaica8484",
            "text": "<span class=\"comment-copy\">The data for a power control device that accepts serial data.  I believe 'CMD' indicates command instructions.</span>",
            "time": null
        },
        {
            "user": "dingo_kinznerhook",
            "text": "<span class=\"comment-copy\">OK, here's a question. Have you ever observed the same command instruction multiple times, and was the checksum the same?</span>",
            "time": null
        },
        {
            "user": "jamaica8484",
            "text": "<span class=\"comment-copy\">I checked data I collected and unfortunately did not find any repeat command packets.  One thing I did try to send some command packets with invalid checksum and I did get a error message saying it is invalid CRC.  So, I am wondering what is the likely standard CRC algorithm/type (e.g. 16-bit, 32-bit, etc.) that would be used then converted to the 3 character ASCII checksum as I doubt a complete custom CRC algorithm was developed.</span>",
            "time": null
        }
    ],
    "answers_data": []
}