{
    "title": "How to tell if a particular .NET assembly was written in C# or F#?",
    "link": "https://reverseengineering.stackexchange.com/questions/17911/how-to-tell-if-a-particular-net-assembly-was-written-in-c-or-f",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The motivation for this question is that I used JetBrains dotPeek to decompile an .exe written in F#, but the output project directory produced C# code.</p>\n<p>Why does decompiling an F# assembly produce C# code?</p>\n<p>I know that both languages get JIT-compiled from MSIL to native code, which may make it difficult to definitively say what the original language was.</p>\n<p>Despite this, are there reliable methods for distinguishing C# binaries from F# ones via static analysis? Dynamic analysis?</p>\n</div>",
    "votes": "6",
    "answers": 1,
    "views": "1k",
    "tags": [
        "decompilation",
        ".net",
        "c#"
    ],
    "user": "Samantha",
    "time": "Apr 6, 2018 at 9:20",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>Why does decompiling an F# assembly produce C# code?</p>\n</blockquote>\n<p>It doesn't. It produces IL code which then can be interpreted as C#, F# or VB.NET. dotPeek doesn't allow you to use any other language for previewing but for example <a href=\"https://github.com/0xd4d/dnSpy\" rel=\"noreferrer\">dnSpy</a>, <a href=\"https://github.com/icsharpcode/ILSpy\" rel=\"noreferrer\">ILSpy</a> allow you to pick your favourite one. Just wondering if there's any tools that allows F#. Not sure/haven't seen one.</p>\n<blockquote>\n<p>Despite this, are there reliable methods for distinguishing C# binaries from F# ones via static analysis? Dynamic analysis?</p>\n</blockquote>\n<p>There are some hints that can guide you. Check the references. If something is referencing the <code>FSharp.Core</code> then probably was written in F#. On the other hand if it doesn't probably it was not :)</p>\n<p>F#'s dlls usually have a lot of attributes put on classes like <code>[FSharpInterfaceDataVersion]</code> or <code>[CompilationMappingAttribute]</code> being used. Check them.</p>\n<p>There's one more thing. F# compiler is capable of using a <a href=\"https://blogs.msdn.microsoft.com/fsharpteam/2011/07/08/tail-calls-in-f/\" rel=\"noreferrer\">tail-recursion</a> by generating <a href=\"https://msdn.microsoft.com/en-us/library/system.reflection.emit.opcodes.tailcall(v=vs.110).aspx\" rel=\"noreferrer\">tailcall opcode</a> which is not the case with C# (at least for now). That could be an indicator. But it could be also manually crafted to use it after being written completely in C#.</p>\n</div>",
            "votes": "10",
            "user": "Paweł Łukasik",
            "time": "Apr 6, 2018 at 10:01",
            "is_accepted": true,
            "comments": []
        }
    ]
}