{
    "title": "How to debug an IDAPython script from within IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/2190/how-to-debug-an-idapython-script-from-within-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>IDAPython is great plugin in IDA. It is so handy to write small script to decode, decrypt or fix (patch) a binary in IDA.  I can just write, load and run a script, and can use <code>print</code> for the usual shotgun debugging. But when I develop a bigger IDAPython script, I need a way to debug it. </p>\n<p>I have searched and found that I can debug IDAPython with <a href=\"http://wingware.com/doc/howtos/idapython\">WingIDE</a> but I want to find another that doesn't require WingIDE. Is there another way to debug IDAPython scripts?</p>\n</div>",
    "votes": "17",
    "answers": 3,
    "views": "7k",
    "tags": [
        "python",
        "idapython",
        "ida"
    ],
    "user": "huyna",
    "time": "Jun 5, 2013 at 18:36",
    "comments": [
        {
            "user": "Willem Hengeveld",
            "text": "<span class=\"comment-copy\">i guess i am old fashioned, i use 'print'</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>UPDATE: This seems to be obsolete.</p>\n<p>You can debug IDAPython scripts using Python Tools for Visual Studio. It is completely free, and very easy to use.</p>\n<p>See <a href=\"http://sark.readthedocs.org/en/latest/debugging.html\" rel=\"nofollow noreferrer\">this tutorial</a> for this information.</p>\n</div>",
            "votes": "2",
            "user": "tmr232",
            "time": "Aug 7, 2019 at 12:33",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Vitalii",
                    "text": "<span class=\"comment-copy\">The tutorial is wrong or obsolete. I repeated the steps with Visual Studio 2019 and IDA 7.2, it doesn't work. When Visual Studio starts to attach to IDA, it reports error. The error text is very informative ;) it is \"General error occurred\"...</span>",
                    "time": null
                },
                {
                    "user": "tmr232",
                    "text": "<span class=\"comment-copy\">Thanks. Edited the answer to reflect it.</span>",
                    "time": null
                },
                {
                    "user": "Trass3r",
                    "text": "<span class=\"comment-copy\">That <code>enable_attach(secret=\"</code> part is wrong. Needs to be something like <code>ptvsd.enable_attach(address=('localhost', 5678))</code>: <a href=\"https://reverseengineering.stackexchange.com/questions/25102/how-to-setup-vscode-with-idapython/26069#26069\" title=\"how to setup vscode with idapython\">reverseengineering.stackexchange.com/questions/25102/â€¦</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can do this.  Last summer I worked with Hexrays and WingIDE guys and got this working.  In fact its in the docs!</p>\n<p><a href=\"http://wingware.com/doc/howtos/idapython\" rel=\"noreferrer\">http://wingware.com/doc/howtos/idapython</a> </p>\n<p>It rocks.</p>\n<p>Riley</p>\n</div>",
            "votes": "8",
            "user": "ril3y",
            "time": "Oct 4, 2013 at 13:50",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>As far as i know there's no way to debug python inside IDA.</p>\n<p>There are, however, a few python tools you could use to debug your own code.\nbut it will essentially require you to develop your own python IDE/debugger utilities around the built-in python debugging tools.</p>\n<p>I'm listing the possible methods by order of complexity (simplest first):</p>\n<p><strong>Compiling and running your own python code from python</strong><br/>\nThe more basic approach is using the python <code>compile</code> built-in function to compile python code into bytecode, executing that with <code>eval</code> or <code>exec</code> (also built-in functions). <code>compile</code> returns an <code>AST</code> (Abstract Syntax Tree) object you can further manipulate/investigate.</p>\n<p><strong>Using The python debugger (from python)</strong><br/>\nIf you want more advanced debugging abilities, python has it's own built-in python debugger module called <code>pdb</code>. You only need to tell <code>pdb</code> what python code to execute, and it'll spawn a debugger interface similar to <code>gdb</code>, the command line debugger lets you set conditional breakpoints, manipulate and analyze python code, and use most of the usual debugging tools.</p>\n<p><strong>Using the python debugging framework</strong><br/>\nthe python debugger is built on top of python's <code>bdb</code> (basic debugger), it is a class implementing debugging functionality and can be used from within IDA's python command line. If you're going to use the <code>bdb</code> you'll have to create your own tools and UI around these utilities.</p>\n<p>Edit:\nI saw WingIDE only now. since OP didn't specify what exactly is the issue using WingIDE, I hope at least one of the methods will be relevant.</p>\n</div>",
            "votes": "4",
            "user": "NirIzr",
            "time": "Jun 6, 2013 at 17:48",
            "is_accepted": false,
            "comments": [
                {
                    "user": "cb88",
                    "text": "<span class=\"comment-copy\">I would imagine the issue is that it isn't cheap.</span>",
                    "time": null
                },
                {
                    "user": "NirIzr",
                    "text": "<span class=\"comment-copy\">@cb88: 45$ vs the ~500$ IDA costs?.. sounds a bit odd but i guess it may be the reason.</span>",
                    "time": null
                }
            ]
        }
    ]
}