{
    "title": "How to deal with msvc runtime integrity?",
    "link": "https://reverseengineering.stackexchange.com/questions/31487/how-to-deal-with-msvc-runtime-integrity",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>After any type of patching image code the app cannot properly initialize the window specifically on the <code>user32!CreateWindowExA</code> call. PDB file shows it's vc2010\\x64\\Release.</p>\n<p>I'm actually newbie in reverse engineering so would be nice to get any advice, thanks.</p>\n<p><a href=\"https://i.sstatic.net/Fyr1D.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/Fyr1D.png\"/></a></p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "77",
    "tags": [
        "ida",
        "x86-64",
        "msvc"
    ],
    "user": "Andrei Nevsky",
    "time": "Jan 29, 2023 at 20:57",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Hi and welcome to RE.SE. So what's the question? If you are trying to patch the runtime and are dealing with the static libs, you may be able to achieve this differently. Similarly if you are trying this on the dynamic libs for the C/C++ runtime, you should be able to place your patched version next to the binary. But you don't give any details of what you patched (or are trying to patch) nor do you share relevant details. Also, please don't post text as a screenshot. It makes it difficult or impossible for search engines to index such a Q&amp;A.</span>",
            "time": null
        },
        {
            "user": "Andrei Nevsky",
            "text": "<span class=\"comment-copy\">I don't clearly understand in which direction I've should dig, the goal is make app work with modified code. Libs are dynamic. It's stop work properly with any sort of patching of code except data, which even doesn't run so i think there's some sort of image protection.</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">That could be anything from the simple PE checksum in the optional header to something more aggressive like checking whether the file is validly signed. But it's not even clear what is being patched and what doesn't run at this point. None of us knows what's in front of you. That's the part you need to describe if you want help.</span>",
            "time": null
        },
        {
            "user": "Andrei Nevsky",
            "text": "<span class=\"comment-copy\">Well I've already tried to change checksum in additional header, it doesn't impact anything, same with the windows certs. For now im trying to patch int value \"ADD R8D,0x1499700\" to \"ADD R8D,0x1999700\", it's timer offset in msec - im trying to change from 6 hours to 7.5, the point is that code doesn't even execute so that why im focusing on the runtime protection now. There is a mess of code on initialization steps and figuring out what exactly wrong feels insanely difficult for me.</span>",
            "time": null
        },
        {
            "user": "chentiangemalc",
            "text": "<span class=\"comment-copy\">Are you saying it calls CreateWindowExA function, and that fails? Need to understand where it runs to and when it fails what are the errors/exceptions. i.e. if CreateWindowExA fails what does GetLastError return for example. This likely would be very easy to troubleshoot with a TTD trace <a href=\"https://learn.microsoft.com/en-us/windows-hardware/drivers/debugger/time-travel-debugging-overview\" rel=\"nofollow noreferrer\">learn.microsoft.com/en-us/windows-hardware/drivers/debugger/â€¦</a></span>",
            "time": null
        }
    ],
    "answers_data": []
}