{
    "title": "Anti-debug clearing hardware breakpoints",
    "link": "https://reverseengineering.stackexchange.com/questions/23372/anti-debug-clearing-hardware-breakpoints",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>An application I am debugging somehow manages to clear my hardware breakpoints. I am using TitanHide and x64dbg. </p>\n<p>I am observing the following behaviour:</p>\n<ul>\n<li>When placing the first hw breakpoint, it is hit only once - still appears visible in x64dbg but I guess it is disabled in reality and x64dbg doesn't know that.</li>\n<li>When placing another breakpoint, the <strong>first</strong> breakpoint is hit exactly once. </li>\n</ul>\n<p>I am not sure what causes this obscure behaviour, but what I do know is that my hardware breakpoints are not getting hit, so I researched what could possibly clear them. I have come up with:</p>\n<ul>\n<li>ZwSetInformationThread to hide the thread from the debugger.</li>\n<li>SetThreadContext to reset the debug registers .</li>\n<li>Installing a vectored exception handler, cause an exception deliberately, and modify the context from there</li>\n</ul>\n<p>However all 3 methods should be caught by TitanHide, and exceptions should show up in the log of x64dbg (which they don't). Are there any further methods to clear hardware breakpoints?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "790",
    "tags": [
        "windows",
        "anti-debugging",
        "breakpoint"
    ],
    "user": "Whosdatdev",
    "time": "Mar 2, 2020 at 9:12",
    "comments": [
        {
            "user": "Yotamz",
            "text": "<span class=\"comment-copy\">Are you sure that the instruction on which you set the HW breakpoint is actually being executed? The program may detect a HW breakpoint (using GetThreadContext and reading debug registers). The program may then behave differently.</span>",
            "time": null
        },
        {
            "user": "Whosdatdev",
            "text": "<span class=\"comment-copy\">@Yotamz possible, I'll check</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This turned out to be a mixture of hardware breakpoint related bugs in x64dbg (which are fixed by now), and a driver denying access to <strong>some</strong> threads of the target application (meaning the hardware breakpoint could not be set on those). If you encounter this, I suggest updating and checking OpenThread permissions, as x64dbg fails silently here :/</p>\n</div>",
            "votes": "0",
            "user": "Whosdatdev",
            "time": "Jun 3, 2020 at 14:28",
            "is_accepted": true,
            "comments": []
        }
    ]
}