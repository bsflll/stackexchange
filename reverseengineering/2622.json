{
    "title": "What is this assembly code doing with the command line arguments [duplicate]",
    "link": "https://reverseengineering.stackexchange.com/questions/2622/what-is-this-assembly-code-doing-with-the-command-line-arguments",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>This question already exists</b>:\n                                \n                            </div>\n</div>\n</div>\n</div>\n<div class=\"flex--item mb0 mt4\">\n<a dir=\"ltr\" href=\"/questions/2624/what-arguments-is-this-function-called-with\">What arguments is this function called with? [closed]</a>\n</div>\n<div class=\"flex--item mb0 mt8\">Closed <span class=\"relativetime\" title=\"2013-08-22 00:31:11Z\">11 years ago</span>.</div>\n</div>\n</aside>\n</div>\n<p>I know something is happening with the command line arguments but I don't know what. Can someone walk me through this code?</p>\n<pre><code>0x401050    &lt;main&gt;:         push   %ebp\n0x401051    &lt;main+1&gt;:       mov    %esp,%ebp\n0x401053    &lt;main+3&gt;:       sub    $0x8,%esp\n0x401056    &lt;main+6&gt;:       and    $0xfffffff0,%esp\n0x401059    &lt;main+9&gt;:       mov    $0x0,%eax\n0x40105e    &lt;main+14&gt;:      mov    %eax,0xfffffffc(%ebp)\n0x401061    &lt;main+17&gt;:      mov    0xfffffffc(%ebp),%eax\n0x401064    &lt;main+20&gt;:      call   0x4013a0 &lt;_alloca&gt;\n0x401069    &lt;main+25&gt;:      call   0x401430 &lt;__main&gt;\n0x40106e    &lt;main+30&gt;:      mov    $0x0,%edx\n0x401073    &lt;main+35&gt;:      add    0x8(%ebp),%edx\n0x401076    &lt;main+38&gt;:      mov    %edx,%eax\n0x401078    &lt;main+40&gt;:      leave  \n0x401079    &lt;main+41&gt;:      ret \n</code></pre>\n<p>This is IA32 assembly running on linux</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "1k",
    "tags": [
        "assembly",
        "x86"
    ],
    "user": "duder",
    "time": "11 years ago",
    "comments": [
        {
            "user": "perror",
            "text": "<span class=\"comment-copy\">What is the question ?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This code doesn't do anything with command line arguments as far as i can see. </p>\n<p>What it does is setup the stack and align it. And calls _<em>alloca and _</em>_main (if i had to guess, i'd say this is related to c++). Then exits returning 0. This code is very similar to <a href=\"https://en.wikibooks.org/wiki/X86_Assembly/GAS_Syntax#.22hello.s.22_line-by-line\" rel=\"nofollow\">hello.S</a> example on wikibooks, and it has a detailed explanation of what is going on. </p>\n</div>",
            "votes": "2",
            "user": "0xea",
            "time": "Aug 21, 2013 at 9:24",
            "is_accepted": false,
            "comments": []
        }
    ]
}