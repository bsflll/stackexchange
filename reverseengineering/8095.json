{
    "title": "Emulate TP-Link WR841N using Qemu",
    "link": "https://reverseengineering.stackexchange.com/questions/8095/emulate-tp-link-wr841n-using-qemu",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have downloaded a few different versions of the firmware from the TP-Link website. I've been piecing together details on how to achieve this but I'm missing some key points. </p>\n<p>Following instructions from devttys0 and their great blog, used binwalk to unpack the firmware.</p>\n<p>Following some details picked up from this previous question [<a href=\"https://reverseengineering.stackexchange.com/questions/4480/emulate-tp-link-wr740n-with-qemu]\">Emulate TP-LINK WR740N with QEMU</a> I've attempted to bot using the Malta debian kernel.</p>\n<p>The issue I've had with the previous question was that there was never a final example of the arguments supplied to Qemu.</p>\n<pre><code>qemu-system-mips -M malta -kernel '/media/sf__share/vmlinux-2.6.32-5-4kc-malta' -nographic -append \"init=/sbin/init root=/dev/sda console=ttyS0,115200\" -hda 'myFileSystem.img'\n</code></pre>\n<p>as well as (init=/bin/sh):</p>\n<pre><code>qemu-system-mips -M malta -kernel '/media/sf__share/vmlinux-2.6.32-5-4kc-malta' -nographic -append \"init=/bin/sh root=/dev/sda console=ttyS0,115200\" -hda 'myFileSystem.img'\n</code></pre>\n<p>In almost all cases I get:</p>\n<pre><code>Warning: unable to open an initial console.\n</code></pre>\n<p>I'm happy to accept some pointers on what I might be missing?</p>\n<p>My objective is to create an emulated MIPS Linux instance with the rootfs extracted from the firmware image. I then have further plans, but outside the scope of my initial issues.</p>\n</div>",
    "votes": "5",
    "answers": 0,
    "views": "2k",
    "tags": [
        "mips",
        "qemu",
        "emulation"
    ],
    "user": "elgringo",
    "time": "Jan 26, 2015 at 13:11",
    "comments": [],
    "answers_data": []
}