{
    "title": "How learn which functions are called in .so library at Android?",
    "link": "https://reverseengineering.stackexchange.com/questions/32063/how-learn-which-functions-are-called-in-so-library-at-android",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to learn how listen certain .so files. I mean what is the way to know which fuctions are called which body of code executed in shared library at Android? I just wanted mofify stock camera on my Samsung device unlock some fps modes, maybe build my own custom rom and etc</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "429",
    "tags": [
        "android",
        "linux",
        "dynamic-analysis",
        "shared-object",
        "tracing"
    ],
    "user": "Savox Saastuxl",
    "time": "Jul 16, 2023 at 11:53",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Usually when an Android app calls a method that is implemented as native code in a .so you can find those methods in the decompiled DEX code in the APK file. If you for example decompile the APK with Jadx you will find certain Java methods are marked as <code>native</code> and that doe not have a Java method body.</p>\n<p>For each native method there should be a corresponding function in one of the loaded .so files. The common way is to export Java Native (JNI) functions, so loading the .so file in a tool like Ghidra or IDA Pro and check the exported functions list. The JNI methods have a special naming scheme that includes the full package name,  class name, method name. For more details see e.g. <a href=\"https://stackoverflow.com/a/32473938/150978\">this answer</a>.</p>\n<p>For identifying called methods on Java and native level <a href=\"https://frida.re/docs/frida-trace/\" rel=\"nofollow noreferrer\">frida-trace</a> (requires rooted Android device) is a very helpful tool. You can mark certain Java or native methods to be traced. Using wildcards you can mark a large list of methods to be traced. This way you can identify if methods that may sound interesting based on their name are really called when you execute a certain function.</p>\n</div>",
            "votes": "0",
            "user": "Robert",
            "time": "Jul 17, 2023 at 11:53",
            "is_accepted": false,
            "comments": []
        }
    ]
}