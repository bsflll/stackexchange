{
    "title": "Disassemble instruction with a variable as an offset",
    "link": "https://reverseengineering.stackexchange.com/questions/6433/disassemble-instruction-with-a-variable-as-an-offset",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am looking to disassemble an instruction at an address. I know that there are many instructions that can accomplish this such as <code>idc.GetDisasm()</code>, <code>idc.GetDisasmEx()</code>, <code>idaapi.generate_disassembly()</code>, etc.</p>\n<p>When I disassemble a line that has a variable in it, the variable appears in the disassembly. ie <code>38 81 00 38</code> disassembles as <code>addi r4, r1, 0x80+var_48</code> instead of <code>addi r4, r1, 0x38</code>.</p>\n<p>Is there any way to disassemble this in the latter form ?</p>\n</div>",
    "votes": "3",
    "answers": 2,
    "views": "691",
    "tags": [
        "disassembly",
        "idapython"
    ],
    "user": "Bambu",
    "time": "Oct 13, 2014 at 8:23",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You'll have to set the operand type, there are various functions to accomplish that. <a href=\"https://www.hex-rays.com/products/ida/support/idapython_docs/idc-module.html#OpHex\" rel=\"nofollow\">OpHex</a> is most likely what you want to use.</p>\n</div>",
            "votes": "1",
            "user": "Guntram Blohm",
            "time": "Oct 12, 2014 at 20:26",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Bambu",
                    "text": "<span class=\"comment-copy\">Thanks for the feedback. This could work if it is called for each instruction. However, two problems arise with it. A) I would like to restore it to the way it was prior to converting it with OpHex. B) OpHex/OpOff etc.. does not convert the operand of a branch.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>not idapython but idc </p>\n<pre><code>auto i;\n\nfor (  i = MinEA() ; i &lt; MaxEA() ; i = NextHead(i, MaxEA()) )\n{\n    OpHex(i,-1);\n}\n</code></pre>\n<p>take a look here for bit more details</p>\n<p><a href=\"https://stackoverflow.com/questions/23199403/differences-in-ollydbg-and-ida-pro-for-movsx-edx-byte-ptr-especx8-command/23604013#23604013\">Convert [arg8+foo-blah+28] to [ebp+38] </a></p>\n</div>",
            "votes": "1",
            "user": "Community",
            "time": "May 23, 2017 at 12:37",
            "is_accepted": false,
            "comments": []
        }
    ]
}