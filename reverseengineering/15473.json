{
    "title": "Why is IDA call analysis failing?",
    "link": "https://reverseengineering.stackexchange.com/questions/15473/why-is-ida-call-analysis-failing",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to reverse an ELF (C++) binary using IDA v6.95. Decompiler complains that the call analysis is failing. I am attaching the <a href=\"https://www.mediafire.com/?16nrnhnuxo7gz4l\" rel=\"nofollow noreferrer\">IDB database</a>. What can I do to fix the IDB?</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "14k",
    "tags": [
        "ida",
        "decompiler"
    ],
    "user": "sherlock",
    "time": "Jun 3, 2017 at 9:26",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>Call analysis failed at: 08048B19</code> </p>\n<p>The instruction at that location:</p>\n<pre><code>call __ZNSaIcEC1Ev ; std::allocator&lt;char&gt;::allocator(void)\n</code></pre>\n<p>Now decompile this function: </p>\n<pre><code>int __stdcall std::allocator&lt;char&gt;::allocator(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8) {\n    return std::allocator&lt;char&gt;::allocator(a1, a2, a3, a4, a5, a6, a7, a8);\n}\n</code></pre>\n<p>Notice that hexrays has the function signature wrong, it expects too many arguments. After changing it to:</p>\n<pre><code>void __stdcall std__allocator_char___allocator()\n</code></pre>\n<p>The main functon will decompile.</p>\n<p>Note that hexrays doesn't accept the template arguments <code>&lt;char&gt;</code> and namespace specifier <code>std::</code> in a function prototype.\nSince changing the prototype does not rename the function you can replace the function name with any name, as long as ida considers it valid.</p>\n</div>",
            "votes": "2",
            "user": "Willem Hengeveld",
            "time": "Jun 6, 2017 at 6:42",
            "is_accepted": false,
            "comments": [
                {
                    "user": "sherlock",
                    "text": "<span class=\"comment-copy\">Doesn't work for me. Can you please share your IDB?</span>",
                    "time": null
                },
                {
                    "user": "Willem Hengeveld",
                    "text": "<span class=\"comment-copy\">ah, i made a typo: the function signature should be: <code>void __stdcall std__allocator_char___allocator()</code>  without the &lt; and &gt;</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>the <code>IDB database</code> can not open now.</p>\n<p>list my case for other refer:</p>\n<h1>Error case</h1>\n<p>in IDA:</p>\n<ul>\n<li>caller: <code>some_parent_function</code>\n<ul>\n<li>callee: <code>sub_9D6B278</code></li>\n</ul>\n</li>\n</ul>\n<p>in <code>some_parent_function</code>, do <code>F5</code>=<code>decompile</code>, report error:</p>\n<p><code>Decompilation failure: 9D6ADDC: call analysis failed</code></p>\n<p><a href=\"https://i.sstatic.net/mwlS9.jpg\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/mwlS9.jpg\"/></a></p>\n<h1>Error Reason</h1>\n<ul>\n<li><a href=\"https://www.hex-rays.com/products/decompiler/manual/failures.shtml#11\" rel=\"nofollow noreferrer\">call analysis failed</a>\n<blockquote>\n<p>the decompiler could not determine the calling convention and the call parameters.</p>\n</blockquote>\n</li>\n</ul>\n<p>-&gt;</p>\n<ul>\n<li>= decompiled function's parameter number is wrong\n<ul>\n<li>= (probably) decompiled function have too many parameters</li>\n</ul>\n</li>\n</ul>\n<p>-&gt;</p>\n<ul>\n<li>here <code>sub_9D6B278</code>'s decompiled function have too many parameters, which seems is wrong</li>\n</ul>\n<h2><code>sub_9D6B278</code> decompiled pseudocode</h2>\n<pre><code>void __usercall sub_9D6B278(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10, ...)\n{\n  va_list va; // [xsp+50h] [xbp+50h]\n\n  va_start(va, a10);\n  _Block_object_dispose(va, 8);\n}\n</code></pre>\n<h1>Solution</h1>\n<ul>\n<li><a href=\"https://www.hex-rays.com/products/decompiler/manual/failures.shtml#11\" rel=\"nofollow noreferrer\">call analysis failed</a>\n<blockquote>\n<p>If this is a direct non-variadic call, you can fix it by specifying the callee type: just jump to the callee and hit Y to specify the type.</p>\n<p>For variadic functions too it is a good idea to specify the type, but the call analysis could still fail because the decompiler has to find out the actual number of arguments in the call.</p>\n</blockquote>\n</li>\n</ul>\n<p>means:</p>\n<ul>\n<li><code>change decompiled function's type/definition</code>\n<ul>\n<li>== change function to correct number of parameters</li>\n</ul>\n</li>\n</ul>\n<h2>how to know what is the correct number of parameters?</h2>\n<p>you should look inside the error callee function assembly code</p>\n<p>try to understand it real used parameters (and better to understand it internal logic)</p>\n<p>here related assembly code is:</p>\n<h3><code>sub_9D6B278</code> disassembly code</h3>\n<pre><code>__text:0000000009D6B278 ; =============== S U B R O U T I N E =======================================\n__text:0000000009D6B278\n__text:0000000009D6B278\n__text:0000000009D6B278 ; __int64 __fastcall sub_9D6B278(int, char)\n__text:0000000009D6B278 sub_9D6B278       ; CODE XREF: -[NSObject bdp_addObserverForKeyPaths:identifier:options:context:task:]+1D8↑p\n__text:0000000009D6B278                                         ; __text:0000000009D6AF04↑p\n__text:0000000009D6B278\n__text:0000000009D6B278 arg_50          =  0x50\n__text:0000000009D6B278\n__text:0000000009D6B278                 ADD             X0, SP, #arg_50 ; void *\n__text:0000000009D6B27C                 MOV             W1, #8  ; int\n__text:0000000009D6B280                 B               __Block_object_dispose\n__text:0000000009D6B280 ; End of function sub_9D6B278\n</code></pre>\n<p>and can figure out: only two real parameter</p>\n<h2>how to edit/change function type/definition ?</h2>\n<p>so here change function to correct <code>two parameters</code>:</p>\n<p>cursor selected function name -&gt; right click -&gt; Set Type (Y)</p>\n<p><a href=\"https://i.sstatic.net/bbhWY.jpg\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/bbhWY.jpg\"/></a></p>\n<p>change from (too many, wrong number of parameter) :</p>\n<ul>\n<li><code>__int64 __fastcall sub_9D6B278(int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, char)</code>\n<ul>\n<li><a href=\"https://i.sstatic.net/MjqcK.jpg\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/MjqcK.jpg\"/></a></li>\n</ul>\n</li>\n</ul>\n<p>to (correct number of parameter):</p>\n<ul>\n<li><code>__int64 __fastcall sub_9D6B278(int, char)</code>\n<ul>\n<li><a href=\"https://i.sstatic.net/78XwF.jpg\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/78XwF.jpg\"/></a></li>\n<li><a href=\"https://i.sstatic.net/y6hOC.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/y6hOC.png\"/></a></li>\n</ul>\n</li>\n</ul>\n<p>then decompiled is OK:</p>\n<p><a href=\"https://i.sstatic.net/etIcU.jpg\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/etIcU.jpg\"/></a></p>\n</div>",
            "votes": "0",
            "user": "crifan",
            "time": "Jun 23, 2022 at 1:10",
            "is_accepted": false,
            "comments": []
        }
    ]
}