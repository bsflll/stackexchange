{
    "title": "How do the PSHUFLW and PSHUFD instructions work?",
    "link": "https://reverseengineering.stackexchange.com/questions/20338/how-do-the-pshuflw-and-pshufd-instructions-work",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have been trying to figure out exactly what is happening with these instructions and can't make sense of them. I can see that the PSHUFLW instruction acts upon the first 16 bytes of the XMM register but can not figure it out. I have read the decription in the <a href=\"https://www.scss.tcd.ie/~jones/CS4021/41417-319433-012.pdf\" rel=\"noreferrer\">IntelÂ® Architecture Instruction Set Extensions Programming Reference </a> but just can't seem to get it. I am a very visual person so any help would be greatly appreciated. I have run some tests using the code </p>\n<pre><code>xxm0 = 00000000000000000000000000003E2D\nPSHUFLW xmm0, xmm0, N\n</code></pre>\n<p>and have the following results </p>\n<pre><code> N = 0, output = 00000000000000003E2D3E2D3E2D3E2D\n N = 1, output = 00000000000000003E2D3E2D3E2D0000\n N = 2, output = 00000000000000003E2D3E2D3E2D0000\n N = 3, output = 00000000000000003E2D3E2D3E2D0000\n N = 4, output = 00000000000000003E2D3E2D00003E2D\n N = 5, output = 00000000000000003E2D3E2D00000000\n N = 6, output = 00000000000000003E2D3E2D00000000\n N = 7, output = 00000000000000003E2D3E2D00000000\n N = 8, output = 00000000000000003E2D3E2D00003E2D\n N = 9, output = 00000000000000003E2D3E2D00000000\n N = 10, output = 00000000000000003E2D00003E2D3E2D\n N = 11, output = 00000000000000003E2D00003E2D0000\n N = 12, output = 00000000000000003E2D00003E2D0000\n N = 13, output = 00000000000000003E2D00003E2D0000\n N = 14, output = 00000000000000003E2D000000003E2D\n N = 15, output = 00000000000000003E2D000000000000\n N = 16, output = 00000000000000003E2D000000000000\n N = 17, output = 00000000000000003E2D000000000000\n N = 18, output = 00000000000000003E2D000000003E2D\n N = 19, output = 00000000000000003E2D000000000000\n N = 20, output = 00000000000000003E2D00003E2D3E2D\n</code></pre>\n<p>I would like to know how these instructions work, and maybe a visual guide on future instructions similar to this. I have only been reversing for a couple of weeks so I am very fresh. Thanks for any help you can provide.</p>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "3k",
    "tags": [
        "disassembly",
        "x86",
        "register",
        "intel"
    ],
    "user": "Ando",
    "time": "Jan 11, 2019 at 7:33",
    "comments": [
        {
            "user": "Ando",
            "text": "<span class=\"comment-copy\">So I can see a bunch of references, some mention pshuflw but no specific examples. Can you point me in the right direction?</span>",
            "time": null
        },
        {
            "user": "Ian Cook",
            "text": "<span class=\"comment-copy\">you might spot the pattern if you test using xmm0=0xAAAABBBBCCCCDDDD</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The visual story of PSHUFLW is as follows:</p>\n<p><a href=\"https://i.sstatic.net/iGSnL.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/iGSnL.png\"/></a></p>\n<ul>\n<li>I will use <code>Position</code> as same mean as <code>Order</code> here and starts from Zero (Zero-Indexed).</li>\n</ul>\n<p>As you can see it selects words from source based on value of N. The Order/Position of selection will be chosen by 2 bit values of N. for example when N=4, </p>\n<ol>\n<li>According to first bite (2-bits) of N (= 00), it will select <code>word</code> at position/order 0 of source and copies it in Position 0 of destination.</li>\n<li>According to second bite (2-bits) of N (= 01), it will select <code>word</code> at position/order 1 of source and copies it in 1st Position of destination.</li>\n<li>According to third bite (2-bits) of N (= 00), it will select <code>word</code> at position/order 0 of source and copies it in 2nd Position of destination.</li>\n<li>According to fourth bite (2-bits) of N (= 00), it will select <code>word</code> at position/order 0 of source and copies it in 3rd Position of destination.</li>\n</ol>\n<p>Next example when N=17,</p>\n<ol>\n<li>According to first bite (2-bits) of N (= 01), it will select <code>word</code> at position/order 1 of source and copies it in Position 0 of destination.</li>\n<li>According to second bite (2-bits) of N (= 00), it will select <code>word</code> at position/order 0 of source and copies it in 1st Position of destination.</li>\n<li>According to third bite (2-bits) of N (= 01), it will select <code>word</code> at position/order 1 of source and copies it in 2nd Position of destination.</li>\n<li>According to fourth bite (2-bits) of N (= 00), it will select <code>word</code> at position/order 0 of source and copies it in 3rd Position of destination.</li>\n</ol>\n<p>PS: your output for N=17 in above question is wrong! PSHUFD is just same except it will select doublewords from source and copies in destination. so low and high quadword in PSHUFD will be used while in PSHUFLW the low quadword used.</p>\n</div>",
            "votes": "6",
            "user": "arman",
            "time": "Jan 12, 2019 at 21:33",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Ando",
                    "text": "<span class=\"comment-copy\">Thank you so much, it is ridiculously simple now I can see it.</span>",
                    "time": null
                },
                {
                    "user": "Ando",
                    "text": "<span class=\"comment-copy\">The only question I have is, how did it produce the results above? This was calculated in a debugger by changing the values.</span>",
                    "time": null
                },
                {
                    "user": "arman",
                    "text": "<span class=\"comment-copy\">producing results? I can't understand your question!</span>",
                    "time": null
                },
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">@arman : Great explanation, thanks!</span>",
                    "time": null
                }
            ]
        }
    ]
}