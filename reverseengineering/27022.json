{
    "title": "Patching a program in IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/27022/patching-a-program-in-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've opened a simple Hello World program in <code>IDA</code> (Pro 7.5) like that:</p>\n<pre><code>    global  _main\n    extern  _printf\n\n    section .text\n_main:\n    push    message\n    call    _printf\n    add     esp, 4\n    push    message2\n    call    _printf\n    add     esp, 4\n    ret\nmessage:\n    db  'Hello, World 1', 0xD, 0xA, 0 \nmessage2:\n    db  'Hello, World 2', 0xD, 0xA, 0\n</code></pre>\n<p>Now i've made a simple <code>detour</code> - moved the <code>code</code> and <code>data</code> definition to the unused end of the <code>code</code> segment like this:</p>\n<pre><code>str1  db 'Hello, World1',0Dh,0Ah,0\n                                         ; DATA XREF: .text:detour↓o\nstr2  db 'Hello, World2',0Dh,0Ah,0\n                                         ; DATA XREF: .text:00404057↓o\nstr3  db 'Hello, World3',0Dh,0Ah,0\n                                         ; DATA XREF: .text:00404064↓o↓o\n      db    0\n      db    0\n ; ---------------------------------------------------------------------------\n\n detour:                                 ; CODE XREF: .text:_main↑j\n   push    offset str1     ; \"Hello, World 1\\r\\n\"\n   call    _printf\n   add     esp, 4\n   push    offset str2     ; \"Hello, World 2\\r\\n\"\n   call    _printf\n   add     esp, 4\n   push    offset str3     ; \"Hello, World 3\\r\\n\"\n   call    _printf\n   add     esp, 4\n   jmp     go_back\n</code></pre>\n<p>Leaving in the <code>main</code> function only the <code>jmp</code> code like that:</p>\n<pre><code>_main:                                 \n  jmp detour\ngo_back:                              \n  retn\n</code></pre>\n<p>And this yeiled me a problem. The output of the patched program is :</p>\n<pre><code>Hello, World1\n\nHello, World2\n\nHello, World3\n\nABh@@Hello, World2\n\nHello, World3\n\nABh@@Hello, World3\n\nABh@@\n</code></pre>\n<p>Instead just:</p>\n<pre><code>Hello, World 1\nHello, World 2\nHello, World 3\n</code></pre>\n<p>It turned out that the patching process just changed the last byte of each string from \"00\" to \"0A\"(line feed char)!. There is the screenshot of the <code>data</code> section from IDA debugger running:\n<a href=\"https://i.sstatic.net/7Jtfn.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/7Jtfn.png\"/></a></p>\n<p>And the the <code>code</code> section:\n<a href=\"https://i.sstatic.net/yYDsz.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/yYDsz.png\"/></a>\nThat's the reason of that fucked up output. But the question is WHY does it happened?</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "552",
    "tags": [
        "ida",
        "disassembly",
        "windows"
    ],
    "user": "Daros911",
    "time": "Feb 16, 2021 at 8:59",
    "comments": [
        {
            "user": "sudhackar",
            "text": "<span class=\"comment-copy\">How did you patch the binary? Can you elaborate more?</span>",
            "time": null
        },
        {
            "user": "Daros911",
            "text": "<span class=\"comment-copy\">@sudhackar Just the standard way : first selected <b>Patch program-&gt;Change byte...</b> and next <b>Patch program-&gt;Apply patches to input file...</b></span>",
            "time": null
        },
        {
            "user": "Daros911",
            "text": "<span class=\"comment-copy\">@sudhackar Can You please answer my question?</span>",
            "time": null
        }
    ],
    "answers_data": []
}