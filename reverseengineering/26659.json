{
    "title": "Making a Android Toast via JNI, i.e. calling Java methods via JNI",
    "link": "https://reverseengineering.stackexchange.com/questions/26659/making-a-android-toast-via-jni-i-e-calling-java-methods-via-jni",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Concerning the outputting of an <code>Toast</code>, I found that there are some ways to make a <code>Toast</code>, that invoke calling a <code>FindClass</code> on <code>JNIEnv</code> object with the <code>android/widget/Toast</code> parameter, but I found no references in the code doing this.</p>\n<p>I found this code <a href=\"https://github.com/demuyan/AndroidNDKbook/blob/master/ch02/JniToast/jni/jnitoast.c\" rel=\"nofollow noreferrer\">here</a></p>\n<pre><code>jclass toast = (*env)-&gt;FindClass(env, \"android/widget/Toast\");\n// ToastクラスのmakeTextスタティックメソッドのメソッドIDを取得する\njmethodID methodMakeText = (*env)-&gt;GetStaticMethodID(env, toast, \"makeText\", \"(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;\");\nif(methodMakeText == NULL){\nLOGE(\"toast.makeText not Found\");\n\nreturn;\n</code></pre>\n<p>But when using the <code>strings</code> tool on the C++ compiled files used in the app I'm decompiling, I haven't found any references to a <code>Toast</code>.</p>\n<p>What other ways there are to call methods in a Java library, e.g. make a Toast?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "821",
    "tags": [
        "c++",
        "android",
        "java"
    ],
    "user": "Timotej Leginus",
    "time": "Dec 29, 2020 at 16:24",
    "comments": [
        {
            "user": "sudhackar",
            "text": "<span class=\"comment-copy\">Does your app have java components?</span>",
            "time": null
        },
        {
            "user": "Timotej Leginus",
            "text": "<span class=\"comment-copy\">@sudhackar , yes</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can try:</p>\n<pre><code>jclass toast = (*env)-&gt;FindClass(env, \"android/widget/Toast\"); // get the class you need (need to be already loaded otherwise you have to define it first)\njmethodID methodToCall = env-&gt;GetStaticMethodID(toast, \"makeText\", \"(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;\"); // get your desidered method\n\nenv-&gt;CallStaticVoidMethod(toast, methodToCall, &lt;your parameters here&gt;); // ask the jvm to call your method (assuming its static)\n</code></pre>\n</div>",
            "votes": "2",
            "user": "Princekin",
            "time": "Jan 22, 2021 at 4:00",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Timotej Leginus",
                    "text": "<span class=\"comment-copy\">I just posted this code in my answer.. Thank you for your contribution though. Helping me explore options beyond this one and its implementations would've helped me more.</span>",
                    "time": null
                },
                {
                    "user": "Princekin",
                    "text": "<span class=\"comment-copy\">well i actually dont think there are more options.. atleast i never seen something different to call a method via jni</span>",
                    "time": null
                },
                {
                    "user": "Timotej Leginus",
                    "text": "<span class=\"comment-copy\">That is the point. The app is displaying the toast in a very obscure manner</span>",
                    "time": null
                },
                {
                    "user": "Princekin",
                    "text": "<span class=\"comment-copy\">Maybe reflections via jni?</span>",
                    "time": null
                }
            ]
        }
    ]
}