{
    "title": "Why dont use memcpy? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/20301/why-dont-use-memcpy",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>Closed.</b> This question is <a href=\"/help/closed-questions\">off-topic</a>. It is not currently accepting answers.\n                                \n                            </div>\n</div>\n</div>\n</div>\n</div>\n<hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n<div class=\"fw-nowrap fc-black-500\">\n<div class=\"d-flex fd-column lh-md\">\n<div class=\"mb0 d-flex\">\n<div class=\"flex--item mr8\">\n<svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\"><path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\"></path></svg>\n</div>\n<p> This question does not appear to be about reverse engineering within the scope defined in the <a href=\"https://reverseengineering.stackexchange.com/help/on-topic\">help center</a>.</p>\n</div>\n<div class=\"mb0 mt6 d-flex\">\n<p class=\"ml24 pl2\">Closed <span class=\"relativetime\" title=\"2019-01-08 02:05:08Z\">6 years ago</span>.</p>\n</div>\n<div class=\"ml24 pl2\">\n</div>\n</div>\n</div>\n<div class=\"mt24 d-flex gsx gs8\">\n<a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/20301/edit\">\n                        Improve this question\n                    </a>\n</div>\n</aside>\n</div>\n<p>Why using <code>memcpy</code> can cause to stack overFlow?</p>\n<p><code>memcpy</code> get the number of bytes to copy, so what is the problem , and how <code>memcpy_s</code> fix it?</p>\n</div>",
    "votes": "-2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "c",
        "buffer-overflow",
        "stack"
    ],
    "user": "Keystone",
    "time": "6 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>A buffer overflow happens when a program tries to write too much data into a buffer, or other data structure.  The extra data \"overflows\" the buffer writes over the data structure immediately following the buffer in memory.  memcpy allows you to specify the number of bytes to copy, but if that value varies, such as when it is dependent on user input, then your destination buffer might not be big enough. \n The <a href=\"https://en.wikipedia.org/wiki/Buffer_overflow\" rel=\"nofollow noreferrer\">wikipedia page</a> has a good example.</p>\n<p><a href=\"https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/memcpy-s-wmemcpy-s\" rel=\"nofollow noreferrer\">memcpy_s</a> has an additional parameter, where you can specify the destination buffer size.  This allows memcpy_s to perform additional checks on the input, and error if the number of bytes to copy is greater than the destination buffer size.</p>\n<p>For a good introduction to exploit analysis, see <a href=\"http://opensecuritytraining.info/Exploits1.html\" rel=\"nofollow noreferrer\">this course material and videos</a>.  Full disclosure: I am a contributor to that website, though not to that particular class material.</p>\n</div>",
            "votes": "1",
            "user": "knowmalware",
            "time": "Jan 8, 2019 at 0:08",
            "is_accepted": false,
            "comments": []
        }
    ]
}