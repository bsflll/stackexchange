{
    "title": "Interrupt interception",
    "link": "https://reverseengineering.stackexchange.com/questions/3185/interrupt-interception",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm currently reading <a href=\"http://vxheaven.org/vx.php?fid=17\" rel=\"nofollow\">40hex magazine</a> regarding virus writing in the early 90's. They talk a lot there about <code>interrupt intercepting</code> Which is something security guys from anti viruses company will try to do, and should be prevented (from virus writing point of view)</p>\n<p>What is exactly <code>interrupt intercepting ?</code></p>\n</div>",
    "votes": "3",
    "answers": 3,
    "views": "1k",
    "tags": [
        "dos",
        "malware"
    ],
    "user": "Mellowcandle",
    "time": "Dec 14, 2013 at 9:27",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>By intercepting or hooking interrupts in DOS you can make the system behave differently whenever an interrupt is triggered. And there are many interrupts used in x86 architecture, some are triggered by hardware (such as clock, keyboard, divide overflow/divide by zero), some are BIOS services that can be called from software and some are OS services or other services that can also be called from software. All interrupts are equally easy to hook. All you need is <code>cli</code>, replace the interrupt vector with your own one, <code>sti</code>, or use some BIOS or DOS service.</p>\n<p>By hooking an interrupt you can first do your thing in your own interrupt handler and then forward the original parameters to the original interrupt handler, but you can also replace entire interrupts or specific services of chosen interrupts (without forwarding). TSRs (terminate &amp; stay resident) programs are all based on hooking interrupts (with or without interrupt forwarding). For example many DOS debuggers are TSRs, and probably many viruses too.</p>\n<p>For example it's possible to write an interrupt handler for interrupt 0x13 that disables all hard drive formatting functions of BIOS interrupt 0x13, by first checking the parameters for <code>int 0x13</code>, and if the function (in <code>ah</code>) is 5, 6, 7, 0x1a ... then set the desired return values in registers and flags as you like , then <code>iret</code>, otherwise <code>jmp</code> to the original interrupt handler. You can write a TSR debugger that hooks the chosen interrupts and presents the debugger screen whenever a chosen interrupt is triggered. You can adjust the system timer interrupt frequency and then hook the timer interrupt to use it to play music eg. with AdLib or SoundBlaster. You can write a TSR keylogger, a TSR virus scanner or a TSR hard drive defragmenter. You can make the computer play \"Jingle Bells\" through PC speaker or sound card whenever the user presses Enter and it's December. The possibilities are limited only by the hardware available and the skill of the programmer.</p>\n</div>",
            "votes": "5",
            "user": "nrz",
            "time": "Dec 16, 2013 at 12:27",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>What is exactly interrupt intercepting ?</p>\n</blockquote>\n<p>Install your own interrupt vector. When somebody triggers it, you do whatever you want, and then forward the original call to the original interrupt handler.</p>\n</div>",
            "votes": "4",
            "user": "Devolus",
            "time": "Dec 14, 2013 at 10:17",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Mellowcandle",
                    "text": "<span class=\"comment-copy\">Can you elaborate why one would want to intercept the interrupts ?</span>",
                    "time": null
                },
                {
                    "user": "Devolus",
                    "text": "<span class=\"comment-copy\">To replace a call with your own version. If you look at Ralph Browns Interrupt List you can see a lot of interrupts which replace original functions. For a virus, obviously this might be some hostile functionality, but of course this doesn't need to be thae case.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If you wish to see an interrupt intercepting download kgb.zip. This was authored by:</p>\n<p>Petr Horak\nTechnical University of Prague\nFaculty of Nuclear Science and Physical Engineering\nPrague Czechoslovakia\nBITNET: HORAC@CSEARN</p>\n<p>It intercepts only a FEW interrupts. BUT, a very important but, IT COMES WITH SOURCE CODE OF HOW TO INTERCEPT THE INTERRUPTS!!</p>\n<p>Should you decide to work on 'older' programs, this is a tool worthwhile studying. And working on. And expanding.</p>\n<p>-- somewhere in time ---</p>\n</div>",
            "votes": "-3",
            "user": "Unknown",
            "time": "Dec 14, 2013 at 13:15",
            "is_accepted": false,
            "comments": [
                {
                    "user": "jvoisin",
                    "text": "<span class=\"comment-copy\">You should use less capslock and more links instead.</span>",
                    "time": null
                }
            ]
        }
    ]
}