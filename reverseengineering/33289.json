{
    "title": "Use frida to hook method that signs JWTs in Android app",
    "link": "https://reverseengineering.stackexchange.com/questions/33289/use-frida-to-hook-method-that-signs-jwts-in-android-app",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have an app that signs the JWTs going to the server. The JWTs contain a timestamp and are created dynamically. So they need to be signed by the app.\nThe app is a flutter app and according to <code>pubspec.yaml</code> the library <code>jaguar_awt</code> is used.\nI already have set up frida to bypass the certificate pinning so i was wondering if it's possible to hook to the methods that are used by jaguar_jwt and find out the secret that's being used to sign each jwt.\nI'm fairly new to the entire topic of reverse engineering. Any help is appreciated!</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "25",
    "tags": [
        "android",
        "frida"
    ],
    "user": "tzippy",
    "time": "Oct 27, 2024 at 14:00",
    "comments": [
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">Load jaguar_awt in a tool like Ghidra/IDA and check what functions it exports. If the functions are named you may find an interesting one there. As you are aiming for a function that creates signatures I would start by identifying which signature algo is used and where the implementation is that is used by the app. If the signing (RSA, ECDSA, ..)  is included in the .so files you can only hope that it has a function name. You can try e.g. <code>frida-trace</code> and hook standard c functions with a certain function name pattern (<code>-i</code> parameter) that may be helpful.</span>",
            "time": null
        }
    ],
    "answers_data": []
}