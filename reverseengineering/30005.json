{
    "title": "inspecting the .hex file generated by gpasm",
    "link": "https://reverseengineering.stackexchange.com/questions/30005/inspecting-the-hex-file-generated-by-gpasm",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>To answer my own question <a href=\"https://stackoverflow.com/q/71024004/4999991\">here</a>, I wrote a small sample program, <code>example.asm</code>:</p>\n<pre><code>var_1 equ H'0001'\n\n    constant var_2=H'0002'\n\n#define var_3 H'0003'\n\ncblock H'0004'\n    var_4\nendc\n\n    END\n</code></pre>\n<p>and compiled it with gpasm using the instructions <a href=\"https://stackoverflow.com/a/68140917/4999991\">here</a>, <code>Makefile</code></p>\n<pre><code>all: example.asm    \n    gpasm -p p10f200 example.asm \n\nclean:\n    rm -f *.hex *.lst *.cod *.asm~ \n</code></pre>\n<p>Now inspecting the <code>example.hex</code> file with <code>hexdump -C example.hex</code>, I get:</p>\n<pre>\n00000000  3a 30 32 30 30 30 30 30  34 30 30 30 30 46 41 0a  |:020000040000FA.|\n00000010  3a 30 30 30 30 30 30 30  31 46 46 0a              |:00000001FF.|\n0000001c\n</pre>\n<p>which I have no clue how to interpret, and the <code>objdump -d example.hex</code>, throws this error:</p>\n<pre>\nexample.hex:     file format ihex\n\nobjdump: can't disassemble for architecture UNKNOWN!\n</pre>\n<p>eventually I want to know what are the differences between the above four different methods of defining a constant and compare their performance and memory efficiency.</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "157",
    "tags": [
        "disassembly",
        "objdump"
    ],
    "user": "Foad",
    "time": "Feb 7, 2022 at 22:14",
    "comments": [
        {
            "user": "Peter Cordes",
            "text": "<span class=\"comment-copy\">Isn't <code>.hex</code> already a text file?  Looks like you're hex-dumping an ASCII hex dump, not a <code>.bin</code></span>",
            "time": null
        },
        {
            "user": "Foad",
            "text": "<span class=\"comment-copy\">Dear @PeterCordes , My apologies. I am absolutely ignorant about the topic. My final goal is to compare the compiled version of the above four syntax and see the differences.  Where did I go wrong, and how should I do that instead?</span>",
            "time": null
        },
        {
            "user": "Peter Cordes",
            "text": "<span class=\"comment-copy\">They're text files, so <code>diff -u foo1.hex foo2.hex</code>.  And/or just look at them with a text editor you know how to use, or a GUI diff tool like <code>meld</code>.  Of course, you don't use any of the constants, so like we explained in comments on <a href=\"https://stackoverflow.com/questions/71024004/what-are-the-differences-between-different-ways-to-define-a-constant-from-perfor\">your SO question</a>, no part of the assemblers output corresponds to them at all; your output is the same as for an empty file.  And if you did use them, they'd all be equivalent (or would be if you'd used the same numbers)</span>",
            "time": null
        },
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">you are defining not using there will be no assembly generated for defines and no efficiency calculations can be done you need to burn cycles for calculating efficiency performance , etc</span>",
            "time": null
        },
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">there seems to be a gpdasm available as per the doc link you posted which is capable of taking the hex file and disassemble it why not try using it instead of hexdump or objdump ?</span>",
            "time": null
        }
    ],
    "answers_data": []
}