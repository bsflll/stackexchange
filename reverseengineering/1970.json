{
    "title": "Sniffing TCP traffic for specific process using Wireshark",
    "link": "https://reverseengineering.stackexchange.com/questions/1970/sniffing-tcp-traffic-for-specific-process-using-wireshark",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Is it possible to sniff TCP traffic for a specific process using Wireshark, even through a plugin to filter TCP traffic based on process ID?</p>\n<p>I'm working on Windows 7, but I would like to hear about solution for Linux as well.</p>\n</div>",
    "votes": "27",
    "answers": 6,
    "views": "63k",
    "tags": [
        "sniffing",
        "wireshark"
    ],
    "user": "Mellowcandle",
    "time": "May 17, 2014 at 6:48",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\"><code>strace</code>, see <a href=\"http://askubuntu.com/a/12465/11316\">this answer over on AskUbuntu</a> and no, if you limit your question to be specific to WireShark I think there is no such thing. On Windows you could use the Network Monitor, a sniffer created by MS themselves. Plus there is an experimental build for Windows, <a href=\"http://www.wireshark.org/lists/wireshark-dev/201212/msg00069.html\" rel=\"nofollow noreferrer\">see this mailing list entry</a>.</span>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">Wireshark works on the network interface level, it can't know which process has sent a packet.</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">@IgorSkochinsky: being a KM driver developer I can tell you that at least the information would be available. But then, <code>libpcap</code> doesn't only have a Windows implementation and I think this limitation may be owed to the cross-platform nature of the library.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Process Attribution In Network Traffic (PAINT)/Wireshark from DigitalOperatives might be what you're looking for. It's based on Wireshark 1.6.5, and it works with Windows Vista and above. It <a href=\"http://www.digitaloperatives.com/paint/index.html\" rel=\"noreferrer\">has been released to the public</a> in December 2012 for research purposes, and I've been using it since then. Not only does it work - you can filter the traffic through the columns - but it's quite fast.</p>\n<p>The blog post <em><a href=\"http://digitaloperatives.blogspot.com.br/2012/10/process-attribution-in-network-traffic.html\" rel=\"noreferrer\">Process Attribution In Network Traffic</a></em> from their developers explains it in detail.</p>\n<p><img alt=\"Screenshot, taken from the blog post linked above\" src=\"https://i.sstatic.net/aPPng.png\"/></p>\n</div>",
            "votes": "36",
            "user": "Peter Mortensen",
            "time": "May 17, 2014 at 6:46",
            "is_accepted": true,
            "comments": [
                {
                    "user": "TDKPS",
                    "text": "<span class=\"comment-copy\">Ooops, my bad. Thought I had added it. <a href=\"http://www.digitaloperatives.com/paint/index.html\" rel=\"nofollow noreferrer\">Link</a> It appears I can't add more than two links yet.</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">alright, fixed that for you. Hope it's fine this way.</span>",
                    "time": null
                },
                {
                    "user": "Hayden Thring",
                    "text": "<span class=\"comment-copy\">2nd link is broken</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Well, if you're willing to not use Wireshark, you can do this out of the box with <a href=\"http://www.microsoft.com/en-us/download/details.aspx?id=4865\" rel=\"noreferrer\">Microsoft Network Monitor</a>.</p>\n<p>And the even better news is that on Windows 7 (or Win2008 R2) and newer, you can start/stop captures from the command line without installing anything (you can even do it remotely).</p>\n<p><a href=\"https://web.archive.org/web/20151121120936/http://blogs.msdn.com:80/b/canberrapfe/archive/2012/03/31/capture-a-network-trace-without-installing-anything-works-for-shutdown-and-restart-too.aspx\" rel=\"noreferrer\">This MSDN blog post explains the entire (simple) process.</a></p>\n<p><img alt=\"enter image description here\" src=\"https://i.sstatic.net/nEUQ6.jpg\"/></p>\n<blockquote>\n<p>The short version:</p>\n<ol>\n<li>Open an elevated command prompt and run: \"netsh trace start persistent=yes capture=yes tracefile=c:\\temp\\nettrace-boot.etl\" (make\nsure you have a \\temp directory or choose another location).</li>\n<li>Reproduce the issue or do a reboot if you are tracing a slow boot scenario.</li>\n<li>Open an elevated command prompt and run: \"netsh trace stop\"   Your trace will be stored in c:\\temp\\nettrace-boot.el or where ever\nyou saved it. You can view the trace on another machine using netmon.</li>\n</ol>\n</blockquote>\n</div>",
            "votes": "21",
            "user": "Glorfindel",
            "time": "Jul 26, 2021 at 9:17",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Arbitrary packets are typically not associated with a process. For established TCP sockets, this information could potentially be looked up on-the-fly, but there is no way to express a capture filter to limit filtering to a single process.</p>\n<p>Some of the options are:</p>\n<ul>\n<li>If you know that an application contacts certain IP addresses or ports, you could specify a capture filter such as <code>udp port 53</code> or <code>host example.com</code>.</li>\n<li>Run a program in a virtual machine (VM) and capture traffic from within the VM, or from the bridge attached to the outside of the VM.</li>\n<li>On Linux, create an isolated network namespace and use a virtual Ethernet (veth) pair to connect the new network namespace with the main network namespace. Capture from either end of the veth interface and start your process within the network namespace.</li>\n</ul>\n<p>For the latter approach, I wrote some scripts to automate it, it can be found at <a href=\"https://github.com/Lekensteyn/netns\" rel=\"noreferrer\">https://github.com/Lekensteyn/netns</a>. It was precisely designed for this purpose, create a network capture from a single process (and its children) without leaking other traffic.</p>\n<p>Various other approaches such as using eBPF and custom dissectors to add process information, as well as potential approaches for Windows and macOS can be found in these issues on the Wireshark issue tracker:</p>\n<ul>\n<li><a href=\"https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=16194\" rel=\"noreferrer\">Bug 16194 - Allow us to filter traffic by sending or receiving process</a></li>\n<li><a href=\"https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=1184\" rel=\"noreferrer\">Bug 1184 - *Shark should support associating TCP and UDP packets with processes</a></li>\n</ul>\n</div>",
            "votes": "6",
            "user": "Lekensteyn",
            "time": "Apr 10, 2020 at 15:58",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>An alternative suggestion to Wireshark as of ~2018, the current Microsoft-developed solution that has superseded <em>Microsoft Network Monitor</em> is <a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=44226\" rel=\"nofollow noreferrer\">Microsoft Message Analyzer</a>.</p>\n<p>The latest build of Version 1.4 as of this post is published <strong>October 28, 2016</strong>, and the <a href=\"https://blogs.technet.microsoft.com/messageanalyzer/\" rel=\"nofollow noreferrer\">Message Analyzer TechNet Blog</a> has gone mysteriously radio silent as of ~September 2016 after regular postings before then.</p>\n<p><strong>Update:</strong> The Message Analyzer was retired late 2019.</p>\n</div>",
            "votes": "3",
            "user": "gcode",
            "time": "Feb 20, 2021 at 20:14",
            "is_accepted": false,
            "comments": [
                {
                    "user": "dsasmblr",
                    "text": "<span class=\"comment-copy\">The link to the download page for Microsoft Messenger Analyzer no longer exists. Accordingly, here are the manual download links for both the 32-bit and 64-bit versions. 32-bit: <a href=\"https://download.microsoft.com/download/2/8/3/283DE38A-5164-49DB-9883-9D1CC432174D/MessageAnalyzer.msi\" rel=\"nofollow noreferrer\">download.microsoft.com/download/2/8/3/…</a> 64-bit: <a href=\"https://download.microsoft.com/download/2/8/3/283DE38A-5164-49DB-9883-9D1CC432174D/MessageAnalyzer64.msi\" rel=\"nofollow noreferrer\">download.microsoft.com/download/2/8/3/…</a> Known Issues in v1.4: <a href=\"https://download.microsoft.com/download/2/8/3/283DE38A-5164-49DB-9883-9D1CC432174D/Microsoft%20Message%20Analyzer%20v1.4%20Known%20Issues.docx\" rel=\"nofollow noreferrer\">download.microsoft.com/download/2/8/3/…</a></span>",
                    "time": null
                },
                {
                    "user": "gcode",
                    "text": "<span class=\"comment-copy\">@dsasmblr Could you be more specific about what link isn't working? The ones I posted are still working.</span>",
                    "time": null
                },
                {
                    "user": "dsasmblr",
                    "text": "<span class=\"comment-copy\">Huh. The first link you have wasn't working initially (it is now, though). Even when I Googled the name of the application and tried clicking on the link from the search results, it took me to a 404 page. MS might've been updating something at that moment. I nabbed the download links from a cached version of the page.</span>",
                    "time": null
                },
                {
                    "user": "toster-cx",
                    "text": "<span class=\"comment-copy\">&gt; Microsoft Message Analyzer (MMA) is being retired and its download packages removed from microsoft.com sites on November 25 2019. Sad...</span>",
                    "time": null
                },
                {
                    "user": "gcode",
                    "text": "<span class=\"comment-copy\">@toster-cx Updated my answer, thank you for mentioning it. Sorry about that :(</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>On Mac</p>\n<pre><code>sudo unbuffer tshark -lni utun1 2&gt;/dev/null |unbuffer -p grep TCP |tee /dev/tty | unbuffer -p awk -v ip=`ifconfig utun1 |grep inet |awk '{print $2}'` '{if($3==ip){print $8}else{print $10}}'  |unbuffer -p grep -owE \"[0-9]{1,5}\" |xargs  -I {} sh -c  'G=$(echo {}|tr -d \"\\r\"); sudo lsof -i TCP -OPn -o | grep $G'\n</code></pre>\n<p>Change <code>lsof -i TCP -OPn -o</code> with <code>netstat -aptun</code> for linux</p>\n</div>",
            "votes": "1",
            "user": "marcobazzani",
            "time": "Apr 5, 2020 at 19:50",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The best option for Windows that I have found in 2023 is using WinShark, which is not that well known:</p>\n<p><a href=\"https://github.com/airbus-cert/Winshark\" rel=\"nofollow noreferrer\">https://github.com/airbus-cert/Winshark</a></p>\n<p>It uses ETW to capture PID related to each packet, you just have to use something like <code>winshark.header.ProcessId == 1234</code>.</p>\n<p><a href=\"https://i.sstatic.net/OoHJa.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/OoHJa.png\"/></a></p>\n<p>Installing it is also very straightforward which is explained in their github.</p>\n</div>",
            "votes": "0",
            "user": "OneAndOnly",
            "time": "Oct 13, 2023 at 15:19",
            "is_accepted": false,
            "comments": []
        }
    ]
}