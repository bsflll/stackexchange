{
    "title": "Extract driver from PE [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/5915/extract-driver-from-pe",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>Closed</b>. This question needs <a href=\"/help/closed-questions\">details or clarity</a>. It is not currently accepting answers.\n                                \n                            </div>\n</div>\n</div>\n</div>\n</div>\n<hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n<div class=\"fw-nowrap fc-black-500\">\n<div class=\"d-flex fd-column lh-md\">\n<div class=\"mb0 d-flex\">\n<div class=\"flex--item mr8\">\n<svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\"><path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\"></path></svg>\n</div>\n<p><b>Want to improve this question?</b> Add details and clarify the problem by <a href=\"/posts/5915/edit\">editing this post</a>.</p>\n</div>\n<div class=\"mb0 mt6 d-flex\">\n<p class=\"ml24 pl2\">Closed <span class=\"relativetime\" title=\"2014-07-23 19:09:47Z\">10 years ago</span>.</p>\n</div>\n<div class=\"ml24 pl2\">\n</div>\n</div>\n</div>\n<div class=\"mt24 d-flex gsx gs8\">\n<a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/5915/edit\">\n                        Improve this question\n                    </a>\n</div>\n</aside>\n</div>\n<p>My exact question sounds like: \nAre there any tools for automated resources extraction such as driver or executable to the ready-to-go <code>.sys</code> or <code>.exe</code>/<code>.msi</code> ?</p>\n<p>I googled several ways, but they haven't solved my problem.</p>\n<ul>\n<li><strong><a href=\"http://hp.vector.co.jp/authors/VA003525/emysoft.htm#6\" rel=\"nofollow\">Exescope</a></strong> -- spoilt the output binary</li>\n<li><strong>7zip</strong> -- produced some rubbish(i.e. I can not figure out how to use it to achieve the goal)</li>\n<li><strong><a href=\"http://www.legroom.net/software/uniextract\" rel=\"nofollow\">Universal Extractor</a></strong> -- same as 7zip</li>\n</ul>\n<p>Any tips will be appreciated.</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "1k",
    "tags": [
        "binary-analysis",
        "pe"
    ],
    "user": "see ya",
    "time": "10 years ago",
    "comments": [
        {
            "user": "Paul",
            "text": "<span class=\"comment-copy\"><a href=\"http://www.angusj.com/resourcehacker/\" rel=\"nofollow noreferrer\">angusj.com/resourcehacker</a></span>",
            "time": null
        },
        {
            "user": "see ya",
            "text": "<span class=\"comment-copy\">@Paul, thank you. Output is sufficent for draft disassembly, but a lot of resources in produced file seems to be cropped.</span>",
            "time": null
        },
        {
            "user": "Paul",
            "text": "<span class=\"comment-copy\">ResourceHacker reads from the RAT (Resource Address Table). So, any PEs you found that have self extracting PE which doesn't reside in the RAT (Excluding talking about obfuscated PEs) will likely to reside in the .data section. I don't know of any tools to automate searching PEs within .data section. This maybe off topic as it's not automated but you could do it yourself by doing doing signature scan on PE or DOS header. Here's a website for signatures within the PE: <a href=\"http://marcoramilli.blogspot.co.uk/2010/12/windows-pe-header.html\" rel=\"nofollow noreferrer\">marcoramilli.blogspot.co.uk/2010/12/windows-pe-header.html</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There is already a ready made tool which scans for embedded PE within another PE. \nDownload <a href=\"http://exeinfo.atwebpages.com/\" rel=\"nofollow\"><strong>Exeinfo PE</strong></a> and use the ripper option. It will automatically scan and dump any embedded PE within the master file.</p>\n<p>However, obviously, the embedded PE should not be compressed or encrypted in any way.</p>\n</div>",
            "votes": "1",
            "user": "0xec",
            "time": "Jul 22, 2014 at 15:44",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>pe-carv.py is script can be used to carve out portable executable\nfiles from a data stream.</p>\n</blockquote>\n<p><a href=\"http://hooked-on-mnemonics.blogspot.com/2013/01/pe-carvpy.html\" rel=\"nofollow noreferrer\">http://hooked-on-mnemonics.blogspot.com/2013/01/pe-carvpy.html</a></p>\n<blockquote>\n<p>It relies on pefile by Ero Carrera to parse the portable executable\nfile format and calculate the file size. Since the script relies on\nthe portable executable file format, data that is appended to the end\nof the file (overlay) will not be carved out.</p>\n<p>The algorithm of the\nscript is simple. Search for the strings of the MZ header in a data\nstream, if found read from the address to the end of the file, then\npass the buffer to pefile. If no exceptions are thrown by pefile then\nwe have a valid portable executable file. If an error occurs, search\nfor the next MZ header and then start the process again.</p>\n</blockquote>\n</div>",
            "votes": "0",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": []
        }
    ]
}