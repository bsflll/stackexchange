{
    "title": "Android (4.4+) SSL wireless sniffing without certificate changing",
    "link": "https://reverseengineering.stackexchange.com/questions/11431/android-4-4-ssl-wireless-sniffing-without-certificate-changing",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I wish to analyze the unencrypted data sent of SSL by an Android APK that uses certificate pinning.</p>\n<p>This suspicious APK is used to configure a wireless device.  </p>\n<p>I need to determine two things:  </p>\n<ul>\n<li>First, the WPA key the APK establishes with the device</li>\n<li>Then, the sequence of HTTPS API calls that the APK uses to configure the\ndevice.</li>\n</ul>\n<p>The configuration process is:  </p>\n<ul>\n<li>Download obfuscated APK from company site</li>\n<li>Create account on their servers,  </li>\n<li>The APK then connects to the device SSID with a private WPA key   </li>\n<li>There is a native .so that does some calculation of the key</li>\n</ul>\n<p>The HTTPS sessions to the Internet server use a fixed certificate, attempting to proxy results in a certificate error.</p>\n<p>Ideally I would like to use an emulation environment, and hook the library calls (similar to what \"Droidbox\" appeared to do), but I can't find a more recent version.</p>\n</div>",
    "votes": "3",
    "answers": 3,
    "views": "1k",
    "tags": [
        "android",
        "apk",
        "https-protocol"
    ],
    "user": "Just Asking",
    "time": "Feb 2, 2016 at 15:28",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>iSEC Partner's <a href=\"https://github.com/iSECPartners/Android-SSL-TrustKiller\" rel=\"nofollow\">Android SSL TrustKiller</a> utilizes hooks that Cydia substrate can provide in order to defeat certificate pinning. </p>\n</div>",
            "votes": "2",
            "user": "Coeus",
            "time": "Feb 2, 2016 at 14:03",
            "is_accepted": false,
            "comments": [
                {
                    "user": "43.52.4D.",
                    "text": "<span class=\"comment-copy\">I would be eternally grateful if you shared details about how you got it to work for you? I've tried using Android SSL TrustKiller with Cydia substrate on both the Genymotion virtual machine, and the default Android virtual machine, and I've also tried with different versions of android, and even my physical phone, but I continue to ONLY pick up traffic from apps that don't use Certificate pinning. Please share what setup you are using?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><em>(Copy of an answer I gave on Stack Overflow)</em></p>\n<p>You could try injecting code into the Android app to sniff and dump SSL traffic. Take a look at <a href=\"https://github.com/5alt/ssl_logger\" rel=\"nofollow noreferrer\">https://github.com/5alt/ssl_logger</a> (5alt's fork works with Android). Note that <strong>you need root for this</strong>.</p>\n<p>This works by hooking functions inside OpenSSL so that the raw traffic can be dumped before encryption/after decryption.</p>\n<p>You have to install Frida Android server: <a href=\"https://www.frida.re/docs/android/\" rel=\"nofollow noreferrer\">https://www.frida.re/docs/android/</a></p>\n<ul>\n<li>Connect phone with USB debugging on</li>\n<li>Download <code>frida-server</code> for the right CPU architecture from  <a href=\"https://github.com/frida/frida/releases\" rel=\"nofollow noreferrer\">https://github.com/frida/frida/releases</a>\n<ul>\n<li>To know which CPU architecture your device is using (for getting the right download), you can run <code>getprop ro.product.cpu.abi</code> on the phone.</li>\n</ul></li>\n<li>Push to <code>/data/local/tmp</code> of Android (as root), make executable (<code>chmod 755</code>).</li>\n<li>Run <code>/data/local/tmp/frida-server</code> on the phone.</li>\n<li>On your computer, install <code>frida-tools</code> using <code>pip install --user frida-tools</code>. (Must be Python2, not Python3!)</li>\n<li>List processes to see if everything works, by running <code>frida-ps -U</code> on your computer with the phone connected</li>\n<li>Forward Frida's ports: <code>adb forward tcp:27042 tcp:27042; adb forward tcp:27043 tcp:27043</code></li>\n<li>Get <a href=\"https://github.com/5alt/ssl_logger\" rel=\"nofollow noreferrer\"><code>ssl_logger</code></a> on your computer</li>\n<li>Run <code>python ssl_logger.py -pcap log.pcap -remote com.android.package.name</code> on your computer. (Note that <code>-remote</code> is not explained in the readme, but it's necessary!.)\n\n<ul>\n<li>You can add <code>-verbose</code> to see live traffic output.</li>\n<li>Let it run until you are done, quit with Ctrl+C. You then have a file <code>log.pcap</code> which you can analyze in Wireshark.</li>\n<li>Note: In case you are getting a JavaScript error, you have to edit <code>ssl_logger.py</code> and insert a line with <code>var addresses, SSL_get_fd, SSL_get_session, SSL_SESSION_get_id, getpeername, getsockname;</code> before the line with <code>function initializeGlobals</code>.</li>\n</ul></li>\n</ul>\n<p>Tutorials for using Frida on Android:  <a href=\"https://11x256.github.io/\" rel=\"nofollow noreferrer\">https://11x256.github.io/</a></p>\n</div>",
            "votes": "2",
            "user": "CherryDT",
            "time": "Mar 8, 2020 at 20:49",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>For sniffing https calls I use <a href=\"https://www.charlesproxy.com/\" rel=\"nofollow\">Charles proxy</a>, when you install Charles certifiate on the device you'll be able to sniff whole apk&lt;-&gt;server traffic.</p>\n</div>",
            "votes": "0",
            "user": "perror",
            "time": "Jan 26, 2016 at 12:27",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Cybergibbons",
                    "text": "<span class=\"comment-copy\">The question specifically mentions that the certificate is pinned, so this will not work.</span>",
                    "time": null
                }
            ]
        }
    ]
}