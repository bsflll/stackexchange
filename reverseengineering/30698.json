{
    "title": "Ollydbg - How to find the code of the method OnChange of text field delphi?",
    "link": "https://reverseengineering.stackexchange.com/questions/30698/ollydbg-how-to-find-the-code-of-the-method-onchange-of-text-field-delphi",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have an application programmed with delphi. I want to find the section of code of the function <code>OnChange</code> of a text field. How to find it on Ollydbg?</p>\n<p>Also, how can I set breakpoint on any window show event and analyze the code of it?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "174",
    "tags": [
        "debugging",
        "ollydbg"
    ],
    "user": "devlooper",
    "time": "Jul 25, 2022 at 9:35",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Delphi applications are well known for jump offsets. Since the delphi compiler version is not specified, I will assume it to be Delphi 7.\nI have tested the above scenario by making a demo application having <code>TEdit</code> and <code>TMemo</code> components.(<a href=\"https://codeberg.org/k/delphi7snippets/raw/branch/main/OnChange_Event.pas\" rel=\"nofollow noreferrer\">link to source code</a>)</p>\n<p>For finding the section of code of the function <code>OnChange</code> of a text field, you need to search through the <code>.CODE</code> section of the file in Ollydbg. Though I would suggest you use a disassembler of your choice as it would make searching and analyzing <code>.CODE</code> section easier and faster.</p>\n<p>However, if I don't have another choice except Ollydbg, then I would right click on CPU view <strong>Search for</strong> -&gt; <strong>All referenced text strings</strong> and then search for <code>TForm1</code> assuming the developer has not changed the default name of <code>TForm</code>. Clicking on the occurrence of <code>TForm1</code> would take me to <code>.CODE</code> section where the predefined text, names of components would reside.</p>\n<p>I have attached 2 screenshots for reference:</p>\n<p><a href=\"https://i.sstatic.net/shBxJ.png\" rel=\"nofollow noreferrer\"><img alt=\"Ollydbg screenshot\" src=\"https://i.sstatic.net/shBxJ.png\"/></a></p>\n<br/>\n<p><a href=\"https://i.sstatic.net/vyynE.png\" rel=\"nofollow noreferrer\"><img alt=\"ida screenshot\" src=\"https://i.sstatic.net/vyynE.png\"/></a></p>\n<ul>\n<li>How to set breakpoint on any window show event:</li>\n</ul>\n<p>Right click on Disassembly/CPU view, click on <strong>Search for</strong> -&gt; <strong>All intermodular calls</strong>, you will get the list of windows functions used by the application. Now you can set breakpoints individually or on all the calls of a specific function. for example. If you set a breakpoint on every <code>SendMessageA</code> function call then you can trace the method executed when the <code>TEdit</code> field is changed.</p>\n</div>",
            "votes": "1",
            "user": "Viktor",
            "time": "Jul 25, 2022 at 17:14",
            "is_accepted": false,
            "comments": []
        }
    ]
}