{
    "title": "find CRC algorithm, having some input and output data pairs",
    "link": "https://reverseengineering.stackexchange.com/questions/11213/find-crc-algorithm-having-some-input-and-output-data-pairs",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to discover the algorithm of a lost software, there is an  equipment that requiest some data, and validates the data using the \"KEY\", if you change any parameter of the data then you need a valid KEY.</p>\n<p>The data is composed of 4 int values and the KEY is a HEX of 6-digits.</p>\n<pre><code>param1  param2      param3  param4  KEY\n5669    30/06/2014  187769  960     0xA34108\n5812    31/01/2015  233789  960     0xFAE094\n5812    31/01/2015  233859  960     0x176471\n6437    30/06/2015  368923  10000   0x35E6C2\n6468    31/07/2015  398013  10000   0x404818\n6161    30/09/2015  312581  960     0x9A59BC\n6161    30/09/2015  311298  960     0xEC454C\n6655    31/12/2016  448758  960     0x??????\n</code></pre>\n<p>I suspect the the algorithm is a type of CRC, because in the software you was able to enter something like a seed of 4-digits HEX in a field called CRC:</p>\n<p>By the  KEYs length I think it should be a CRC-24, but the software was using 4-lenght so is not the xor-in nor xor-out of the CRC-24.</p>\n<p>I have tested on Python[crcmod] by bruteforce, all parameters combinations to use as input data and all combinations[<code>0x000000</code>-<code>0xFFFFFF</code>] of possible seed and xor-out for the CRC-24.\nI also tried to find the equation by curve-fitting but no luck, the relation seams unpredictable.</p>\n<p>I know there are many CRC versions: polynomials, hash-tables, etc. Anyone have idea of the the CRC version or algorithm that could be used here?</p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "656",
    "tags": [
        "decryption",
        "deobfuscation",
        "crc"
    ],
    "user": "JohnR",
    "time": "Oct 30, 2015 at 2:53",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "<span class=\"comment-copy\">This is almost impossible, since there are very many ways the date could be stored internally, and since you said \"the equipment validates the key\", it's likely that the key generation is obfuscated on purpose. Can you tell anything about the name of the equipment, or the name of the software? Does the equipment have some kind of downloadable software that one might be able to extract and reverse?</span>",
            "time": null
        }
    ],
    "answers_data": []
}