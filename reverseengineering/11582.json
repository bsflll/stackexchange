{
    "title": "How to reverse engineer dash cam metadata",
    "link": "https://reverseengineering.stackexchange.com/questions/11582/how-to-reverse-engineer-dash-cam-metadata",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to write a video player for clips from Roadhawk dash cams that shows a speedometer and map. I've got the basics covered, it plays the video and sound and extracts the raw metadata from the video.</p>\n<p>This raw metadata includes speed, GPS coordinates and G-force.\nMy first target is a Roadhawk DC2. Roadhawk provides software for doing this already but it is closed source. <a href=\"http://www.roadhawk.co.uk/roadhawk-dc2-software\" rel=\"nofollow\">http://www.roadhawk.co.uk/roadhawk-dc2-software</a>\nI may be able to reverse engineer the software, or even the camera firmware, but I wanted to know if there was a better way.</p>\n<p>The metadata is stored in a subtitle stream in the video file. I've played a one minute file through my software and dumped all the raw data out and have looked at the same file in the existing software to get the decoded values for the first frame. (It's awkward to determine more than the first frame because of the seek resolution in the existing software. This is one reason for writing my own.)</p>\n<p>It all appears to be printable ASCII characters (presumably a constraint of the qt-text subtitle encoding system).</p>\n<p>When looking at all of the data, I can see that in the last third of the data frames, some of the text remains mostly constant. In the last third of the video, the car is waiting at a set of lights, this could be the gforce data. This is as far as I got with my investigation.</p>\n<p>The frame for which I know the decoding looks like this:</p>\n<pre><code>.+;;;D=;-;6;;;;D;JP;4;;;=D;P?;O;;;=D=L;-HO71G&gt;F=;;;JJF:FNJNBDL=R?F3F;;=;PDLR;;F0F;;=DRFJJ?DRJF??;J=LF;;;D;F:*59~\n</code></pre>\n<p>And decodes like this:</p>\n<pre><code>Gforce X = +0.108\n       Y = +0.036\nLat      = 53.99020\nLong     = -1.10792\nSpeed    = 2.0mph\n</code></pre>\n<p>Full list of captured frames is here: <a href=\"http://bitofahack.com/stuff/capture\" rel=\"nofollow\">http://bitofahack.com/stuff/capture</a></p>\n<p>I don't recognise this as any particular method of encoding. It may even have some kind of compression, although I doubt that when I consider that the frames are longer than all the data simply printed as one long string.</p>\n<p>What should I do to further my investigation?</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "861",
    "tags": [
        "file-format",
        "packet"
    ],
    "user": "Lex",
    "time": "Dec 17, 2015 at 20:33",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Looking at the files distributed with the software, the video playing part is done via Flowplayer, embedded in these files:</p>\n<pre><code>assets/webthings/local_me.html\nassets/webthings/local_me_OSM.html\nassets/webthings/local_me_slowmo.html\nassets/webthings/local_me_with_file_select.html\n</code></pre>\n<p>These functions also control updating the UI fields - apparently flowplayer provides the subtitle (caption) data via a callback. Search for a function \"parse_gps_data\". In the function \"zgps_decode\" is the actual decoding routine which is a simple one-to-one substitution.</p>\n<p>Implementation:</p>\n<pre><code>#include &lt;stdio.h&gt;\n\nconst char *decode_table = \"#I8XQWRVNZOYPUTA0B1C2SJ9K.L,M$D3E4F5G6H7\";\n\nvoid decode_in_place(char *s) {\n    while (*s) {\n        *s = decode_table[*s-43];\n        s++;\n    }\n}\n\nint main(void) {\n    char data[] = \".+;;;D=;-;6;;;;D;JP;4;;;=D;P?;O;;;=D=L;-HO71G&gt;F=;;;JJF:FNJNBDL=R?F3F;;=;PDLR;;F0F;;=DRFJJ?DRJF??;J=LF;;;D;F:*59~\";\n    decode_in_place(data);\n    printf(\"%s\", data);\n    return 0;\n}\n// Output: X#000.1080Y0000.0360Z0001.0620G0001.1408$GPRMC,100033,A,5359.4172,N,00106.4700,W,001.7,332.73,220314,000.0,A\n</code></pre>\n<p>The same html files contain a comment on how to interpret this data:</p>\n<pre><code>X0000.0000Y0000.0000Z0000.0000G0000.0000$GPRMC,UTS_Position,Status,Latitude,N/S,Longitude,E/W,Speed,Course_Over,Ground,Date,Magnetic_variation,Checksum~\n</code></pre>\n</div>",
            "votes": "3",
            "user": "booto",
            "time": "Dec 18, 2015 at 3:23",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Lex",
                    "text": "<span class=\"comment-copy\">Aha, that's great. I went down the rabbit hole of decompiling the .swf, I hadn't even considered that this part of the code would be in some html file somewhere. Thanks.</span>",
                    "time": null
                }
            ]
        }
    ]
}