{
    "title": "How to get same compare result of Eax value in all window OS [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/9283/how-to-get-same-compare-result-of-eax-value-in-all-window-os",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>Closed</b>. This question needs <a href=\"/help/closed-questions\">details or clarity</a>. It is not currently accepting answers.\n                                \n                            </div>\n</div>\n</div>\n</div>\n</div>\n<hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n<div class=\"fw-nowrap fc-black-500\">\n<div class=\"d-flex fd-column lh-md\">\n<div class=\"mb0 d-flex\">\n<div class=\"flex--item mr8\">\n<svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\"><path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\"></path></svg>\n</div>\n<p><b>Want to improve this question?</b> Add details and clarify the problem by <a href=\"/posts/9283/edit\">editing this post</a>.</p>\n</div>\n<div class=\"mb0 mt6 d-flex\">\n<p class=\"ml24 pl2\">Closed <span class=\"relativetime\" title=\"2015-07-11 16:56:18Z\">9 years ago</span>.</p>\n</div>\n<div class=\"ml24 pl2\">\n</div>\n</div>\n</div>\n<div class=\"mt24 d-flex gsx gs8\">\n<a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/9283/edit\">\n                        Improve this question\n                    </a>\n</div>\n</aside>\n</div>\n<p>I just started learning assembly. This is how it look in Ollydbg over Windows XpSp3 32Bit:</p>\n<pre><code>MOV EAX,ESP\nADD EAX,0x20\nCMP EAX,0xFFFFF\nJLE SHORT 008A3E51\nCMP EAX,0x12A5B0\nJLE SHORT 008A3E38\nJMP SHORT 008A3E26\n</code></pre>\n<p>In above at <code>CMP EAX, 0x12A5B01</code>, <code>0x12A5B0</code> is <code>Eax</code> value in Register.</p>\n<p>If it is the same then jump or not.</p>\n<p>Now, my problem is that this <code>Eax</code> value differ as per change in different OS.</p>\n<p>Which result in a fail.</p>\n<p>So, what is the correct and Generic way to get the same compare value in all Window OS ?</p>\n</div>",
    "votes": "-2",
    "answers": 1,
    "views": "128",
    "tags": [
        "assembly",
        "ollydbg"
    ],
    "user": "Base 64",
    "time": "9 years ago",
    "comments": [
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">Are you sure the value in eax is not some sort of address? Constants in executable code remain constant, totally and entirely independent of what OS it is running in.</span>",
            "time": null
        },
        {
            "user": "Guntram Blohm",
            "text": "<span class=\"comment-copy\">@Jongware: He's basically comparing the stack pointer with a specific address, which doesn't make sense. I assume he has a function that he wants to patch - do something special if called from a specific point during execution, do \"the normal thing\" everywhere else. \"How can i patch a function in an existing binary so it behaves differently under very specific circumstances\" is probably the question the OP should have asked, but i'm peeking into a crystal ball here.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There is no correct and generic way. Your <code>eax</code> register is initialized from the stack pointer, which may be different dependent on OS, OS Version, ASLR, loaded DLLs+DLL Versions,  localization, and probably a bunch of extra stuff that doesn't come to mind right now. </p>\n<p>You just shouldn't assign any meaning to any specific stack pointer value. You can assume it gets initialized to a value that can hold a certain amount of stack space you can <code>push</code> stuff to, and you can compare the value before and after some <code>push</code> or <code>pop</code> operations, but the absolute value just has no meaning whatsoever. So your question 'how can i get the same value in all Windows OS' doesn't really make sense.</p>\n<p>Of course, you can replace your <code>mov eax, esp</code> with <code>mov eax, 123456h</code> or <code>xor eax, eax</code>, and you'll have the same value guaranteed on all versions of Windows. But while this is technically an answer to your question, it's quite probably quite useless as well.</p>\n</div>",
            "votes": "1",
            "user": "Guntram Blohm",
            "time": "Jul 3, 2015 at 22:05",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Base 64",
                    "text": "<span class=\"comment-copy\">Yes I want to patch particular function..  As u say if I replace  mov eax, esp with mov eax, 123456h or xor eax, eax..  Then what should be my revised code in above situation..  PS- Sorry I m noob so it's kind of Spoon feeding.. :)</span>",
                    "time": null
                }
            ]
        }
    ]
}