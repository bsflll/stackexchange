{
    "title": "PowerPC ELF32 detecting VLE",
    "link": "https://reverseengineering.stackexchange.com/questions/20863/powerpc-elf32-detecting-vle",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am writing an ELF32 parser and disassembler for PowerPC. </p>\n<p>Does anyone knows how to detect if the file is using VLE architecture from ELF header? I see that IDA can do it automatically.</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "425",
    "tags": [
        "powerpc"
    ],
    "user": "krusty",
    "time": "Mar 13, 2019 at 14:11",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>According to the code of <code>readelf</code> in the GNU binutils package, the presence of VLE instructions can be found in the <code>p_flags</code> and <code>sh_flags</code> fields with the mask <code>0x10000000</code> (see <code>binutils-xxx/include/elf/ppc.h</code> and look for <code>PF_PPC_VLE</code> and <code>SHF_PPC_VLE</code>).</p>\n<p>These flags seems to be present at the begining of each section in the ELF format. So, you should look for it.</p>\n<p>A few interesting readings:</p>\n<ul>\n<li><a href=\"https://www.polyomino.org.uk/publications/2011/Power-Arch-32-bit-ABI-supp-1.0-Unified.pdf\" rel=\"nofollow noreferrer\">Power ArchitectureÂ® 32-bit Application Binary Interface Supplement 1.0</a>.</li>\n<li><a href=\"https://www.st.com/content/ccc/resource/technical/document/user_manual/ac/f2/bf/01/73/d8/48/e0/CD00161395.pdf/files/CD00161395.pdf/jcr:content/translations/en.CD00161395.pdf\" rel=\"nofollow noreferrer\">Variable-Length Encoding (VLE) extension programming interface manual</a>.</li>\n<li><a href=\"https://www.nxp.com/docs/en/supporting-information/VLEPIM.pdf\" rel=\"nofollow noreferrer\">Variable-Length Encoding (VLE) Extension Programming Interface Manual</a>.</li>\n<li><a href=\"http://refspecs.linuxfoundation.org/ELF/ppc64/PPC-elf64abi.html\" rel=\"nofollow noreferrer\">64-bit PowerPC ELF Application Binary Interface Supplement 1.9</a>.</li>\n<li>The binutils source code (<code>grep -r _PPC_VLE</code>).</li>\n</ul>\n</div>",
            "votes": "4",
            "user": "perror",
            "time": "Mar 13, 2019 at 11:59",
            "is_accepted": true,
            "comments": []
        }
    ]
}