{
    "title": "Can anyone help me identify and decode this string? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/16012/can-anyone-help-me-identify-and-decode-this-string",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>Closed</b>. This question needs <a href=\"/help/closed-questions\">details or clarity</a>. It is not currently accepting answers.\n                                \n                            </div>\n</div>\n</div>\n</div>\n</div>\n<hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n<div class=\"fw-nowrap fc-black-500\">\n<div class=\"d-flex fd-column lh-md\">\n<div class=\"mb0 d-flex\">\n<div class=\"flex--item mr8\">\n<svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\"><path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\"></path></svg>\n</div>\n<p><b>Want to improve this question?</b> Add details and clarify the problem by <a href=\"/posts/16012/edit\">editing this post</a>.</p>\n</div>\n<div class=\"mb0 mt6 d-flex\">\n<p class=\"ml24 pl2\">Closed <span class=\"relativetime\" title=\"2017-08-18 20:24:04Z\">7 years ago</span>.</p>\n</div>\n<div class=\"ml24 pl2\">\n</div>\n</div>\n</div>\n<div class=\"mt24 d-flex gsx gs8\">\n<a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/16012/edit\">\n                        Improve this question\n                    </a>\n</div>\n</aside>\n</div>\n<p>Below is a part of a code that I reversed with repy2exe and I want to understand what it does and especially how to decode the value in the \"secret\" variable:</p>\n<pre><code>using = [\n    'Mg==\\n',\n    'MTA1\\n',\n    'Nzg=\\n',\n    'ODI=\\n',\n    'NzM=\\n',\n    'Njg=\\n',\n    'Nzk=\\n',\n    'OTg=\\n',\n    'ODg=\\n',\n    'Njc=\\n',\n    'Njg=\\n',\n    'ODM=\\n',\n    'MTk=\\n',\n    'MTc=\\n',\n    'MTY=\\n',\n    'MjI=\\n']\nsecret = 'BZh91AY&amp;SY\\xf2\\xbfIg\\x00\\x00\\x01\\x89\\x80\\x05\\x002\\x00\\x08\\x00 \\x00!\\x80\\x0c\\x01[6\\xe2\\xeeH\\xa7\\n\\x12\\x1eW\\xe9,\\xe0'\npas = raw_input('Please Enter The Password:')\na = ''\nfor i in range(len(pas)):\n    a += pas[i]\n\ncoun = 0\nwin = 16 \n</code></pre>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "763",
    "tags": [
        "disassembly",
        "binary-analysis",
        "python",
        "entropy"
    ],
    "user": "caliber",
    "time": "7 years ago",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">how is \"secret\" used?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Although the code is clearly incomplete, some things can be guessed:</p>\n<p>1) The strings ending with <code>==</code> are most likely base64-encoded (<a href=\"https://en.wikipedia.org/wiki/Base64\" rel=\"nofollow noreferrer\">Base64</a> uses <code>=</code> for padding). Let's try to decode them.</p>\n<p><code>&gt;&gt;&gt;x = [a.decode('base64') for a in using]</code><br/>\n<code>'2', '105', '78', '82', '73', '68', '79', '98', '88', '67', '68', '83', '19', '17', '16', '22']</code></p>\n<p>So they decode to string representations of some numbers. Not sure if this means anything, we need to see how they're used.</p>\n<p>2) The <code>BZ</code> sequence hints at <a href=\"https://en.wikipedia.org/wiki/Bzip2\" rel=\"nofollow noreferrer\">Bzip2</a>. We can try to decompress it as such:</p>\n<pre><code>&gt;&gt;&gt; import bz2\n&gt;&gt;&gt; bz2.decompress(secret)\n'base64'\n</code></pre>\n<p>And we're back to square one.</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Aug 5, 2017 at 19:27",
            "is_accepted": true,
            "comments": [
                {
                    "user": "caliber",
                    "text": "<span class=\"comment-copy\">Yes you right, the code isn't complete. Can you explain me where you noticed that this code is using a BZ?</span>",
                    "time": null
                },
                {
                    "user": "Megabeets",
                    "text": "<span class=\"comment-copy\">You can see that the variable \"secret\" begins with \"BZ\" which is the magic number of the Bzip2 file format: <a href=\"https://en.wikipedia.org/wiki/Bzip2#File_format\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Bzip2#File_format</a></span>",
                    "time": null
                },
                {
                    "user": "caliber",
                    "text": "<span class=\"comment-copy\">Oh now I understand. So the decompress code that you used here gives the value of 'base64', does it mean the value is 'base64' or the type of the value that was decompressed with the code above is base64?</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">the <code>secret</code> decompresses to literal  string \"base64\". Since we don't have rest of code, I have no idea how it's used.</span>",
                    "time": null
                },
                {
                    "user": "caliber",
                    "text": "<span class=\"comment-copy\">Yeah I understand what you are saying. The strange thing about the EXE program that I don't understand is when I using debugger like Olly or Immunity it does not show the strings that the program is using like: \"please enter the password\" or \"wrong password\". I thing that is somehow encrypted so the strings cannot be seen, and this is what give me a hard time to RE this program. Can you suggest how to decrypt the content of the program?</span>",
                    "time": null
                }
            ]
        }
    ]
}