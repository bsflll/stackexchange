{
    "title": "Can benign applications have such APIs?",
    "link": "https://reverseengineering.stackexchange.com/questions/13204/can-benign-applications-have-such-apis",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am new to malware analysis .. and I was analyzing some 'windows' apps and found functions that I thought it exist only on malware, is this possible or there is something wrong with my analysis ? \nI am using Cuckoo sandbox .. the functions are: <code>SetWindowsHookExA</code>, <code>IsDebuggerPresent</code> .. and others as well </p>\n<p>One of the app examples is <strong>AcroRd32.exe:</strong> \nIt calls <code>IsDebuggerPresent</code> .. and this is its page on virustotal including all the information related to the sample in addition to the MD5.\n<a href=\"https://www.virustotal.com/en/file/9e702e7b53f6f00e344a1cb42c63eaf4d52ed4adb5407744a654753569044555/analysis/\" rel=\"nofollow\">https://www.virustotal.com/en/file/9e702e7b53f6f00e344a1cb42c63eaf4d52ed4adb5407744a654753569044555/analysis/</a></p>\n</div>",
    "votes": "0",
    "answers": 2,
    "views": "343",
    "tags": [
        "winapi",
        "malware",
        "benign"
    ],
    "user": "Ophilia",
    "time": "Aug 30, 2018 at 3:22",
    "comments": [
        {
            "user": "Vitaly Osipov",
            "text": "<span class=\"comment-copy\">These API calls have been added by Microsoft for certain reasons they had. Obviously Microsoft didn't create them for use exclusively by malware. It's just that they are more commonly used by malware. It's a probability question.</span>",
            "time": null
        },
        {
            "user": "Dominik Antal",
            "text": "<span class=\"comment-copy\">Where did you get the idea that these functions should only be used by malware? Following your logic, why would you think Microsoft created such functions in the first place? To aid malware developers? :D</span>",
            "time": null
        },
        {
            "user": "Ophilia",
            "text": "<span class=\"comment-copy\">I a newbie to both the APIs and malware analysis .. and I don't have a full understand of both yet .. So we usually ask to learn from people like you :)</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>IsDebuggerPresent</code> is found in most executables compiled with Visual C++ in the setup code that is executed before the main function. There are also legitimate use cases for <code>SetWindowsHookExA</code>, so you will often see them in clean executables.</p>\n</div>",
            "votes": "6",
            "user": "ekse",
            "time": "Aug 4, 2016 at 2:40",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Yeah, there are definitely legitimate use cases for both <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms680345(v=vs.85).aspx\" rel=\"nofollow noreferrer\">IsDebuggerPresent</a> and <a href=\"https://docs.microsoft.com/en-us/windows/desktop/api/winuser/nf-winuser-setwindowshookexa\" rel=\"nofollow noreferrer\">SetWindowsHookExA</a> common windows functions.</p>\n<p>I propose you a simple experiment you can try, take this little legitimate c++ snippet of mine:</p>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;windows.h&gt;\n\nvoid main(int argc, char* argv[]) {\n    printf(\"Hello world\\n\");\n    while(true) {\n        printf(\"Debugger present: %d\\n\", IsDebuggerPresent());\n        Sleep(200);\n    }\n    system(\"pause\");\n}\n</code></pre>\n<p>Build it with your favourite c++ windows compiler and run it. Now, take your favourite debugger, I recommend you <a href=\"https://github.com/x64dbg/x64dbg\" rel=\"nofollow noreferrer\">x64dbg</a> and try this:</p>\n<ul>\n<li>Attach and detach to the running process to see how IsDebuggerPresent changes</li>\n<li>Once it's attached, try to hide the debugger</li>\n</ul>\n<p>By doing so, you'll understand the very basics about IsDebuggerPresents.</p>\n<p>About SetWindowsHookExA, I've seen it used on legit apps countless times so I can guarantee you is definitely not a microsoft function whose purpose is to be used on \"naughty\" apps :)</p>\n</div>",
            "votes": "0",
            "user": "BPL",
            "time": "Aug 30, 2018 at 13:07",
            "is_accepted": false,
            "comments": []
        }
    ]
}