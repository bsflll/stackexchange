{
    "title": "CreateThread returns true but thread doesn't run [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/20641/createthread-returns-true-but-thread-doesnt-run",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>Closed.</b> This question is <a href=\"/help/closed-questions\">off-topic</a>. It is not currently accepting answers.\n                                \n                            </div>\n</div>\n</div>\n</div>\n</div>\n<hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n<div class=\"fw-nowrap fc-black-500\">\n<div class=\"d-flex fd-column lh-md\">\n<div class=\"mb0 d-flex\">\n<div class=\"flex--item mr8\">\n<svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\"><path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\"></path></svg>\n</div>\n<p> Questions on <b>software development</b> are off-topic here, but can be asked on <a href=\"http://stackoverflow.com/about\">Stack Overflow</a>.</p>\n</div>\n<div class=\"mb0 mt6 d-flex\">\n<p class=\"ml24 pl2\">Closed <span class=\"relativetime\" title=\"2019-03-28 20:16:59Z\">6 years ago</span>.</p>\n</div>\n<div class=\"ml24 pl2\">\n</div>\n</div>\n</div>\n<div class=\"mt24 d-flex gsx gs8\">\n<a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/20641/edit\">\n                        Improve this question\n                    </a>\n</div>\n</aside>\n</div>\n<p>I have a PE executable which uses threads to handle most of its functionality. It uses <code>CreateThread</code> API to spawn local threads to handle functions.</p>\n<p><a href=\"https://i.sstatic.net/p9g5w.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/p9g5w.png\"/></a></p>\n<p>The call to the CreateThread returns a valid handle value.</p>\n<p><a href=\"https://i.sstatic.net/IMY5T.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/IMY5T.png\"/></a></p>\n<p>The problem is sometimes I don't see the thread getting created.</p>\n<p>Or other times the thread gets created but none of the code that's specified at that thread's start address gets executed.(even though the thread is created with the <code>dwCreationFlags</code> parameter being set to 0)</p>\n<p>What would the problem be?</p>\n<p>P.S. I can't share the executable but I can provide more screenshots.</p>\n</div>",
    "votes": "-1",
    "answers": 2,
    "views": "1k",
    "tags": [
        "debugging",
        "malware",
        "c",
        "thread"
    ],
    "user": "rustam Shirinov",
    "time": "6 years ago",
    "comments": [
        {
            "user": "bravosierra99",
            "text": "<span class=\"comment-copy\">You are going to have to be far more specific.  Ollydbg handles threads, so have you tried?  What exactly is your question?</span>",
            "time": null
        },
        {
            "user": "rustam Shirinov",
            "text": "<span class=\"comment-copy\">I edited the question to be as specific as I can</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>you mean the thread doesn't run when you have single stepped out of the CreateThread()  call  ??</p>\n<p>if yes then the Windows Scheduler hasn't yet found time to Schedule your Threads Code  </p>\n<p>you can confirm when the code is run by Setting  breakpoint on the LP_THREAD_ROUTINE   </p>\n<p>Argument passed to CreateThread() probably be in <strong>R8D</strong> in your screenshot i think    </p>\n<p>the Threads Code Will run only when your existing thread (main ) has ceded control by Calling Any Of the  Wait Functions  </p>\n<p>you can verify that with some code like this </p>\n<p>here you create 5 threads but since you waste time in the loop and do not cede control to Windows Scheduler none of your Thread Routine is Executed until the WaitForMsg Function is called and your main thread goes idle waiting </p>\n<pre><code>#include &lt;windows.h&gt;\n#include &lt;stdio.h&gt;\n#define MAXT 5\nDWORD WINAPI ThFunc( LPVOID parm ) {\n    printf(\"Thread No %p\\n\" , parm);\n    return 0;\n}\n\nint main (void) {\n    DWORD   Tid[MAXT]   = {0};\n    HANDLE  Thand[MAXT] = {0};\n    int     Data[MAXT+1]  = {0};\n    for(int i =0; i &lt; MAXT; i++) {\n        Data[i] = i;\n    }\n    for(int i=0;i&lt;MAXT;i++) {\n        Thand[i] = CreateThread(NULL,0,ThFunc,(LPVOID)Data[i],0,&amp;Tid[i]);        \n        if(Thand[i] == NULL) { ExitProcess(0); } else {\n            printf (\"wasting time not ceding control to ThreadRoutine\\n\");\n            for(int j =0; j &lt; 10; j++) {\n                printf(\"%p\\n\" , Thand[i]);\n            }        \n        }\n    }\n    WaitForMultipleObjects(MAXT, Thand, TRUE, INFINITE);\n    for (int i = 0; i&lt; MAXT;i++) {\n        CloseHandle(Thand[i]);\n    }   \n}\n</code></pre>\n<p>and the results are below\nyou can see the Thread Routines are executed only after coming out of loop and waiting by the main thread</p>\n<pre><code>cthread.exe\nwasting time not ceding control to ThreadRoutine\n0000001C,0000001C,0000001C,0000001C,0000001C,0000001C\n0000001C,0000001C,0000001C,0000001C\nwasting time not ceding control to ThreadRoutine\n00000020,00000020,00000020,00000020,00000020,00000020\n00000020,00000020.00000020,00000020\nwasting time not ceding control to ThreadRoutine\n00000024,00000024,00000024,00000024,00000024,00000024\n00000024,00000024,00000024,00000024\nwasting time not ceding control to ThreadRoutine\n00000028,00000028,00000028,00000028,00000028,00000028\n00000028,00000028,,00000028,00000028\nwasting time not ceding control to ThreadRoutine\n0000002C,0000002C,0000002C,0000002C,0000002C,0000002C\n0000002C,0000002C,0000002C,0000002C,Thread No 00000000\nThread No 00000001\nThread No 00000002\nThread No 00000003\nThread No 00000004\n</code></pre>\n</div>",
            "votes": "3",
            "user": "blabb",
            "time": "Feb 20, 2019 at 7:24",
            "is_accepted": true,
            "comments": [
                {
                    "user": "rustam Shirinov",
                    "text": "<span class=\"comment-copy\">It seems like the problem was the <code>WaitForSingleObject</code> not being called :)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I cannot tell specifically what your problem is (as is often the case with RE).  Something I would recommend though is trying kernel debugging with Windbg.  It's excellent because it has far more capability than ollydbg, albeit with a steeper learning curve.  </p>\n<p>Specifically you can have Windbg break on thread creation.  No thread can begin without going through the operating system, and windbg catches that.  </p>\n<p>Note: you are going to need to set up kernel debugging with Windbg which means you will need a VM.  You should probably be doing your dynamic analysis in a VM anyways...</p>\n<pre><code>SXE ct\n</code></pre>\n<p><a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/controlling-exceptions-and-events\" rel=\"nofollow noreferrer\">https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/controlling-exceptions-and-events</a></p>\n</div>",
            "votes": "0",
            "user": "bravosierra99",
            "time": "Feb 19, 2019 at 17:10",
            "is_accepted": false,
            "comments": []
        }
    ]
}