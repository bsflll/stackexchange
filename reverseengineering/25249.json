{
    "title": "Is there a list of Ghidra's variable prefixes?",
    "link": "https://reverseengineering.stackexchange.com/questions/25249/is-there-a-list-of-ghidras-variable-prefixes",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In Ghidra, the decompiler prepends various prefixes to variable names. For instance, <code>iVar1</code> is an integer. However, there are a lot of prefixes that aren't immediately obvious, find some below, but I'm looking for a complete dictionary if anyone knows where it is:</p>\n<ul>\n<li><code>local_31</code></li>\n<li><code>auStack8320</code></li>\n<li><code>uStack4</code></li>\n<li><code>DAT_&lt;addr&gt;</code></li>\n</ul>\n</div>",
    "votes": "11",
    "answers": 1,
    "views": "6k",
    "tags": [
        "ghidra",
        "decompiler"
    ],
    "user": "Axel Persinger",
    "time": "Jun 9, 2020 at 11:57",
    "comments": [
        {
            "user": "Felix PK",
            "text": "<span class=\"comment-copy\">Maybe this <a href=\"https://en.wikipedia.org/wiki/Hungarian_notation\" rel=\"nofollow noreferrer\">wikipedia article about hungarian notation</a> helps too.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This is annoyingly hard to find the answer to. This is a good starting point, but I don't think I found everything yet.</p>\n<ol>\n<li>Variable names\n<ol>\n<li>From <a href=\"https://github.com/NationalSecurityAgency/ghidra/blob/0cdc722921cef61b7ca1b7236bdc21079fd4c03e/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/Function.java#L39\" rel=\"noreferrer\">Function.java</a>:\n<ol>\n<li><code>param_</code></li>\n<li><code>local_</code></li>\n<li><code>local_res</code></li>\n<li><code>temp_</code></li>\n</ol>\n</li>\n<li>From <a href=\"https://github.com/NationalSecurityAgency/ghidra/blob/0cdc722921cef61b7ca1b7236bdc21079fd4c03e/Ghidra/Features/Decompiler/src/decompile/cpp/database.cc#L2330\" rel=\"noreferrer\">database.cc</a> &lt;-- this function has most (maybe all?) of the variable naming logic. There are multiple pieces of this function that I don't yet understand; I'm pretty confident there are additional variable naming conventions hiding in there.\n<ol>\n<li><code>unaff_retaddr</code></li>\n<li><code>unaff_</code></li>\n<li><code>in_</code></li>\n<li><code>param_</code>\n<ol>\n<li>While also referenced in <code>Function.java</code>, I believe this is where the name is actually generated.</li>\n</ol>\n</li>\n<li><code>extraout_</code></li>\n<li><code>Var</code>\n<ol>\n<li>Seems to usually be prefixed by something else (like <code>i</code> in your example)</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>I think <a href=\"https://github.com/NationalSecurityAgency/ghidra/blob/0cdc722921cef61b7ca1b7236bdc21079fd4c03e/Ghidra/Features/Decompiler/src/decompile/cpp/varmap.cc#L407\" rel=\"noreferrer\">this function in <code>varmap.cc</code></a> is the one that creates stack variables, but I haven't yet confirmed.</li>\n</ol>\n</li>\n<li>Label names (from <a href=\"https://github.com/NationalSecurityAgency/ghidra/blob/0cdc722921cef61b7ca1b7236bdc21079fd4c03e/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/symbol/SymbolUtilities.java#L44\" rel=\"noreferrer\">SymbolUtilities.java</a>):\n<ol>\n<li><code>SUB_</code></li>\n<li><code>LAB_</code></li>\n<li><code>DAT_</code></li>\n<li><code>UNK_</code></li>\n<li><code>EXT_</code></li>\n<li><code>FUN_</code></li>\n<li><code>OFF_</code></li>\n</ol>\n</li>\n</ol>\n<p>Also useful, the <a href=\"https://github.com/NationalSecurityAgency/ghidra/blob/0cdc722921cef61b7ca1b7236bdc21079fd4c03e/Ghidra/Features/Decompiler/ghidra_scripts/FindPotentialDecompilerProblems.java\" rel=\"noreferrer\">FindPotentialDecompilerProblems.java</a> script has some explanations for what some of these mean. Namely, some of the variants of <code>extraout</code>, <code>in_</code>, and <code>unaff_</code>.</p>\n</div>",
            "votes": "11",
            "user": "hairlessbear",
            "time": "Dec 2, 2020 at 2:15",
            "is_accepted": false,
            "comments": []
        }
    ]
}