{
    "title": "Automating binary patching in Hopper Disassembler using python",
    "link": "https://reverseengineering.stackexchange.com/questions/26613/automating-binary-patching-in-hopper-disassembler-using-python",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am curious to know if anyone has done anything similar to what I am looking to achieve...</p>\n<ol>\n<li>I have a .ipa file (iOS application) that I load into to Hopper Disassembler.</li>\n<li>I search for a string to prompt me to a location that I traverse to patch.</li>\n<li>Patch the instruction as needed.</li>\n<li>Recompile and create a new executable.</li>\n</ol>\n<p>Coding this isn't what I am struggling with. Finding <em>what</em> tools to use is. I am pretty experienced with Python, but am open to using any language to patch and create a new executable automatically. Has anyone automated a workflow like this before? I know this stack exchange should be more geared towards specific reverse engineering questions, but I figured this might be the best place to post my question. Thanks to all of those who reply in advance.</p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "336",
    "tags": [
        "python",
        "executable",
        "patching",
        "hopper"
    ],
    "user": "user35324",
    "time": "Dec 23, 2020 at 4:12",
    "comments": [],
    "answers_data": []
}