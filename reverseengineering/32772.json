{
    "title": "Hook: can call string::size() but crashing when reading string data... how to read without crash?",
    "link": "https://reverseengineering.stackexchange.com/questions/32772/hook-can-call-stringsize-but-crashing-when-reading-string-data-how-to-re",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm hooking a function that reads and decrypt files and my idea is to read the buffer once it's decrypted:</p>\n<pre><code>typedef void(__thiscall* _readFileContents)(DWORD* _resourceManager, std::string* buffer, std::string&amp; fileName, bool safe);\n_readFileContents original_readFileContents;\nDWORD gateway_readFileContents;\n\nvoid __fastcall readFileContents_hook(DWORD* _resourceManager, void* /*ecx*/, std::string* buffer, std::string&amp; fileName, bool safe) {\n    std::cout &lt;&lt; \"[\" &lt;&lt; safe &lt;&lt; \"] readFileContents_hook: \" &lt;&lt; fileName &lt;&lt; std::endl;\n    \n    ((_readFileContents)gateway_readFileContents)(_resourceManager, buffer, fileName, safe);\n\n    std::string combinedContent;\n    for (size_t i = 0; i &lt; buffer-&gt;size(); ++i) {\n        combinedContent.push_back(buffer-&gt;at(i));\n    }\n\n    return ((_readFileContents)gateway_readFileContents)(_resourceManager, buffer, fileName, safe); // same results with return; only\n}\n\noriginal_readFileContents = (_readFileContents)(moduleBase + 0x12345);\ngateway_readFileContents = (DWORD)TrampHook32((char*)original_readFileContents, (char*)readFileContents_hook, 6);\n</code></pre>\n<p>The problem, is that whenever I touch the <strong>buffer</strong> variable, I get a wonderful crash :)</p>\n<p>But, I've found an exception! I can get the size() without issues:</p>\n<pre><code>std::cout &lt;&lt; \"Buffer size with size(): \" &lt;&lt; buffer-&gt;size() &lt;&lt; std::endl;\n</code></pre>\n<p><a href=\"https://i.sstatic.net/9X2jf.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/9X2jf.png\"/></a></p>\n<p>So, how can I read the data without crashing?</p>\n<p>PS: This is the original code (it's open source and I'm using it for learning purposes):</p>\n<pre><code>std::string ResourceManager::readFileContents(const std::string&amp; fileName, bool safe)\n{\n    std::string fullPath = resolvePath(fileName);\n    \n    if (fullPath.find(\"/downloads\") != std::string::npos) {\n        auto dfile = g_http.getFile(fullPath.substr(10));\n        if (dfile)\n            return std::string(dfile-&gt;response.begin(), dfile-&gt;response.end());\n    }\n\n    PHYSFS_File* file = PHYSFS_openRead(fullPath.c_str());\n    if(!file)\n        stdext::throw_exception(stdext::format(\"unable to open file '%s': %s\", fullPath, PHYSFS_getErrorByCode(PHYSFS_getLastErrorCode())));\n\n    int fileSize = PHYSFS_fileLength(file);\n    std::string buffer(fileSize, 0);\n    PHYSFS_readBytes(file, (void*)&amp;buffer[0], fileSize);\n    PHYSFS_close(file);\n\n    if (safe) {\n        return buffer;\n    }\n\n    // skip decryption for bot configs\n    if (fullPath.find(\"/bot/\") != std::string::npos) {\n        return buffer;\n    }\n\n    static std::string unencryptedExtensions[] = { \".otml\", \".otmm\", \".dmp\", \".log\", \".txt\", \".dll\", \".exe\", \".zip\" };\n\n    if (!decryptBuffer(buffer)) {\n        bool ignore = (m_customEncryption == 0);\n        for (auto&amp; it : unencryptedExtensions) {\n            if (fileName.find(it) == fileName.size() - it.size()) {\n                ignore = true;\n            }\n        }\n        if(!ignore)\n            g_logger.fatal(stdext::format(\"unable to decrypt file: %s\", fullPath));\n    }\n\n    return buffer;\n}\n</code></pre>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "49",
    "tags": [
        "c++",
        "function-hooking",
        "strings"
    ],
    "user": "kuhi",
    "time": "Feb 28, 2024 at 10:27",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><strong>Solved by changing the signature:</strong></p>\n<pre><code>typedef std::string*(__thiscall* _readFileContents)(DWORD* _resourceManager, std::string* buffer, std::string&amp; fileName, bool safe);\n</code></pre>\n</div>",
            "votes": "0",
            "user": "kuhi",
            "time": "Feb 28, 2024 at 12:37",
            "is_accepted": true,
            "comments": []
        }
    ]
}