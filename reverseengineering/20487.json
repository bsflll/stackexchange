{
    "title": "Process Immediately Killed",
    "link": "https://reverseengineering.stackexchange.com/questions/20487/process-immediately-killed",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to reverse an ARM executable. It's for an embedded system, but I don't have any details about the normally targeted environment. </p>\n<p>Here's what <code>file</code> shows: ELF 32-bit LSB executable, ARM, EABI4 version 1 (SYSV), statically linked, stripped</p>\n<p>I've tried running it on Linux using qemu and the process immediately terminates with the message \"Killed\". Running <code>strace ./executable</code> returns this:</p>\n<p><code>execve(\"./executable\", [\"./executable\"], [/*13 vars */] &lt;unfinished ...&gt;\n+++ killed by SIGKILL +++ \nKilled</code></p>\n<p>I'm using the Debian Wheezy image from here: <a href=\"https://people.debian.org/~aurel32/qemu/armel/\" rel=\"nofollow noreferrer\">https://people.debian.org/~aurel32/qemu/armel/</a></p>\n<p>Any ideas why this is happening?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "175",
    "tags": [
        "linux",
        "arm",
        "elf"
    ],
    "user": "SArcher",
    "time": "Jan 28, 2019 at 1:11",
    "comments": [
        {
            "user": "0xec",
            "text": "<span class=\"comment-copy\"><code>file</code> doesn't always give the correct output. Try running <code>readelf -A</code> to know specifically the version of ARM.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The process may send itself (or it's child processes) the SIGTERM signal as part of an anti-debugging trick. Hunting for that will require you to search for signal-sending APIs like <a href=\"https://linux.die.net/man/3/kill\" rel=\"nofollow noreferrer\"><code>kill</code></a> and how/when they're being used by the application.</p>\n<p>A more simple solution, that is not necessarily RE related, could be that the process is killed by the <a href=\"https://www.memset.com/docs/additional-information/oom-killer/\" rel=\"nofollow noreferrer\">OOM killer</a>.</p>\n<p>To test that, you can run <code>mesg | egrep -i “killed process”</code> inside the emulated machine.</p>\n<p>If that's the case, you can easily disable it (add <code>vm.oom-kill = 0</code> in <code>/etc/sysctl.conf</code>).</p>\n</div>",
            "votes": "3",
            "user": "NirIzr",
            "time": "Jan 28, 2019 at 11:28",
            "is_accepted": false,
            "comments": []
        }
    ]
}