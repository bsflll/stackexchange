{
    "title": "Using Python pydbg - Find out what addresses does an instruction access",
    "link": "https://reverseengineering.stackexchange.com/questions/3945/using-python-pydbg-find-out-what-addresses-does-an-instruction-access",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to know how to accomplish this task with python pydbg. How does pydbg trace an instruction? For instance: should I set a breakpoint at the instruction address? Then what should I do?</p>\n<p>The Instruction:</p>\n<pre><code>Address                Opcode\ngame.exe+31C2CB        eax,[ecx+00000FB0]\n</code></pre>\n<p>So, using pydbg. I want to find out what addresses does this instruction access.</p>\n<p>More Info:</p>\n<ul>\n<li>Platform: Windows 7 x64</li>\n<li>Python 2.7</li>\n<li>Game: World of warcraft x32</li>\n</ul>\n<p>What I am actually doing is a Bot that will read the player's health from the process memory and depending on the percentage it will heal him.</p>\n<p>The problem is that the address for the player's health is dynamic. I've followed a lot of guides on how to find pointers for dynamic addresses / how to defeat DMA, but with no success.</p>\n<p>So, I am trying to find another way of finding the player's health address which is by tracing the instruction that accesses it.</p>\n<p>I can do this by using cheat engine but I want to implement this feature into my bot so it can automatically find the player's health address.</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "2k",
    "tags": [
        "python",
        "memory"
    ],
    "user": "A.Sherif",
    "time": "Feb 23, 2017 at 18:02",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">So, how did you get the <i>instruction</i> with Python?</span>",
            "time": null
        },
        {
            "user": "A.Sherif",
            "text": "<span class=\"comment-copy\">I did not get the instruction with python, I got it using cheat engine.</span>",
            "time": null
        },
        {
            "user": "Stolas",
            "text": "<span class=\"comment-copy\">Try to make your question more compact, better explained and show your own Google Attempts (Research we call it).</span>",
            "time": null
        },
        {
            "user": "Stolas",
            "text": "<span class=\"comment-copy\">Trying to cheat in World of Warcraft with debuggers is really hard (from what I gathered). Good luck with your project, also consider the implications of your character getting banned..</span>",
            "time": null
        },
        {
            "user": "A.Sherif",
            "text": "<span class=\"comment-copy\">I am not really trying to cheat or anything i just wanted to challenge myself to do any good project and i came up with this idea. I do not play the game (used to play it from a few years ago) and i do not have an account on blizzard, just using a private server. Am following the famous saying \"Code to learn coding\". Thanks for your time and help! I appreciate it :)</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can use a number of modules for this. It all depends on what you exactly want, my guess is to write a Cheater Application of sorts (due to the term cheat engine).</p>\n<p>Thus I'd recommend to use a standalone Module.\nThese are a small list of Python modules that can disassemble code:</p>\n<ul>\n<li>pydbg </li>\n<li>pyida </li>\n<li>distorm </li>\n<li>radare2 </li>\n<li>pyew </li>\n<li>byteplay</li>\n</ul>\n</div>",
            "votes": "2",
            "user": "Stolas",
            "time": "Mar 25, 2014 at 7:26",
            "is_accepted": false,
            "comments": [
                {
                    "user": "A.Sherif",
                    "text": "<span class=\"comment-copy\">Thanks for your reply, I decided that am going to use pydbg so i edited the question based on it. I've searched for pydbg, downloaded it, played with it for a while and read about it on <a href=\"http://pedramamini.com/PaiMei/docs/PyDbg/private/pydbg.pydbg.pydbg-class.html\" rel=\"nofollow noreferrer\">pedramamini.com/PaiMei/docs/PyDbg/private/â€¦</a> its really awesome and even helps in memory reading which i hope i knew about it earlier! but i still have no clue how to trace the instruction. Thanks again.</span>",
                    "time": null
                }
            ]
        }
    ]
}