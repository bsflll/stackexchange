{
    "title": "disassembly - bad results generated with ghidra but not with objdump and IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/25385/disassembly-bad-results-generated-with-ghidra-but-not-with-objdump-and-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am using Ghidra to analyze <code>libpng-compat.1.5.10.so</code> (downloaded from Fedora mirrors).</p>\n<p>But it didn't load the expected disassembly. Then I used Objdump and IDA to check the code and they get the same results and process it correctly. Here are pictures of these three tools about the function <code>png_write_rows</code>:</p>\n<p>Ghidra:</p>\n<p><a href=\"https://i.sstatic.net/cwR0z.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/cwR0z.png\"/></a></p>\n<p>we can see that from 0x6bf9, bad results are generated.</p>\n<p>For comparison, Objdump:</p>\n<p><a href=\"https://i.sstatic.net/ps12M.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/ps12M.png\"/></a></p>\n<p>and IDA:</p>\n<p><a href=\"https://i.sstatic.net/SJWLn.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/SJWLn.png\"/></a></p>\n<p>I know IDA is the best SRE tool, and I always thought Ghidra and IDA are the top 2. Objdump is a basic, standard and old tool, but why is it that Ghidra can't even get the correct disassembly code while the other two tools do? I use auto-analyze and import the binary file for both IDA and Ghidra.\nHow to correct these errors?</p>\n<p>By adjusting analysis options，if <code>Non-Returning Functions - Discovered</code> is set as <code>false</code>, it will be correct.</p>\n</div>",
    "votes": "3",
    "answers": 0,
    "views": "1k",
    "tags": [
        "ida",
        "disassembly",
        "ghidra",
        "objdump"
    ],
    "user": "xiaoyao Don",
    "time": "Jul 8, 2020 at 21:28",
    "comments": [
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">(Replicated, using <a href=\"http://rpm.pbone.net/index.php3/stat/4/idpl/47213828/dir/fedora_17/com/libpng-compat-1.5.10-1.fc17.i686.rpm.html\" rel=\"nofollow noreferrer\">rpm.pbone.net/index.php3/stat/4/idpl/47213828/dir/fedora_17/com/…</a>). Weird. That function <code>entry</code> gets marked <code>noreturn</code>, and it takes a \"Clear flow and repair\" command to get it to recognize it for what it is (a simple localized <code>ebx</code> loader). After that, \"D\" again on the original function appears to work -- but you have to do that on <i>every</i> function using <code>entry</code>.</span>",
            "time": null
        },
        {
            "user": "xiaoyao Don",
            "text": "<span class=\"comment-copy\">@usr2564301 \"D\" works for the extra code after \"call entry\", but the next lines following \"call entry\" get wrong disassembly.</span>",
            "time": null
        },
        {
            "user": "hippietrail",
            "text": "<span class=\"comment-copy\">What does the <code>align</code> mean where an Intel mnemonic should be? I think I ran into this once before and never figured out what it was.</span>",
            "time": null
        }
    ],
    "answers_data": []
}