{
    "title": "Decompile and Re-compile iOS app (.ipa file)",
    "link": "https://reverseengineering.stackexchange.com/questions/31537/decompile-and-re-compile-ios-app-ipa-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>As a part of college project, I have to showcase how I can get ios app from jailbroken devices and reverse-engineer it. In the first part of slide, I am showing how we can get the IPA file from jailbroken device, also can decrypt the iOS app (either through clutch2 or ipainstaller). I am showing how attacker can use class-dump-z and enumerate classnames and method names.</p>\n<p>I am also trying to add a scenario, where I not only get the decrypted app from jailbroken iPhone but also can change few things in it. I am trying to change parameters in Info.plist file.</p>\n<p>Below are the steps I performed:</p>\n<blockquote>\n<ol>\n<li>Unzip the decrypted iOS app (.ipa file) into directory named <code>unzipped_app</code></li>\n<li>Go to Payload -&gt; Appname.app -&gt; Info.plist</li>\n<li>Change app name</li>\n</ol>\n</blockquote>\n<p>Question:\nNow, how do I recompile the <code>unzipped_app</code> directory back to .ipa file?</p>\n<p>I came across this question <a href=\"https://reverseengineering.stackexchange.com/questions/2814/disassemble-edit-and-re-assembly-ios-ipa-apps\">Disassemble, edit and re-assembly iOS ipa apps</a> but this is not providing solution to my question.</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "4k",
    "tags": [
        "ios",
        "decompile"
    ],
    "user": "node_analyser",
    "time": "Feb 13, 2023 at 12:46",
    "comments": [
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">IPA files are simply renamed ZIP files. So what you call \"recompiling\" is just zipping the data. For the correct directory structure just see the original IPA file (can be downloaded using old iTunes versions).</span>",
            "time": null
        },
        {
            "user": "node_analyser",
            "text": "<span class=\"comment-copy\">That worked like charm. Had to do some tweaks but thank you so much for this pointer. :) :)</span>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">May be you should create an answer and describe the \"teaks\" you had to apply?</span>",
            "time": null
        },
        {
            "user": "node_analyser",
            "text": "<span class=\"comment-copy\">Thanks @Robert.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>With the help of Robert's comment, I explored that path and found a solution.</p>\n<p>IPA file is basically a form of ZIP file and likewise we can unzip it easily.</p>\n<blockquote>\n<p>macbook$:&gt; unzip -d unzipped-dir appname.ipa</p>\n</blockquote>\n<p>This will give us directory format as</p>\n<blockquote>\n<p>unzipped-dir/Payload/appname.app/Info.plist [and other contents of ipa file along with app binary]</p>\n</blockquote>\n<p>Once appropriate modifications are done in Info.plist, we can save the Info.plist file.</p>\n<p>Now, transfer the <code>Payload</code> directory from macbook to <code>jailbroken</code> ios device.</p>\n<blockquote>\n<p>macbook:$&gt; scp -r Payload/ root@&lt;iphone-ip&gt;:/var/root</p>\n</blockquote>\n<p>-- On Jailbroken Device --</p>\n<ul>\n<li>Install AppSync from Cydia (add source-&gt; <a href=\"http://cydia.akemi.ai\" rel=\"nofollow noreferrer\">http://cydia.akemi.ai</a>).</li>\n<li>Install Filza (should be available directly in Cydia search)</li>\n</ul>\n<p>Open Filza app and go to <code>/var/root</code>. This is the location where we sent <code>Payload</code> directory via scp.</p>\n<blockquote>\n<p>Long press <code>Payload</code> directory and click \"Create ZIP\" --&gt; This will create <code>Payload.zip</code></p>\n</blockquote>\n<blockquote>\n<p>Long press the newly created ZIP file <code>Payload.zip</code> and rename it to <code>new-app.ipa</code> (or whatever you want to name it, but make sure to keep the extension as <code>.ipa</code> and not <code>.zip</code> anymore) --&gt; This will create <code>new-app.ipa</code> in same directory ie /var/root/</p>\n</blockquote>\n<blockquote>\n<p>Click on <code>new-app.ipa</code> and click on \"Install\" on top right corner.</p>\n</blockquote>\n<p>Done. This will install the new ipa file.</p>\n<p>Self signing or any other type of signing is not required as (up to my limited knowledge) AppSync disables the code signing checks on jailbroken device.</p>\n<p>Writing self answer hoping that someone might get help from this.\nThank you.</p>\n</div>",
            "votes": "1",
            "user": "node_analyser",
            "time": "Feb 15, 2023 at 14:04",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Robert",
                    "text": "<span class=\"comment-copy\">For installing an IPA I prefer <a href=\"https://github.com/libimobiledevice/ideviceinstaller\" rel=\"nofollow noreferrer\">ideviceinstaller</a> from libimobiledevice tools.</span>",
                    "time": null
                }
            ]
        }
    ]
}