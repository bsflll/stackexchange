{
    "title": "How does one leverage VTx to disable screen capture?",
    "link": "https://reverseengineering.stackexchange.com/questions/8405/how-does-one-leverage-vtx-to-disable-screen-capture",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I came across this cool feature while playing around with Kaspersky '15. Basically, when you launch a \"Smart Money\" Protected Browser (this browser is just a modified, clean install of Chrome), if your computer hardware supports VTx, you are unable to take screenshots while the protected browser is running.</p>\n<p>I tried doing some research myself (furious Googling, browsing RE websites like kernelmode.info, etc...) but I couldn't figure out how they did it. For more details, check out their \"troubleshooting\" section about the technology: <a href=\"http://support.kaspersky.com/us/9955\" rel=\"nofollow\">http://support.kaspersky.com/us/9955</a></p>\n<p>Does anyone have any idea on how this is done? When I try to grab the screen, I just get an entirely black screenshot. I don't know how one can leverage VTx to accomplish such a task. Are they just using VTx to hook all the screen capture syscalls?! Or is there a more interesting way?</p>\n<p>I'll probably try to poke around with the KAV drivers, but they definitely don't make it easy to RE them. </p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "108",
    "tags": [
        "virtual-machines"
    ],
    "user": "KeBugCheck",
    "time": "Mar 7, 2015 at 6:28",
    "comments": [
        {
            "user": "Sebb",
            "text": "<span class=\"comment-copy\">I have a little custom program to automatically save my screenshots (as done by the key) and for some games, this built-in windows function doesn't work either (it does for VMs, however). I think this has something to do with the post-rendering processes. Did you try Steam's oder NVidia's screenshot feature? These two work for all games I know.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This question will most likely be closed as primarily opinion based, since \"how does a particular system work\" can't be answered unless there's either documentation about it or someone has reverse-engineered it already.</p>\n<p>So take this answer with a grain of salt - it describes how i'd tackle the problem. It might not even be feasible after closer investigation, and Kaspersky might have done something completely different.</p>\n<p>What you want to do is allow the video driver to write the video card memory, while preventing it from reading the same memory - which is hard to do by just messing with memory access bits, as the driver is running with <code>Ring 0</code> privileges within the kernel. Also, features like alpha blending might be implemented by reading a video memory cell, messing with the value, and writing it back, so you can't just prevent all video memory reads.</p>\n<p>VT-X allows you to capture instructions in Ring 0 mode, so they might trap read accesses to the video memory, check the call stack from within the hypervisor, and then decide if they want to read the real value or just simulate black by replacing the read value with 0.</p>\n<p>They might even track the usage of the value, allow the video driver to use the real value, but replace it with a 0 whenever something outside the driver tries to access it (however, i doubt they're doing that, since it's awfully hard to do correctly, and requires emulating the processor until it leaves the driver, which has performance issues as well).</p>\n</div>",
            "votes": "1",
            "user": "Guntram Blohm",
            "time": "Mar 7, 2015 at 9:58",
            "is_accepted": false,
            "comments": [
                {
                    "user": "KeBugCheck",
                    "text": "<span class=\"comment-copy\">Interesting idea... I'll definitely play around with it a bit. Thanks for the suggestions!</span>",
                    "time": null
                }
            ]
        }
    ]
}