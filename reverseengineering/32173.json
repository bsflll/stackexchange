{
    "title": "Adding debug symbols with GDB",
    "link": "https://reverseengineering.stackexchange.com/questions/32173/adding-debug-symbols-with-gdb",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In CTFs when I'm given some ELF file, it usually wasn't compiled with the -g flag. Is there a way to to somehow edit the file to make it be as if the ELF file was originally compiled with the -g flag?\n(I guess part of my issue is that I also don't understand exactly what the -g flag adds for gdb, so I'm not sure if its possible to add whatever it adds)</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "647",
    "tags": [
        "linux",
        "gdb",
        "elf",
        "executable"
    ],
    "user": "PurpleHacker",
    "time": "Aug 15, 2023 at 1:36",
    "comments": [
        {
            "user": "tkausl",
            "text": "<span class=\"comment-copy\"><code>Is there a way to insert the debug symbols into the given ELF file?</code> Do you <b>have</b> the debug symbols?</span>",
            "time": null
        },
        {
            "user": "mimak",
            "text": "<span class=\"comment-copy\">Debug symbols are produced during compilation; if your ELF binary has been stripped there's nothing to 'insert' - the symbols are tied to a single build, even if you had a separate file with DWARF symbols from a different source their offsets wouldn't match up with the binary</span>",
            "time": null
        },
        {
            "user": "PurpleHacker",
            "text": "<span class=\"comment-copy\">@tkausl I have changed the question somewhat, I see what I misunderstood</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You could try <a href=\"https://github.com/cesena/ghidra2dwarf\" rel=\"nofollow noreferrer\">ghidra2dwarf</a>:</p>\n<blockquote>\n<p>Ghidra2Dwarf is a ghidra plugin that allows to exports informations (such as functions, decompiled code, types) from ghidra to dwarf sections inside ELF binaries.</p>\n</blockquote>\n<p>People have been using it to help with CTF challenges since 2020:</p>\n<p><a href=\"https://github.com/cesena/ghidra2dwarf/issues/5\" rel=\"nofollow noreferrer\">https://github.com/cesena/ghidra2dwarf/issues/5</a></p>\n</div>",
            "votes": "1",
            "user": "julian",
            "time": "Aug 15, 2023 at 14:35",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Hellf python library can help you modify your elf file to add symbols to the symbol section table.</p>\n<p>See an example <a href=\"https://github.com/0xswitch/Hellf/blob/master/tests/unstrip.py\" rel=\"nofollow noreferrer\">here</a></p>\n</div>",
            "votes": "0",
            "user": "Qwark",
            "time": "Sep 15, 2023 at 17:10",
            "is_accepted": false,
            "comments": []
        }
    ]
}