{
    "title": "ASM Debuggers that visualize the stack (beginner friendly)",
    "link": "https://reverseengineering.stackexchange.com/questions/25913/asm-debuggers-that-visualize-the-stack-beginner-friendly",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>(Cross-posted from Stack Overflow)</p>\n<p>Are there any debuggers that constantly show a visual of the stack and where everything is within it? For example, taking some random image:</p>\n<p><a href=\"https://i.sstatic.net/zE81T.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/zE81T.png\"/></a></p>\n<p>I use <code>gdb</code> for most debugging/learning, and while it does show the registers, I have to do something like <code>x/8gx $rbp-32</code> everytime I want to see the stack -- and from that I usually figure out how I want the data to show.</p>\n<p>Are there any debuggers that make this information friendlier and more visual? I am very, very new to asm and the visual does help when debugging the information. (I'm hoping some off-the-shelf product such as Hopper, IDA, x86db, etc.)</p>\n</div>",
    "votes": "0",
    "answers": 2,
    "views": "906",
    "tags": [
        "disassembly",
        "assembly",
        "debuggers",
        "stack",
        "stack-variables"
    ],
    "user": "David542",
    "time": "Sep 16, 2020 at 19:19",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I assume you are using *nix based systems since you mentioned <code>gdb</code>. If you just want to print the stack/registers when you hit a break point, you can use <code>command</code> to set up some print statements. See <a href=\"https://sourceware.org/gdb/current/onlinedocs/gdb/Break-Commands.html#Break-Commands\" rel=\"nofollow noreferrer\">here</a>.</p>\n<p>Installing <a href=\"https://github.com/pwndbg/pwndbg\" rel=\"nofollow noreferrer\">pwndbg</a> makes it a lot less exhausting as it prints out the stack and registers every time you step, with  labels on the stack identifying <code>rbp</code> and <code>rsp</code>. Additionally there are tools like <a href=\"https://github.com/hugsy/gef\" rel=\"nofollow noreferrer\">GEF</a> and <a href=\"https://github.com/longld/peda\" rel=\"nofollow noreferrer\">PEDA</a> that are similar, but I don't have any firsthand experience with them.\n<a href=\"https://i.sstatic.net/bGeAy.png\" rel=\"nofollow noreferrer\"><img alt=\"pwndbg\" src=\"https://i.sstatic.net/bGeAy.png\"/></a></p>\n<p>Additionally, there are a few debuggers with GUIs, if that is what you are looking for:</p>\n<ul>\n<li><p><a href=\"https://www.gnu.org/software/ddd/\" rel=\"nofollow noreferrer\">ddd</a>: graphical front end for <code>gdb</code>, but you'll still see the stack as a list of values.</p>\n</li>\n<li><p><a href=\"https://github.com/eteran/edb-debugger\" rel=\"nofollow noreferrer\">edb</a>: similar to <code>ollydbg</code>, but for Linux.</p>\n</li>\n<li><p><a href=\"https://github.com/cs01/gdbgui\" rel=\"nofollow noreferrer\">gdbgui</a>: browser based frontend for <code>gdb</code>.</p>\n</li>\n</ul>\n</div>",
            "votes": "2",
            "user": "Shane Reilly",
            "time": "Sep 18, 2020 at 12:31",
            "is_accepted": false,
            "comments": [
                {
                    "user": "David542",
                    "text": "<span class=\"comment-copy\">thanks for all these tips. I'm currently using <code>gdbgui</code> but I have to use the print each time I want to see the stack!</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Borland's Turbo Debugger also has a text-window-based UI, with the stack in its own window and showing which values in which locations.  It doesn't tell you what those values represent, but at least it's always visible.</p>\n</div>",
            "votes": "1",
            "user": "peter ferrie",
            "time": "Sep 19, 2020 at 4:51",
            "is_accepted": false,
            "comments": []
        }
    ]
}