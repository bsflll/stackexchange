{
    "title": "what is the difference between pd $s and pdf @@f in Radare2",
    "link": "https://reverseengineering.stackexchange.com/questions/27823/what-is-the-difference-between-pd-s-and-pdf-f-in-radare2",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've tried searching around on how to disassemble a whole binary. I found that <code>pd $s</code> and <code>pdf @@f</code> are the 2 commands suggested most widely. I could understand the working of the latter, but I don't see how the former works.</p>\n<p>Description (from <code>p?</code>) of <code>pd</code> - \"disassemble N opcodes\" <br/>\nDescription (from <code>?$?</code>) of <code>$s</code> - \"file size\"</p>\n<p>Therefore, what is the difference between <code>pd $s</code> and <code>pdf @@f</code>? Which command to use to disassemble the <strong>whole</strong> file?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "704",
    "tags": [
        "radare2"
    ],
    "user": "Moltres",
    "time": "Jun 10, 2021 at 7:23",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>pdf @@f</code> is <code>disassembly function</code> and iterating over all functions (<code>@@f</code>), so obviously you need to have some functions. And if you functions are not analyzed then you won't get disassembly of those. See the following example output (truncated)</p>\n<pre><code>❯ r2 /bin/ls\n[0x000067d0]&gt; pdf @@f //&lt;- nothing printed as functions not analyzed\n[0x000067d0]&gt; aaa\n[x] Analyze all flags starting with sym. and entry0 (aa)\n...\n[0x000067d0]&gt; pdf @@f\nLinear size differs too much from the bbsum, please use pdr instead.\n...\nDo you want to print 15755 lines? (y/N)\n</code></pre>\n<p>You can clearly see that if binary is not analyzed nothing is printed by <code>pdf @@f</code>.</p>\n<p>On the other hand you can run <code>pd $s</code> without any analysis and it will start printing the disassembly, but it will disregard any file structure there might be.</p>\n<pre><code>❯ r2 /bin/ls\n[0x000067d0]&gt; pd $s\nDo you want to print 142792 lines? (y/N)\n</code></pre>\n<p>So which one to use? I would go with <code>pdf @@f</code> after an analysis if you know the file is some kind of binary executable format. If you have 'unknown' data and want to see if the bytes makes sense as opcodes probably better choise is <code>pd $s</code>.</p>\n</div>",
            "votes": "2",
            "user": "Paweł Łukasik",
            "time": "Jun 10, 2021 at 16:23",
            "is_accepted": true,
            "comments": []
        }
    ]
}