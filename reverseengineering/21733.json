{
    "title": "Change instruction test eax, eax to text eax, 1",
    "link": "https://reverseengineering.stackexchange.com/questions/21733/change-instruction-test-eax-eax-to-text-eax-1",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to change an instruction in assembly. Try with <code>test eax, eax</code> to <code>test eax, 1</code>. I try modify the opcodes. \nFor example opcode of <code>test eax, eax</code>: <code>85c0</code>\n<a href=\"https://i.sstatic.net/lTkRF.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/lTkRF.png\"/></a></p>\n<p>Try to understand why is 85c0 with this table:\n<a href=\"https://i.sstatic.net/CbEmW.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/CbEmW.png\"/></a></p>\n<p><code>85</code> comes from 'test', ok. But <code>c0</code> from <code>EB lb</code>? I'm a little confused how to create that opcode and how to modify and get <code>test eax, 1</code>.</p>\n<p>Thanks, appreciate any help!</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "disassembly",
        "assembly",
        "radare2",
        "patch-reversing"
    ],
    "user": "felix89",
    "time": "Jul 22, 2019 at 6:56",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">This table shows only the first byte. There has to be more on that page that allows to  say what are the next bytes.</span>",
            "time": null
        },
        {
            "user": "felix89",
            "text": "<span class=\"comment-copy\">Thanks for the answer. Great explanation @bart1e algo the page, it helps a lot!:)</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The opcode you are interested in is <code>a9 01 00 00 00</code> standing for <code>test eax, 1</code>.</p>\n<p>The easiest way to get the opcode of assembly instruction is just to <strong>compile</strong>  it and <strong>disassemble</strong> the result (for example using <a href=\"https://www.nasm.us/\" rel=\"noreferrer\">nasm</a> and then <a href=\"https://linux.die.net/man/1/objdump\" rel=\"noreferrer\">objdump</a> or simply <a href=\"https://defuse.ca/online-x86-assembler.htm\" rel=\"noreferrer\">this site</a>) - this way you don't have to remember anything about the opcodes which are sometimes weird.</p>\n<p>However, you want to patch 2 bytes instruction and the opcode I gave is 5 bytes. As a workaround, you can do <code>test al, 1</code> (<code>a8 01</code>), which will do the same (will do <code>test</code> only on the least significant byte of <code>eax</code>).</p>\n</div>",
            "votes": "5",
            "user": "bart1e",
            "time": "Jul 22, 2019 at 6:03",
            "is_accepted": true,
            "comments": []
        }
    ]
}