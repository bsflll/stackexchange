{
    "title": "Dolphin Emulator Android port modifications",
    "link": "https://reverseengineering.stackexchange.com/questions/16099/dolphin-emulator-android-port-modifications",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am modifying the <a href=\"https://play.google.com/store/apps/details?id=org.dolphinemu.dolphinemu&amp;hl=en\" rel=\"nofollow noreferrer\">Dolphin Emulator Alpha</a> for android, but I'm having some trouble with a string in it's <code>smali</code> code. The value I am having trouble with is <code>dolphin-emu</code>, it is the name of the folder that houses the emulators data and files. So far I have olny found two files containing the string, a configuration file in the <code>assets</code> folder, and a smali script. The issue is that even afyer changing both strings to <code>Dolphin Emulator</code>, the folder is still generated as <code>dolphin-emu</code>. I have scoured the application for <strong>any</strong> other references to this string and cannot find any more. How is the folder being generated with this name if I have replaced the string that represents it?</p>\n<p>I am using <a href=\"https://play.google.com/store/apps/details?id=com.gmail.heagoo.apkeditor.pro&amp;hl=en\" rel=\"nofollow noreferrer\">APK Editor Pro</a> to modify the app, this is the method I almost always use. I've been modding android apps for years and have modded hundreds of them, but this one has me truly stumped. I've used every method I have developed over the years to hunt it down and nothing works. Using the built-in search function, I have searched for these strings to see if it is \"split\" or possibly even hidden:</p>\n<pre><code>\"dolphin-emu\"\n\"dolphin\n\"/dolphin\nemu\"\nemu/\"\n\"DOLPHIN-EMU\"\nect...\n</code></pre>\n<p>Nothing else turns up, the app <em>is not</em> obfuscated or protected, and I can't find anything else that could potentialy hold the string I am trying to mod. Initially this was about simply changing the value, but now I just want to figure out how this is happening. Even uninstalling then re-installing after modifying the APK did not work, I thought that it may be possible for a settings file in the apps data folder to \"remember\" where the folder was stored. I've <strong><em>never</em></strong> had this much trouble locating and modifying a string in an app before.</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "488",
    "tags": [
        "android",
        "strings",
        "local-variables",
        "binary-editing"
    ],
    "user": "Mr. Mendelli",
    "time": "Aug 16, 2017 at 2:27",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">isn't the project open source?</span>",
            "time": null
        },
        {
            "user": "Mr. Mendelli",
            "text": "<span class=\"comment-copy\">Yes, but even still, knowing what causes this is very perplexing to me and I would like to find out how to modify the string in the current build. I'll tinker with the source to see If I can trace the source there in the mean time.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>After I did some more digging in the APK, I found what handles the fylesystem for the emulator. It is the <code>libmain.so</code> binary. Because it is handled by this file, modifying it is next to imposdible, this is because <code>.so</code> files are akin to windiws <code>.dll</code> binaries and are signed. Since modifying the file is not really an option, the only alternative answer to changing the emulators filesystem is to re-build it from the <a href=\"https://github.com/dolphin-emu/dolphin\" rel=\"nofollow noreferrer\">source code</a>.</p>\n<p><a href=\"https://i.sstatic.net/hZI1y.jpg\" rel=\"nofollow noreferrer\"><img alt=\"The values were located using a hex editor.\" src=\"https://i.sstatic.net/hZI1y.jpg\"/></a></p>\n<p>This is the first instance I have found something like this in an android app. Usually modifying file paths can be achieved through decompiling and modifying the <code>DEX</code>. Because of this, looking into the <code>.so</code> binaries was the <em>last</em> place I looked.</p>\n</div>",
            "votes": "1",
            "user": "Mr. Mendelli",
            "time": "Aug 23, 2017 at 18:59",
            "is_accepted": true,
            "comments": []
        }
    ]
}