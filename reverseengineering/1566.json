{
    "title": "Is it legal to sell clean room engineered products?",
    "link": "https://reverseengineering.stackexchange.com/questions/1566/is-it-legal-to-sell-clean-room-engineered-products",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The clean room technique is :</p>\n<blockquote>\n<p>First, a team of engineers study the software and describe everything\n  it does as completely as possible without using or referencing any\n  actual code. </p>\n<p>Then, a second team of programmers who had no prior knowledge of the\n  software and had never seen its code, work only from the first team's\n  functional specifications, and write a new software that operated as\n  specified.</p>\n</blockquote>\n<p>This technique bypasses the the fact in that the programmers do not directly reverse engineer the code at any point. So, if a commercial software is worked on in this manner, then can the new version created be sold legally ?</p>\n<hr/>\n<p>I am looking for an overview of global laws and am referring to reverse engineering proprietary drivers.</p>\n</div>",
    "votes": "12",
    "answers": 5,
    "views": "5k",
    "tags": [
        "law"
    ],
    "user": "asheeshr",
    "time": "Apr 4, 2013 at 13:31",
    "comments": [
        {
            "user": "Dougall",
            "text": "<span class=\"comment-copy\">First off, I have no legal expertise. The law varies greatly depending on where the software is being developed/sold. Where are you, or are you looking for a summary of global laws? Also, I'm under the impression clean-room techniques are usually used for interoperability. If you were writing a Linux driver using information from a closed-source Windows driver, for instance. Is this what you're referring to, or is your question also concerned with reverse engineering and using algorithms?</span>",
            "time": null
        },
        {
            "user": "JMcAfreak",
            "text": "<span class=\"comment-copy\">It is worth noting that this kind of thing isn't protected by patent (since it's software) in India (which is where AshRj is located if I remember correctly). However, on a global basis, other restrictions may apply.</span>",
            "time": null
        },
        {
            "user": "JMcAfreak",
            "text": "<span class=\"comment-copy\">I'm not sure \"Clean Room Engineering\" is the proper term for it. I've only heard that used for defect-prevention purposes in software development.</span>",
            "time": null
        },
        {
            "user": "Franck Dernoncourt",
            "text": "<span class=\"comment-copy\">You might be interested in this <a href=\"http://area51.stackexchange.com/proposals/67858/law?referrer=VbiBXJnq7T0Ioi5i8nXuKg2\">Law Stack Exchange proposal</a>  which is now in commitment phase.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Well, in this case I'll quote <a href=\"https://twitter.com/mikko\">Mikko Hypponen</a> from F-Secure:</p>\n<p><em>\"Remember, the legal advice you get from unknown strangers on internet forums is worth every penny you paid for it.\"</em></p>\n<p><a href=\"https://twitter.com/mikko/status/308139988388806656\">Source*</a></p>\n<p>So, basically, You SHOULD consult Your local lawyer.  </p>\n</div>",
            "votes": "23",
            "user": "Denis Laskov",
            "time": "Apr 4, 2013 at 12:11",
            "is_accepted": false,
            "comments": [
                {
                    "user": "JMcAfreak",
                    "text": "<span class=\"comment-copy\">I think this is the best answer here, even though I added my own answer. Sure, my answer provides a good place to start with research, but the best way is to consult a lawyer.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>First off, a disclaimer: This information is worth exactly what you paid for it - nothing. If you want the best answer, see the answer about consulting a lawyer. If you want to do your own research, here's a really good place to start. After research, still consult a lawyer. I mean it. Not all my information may be correct or accurate, so take it at face value.</p>\n<p>Globally, there is no easy way to define the laws and regulations surrounding your question. The answer is found in patent laws, since copyright has only so much power over that area.</p>\n<p>The fact that the software is not directly reverse engineered bypasses most of Copyright laws as far as I'm aware based on all the research I've done; you will <em>DEFINITELY</em> want to make sure I'm right on this one - it holds true in India, and I think similar concepts apply in the U.S. and other places. That leaves us with the oh-so-nebulous world of patents!</p>\n<p>Software patents are a very big gray area. I hope you're ready to do some reading. I'm going to share the most relevant ones. You're on your own for anything else.</p>\n<h2>United States</h2>\n<p>In the United States, patent law excludes abstract ideas, which has led to some software not being patentable. At the same time, there has been a trend of growth in the number of software patents granted in the United States, so there can be major problems if your software, which has the same functionality as the patent-holder's software, is based on the same design specs. While reverse engineering the software for interoperability would be protected, creating a clone of it with different code would be illegal under patent law.</p>\n<p>There are also the legal factors of Copyright and Trademark. The Digital Millenium Copyright Act (DMCA) provides further clarification on copyright (Wikipedia also does a good job summarizing it). Trademark law is handled similarly to patents, but there are other restrictions. However, for the purposes of length, I'll let you discover that (Google is your friend here).</p>\n<p>Further Reading and resources:</p>\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Software_patent\" rel=\"nofollow noreferrer\">Wikipedia: Software patent</a> (I expect you to use Wikipedia to also find additional sources)</li>\n<li><a href=\"http://www.uspto.gov/\" rel=\"nofollow noreferrer\">United States Patent and Trademark Office (USPTO)</a></li>\n</ul>\n<h2>UK and European Union</h2>\n<p>Substantive law in the United Kingdom generally excludes computer software from being patentable, as stated in <a href=\"http://www.ipo.gov.uk/patentsact1977.pdf\" rel=\"nofollow noreferrer\">The Patents Act of 1977</a>. In the European Union, the <a href=\"http://www.epo.org/law-practice/legal-texts/epc.html\" rel=\"nofollow noreferrer\">European Patent Convention (EPC)</a> specifies what an invention is, and software does not fall under that category (see also European Patent Office's (EPO's) <em><a href=\"http://www.epo.org/news-issues/issues/computers/software.html\" rel=\"nofollow noreferrer\">Patents for Software?</a></em>). UK courts have taken the view that the differences between the text of Section 1 of the Patents Act and Article 52 of the EPC should be ignored since Section 1 was to transpose Article 52 of the EPC into UK law; therefore, the EPC was the definitive text.</p>\n<p>Case law in the UK has a very sporadic history of whether software is patentable. Currently, the UK Intellectual Property Office (UKIPO) and the EPO have diverged significantly in practice. There has been a rise in the number of patents granted. There have been more Patent office decisions than there have been Court decisions on the matter.</p>\n<p>Further Reading and resources:</p>\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Software_patents_under_United_Kingdom_patent_law\" rel=\"nofollow noreferrer\">Wikipedia: Software patents under United Kingdom patent law</a></li>\n<li><a href=\"http://www.ipo.gov.uk/\" rel=\"nofollow noreferrer\">United Kingdom Intellectual Property Office (UKIPO) - Official Site</a></li>\n<li><a href=\"http://www.epo.org/index.html\" rel=\"nofollow noreferrer\">European Patent Office - Official Site</a></li>\n</ul>\n<h2>India</h2>\n<p>Most of the stuff for India is covered in <a href=\"https://reverseengineering.stackexchange.com/questions/60/is-reverse-engineering-and-using-parts-of-a-closed-source-application-legal\">your other question</a>, especially the sources cited in my answer there (especially the paper <em><a href=\"http://www.123helpme.com/view.asp?id=36962\" rel=\"nofollow noreferrer\">Software Patent and Copyright Laws in India</a></em>, which argues why software should be patentable). Unless the laws have changed significantly, you'd be safer here.</p>\n<h2>Finally...</h2>\n<p>You probably wouldn't be safe selling the software on a global market, since the majority of the market is seeing a growth in the number of software patents granted. There are also so many other legal factors that you'd be at great risk.</p>\n<p>There are some exceptions, of course, which is how OpenOffice exists (for example); however, it has different functionality from Microsoft Office, which makes it an exception, even if the base functionality is exactly the same.</p>\n<p>You're kind of on your own for the rest of the research (I've given you and anyone else a good starting point).</p>\n</div>",
            "votes": "13",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": false,
            "comments": [
                {
                    "user": "asheeshr",
                    "text": "<span class=\"comment-copy\">No need for disclaimers regarding content. <a href=\"http://meta.stackexchange.com/q/161972/200868\">meta.stackexchange.com/q/161972/200868</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>[Below applies to U.S. only]</p>\n<p>I'm not sure how well it would work now, but it did work back in the 80s and 90s. For example, Phoenix used this approach to make a clone of IBM's ROM BIOS. <a href=\"http://en.wikipedia.org/wiki/Phoenix_Technologies#Cloning_the_IBM_PC_BIOS\" rel=\"nofollow\">From Wikipedia</a>:</p>\n<blockquote>\n<p>Due to the nature of low-level programming two well-written pieces of\n  code that perform the same function there will inevitably be some\n  degree of similarity. As such it would be impossible for Phoenix to\n  defend itself on the grounds that no part of its BIOS matched IBM's.\n  Phoenix developed a \"clean room\" technique that isolated the engineers\n  who had been contaminated by reading the IBM source listings in the\n  IBM Technical Reference Manuals. The contaminated engineers wrote\n  specifications for the BIOS APIs and provided the specifications to\n  \"clean\" engineers who had not been exposed to IBM BIOS source code.\n  Those \"clean\" engineers developed code from scratch to mimic the BIOS\n  APIs. This technique provided Phoenix with a defensibly non-infringing\n  IBM PC-compatible ROM BIOS. Because the programmers who wrote the\n  Phoenix code had never read IBM's reference manuals, nothing they\n  wrote could have been copied from IBM's code, no matter how closely\n  the two matched.</p>\n</blockquote>\n<p>Phoenix did sell their BIOS commercially, so it seems to fit your question.</p>\n<p>So, that one was helped by IBM's publishing the ROM listings in the programming manual, but it seems to be a defensible approach even if you have to <em>disassemble</em> the binary code, as happened in <a href=\"http://en.wikipedia.org/wiki/Sony_Computer_Entertainment,_Inc._v._Connectix_Corporation\" rel=\"nofollow\"><em>Sony Computer Entertainment, Inc. v. Connectix Corporation</em></a>:</p>\n<blockquote>\n<p>Connectix's successful appeal maintained that the direct disassembly and observation of proprietary code was necessary because there was no other way to determine its behavior. From the ruling:</p>\n<p>Some works are closer to the core of intended copyright protection\n  than others. Sony's BIOS lay at a distance from the core because it\n  contains unprotected aspects that cannot be examined without copying.\n  The court of appeal therefore accorded it a lower degree of protection\n  than more traditional literary works.</p>\n</blockquote>\n<p>Still, it's not a protection against being sued as you can see. Connectix has won the appeal, but they eventually sold the product to Sony (who immediately discontinued it) and the company closed down three years later.</p>\n</div>",
            "votes": "4",
            "user": "Igor Skochinsky",
            "time": "Apr 6, 2013 at 0:48",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Even though you may not be breaking copyright, you may still be breaking software patents. In fact I think you may even break a software patent without having looked at the other party's software...</p>\n</div>",
            "votes": "2",
            "user": "Remko",
            "time": "Apr 4, 2013 at 12:55",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Mick",
                    "text": "<span class=\"comment-copy\">To be fair, we are all probably breaking a software patent by just thinking and talking about it ;)</span>",
                    "time": null
                },
                {
                    "user": "JMcAfreak",
                    "text": "<span class=\"comment-copy\">I might add that software isn't protected under patent in India, which is where the asker is located (I did some research for a different question he asked, and found this fact in addition to the facts I needed). However, on a global basis, things are bound to differ greatly.</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@JMcAfreak: which will not indemnify you from getting sued to oblivion in the US. Happy holidays in the US in such case. Any lawyer will argue that selling the product outside of India in some way might break the local law of their own country. The Internet is a global marketplace, ergo suing them in your country is fine ... etc etc. Also, if this is only about India I'd consider it too localized a question.</span>",
                    "time": null
                },
                {
                    "user": "asheeshr",
                    "text": "<span class=\"comment-copy\">@0xC0000022L If its were only about India, then why would it be too localized ? Questions about law will many a time deal with regional laws and thus can best be answered only if it asks for a specific country.</span>",
                    "time": null
                },
                {
                    "user": "Kevin Ford The Submariner",
                    "text": "<span class=\"comment-copy\">Trying to show that you have not infringed the copyright of a creator can be essentially <b>impossible</b> with the state of existing US copyright law. See US Register of Copyrights Maria Pallante's <a href=\"http://www.copyright.gov/regstat/2013/regstat03202013.html\" rel=\"nofollow noreferrer\">congressional testimony</a> last month for details. In part she wrote, \"...if one needs an army of lawyers to understand the basic precepts of the law, then it is time for a new law.\"</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>An interesting and obvious question pertains to either the 1/2 or full automation of the clean room design process -- as an application of Artificial Intelligence (particularly, the AI fields of program synthesis/analysis and natural language processing).</p>\n<p>This is not just an idle or academic question: I am rushing headlong into the creation and deployment of such a framework.</p>\n</div>",
            "votes": "1",
            "user": "NinjaDarth",
            "time": "Jan 12, 2018 at 0:00",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">So hello, the future is calling two years on. Where's that cool framework of yours for purchase (or even better for review as open source)?</span>",
                    "time": null
                }
            ]
        }
    ]
}