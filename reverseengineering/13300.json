{
    "title": "Is it possible to change the value of a register when a certain instruction is executed?",
    "link": "https://reverseengineering.stackexchange.com/questions/13300/is-it-possible-to-change-the-value-of-a-register-when-a-certain-instruction-is-e",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I was wondering if it was possible to change the value of a register when an instruction gets executed. For example</p>\n<pre><code>0x10 call eax\n</code></pre>\n<p>Say <code>eax</code> contains <code>0x20</code> at that point, I want to add <code>0x10</code> to it so that the address that gets called is now <code>0x30</code>.</p>\n<p>What I tried doing was set a <code>AddVectoredExceptionHandler</code> and put an <code>INT3</code> on <code>0x10</code>. When my exception handler gets called, I restore the original byte at <code>0x10</code>. Then I add <code>0x10</code> to <code>eax</code> and jump to <code>ExceptionInfo-&gt;ContextRecord-&gt;Eip</code>. This obviously doesn't work well because I never return to the OS.</p>\n<p>Is there another way or is this even possible?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "312",
    "tags": [
        "windows",
        "x86",
        "exception"
    ],
    "user": "Majiick",
    "time": "Aug 18, 2016 at 10:16",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Alright, so apparently you can just edit <code>ExceptionInfo-&gt;ContextRecord-&gt;Eax</code> inside your </p>\n<p><code>LONG CALLBACK VectoredHandler(\n  _In_ PEXCEPTION_POINTERS ExceptionInfo\n);</code> </p>\n<p>function and the OS will set the eax to that value when it returns the execution back to where the exception was(If you return EXCEPTION_CONTINUE_EXECUTION.)</p>\n</div>",
            "votes": "1",
            "user": "Majiick",
            "time": "Aug 18, 2016 at 4:31",
            "is_accepted": true,
            "comments": []
        }
    ]
}