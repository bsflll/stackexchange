{
    "title": "Reverse Engineering GUI programs",
    "link": "https://reverseengineering.stackexchange.com/questions/22034/reverse-engineering-gui-programs",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to reverse a 32-bit Win32 GUI application. It was compiled using Visual C++ 6.0 and uses the Win32 API. I am trying to figure out what happens when I click any particular button in the application. The problem is, whenever I stop execution using a debugger (x32dbg) execution is in a Win32 DLL file, not in an application function.</p>\n<p>Any suggestions on how to tackle this? How do I determine what happens when I click any particular button?</p>\n<p>Thank you</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "764",
    "tags": [
        "ida",
        "ghidra"
    ],
    "user": "Farhan Yusufzai",
    "time": "Sep 3, 2019 at 20:04",
    "comments": [
        {
            "user": "Chris Stratton",
            "text": "<span class=\"comment-copy\">First you should spend some time understanding the Win32 <b>message loop</b> and the fact that GetMessage() is, in contrast to PeekMessage(), a <i>blocking</i> call which will not return until it has an event to deliver.  <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getmessage\" rel=\"nofollow noreferrer\">docs.microsoft.com/en-us/windows/win32/api/winuser/â€¦</a>.  You probably want to breakpoint the instruction following GetMessage() or whatever mechanism is being used.</span>",
            "time": null
        }
    ],
    "answers_data": []
}