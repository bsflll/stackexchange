{
    "title": "concat22 in ghidra decompiler",
    "link": "https://reverseengineering.stackexchange.com/questions/22274/concat22-in-ghidra-decompiler",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Some portion of code I am analyzing gets decompiled as below in ghidra:</p>\n<pre><code>if (((*puVar8 == CONCAT22(DAT_0040a37a,DAT_0040a378)) &amp;&amp;\n     (*(uint *)((int)puVar9 + 6) ==\n     (CONCAT22(DAT_0040a37e,DAT_0040a37c) | (int)DAT_0040a37a &gt;&gt; 0xf))) &amp;&amp;\n     ((*(short *)((int)puVar9 + 10) == 0x20 || (*(short *)((int)puVar9 + 10) == 0)))) {\n    local_2c8.PrivilegeCount = local_2c8.PrivilegeCount | 4;\n  }\n</code></pre>\n<p>I want to understand what this <code>CONCAT22</code> is. This is found at multiple places in the same function.</p>\n</div>",
    "votes": "15",
    "answers": 1,
    "views": "8k",
    "tags": [
        "decompilation",
        "ghidra"
    ],
    "user": "Gaurav Sehgal",
    "time": "Oct 9, 2019 at 0:53",
    "comments": [
        {
            "user": "julian",
            "text": "<span class=\"comment-copy\">When you click on the CONCAT22 statement it should show the corresponding disassembly. Please include this disassembly</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I wanted to comment but it grew up so answering </p>\n<p>CONCAT is Concatenation  </p>\n<p>22 is a suffix that denotes concatenate two bytes with two bytes</p>\n<p>it takes two bytes from first location two bytes from second location and produces a 4 byte result  </p>\n<p>here it is probably making a wide character string </p>\n<p>you can see the difference of two bytes in the address too xxa37e,yya37c etc</p>\n<p>as commented click on the address or macro to go to the disassembly and look at the construct </p>\n<p>here is a big concat</p>\n<pre><code>return CONCAT2325(extraout_var,CONCAT124(1,CONCAT816(local_48,CONCAT88(uVar3,local_58)))) &amp;\n       0xffffffffffffffff;\n\nconcat           88 = 8+8  say something RDX+rcx   \nnext is          816 which means 8 + 16      &lt;&lt; 16 is from earlier concat   \nnext is          124 which means 1 + 24      &lt;&lt; 24 is from earlier concat   \nnext is          2325 which means 23 + 25     &lt;&lt; 25 is from earlier concat   \n</code></pre>\n<p>and the relevant disassembly for this decompilation</p>\n<pre><code>00461277 48 89 84        MOV        qword ptr [Stack[0x18] + RSP],RAX\n         24 80 00 \n         00 00\n00461284 48 89 84        MOV        qword ptr [Stack[0x20] + RSP],RAX\n         24 88 00 \n         00 00\n0046128c c6 84 24        MOV        byte ptr [Stack[0x28] + RSP],0x1\n         90 00 00 \n         00 01\n00461297 0f 11 84        MOVUPS     xmmword ptr [Stack[0x30] + RSP],XMM0\n         24 98 00 \n         00 00\n004612a8 c3              RET\n                     ********** bufio.(*Reader).ReadLine Exit ********** \n</code></pre>\n</div>",
            "votes": "18",
            "user": "blabb",
            "time": "Oct 9, 2019 at 12:25",
            "is_accepted": true,
            "comments": []
        }
    ]
}