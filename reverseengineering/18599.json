{
    "title": "What is the info displayed by radare2's afl?",
    "link": "https://reverseengineering.stackexchange.com/questions/18599/what-is-the-info-displayed-by-radare2s-afl",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I can't figure out what <code>afl</code> actually outputs. The docs are surprisingly uninformative.</p>\n<p>So, I've got address on the first column and symbol on the last. <strong>What is on the 2nd, 3rd and 4th columns?</strong></p>\n<p><strong>Example:</strong></p>\n<pre><code>:&gt; afl\n0x08048000   29 988  -&gt; 937  segment.LOAD0\n0x080483dc    3 35           func_5\n0x08048410    1 6            sym.imp.fgets\n0x08048420    1 6            sym.imp.fclose\n0x08048430    1 6            sym.imp.fwrite\n0x08048440    1 6            sym.imp.puts\n0x08048450    1 6            loc.imp.__gmon_start\n0x08048460    1 6            sym.imp.exit\n0x08048470    1 6            sym.imp.__libc_start_main\n0x08048480    1 6            sym.imp.fopen\n0x08048490    1 6            sym.imp.fileno\n0x080484a0    1 6            sym.imp.ptrace\n0x080484b0    1 33           entry0\n0x080484e0    1 4            func_3\n0x080484f0    4 42           func_4\n0x08048642    4 51           func_1\n0x08048675   10 83           func_2\n0x080486c8    4 194          main\n</code></pre>\n</div>",
    "votes": "7",
    "answers": 1,
    "views": "3k",
    "tags": [
        "tools",
        "radare2"
    ],
    "user": "rgcalsaverini",
    "time": "Jun 26, 2018 at 8:13",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>First, I'll answer your question straightly:</p>\n<ul>\n<li>2nd column: The number of <a href=\"https://en.wikipedia.org/wiki/Basic_block\" rel=\"noreferrer\">basic blocks</a> in the function</li>\n<li>3rd column: The size of the function (in bytes)</li>\n<li>4th column: The function's name</li>\n</ul>\n<p>You might have used \"4th\" to spot the number that comes after the \"-&gt;\". If this is the case, where there is a \"-&gt;\" the left number is the <em>range</em> of the function where on the right you can find the <em>size</em> of the function. It happens only when the range and the size are different.</p>\n<hr/>\n<p>But now for a more generic approach. As you noticed, some commands of radare2 would not show you the column headers of the table, just as your example with the <code>afl</code> command. So what can you do to show this information? </p>\n<h2>Use the JSON output</h2>\n<p>Simply, use the JSON representation of the output. Most of radare2's informative commands can be appended with a j to format the output as JSON. Add ~{} to format the output with JSON indention for readability:</p>\n<p>So for example:</p>\n<pre><code>[0x00400430]&gt; aflj~{}                   \n[                                       \n  {                                     \n    \"offset\": 4195272,                  \n    \"name\": \"sym._init\",                \n    \"size\": 26,                         \n    \"realsz\": 26,                       \n    \"cc\": 2,                            \n    \"cost\": 12,                         \n    \"nbbs\": 3,                          \n    \"edges\": 3,                         \n    \"ebbs\": 1,                          \n    \"calltype\": \"amd64\",                \n    \"type\": \"sym\",                      \n    \"minbound\": \"4195272\",              \n    \"maxbound\": \"4195298\",              \n    \"range\": \"26\",                      \n    \"diff\": \"NEW\",    \n    ...\n    ...               \n</code></pre>\n<p>As you can see, radare presents us with a simple JSON output that contains the headers (keys) for each value. You can easily understand what each column is, using the header name which is corresponding to the output without <code>j</code>.</p>\n<h2>Use a more verbose command</h2>\n<p>An alternative for <code>afl</code> is <code>afll</code>. It will list the functions of the binary in a verbose mode and in an easy to understand table:</p>\n<pre><code>[0x00400430]&gt; afll\naddress            size  nbbs edges    cc cost          min bound range max bound          calls locals args xref frame name\n================== ==== ===== ===== ===== ==== ================== ===== ================== ===== ====== ==== ==== ===== ====\n0x004003c8   26     3     3     2   12 0x004003c8    26 0x004003e2     1    0      0    1     8 sym._init\n0x00400400    6     1     0     1    3 0x00400400     6 0x00400406     0    0      0    1     0 sym.imp.puts\n0x00400410    6     1     0     1    3 0x00400410     6 0x00400416     0    0      0    1     0 sym.imp.__libc_start_main\n0x00400420    6     1     0     1    3 0x00400420     6 0x00400426     0    0      0    1     0 sub.__gmon_start_420\n0x00400430   41     1     0     1   15 0x00400430    41 0x00400459     1    0      0    0     8 entry0\n0x00400460   41     4     4     2   20 0x00400460    50 0x00400492     0    0      0    1     8 sym.deregister_tm_clones\n0x004004a0   53     3     2    -1   20 0x004004a0    53 0x004004d5     0    0      0    2     8 sym.register_tm_clones\n0x004004e0   28     3     3     2   14 0x004004e0    28 0x004004fc     1    0      0    0     0 sym.__do_global_dtors_aux\n0x00400500   35     4     6     4   19 0x00400500    38 0x00400526     0    0      0    0     8 entry1.init\n0x00400526   21     1     0     1   12 0x00400526    21 0x0040053b     1    0      0    1     8 sym.main\n0x00400540  101     4     5     3   49 0x00400540   101 0x004005a5     1    0      0    1    56 sym.__libc_csu_init\n0x004005b0    2     1     0     1    3 0x004005b0     2 0x004005b2     0    0      0    1     0 sym.__libc_csu_fini\n0x004005b4    9     1     0     1    5 0x004005b4     9 0x004005bd     0    0      0    0     8 sym._fini\n</code></pre>\n<p><code>afll</code> listed the functions but this time it showed you the columns' header name.</p>\n</div>",
            "votes": "9",
            "user": "Megabeets",
            "time": "Jun 26, 2018 at 15:20",
            "is_accepted": true,
            "comments": [
                {
                    "user": "rgcalsaverini",
                    "text": "<span class=\"comment-copy\">Very informative, thanks. Could you please clarify what the line coloring means on afll?</span>",
                    "time": null
                },
                {
                    "user": "rustyMagnet",
                    "text": "<span class=\"comment-copy\"><code>afll</code>.  What a beauty!</span>",
                    "time": null
                }
            ]
        }
    ]
}