{
    "title": "Strategies for Deciphering RS-232 Data",
    "link": "https://reverseengineering.stackexchange.com/questions/27961/strategies-for-deciphering-rs-232-data",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm working with an old irrigation controller that is connected to a PC via the DB9 serial port.\nI was able to capture that data (tapped into the appropriate TX wire) on a separate laptop, but now I'm stuck translating it into meaningful information.</p>\n<p>When idle, the controller continuously broadcasts the line current to the PC and because variable data stands out among static values, this seemed like a logical place to start deciphering the data. Below is an excerpt of the serial data while the system is idle:</p>\n<pre><code>ff 3a 30 32 34 49 30 30 38 34 3b 30 30 30 30 0d 0a\nff 3a 30 32 34 49 30 30 38 36 3b 30 30 30 30 0d 0a\nff 3a 30 32 34 49 30 30 38 35 3b 30 30 30 30 0d 0a\nff 3a 30 32 34 49 30 30 38 34 3b 30 30 30 30 0d 0a\nff 3a 30 32 34 49 30 30 37 45 3b 30 30 30 30 0d 0a\nff 3a 30 32 34 49 30 30 37 43 3b 30 30 30 30 0d 0a\nff 3a 30 32 34 49 30 30 37 43 3b 30 30 30 30 0d 0a\n</code></pre>\n<p>The bytes that I suspect of carrying the line current information are indicated with <code>__</code> below, as all of the other bytes remain static when system is idle:</p>\n<pre><code>ff 3a 30 32 34 49 30 30 __ __ 3b 30 30 30 30 0d 0a\n</code></pre>\n<p>There is a test cycle that can be run to check current before, during, and after activation of a particular sprinkler head. Here is an excerpt of that:</p>\n<pre><code>ff 3a 30 32 34 49 30 30 38 31 3b 30 30 30 30 0d 0a  (system idle, typical current ~130 mA)\nff 3a 30 34                                  0d 0a  (system wait)\nff 3a 30 32 34 49 30 30 38 36 3b 30 30 30 30 0d 0a  (system active, typical current ~550 mA)\nff 3a 30 34                                  0d 0a  (system wait)\nff 3a 30 32 34 49 30 30 38 35 3b 30 30 30 30 0d 0a  (system idle, typical current ~210 mA)\n</code></pre>\n<p>There are two pairs of wires leaving the controller, but I suspect the controller reports the total combined current rather than reporting them separately.</p>\n<p>Current values approximately 130 mA while idle, and around 550 mA while active, but I'm struggling to find a way to translate \"38 34\", \"37 45\" etc. into meaningful values.</p>\n<p>This is my first foray into this sort of puzzle, so any related advice/tips/suggestions for deciphering serial data would be welcome.</p>\n<p><em><strong>Edit:</strong></em>\nOmitting the leading \"ff\", below is the appearance in ASCII form.</p>\n<p><em>idle state:</em></p>\n<pre><code>:024I007D;0000\n:024I0082;0000\n:024I0080;0000\n:024I0084;0000\n:024I0086;0000\n:024I0082;0000\n:024I0081;0000\n:024I0080;0000\n:024I0082;0000\n:024I0086;0000\n:024I0084;0000\n:024I007E;0000\n:024I007E;0000\n:024I0080;0000\n:024I0081;0000\n:024I0080;0000\n:024I007E;0000\n:024I0081;0000\n:024I0085;0000\n:024I0085;0000\n:024I0086;0000\n:024I0081;0000\n</code></pre>\n<p><em>running:</em></p>\n<pre><code>:024I0081;0000  (system idle)\n:04             (system wait)\n:024I0086;0000  (system running) \n:04             (system wait)\n:024I0085;0000  (system idle)\n:04\n:04\n:04\n:024I0080;0000\n:04\n:024I0081;0000\n:04\n:024I007E;0000\n</code></pre>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "99",
    "tags": [
        "hex",
        "serial-communication",
        "hexadecimal"
    ],
    "user": "CragMonkey",
    "time": "Jul 7, 2021 at 3:30",
    "comments": [
        {
            "user": "Ian Cook",
            "text": "<span class=\"comment-copy\">There's not enough change in those 3 records to convey that much information about the current.  Are you sure you are including all the relevant records ?  Also, apart from the initial <code>FF</code>, all the characters are printable ascii. e.g. :024I0085;0000.  It'll probably be easier to see what's going on like this.  I would have guessed that  'I' stands for current  and 0085 is the mA value in hex (132mA) - but this doesn't work for your non-idle examples.</span>",
            "time": null
        },
        {
            "user": "CragMonkey",
            "text": "<span class=\"comment-copy\">Yes - the packets all look like the above example, with the same bits changing.</span>",
            "time": null
        },
        {
            "user": "CragMonkey",
            "text": "<span class=\"comment-copy\">Added ASCII representation above in case someone else can see a pattern.</span>",
            "time": null
        },
        {
            "user": "Ian Cook",
            "text": "<span class=\"comment-copy\">So the message being sent during 'system running' also appears in the idle state data.  Unfortunately, I don't think you are going to get very far with with this data/approach.  Perhaps try to reverse engineer the program that is translating these messages to the displayed mA values ?</span>",
            "time": null
        },
        {
            "user": "CragMonkey",
            "text": "<span class=\"comment-copy\">Correct - while the system is running the program uses the current draw to infer whether the solenoids responded. It's possible they're using a lookup table of some sort, but I was hoping there was just some simple translation that I was overlooking.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>So I managed to work it out... most importantly I needed to view it in ASCII as suggested in the comments.</p>\n<p>Turns out the samples I shared didn't contain examples of the 500+ mA readings like I expected after all.</p>\n<p>At any rate, it turns out that given the format....</p>\n<pre><code>:024IXXXX;YYYY\n</code></pre>\n<p>... then XXXX converted from hex to decimal + YYYY converted from hex to decimal = current displayed by software.</p>\n</div>",
            "votes": "0",
            "user": "CragMonkey",
            "time": "Jul 10, 2021 at 4:44",
            "is_accepted": true,
            "comments": []
        }
    ]
}