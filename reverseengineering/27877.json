{
    "title": "Why module address is different in Cheat Engine than in x32dbg?",
    "link": "https://reverseengineering.stackexchange.com/questions/27877/why-module-address-is-different-in-cheat-engine-than-in-x32dbg",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Why the module address is different in Cheat Engine than in x32dbg?</p>\n<p><a href=\"https://i.sstatic.net/t6khL.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/t6khL.png\"/></a></p>\n<p>I'm trying to read this:</p>\n<p><a href=\"https://i.sstatic.net/IHMhJ.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/IHMhJ.png\"/></a></p>\n<p>My c++ attempt:</p>\n<pre><code>#include \"pch.h\"\n#include \"Functions.h\"\n#include \"offsets.h\"\n#include &lt;iostream&gt;\n\nusing namespace std;\n\nDWORD WINAPI HackThread(HMODULE hModule)\n{\n    //Create Console\n    AllocConsole();\n    FILE* f;\n    freopen_s(&amp;f, \"CONOUT$\", \"w\", stdout);\n\n    cout &lt;&lt; \"We're injected!\\n\";\n\n    uintptr_t module = (uintptr_t)GetModuleHandle(NULL);        \n    int addr = module + 0x04939F0;\n\n    while (true)\n    {\n        if (GetAsyncKeyState(VK_END) &amp; 1)\n        {\n            cout &lt;&lt; \"Reading: \" &lt;&lt; hex &lt;&lt; addr &lt;&lt; endl;\n            cout &lt;&lt; *(int*)addr &lt;&lt; endl;\n        }\n\n        Sleep(5);\n    }\n\n    fclose(f);\n    FreeConsole();\n    FreeLibraryAndExitThread(hModule, 0);\n    return 0;\n}\n\nBOOL APIENTRY DllMain( HMODULE hModule,\n                       DWORD  ul_reason_for_call,\n                       LPVOID lpReserved\n                     )\n{\n    switch (ul_reason_for_call)\n    {\n    case DLL_PROCESS_ATTACH:\n        CloseHandle(CreateThread(nullptr, 0, (LPTHREAD_START_ROUTINE)HackThread, hModule, 0, nullptr));\n    case DLL_THREAD_ATTACH:\n    case DLL_THREAD_DETACH:\n    case DLL_PROCESS_DETACH:\n        break;\n    }\n    return TRUE;\n}\n</code></pre>\n<p>From c++ I can find this module address:</p>\n<p><a href=\"https://i.sstatic.net/ByNQA.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/ByNQA.png\"/></a></p>\n<p>I'm not sure if I was reading the correct address my code will work...</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "605",
    "tags": [
        "c++",
        "x64dbg",
        "cheat-engine"
    ],
    "user": "Adrian Hernando Solanas",
    "time": "Jun 22, 2021 at 20:32",
    "comments": [
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">905a4d is MZ dos Header and is not an address ; your code paste and result paste seems to differ the code does not have the string \"Setting xxxxx\" ;  Read About ASLR  the Address Will always be different in each run of executable because of Address Space Layout Randomization  in os &gt; vista</span>",
            "time": null
        },
        {
            "user": "Adrian Hernando Solanas",
            "text": "<span class=\"comment-copy\">updated image, \"RealestaDX9.exe\" is pointing to 0x905A4D in every run of executable</span>",
            "time": null
        },
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">yes that is right realxxxxx  is an address (start of executable ) it points to  DosHeader-&gt;Signature     MZ (0x4D 0x5A 0x90 0x00) in little endian as 0x00905a4d  what do you expect ?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I just had to derreference 0xB20000:</p>\n<p><a href=\"https://i.sstatic.net/5wKZ3.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/5wKZ3.png\"/></a></p>\n</div>",
            "votes": "-1",
            "user": "Adrian Hernando Solanas",
            "time": "Jun 22, 2021 at 21:17",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Robert",
                    "text": "<span class=\"comment-copy\">Please don't post terminal text as screenshot. Instead copy the text and paste it using code-formatting.</span>",
                    "time": null
                }
            ]
        }
    ]
}