{
    "title": "Problem finding correct offset in simple program with IDA Pro",
    "link": "https://reverseengineering.stackexchange.com/questions/13058/problem-finding-correct-offset-in-simple-program-with-ida-pro",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've been studying about clienthooks and made a simple program to be manipulated with dll injection</p>\n<pre><code>#include \"stdafx.h\"\n\ntypedef char greet_t[16];\ngreet_t greetings[] = {\n    \"Hello\",\n    \"Hi\",\n    \"Ahoy\",\n    \"Alas\",\n    \"Hallo\",\n    \"Ola\"\n};\n\nint greeter(char *name) {\n    printf_s(\"%s, %s!\\n\", greetings[rand() % ((int) sizeof(greetings) / (int) sizeof(greet_t))], name);\n    int rerun = strcmp(\"Gabriel\", name);\n    if (!rerun) printf_s(\"Have a nice day!\\n\");\n    return rerun;\n}\n\n\nint main() {\n    char name[64];\n    do {\n        scanf_s(\"%s\", name);\n    } while (greeter(name));\n\n\n    system(\"Pause\");\n    return 0;\n}\n</code></pre>\n<p>The idea is to detour the <code>greeter</code> function, except I can't find it's offset. Looking at it with IDA Pro it looks as if the function logic was thrown in the middle of the code as if there was no function call at all.</p>\n<pre><code>.text:004010B0                 lea     eax, [ebp+var_44]\n.text:004010B3                 push    eax\n.text:004010B4                 push    offset aS       ; \"%s\" (outside greeter())\n.text:004010B9                 call    sub_401050      ; calling scanf_s\n.text:004010BE                 add     esp, 8\n.text:004010C1                 lea     eax, [ebp+var_44]\n.text:004010C4                 push    eax\n.text:004010C5                 call    esi ; rand\n.text:004010C7                 cdq\n.text:004010C8                 idiv    edi\n.text:004010CA                 shl     edx, 4\n.text:004010CD                 add     edx, offset aHello ; \"Hello\"\n.text:004010D3                 push    edx\n.text:004010D4                 push    offset aSS      ; \"%s, %s!\\n\" (inside greeter())\n.text:004010D9                 call    sub_401020      ; calling printf_s\n</code></pre>\n<p>Reading the strings window, it says that all these strings are referenced on sub_401090, but this offset doesn't seem to be the one I'm looking for. What am I doing/reading wrong?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "614",
    "tags": [
        "ida",
        "function-hooking"
    ],
    "user": "Gabriel Vasconcelos",
    "time": "Jul 17, 2016 at 12:51",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It seems like your compiler has a <a href=\"http://www.greenend.org.uk/rjk/tech/inline.html\" rel=\"nofollow\">function inlining</a> optimization enabled. This means the code of a called function replaces the function call in the calling function, increasing the speed a bit as stack juggling and the call/ret instructions can be omitted.</p>\n<p>If you're compiling with <code>gcc</code>, use the <code>-O0</code> or the <code>-fno-inline</code> compiler flags (more details <a href=\"https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html\" rel=\"nofollow\">here</a>, search for <code>inline</code>); for other compilers, consult the respective manual.</p>\n</div>",
            "votes": "0",
            "user": "Guntram Blohm",
            "time": "Jul 17, 2016 at 14:39",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Gabriel Vasconcelos",
                    "text": "<span class=\"comment-copy\">It makes sens indeed, I'll check for it and disable. I'm using latest VC++</span>",
                    "time": null
                },
                {
                    "user": "Gabriel Vasconcelos",
                    "text": "<span class=\"comment-copy\">In fact, It seems to have generated my <a href=\"https://gist.github.com/gfreivasc/874fa4e780b06538de35d9c559f74fbe\" rel=\"nofollow noreferrer\">function correctly</a>.</span>",
                    "time": null
                }
            ]
        }
    ]
}