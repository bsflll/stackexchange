{
    "title": "IDA: NEC V850. Unable to identify anything",
    "link": "https://reverseengineering.stackexchange.com/questions/18493/ida-nec-v850-unable-to-identify-anything",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to reverse a V850E binary (it was extracted from an official update), however, IDA doesn't recognize anything at all.</p>\n<p>In order to do that, I select a V850 or V850E1 processor type and leave disassembly memory organization as is by default. IDA gives a message \"IDA can not identify the entry point automatically as there is no standard of binaries. Please move to what you think is an entry point..\". I click OK and all I see is one unexplored piece.\n<a href=\"https://i.sstatic.net/HYQa7.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/HYQa7.png\"/></a>\nI came across several examples for V850 when there was no initial information on the entry point location as well, but IDA in their case was able to recognize pieces of code like this:\n<a href=\"https://i.sstatic.net/z3wNx.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/z3wNx.png\"/></a>\nI tried another binary for V850 from completely another firmware and I got the same result - nothing is identified!</p>\n<p>Some observations:<br/>\n- I tried using radare2 software and it was able to recognize the majority of the code<br/>\n- I tried using another processor type in IDA (e.g. MetaPC) for the same binary and IDA was able to recognize a lot.<br/>\n- First 17FF lines of the binary are zeros. I don't know if it's a placeholder for the bootloader or something else and it imposes any problems on IDA.</p>\n<p>Any thoughts?</p>\n</div>",
    "votes": "0",
    "answers": 2,
    "views": "2k",
    "tags": [
        "ida",
        "decompilation"
    ],
    "user": "vadbut",
    "time": "Jun 10, 2018 at 0:48",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>When working with the architecture that you don't know, it's better to start with getting familiar with the assembler generated by the compiler for this architecture. If you google for \"V850 compiler\" you will find C Compiler and IDE for V850 Family at Renesas site. Most likely it's the compiler that was used by the firmware developers. Then you install the compiler and start to build helloworld-like examples to learn, how the code of the functions look like in disassembler, which bytes of the code are prolog and epilog. Thus you know what to look for in the firmware you try to disassemble, and know how to find the function start.</p>\n</div>",
            "votes": "2",
            "user": "Anton Kukoba",
            "time": "Jul 12, 2019 at 9:52",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Try this:</p>\n<pre><code>    #!usr/bin/python\n    for i in Functions():\n        print \"function start = \" + hex(GetFunctionAttr(i, FUNCATTR_START))\n        print \"function end = \" + hex(GetFunctionAttr(i, FUNCATTR_END)) \n        GetManyBytes(GetFunctionAttr(i, FUNCATTR_START), GetFunctionAttr(i, FUNCATTR_END) - GetFunctionAttr(i, FUNCATTR_START), 0)\n</code></pre>\n<p>I have found this python script some time ago somewhere on the net. I will find all functions for you. Verify it!</p>\n</div>",
            "votes": "0",
            "user": "crypted",
            "time": "Feb 10, 2019 at 17:39",
            "is_accepted": false,
            "comments": [
                {
                    "user": "NirIzr",
                    "text": "<span class=\"comment-copy\">This code will only list functions that are already recognized by IDA. It will not, as OP intends, recognize new functions.</span>",
                    "time": null
                },
                {
                    "user": "crypted",
                    "text": "<span class=\"comment-copy\">OK good to know. I am new to RE and learning very much at the moment.</span>",
                    "time": null
                }
            ]
        }
    ]
}