{
    "title": "Is it possible/feasible to decompile a program written in C++ to C?",
    "link": "https://reverseengineering.stackexchange.com/questions/29952/is-it-possible-feasible-to-decompile-a-program-written-in-c-to-c",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've not seen a lot of material on this. I've seen people attempting to bring a C++ program back to C++ code, and claiming how hard it is, but C code from C++ program? I don't know.</p>\n<p>If it is <em>possible,</em> what obstacles would be in the way? If <em>impossible,</em> what particular features make it so?</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "2k",
    "tags": [
        "decompilation",
        "c++",
        "c"
    ],
    "user": "Luke Dunn",
    "time": "Jan 29, 2022 at 21:53",
    "comments": [
        {
            "user": "Rolf Rolles",
            "text": "<span class=\"comment-copy\">Why would you want to do that?</span>",
            "time": null
        },
        {
            "user": "Luke Dunn",
            "text": "<span class=\"comment-copy\">@RolfRolles I am more familiar with C. I am not certain the exact language this program was written in, but others suggest it was C++. If possible, I'd like to stay within my realm of knowledge. If doing this is not possible... I will simply have to expand my realm.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If you're asking whether it's possible for an automated decompiler to produce C code as output for a given C++ input binary (rather than producing C++ code as output), the answer is that most decompilers are going to do this anyway, and are not going to give you a choice as to which language they produce as output. Machine-code decompilers generally produce a C-like pseudocode, which, in general, cannot be immediately recompiled to C code. A better question would be \"to what extent can the C-like pseudocode produced by decompilers represent features of C++ that are not in C\", to which the answer depends on the specific decompiler in question.</p>\n<p>If you're asking whether it's possible to manually decompile a C++ program into a C program, the answer is yes. Just as you can take a program written in C++ and manually translate it into C, you can manually decompile a binary into any language you want. There's going to be a lot of manual work regardless of which language you choose to decompile the program into. Although C and C++ are not the same language, the first C++ compilers worked by translating C++ code into C code, and using a regular C compiler on the result (see: CFront <a href=\"https://en.wikipedia.org/wiki/Cfront\" rel=\"nofollow noreferrer\">https://en.wikipedia.org/wiki/Cfront</a>). You can simulate most C++ constructs in C, although it's going to be a lot more work than simply taking advantage of the features introduced by C++.</p>\n</div>",
            "votes": "3",
            "user": "Rolf Rolles",
            "time": "Jan 30, 2022 at 23:15",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Of course, yes.\nHere, the problem is that you need to know well about the difference between c and c++ from the viewpoint of reversing, I suppose.\nFor example, the c++ classes is converted to assem codes like c structure, and the virtual table of a class is converted a first member of a structure and other functions is converted like a regular functions.\nAnd the  pointer of c++ class is converted a certain register like a \"ecx\" register in x84 assem code.\nIf you know somethings like this,  you can decompile c++ program to c.</p>\n</div>",
            "votes": "0",
            "user": "Chris Saul",
            "time": "Jan 31, 2022 at 14:21",
            "is_accepted": false,
            "comments": []
        }
    ]
}