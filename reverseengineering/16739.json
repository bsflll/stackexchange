{
    "title": "How to deobfuscation the public class names .NET",
    "link": "https://reverseengineering.stackexchange.com/questions/16739/how-to-deobfuscation-the-public-class-names-net",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><a href=\"https://i.sstatic.net/l3fwy.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/l3fwy.png\"/></a></p>\n<p>I already try de4dot with all dlls and exe and try remove strong name and don't work.</p>\n<p>what am I doing wrong?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "807",
    "tags": [
        "decompilation",
        ".net",
        "c#"
    ],
    "user": "Luan Barbosa",
    "time": "Nov 8, 2017 at 21:47",
    "comments": [
        {
            "user": "dsasmblr",
            "text": "<span class=\"comment-copy\">You can't always deobfuscate .NET binaries. If, when the binaries are compiled, the obfuscation implementation modifies the name itself in every place it's referenced, then that (the mangled name) is what the name will be for you, the reverser.</span>",
            "time": null
        },
        {
            "user": "Luan Barbosa",
            "text": "<span class=\"comment-copy\">What do you think about I try my last shot with IDA ? Can be made?</span>",
            "time": null
        },
        {
            "user": "dsasmblr",
            "text": "<span class=\"comment-copy\">Again, if the name has 100% been changed in the application you've downloaded, then there's nothing for you to recover. It's as if the developer developed the application using those obfuscated names in the first place. Depending on what you want to accomplish, this is where other analysis (static and/or dynamic) comes into play where you have to find your way to the meaning of everything that's obfuscated (well, everything you're interested in, at least). This is by no means a trivial task necessarily, but it's what you have to start considering in the absence of meaningful symbols/names.</span>",
            "time": null
        },
        {
            "user": "Luan Barbosa",
            "text": "<span class=\"comment-copy\">Thank you very much I'm so obsessed with breaking those names. And I love impossible tasks. You quoted static or dynamic analysis, I just started a cybrary course on RE  has a topic just about what you quoted. Thank you very much for the help. If I can not, that's fine. But I will not give up easy. I'm addicted to it.</span>",
            "time": null
        },
        {
            "user": "Megabeets",
            "text": "<span class=\"comment-copy\">@dsasmblr please consider making these comments as an elaborated answer since it answers the question</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Converting multiple comments of mine to an answer for future readers:</p>\n<p>You can't always deobfuscate .NET binaries. If, when the binaries are compiled, the obfuscation implementation modifies the name itself in every place it's referenced, then that (the mangled name) is what the name will be for you, the reverser. It's as if the developer developed the application using those obfuscated names in the first place.</p>\n<p>Depending on what you want to accomplish, this is where other analysis (static [studying binaries without executing (running) them] and/or dynamic [studying binaries while they're executing]) comes into play where you have to find your way to the meaning of everything that's obfuscated (well, everything you're interested in, at least). This is by no means a trivial task necessarily, but it's what you have to start considering in the absence of meaningful symbols/names (which is quite commonly the case in unmanaged (<a href=\"https://en.wikipedia.org/wiki/Managed_code\" rel=\"nofollow noreferrer\">non-CLR</a>) binaries that lack symbol names).</p>\n</div>",
            "votes": "3",
            "user": "dsasmblr",
            "time": "Nov 9, 2017 at 14:08",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Luan Barbosa",
                    "text": "<span class=\"comment-copy\">I figured out what was going on. He has the masked value I have the value masked. It is possible to unmark it.?</span>",
                    "time": null
                }
            ]
        }
    ]
}