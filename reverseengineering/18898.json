{
    "title": "Obscure router refuses to flash OpenWrt",
    "link": "https://reverseengineering.stackexchange.com/questions/18898/obscure-router-refuses-to-flash-openwrt",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This is a very obscure Chinese router from a brand called Wavlink. It's the Model: WN529R2/WN529R2P. It's web interface was pretty limited and wouldn't allow firmware modifications.</p>\n<p>I found GND/Tx/Rx/Vcc pins, so I soldered to them, and got a serial console (without any password at all). I have root access and it runs OpenWrt 14.07 BARRIER BREAKER, but it is incredibly trimmed and limited. To name something, it doesn't even have opkg available, so I can't install any kind of package, being unable to customize my router.</p>\n<p><a href=\"https://i.sstatic.net/4ZNpt.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/4ZNpt.png\"/></a></p>\n<p>I decided to go and flash a clean OpenWrt binary. I found it used a Mediatek MT7628NN processor. Using commands I also found the arch is ramips. So I went to the OpenWrt download page. For some reason, there was no available version of OpenWrt 14.X for the 7628 (there was for other 762X processors). I went then to the OpenWrt 17.X and 15.X download pages and found binaries for the 7628.</p>\n<p>The web interface doesn't recognize the update binaries. So I investigated and found I could also flash the firmware using a TFTP server, by booting the router with the reset button pushed. And so I did, this is the log of the flash process:</p>\n<pre><code>RST has be pushed!RST has be pushed!Auto Update: tftp 192.168.9.2 update.bin!\nnetboot_common, argc= 3\nNetTxPacket = 0x81FE6380\nKSEG1ADDR(NetTxPacket) = 0xA1FE6380\nNetLoop,call eth_halt !\nNetLoop,call eth_init !\nTrying Eth0 (10/100-M)\nWaiting for RX_DMA_BUSY status Start... done\n\nETH_STATE_ACTIVE!!\nTFTP from server 192.168.9.2; our IP address is 192.168.9.233\nFilename 'update.bin'.\n\nTIMEOUT_COUNT=10,Load address: 0x80100000\nLoading: Got ARP REPLY, set server/gtwy eth addr (78:e3:b5:b7:1f:1d)\nGot it\n####################checksum bad\nchecksum bad\n#############################################\n###############checksum bad\n##################################################\n#################################################################\n#################################################################\n#################################################################\n#################checksum bad\n###########checksum bad\n#####################################\n#####################checksum bad\n############################################\n#################################################################\n#################################################################\n##############################\ndone\nBytes transferred = 3145732 (300004 hex)\nNetBootFileXferSize= 00300004\n</code></pre>\n<p>Unfortunately, it seems like it is doing nothing. After that, the router boots normally again in 14.07 as if nothing had changed. I've tried different TFTP servers and binary files just in case, like 15.X and 17.X and none of them have worked so far. I'm using, for example, the file: mt7628-squashfs-sysupgrade.bin downloaded from: <a href=\"https://archive.openwrt.org/chaos_calmer/15.05.1/ramips/mt7628/\" rel=\"nofollow noreferrer\">https://archive.openwrt.org/chaos_calmer/15.05.1/ramips/mt7628/</a> which is then renamed to update.bin in my server.</p>\n<p>EXTRA: I'm not completely sure that the flashing has done nothing, because now on boot, two versions of Uboot are loaded, but the first one seems to fail or something, I don't know:</p>\n<p><a href=\"https://i.sstatic.net/7h5H8.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/7h5H8.png\"/></a></p>\n<p>Uboot Ralink 4.3 was the default one, but I'm not sure if Uboot 1.1.3 was there before flashing.</p>\n<p>From there it just loads the Linux kernel and proceeds to boot.</p>\n<p><strong>Why isn't the firmware getting flashed? Is there any sort of protection?</strong></p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "771",
    "tags": [
        "linux",
        "obfuscation",
        "flash",
        "operating-systems"
    ],
    "user": "78dtat78da",
    "time": "Jul 26, 2018 at 11:04",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">what is your question? this site is not for blog posts</span>",
            "time": null
        },
        {
            "user": "78dtat78da",
            "text": "<span class=\"comment-copy\">@IgorSkochinsky why the firmware isn't getting flashed.</span>",
            "time": null
        },
        {
            "user": "Avery3R",
            "text": "<span class=\"comment-copy\">It probably uses a custom firmware file format. You could find the updater binary and try to reverse how it works.</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">@PedroJavierFern√°ndez as far as I remember from my own tinkering that error you see regarding U-Boot is merely about the resident environment variables. So simply telling that U-Boot instance to edit and save the variables should make that message go away. Are you certain that this didn't happen before? Depending on the hardware I've seen all kinds of data in the environment block, including information such as addresses to load stuff from or to and other information required during CPU bootstrapping.</span>",
            "time": null
        },
        {
            "user": "78dtat78da",
            "text": "<span class=\"comment-copy\">@0xC0000022L yes I am pretty sure. How can I edit and save the U-boot variables? Thanks</span>",
            "time": null
        }
    ],
    "answers_data": []
}