{
    "title": "How can an IA-32 program seemingly compiled with MSVC send its sole argument via EAX? [duplicate]",
    "link": "https://reverseengineering.stackexchange.com/questions/16911/how-can-an-ia-32-program-seemingly-compiled-with-msvc-send-its-sole-argument-via",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>This question already has answers here</b>:\n                                \n                            </div>\n</div>\n</div>\n</div>\n<div class=\"flex--item mb0 mt4\">\n<a dir=\"ltr\" href=\"/questions/16919/what-compiler-uses-a-calling-convention-that-uses-eax-as-the-first-argument-the\">What compiler uses a calling convention that uses EAX as the first argument, then pushes onto the stack?</a>\n<span class=\"question-originals-answer-count\">\n                                (2 answers)\n                            </span>\n</div>\n<div class=\"flex--item mb0 mt8\">Closed <span class=\"relativetime\" title=\"2017-12-07 15:34:07Z\">7 years ago</span>.</div>\n</div>\n</aside>\n</div>\n<p>A C++ program I'm looking at appears to have been compiled with MSVC. It links to MSVCR100.dll, contains MSVC's security cookie code and uses the Microsoft mangling scheme. However, one of the functions I've hit sends its only argument in the EAX register, which is immediately passed as an argument to <code>LoadLibraryW</code> (after BP frame initialisation).</p>\n<p>Looking at the code, there are sequences and strings referenced in other functions (evidence of inlining), so I don't think it's a direct assembly code job.</p>\n<p>To my knowledge and according to my sources, MSVC doesn't have a calling convention that sends arguments via EAX. Watcom and Delphi have options, but not MSVC. Is it possible that the compiler optimised the function into a register call? Or is there another, undocumented calling convention in MSVC?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "179",
    "tags": [
        "c++",
        "register",
        "calling-conventions",
        "msvc"
    ],
    "user": "Ben Jaguar Marshall",
    "time": "7 years ago",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">we can't see your screen from here, so show the code!</span>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">next time just edit the original question instead of posting a new one</span>",
            "time": null
        },
        {
            "user": "Ben Jaguar Marshall",
            "text": "<span class=\"comment-copy\">@IgorSkochinsky I felt that the new information changed the nature of the original question enough to warrant a new question.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>We can see from <a href=\"https://en.wikipedia.org/wiki/X86_calling_conventions#List_of_x86_calling_conventions\" rel=\"nofollow noreferrer\">this list</a> that IA-32's Delphi/Free Pascal calling convention is the <em>register</em> calling convention. My guess is you're dealing with a binary that's the result of something like this: <a href=\"https://stackoverflow.com/questions/15341954/how-to-call-a-function-using-delphis-register-calling-conventions-from-visual-c\">How to call a function using Delphi's register calling conventions from Visual C++?</a></p>\n<p>To partially quote the top-voted answer:</p>\n<blockquote>\n<p>Delphi's <a href=\"http://docwiki.embarcadero.com/RADStudio/en/Procedures_and_Functions#Calling_Conventions\" rel=\"nofollow noreferrer\">register calling convention</a>, also known as Borland fastcall, on x86 <a href=\"http://docwiki.embarcadero.com/RADStudio/Tokyo/en/Program_Control#Register_Convention\" rel=\"nofollow noreferrer\">uses EAX, EDX and ECX registers</a>, in that order.</p>\n</blockquote>\n<p>Some additional reading that may help paint a clearer picture of what you're looking at:</p>\n<ul>\n<li><a href=\"http://bcbjournal.org/articles/vol4/0012/Using_Visual_C_DLLs_with_CBuilder.htm\" rel=\"nofollow noreferrer\">Using Visual C++ DLLs with C++Builder</a></li>\n<li><a href=\"https://reverseengineering.stackexchange.com/questions/2964/which-calling-convention-to-use-for-eax-edx-in-ida\">Which calling convention to use for EAX/EDX in IDA</a></li>\n</ul>\n</div>",
            "votes": "2",
            "user": "dsasmblr",
            "time": "Dec 5, 2017 at 15:02",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Ben Jaguar Marshall",
                    "text": "<span class=\"comment-copy\">I may need to amend my question. After posting, I found a function that passes the first argument in EAX, then pushes the second argument. I'll say that your answer here is correct for the posed question and ask a new question.</span>",
                    "time": null
                }
            ]
        }
    ]
}