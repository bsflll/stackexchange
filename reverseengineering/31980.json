{
    "title": "What are some methods to reverse a ex5 file for metatrader 5?",
    "link": "https://reverseengineering.stackexchange.com/questions/31980/what-are-some-methods-to-reverse-a-ex5-file-for-metatrader-5",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>What are some methods to reverse a ex5 file, for metatrader 5? I would like to understand how people crack ex5 files and make them for use. Any ideas of reverse engineering tools for this scenario?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "5k",
    "tags": [
        "decompilation"
    ],
    "user": "The Coder",
    "time": "Jun 29, 2023 at 9:49",
    "comments": [
        {
            "user": "mimak",
            "text": "<span class=\"comment-copy\">Metatrader has a proprietary compiler and executable format, you'd want to analyze metaeditor.exe</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>MetaTrader's <code>.ex4</code> and <code>.ex5</code> binaries are a custom format designed to run inside MetaTrader's platform. I assume most of the information on these is contained in <code>metaeditor.exe</code>, the platform's <a href=\"https://docs.mql4.com/mql4changes#help\" rel=\"nofollow noreferrer\">cross-version</a> IDE and compiler.</p>\n<p>Just recently I've tried to analyze MetaEditor out of curiosity - the IDE and compiler are statically obfuscated and have anti-debugging measures employed.</p>\n<p>If you like challenges though, probably the first step for you would be attaching the process to a debugger. Here's a little <a href=\"https://gist.github.com/michal-kapala/a1c87bbce3690d15a8b60e4f3136965a\" rel=\"nofollow noreferrer\">gist</a> with my attempt that you can start with.</p>\n</div>",
            "votes": "0",
            "user": "mimak",
            "time": "Jun 18, 2023 at 11:09",
            "is_accepted": false,
            "comments": [
                {
                    "user": "The Coder",
                    "text": "<span class=\"comment-copy\">Yeah that is one option. I was also thinking about analyzing the terminal.exe file which may give hints as well. However once modifying the call stacks seems like terminal.exe doesn't want to open metatrader5. The thing with analyzing metaeditor.exe is that metaeditor.exe is not responsible for loading the EA and making webrequests right? That was would be the responsibility of terminal.exe. I am also using x64dbg</span>",
                    "time": null
                },
                {
                    "user": "mimak",
                    "text": "<span class=\"comment-copy\">I believe the terminal runs some kind of VM or an interpreter which executes the bytecode, the editor is mostly interesting because of the compiler. One way or another you will have to bypass anti-debugging, both are protected</span>",
                    "time": null
                },
                {
                    "user": "The Coder",
                    "text": "<span class=\"comment-copy\">I've tried scyllahide however the execution times out when stepping through. Any ideas how to get through the anti-debugging. Also how do I modify a string in x64debug. mov rax,qword ptr ss:[rsp+E8] | [rsp+E8]:L\"C:\\\\Program Files\\\\FTMO MetaTrader 5\\\\\"&lt;--- I want to change the path.</span>",
                    "time": null
                },
                {
                    "user": "The Coder",
                    "text": "<span class=\"comment-copy\">After analyzing metaeditor.exe how would I decompile the ex5 file? Some steps would be nice. @mimak</span>",
                    "time": null
                },
                {
                    "user": "mimak",
                    "text": "<span class=\"comment-copy\">@TheCoder use <a href=\"https://github.com/x64dbg/Scylla\" rel=\"nofollow noreferrer\">Scylla</a> to make a memory dump of the process and analyze it with <a href=\"https://ghidra-sre.org/\" rel=\"nofollow noreferrer\">Ghidra</a> or a different decompiler of choice</span>",
                    "time": null
                }
            ]
        }
    ]
}