{
    "title": "Grundfos Firmware",
    "link": "https://reverseengineering.stackexchange.com/questions/26933/grundfos-firmware",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to understand the firmware of a Grundfos CIM 500 product.\nThe CIM 500 is a control module for grundfos pumps which uses a web interface.</p>\n<p>From binwalk I have found that it is running eCos, but I have a very hard to to extract any information, file structure, ram file, disk images or anything of that matter.</p>\n<p>I was hoping someone here with more experience with firmware analysis could give some help with what this firmware is, if it is compressed/encrypted, what kind of architecture the module is running, and how i could get more information from it.</p>\n<p>I have viewed it in a hex editor and found traces of HTML, but no files or informative file headers.</p>\n<p>The firmware is available on the Grundfos software page (<a href=\"https://www.grundfos.com/dk/support/software\" rel=\"nofollow noreferrer\">https://www.grundfos.com/dk/support/software</a>), or directly here:</p>\n<p><a href=\"https://www.grundfos.com/content/dam/local/da-dk/page-assets/support/software/documents/firmware-CIM500-V06.18.07-gdk-da.zip\" rel=\"nofollow noreferrer\">https://www.grundfos.com/content/dam/local/da-dk/page-assets/support/software/documents/firmware-CIM500-V06.18.07-gdk-da.zip</a></p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "213",
    "tags": [
        "firmware",
        "binwalk"
    ],
    "user": "Thue Iversen",
    "time": "Feb 3, 2021 at 14:33",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Looking at the entropy of a file's contents is a good way to understand whether some/all of it is compressed or encrypted.  Any good compression or encryption will result in entropy in the region of 95% or higher.</p>\n<p>For this firmware, <code>binwalk -E</code> shows large areas with entropy in the 70-85% range (probably code), with other much lower (likely data) and only small areas with higher (the surrounding data suggests this is certificates.)</p>\n<p>To identify the architecture, <code>binwalk -A</code> can sometimes help.  However, in this case, it doesn't find anything it can identify.</p>\n<p>However, looking through the data I found, at offset <code>0x1F4134</code>, a list of opcodes. Googling for some of the more unusual looking ones (FLUSHDA, MULXUU, CALLR) returns a list of results all mentioning the <a href=\"https://en.wikipedia.org/wiki/Nios_II\" rel=\"nofollow noreferrer\">Nios II</a> architecture.  This architecture is for Altera FPGAs.</p>\n<p>Similarly, googling for an decent quality image of a CIM 500 shows a chip with what looks very much like an Altera FPGA's markings (albeit mostly covered with a sticker.)</p>\n<hr/>\n<p><strong>Edit:</strong> I've done a further check to confirm the architecture.</p>\n<p>Nios II encodes the <code>ret</code> (return) instruction as <code>F800283A</code>.\nThe appears many times through the firmware file (in little-endian byte order.)</p>\n<p>The first occurrence is at offset <code>0009D3B8</code>, with offset <code>0009D100</code> being a plausible start for the code.</p>\n</div>",
            "votes": "1",
            "user": "Ian Cook",
            "time": "Feb 5, 2021 at 14:47",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Thue Iversen",
                    "text": "<span class=\"comment-copy\">Thank you so much, this give a lot of further research we could perform.</span>",
                    "time": null
                }
            ]
        }
    ]
}