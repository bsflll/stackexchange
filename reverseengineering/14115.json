{
    "title": "why 'ni' goes into function in Android gdb debugging?",
    "link": "https://reverseengineering.stackexchange.com/questions/14115/why-ni-goes-into-function-in-android-gdb-debugging",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm debugging android JNI with gdb without source code. I use <code>ni</code> command to step over arm asm instructions. I suppose <code>ni</code> is <code>step over</code>, but it still goes into function like <code>BL xxxx</code>, and I have to use <code>finish</code> to get back.</p>\n<p>I tried <code>ni</code> and <code>si</code>, seems no difference, why? </p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "308",
    "tags": [
        "android",
        "gdb"
    ],
    "user": "aj3423",
    "time": "Dec 5, 2016 at 10:14",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You don't have the source code, so I assume you don't have any debug information with your binary either. This is just a guess, but without them, I suppose your BL is seen as a mere branch, not a subroutine call. For further explanation, see <a href=\"https://stackoverflow.com/questions/18841603/skip-library-function-in-arm-assembly-gdb/18866424#comment27821846_18847660\">this comment</a>.</p>\n</div>",
            "votes": "1",
            "user": "Community",
            "time": "May 23, 2017 at 12:37",
            "is_accepted": true,
            "comments": []
        }
    ]
}