{
    "title": "What checksum is Super Smash Bros. Wii U using?",
    "link": "https://reverseengineering.stackexchange.com/questions/12303/what-checksum-is-super-smash-bros-wii-u-using",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>When you save a screenshot in <em>Super Smash Bros.</em> for Wii U on the SD card it writes to, it makes two files: a <code>.JPG</code> and a <code>.BIN</code> file. Both these files are in the format of <code>HNI_XXXX.<em>EXTENTION</em></code>, where <em>XXXX</em> is the number of the screenshot. I believe that the <code>.BIN</code> file is (at least in part) a checksum to verify that the images are not edited (outside of the game), because modifying the <code>.JPG</code> file in any way will cause the game to refuse to recognize it. </p>\n<p>Since the <code>.BIN</code> file is always 32-bytes exactly, I've tried using some of the common 265-bit checksums like SHA-256, and GOST. But none have ever matched up what has been contained in the <code>.BIN</code> files. </p>\n<p>I've included three sets of images and their respective checksums in a <a href=\"http://www.speedyshare.com/tuyB3/snapshots.zip\" rel=\"nofollow\">convenient zip file</a>, so please take a look.</p>\n<p>Does anyone have any ideas what checksum <em>Super Smash Bros.</em> might be using? If you need any more details I'd be more than happy to provide them.</p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "250",
    "tags": [
        "hash-functions"
    ],
    "user": "Miguel",
    "time": "Mar 30, 2016 at 4:54",
    "comments": [
        {
            "user": "0xec",
            "text": "<span class=\"comment-copy\">The sha-256 checksums of the image does not match with the ones you provided. Perhaps you may like to upload the images to a service which does not alter them.</span>",
            "time": null
        },
        {
            "user": "Jason Geffner",
            "text": "<span class=\"comment-copy\">I'm voting to close this as off-topic because this is not a question about reverse engineering. If the only two datapoints are a data file and a digest, then there's nothing to reverse engineer. If you'd like to share the code for the software that generates the digest, then feel free to re-open this question.</span>",
            "time": null
        },
        {
            "user": "Miguel",
            "text": "<span class=\"comment-copy\">@ExtremeCoders Sorry about that. I've added a link to download a zip file containing them all. Hopefully they didn't get messed up this time. :)</span>",
            "time": null
        }
    ],
    "answers_data": []
}