{
    "title": "Patching a class file inside Jar using bytecode",
    "link": "https://reverseengineering.stackexchange.com/questions/18434/patching-a-class-file-inside-jar-using-bytecode",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I was trying to patch an application, but the application is required to exact same class size as the original one but editing class file with JByteMod, Recaf or whatsoever always changes the class file size. Is it possible to patch class file without changing its size? I have one older patch which I got from Internet &amp; its have the exact same thing.</p>\n<p>I was trying to patch the application by putting static byte array instead of the private static byte (to bypass some restriction).</p>\n<p>How can I do this without changing the size of the class file?\nThe jar file is required Java 9.0.4 to run &amp; I have tried <a href=\"https://i.sstatic.net/ZnyyK.jpg\" rel=\"nofollow noreferrer\">JBE bytecode deitor</a>: <a href=\"http://set.ee/jbe/\" rel=\"nofollow noreferrer\">http://set.ee/jbe/</a> but it was not able to open the class file.</p>\n<p><a href=\"https://i.sstatic.net/ZnyyK.jpg\" rel=\"nofollow noreferrer\"><img alt=\"The older version crack &amp; original file comparison\" src=\"https://i.sstatic.net/ZnyyK.jpg\"/></a></p>\n<p><a href=\"https://i.sstatic.net/0pc6o.jpg\" rel=\"nofollow noreferrer\"><img alt=\"Unmodified private bytes\" src=\"https://i.sstatic.net/0pc6o.jpg\"/></a></p>\n<p><a href=\"https://i.sstatic.net/ca0pz.jpg\" rel=\"nofollow noreferrer\"><img alt=\"Want to change to array byte like this\" src=\"https://i.sstatic.net/ca0pz.jpg\"/></a></p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "5k",
    "tags": [
        "java",
        "patching",
        "patch-reversing",
        "byte-code"
    ],
    "user": "sks15",
    "time": "Jun 3, 2018 at 12:29",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Can you post the classfile, as well as the changes you want made to it? Depending on the changes, it should be possible. Obviously if you want to add a lot of new code or data, that won't be possible without changing the size, unless you delete a corresponding about of existing code from the classfile.</p>\n<p>Anyway, <a href=\"https://github.com/Storyyeller/Krakatau\" rel=\"nofollow noreferrer\">Krakatau</a> is capable of editing a classfile without changing the size. In particular, if you disassemble a classfile in roundtrip mode and reassemble it without modification, you'll get the exact classfile back. However, it still requires knowledge of bytecode and the classfile format to understand which changes you can make without affecting the size, or which things to delete to balance out increases in size.</p>\n<p>That being said, this is likely not a fruitful approach. If the jar is checking classfile size, it is likely doing other integrity checks as well. Your best bet is to just find the integrity checks and remove them.</p>\n</div>",
            "votes": "3",
            "user": "Antimony",
            "time": "Jun 3, 2018 at 13:15",
            "is_accepted": true,
            "comments": [
                {
                    "user": "sks15",
                    "text": "<span class=\"comment-copy\">Here is the link to those class files - <a href=\"https://www80.zippyshare.com/v/TsPZe3M8/file.html\" rel=\"nofollow noreferrer\">www80.zippyshare.com/v/TsPZe3M8/file.html</a> I need to delete the private static bytes &amp; include new array bytes. The old already patch file is also there which bytes need to replicate in the new classes. My request to you please let me know how can I change it by myself so that I can do it in later onwards.</span>",
                    "time": null
                },
                {
                    "user": "Antimony",
                    "text": "<span class=\"comment-copy\">What bytes do you need to add? I can see if I can do it and then post step by step how I did it.</span>",
                    "time": null
                },
                {
                    "user": "sks15",
                    "text": "<span class=\"comment-copy\">Thanks for your suggestion to use Krakatau &amp; I disassemble the class files &amp; done the changes &amp; then assemble the file again. It works for only one class file. Though the other two class file changes the file size. I have noticed one thing that disassembling original class file with \"Krakatau\" &amp; assemble it back make the changes. &amp; running it with \"javap -c\" shows lots of difference. Attachment link - [www7.zippyshare.com/v/diNNVsTz/file.html]</span>",
                    "time": null
                },
                {
                    "user": "Antimony",
                    "text": "<span class=\"comment-copy\">@Subhashish The default settings are designed for convenience. If you want to ensure there are no changes at the binary level, use <code>-roundtrip</code> when disassembling.</span>",
                    "time": null
                },
                {
                    "user": "sks15",
                    "text": "<span class=\"comment-copy\">Your suggestion solved the problem. Thank you. The program is working fine now but after 20min the software crash automatically, because heap dump shows memory leak but I don't able to fix it. can you please take a look at this program &amp; rectify the issue if possible. I'll be highly thankful to you. Link - www25.zippyshare.com/v/i6aYoIso/file.html</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Depending on your use case and how you are running your jar file, if you can run the file you may want to create a java agent that hooks into your JVM (<code>java -jar -javaagent:YourAgent.jar Target.jar</code>) and you could use <a href=\"http://asm.ow2.io/asm4-guide.pdf\" rel=\"nofollow noreferrer\">ASM</a> or <a href=\"http://jboss-javassist.github.io/javassist/tutorial/tutorial.html\" rel=\"nofollow noreferrer\">Javassist</a> libraries to alter the byte code at runtime.</p>\n<p>For adding a field or altering it in ASM you could override your <code>visitField</code> or <code>visitMethod</code> functions in your transformer class that inherits from <code>ClassVisitor</code>.  In the <code>visitField</code> method you could create a new field or alter the values of the variables without modifying the actual class files.</p>\n</div>",
            "votes": "2",
            "user": "tr4nc3",
            "time": "Jun 6, 2018 at 18:30",
            "is_accepted": false,
            "comments": []
        }
    ]
}