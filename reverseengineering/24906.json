{
    "title": "static analysis for identifying backdoors",
    "link": "https://reverseengineering.stackexchange.com/questions/24906/static-analysis-for-identifying-backdoors",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am doing a research in identifying backdoors in windows .exe files. Currently I found some methods to detect.\n1.String search in .exe\n2.find Reffrence .dll and win32 Api calls using import table</p>\n<p>What are the other static analysis methods to detect backdoors?</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "53",
    "tags": [
        "static-analysis",
        "executable"
    ],
    "user": "EsH Harshana",
    "time": "May 3, 2020 at 16:28",
    "comments": [
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">It depends on your definition of a backdoor. Example: Is intentionally inserted vulnerability a backdoor you are trying to detect ?</span>",
            "time": null
        },
        {
            "user": "EsH Harshana",
            "text": "<span class=\"comment-copy\">yes.Reverse shells,etc</span>",
            "time": null
        }
    ],
    "answers_data": []
}