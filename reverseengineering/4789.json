{
    "title": "How does the OS distinguish between executable types",
    "link": "https://reverseengineering.stackexchange.com/questions/4789/how-does-the-os-distinguish-between-executable-types",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Executable files created through managed framework like .Net have <code>.exe</code> extension whereas application created through languages like C++ also has <code>.exe</code> extension. How does the OS knows whether to run the application through managed framework like .Net or directly ?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "258",
    "tags": [
        "windows",
        "executable"
    ],
    "user": "ZafarYousafi",
    "time": "Jul 26, 2014 at 2:42",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The COM Descriptor Data Directory (DD 14) is used to lookup the COR20 structure. This is how you can tell the difference between a managed executable and a native executable.</p>\n<p>See <a href=\"https://reverseengineering.stackexchange.com/questions/1614/determining-if-a-file-is-managed-code-or-not/\">this question</a> for more information. Also see this introduction to the <a href=\"http://www.ntcore.com/files/dotnetformat.htm\" rel=\"nofollow noreferrer\">dotnet file format</a> for an overview.</p>\n</div>",
            "votes": "7",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": true,
            "comments": []
        }
    ]
}