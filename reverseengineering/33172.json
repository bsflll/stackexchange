{
    "title": "How the 'Secure Application ROM (SAROM)' works ? and how can be decrypted?",
    "link": "https://reverseengineering.stackexchange.com/questions/33172/how-the-secure-application-rom-sarom-works-and-how-can-be-decrypted",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There is a protection product that i'm interested in analyzing and breaking it called <a href=\"https://promon.co/security-news/promon-announces-secure-application-rom-sarom\" rel=\"nofollow noreferrer\">SAROM</a> that encrypts sensitive information that stored in the client-side such as API Keys/hardcoded stuff. I tried to understand it from an <a href=\"https://fastupload.io/3aaf0f90931f4d09\" rel=\"nofollow noreferrer\">example</a> that uses <a href=\"https://promon.co/security-news/promon-announces-secure-application-rom-sarom\" rel=\"nofollow noreferrer\">SAROM</a>, which is an iOS app using <a href=\"https://promon.co/security-news/promon-announces-secure-application-rom-sarom\" rel=\"nofollow noreferrer\">SAROM</a> as a data protection and <a href=\"https://github.com/securing/IOSSecuritySuite\" rel=\"nofollow noreferrer\">IOSSecuritySuite</a> as an anti-(jb/reversing/debugging/etc..) protection, but I couldn't. There are <a href=\"https://fastupload.io/ac24d61c314a8cb8\" rel=\"nofollow noreferrer\">two mach-o binaries</a> inside the <a href=\"https://fastupload.io/3aaf0f90931f4d09\" rel=\"nofollow noreferrer\">example</a>, the <strong>core</strong> which is a framework binary has the <a href=\"https://promon.co/security-news/promon-announces-secure-application-rom-sarom\" rel=\"nofollow noreferrer\">SAROM</a> implementation, and the <strong>bundle</strong> that calling the <a href=\"https://promon.co/security-news/promon-announces-secure-application-rom-sarom\" rel=\"nofollow noreferrer\">SAROM</a> call which is <code>+[NSData dataFromSecureAppROMItem:]</code> (located in <strong>core</strong> mach-o binary file). Now where are the encrypted data ? They are located in the <strong>5341524f4d</strong> folder in the example. i uploaded it <a href=\"https://fastupload.io/675d1369e43eed0f\" rel=\"nofollow noreferrer\">here</a>, the <code>+[NSData dataFromSecureAppROMItem:]</code> method is the call that responsible of decrypting it.</p>\n<p>P.S: i tried calling it using frida <code>ObjC.classes.NSData.dataFromSecureAppROMItem_(ObjC.classes.NSString)</code> but didn't work, probably because of how <code>+[NSData dataFromSecureAppROMItem:]</code> it works (the argument is the NSString's <code>self</code>: so probably the passed data has been accessed in an unusual way such as accessing it from an outside-the-method pointer) + <a href=\"https://github.com/securing/IOSSecuritySuite\" rel=\"nofollow noreferrer\">IOSSecuritySuite</a> making it more harder dynamically but the main thing is how <a href=\"https://promon.co/security-news/promon-announces-secure-application-rom-sarom\" rel=\"nofollow noreferrer\">SAROM</a> works and it will be very helpful for understanding to write a script decrypting the <a href=\"https://fastupload.io/675d1369e43eed0f\" rel=\"nofollow noreferrer\">data</a></p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "49",
    "tags": [
        "static-analysis",
        "encryption",
        "ios",
        "encodings",
        "mach-o"
    ],
    "user": "IVs",
    "time": "Aug 20, 2024 at 15:53",
    "comments": [],
    "answers_data": []
}