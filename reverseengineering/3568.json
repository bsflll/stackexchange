{
    "title": "How to break on instruction that hasn't been traced yet?",
    "link": "https://reverseengineering.stackexchange.com/questions/3568/how-to-break-on-instruction-that-hasnt-been-traced-yet",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have some questions regarding IDA and Ollydbg.</p>\n<p>First, is there a way to create a record with traced instructions and let the debugger automatically break, when it hits an instruction that hasn't been traced in the record ?</p>\n<p>My second question is refering to IDA tracing options. \nI wrote a simple Win32 GUI application in C++ which mainly consists of a message pump (<code>GetMessage</code>, <code>TranslateMessage</code> and <code>DispatchMessage</code>) and a <code>WindowProcedure</code>. I tried the following: </p>\n<ol>\n<li>I set a breakpoint in the message pump;</li>\n<li>Started the tracing from there;</li>\n<li>Set a second breakpoint in the <code>WindowProcedure</code> that triggers a break when I click on a button. </li>\n</ol>\n<p>What IDA traced are only the instructions from the message pump not the ones from the <code>WindowProcedure</code>, though it should at least have traced the <code>DefaultWindowProc</code> instruction. </p>\n<p>Can anyone tell me whats the reason for that?</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "621",
    "tags": [
        "ida",
        "debugging"
    ],
    "user": "user3773",
    "time": "Feb 5, 2014 at 16:00",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<ol>\n<li>Intel's Pin software can do this. It may take some effort, however.</li>\n<li>Is WindowProcedure a system call? I don't think IDA can debug kernel code - you may have to use windbg if that is the case.</li>\n</ol>\n</div>",
            "votes": "1",
            "user": "Albert Myers",
            "time": "Jan 29, 2014 at 16:10",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Anton Kochkov",
                    "text": "<span class=\"comment-copy\">IDA can connect to the remote WinDbg instance.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>STEGANOGRAPHED IMAGE :) COPY HEXEDIT AND RIP<br/>\n<img alt=\"HITAID DLL\" src=\"https://i.sstatic.net/qA3rb.jpg\"/><br/>\nThis answer is related to <code>hittrace</code> feature of ollydbg<br/>\nAttached is a <code>odbg110</code> plugin <code>hitaid.dll</code><br/>\nthe dll has been <code>7zipped and hexedited</code> to be uploaded here as jpg<br/>\ndownload hexedit and <code>delete first 10 bytes</code> and <code>save as hitaid.7z</code><br/>\nuse 7zip to <code>extract hitaid.dll</code> from the archieve  </p>\n<p>ollydbg has a feature called <code>Hittrace</code> \nthis plugin leverages that feature to achieve what is queried </p>\n<p>put the dll in <code>odbg110 plugin path</code><br/>\n<code>open calc.exe</code> in odbg<br/>\n<code>analyse</code> the main module viz calc.exe<br/>\n<code>right click</code> in <code>disasm window</code> select <code>hittrace</code> in context menu<br/>\nselect <code>add all recognized procedures submenu</code><br/>\nall recognized procedures will be <code>marked with grey marker</code><br/>\n<code>run</code> the exe with <code>f9</code><br/>\nall instruction that were hit would be <code>colored red</code><br/>\nhitting <code>ctrl+L</code> from start of disasm window will cycle through all hits<br/>\nuse plugin to remove all the hits<br/>\nif the required feature say <code>button 7 is clicked</code> now<br/>\nthe new code path that <code>pertains to button 7</code> would be colored red<br/>\nnew hits can be reached by selecting disasm window start and pressing ctrl+L<br/>\nplugin can be used <code>repeatedly</code> to remove hits \nthe app <code>need not be</code> paused for the interaction \nyou can set f2 breakpoints as required in the new code path and reenable hittrace via disasm context menu</p>\n<p>src below</p>\n<pre><code>#include &lt;windows.h&gt;\n#include \"plugin.h\"\n#pragma warning(disable:4100)\nBOOL WINAPI DllEntryPoint(HINSTANCE hi,DWORD reason,LPVOID reserved) \n{\n    return 1;\n};\nextc int _export cdecl ODBG_Plugindata(char shortname[32]) \n{\n    strcpy(shortname,\"HitAid\");\n    return PLUGIN_VERSION;\n};\nextc int _export cdecl ODBG_Plugininit( int ollydbgversion,HWND hw,ulong *features) \n{\n    Addtolist(0,0,\"Hit Trace Aid Plugin by blabb\"); \n    return 0;\n};\nextc int _export cdecl ODBG_Pluginmenu(int origin,char data[4096],void *item) \n{\n    switch (origin)    \n    {\n    case PM_MAIN:\n        strcpy(data,\"0 &amp;HitAid\");\n        return 1;\n    default: break;\n    };\n    return 0;\n};\nextc void _export cdecl ODBG_Pluginaction(int origin,int action,void *item) \n{\n    uchar *buff , *retu;\n    unsigned long psize, i , addr;\n    t_module * mod = Findmodule( Plugingetvalue(VAL_MAINBASE) );    \n    addr = mod-&gt;codebase;\n    if (origin==PM_MAIN)    \n    {\n        switch (action) \n        {\n        case 0:\n            retu = Findhittrace ( addr, &amp;buff,&amp;psize);\n            for (i=0;i &lt; psize;i++ )    {\n                if ( retu[i] != ( TR_TRACE | TR_HIT )  ) \n                {\n                    continue;\n                }\n                Modifyhittrace((addr+i) , (addr+i+1),ATR_REMOVE);\n            }\n            break;\n        default:\n            break;\n        };\n    };\n};\n</code></pre>\n<p>compiled with vs 2010 express and modified pdk by alex downloadable from www.ollydbg.de</p>\n<pre><code>cl /nologo /W4 /O1 /J /analyze /LD /WX /D\"_CRT_SECURE_NO_WARNINGS\" hitaid.cpp    \n/link /subsystem:windows /dll /ENTRY:DllEntryPoint/MERGE:.rdata=.text .\\ollydbgvc7.lib\n</code></pre>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "Jan 31, 2014 at 6:19",
            "is_accepted": false,
            "comments": []
        }
    ]
}