{
    "title": "How to create a IDA FLIRT signature for a PPC library?",
    "link": "https://reverseengineering.stackexchange.com/questions/8897/how-to-create-a-ida-flirt-signature-for-a-ppc-library",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'd like to create a IDA FLIRT signature for the following PPC uClibc library:</p>\n<pre><code>libuClibc-0.9.15.so: ELF 32-bit MSB shared object, PowerPC or cisco 4500, version 1 (SYSV), dynamically linked, for GNU/Linux 2.0.0, stripped\n</code></pre>\n<p>I got the FLAIR tools from hex-rays but didn't manage to create the .sig file.\nIf I understood correctly, a <code>.pat</code> file must be created first, from which a <code>.sig</code> file can be created then. I tried <code>./pelf.exe libuClibc-0.9.15.so</code>, but this only returned an 'invalid input file' error.</p>\n<p>How can I create a FLIRT signature from this library?</p>\n</div>",
    "votes": "5",
    "answers": 1,
    "views": "6k",
    "tags": [
        "ida",
        "tools",
        "elf",
        "static-analysis",
        "flirt-signatures"
    ],
    "user": "Zulakis",
    "time": "May 15, 2015 at 12:42",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>AFAIK, you can only create the <code>.pat</code> files from statically linked libraries using the method you describe. It appears your file is dynamically linked (that would explain the 'invalid input file' message)</p>\n<p>You can give a try to <a href=\"https://github.com/fireeye/flare-ida/blob/master/python/flare/idb2pat.py\" rel=\"nofollow\">this IDAPython plugin</a>. A good explanation from its author can be found <a href=\"https://www.fireeye.com/blog/threat-research/2015/01/flare_ida_pro_script.html\" rel=\"nofollow\">here</a></p>\n<p>Good luck!</p>\n</div>",
            "votes": "2",
            "user": "Carlos Garcia",
            "time": "May 15, 2015 at 17:57",
            "is_accepted": true,
            "comments": []
        }
    ]
}