{
    "title": "Right way to reverse a VM",
    "link": "https://reverseengineering.stackexchange.com/questions/26593/right-way-to-reverse-a-vm",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm currently reversing a virtualized sample  that uses a custom <strong>VM bytecode</strong>. After defeating the anti-disassembly tricks I'm finally faced with the <code>vm_dispatch</code> function. I have to figure out the custom vm opcodes in order to determine what the program actually does. Unlike most other vms, there are no <code>vftables</code> which makes it very hard for me to reverse since there are more than 100 virtual handlers which are not defined as functions (All of the handlers are defined in <code>loc_XXXX</code> code blocks. Example image is below).</p>\n<p><a href=\"https://i.sstatic.net/T5U24.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/T5U24.png\"/></a></p>\n<p>Trying to decompile the <code>vm_dispatch</code> function leaves me with this:</p>\n<pre><code>  ...\n  a lot of local variable initialization\n  ...\n  assign vm handlers\n  ...\n  bytecode_array[53] = &amp;loc_4041A3;\n  regs-&gt;VIP = 0x6000;  // virtual ip\n  memcpy(bytecode_array + regs-&gt;VIP, bytecode, bytecode_size);\n  regs-&gt;R5 = -1;\n  vm_code = *(bytecode_array + regs-&gt;VIP++);\n  __asm { jmp     [ebp+eax*4+vm_handler_array]; jump to the appropriate handler }// switch jmp\n}\n</code></pre>\n<p>I know it's not fully decompiled because there are more than 100 blocks, each executing a specific vm bytecode. None of that is reflected on the decompiler output.</p>\n<p>It's really time-consuming to go through each <code>loc_XXXX</code> without being able to define VM specific structures like <code>VM</code> and <code>REG</code> and to read the low-level assembly. My question is, is there any:</p>\n<ul>\n<li>Way to convert <code>loc_XXXX</code> code blocks to functions to that I can decompile the code and create structures?</li>\n<li>Right approach to read the assembly / make it easier?</li>\n</ul>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "602",
    "tags": [
        "ida",
        "disassembly",
        "decompile",
        "virtualizers",
        "vm"
    ],
    "user": "rustam Shirinov",
    "time": "Dec 20, 2020 at 12:20",
    "comments": [],
    "answers_data": []
}