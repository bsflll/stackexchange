{
    "title": "Retrieve all parameters of specific function: How to automate",
    "link": "https://reverseengineering.stackexchange.com/questions/30037/retrieve-all-parameters-of-specific-function-how-to-automate",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to reverse engineer.NET binary with dnspy. I have a decryption routine that is used to display useful strings. It takes one integer value as a parameter and uses it in the decryption process, I wrote a script to decrypt one string per value.</p>\n<p>This routine is called many times. I want to retrieve all integer values passed to this function to decrypt all strings.</p>\n<p>How to automate this process using python for example?</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "106",
    "tags": [
        "decryption",
        ".net",
        "automation",
        "dnspy"
    ],
    "user": "Raafat",
    "time": "Feb 13, 2022 at 4:12",
    "comments": [
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">why not simply brute force for i in range(0,1,200,1): decrypte(i)</span>",
            "time": null
        },
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">you could probably also script it in dnSpy, but not in python by C# (via C# interactive?)</span>",
            "time": null
        },
        {
            "user": "Raafat",
            "text": "<span class=\"comment-copy\">@blabb Thanks for replying but these values are randomly hardcoded and if I pass a wrong value the decryption will fail.</span>",
            "time": null
        },
        {
            "user": "Raafat",
            "text": "<span class=\"comment-copy\">@Paweł Łukasik Could you explain more! I just want all references to this function to get all passed values.</span>",
            "time": null
        },
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">brute force is by nature letting something fail intentionally and finding all those which does not fail</span>",
            "time": null
        }
    ],
    "answers_data": []
}