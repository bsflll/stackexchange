{
    "title": "How can I get classes from \"protected\" JAR file?",
    "link": "https://reverseengineering.stackexchange.com/questions/24561/how-can-i-get-classes-from-protected-jar-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to get classes from JAR file / actually running JVM machine but:</p>\n<p>When I'm trying to open JAR file using for example 7Zip I dont see any classes. After unzip Manifest file is empty too.</p>\n<p>When I'm trying to \"dump\" classes from running JVM machine, I got \"very funny\" named - empty classes (not really empty, but contains info like \"gtfo\" etc..)</p>\n<p>JD-Gui showed nothing - just nothing.</p>\n<p>Around month ago, when I tried to open it using 7Zip, there was classes with same name, and custom extension.</p>\n<p>What should I do, and what tools do You recommend for actions like this?</p>\n<p>Link: <a href=\"https://drive.google.com/file/d/1qhfEXu-ITQLW1mi55hMqnHmWt9BM5ur3/view\" rel=\"nofollow noreferrer\">https://drive.google.com/file/d/1qhfEXu-ITQLW1mi55hMqnHmWt9BM5ur3/view</a></p>\n<p>EDIT: Every decompiler I tested show info like this:</p>\n<blockquote>\n<p>mv.visitMethodInsn(INVOKESTATIC, \"net/minecraft/client/main/Main\",\n\"\\u0000extends throws try goto 8 \\n 9 * package * + finally return\nstatic * \" float abstract | transient \\n synchronized catch =\nstrictfp transient static extends while final long ! 0 throws &amp; \\n %\ndouble 4 this if const \\n interface ' ^ ~ do 1 ] % ? throws super\nlong\", \"(Ljava/lang/String;)Ljava/lang/String;\", false)</p>\n</blockquote>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "698",
    "tags": [
        "java",
        "decompile"
    ],
    "user": "CospriMalice",
    "time": "Nov 21, 2020 at 1:49",
    "comments": [
        {
            "user": "Antimony",
            "text": "<span class=\"comment-copy\">Those \"very funny\" names are probably the actual names of the classfiles in the JAR</span>",
            "time": null
        },
        {
            "user": "CospriMalice",
            "text": "<span class=\"comment-copy\">But \"extracted\" class names depends on method how I get them. When dumping classes  I got those funny names, but when tried JD-Gui or other \"extractors?\" I got fragments from poems or sth like that: <a href=\"https://i.imgur.com/sL9W6g3.png\" rel=\"nofollow noreferrer\">i.imgur.com/sL9W6g3.png</a></span>",
            "time": null
        },
        {
            "user": "Antimony",
            "text": "<span class=\"comment-copy\">JD-Gui is really unreliable. Trust your zip extractor. Also, I'd recommend checking out the Krakatau disassembler: <a href=\"https://github.com/Storyyeller/Krakatau\" rel=\"nofollow noreferrer\">github.com/Storyyeller/Krakatau</a></span>",
            "time": null
        },
        {
            "user": "CospriMalice",
            "text": "<span class=\"comment-copy\">I got those output when trying to use decompiler and no result in output directory. <a href=\"https://pastebin.com/EGMbeUeN\" rel=\"nofollow noreferrer\">pastebin.com/EGMbeUeN</a>  Diassembler give the same error.</span>",
            "time": null
        },
        {
            "user": "Antimony",
            "text": "<span class=\"comment-copy\">It appears that your Jar file is malformed then. If you upload it, then maybe I can take a look later.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The obfuscator probably used the '\\u0000' \"exploit\".\nThis character is known as NUL terminator and its used for terminate the length of a character string in C/C++.\nAll renamed classes will contain that character, this will confuse tools like 7Zip, WinRar etc..</p>\n<p>Quick explanation:</p>\n<p>=======</p>\n<p>Original file names:</p>\n<ol>\n<li>Main.class</li>\n<li>Main2.class</li>\n<li>Main3.class</li>\n</ol>\n<p>Renamed file names:</p>\n<ol>\n<li>Main.class\\u0000.class -&gt; 7Zip -&gt; <em>Main.class</em> (\\u0000 is the string end so the other characters will be not displayed)</li>\n<li>Main.class\\u0000<strong>2</strong>.class -&gt; 7Zip -&gt; <em>Main.class</em></li>\n<li>Main.class\\u0000<strong>3</strong>.class -&gt; 7Zip -&gt; <em>Main.class</em></li>\n</ol>\n<p>=======</p>\n<p>Try to use <a href=\"https://github.com/TerriblePanda/JByteMod-Reborn\" rel=\"nofollow noreferrer\">https://github.com/TerriblePanda/JByteMod-Reborn</a> or <a href=\"https://github.com/GraxCode/threadtear\" rel=\"nofollow noreferrer\">https://github.com/GraxCode/threadtear</a> to decompile your jar.</p>\n<p>Probable obfuscator used: <a href=\"https://paramorphism.dev/\" rel=\"nofollow noreferrer\">https://paramorphism.dev/</a></p>\n</div>",
            "votes": "3",
            "user": "Yennefer",
            "time": "Sep 28, 2020 at 21:50",
            "is_accepted": false,
            "comments": [
                {
                    "user": "CospriMalice",
                    "text": "<span class=\"comment-copy\">wow, in my opinion it can be this one. I will test it in ~3days</span>",
                    "time": null
                },
                {
                    "user": "Princekin",
                    "text": "<span class=\"comment-copy\">Anyway, can you provide the jar?</span>",
                    "time": null
                },
                {
                    "user": "CospriMalice",
                    "text": "<span class=\"comment-copy\">Link was in comments, but added it and it's in post now</span>",
                    "time": null
                },
                {
                    "user": "Princekin",
                    "text": "<span class=\"comment-copy\">I can confirm my theory. The classes starts with \\u0000.</span>",
                    "time": null
                }
            ]
        }
    ]
}