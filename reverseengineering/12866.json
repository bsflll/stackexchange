{
    "title": "Is there a tool to scan for code / functions that can account for different compilers?",
    "link": "https://reverseengineering.stackexchange.com/questions/12866/is-there-a-tool-to-scan-for-code-functions-that-can-account-for-different-comp",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a library DLL and a program that uses the library (statically; the DLL is separate). </p>\n<p>My goal is to find a bunch of the functions from the library in the program, but unfortunately, it looks like they were compiled with a different compiler / very different options, making hex scans unsuccessful. Those that I have found via strings / order are different in that the program has a push/pop ebp shell, often uses different registers, and sometimes uses different opcodes, but they accomplish the same thing in the end.</p>\n<p>Are there any tools / techniques that could assist me with finding some of the other functions? In the DLL, of course, the functions are, for the most part, right next to each other, but in the program they are mixed, making it hard to find any functions that don't contain strings.</p>\n</div>",
    "votes": "3",
    "answers": 2,
    "views": "2k",
    "tags": [
        "ida",
        "assembly",
        "disassemblers",
        "hex"
    ],
    "user": "Lupe",
    "time": "Jun 16, 2016 at 17:39",
    "comments": [
        {
            "user": "tmr232",
            "text": "<span class=\"comment-copy\">You can try <a href=\"https://github.com/joxeankoret/diaphora\" rel=\"nofollow noreferrer\">github.com/joxeankoret/diaphora</a>.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There are several tools that achieve this.</p>\n<h2>IDA</h2>\n<p>First, IDA has mechanisms to identify compiler (and compiler properties). That's not a main feature but might provide what you are looking for.\n<code>Options -&gt; Compiler...</code> will open a dialog allowing you to manually set compiler related properties as well as use preconfigured defaults for certain widely used compilers.</p>\n<p>If IDA identified the compiler being used, those values will be populated accordingly when the dialog is opened.</p>\n<p>Here's a screenshot:</p>\n<p><a href=\"https://i.sstatic.net/oEJtu.png\" rel=\"nofollow noreferrer\"><img alt=\"IDA's compiler options dialog\" src=\"https://i.sstatic.net/oEJtu.png\"/></a></p>\n<h2>PEiD</h2>\n<p><a href=\"https://tuts4you.com/download.php?view.398\" rel=\"nofollow noreferrer\">PEiD</a> is one of the most widely known and used packer detection tools. It has multiple plugins and additional downloadable signatures. One of the features it (as many packer detectors) has is compiler identification.</p>\n<p><a href=\"https://i.sstatic.net/tcOJA.png\" rel=\"nofollow noreferrer\"><img alt=\"PEiD\" src=\"https://i.sstatic.net/tcOJA.png\"/></a></p>\n<h2>Detect It Easy</h2>\n<p><a href=\"http://ntinfo.biz/\" rel=\"nofollow noreferrer\">Detect It Easy</a> (AKA DiE) is another very advanced packer detection with very good compiler detection signatures and algorithms. While PEiD felt a bit abandoned, DiE still gets developer attention.</p>\n<p><a href=\"https://i.sstatic.net/D0FlP.jpg\" rel=\"nofollow noreferrer\"><img alt=\"DiE\" src=\"https://i.sstatic.net/D0FlP.jpg\"/></a></p>\n<h2>Language 2000</h2>\n<p>Unlike other tools mentioned here, <a href=\"https://farrokhi.net/language/\" rel=\"nofollow noreferrer\">Language 2000</a> is an old (but functional) tool built specifically for compiler detection. I've never used it but it is supposed to be good.</p>\n<p><a href=\"https://i.sstatic.net/JMuC8.png\" rel=\"nofollow noreferrer\"><img alt=\"Language 2000\" src=\"https://i.sstatic.net/JMuC8.png\"/></a></p>\n<h2>Other packer detectors</h2>\n<p>Most packer detection tools have at least some kind of compiler detection capabilities, so I'm also including a <a href=\"http://www.malware-analyzer.com/packer-analysis-detection\" rel=\"nofollow noreferrer\">list</a> of packer detection tools.</p>\n</div>",
            "votes": "2",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I think <a href=\"https://github.com/cea-sec/Sibyl\" rel=\"nofollow noreferrer\">Sibyl</a> could help you.</p>\n<p>It is a function divination tool. The idea is to identify the side effects of functions. That way, identification is independent of the used implementation.</p>\n</div>",
            "votes": "0",
            "user": "W. Bruneau",
            "time": "Nov 21, 2016 at 8:11",
            "is_accepted": false,
            "comments": []
        }
    ]
}