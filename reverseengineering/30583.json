{
    "title": "Inject script into Dex-Protected app",
    "link": "https://reverseengineering.stackexchange.com/questions/30583/inject-script-into-dex-protected-app",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've seen scripts like :</p>\n<ol>\n<li><a href=\"https://github.com/hluwa/frida-dexdump\" rel=\"nofollow noreferrer\">https://github.com/hluwa/frida-dexdump</a>\n<a href=\"https://github.com/apkunpacker/DexDumper\" rel=\"nofollow noreferrer\">https://github.com/apkunpacker/DexDumper</a></li>\n</ol>\n<p>that can extract the Dex files but what I want is to inject into running app and identified the related class to modify is that possible?</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "297",
    "tags": [
        "android"
    ],
    "user": "Nederealm",
    "time": "Jul 2, 2022 at 3:50",
    "comments": [
        {
            "user": "Mega Tonnage",
            "text": "<span class=\"comment-copy\">I don't believe so, how could you identify the class name without RE'ing the app? .. and what are you trying to inject?</span>",
            "time": null
        },
        {
            "user": "Nederealm",
            "text": "<span class=\"comment-copy\">See the above I used a dumper tool</span>",
            "time": null
        },
        {
            "user": "Mega Tonnage",
            "text": "<span class=\"comment-copy\">Scripts like DexDumper are extracting dex files from memory, injecting some kind of content into process memory is a much more granular task and requires write access, not just read. You would need to gain write access, find an unused portion of memory, inject your content, and then somehow make the application use it. Usually in RE we make changes at the file level, then run the modified file.</span>",
            "time": null
        }
    ],
    "answers_data": []
}