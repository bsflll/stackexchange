{
    "title": "Where to start with iOS debugging?",
    "link": "https://reverseengineering.stackexchange.com/questions/12426/where-to-start-with-ios-debugging",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Long story short, I have always had a jailbroken device, I have written and ported multiple tools to iOS, and have a fair knowledge of objective-C, ROP, and Linux exploitation. I have begun to take an interest in jailbreaking and iOS vulnerabilities. I understand the memory aspects and iOS security architecture, but how do I debug a non-jailbroken device? You can run <code>GDB</code> on a jailbroken device but not normal iOS device. I have read the iOS Hackers Handbook but most of the tools and tricks are outdated now. Also, I know you used to be able to wire a Pod-Gizmo board to get Serial output from an iOS device, is that possible any more? Thanks!</p>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "744",
    "tags": [
        "debugging",
        "debuggers",
        "exploit",
        "ios"
    ],
    "user": "Starwarsfan2099",
    "time": "Apr 12, 2016 at 22:55",
    "comments": [
        {
            "user": "Chris Tsiakoulas",
            "text": "<span class=\"comment-copy\">Start by learning assembly for arm. It will be the most handy tool ever.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In iOS all sandboxing and security are handled by the <strong><a href=\"https://www.theiphonewiki.com/wiki/AppleMobileFileIntegrity\" rel=\"nofollow\">AppleMobileFileIntegrity</a></strong> Kernel Extension</p>\n<p>As wat i know with Pod-Gizmo board you can pass the <code>amfi_get_out_of_my_way</code> boot-arg and with this arg you will disable AppleMobileFileIntegrity so there will be no sandbox or signature checking </p>\n<p>The amfi kext recognizes quite a few boot-args, including:</p>\n<pre><code>PE_i_can_has_debugger (see also patch)\n\namfi_unrestrict_task_for_pid - Allowing the above to proceed even without entitlement\namfi_allow_any_signature - Allowing any digital signature on code, not just Apple's\namfi_get_out_of_my_way - disable amfi\ncs_enforcement_disable - Disable code signing enforcement\ncs_debug - Debug code signing\n</code></pre>\n</div>",
            "votes": "2",
            "user": "Karim H",
            "time": "Jun 2, 2016 at 23:39",
            "is_accepted": false,
            "comments": []
        }
    ]
}