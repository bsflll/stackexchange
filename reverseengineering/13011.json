{
    "title": "Injected instructions hit `bad instruction` exception",
    "link": "https://reverseengineering.stackexchange.com/questions/13011/injected-instructions-hit-bad-instruction-exception",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In the following code, I injected my own instructions to modify third param of <code>sprintf()</code> function, but the process stopped at EXC_BAD_INSTRUCTION. Can anybody tell me what happened in my code?</p>\n<pre><code>0x144502 &lt;+6&gt;:  movw   r0, #0xc70       ; injected code start here\n0x144506 &lt;+10&gt;: movt   r0, #0x8bb3\n0x14450a &lt;+14&gt;: movw   r3, #0x576\n0x14450e &lt;+18&gt;: ldr    r1, [r7]\n0x144510 &lt;+20&gt;: movs   r5, #0x1a\n0x144512 &lt;+22&gt;: add    r5, pc           ; next instruction will jump over 9 instructions\n0x144514 &lt;+24&gt;: bx     r5               ; pc = 0x00144514\n                                        ; r5 = 0x00144530\n0x144516 &lt;+26&gt;: ldr    r1, [r0]\n0x144518 &lt;+28&gt;: ldr    r0, [r2]\n0x14451a &lt;+30&gt;: blx    0x29111c\n0x14451e &lt;+34&gt;: movw   r1, #0x6442\n0x144522 &lt;+38&gt;: movt   r1, #0x18\n0x144526 &lt;+42&gt;: add    r1, pc\n0x144528 &lt;+44&gt;: ldr    r1, [r1]\n0x14452a &lt;+46&gt;: blx    0x29111c\n0x14452e &lt;+50&gt;: mov    r3, r1\n0x144530 &lt;+52&gt;: movw   r1, #0x66a4      ; bx r5 landed here. But r1 has not been loaded\n0x144534 &lt;+56&gt;: movt   r1, #0x15        ; with new value. Why?\n0x144538 &lt;+60&gt;: mov    r2, r0\n0x14453a &lt;+62&gt;: add    r1, pc           ; this instruction never get called\n0x14453c &lt;+64&gt;: mov    r0, r4           ; EXC_BAD_INSTRUCTION raised here\n0x14453e &lt;+66&gt;: blx    __sprintf\n</code></pre>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "assembly",
        "arm"
    ],
    "user": "RyanB",
    "time": "Jul 8, 2016 at 7:31",
    "comments": [
        {
            "user": "Vitaly Osipov",
            "text": "<span class=\"comment-copy\"><a href=\"http://www.embedded.com/electronics-blogs/beginner-s-corner/4024632/Introduction-to-ARM-thumb\" rel=\"nofollow noreferrer\">embedded.com/electronics-blogs/beginner-s-corner/4024632/â€¦</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Looks like you forgot to set bit 0 of the destination address so the CPU switched to ARM mode and tried to execute Thumb instructions as ARM.</p>\n</div>",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Jul 8, 2016 at 8:56",
            "is_accepted": true,
            "comments": [
                {
                    "user": "RyanB",
                    "text": "<span class=\"comment-copy\">Yes, I did forget the bit 0 of the destination address. Thank you for your help.</span>",
                    "time": null
                }
            ]
        }
    ]
}