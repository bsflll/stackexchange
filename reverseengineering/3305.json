{
    "title": "Setting breakpoint on Win32 API does not work in Ollydbg",
    "link": "https://reverseengineering.stackexchange.com/questions/3305/setting-breakpoint-on-win32-api-does-not-work-in-ollydbg",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I attached Ollydbg to a process, and try to set breakpoint on <code>CreateWindowExW</code>. I typed</p>\n<pre><code>bpx CreateWindowExW\n</code></pre>\n<p>in command line. Then I checked the Breakpoints window and found it's totally empty.</p>\n<p>The same thing works smoothly in IDA pro -- I attached IDA pro to the process I'm going to debug, then in \"Modules\" window, I choose <code>user32.dll</code> and right click on <code>CreateWindowExW</code> and choose \"Add breakpoint\".</p>\n<p>Actually, I found setting breakpoint on Win32 API in Ollydbg is very very hard to use. Based on all information I got by Google, I only need to run <code>bpx xxxxx</code> to set this kind of breakpoints, but in fact, it's rarely success. Most of time, no breakpoints were set by this.</p>\n<p>Did I miss something?</p>\n<p>BTW: The process I debugged loaded a lot of DLLs dynamically. Is this the problem?</p>\n</div>",
    "votes": "3",
    "answers": 2,
    "views": "8k",
    "tags": [
        "ollydbg"
    ],
    "user": "Lingfeng Xiong",
    "time": "Dec 28, 2013 at 23:07",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>With input focus on the disassembly pane in the CPU window, press <kbd>Ctrl</kbd>+<kbd>G</kbd>, then type <code>CreateWindowExW</code> to navigate to the first instruction of that function. Then press <kbd>F2</kbd> to set a breakpoint on the first instruction of that function.</p>\n<p>This is all documented very clearly in OllyDbg's help file.</p>\n</div>",
            "votes": "3",
            "user": "Jason Geffner",
            "time": "Dec 28, 2013 at 20:44",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Lingfeng Xiong",
                    "text": "<span class=\"comment-copy\">Thanks for your answer. Your method does worked. However, before I ask this question, I tried my best to search and read related materials including this <a href=\"http://www.ollydbg.de/faq.htm\" rel=\"nofollow noreferrer\">FAQ page</a>. In section 3, it described exactly the method I mentioned above but not yours. Could please tell me the difference between these two methods, and where is the help file you mentioned?</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">The <code>BPX</code> method described in the FAQ appears to set breakpoints on all static <code>CALLs</code> to the target function made from the current module, which is a really bad way to set a breakpoint. You should disregard that part of the FAQ (<code>Alt</code>+<code>F1</code> doesn't do anything in OllyDbg 2.0, anyway). The help file in <a href=\"http://www.ollydbg.de/odbg110.zip\" rel=\"nofollow noreferrer\">ollydbg.de/odbg110.zip</a> is <code>OLLYDBG.HLP</code>; the help file in <a href=\"http://www.ollydbg.de/odbg200.zip\" rel=\"nofollow noreferrer\">ollydbg.de/odbg200.zip</a> is <code>help.pdf</code>.</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">I just noticed @blabb's post below regarding <code>BPX</code> vs. <code>BP</code>. Even so, probably best to just use OllyDbg 2.0 and skip the command line interface.</span>",
                    "time": null
                },
                {
                    "user": "Lingfeng Xiong",
                    "text": "<span class=\"comment-copy\">Thanks for your help. I can only use Ollydbg 1.10 because every time i attach Ollydbg 2.0 to the process I'm debugging will hang both Ollydbg and target process(Ollydbg become no responding when analyzing some modules which used by this process, like user32.dll). Also, Ollydbg 1.10 can only be attached to the target process once -- when I restarted the process I'm debugging, I need to restart Ollydbg too or attaching to target process will hang it, although Ollydbg said it's running. Maybe a bug.. :-(</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>ollydbg command line plugin accepts <code>BP for Address</code> and <code>BPX for labels</code></p>\n<p>so if you require that breakpoint be set in Address use <code>bp CreateWindowExW</code></p>\n<p>if you used bpx and no calls existed plugin will open a search for intermodular calls window for you to manually search for the interested api</p>\n<p>if you have a call like this</p>\n<pre><code>010020ED FF15 A4110001   CALL    NEAR DWORD PTR DS:[&lt;&amp;USER32.CreateWindow&gt;; USER32.CreateWindowExW\n</code></pre>\n<p>plugin will set a break on this call with BPX style \nfor bp style you would need to use <code>bp 10020ED</code></p>\n</div>",
            "votes": "0",
            "user": "blabb",
            "time": "Dec 29, 2013 at 17:25",
            "is_accepted": false,
            "comments": []
        }
    ]
}