{
    "title": "Prevent IDA from jumping to disassembly when debugging with decompiler",
    "link": "https://reverseengineering.stackexchange.com/questions/29614/prevent-ida-from-jumping-to-disassembly-when-debugging-with-decompiler",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've noticed that  whenever I'm single stepping for loops inside IDA hexrays decompiler it'll jump to the disassenbly view, doesn't matter if I step through with F8 ou F7, what gives and can I prevent it?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "317",
    "tags": [
        "ida"
    ],
    "user": "Alexey",
    "time": "Nov 25, 2021 at 3:21",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>IDA’s debugger switches to disassembly when it can’t find a location in the pseudocode which matches the current instruction pointer (IP) value.</p>\n<p>Due to the way compilers optimize code, a single source code line can be spread over several assembly instructions, in some cases non-contiguous. You may even have instructions belonging to different lines intermixed in different order. All this complicates the task of mapping IP values to source or pseudo code lines. This may cause the behavior you are seeing.</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Nov 27, 2021 at 2:51",
            "is_accepted": true,
            "comments": []
        }
    ]
}