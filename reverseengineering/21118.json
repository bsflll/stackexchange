{
    "title": "Can I define custom enum-type to be used in Ghidra as a data type?",
    "link": "https://reverseengineering.stackexchange.com/questions/21118/can-i-define-custom-enum-type-to-be-used-in-ghidra-as-a-data-type",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to learn <a href=\"https://ghidra-sre.org/\" rel=\"noreferrer\">Ghidra</a>. Say, if it generated the following code for loading functions from an array of function names from <code>gpfnCommCtrlAPI</code>:</p>\n<p><a href=\"https://i.sstatic.net/Ym12u.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/Ym12u.png\"/></a></p>\n<p>I was able to retype <code>gpfnCommCtrlAPI</code> into <code>char*[14]</code> which made it quite readable:</p>\n<p><a href=\"https://i.sstatic.net/8wZw8.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/8wZw8.png\"/></a></p>\n<p>But then is it possible to retype <code>g_pfnsUxCtrl</code>, a pointer to an array of function pointers, (possibly with a custom <code>enum</code>) to make it a little bit more readable? Here's an example of how it looks now in case of <code>g_pfnsUxCtrl[7]</code>:</p>\n<p><a href=\"https://i.sstatic.net/RHmDT.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/RHmDT.png\"/></a></p>\n<p>PS. To understand what index <code>7</code> refers to in that case I need to go back to the <code>gpfnCommCtrlAPI</code> array, which may not be immediately available where <code>g_pfnsUxCtrl[7]</code> is used.</p>\n<p>PS2. In that case case, I manually renamed <code>p_comctl32_HandleScrollCmd</code> variable to make it more readable.</p>\n</div>",
    "votes": "10",
    "answers": 1,
    "views": "6k",
    "tags": [
        "windows",
        "binary-analysis",
        "decompilation",
        "static-analysis",
        "ghidra"
    ],
    "user": "c00000fd",
    "time": "Apr 11, 2019 at 6:42",
    "comments": [
        {
            "user": "Biswapriyo",
            "text": "<span class=\"comment-copy\">Which executable file did you analyse?</span>",
            "time": null
        },
        {
            "user": "c00000fd",
            "text": "<span class=\"comment-copy\">@Biswapriyo: <code>comctrl32.dll</code> x86 build from Win10.</span>",
            "time": null
        },
        {
            "user": "Simeon Pilgrim",
            "text": "<span class=\"comment-copy\">that sounds like you want a typedef if you want X to mean g_pfnsUxCtrl[7] unless your want to use the enum to replace the 7</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>you are able to add your own enum type inside <code>Data Type Manager</code>. (Keep in mind to select correct size).</p>\n<p><a href=\"https://i.sstatic.net/eZiOP.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/eZiOP.png\"/></a></p>\n<p><a href=\"https://i.sstatic.net/KwYGP.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/KwYGP.png\"/></a></p>\n<p><a href=\"https://i.sstatic.net/mL58A.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/mL58A.png\"/></a></p>\n<p>Then you should be able to change the type to your newly created enum and everything should be nicely resolved.</p>\n</div>",
            "votes": "3",
            "user": "erexo",
            "time": "Apr 23, 2019 at 9:41",
            "is_accepted": false,
            "comments": [
                {
                    "user": "c00000fd",
                    "text": "<span class=\"comment-copy\">yeah, that's how you define a generic <code>enum</code>. But how would you apply it to the particular example I showed above?</span>",
                    "time": null
                },
                {
                    "user": "erexo",
                    "text": "<span class=\"comment-copy\">if that proc list is relatively short with const count and you really would like custom names instead of integers, then you can create a custom type with lots of integers of different names. Then you'll have a single object with couple of variables and each of those will have a custom name. And if those addresses are constant which is kinda stupid but you can look where you land with that, you can try to set <code>p_comct132_HandleScrollCmd</code> to enumType and <code>g_pfnsUxCtrl</code> to pointer to enumType. Both solutions are silly, in your case I'd just memorize those integers</span>",
                    "time": null
                }
            ]
        }
    ]
}