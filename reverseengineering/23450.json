{
    "title": "Is it possible to modify a movss or xmm# in Assembly using Cheat Engine?",
    "link": "https://reverseengineering.stackexchange.com/questions/23450/is-it-possible-to-modify-a-movss-or-xmm-in-assembly-using-cheat-engine",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Im using cheat engine as a beginner to getting into Disassembly and Hacking, and I want to know how to modify an address/pointer (not really sure how to term it) thats using a <code>movss [...],xmm#</code>?</p>\n<p>Specifically, Im modifying the Health in Satisfactory.</p>\n<p>Fall damage causes the <code>movss [rbx+00000164],xmm0</code> to fire, <code>xmm0</code> represents the amount of health subtracted from the damage of falling.</p>\n<p>Then it sends <code>xmm0</code> to <code>rbx+000000164</code>.</p>\n<p>That causes the health to go down. I want it to go Up, or not lose/gain any at all.</p>\n<p>I tried seeing if there were any xmm#s in the scanner that lined up with max health (100) to see if I could just send the player's max health every time they took damage (This would solve it easily)</p>\n<p>However, it doesnt have it.\nAs seen here:\n<a href=\"https://i.sstatic.net/nRRcU.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/nRRcU.png\"/></a></p>\n<p>I was following a tutorial <a href=\"https://wiki.cheatengine.org/index.php?title=Tutorials:Auto_Assembler:Injection_full\" rel=\"noreferrer\">https://wiki.cheatengine.org/index.php?title=Tutorials:Auto_Assembler:Injection_full</a>, but they made it super simple, mentioning only...</p>\n<blockquote>\n<p>Now the easiest thing to do here, since the code already adds is to just make the number positive.</p>\n</blockquote>\n<p>Thats not very informing, they were lucky, their value is just a number that can be set to positive or negative, or just be modified.</p>\n<p>Mine cant.</p>\n<p><strong>So the big question is, is there anything I can do to modify or change it? I need to make this simpler.</strong></p>\n<p>By the way, heres my script that Im using to actually \"hack\" the health. All it does right now is the default xmm0 send, basically it does nothing.</p>\n<pre><code>{ Game   : FactoryGame-Win64-Shipping.exe\n  Version: \n  Date   : 2020-03-15\n  Author : taylo\n\n  This script does blah blah blah\n}\n\ndefine(address,\"FactoryGame-Win64-Shipping.exe\"+90E3AA)\ndefine(bytes,F3 0F 11 83 64 01 00 00)\n\n[ENABLE]\n//code from here to '[DISABLE]' will be used to enable the cheat\n\n\n\nassert(address,bytes)\nalloc(newmem,$1000,\"FactoryGame-Win64-Shipping.exe\"+90E3AA)\n\nlabel(code)\nlabel(return)\n\nnewmem:\n\ncode:\n  movss [rbx+00000164],xmm0\n  jmp return\n\naddress:\n  jmp newmem\n  nop 3\nreturn:\n\n[DISABLE]\n//code from here till the end of the code will be used to disable the cheat\naddress:\n  db bytes\n  // movss [rbx+00000164],xmm0\n\ndealloc(newmem)\n\n{\n// ORIGINAL CODE - INJECTION POINT: \"FactoryGame-Win64-Shipping.exe\"+90E3AA\n\n\"FactoryGame-Win64-Shipping.exe\"+90E376: 49 89 6B B0              -  mov [r11-50],rbp\n\"FactoryGame-Win64-Shipping.exe\"+90E37A: 4D 89 73 A8              -  mov [r11-58],r14\n\"FactoryGame-Win64-Shipping.exe\"+90E37E: E8 BD D5 FB FF           -  call FactoryGame-Win64-Shipping.exe+8CB940\n\"FactoryGame-Win64-Shipping.exe\"+90E383: 0F 28 C8                 -  movaps xmm1,xmm0\n\"FactoryGame-Win64-Shipping.exe\"+90E386: 0F 2F 0D 53 B9 64 02     -  comiss xmm1,[FactoryGame-Win64-Shipping.exe+2F59CE0]\n\"FactoryGame-Win64-Shipping.exe\"+90E38D: 0F 82 B9 00 00 00        -  jb FactoryGame-Win64-Shipping.exe+90E44C\n\"FactoryGame-Win64-Shipping.exe\"+90E393: F3 0F 10 83 64 01 00 00  -  movss xmm0,[rbx+00000164]\n\"FactoryGame-Win64-Shipping.exe\"+90E39B: F3 0F 5F CE              -  maxss xmm1,xmm6\n\"FactoryGame-Win64-Shipping.exe\"+90E39F: 0F B6 83 6C 01 00 00     -  movzx eax,byte ptr [rbx+0000016C]\n\"FactoryGame-Win64-Shipping.exe\"+90E3A6: F3 0F 5C C1              -  subss xmm0,xmm1\n// ---------- INJECTING HERE ----------\n\"FactoryGame-Win64-Shipping.exe\"+90E3AA: F3 0F 11 83 64 01 00 00  -  movss [rbx+00000164],xmm0\n// ---------- DONE INJECTING  ----------\n\"FactoryGame-Win64-Shipping.exe\"+90E3B2: A8 01                    -  test al,01\n\"FactoryGame-Win64-Shipping.exe\"+90E3B4: 75 4C                    -  jne FactoryGame-Win64-Shipping.exe+90E402\n\"FactoryGame-Win64-Shipping.exe\"+90E3B6: A8 02                    -  test al,02\n\"FactoryGame-Win64-Shipping.exe\"+90E3B8: 74 1D                    -  je FactoryGame-Win64-Shipping.exe+90E3D7\n\"FactoryGame-Win64-Shipping.exe\"+90E3BA: 48 89 6C 24 28           -  mov [rsp+28],rbp\n\"FactoryGame-Win64-Shipping.exe\"+90E3BF: 4C 8B CF                 -  mov r9,rdi\n\"FactoryGame-Win64-Shipping.exe\"+90E3C2: 0F 28 D1                 -  movaps xmm2,xmm1\n\"FactoryGame-Win64-Shipping.exe\"+90E3C5: 4C 89 74 24 20           -  mov [rsp+20],r14\n\"FactoryGame-Win64-Shipping.exe\"+90E3CA: 48 8B D6                 -  mov rdx,rsi\n\"FactoryGame-Win64-Shipping.exe\"+90E3CD: 48 8B CB                 -  mov rcx,rbx\n}\n</code></pre>\n</div>",
    "votes": "5",
    "answers": 1,
    "views": "3k",
    "tags": [
        "disassembly",
        "assembly",
        "cheat-engine"
    ],
    "user": "Mister SirCode",
    "time": "Mar 16, 2020 at 1:14",
    "comments": [
        {
            "user": "Redfield",
            "text": "<span class=\"comment-copy\">In DMC5, there's a similar instruction that uses movss and xmm2. I tried putting (float)### but it doesnt work. It says an error in line 12, which is the instruction line. then I changed movss to mov and it worked. game didn't crash which was great, but I still curious about what's the correct way to deal with movss.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>After a bit more research, and help from a friend, I figured it out.</p>\n<p>the <code>movss</code> and <code>mov</code> are <strong>opcodes</strong> and its usually in the form of a <strong>float</strong> (for movss atleast)</p>\n<p>So, hence, you CAN change its value.</p>\n<p>Simply write <code>movss [..address..],(float)###</code> replace ### with your number.</p>\n<p>As for my question, it works, I have disabled the entire game's health decrement. Making all creatures and players invulnerable forever using the same method.</p>\n<p>As seen here by MY use of it:</p>\n<p><strong>Yes, I know it was about modifying the movss, but my value IS a float, its just stored in the \"form\" of an Integer, so it uses mov, you can use this same movss code.</strong></p>\n<pre><code>code:\n  mov [rbx+00000164],(float)100\n  jmp return\n</code></pre>\n<p><code>mov</code> is like saying <code>move</code>, it moves the value in the operand and sends it to the address. </p>\n<p>So its as simple as moving a number. I just had bad formatting, and didnt realise you had to specify the data type via something like <code>(float)</code></p>\n</div>",
            "votes": "5",
            "user": "Mister SirCode",
            "time": "Mar 17, 2020 at 17:41",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">Thanks for sharing the solution!</span>",
                    "time": null
                },
                {
                    "user": "Mister SirCode",
                    "text": "<span class=\"comment-copy\">@IgorSkochinsky No problem, although, I honestly didnt expect it to be as easy as just specifying a single word. As I do more and more of this, it seems to make more sense.</span>",
                    "time": null
                }
            ]
        }
    ]
}