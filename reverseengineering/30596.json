{
    "title": "windbg shows different instruction at address when you set the breakpoints in 2 different breaks but not the same break (nvd3d9wrapx thunk in user32)",
    "link": "https://reverseengineering.stackexchange.com/questions/30596/windbg-shows-different-instruction-at-address-when-you-set-the-breakpoints-in-2",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In the first example I only set a breakpoint on <code>user32!CreateWindowExW</code></p>\n<p><a href=\"https://i.sstatic.net/gj71A.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/gj71A.png\"/></a></p>\n<p>In the second example, I set 2 breakpoints at the same time on  <code>user32!CreateWindowExW</code> and <code>notepad!WinMain</code></p>\n<p><a href=\"https://i.sstatic.net/dfUzN.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/dfUzN.png\"/></a></p>\n<p>In the 3rd example I place a breakpoint on <code>notepad!WinMain</code>, wait for it to break, and then I place the breakpoint on <code>user32!CreateWindowExW</code>, and this time it shows the jump instruction.</p>\n<p><a href=\"https://i.sstatic.net/LDDCy.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/LDDCy.png\"/></a></p>\n<p>I confirmed that it does indeed jump to that address by stepping through, and I confirmed that the jump isn't there in the first 2 examples by unassembling as well as stepping to the next instruction. The callstack is identical in all 3 scenarios.</p>\n<p>It reproduces every time. This is Windows 7 btw Windbg x64 10.0</p>\n<p>What is going on ?</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "100",
    "tags": [
        "windows",
        "windbg"
    ],
    "user": "Lewis Kelsey",
    "time": "Jul 5, 2022 at 11:47",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">what's mapped at this <code>0x6fff00340</code> address? This looks like some hooking and <code>jmp</code> trampoline</span>",
            "time": null
        },
        {
            "user": "Lewis Kelsey",
            "text": "<span class=\"comment-copy\">@PawełŁukasik from !address: + 06fff0000 070000000 000010000 MEM_PRIVATE MEM_COMMIT PAGE_EXECUTE_READ &lt;unknown&gt; [dtrR............]. It's clearly some trampoline block allocated by the nvd3d9wrapx  because it then injects the jump instruction to the trampoline but I do not know why windbg is behaving like that</span>",
            "time": null
        },
        {
            "user": "Lewis Kelsey",
            "text": "<span class=\"comment-copy\">It's not a trampoline function exactly. What it jumps to is just a single rip-relative memory indirect jump to an address, the address is stored with it. This is an address of a procedure  loc_7FEFA2C3E40 in nvd3d9wrapx that I haven't got the symbols for</span>",
            "time": null
        }
    ],
    "answers_data": []
}