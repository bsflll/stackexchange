{
    "title": "Calculating the page address a buffer belongs to",
    "link": "https://reverseengineering.stackexchange.com/questions/4021/calculating-the-page-address-a-buffer-belongs-to",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I was trying out a ROP exploit -- I'm trying to make an mprotect system call using ROP(not a libc call), to try and make the buffer executable. I tried stracing the server process and ran the exploit, only to see that results in an error as follows :- </p>\n<pre><code>mprotect(0xbffdda10, 65536, PROT_READ|PROT_WRITE|PROT_EXEC) = -1 EINVAL(Invalid argument)\n</code></pre>\n<p>Later on, I tried a different address <code>0x08048000</code> and I could see that the call worked(strace output and /proc/pid/maps confirms this). <code>Given a buffer address how could I guess/find the correct page address that I could use to make a call to mprotect.</code></p>\n<p>I think I figured out the reason why this happens. ASLR is enabled and the page that starts at 0x08048000 does not change addresses. However, the page that corresponds to the buffer changes addresses.\nThe buffer address can be leaked -- so I tried checking if the difference between the start of the page and the buffer address remains constant, it does not.</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "278",
    "tags": [
        "linux",
        "exploit"
    ],
    "user": null,
    "time": "Apr 5, 2014 at 5:06",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm not sure, but you probably experiencing the following issue:\nUsually page addresses are rounded by page size. It depends on page size in system you working with. So you can calculate this address by making AND operation with constant <code>~(PAGE_SIZE-1)</code>.</p>\n<p>If it doesn't work, try to call call <code>mprotect</code> twice:</p>\n<ol>\n<li>first do read and write without execute, </li>\n<li>change the memory, and after that call <code>mprotect</code> with execute bit but without write bit.</li>\n</ol>\n</div>",
            "votes": "2",
            "user": "perror",
            "time": "Apr 7, 2014 at 19:49",
            "is_accepted": true,
            "comments": []
        }
    ]
}