{
    "title": "Why IDA aggressively assumes 'nothing' on segment registers?",
    "link": "https://reverseengineering.stackexchange.com/questions/6069/why-ida-aggressively-assumes-nothing-on-segment-registers",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm disassembling a packed 16 bit DOS MZ EXE.</p>\n<p>To deobfuscate it, I've set a breakpoint in DOSbox at the end of the unpacking routine, let it run, and made a memory dump. This way I essentially got the deobfuscated EXE image. Then I loaded this image in IDA.</p>\n<p>Obviously, there's no MZ header anymore, so IDA can't know the application's entry point and initial values of CS, SS and other segment registers. I, however, do know these values, and I'm willing to supply them to IDA. To do this, I hit <kbd>Alt</kbd>+<kbd>G</kbd> and type the register's value.</p>\n<p>However, instead of showing <code>assume ds:&lt;value&gt;</code>, IDA shows</p>\n<pre><code>seg000:1AEBC                     assume es:nothing, ss:nothing, ds:nothing\n</code></pre>\n<p>Why?</p>\n<p>Another question. Why there is no option to set the value of CS register? Consider code which contains near jumps. Without knowledge about the CS register value, IDA won't be able to proceed with disassembling. But I <em>do</em> know what value CS has at this specific point! How do I supply this information to IDA if the <code>Segment Register Value</code> dialog window doesn't have CS option?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "disassembly",
        "segmentation"
    ],
    "user": "ScumCoder",
    "time": "Aug 13, 2014 at 18:18",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">CS is the value of the segment base.</span>",
            "time": null
        },
        {
            "user": "Milind R",
            "text": "<span class=\"comment-copy\">Similar to my question : <a href=\"http://reverseengineering.stackexchange.com/q/3561/3757\">reverseengineering.stackexchange.com/q/3561/3757</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>DOS programs used segments and IDA was made to mimic that behavior. That's why you cannot change CS (since in properly set up database CS is just the segment's base) and why your changes to segment registers do now show up (because there is no segment corresponding to the values you enter).</p>\n<p>I would suggest opening a normal (not packed) MZ file to see how it's supposed to look. If you keep fighting IDA instead of working with it you'll keep having problems.</p>\n</div>",
            "votes": "3",
            "user": "Igor Skochinsky",
            "time": "Aug 13, 2014 at 19:08",
            "is_accepted": true,
            "comments": [
                {
                    "user": "ScumCoder",
                    "text": "<span class=\"comment-copy\">I'm not 'fighting' IDA, I'm just a newbie seeking help. Thank you for your answer, it helped, so I'll mark it.</span>",
                    "time": null
                }
            ]
        }
    ]
}