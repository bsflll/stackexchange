{
    "title": "OllyDbg find function by name",
    "link": "https://reverseengineering.stackexchange.com/questions/9145/ollydbg-find-function-by-name",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have exe file that I want to edit function in it.<br/>\nI know what is the function name, but how can I found the address by it name?</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "16k",
    "tags": [
        "windows",
        "ollydbg"
    ],
    "user": "nrofis",
    "time": "Jun 15, 2015 at 17:21",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If the file has debugging symbols (i.e. you have a corresponding .pdb file), just load the file into your favourite debugger (Windbg, Olly, Ida Pro) and you're done, since the debugger will match function names and addresses from the symbol table.</p>\n<p>If you don't have debugging symbols (and your function isn't a special case, like an exported function in a DLL), knowing the function name generally won't help you anything, since this information is lost in the executable.</p>\n<p>However, if you know a bit more about the function, this knowledge might help you. For example, if you have a function that implements the <a href=\"https://en.wikipedia.org/wiki/Tiny_Encryption_Algorithm\" rel=\"nofollow noreferrer\">TEA algorithm</a>, scanning the disassembled file for <code>9e3779b9</code> could help you. (There's a tool named signsrch that does this for many well-known encryption and checksum variants). Or, if you know the function uses a certain string, search for this string, then check where it's cross referenced.</p>\n<p>You might be even lucky enough that the programmer used an <code>assert</code> (or similar) macro. Depending on the Compiler, this often translates to a <code>printf</code> which includes <code>__FUNC__</code> which in turn is replaced with the function name, so an assert macro will most likely put the function name as a string, along with a cross reference from your function, into your binary.</p>\n<p>Once you have a string that you know belongs to your function, use <code>CTRL-R</code> on it to find where it's referenced in code (<a href=\"https://stackoverflow.com/questions/24554127/ollydbg-2-01-finding-a-command-referencing-a-static-string\">longer explanation on stackoverflow</a>).</p>\n</div>",
            "votes": "1",
            "user": "Community",
            "time": "May 23, 2017 at 12:37",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If Olly knows the function name, you can press <kbd>Ctrl</kbd>+<kbd>G</kbd> and start typing the name of the function, it should be listed there. Select you function, and click <code>Follow expression</code>, it should take you there.</p>\n<p><img alt=\"Go to function in Ollydbg\" src=\"https://i.sstatic.net/EMZKS.png\"/></p>\n</div>",
            "votes": "3",
            "user": "perror",
            "time": "Jun 16, 2015 at 11:25",
            "is_accepted": false,
            "comments": []
        }
    ]
}