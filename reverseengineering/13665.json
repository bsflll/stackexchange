{
    "title": "Trouble deparsing Perl encrypted with Filter::Crypto::Encrypt",
    "link": "https://reverseengineering.stackexchange.com/questions/13665/trouble-deparsing-perl-encrypted-with-filtercryptoencrypt",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to use <code>perl -MO=Deparse</code> to get readable source code from encrypted Perl files.</p>\n<p>The Perl script I'm trying to deparse starts with <code>use Filter::Crypto::Decrypt;</code>.  </p>\n<p>The error I'm getting is:</p>\n<pre><code>Can't run with Perl compiler backend at /System/Library/Perl/5.18/XSLoader.pm line 95. \nBEGIN failed--compilation aborted at /Library/Perl/5.18/darwin-thread-multi-2level/Filter/Crypto/Decrypt.pm line 37.\n</code></pre>\n<p>When reading <a href=\"http://search.cpan.org/dist/Filter-Crypto-2.06/Decrypt/lib/Filter/Crypto/Decrypt.pm\" rel=\"nofollow\">this webpage</a>, it says:</p>\n<blockquote>\n<p><strong>Can't run with Perl compiler backend</strong><br/>\n  (F) The encrypted Perl file is being run by a perl with the Perl compiler backend enabled, e.g. perl -MO=Deparse file. This is not allowed since it may assist in retrieving the original unencrypted source code.</p>\n</blockquote>\n<p>If I understand this correctly, then this is a security measure to prevent people from doing exactly what I'm trying to do. Correct? Is there any way to override this?</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "1k",
    "tags": [
        "decryption"
    ],
    "user": "TeddyBones",
    "time": "Oct 8, 2016 at 7:49",
    "comments": [
        {
            "user": "kennytm",
            "text": "<span class=\"comment-copy\">I think you could <a href=\"http://stackoverflow.com/questions/28718897/encrypted-perl-scripts-by-filtercrypto-crypt-file-usage-on-other-machines\">decrypt</a> it first before running Deparse.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Since this is an intended prevention and there's no technical limitation behind this error message, it should be easy enough to just patch out the explicit check in the <code>perl</code> executable. You could then have your own version of perl that allows the decryption of the perl program and exposes the original source code.</p>\n</div>",
            "votes": "2",
            "user": "NirIzr",
            "time": "Oct 20, 2016 at 4:32",
            "is_accepted": true,
            "comments": []
        }
    ]
}