{
    "title": "Methods of discovering the location of nag/pop-up screens besides string search?",
    "link": "https://reverseengineering.stackexchange.com/questions/9007/methods-of-discovering-the-location-of-nag-pop-up-screens-besides-string-search",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I would like to remove a nag screen from a popular program. To do this I need to make sure the screen never gets called. So, the first task is to find the actual location of the nag (where it is called from). None of the strings in the nag screen seemed to show up in Ollydbg's string search. The only thing I managed to find on my own was the window of the nag in OllyDBG's window references, but I'm not sure if it was very useful.</p>\n<p>What methods are commonly used to find the call locations of nag screens? If you guys set me on the right path, I'm sure I can figure out the rest on my own. :)</p>\n<p>Some extra info: the program seems to have been developed in .Net, the title of the nag showed up in the window reference list of OllyDBG but I couldn't find it in the string search.</p>\n<p>Second edit: I don't think it's .net. I tried doing ´tasklist /m \"mscor*\"´, but it didn't show up (which it probably should have, if it's .net)</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "4k",
    "tags": [
        "ollydbg",
        ".net"
    ],
    "user": "Nopslide__",
    "time": "May 29, 2015 at 17:55",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "<span class=\"comment-copy\">Finding the window in Olly's references is still helpful; get the windows' WindowProc address, then search for this address in the code. Of course, .NET adds a layer around all that; if you're really dealing with .NET code, one of the many .NET decompilers will probably help you more than Olly does.</span>",
            "time": null
        },
        {
            "user": "Carlos Garcia",
            "text": "<span class=\"comment-copy\">Agreed, trying to debug a .NET application using Olly may be an overkill. Try Telerik JustDisassemble or DotPeek.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><strong><em>EDIT:</em></strong> The OP updated his question yesterday to say that he's dealing with a .NET application, so the advice below no longer applies. I'll leave this answer here though since it might help others for Win32 applications.</p>\n<p>Try setting breakpoints on API functions that might be used to create the nag screen.</p>\n<p>For example, (from <a href=\"http://www.woodmann.com/krobar/beginner/p03_8.html\" rel=\"nofollow\">http://www.woodmann.com/krobar/beginner/p03_8.html</a>):</p>\n<ul>\n<li><code>CreateWindow()</code></li>\n<li><code>CreateWindowEx()</code></li>\n<li><code>ShowWindow()</code></li>\n<li><code>UpdateWindow()</code></li>\n<li>etc.</li>\n</ul>\n</div>",
            "votes": "5",
            "user": "Jason Geffner",
            "time": "May 28, 2015 at 22:03",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Nopslide__",
                    "text": "<span class=\"comment-copy\">I tried doing a conditional breakpoint on CreateWindowEx()       <code>UNICODE[EPB+10] == \"Title of the nag\"</code>       It gave me some false positives (when [EPB+10] wasn't even close to the string I provided) and didn't give the right result. I don't think there were CreateWindow() functions. Did I do the right thing in the wrong place (in the CreateWindowEx() function) or did I do the wrong thing at the right place?</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">OllyDbg's conditional breakpoints are buggy when it comes to strings, and I wouldn't rely on the value in the <code>lpWindowName</code> field either. However, for each call to <code>CreateWindowEx()</code>, you can compare the values in <code>dwExStyle</code>, <code>lpClassName</code> to what you know the nag screen uses (based on a tool like <a href=\"http://www.woodmann.com/collaborative/tools/index.php/Window_Hack\" rel=\"nofollow noreferrer\">woodmann.com/collaborative/tools/index.php/Window_Hack</a>).</span>",
                    "time": null
                },
                {
                    "user": "Nopslide__",
                    "text": "<span class=\"comment-copy\">The tool you provided me says the dwStyle is 16C80000. Doing a conditional breakpoint for [EAX] == 16C80000 gives a lot of results, and all of them don't even have the same style names, which confuses me (there are WS_CHILD, WS_OVERLAP, POPUP, etc). Is there anything else I can do to narrow the search down?  Also, I managed to find the ShowWindow() that shows the popup. NOPing that didn't do anything (which confuses me, the window shouldn't have showed up. It didn't even crash), but maybe it's a help?</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\"><code>16C80000</code> is <code>WS_VISIBLE | WS_CLIPCHILDREN | WS_CLIPSIBLINGS | WS_CAPTION | WS_SYSMENU</code>, so if you're seeing flags like <code>WS_OVERLAP</code>, it suggests that your conditional breakpoint is set incorrectly. Please pose that issue as a new question on this site, separate from this one.</span>",
                    "time": null
                }
            ]
        }
    ]
}