{
    "title": "Running thread without process - special case",
    "link": "https://reverseengineering.stackexchange.com/questions/8589/running-thread-without-process-special-case",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>During the analysis of a piece of code,  I have seen that a process is created in a suspended state. The process had one thread. Then they are changing the start address of that thread. After doing that,  the thread is started with ResumeThread(). Later, it closes the handle to the process using CloseHandle(). </p>\n<p>So, my question would be : Is it possible that the thread with the manipulated start address is still running after we close the handle to the corresponding process? Is the thread still running although the process to which it belongs is closed because of the changed starting address or will the thread also closed  automatically after CloseHandle(processhandle) ? </p>\n<p>Best regards, </p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "828",
    "tags": [
        "process"
    ],
    "user": "user3097712",
    "time": "Mar 29, 2015 at 14:51",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>Is it possible that the thread with the manipulated start address is\n  still running after we close the handle to the corresponding process?\n  Is the thread still running although the process to which it belongs\n  is closed because of the changed starting address or will the thread\n  also closed automatically after CloseHandle(processhandle) ?</p>\n</blockquote>\n<p>Yes. From <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms724211%28v=vs.85%29.aspx\" rel=\"nofollow\">the official <code>CloseHandle()</code> documentation</a>:</p>\n<p>\"Closing a thread handle does <strong>not</strong> terminate the associated thread or remove the thread object. Closing a process handle does <strong>not</strong> terminate the associated process or remove the process object.\"</p>\n</div>",
            "votes": "2",
            "user": "Jason Geffner",
            "time": "Mar 29, 2015 at 15:45",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user3097712",
                    "text": "<span class=\"comment-copy\">aah, ok. Thanks. The next time I will look at the documentation.</span>",
                    "time": null
                },
                {
                    "user": "peter ferrie",
                    "text": "<span class=\"comment-copy\">the process handle exists in order for the parent process (the one who created it) to further manipulate the process at any point.  The act of closing the handle only means that the parent must acquire the process handle again in order to make changes later.</span>",
                    "time": null
                }
            ]
        }
    ]
}