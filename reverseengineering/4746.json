{
    "title": "STM32 DFU tools for Windows",
    "link": "https://reverseengineering.stackexchange.com/questions/4746/stm32-dfu-tools-for-windows",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm currently investigating an embedded system with a STM32F4-model. I'm able to enter in DFU mode and use the <a href=\"http://dfu-util.gnumonks.org/\" rel=\"nofollow\"><code>dfu-util</code></a>. I'd also like to use STM32's original Dfuse tools, just for completeness sake. Unfortunately the embedded device has a changed USB vendor and device, so the original STM drivers don't recognize the device. </p>\n<p>Any ideas how to work around that?</p>\n</div>",
    "votes": "3",
    "answers": 2,
    "views": "12k",
    "tags": [
        "firmware"
    ],
    "user": "bot47",
    "time": "Jul 1, 2014 at 8:04",
    "comments": [
        {
            "user": "Spektre",
            "text": "<span class=\"comment-copy\">try to change PID VID in inf file to match your device. If the DFU protocol/fuses is the same it should work ... but is highly possible you can have USB inf conflicts if the original inf is already installed. (at least on Windows are USB drivers a mess so keep trying ...) the best will be do it on clean machine (or virtual machine)</span>",
            "time": null
        },
        {
            "user": "bot47",
            "text": "<span class=\"comment-copy\">Already tried this. There are no original drivers, the port is just for manufacturer debugging and charging. It seems as if the driver also checks for the ids and refuses to load.</span>",
            "time": null
        },
        {
            "user": "Spektre",
            "text": "<span class=\"comment-copy\">in that case the only thing you can do is make your own driver (my favorite is JUNGO) and make simple App for DFU yourself. I did not do such thing my drivers usually just access bulk transfers but most DFU I have seen have pretty good documentation including source codes ...</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I used <a href=\"http://www.driverscape.com/download/stm-device-in-dfu-mode\" rel=\"nofollow noreferrer\">these drivers</a> which seemed to work. <a href=\"http://www.open-tx.org/2013/07/18/taranis-windows-usb-driver-for-manual-installation\" rel=\"nofollow noreferrer\">These</a> also installed but didn't make the device work.</p>\n<p>I have no idea of their authenticity.</p>\n</div>",
            "votes": "1",
            "user": "Topper Harley",
            "time": "Dec 6, 2016 at 12:35",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Old question I know. I have installed DfuSe Demo Tool, available from ST website. </p>\n<ul>\n<li><a href=\"https://www.st.com/en/development-tools/stsw-stm32080.html\" rel=\"nofollow noreferrer\">https://www.st.com/en/development-tools/stsw-stm32080.html</a></li>\n</ul>\n<p>After installing this tool, install the driver that came with it, it is located in the installation directory of DfuSeDemo directory. Mine is in: \"C:\\Program Files (x86)\\STMicroelectronics\\Software\\DfuSe v3.0.6\\Driver\" Update the driver in device manager and point to this directory.</p>\n<p>You can also download (=upload) the current firmware with this.</p>\n<p><a href=\"https://i.sstatic.net/XVEWG.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/XVEWG.png\"/></a></p>\n</div>",
            "votes": "1",
            "user": "Codebeat",
            "time": "Dec 3, 2018 at 19:26",
            "is_accepted": false,
            "comments": []
        }
    ]
}