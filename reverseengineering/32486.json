{
    "title": "how to set flag in windbg",
    "link": "https://reverseengineering.stackexchange.com/questions/32486/how-to-set-flag-in-windbg",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Let's say we have 2 functions funcA and funcB, funcA is the upstream of funcB. I want to view certain values and call stack in funcB only if funcA satisfies certain conditions. I can't achieve this through conditional breakpoint in funcB since I don't know how to access the value I want with registers in funcB. The approach I think of it's add conditional break point both in funcA and funcB. In funcA, I set the flag when certain conditions satisfy. In funcB, I check the flag, print certain values if it's set, and reset the flag. But I don't know how to do this in Windbg. Can I define some variables to hold the flag?</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "53",
    "tags": [
        "windbg"
    ],
    "user": "anonymous bear",
    "time": "Nov 10, 2023 at 0:00",
    "comments": [
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">Set a double conditional like .if (funca.x&lt;=&gt;z) {bu funcb} .else{ bc funcb}</span>",
            "time": null
        },
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<span class=\"comment-copy\">You can use the pseudo-registers (<code>$t0</code> through <code>$t19</code>) to store how you're accessing things. Their state can be saved with the <code>.push /r</code> and <code>.pop /r</code> commands if you need to nest for some reason. If you want to use full names or even store a whole expression to evaluate, you can also use aliases which get pasted into your expressions using <code>${ }</code> such as <code>${youraliasname}</code>. To assign an integer to an alias, you'll need to assign it with <code>as /x</code> or you can expand it by assigning to a temporary register. Also, you can use <code>${/d:youraliasname}</code> in your expression to see if it has been defined.</span>",
            "time": null
        }
    ],
    "answers_data": []
}