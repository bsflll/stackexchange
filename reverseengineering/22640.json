{
    "title": "ELF file format find shared object for symbol",
    "link": "https://reverseengineering.stackexchange.com/questions/22640/elf-file-format-find-shared-object-for-symbol",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>(in Windows) PE file format contains Import table with <code>Module\\Dll Name</code> which tells PE loader where to search for symbol e.g. <code>KERNEL32.dll -&gt; CreateFileW</code></p>\n<p>In the ELF file format there is <code>Symbol table</code> with <code>info</code> field which tells if the symbol is <code>Global\\Local\\Weak\\etc.</code></p>\n<p>My question is how does the Unix loader know what is the module, shared object where to search for this symbol e.g. <code>???? -&gt; snprintf</code></p>\n<p>I noticed objdump can dump this info <code>objdump -T /bin/ls</code>.\n<a href=\"https://i.sstatic.net/laK3P.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/laK3P.png\"/></a>\n<code>GLIBC_2.2.5 snprintf</code></p>\n<p>Could someone with more knowledge on ELF file format shed some light on Unix dynamic-linking?</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "310",
    "tags": [
        "elf",
        "dynamic-linking"
    ],
    "user": "krusty",
    "time": "Nov 29, 2019 at 12:21",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>how does the Unix loader know what is the module,\n  shared object where to search for this symbol</p>\n</blockquote>\n<p>Short answer: it does not. It just searches the whole list of loaded modules until the symbol is found (or not). A small degree of control over more exact symbol matching can be achieved via versioned symbols but otherwise it's pretty much a free-for-all.</p>\n<p>By design, the ELF symbol space is <strong>global</strong> (or flat) so any symbol can be <em>preempted</em> by another module. This is used for example when <a href=\"http://www.goldsborough.me/c/low-level/kernel/2016/08/29/16-48-53-the_-ld_preload-_trick/\" rel=\"nofollow noreferrer\">hooking symbols via LD_PRELOAD_LIBRARY environment variable</a>.</p>\n</div>",
            "votes": "3",
            "user": "Igor Skochinsky",
            "time": "Nov 29, 2019 at 13:28",
            "is_accepted": true,
            "comments": []
        }
    ]
}