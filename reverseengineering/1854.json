{
    "title": "Working with DOS .COM files",
    "link": "https://reverseengineering.stackexchange.com/questions/1854/working-with-dos-com-files",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>What can I do to reverse engineer a DOS .COM file? As far as debugging goes, I've looked DEBUG and DEBUGX from the creators of FreeDOS, as well as the default DEBUG command that comes with Windows. Sure, I can probably work with them and eventually figure out what I'm doing, but I feel like the process would end up being longer than necessary. Is there a better tool I can use?</p>\n<p>If there are no \"better\" tools than DEBUG or DEBUGX, then what can I use to work with output from these two tools? My main goal is to create something that mimics the .COM program, but in a more manageable format (as far as code goes).</p>\n</div>",
    "votes": "8",
    "answers": 3,
    "views": "1k",
    "tags": [
        "tools",
        "windows",
        "dos-com"
    ],
    "user": "JMcAfreak",
    "time": "Apr 18, 2013 at 20:12",
    "comments": [
        {
            "user": "Ange",
            "text": "<span class=\"comment-copy\">suggested by broadway: <a href=\"http://www.eji.com/a86/\" rel=\"nofollow noreferrer\">d86</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I personally use <a href=\"http://www.dosbox.com\">DosBox</a> debugger, which is quite complete, with a SoftICE-like interface.</p>\n<p>Otherwise you can go for DOS debuggers like Turbo Debugger or CodeView.</p>\n</div>",
            "votes": "7",
            "user": "Ange",
            "time": "Apr 18, 2013 at 20:10",
            "is_accepted": true,
            "comments": [
                {
                    "user": "JMcAfreak",
                    "text": "<span class=\"comment-copy\">Cool, I'll try all of them out. I'll get back to you with a response on what worked best for me. So far CodeView looks very promising</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>As an alternative to <a href=\"https://reverseengineering.stackexchange.com/a/1855/245\">Ange's answer</a> I would like to offer <a href=\"https://github.com/wjp/idados\" rel=\"nofollow noreferrer\">idados</a>. I've had good experiences with it when trying to reverse engineer a program and the accompanying file format. It <em>also</em> makes use of <a href=\"http://www.dosbox.com/\" rel=\"nofollow noreferrer\">DOSBox</a>. But if you have a proper IDA Pro license it is - I think - slightly more convenient.</p>\n</div>",
            "votes": "5",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": false,
            "comments": [
                {
                    "user": "JMcAfreak",
                    "text": "<span class=\"comment-copy\">Hmmm... I might look into that when I have the money to get an IDA Pro license. Thanks for the tip.</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@JMcAfreak: it is why I have added this last sentence. I <i>think</i> the SDK wasn't included the last time in the IDA Freeware version and plugins were also (not full or not at all?) supported. But since I have the full version I don't check it too often.</span>",
                    "time": null
                },
                {
                    "user": "Ange",
                    "text": "<span class=\"comment-copy\">IDA free doesn't support SDK afaik - there was an unofficial patch for that, which I haven't tested.</span>",
                    "time": null
                },
                {
                    "user": "JMcAfreak",
                    "text": "<span class=\"comment-copy\">I wish I could select two accepted answers! :P Both seem like really good options. Currently I'm using the stuff suggested by @Ange (I'm trying each one out), but I'll definitely look into this!</span>",
                    "time": null
                },
                {
                    "user": "Ange",
                    "text": "<span class=\"comment-copy\">accept @0xC0000022L's then, since it enhances mine (I haven't tried idados personally)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>My answer is a little late; newcomer to this site. The Decompiler project was initiated in order to decompile MS-DOS EXE and COM binaries. The project has both a command-line and a GUI tool:</p>\n<p><a href=\"https://sourceforge.net/projects/decompiler/\" rel=\"nofollow\">https://sourceforge.net/projects/decompiler/</a></p>\n<p>Use the following command with the command-line tool to decompile COM programs:</p>\n<pre><code>decompile --default-to ms-dos-com myprog.com\n</code></pre>\n<p>In the GUI, use the menu command <code>File</code> &gt; <code>Open as...</code> to open the COM file and specify a start address like 0800:0100.</p>\n</div>",
            "votes": "0",
            "user": "John Källén",
            "time": "Jul 25, 2015 at 7:56",
            "is_accepted": false,
            "comments": []
        }
    ]
}