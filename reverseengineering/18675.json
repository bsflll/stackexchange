{
    "title": "Shellcode issue",
    "link": "https://reverseengineering.stackexchange.com/questions/18675/shellcode-issue",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm currently trying to understand a peculiar behaviour with a shellcode. When reaching a MOV instruction just before an interrupt the shellcode get modified:</p>\n<p><img alt=\"radare2 output\" src=\"https://i.sstatic.net/TiyW2.png\"/></p>\n<p>As you can see on the radare2 output, my shellcode is still there before the mov instruction, but once I step into it all the shellcode seems scrambled. I tried this shellcode on an ubuntu virtualbox VM.</p>\n<p>The target binary is taken from RPISEC <a href=\"https://github.com/RPISEC/MBE/blob/master/src/lab03/lab3B.c\" rel=\"nofollow noreferrer\">lab3B</a>.</p>\n<p>The shellcode come from pwntools, I tested it first directly from the lib and it works on the VM. I'm wondering how executing a mov instruction can have such an impact especially since I'm not getting any sigsev.</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "294",
    "tags": [
        "x86",
        "exploit"
    ],
    "user": "Kodoque",
    "time": "Jul 3, 2018 at 19:53",
    "comments": [
        {
            "user": "Megabeets",
            "text": "<span class=\"comment-copy\">what version of radare2 do you use? Please share the output of <code>r2 -v</code></span>",
            "time": null
        },
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">Provide the shellcode with all the details how you inject it.</span>",
            "time": null
        },
        {
            "user": "Kodoque",
            "text": "<span class=\"comment-copy\">@Megabeets here is the output for r2 -v on my machine:</span>",
            "time": null
        },
        {
            "user": "Kodoque",
            "text": "<span class=\"comment-copy\">@Megabeets here is the output for r2 -v on my machine:  radare2 2.7.0-git 18463 @ linux-x86-64 git.2.6.0-285-g535b685 commit: 535b6855d54d0359637c98dc9c6734e6d33d6d52 build: 2018-06-18__20:44:12</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The shellcode you're using is this</p>\n<pre><code> 0:    6a 01                    push   0x1\n 2:    5f                       pop    edi\n 3:    68 01 01 01 01           push   0x1010101\n 8:    81 34 24 75 79 75 01     xor    DWORD PTR [esp], 0x1757975\n f:    68 6f 61 64 2e           push   0x2e64616f\n14:    68 70 61 79 6c           push   0x6c796170\n19:    6a 05                    push   0x5\n1b:    58                       pop    eax\n1c:    89 e3                    mov    ebx, esp\n1e:    31 c9                    xor    ecx, ecx\n20:    cd 80                    int    0x80\n22:    89 c5                    mov    ebp, eax\n24:    89 c3                    mov    ebx, eax\n26:    6a 6c                    push   0x6c\n28:    58                       pop    eax\n29:    89 e1                    mov    ecx, esp\n2b:    cd 80                    int    0x80\n2d:    83 c4 14                 add    esp, 0x14\n30:    8b 34 24                 mov    esi, DWORD PTR [esp]\n33:    31 c0                    xor    eax, eax\n35:    b0 bb                    mov    al, 0xbb\n37:    89 fb                    mov    ebx, edi\n39:    89 e9                    mov    ecx, ebp\n3b:    99                       cdq\n3c:    cd 80                    int    0x80\n</code></pre>\n<p>This is from <a href=\"https://github.com/Gallopsled/pwntools/blob/0ce21d9b4593cc270ed113bf82a4e6da405b6653/pwnlib/shellcraft/templates/i386/linux/readfile.asm\" rel=\"nofollow noreferrer\">here</a> in pwntools.</p>\n<p>The first syscall is <code>i386.syscall('SYS_open', 'esp', 'O_RDONLY')</code> for payload.txt which will succeed if cwd has the file. The next is <code>${i386.syscall('SYS_fstat', 'eax', 'esp')}</code> which has a signature like </p>\n<pre><code>int fstat(int fd, struct stat *statbuf);\n</code></pre>\n<p>According to the man page</p>\n<blockquote>\n<p>These  functions return information about a file, in the buffer pointed to by statbuf.</p>\n</blockquote>\n<p>In your case <code>statbuf</code> is esp and hence the stack is overwritten. Always debug and read the shellcode you're using.</p>\n</div>",
            "votes": "1",
            "user": "sudhackar",
            "time": "Jul 5, 2018 at 7:31",
            "is_accepted": true,
            "comments": [
                {
                    "user": "sudhackar",
                    "text": "<span class=\"comment-copy\">I don't know why r2 you are still on the mov instruction but judging by what's on your stack I'm pretty sure the syscall has been executed. In my case <a href=\"https://i.imgur.com/kfWjKrc.png\" rel=\"nofollow noreferrer\">output</a></span>",
                    "time": null
                },
                {
                    "user": "Kodoque",
                    "text": "<span class=\"comment-copy\">Oh thanks that would make sense, I tested it with run_disassembly from pwntools but thinking of it the shellcode must not be placed on the stack with this function (I'll look into the implementation) which might explain why it worked with the test.</span>",
                    "time": null
                },
                {
                    "user": "sudhackar",
                    "text": "<span class=\"comment-copy\">Just make some space on the stack before executing your shellcode. <code>sub esp,0x100</code> should work. Also, try to post as much details as you can. It took me quite sometime to manually copy the shellcode from the image and correlating with pwntools.</span>",
                    "time": null
                },
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">@sudhackar I was started to copy the shellcode too ;)</span>",
                    "time": null
                },
                {
                    "user": "Kodoque",
                    "text": "<span class=\"comment-copy\">@Paweł Łukasik Sorry, it was indeed the readfile shellcode from pwntools :)</span>",
                    "time": null
                }
            ]
        }
    ]
}