{
    "title": "Asking for Reverse Engineering Tool Ideas",
    "link": "https://reverseengineering.stackexchange.com/questions/33203/asking-for-reverse-engineering-tool-ideas",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm currently studying cybersecurity and IoT and I'm interested in working on a development project in the realm of reverse engineering. My level is somewhere between beginner and intermediate, and I'm looking for ideas for a small tool I can build that could help me practice and improve my reverse engineering skills and for my portfolio. Ideally, I’d like something related to IoT devices, but I’m open to any interesting suggestions.</p>\n<p>I don’t want something overly complex or already widely used, just a simple tool that I can realistically develop over a few weeks to practice reverse engineering and maybe crack open some firmware or protocols. Any ideas for IoT-focused reverse engineering tools would be super appreciated! Thanks in advance! :)</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "150",
    "tags": [
        "binary-analysis",
        "x86",
        "tools"
    ],
    "user": "Portyio",
    "time": "Sep 4, 2024 at 15:05",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Hi and welcome to RE.SE. I'll leave this open since it has an answer already, but generally this would be something for a forum or our chat (yeah, I get it, you can't access yet that without invitation) because it is opinion-based.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>One of the most simplistic tools a beginner can write that actually is going to help you is something like this: a tool that tries to infer function names from debugging strings. If you want an example such a tool that I wrote myself back in the day, take a look to this:</p>\n<ul>\n<li><a href=\"https://github.com/joxeankoret/idamagicstrings\" rel=\"nofollow noreferrer\">https://github.com/joxeankoret/idamagicstrings</a></li>\n</ul>\n<p>Basically, you check the strings used for displaying error messages or warnings, check from which function(s) this string is referenced, extract what looks like the function name from it, and rename in IDA/Ghidra the function to what has been extracted from that debugging string.</p>\n</div>",
            "votes": "2",
            "user": "joxeankoret",
            "time": "Sep 5, 2024 at 8:29",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Portyio",
                    "text": "<span class=\"comment-copy\">Thanks a lot! It's an excellent idea that I hadn't really thought of, I'm thinking of coding it for Ghidra if it hasn't already been done. Do you have any other suggestions so that I can come up with a short list of ideas to explore and implement? Even if the level is a bit higher.  Thanks again a lot !</span>",
                    "time": null
                },
                {
                    "user": "joxeankoret",
                    "text": "<span class=\"comment-copy\">Nope, just take fun :)</span>",
                    "time": null
                }
            ]
        }
    ]
}