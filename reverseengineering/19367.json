{
    "title": ".app file firmware unpacking",
    "link": "https://reverseengineering.stackexchange.com/questions/19367/app-file-firmware-unpacking",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>For analyzing firmware , I want to unpack the following firmware:</p>\n<p><a href=\"https://www.inmarsat.com/wp-content/uploads/2015/02/Explorer_100_110_V2-11-3.zip\" rel=\"nofollow noreferrer\">https://www.inmarsat.com/wp-content/uploads/2015/02/Explorer_100_110_V2-11-3.zip</a>\nAfter unzip, I've got file named \"N03_A_E_D_02_11_03.APP\". Firstly, I want to unpack this file and then analyze it.\nI've tried some extractors, But It didn't work. </p>\n<p>Is there any tools for unpacking and analyzing this file?</p>\n<p>Thanks in advance</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "271",
    "tags": [
        "firmware",
        "unpacking"
    ],
    "user": "h msvi",
    "time": "Sep 17, 2018 at 10:02",
    "comments": [
        {
            "user": "perror",
            "text": "<span class=\"comment-copy\">Try <code>unzip</code> first, and come back to ask a more in-depth question...</span>",
            "time": null
        },
        {
            "user": "h msvi",
            "text": "<span class=\"comment-copy\">After unzip, My main file is \"N03_A_E_D_02_11_03.APP\", At first I want to unpack it and then analyze unpacked file. I want to know some tools for doing these processes.</span>",
            "time": null
        },
        {
            "user": "perror",
            "text": "<span class=\"comment-copy\"><code>file</code> and <code>binwalk</code>...</span>",
            "time": null
        },
        {
            "user": "Denis Laskov",
            "text": "<span class=\"comment-copy\">the ideal way is to have access to application that should create and/or unpack and apply this file. I believe it somehow should be related to Wind River Systems? :)</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Hi and welcome to RE.SE. You might want to have a look at other questions with the <a href=\"https://reverseengineering.stackexchange.com/questions/tagged/firmware\">firmware</a> tag and also include what exactly you've been trying already. Also, your question could be better scoped.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There's ARM Little endian code which starts at offset 0x8466 which seems to be a ZIP archiver code. Then from offset 0x295DF up till the end of the file, there's zlib packed block of data. After unpacking it you get a binary firmware file ~43mb, with ARM little endian code. </p>\n</div>",
            "votes": "1",
            "user": "Anton Kukoba",
            "time": "Sep 17, 2018 at 12:22",
            "is_accepted": false,
            "comments": []
        }
    ]
}