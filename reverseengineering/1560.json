{
    "title": "Where to find information about a file format?",
    "link": "https://reverseengineering.stackexchange.com/questions/1560/where-to-find-information-about-a-file-format",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Let's say I found 'some' file (might be an executable, might be data, or something else) and want to run or read it. I open this file in a text editor, but the format isn't readable. Examples include: Java class, Windows executable, SQLite database, DLL, ...</p>\n<p><em>I do know the file format, if we can trust the extension.</em></p>\n<p>Is there somewhere a site or database with a lot of information about a lot encrypted or binary file formats? Information should include:</p>\n<ul>\n<li>File use</li>\n<li>File layout and structure</li>\n<li>Eventually programs that can read or execute the file</li>\n</ul>\n<p>So I'm not looking for a way to identify the format of the file. I already know the file format, but need to have information about that format. When is the format used (in what applications), what's the format's structure?</p>\n</div>",
    "votes": "50",
    "answers": 12,
    "views": "5k",
    "tags": [
        "file-format"
    ],
    "user": null,
    "time": "Apr 4, 2013 at 15:56",
    "comments": [
        {
            "user": "perror",
            "text": "<span class=\"comment-copy\">I would guess that all these data are dispatched in the wild. I don't see any group capable to maintain a coherent collection of all the specification of all formats. But, I might just be ignorant as well. :)</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">So you have a file with an undocumented format? I think the question is still worded a bit ambiguous even now. Also, the closes you'd get is Wotsit and similar sites. Everything else would more likely be a site covering <i>domain</i> knowledge about whatever the specific format is used for.</span>",
            "time": null
        },
        {
            "user": "user187",
            "text": "<span class=\"comment-copy\">@0xC0000022l yeah, I intended to keep the question as broad as possible, but that didn't go well. I don't have a particular example file I'm looking at at the moment, I just wanted to know if there was a central place with file format information. Wotsit is a very good one indeed, as mentioned <a href=\"http://reverseengineering.stackexchange.com/a/1573/187\">in this answer</a>.</span>",
            "time": null
        },
        {
            "user": "Ange",
            "text": "<span class=\"comment-copy\">I find the question interesting, however, all good sites and libs I can think of for now have been mentioned already, so are you actually now (because of the bounty) looking for a precise methodology?</span>",
            "time": null
        },
        {
            "user": "user187",
            "text": "<span class=\"comment-copy\">@Ange Hachoir is the best I've seen up to now, however, since many things have been mentioned, perhaps a CW list would be better. If not, I'll just use the bounty to reward an existing answer. Especially the Hachoir thing seems suitable for that IMO.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am a developer for the <a href=\"https://github.com/vstinner/hachoir\" rel=\"nofollow noreferrer\">Hachoir project</a>, which aims to describe the format of any file down to the bit-level. Currently it has parsers for a number of well-known formats, including Java classes, Windows executables, MP3 files, etc. The full list of parsers can be found in the subdirectories <a href=\"https://github.com/vstinner/hachoir3/tree/master/hachoir/parser\" rel=\"nofollow noreferrer\">here</a>.</p>\n<p>When working on a new parser for <code>hachoir_parser</code>, it is often necessary to find information about a file format. There's no single source describing every format (even as Hachoir aspires to be this source, it is not nearly comprehensive enough). Generally, the first step is just to search for <code>&lt;file format name&gt; file format</code>, e.g. <code>java class file format</code>, and look for documentation on official sites (for java classes, this turns up Oracle's documentation, which should be all you need). If there are no official sites, you may still turn up some documentation from someone who has worked on the format in the past.</p>\n<p>For common file formats, this turns up the format specification you want about 90-95% of the time. Larger software companies, like Oracle and Microsoft, post their file format specifications online for interoperability purposes. For example, you can find documentation for PE (Windows EXE/DLL), MS Office formats (XLS, PPT, DOC), and other Microsoft formats by browsing or searching MSDN.</p>\n<p>For multimedia formats, the <a href=\"http://wiki.multimedia.cx/index.php?title=Main_Page\" rel=\"nofollow noreferrer\">Multimedia Wiki</a> is a great resource. They also cover some game file formats  as well.</p>\n<p>For a less common file format, for which I do not find a specification (or suitable description) from Googling, my approach is usually to find an open-source program that does understand the file, and either locate their format specification source (if described in a commit or README), or read their source code directly to understand the file format.</p>\n<p>If there are no open-source programs for the file, and no openly available descriptions of the file format online, the file format is probably quite obscure. For game files (in which many developers insist on using their own proprietary formats), I've found <a href=\"http://forum.xentax.com/\" rel=\"nofollow noreferrer\">XeNTaX</a> to offer some good pointers and a good community to help figure out the formats. With other kinds of formats, you may have to start examining the samples you have to compare the byte fields and elucidate their function. If you have a program that accepts these files, you can try changing the fields methodically to determine what effects they have on the program's output. This is ultimately the \"real\" reverse-engineering work, and I think it is not within the scope of this answer. </p>\n</div>",
            "votes": "36",
            "user": "Moshe D",
            "time": "Feb 26, 2019 at 9:36",
            "is_accepted": true,
            "comments": [
                {
                    "user": "alexanderh",
                    "text": "<span class=\"comment-copy\">I'm a big fan of the Hachoir project. I have been using it for years. Keep up the great work.</span>",
                    "time": null
                },
                {
                    "user": "Adam",
                    "text": "<span class=\"comment-copy\">One of the guys on XentaX also wrote a script/framework called QuickBMS which is quite amazing. It sounds like it may be useful for Hachoir. <a href=\"http://aluigi.altervista.org/quickbms.htm\" rel=\"nofollow noreferrer\">aluigi.altervista.org/quickbms.htm</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The <a href=\"http://linux.die.net/man/1/file\"><code>file(1)</code></a>, and the underlying <a href=\"http://linux.die.net/man/3/libmagic\"><code>libmagic(3)</code></a>, command fingerprints files based on the file content. For example:</p>\n<pre><code>$ file test.c\ntest.c: ASCII text\n$ file test.exe\ntest.exe: PE32 executable for MS Windows (console) Intel 80386 32-bit\n$ file test\ntest: ELF 32-bit LSB executable, ARM, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.16, not stripped\n$ file database.sqlite\ndatabase.sqlite: SQLite 3.x database\n</code></pre>\n<p>This information can then be used to search the Internet for the actual standard, RFC, ...</p>\n<hr/>\n<p>Another resource could be the <a href=\"http://www.sweetscape.com/010editor/templates.html\">010 Editor binary templates</a>, which include a lot of different file formats and which you can customize or develop yourself from scratch.</p>\n<hr/>\n<p>There is a German book I know called <a href=\"http://books.google.de/books/about/Dateiformate.html?id=k1pYXwAACAAJ&amp;redir_esc=y\">Dateiformate</a> <em>(German for: file formats)</em>.</p>\n<hr/>\n<p><a href=\"http://en.wikipedia.org/wiki/List_of_file_formats\">Wikipedia - List of file formats</a> contains a lot of links with information about certain file formats</p>\n</div>",
            "votes": "29",
            "user": "samuirai",
            "time": "Jun 1, 2013 at 15:00",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Peter Andersson",
                    "text": "<span class=\"comment-copy\">If this was the answer wouldn't the question be a duplicate of <a href=\"http://reverseengineering.stackexchange.com/questions/324/how-should-i-determine-the-format-of-this-audio-file\">this</a>? I think he wants a database of specifications of file formats. Not just magic numbers.</span>",
                    "time": null
                },
                {
                    "user": "user187",
                    "text": "<span class=\"comment-copy\">Exactly. Your answer is useful, but not an answer to the question. I do know the file format, I need to have information about that format - how the file is structured, for example.</span>",
                    "time": null
                },
                {
                    "user": "samuirai",
                    "text": "<span class=\"comment-copy\">You are right. Kind of misinterpreted the question. I just remembered that I saw a book with a lot of file formats in the \"library\" of my local hackerspace. It's a german book but maybe somebody can find the english version. I Updated my answer.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I like <code>file</code> to determine the type of file from the header magic and <a href=\"http://wotsit.org\" rel=\"noreferrer\">Wotsit</a> for standard file formats/documentation/reversed file format structures by other people.</p>\n<p><a href=\"http://www.fileformat.info/\" rel=\"noreferrer\">Fileformat.info</a> was suggested as another resource for those that don't like Wotsit or feel it's dated.</p>\n</div>",
            "votes": "10",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user539484",
                    "text": "<span class=\"comment-copy\">Wotsit is not really a good choice: downloading problems (in effect now!), poorly organized collection.</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@user539484: if you don't like the organization, use the <code>site:</code> or <code>inurl:</code> operators of a certain search engine with G to have an advanced search tool.</span>",
                    "time": null
                },
                {
                    "user": "user539484",
                    "text": "<span class=\"comment-copy\">@0xC0000022L, like it of some help with <code>wotsit.org</code>... It has been stuck in 1990s. <code>fileformat.info</code> collection is almost as broad and way friendlier for the reader. To demonstrate a frustration can be caused by wotsit i'd suggest an attempt to obtain New Executable related publications from wotsit collection.</span>",
                    "time": null
                },
                {
                    "user": "RobotHumans",
                    "text": "<span class=\"comment-copy\">@user539484 - Then why not just add it in?  The other answers doesn't give you any resource at all.  Just \"here's a tool that sort of works\".</span>",
                    "time": null
                },
                {
                    "user": "user539484",
                    "text": "<span class=\"comment-copy\">@Call me V, fileformat.info was listed already. I also use Wikipedia, sometimes their file layout articles are surprisingly good and technical.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The <a href=\"http://fileformats.archiveteam.org\">Lets Solve the File Format Problem wiki</a> covers quite a good number of obscure formats and is worth checking out if Wikipedia isn't doing the job for you. It's also a good place to contribute very detailed or obscure stuff that Wikipedia might deem out of scope.</p>\n<p>You may find help or advice from the library and archival digital preservation community which has been taking on problems of this nature for a number of years. The <a href=\"http://openplanetsfoundation.org/\">Open Planets Foundation</a> is a good place to start. In particular, the community (who I work with) collects examples of difficult or damaged file formats on a Github based <a href=\"https://github.com/openplanets/format-corpus\">Format Corpus</a>. Contributing to this can be useful in attracting advice from experts, and of course this helps to develop a useful resource for developers of digital preservation tools (for testing and validation). Files must be CC0 however!</p>\n<p>Finally, the other avenue to explore further would be the digital forensics community. The <a href=\"http://www.nsrl.nist.gov/\">National Software Reference Library</a>, for example, has some useful resources that could help around the fringes of your challenge.</p>\n</div>",
            "votes": "10",
            "user": "Paul Wheatley",
            "time": "Apr 8, 2013 at 16:00",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If I understand correct, You need to identify the file?\nFirst of all - extension is not 100% guarantee that file is what it pretend to be. You easily can rename binary.dll  to binary.dat or binary.hhh and still create file association or load it as DLL.</p>\n<p>So - to identify file, You may use <a href=\"http://mark0.net/soft-trid-e.html\">TrID</a> of Marco Pontello.</p>\n<p>Also - hex editor is a handy way to look into streams and all kind of dumps.</p>\n<p>When You identify the file - Google will help You to find correct way to edit\\open\\execute the file. </p>\n</div>",
            "votes": "7",
            "user": "Denis Laskov",
            "time": "Apr 4, 2013 at 8:33",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Jake Badlands",
                    "text": "<span class=\"comment-copy\">Thank you for telling about TrID, I didnt know about such a great program :)</span>",
                    "time": null
                },
                {
                    "user": "Denis Laskov",
                    "text": "<span class=\"comment-copy\">Always welcome, Jake :)</span>",
                    "time": null
                },
                {
                    "user": "user187",
                    "text": "<span class=\"comment-copy\">Thanks for your reply, but I don't have to identify the file. I already know the format (let's assume the extension is right, for now) but need to have information about that format - for example, how the file is structured.</span>",
                    "time": null
                },
                {
                    "user": "Denis Laskov",
                    "text": "<span class=\"comment-copy\">Then, as I said, Google will help You to find proper RFC or details per file format. as for .DLL - it structured almost similar to .EXE, except for export  part of PE header.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Check out the <a href=\"https://bitbucket.org/haypo/hachoir/wiki/Home\" rel=\"nofollow\">Hachoir</a> project. It is exactly what you are looking for. Hachoir-subfile is great because you can pass it a file stream and it will identify all embedded file types, size (if can be calculated) and their offset. Hachoir and dd are two of my favorite tools for carving files out of data streams. If you are running ubuntu type <code>sudo apt-get install hachoir</code>, then run <code>hachoir-subfile &lt;file_stream&gt;</code>.  </p>\n<p>If you need to dig a little deeper into the stream you can use <code>hachoir-urwid</code>. It will break the file up into known structures. </p>\n</div>",
            "votes": "6",
            "user": "0xC0000022L",
            "time": "Apr 17, 2013 at 4:17",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user187",
                    "text": "<span class=\"comment-copy\">I don't see where Hachoir gives information about a specific format? It's just a file identifier.</span>",
                    "time": null
                },
                {
                    "user": "nneonneo",
                    "text": "<span class=\"comment-copy\">[Disclaimer: I'm a Hachoir developer.] Hachoir parses files in several known formats to present a view of the file's contents, along with descriptions to identify each field in the file. Hachoir's goal is to understand a file down to the bit level. So, Hachoir is used for much more than file identification -- it can do field extraction, field modification, and will provide textual descriptions of every field in the file.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Like in many things, if you need more information, Wikipedia is the answer.  It only has detailed information for some formats, but usually has links to more in-depth technical descriptions of the formats.  You kind of have to guess what article the file format would be under, but in many cases you can find good information on (at least) many of the more common formats.  It's not ideal - perhaps it'd be a useful project to make a new \"file format\" wiki - but it does have a decent amount of information.</p>\n<p>It's far from an ideal source for this kind of data, but in terms of one-site resources it's one of the better options, and is certainly a good starting point.</p>\n<p>A few examples:</p>\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Java_class_file\">Java class File</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Portable_Executable\">Portable Executable Format</a> - this doesn't have the format itself, but has a high-level overview and a link to the spec in the \"External Links\" section</li>\n<li><a href=\"http://en.wikipedia.org/wiki/WAV_file\">WAV File Format</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/.3ds\">.3ds File Format</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Executable_and_Linkable_Format\">ELF Format</a> - some good links here too</li>\n</ul>\n</div>",
            "votes": "5",
            "user": "Robert Mason",
            "time": "Apr 8, 2013 at 13:20",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am afraid that there is no website on this topic yet :(<br/>\nFrom my experience, the situation when you have the file but do not know its type<br/>\nis not often, but when it happens it can be annoying and time-consuming to solve.<br/>\nBasically, you need to use hex editor to spot characters which could give you a clue,<br/>\nand download example files of suspected file types to analyze them and find similarities.<br/>\nThis approach is working for me in most cases.</p>\n</div>",
            "votes": "3",
            "user": "Jake Badlands",
            "time": "Apr 4, 2013 at 8:02",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user187",
                    "text": "<span class=\"comment-copy\">Sorry, I wasn't clear. I do know the file type (based on the extension), but need information on the file format in order to be able to read or execute it.</span>",
                    "time": null
                },
                {
                    "user": "Jake Badlands",
                    "text": "<span class=\"comment-copy\">@CamilStaps So if I understood correctly, you are talking about such kind of situation when you have a file (e.g. DLL) but do not know what is its purpose (e.g. which program is using it) ?</span>",
                    "time": null
                },
                {
                    "user": "user187",
                    "text": "<span class=\"comment-copy\">Yes, that, <i>and</i> what the purpose of that specific file is. So for example, I would like to see what <i>that</i> DLL file does. Therefore, I need information about the file format, and <a href=\"http://filext.com/file-extension/DLL\" rel=\"nofollow noreferrer\">this</a> doesn't provide enough information.</span>",
                    "time": null
                },
                {
                    "user": "Denis Laskov",
                    "text": "<span class=\"comment-copy\">To know, what DLL file does, You need to disassemble it, like any other binary. :)</span>",
                    "time": null
                },
                {
                    "user": "user187",
                    "text": "<span class=\"comment-copy\">I only mentioned DLL as an example. I would like to know if there is a standard place one goes to when he needs to have detailed information about a file format.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>About multimedia formats: <a href=\"http://wiki.multimedia.cx/index.php?title=Main_Page\" rel=\"nofollow\">http://wiki.multimedia.cx/index.php?title=Main_Page</a></p>\n<p>Signsrch will find patterns in a file: <a href=\"http://aluigi.altervista.org/mytoolz.htm\" rel=\"nofollow\">http://aluigi.altervista.org/mytoolz.htm</a>, like binwalk: <a href=\"http://code.google.com/p/binwalk/\" rel=\"nofollow\">http://code.google.com/p/binwalk/</a></p>\n</div>",
            "votes": "3",
            "user": "Laurent Clévy",
            "time": "Apr 6, 2013 at 17:43",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Laurent Clévy",
                    "text": "<span class=\"comment-copy\">and  you can find Amiga file format information here: <a href=\"http://lclevy.free.fr/amiga/formats.html\" rel=\"nofollow noreferrer\">lclevy.free.fr/amiga/formats.html</a>, about the Canon Raw v2 format here: <a href=\"http://lclevy.free.fr/cr2/\" rel=\"nofollow noreferrer\">lclevy.free.fr/cr2</a>, MO3 format (compressed module): <a href=\"http://lclevy.free.fr/mo3/\" rel=\"nofollow noreferrer\">lclevy.free.fr/mo3</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><a href=\"http://www.nationalarchives.gov.uk/information-management/our-services/dc-file-profiling-tool.htm\" rel=\"nofollow\">DROID</a> from the National Archives of the Uk is also useful for identifying file formats. </p>\n</div>",
            "votes": "2",
            "user": "Euan",
            "time": "Apr 5, 2013 at 5:44",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user187",
                    "text": "<span class=\"comment-copy\">I already have <i>identified</i> the format, I need information about that format.</span>",
                    "time": null
                },
                {
                    "user": "Euan",
                    "text": "<span class=\"comment-copy\">DROID links to the pronom database (<a href=\"http://www.nationalarchives.gov.uk/PRONOM/Default.aspx\" rel=\"nofollow noreferrer\">nationalarchives.gov.uk/PRONOM/Default.aspx</a>) .  Wikidata is another option e.g. <a href=\"https://www.wikidata.org/wiki/Q2141903\" rel=\"nofollow noreferrer\">wikidata.org/wiki/Q2141903</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Most file formats have headers, such as <code>P K 0x03 0x04</code> for zip files or <code>0x89 P N G 0x0D 0x0A 0x1A 0x0A</code> for PNG files.</p>\n<p>So, most of time, you just need to read the first bytes to know the format of the file.</p>\n<p>You'll find plenty of file format descriptions on <a href=\"http://www.fileformat.info/format/all.htm\" rel=\"nofollow\">http://www.fileformat.info/format/all.htm</a>\n­­­</p>\n</div>",
            "votes": "2",
            "user": "user539484",
            "time": "Apr 5, 2013 at 15:57",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This is the tool I have been using when I have needed to recognize a file format or files inside a (big) dump. It has a big signature BD file that you/people can contribute to.</p>\n<blockquote>\n<p><strong>Signsrch 0.2.4 (signsrch)</strong></p>\n<p>tool for searching signatures inside files, extremely useful in\n  reversing engineering for figuring or having an initial idea of what\n  encryption/compression algorithm is used for a proprietary protocol or\n  file. it can recognize tons of compression, multimedia and encryption\n  algorithms and many other things like known strings and anti-debugging\n  code which can be also manually added since it's all based on a text\n  signature file read at runtime and easy to modify. supports\n  multithreading, scanning of folders using wildcards, scanning of\n  processes, conversion of the executables offsets in memory offsets,\n  loading of custom signature files and their automatic checking for\n  avoiding errors, automatic finding of the instructions that reference\n  the found signatures (like \"Find references\" of Ollydbg) and the\n  launching of an executable placing an INT3 byte at the desired memory\n  offset (for example one of those retrieved with the -F option, watch\n  the Video setion for an example). the tool supports 8, 16, 32 and 64\n  bits, float and double plus automatic CRC table creation and C style\n  strings.</p>\n</blockquote>\n<p>Source: <a href=\"http://aluigi.altervista.org/mytoolz.htm\" rel=\"nofollow\">http://aluigi.altervista.org/mytoolz.htm</a></p>\n</div>",
            "votes": "0",
            "user": "Alexandre Dumont",
            "time": "Aug 25, 2016 at 22:01",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Jongware",
                    "text": "<span class=\"comment-copy\">As the OP commented on five similar answers: no need for indentifying, he already knows what the file type is.</span>",
                    "time": null
                },
                {
                    "user": "Alexandre Dumont",
                    "text": "<span class=\"comment-copy\">The point is to help other that might have the same question later on.</span>",
                    "time": null
                }
            ]
        }
    ]
}