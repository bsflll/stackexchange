{
    "title": "How does the INC instruction affect the parity flag?",
    "link": "https://reverseengineering.stackexchange.com/questions/11369/how-does-the-inc-instruction-affect-the-parity-flag",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Could you please explain how the <code>INC</code> x86 assembly instruction is affecting the Parity Flag (PF)?</p>\n<p>I have the following code:</p>\n<pre><code>.text:00401413 mov     edi, offset user_id ; user_id at memory location 0x40D020\n...\n.text:00401421 inc     edi                 ; edi = 0x40D021\n...\n.text:0040142D inc     edi\n.text:0040142E jnp     short no_parity\n</code></pre>\n<p>With user_id defined as follows:</p>\n<pre><code>.bss:0040D020 user_id         db 21h dup(?)\n.bss:0040D042                 db    ? ;\n.bss:0040D043                 db    ? ;\n.bss:0040D044                 db    ? ;\n...\n</code></pre>\n<p>At offset <code>0x40142D</code>:</p>\n<pre><code>0:000&gt; r edi\nedi=0040d021\n0:000&gt; dd 40d021\n0040d021  4f4f4f4f 4f4f4f4f 4f4f4f4f 4f4f4f4f\n0040d031  4f4f4f4f 4f4f4f4f 4f4f4f4f 004f4f4f\n0040d041  00000000 00000000 00000000 00000000\n0040d051  00000000 00000000 00000000 00000000\n0040d061  00000000 00000000 00000000 00000000\n0040d071  00000000 00000000 00000000 00000000\n0040d081  00000000 ff000000 01000000 01000000\n0040d091  02000000 00000000 01000000 00000000\n</code></pre>\n<p>If my understanding of the parity flag is correct, it should apply to the low 8 bits: <code>01001111</code> because:</p>\n<pre><code>edi = 0x4f4f4f4f = 0b1001111010011110100111101001111\n</code></pre>\n<p>The number of <code>1</code> in <code>01001111</code> is odd (five <code>1</code>), which should set the PF to <code>1</code>. But this is not the case:</p>\n<pre><code>0:000&gt; r pf\npf=1\n</code></pre>\n<p>...which leads to the jump not to be taken at offset <code>0x40142E</code>.</p>\n<p>Thank you for your help.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "488",
    "tags": [
        "assembly",
        "x86"
    ],
    "user": "Sebastien Damaye",
    "time": "Nov 21, 2015 at 7:47",
    "comments": [
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">Lots of good information in <a href=\"http://stackoverflow.com/q/3925528/2564301\">stackoverflow.com/q/3925528/2564301</a>. Pay attention to the pointer to Intel's Reference Manual, always the first thing you should look in to.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The parity flags is \"Set if the least-significant byte of the result contains an even number of 1 bits; cleared otherwise.\"</p>\n<p>Source: section 3.4.3.1 of <a href=\"http://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-manual-325462.pdf\" rel=\"nofollow\">http://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-manual-325462.pdf</a></p>\n<p>So <code>edi = 0x0040d021 =&gt; least significant byte = 0x21</code></p>\n<p><code>0x21 = 0b00100001 = 2 bits set = even number of bits sets =&gt; PF set</code></p>\n<p>(It's not clear if the value you give for edi is before or after the <code>inc</code>.  If it's before then after the <code>inc</code> edi will equal <code>0x0040d022</code>, which still has 2 bits set.)</p>\n</div>",
            "votes": "1",
            "user": "Ian Cook",
            "time": "Nov 20, 2015 at 23:07",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Sebastien Damaye",
                    "text": "<span class=\"comment-copy\">So this is the value of EDI itself that is checked (0x40D021) instead of the value at the memory location it points to (0x4F4F4F4F), right?</span>",
                    "time": null
                },
                {
                    "user": "Ian Cook",
                    "text": "<span class=\"comment-copy\">Exactly.  The <code>inc</code> instruction acts on <code>edi</code> and it is the resulting value of <code>edi</code> that is checked.</span>",
                    "time": null
                }
            ]
        }
    ]
}