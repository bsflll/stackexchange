{
    "title": "Using rbreak without import functions",
    "link": "https://reverseengineering.stackexchange.com/questions/29718/using-rbreak-without-import-functions",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>While debugging  with GDB I want to break for each function and print the PC register.</p>\n<pre><code>rbreak .\ndefine hook-stop\n   i r $PC\n   c\nend\n</code></pre>\n<p>The problem is that is stop on functions that imported like <code>printf</code> and <code>memcpy</code> .</p>\n<p>How can I stop only on functions in my binary that not imported?</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "35",
    "tags": [
        "debugging",
        "linux",
        "gdb",
        "breakpoint"
    ],
    "user": "yfr24493AzzrggAcom",
    "time": "Dec 13, 2021 at 22:00",
    "comments": [
        {
            "user": "lockcmpxchg8b",
            "text": "<span class=\"comment-copy\">What definition of 'function' are you using?  Does it need to be something you're exporting?  if you use <code>readelf -s &lt;target&gt;</code> does the symbol table contain the functions you want to find, or are you just looking for anything reached by a 'call' instruction during execution?  (I ask because the optimizer can do funny things to functions, including merging the tail of several similar functions into a single set of instructions shared by all.)</span>",
            "time": null
        },
        {
            "user": "yfr24493AzzrggAcom",
            "text": "<span class=\"comment-copy\">@lockcmpxchg8b I looking for all the function that implement in my binary.</span>",
            "time": null
        }
    ],
    "answers_data": []
}