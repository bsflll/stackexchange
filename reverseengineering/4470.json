{
    "title": "Reverse pseudo code",
    "link": "https://reverseengineering.stackexchange.com/questions/4470/reverse-pseudo-code",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am reversing a binary which seems to have all the symbols exported which helps.  What I have seen is a pile of variables and functions which all start with the letter '<code>v</code>', for example <code>v101</code>.  I have been playing around with the decompiler from IDA and noticed that its pseudo code generally uses the same form having variables starting with the letter '<code>v</code>'.  I know this may seem silly to ask but I am looking at a binary which is actually just IDA pro pseudo code compiled?</p>\n<p>A snippet of pseudo code generated:</p>\n<pre><code>int v3480()\n{\n  __int32 v0; // r0@1\n\n  v0 = time(0);\n  srand48(v0);\n\n  // TODO Object initialisation!!\n  v877 = &amp;v3688;\n  v1277 = &amp;v7299;\n  v1634 = &amp;v5690;\n  v2042 = &amp;v7024;\n\n  v873 = &amp;v3688;\n  v872 = (char *)&amp;v3688 + 1;\n  v1274 = &amp;v7299;\n  v485 = &amp;unk_40B69FF5;\n\n  v1631 = &amp;v5690;\n  v1629 = (char *)&amp;v5690 + 1;\n\n  v2037 = &amp;v7024;\n  v2038 = (char *)&amp;v7024 + 1;\n\n  v5661 = -1;\n  v2325 = -1;\n  v1259 = -1;\n  v4048 = -1;\n  v5509 = &amp;v5497;\n  v3845 = &amp;unk_40B69EEC;\n  v3522 = &amp;v4191;\n  v7253 = &amp;unk_40B69EE4;\n  v2081 = &amp;v3009;\n  v5828 = &amp;unk_40B69EDC;\n  v7014 = &amp;v2061;\n  v3636 = &amp;unk_40B69ED4;\n  v217 = &amp;v6520;\n  v218 = &amp;v6524;\n  v219 = &amp;v6525;\n  v221 = &amp;v6523;\n  v1455 = &amp;v6523;\n  unk_40B69EF4 = &amp;v6524;\n  v7297 = &amp;dword_40A071D0;\n  v5530 = &amp;dword_40A071D0;\n  if ( dword_40A071D0 )\n  {\n    v6935();\n  }\n  else\n  {\n    memcpy(v219, &amp;v5764, 0xE3958u);\n    dword_40A071D0 = 1;\n  }\n  return 0;\n}\n</code></pre>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ida",
        "hexrays"
    ],
    "user": "allbabel",
    "time": "Jun 1, 2014 at 8:38",
    "comments": [
        {
            "user": "Willem Hengeveld",
            "text": "<span class=\"comment-copy\">that sounds more like obfuscation, if all variables are  like 'v'+NUMBER.</span>",
            "time": null
        },
        {
            "user": "yaspr",
            "text": "<span class=\"comment-copy\">I suppose you should post part of the code so that the people who know what IDA's pseudo-code looks like can help. Otherwise, I don't think anybody can predict anything :D</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You're looking at pseudocode reconstructed from the binary.\nAfter compilation all variable names disappeared, so IDA generates new generic ones.</p>\n<p>It looks like that all v* variables are local (allocated on the stack) </p>\n</div>",
            "votes": "1",
            "user": "w s",
            "time": "May 28, 2014 at 18:14",
            "is_accepted": false,
            "comments": [
                {
                    "user": "allbabel",
                    "text": "<span class=\"comment-copy\">Yes I know that but what I am seeing is that I have lots of functions in the original binary which have exported names starting with the character 'v' as well.</span>",
                    "time": null
                },
                {
                    "user": "allbabel",
                    "text": "<span class=\"comment-copy\">What I am trying to say is that these names exist before generating psuedo code</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">do you have debug information in this file ? i</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">Can you post the function pseudocode somewhere ?</span>",
                    "time": null
                },
                {
                    "user": "allbabel",
                    "text": "<span class=\"comment-copy\">Its above in the question</span>",
                    "time": null
                }
            ]
        }
    ]
}