{
    "title": "Getting value of local variable in Ghidra",
    "link": "https://reverseengineering.stackexchange.com/questions/27689/getting-value-of-local-variable-in-ghidra",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've been trying to solve a crackme challenge by examining it's decompiled version by Ghidra.\nSo I figured the code where the <code>strcmp</code> is done as shown in the figure below. Now I need to to patch the program to make it print the password if <code>strcmp</code> fails.</p>\n<ul>\n<li>The password is stored in <code>local_40</code></li>\n</ul>\n<p>But I don't know how to patch the instruction to print out the value at local_40</p>\n<p>Instead of <code>MOV dword ptr [ESP],0x4b1050</code> what variable in this instruction should be edited? If my understanding is correct then the above instruction is loading the ESP register with the value at <code>0x4b1050</code>\nso how will I get the address of <code>local_40</code>?</p>\n<p><a href=\"https://i.sstatic.net/sZa8W.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/sZa8W.png\"/></a></p>\n</div>",
    "votes": "3",
    "answers": 0,
    "views": "3k",
    "tags": [
        "disassembly",
        "ghidra"
    ],
    "user": "Nimrod",
    "time": "May 22, 2021 at 16:39",
    "comments": [
        {
            "user": "Dvd848",
            "text": "<span class=\"comment-copy\">Are you sure you want to patch the program in order to discover the password? It would probably be easier to use a debugger or <code>ltrace</code> for this matter.</span>",
            "time": null
        },
        {
            "user": "Nimrod",
            "text": "<span class=\"comment-copy\">I'll resort to that if this didn't work, but just to learn this stuff, some help is appreciated</span>",
            "time": null
        },
        {
            "user": "Dvd848",
            "text": "<span class=\"comment-copy\">I'm guessing that you can try something like <code>LEA EAX, [EBP - 0x3c]; MOV dword ptr [ESP], EAX</code> (notice that <code>local_40</code> is actually <code>EBP - 0x3c</code>). You'll need to override some instructions before <code>0x40151a</code> as well, and therefore to point the <code>JNZ</code> accordingly.</span>",
            "time": null
        }
    ],
    "answers_data": []
}