{
    "title": "Radare2 doesn't update current address, when single-step debugging using `ds`?",
    "link": "https://reverseengineering.stackexchange.com/questions/20114/radare2-doesnt-update-current-address-when-single-step-debugging-using-ds",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>Radare2 doesn't update current address, when single-step debugging using <code>ds</code>?</p>\n</blockquote>\n<p>I'm debugging an ELF binary on Linux using single-step (<code>ds</code>). The problem is that the current address at the prompt doesn't update after each step.</p>\n<p>The prompt:</p>\n<p><a href=\"https://i.sstatic.net/yxvOx.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/yxvOx.png\"/></a></p>\n<p>How do I make Radare2 update the prompt to reflect the current value of EIP?</p>\n<p>Furthermore, is it possible to make Radare2 automatically disassemble the next instruction after each <code>ds</code>, like it is possible with GDB?</p>\n</div>",
    "votes": "3",
    "answers": 2,
    "views": "506",
    "tags": [
        "debugging",
        "radare2"
    ],
    "user": "Shuzheng",
    "time": "Dec 11, 2018 at 7:46",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>How do I make Radare2 update the prompt to reflect the current value of EIP?</p>\n</blockquote>\n<p>Just use <code>e cmd.prompt = sr PC</code> for it. See <a href=\"https://reverseengineering.stackexchange.com/questions/21580/radare2-show-current-rip-and-current-instruction-while-stepping\">question</a> and <a href=\"https://github.com/radare/radare2/issues/12581\" rel=\"nofollow noreferrer\">issue</a> for more details.</p>\n<blockquote>\n<p>Furthermore, is it possible to make Radare2 automatically disassemble the next instruction after each ds, like it is possible with GDB?</p>\n</blockquote>\n<p>Not automatic solution, but you can do <code>pd1</code> each time you want to see the next instruction to perform.</p>\n<p>However, if you want it <strong>badly</strong> to be automatic, you can modify the source code to perform <code>pd1</code> automatically for you. To do so, you want to modify <code>libr/core/cmd_debug.c</code>. Just find the place where <code>ds</code> is handled and put relevant code there like so:\n<a href=\"https://i.sstatic.net/dUyS0.jpg\" rel=\"nofollow noreferrer\"><img alt=\"r2_pd1\" src=\"https://i.sstatic.net/dUyS0.jpg\"/></a></p>\n<p>Then run <code>make</code> and enjoy the new functionality.\n<a href=\"https://i.sstatic.net/3IoLp.jpg\" rel=\"nofollow noreferrer\"><img alt=\"r2_pd1_added\" src=\"https://i.sstatic.net/3IoLp.jpg\"/></a></p>\n</div>",
            "votes": "2",
            "user": "bart1e",
            "time": "Jul 21, 2019 at 17:42",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>What you can do is to use <code>pd</code> with the temporary seek operator <code>@</code> passing <code>rip</code> register so that <code>pd</code> will work from that address.</p>\n<p>So instead of <code>pd</code> just use <code>pd@rip</code> and you should be fine with that.</p>\n<pre><code>[0x00000000]&gt; pd\n    ;-- rsi:\n    0x00000000      ff             invalid\n    ...\n\n\n[0x00000000]&gt; pd@rip\n    ;-- rip:\n    ┌─&gt; 0x10000b3bf      4c892424       mov qword [rsp], r12\n    ╎   0x10000b3c3      4489ea         mov edx, r13d\n    ╎   0x10000b3c6      4c89f9         mov rcx, r15\n</code></pre>\n<p>Additionally you can use the <code>V!</code>-mode (or any other graphical view mode for that matter) view for debugging. They get automatically updated after you step over your binary.</p>\n</div>",
            "votes": "0",
            "user": "Paweł Łukasik",
            "time": "Dec 11, 2018 at 7:13",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Shuzheng",
                    "text": "<span class=\"comment-copy\">Thank you - do you think it is a bug in Radare2? Or what's the reason for not updating the prompt address?</span>",
                    "time": null
                },
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">no. I think your seek position is just unrelated to the <code>rip</code> while debugging. You can imagine doing some stepping and investigating data at some other address. If you seek position changes every time you step it might be also frustrating.</span>",
                    "time": null
                },
                {
                    "user": "Shuzheng",
                    "text": "<span class=\"comment-copy\">But sometimes the prompt address update, e.g. after pressing <code>ds</code>, say, 10 times?  Do you know if it is possible to make Radare2 update the prompt address after each <code>ds</code>? Also, do you know if it is possible to make Radare2 automatically disassembly the next instruction after each <code>ds</code> (GDB can do that)?</span>",
                    "time": null
                }
            ]
        }
    ]
}