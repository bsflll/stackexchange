{
    "title": "Reverse engineering Android vendor system apps",
    "link": "https://reverseengineering.stackexchange.com/questions/12393/reverse-engineering-android-vendor-system-apps",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to reverse engineer certain Samsung system apps in the Galaxy S6 firmware system image, such as KnoxAttestationAgent.apk. I'm a noob when it comes to reverse engineering, and so far my attempts have been unsuccessful. Here's what I've done so far.</p>\n<ul>\n<li>Run apktool on the APK. I got a few XML files, including the AndroidManifest, but no source. Apparently this is because there is no classes.dex in the package.</li>\n<li>Noticing that there's a KnoxAttestationAgent.odex in the arm64/ folder, I tried to run baksmali 2.1.1 on it. However, this version apparently doesn't support Android 5 versions of oat. The S6 firmware I'm working on is 5.1.1.</li>\n<li>I tried an earlier version of baksmali 2.0.8 which doesn't have the limitation, but I get another error \"KnoxAttestationAgent.odex is not an apk, dex file or odex file.\"</li>\n<li>I tried to run AndroGuard on the APK, but was also unsuccessful. A bunch of errors.</li>\n</ul>\n<p>Is there a way for these tools (or others) to work on system apps such as the Samsung Knox ones?</p>\n<p>Thanks!</p>\n</div>",
    "votes": "5",
    "answers": 1,
    "views": "3k",
    "tags": [
        "android",
        "apk"
    ],
    "user": "user1118764",
    "time": "Apr 11, 2016 at 8:23",
    "comments": [
        {
            "user": "Antimony",
            "text": "<span class=\"comment-copy\">A lot of system apps are also uploaded to Play. If it is, you can get an ordinary non-odexed apk that way.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>Run apktool on the APK. I got a few XML files, including the\n  AndroidManifest, but no source. Apparently this is because there is no\n  classes.dex in the package.</p>\n</blockquote>\n<p>That's because these are odexed apps: when an app is odexed, the classes.dex is extracted from the apk.</p>\n<blockquote>\n<p>I tried an earlier version of baksmali 2.0.8 which doesn't have the limitation, but I get another error \"KnoxAttestationAgent.odex is not an apk, dex file or odex file.\"</p>\n</blockquote>\n<p>That's right, because the .odex file is not an apk. An odex file is basically an optimized version of the classes.dex</p>\n<p>So, in order to disassemble this app, you have to deodex it.</p>\n<p>Here is an HOW-TO guide (I haven't tested it personally): <a href=\"http://www.naldotech.com/how-to-deodex-applications-on-android-5-0-lollipop/\" rel=\"nofollow\">http://www.naldotech.com/how-to-deodex-applications-on-android-5-0-lollipop/</a></p>\n<p>Eventually, if you follow all the steps correctly, you will have an apk ready to be reversed using APKTool. \nGood luck.</p>\n</div>",
            "votes": "3",
            "user": "diff",
            "time": "Apr 12, 2016 at 5:56",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user1118764",
                    "text": "<span class=\"comment-copy\">Thanks. I ended up just using oat2dex on the odex file, which generated a dex file, and then dex2jar on the generated dex file, which generated a jar file, and finally used JD-GUI on the jar file.</span>",
                    "time": null
                }
            ]
        }
    ]
}