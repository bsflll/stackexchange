{
    "title": "Can PowerPC64 ELF file have 32-bit pointers?",
    "link": "https://reverseengineering.stackexchange.com/questions/8704/can-powerpc64-elf-file-have-32-bit-pointers",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've been given an ELF binary file which self describes as PowerPC 64-bit. The <code>e_entry</code> field of the ELF header points to the beginning of a section called <code>.opd</code>. According to this <a href=\"http://refspecs.linuxfoundation.org/ELF/ppc64/PPC-elf64abi-1.9.html#ELF-HEAD\" rel=\"nofollow\">specification</a>, it is supposed to point to a function descriptor. The same <a href=\"http://refspecs.linuxfoundation.org/ELF/ppc64/PPC-elf64abi-1.9.html#FUNC-DES\" rel=\"nofollow\">specification</a> states that a function descriptor consists of three doublewords (64-bit words). </p>\n<p>However, the binary in question (available <a href=\"https://sourceforge.net/p/decompiler/feature-requests/11/attachment/21sample.elf\" rel=\"nofollow\">here</a>) appears to have only two 32-bit words for each function descriptor. </p>\n<p>So the question is, why are there 32-bit pointers in this 64-bit binary? </p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "318",
    "tags": [
        "elf",
        "powerpc"
    ],
    "user": "John Källén",
    "time": "Apr 15, 2015 at 12:39",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>PS3 (cell) ABI used 64-bit registers but 32-bit pointers. Maybe this sample is from there.</p>\n<p>P.S. section names <code>.sceStub.text</code> and <code>.rodata.sceResident</code> definitely point to Sony code (SCE= Sony Computer Entertainment)</p>\n</div>",
            "votes": "4",
            "user": "Igor Skochinsky",
            "time": "Apr 15, 2015 at 16:17",
            "is_accepted": true,
            "comments": [
                {
                    "user": "John Källén",
                    "text": "<span class=\"comment-copy\">Is there any (preferrably documented) way to tell that a file is a PS3 executable, as opposed to a \"regular\" PPC ELF file with 64-bit pointers? I see no clues in the standard ELF headers. Are there any other ways to determine this, apart from looking at those section names?</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">check <code>e_ident[EI_OSABI]</code>.</span>",
                    "time": null
                }
            ]
        }
    ]
}