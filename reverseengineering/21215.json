{
    "title": "Difficulty in debugging with dnSpy",
    "link": "https://reverseengineering.stackexchange.com/questions/21215/difficulty-in-debugging-with-dnspy",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a dotnet malware sample that I'm trying to debug with <code>dnSpy</code>. It has string obfuscation (contains function names such as <code>BarriersBottomed</code>, etc.) I cleaned the sample using <code>de4dot</code> and renamed functions to make them more understandable.</p>\n<p>I placed a breakpoint on <code>Main</code> and also specified in the debug settings to break at <code>Entry Point</code>, but the program never hits the breakpoint. When I click on <code>Start</code>, it runs for a few seconds and then I get a <code>dnSpy</code> error:</p>\n<pre><code>An unhandled exception occurred in kahjvb-cleaned.exe (2160)\nException: ???\nMessage: \"&lt;no exception message&gt;\"\n</code></pre>\n<p>So, in the <code>Debug</code> options I checked the <code>Ignore unhandled exceptions</code> and restarted debugging with the same options as before. Now, the debugger just runs for a few seconds and the debugging process completes. It still doesn't hit the breakpoint.</p>\n<p>Has anyone faced an issue of this type before or has any insights into this problem? Thanks for the help!</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "3k",
    "tags": [
        "malware",
        "dynamic-analysis"
    ],
    "user": "Nikhil",
    "time": "Apr 25, 2019 at 12:26",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">It might be difficult to propose anything without looking into this specific binary.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Debugging a \"cleaned\" binary is typically hard.  Many cleaning techniques will leave you with a malformed binary that is easy to \"read\" but won't execute properly.  I suggest statically analyzing the \"cleaned\" version and then using what you learn to debug the original version.</p>\n</div>",
            "votes": "2",
            "user": "knowmalware",
            "time": "Apr 30, 2019 at 1:06",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Nikhil",
                    "text": "<span class=\"comment-copy\">Right, that's what I ended up doing. Thanks!</span>",
                    "time": null
                }
            ]
        }
    ]
}