{
    "title": "IDA Pro - Error When Modifying JMP Instruction",
    "link": "https://reverseengineering.stackexchange.com/questions/11640/ida-pro-error-when-modifying-jmp-instruction",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am new to ASM. Working in IDA Pro 6.8 on a 64-bit executable. </p>\n<p>I am not able to modify the jmp address for this instruction:</p>\n<pre><code>    ........   \n    .text:0000000141BAFB57 loc_141BAFB57:                          \n    .text:0000000141BAFB57                 lea     rcx, [rbp+520h+var_20]\n    .text:0000000141BAFB5E                 lea     rdx, abc_data\n    .text:0000000141BAFB65                 call    sub_141CCAC80\n    .text:0000000141BAFB6A                 jmp     loc_141BAF9D6\n    .text:0000000141BAFB6A subroutine endp\n    .text:0000000141BAFB6A\n    .text:0000000141BAFB6F\n</code></pre>\n<p>I want to either change the jmp address from loc_141BAF9D6 to loc_141BAFA9C or simply nop the instruction...</p>\n<p>every time I attempt this in IDA Pro 6.8 it moves the jmp (or the nop) instruction outside the subroutine endp closing, and therefore IDA gives me now a SP-Analysis failed error... example:</p>\n<pre><code>.text:0000000141BAFB57 loc_141BAFB57:                          \n.text:0000000141BAFB57                 lea     rcx, [rbp+520h+var_20]\n.text:0000000141BAFB5E                 lea     rdx, abc_data\n.text:0000000141BAFB65                 call    sub_141CCAC80\n.text:0000000141BAFB65 subroutine endp ; sp-analysis failed\n.text:0000000141BAFB65\n.text:0000000141BAFB6A                 jmp     loc_141BAFA9C\n.text:0000000141BAFB6F\n</code></pre>\n<p>I've tried editing the instruction via Edit &gt; Patch Program Assemble, directly in HEX view, using IDAPatcher, and using Fetanyl plugin... it always moves the instruction outside of the endp statement, breaking the code...</p>\n<p>Is this not possible in general or what am I doing wrong ?</p>\n<p>I've tried OllyDbg but it does not open 64-bit files...</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "ollydbg"
    ],
    "user": "m_j",
    "time": "Dec 28, 2015 at 0:20",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It is possible. I think that it is bug in IDA (editing last instruction of the function removes it from the function, I succeeded to reproduce this behavior), but you can work it around by fixing the function after patching.</p>\n<p>The easiest way to do it is as follows:</p>\n<ol>\n<li>After doing the patching</li>\n<li>Place a cursor to the instruction removed from the function in IDA-View-A window (regular assembly window)</li>\n<li>and press E. This will define the end of function to the current instruction, which means to the address where it was before.</li>\n</ol>\n<p>You can do the same by editing the function end address in function properties dialog (Edit-&gt;Functions-&gt;Edit Function or <kbd>Alt-P</kbd>.\nGood luck.</p>\n</div>",
            "votes": "1",
            "user": "w s",
            "time": "Dec 28, 2015 at 5:27",
            "is_accepted": true,
            "comments": []
        }
    ]
}