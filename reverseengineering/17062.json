{
    "title": "Is there a static address to a pointer on Mac OS?",
    "link": "https://reverseengineering.stackexchange.com/questions/17062/is-there-a-static-address-to-a-pointer-on-mac-os",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Given the sample code below:</p>\n<pre><code>#include &lt;iostream&gt; \n\nstruct Data {\n    int a;\n    int b;\n    int c;\n};\n\nint main() {\n    Data *d = new Data;\n    d-&gt;a = 1337;\n    d-&gt;b = 1338;\n    d-&gt;c = 1339;\n\n    std::cout &lt;&lt; d &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>\n<p>Printing out the address of the pointer <code>d</code> is never the same (which seems logical). But the pointer that points to the base of <code>d</code> is also never the same.</p>\n<p>Is there a way to find a static address that is always the same and points to the base of <code>d</code>? Or do I need to do this with a signature scan?</p>\n<p>The main purpose is to always have a pointer to the base of <code>d</code>, without disassembling it when I restarting the program.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "125",
    "tags": [
        "c++",
        "c",
        "pointer",
        "macos"
    ],
    "user": "Anthony De Meulemeester",
    "time": "Dec 28, 2017 at 14:03",
    "comments": [
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">Is the addition \"on Mac OS\" in your title and tags relevant? The observed behavior is common for almost all operating systems.</span>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">\"Is there a way to find a static address ...\" when live debugging? (I guess so; but maybe you might want to add the procedure you are using.)</span>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\"><i>why</i> is the first observation \"logical\" but the other isn't?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>By declaring <code>d</code> inside main() it is a local scope variable, which exists on the stack and is therefore dynamic.</p>\n<p>If you declare this pointer outside of main, it will be a global variable and it will have the same address every time, as long as there is know memory randomization provided as security measure of the OS.</p>\n</div>",
            "votes": "1",
            "user": "GuidedHacking",
            "time": "May 17, 2020 at 19:20",
            "is_accepted": false,
            "comments": []
        }
    ]
}