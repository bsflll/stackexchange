{
    "title": "How to extract information from a binary file knowing the target info",
    "link": "https://reverseengineering.stackexchange.com/questions/25590/how-to-extract-information-from-a-binary-file-knowing-the-target-info",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have some measured data comes from a various types of sensors. The sensors are connected to a data-logger in order to store measurement data. After measurement, the data transported and stored in a logosense data-logger.</p>\n<p><strong>EDIT:</strong> For reading the stored measurement data we can use \"HYDRAS 3\" a software developed by OTT (using RS232 serial connection and OTT hrdrosence protocol). After reading the data this <a href=\"https://privatebin.net/?e57a3210c8ba7673#BKqxHMT8wR4chTygifft9iGdCZADT2fGdhWtHT1N2U4B\" rel=\"nofollow noreferrer\">read-file</a> has been obtained. At the same time we have monitored the serial port and the communication between the data-logger and HYDRAS to obtain the following <a href=\"https://privatebin.net/?625ee60b6c8749ec#GRK2MQFZbHbm2Eghqt1pLEeVoRiLCzAef3AW8eQur3PE\" rel=\"nofollow noreferrer\">monitor-file</a>.</p>\n<p>My question is how can i map these two file and extract the measured data at different measurement times from the monitor-file?(or just understand the file).</p>\n<p>It seems that my question is not a cryptography problem, I was wondering how Reverse Engineering can solve my problem. Any starting tips?</p>\n<p>P.S. the read-file is just for level sensor and the measured data are in meters. e.g. 3.522 at time 10:00, 3.515 at time 11:00 and both are measured on 11/11/2019</p>\n<p>Any help or guidelines will be greatly appreciated. Thank you.</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "606",
    "tags": [
        "ida",
        "binary-analysis",
        "decryption",
        "unknown-data"
    ],
    "user": "engineer1155",
    "time": "Jan 20, 2021 at 10:29",
    "comments": [
        {
            "user": "Ian Cook",
            "text": "<span class=\"comment-copy\">Please share the files somewhere accessible and include, in the question, a hexdump of the beginning of the files.</span>",
            "time": null
        },
        {
            "user": "engineer1155",
            "text": "<span class=\"comment-copy\">@IanCook Sorry for the links. I updated them!</span>",
            "time": null
        },
        {
            "user": "pythonpython",
            "text": "<span class=\"comment-copy\">The links expired. Please repost.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<ol>\n<li><p>it is surprising that HYDRAS 3 does not allow you to export data at least in csv format.</p>\n</li>\n<li><p>monitor-file is a log file not so interesting</p>\n</li>\n<li></li>\n</ol>\n<h2>all data you needs are in the read-file\nI quickly adapted an html file, which I use to extract my data from a text file, to your read-file.\nIt draws a curve of your data.\nThe ERR.05 ERR.10 value are replaced by the value 0.000\nIf it can help you, here it is:</h2>\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;\n&lt;html&gt;\n    \n    &lt;head&gt;\n        &lt;META content=\"text/html; charset=ISO-8859-2\" http-equiv=\"content-type\"&gt;\n        &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/dygraph/2.1.0/dygraph.min.js\"&gt;&lt;/script&gt;\n        &lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/dygraph/2.1.0/dygraph.min.css\" /&gt;\n        \n        &lt;title&gt;extract data from text file&lt;/title&gt;\n    &lt;/head&gt;\n    \n    &lt;body&gt;\n        \n        &lt;div id=\"wrap\"&gt;\n            &lt;div id=\"header\"&gt;\n                \n                &lt;div id=\"main\"&gt;\n                    \n                    &lt;h1&gt;extract data from text file (read-file.txt HYDRAS 3)&lt;/h1&gt;\n                    &lt;p&gt;Nota: &lt;BR&gt;\n                        Adapt to your needs in the function parseFile &lt;BR&gt;\n                        &lt;BR&gt;\n                    &lt;/p&gt;\n                    \n                    &lt;form name=\"frmParse\" action=\"\"&gt;\n                        &lt;p&gt;\n                            File:\n                            &lt;input type=\"file\" name=\"fileinput\" onchange='openFile(event)' /&gt;\n                        &lt;/p&gt;\n                        \n                        &lt;p&gt;Output:&lt;/p&gt;\n                        &lt;p&gt;\n                            &lt;textarea name=\"ed_output\" rows=\"10\" cols=\"87\" style=\"width: 700px;\"&gt;&lt;/textarea&gt;\n                            &lt;br&gt;\n                        &lt;/p&gt;\n                    &lt;/form&gt;\n                    \n                &lt;/div&gt;\n                \n                &lt;div id=\"graphdiv2\" style=\"width: 100%; height: 100%;\"&gt;\n                &lt;/div&gt;\n                \n                &lt;script type=\"text/javascript\"&gt;\n                    &lt;!--\n                    \n                    document.frmParse.ed_output.value = \"\";\n                    var mytext=[];\n                    var csv_data=[];\n                    var csv_firstline=\"time,value\\n\";\n                    String.prototype.beginsWith = function (string) {\n                        return(this.indexOf(string) === 0);\n                    };\n                    \n                    function parseFile() {\n                        document.frmParse.ed_output.value = \"\";\n                        \n                        var index = 0;\n                        var newtext=csv_firstline;\n                        var v1=\"\";\n                        var v2=\"\";\n                        var date=\"\";\n                        var newArray = [];\n                        for (var i = 0; i &lt; mytext.length -1 ; i++ ) {\n                            if (mytext[i].includes(\" Date:\")){ \n                                v1=mytext[i].match(/\\d\\d\\/\\d\\d\\/\\d\\d\\d\\d/g);\n                                date=(moveLastArrayElementToFirstIndex(v1.toString().split(\"/\"))).join('-') ;// date mm/dd/yyyy become yyyy-mm-dd\n                            }\n                            if (mytext[i].includes(\".\")){ \n                                v2=mytext[i].match(/ (.*\\..*) /g);\n                                if (v2!=null){\n                                    var time=mytext[i].match(/\\((\\d\\d:\\d\\d:\\d\\d)\\)/g).toString().replace(/[()]/g, '');\n                                    var txt=date +\"T\" +time.toString() +\"Z,\" + v2.toString().trim().replace(/(Err.\\d\\d)/g, '0.000');//Err. value become 0.000\n                                    newtext+=txt +\"\\n\";\n                                    newArray.push(txt);\n                                }\n                            }\n                            \n                        }\n                        document.frmParse.ed_output.value = newtext;\n                        csv_data=newArray.join(\"\\n\");\n                        processData();\n                    }\n                    \n                    //graph csv with Dygraph\n                    function processData() {\n                        g2 = new Dygraph(\n                        document.getElementById(\"graphdiv2\"),\n                        csv_data,\n                        {\n                            xlabel: \" \",\n                            ylabel: \" \",\n                            title: csv_firstline,\n                            showRangeSelector: true,\n                            rangeSelectorHeight: 30,\n                            rangeSelectorPlotStrokeColor: 'black',\n                            rangeSelectorPlotFillColor: 'grey'\n                        }\n                        );\n                    }\n                    \n                    \n                    //Moves last element in an array to the front\n                    function moveLastArrayElementToFirstIndex(this_array) {\n                        var new_array = new Array();\n                        new_array[0] = this_array[this_array.length-1]; //first element is last element    \n                        for(var i=1;i&lt;this_array.length;i++) { //subsequent elements start at 1\n                            new_array[i] = this_array[i-1];\n                        }\n                        return new_array;\n                    }\n                    \n                    \n                    function readAsText(file) {\n                        var reader = new FileReader();\n                        reader.onload = function() {\n                            mytext = reader.result.split(\"\\n\");\n                            document.frmParse.ed_output.value = \"\";\n                            parseFile();\n                        };\n                        reader.readAsText(file);\n                    }\n                    \n                    \n                    var openFile = function(event) {\n                        document.frmParse.ed_output.value = \"\";\n                        var input = event.target;\n                        readAsText(input.files[0]);\n                    };\n                    \n                    function clearFileInput(){\n                        document.frmParse.fileinput.value = \"\";\n                    }\n                    \n                    \n                &lt;/script&gt;\n                \n            &lt;/body&gt;\n        &lt;/html&gt;\n\n\n    \n</code></pre>\n</div>",
            "votes": "1",
            "user": "Gordon Freeman",
            "time": "Aug 19, 2020 at 16:55",
            "is_accepted": true,
            "comments": [
                {
                    "user": "engineer1155",
                    "text": "<span class=\"comment-copy\">thank you for your time sir. what i am trying to accomplish here is to somewhat simulate HYDRAS, and have my own \"HYDRAS\", so i think i need to understand the monitor-file as my first step, but dont know how to start. any tips?</span>",
                    "time": null
                },
                {
                    "user": "Gordon Freeman",
                    "text": "<span class=\"comment-copy\">It's clearer now and more ambitious, I've done a little analysis of the monitor-file image file here: <a href=\"https://i.imgur.com/Xv9sR4P.jpg\" rel=\"nofollow noreferrer\">i.imgur.com/Xv9sR4P.jpg</a> Oddly, I did not find any documentation on the commands to send type: F0000 Fxxxx of commands followed or not by a parameter Kxxxxx of the variables returned by the device K6010 contains the number of bytes of data that will follow 48 bytes = 24 words (1 by hour) can be split</span>",
                    "time": null
                },
                {
                    "user": "engineer1155",
                    "text": "<span class=\"comment-copy\">Thank you! Thats a big help. I'll try this on other sensors and settings and hope to achieve the desired result.</span>",
                    "time": null
                }
            ]
        }
    ]
}