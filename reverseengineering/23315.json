{
    "title": "What code gets executed in an ELF binary when Java loadLibrary() is called",
    "link": "https://reverseengineering.stackexchange.com/questions/23315/what-code-gets-executed-in-an-elf-binary-when-java-loadlibrary-is-called",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I’ve been working on reverse engineering this android x86 ELF binary. According to my research when loadLibrary() is called the function JNI_onLoad is supposed to be executed however this binary doesn’t have it. I guess I’m confused on what loadlibrary() is actually doing. How would I find the first function or entry point to this binary?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "201",
    "tags": [
        "android"
    ],
    "user": "oKhalid",
    "time": "Feb 21, 2020 at 23:12",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>loadLibrary(..)</code> loads the native library into the current process. Besides the call to <code>JNI_onLoad</code> this is just a standard library loading as it is done by <code>dlopen(..)</code>. Note that that as a part of this regular library loading process some code sections in the library may be executed automatically. But that is nothing Java/JNI specific. For more details see <a href=\"https://stackoverflow.com/questions/9759880/automatically-executed-functions-when-loading-shared-libraries\">this question on Stackoverflow.com</a>.</p>\n<p>The <code>JNI_onLoad</code> function is AFAIR optional. It's first parameter is a pointer to the <code>JavaVM</code> structure that allows to interact with the Java virtual VM, e.g. request memory that is recognized by the garbage collector. Or search and instantiate Java classes from within native code.</p>\n<p>The more important part of loading a native library into a Android/Java process is that it's exported functions are made available to the Java part. Check the Java classes for methods marked as <code>native</code>. Such methods don't have a method body, instead when they are called a matching (based on the class an method name) native method is executed.</p>\n</div>",
            "votes": "1",
            "user": "Robert",
            "time": "Feb 22, 2020 at 15:32",
            "is_accepted": false,
            "comments": []
        }
    ]
}