{
    "title": "Assembler OR operation",
    "link": "https://reverseengineering.stackexchange.com/questions/32370/assembler-or-operation",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Is this asm code:</p>\n<pre><code>or      unknown_byte_0004AAA7, 1\n\ndseg05:000C7FDC unknown_byte_0004AAA7 db 0\n</code></pre>\n<p>equivalent to this C++ code below?</p>\n<pre><code>bool unknown_byte_0004AAA7 = 0;\nunknown_byte_0004AAA7 = unknown_byte_0004AAA7 | 1;\n</code></pre>\n<p>Thanks in advance.</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "46",
    "tags": [
        "assembly",
        "c++"
    ],
    "user": "black4joss",
    "time": "Oct 6, 2023 at 15:07",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Almost, but not exactly. <code>bool</code> is not required to be 1 byte long in C++, so I'd declare <code>unknown_byte_0004AAA7</code> as <code>uint8_t</code>, to make sure it is one byte long.</p>\n</div>",
            "votes": "1",
            "user": "Dario Petrillo",
            "time": "Oct 6, 2023 at 15:21",
            "is_accepted": false,
            "comments": []
        }
    ]
}