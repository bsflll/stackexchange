{
    "title": "Convert .cpu / .opc to sleigh",
    "link": "https://reverseengineering.stackexchange.com/questions/23247/convert-cpu-opc-to-sleigh",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Is there a tool to automatically convert binutils cpu definitions (.cpu / .opc files) to sleigh for use in Ghidra? ... or do I need to hand craft a cpu definition for Synopsys DesignWare ARC 625D?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "126",
    "tags": [
        "ghidra"
    ],
    "user": "ZJL",
    "time": "Feb 14, 2020 at 11:02",
    "comments": [
        {
            "user": "mumbel",
            "text": "<span class=\"comment-copy\">That would be an interesting project, not aware of anything like that currently for Ghidra.  The information there would also only produce enough SLEIGH for disassembly.  You'd have to still implement the instructions for any analysis or decompilation.</span>",
            "time": null
        },
        {
            "user": "mumbel",
            "text": "<span class=\"comment-copy\">took a second look, it does look like it a .cpu could have enough to implement the instruction and not just the display and bit-patterns.  Ignoring the conversion, it would still come down to finding a correctly/full implementation in a .cpu format, not seeing to many</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There was a project of using these files to <a href=\"https://yifan.lu/2015/12/29/cgen-for-ida-pro/\" rel=\"nofollow noreferrer\">create a processor module for IDA</a>, maybe you can reuse parts of it.</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Feb 14, 2020 at 19:19",
            "is_accepted": true,
            "comments": [
                {
                    "user": "ZJL",
                    "text": "<span class=\"comment-copy\">Thank you for the pointer!   After a bit more research:   - there does not seem to be a ready to use tool for the conversion;   - it should be possible to create such a tool, but it is non-trivial.   For a single processor module, it may well be quicker to hand craft the module. Still, I might have a go at automating at least part of the process...</span>",
                    "time": null
                }
            ]
        }
    ]
}