{
    "title": "Where could one find a collection of mid-file binary signatures?",
    "link": "https://reverseengineering.stackexchange.com/questions/3000/where-could-one-find-a-collection-of-mid-file-binary-signatures",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>While reading <a href=\"https://reverseengineering.stackexchange.com/a/2996/115\">an answer to another question</a>, it was mentioned that \"<code>78 9C</code>\" was a well-known pattern for Zlib compressed data. Intrigued, I decided to search up the signature on <a href=\"http://www.filesignatures.net/index.php?search=789c&amp;mode=SIG\" rel=\"nofollow noreferrer\">the file signature database</a> to see if there were any related numbers. It wasn't on there. So I checked on <a href=\"http://www.garykessler.net/library/file_sigs.html\" rel=\"nofollow noreferrer\">Gary Kessler's magic number list</a> to see that it wasn't there either.</p>\n<p>I even ended up creating a binary file with the signature at the beginning and ran \"<code>file</code>\" on it as a sort of <em>\"I-doubt-it-will-work-but-maybe\"</em> attempt (Since that works with \"<code>50 4b</code>\" because that is a valid ZIP file header and is commonly in the middle of other files.) But none of these attempts revealed that I was looking at a Zlib signature.</p>\n<p>It would appear as though most magic number databases only contain file-format magic numbers rather than numbers to differentiate data in the middle of a file. So, my question is:</p>\n<p>Are there any places one could find a list of binary signatures of certain types of data streams that are <em>not</em> file formats themselves? Data that is not a file itself, but rather <em>inside</em> a file. </p>\n<p>Thanks in advance.</p>\n</div>",
    "votes": "10",
    "answers": 1,
    "views": "4k",
    "tags": [
        "file-format",
        "magic-number"
    ],
    "user": "Archenoth",
    "time": "Apr 13, 2017 at 12:49",
    "comments": [
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">Only FYI: the sequence <code>78 9C</code> in itself is not magic -- if it was, it would be a fixed signature. The first two bytes of a ZLib compressed file contain flags whose settings are needed for a correct decompression; and certain configurations are more common than others. See <a href=\"http://stackoverflow.com/questions/9050260/what-does-a-zlib-header-look-like\" title=\"what does a zlib header look like\">stackoverflow.com/questions/9050260/…</a> for 3 of the most common, and <a href=\"http://tools.ietf.org/html/rfc1950\" rel=\"nofollow noreferrer\">RFC1950</a> for their meaning. I'd have to re-read the RFC but I <i>think</i> these 2 bytes can have just about <i>any</i> value, and still be a valid ZLib header.</span>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">(Add.) Consider a 'directory' kind of file, where each first long word indicate the length of the next raw chunk. Easy to spot for a human, but hard for a computer (unless specifically told to).</span>",
            "time": null
        },
        {
            "user": "Archenoth",
            "text": "<span class=\"comment-copy\">Aye... I've taken a look at the specification and there appears to be very few invalid values for the following bytes. And indeed, I don't really mean to refer to the values as magic numbers since those reference file formats, which is the reason I called them \"binary signatures\". (Though I am not %100 sure that is correct either.) Some signatures <i>can</i> be magic numbers though, which was why I used magic number databases for my initial checking.  Also that directory-style file is actually a really good example. Kudos..!</span>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">Full set of possible zlib stream headers: <a href=\"https://groups.google.com/d/msg/comp.compression/_y2Wwn_Vq_E/EymIVcQ52cEJ\" rel=\"nofollow noreferrer\">groups.google.com/d/msg/comp.compression/_y2Wwn_Vq_E/…</a></span>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">Thanks, Igor, for that link -- always nice to see an answer from a Definitive Authority. Note his comment \"..You would follow this with an attempted decompression..\" , in other words: \"the proof is in the pudding\". If one finds any of these magic pairs, how many bytes would one need to decode to be more than a bit sure? (That is, apart from \"all of them\". ;-)</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Are you perhaps looking for <a href=\"https://code.google.com/p/binwalk/\" rel=\"noreferrer\">binwalk</a>? Especially the <em>magic</em> folder of its source code.</p>\n</div>",
            "votes": "6",
            "user": "jvoisin",
            "time": "Nov 2, 2013 at 18:50",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Archenoth",
                    "text": "<span class=\"comment-copy\">Neat. A quick grep reveals that the header was Zlib in <a href=\"http://binwalk.googlecode.com/svn/trunk/src/magic/compressed\" rel=\"nofollow noreferrer\">this</a> file. The tool itself looks pretty cool, too. Thanks.</span>",
                    "time": null
                },
                {
                    "user": "saeedgnu",
                    "text": "<span class=\"comment-copy\">The code is moved to <a href=\"https://github.com/ReFirmLabs/binwalk\" rel=\"nofollow noreferrer\">github.com/ReFirmLabs/binwalk</a> Please update your link</span>",
                    "time": null
                }
            ]
        }
    ]
}