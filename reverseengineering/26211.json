{
    "title": "PE - IAT resolve mechanism",
    "link": "https://reverseengineering.stackexchange.com/questions/26211/pe-iat-resolve-mechanism",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to understand how Windows is resolving functions with the IAT.</p>\n<p>I have noticed that when a call is made to a Win API function, the structure of that call is not always the same (it's still consistent inside a binary, but not between two differents binary).</p>\n<p>Sometime, if i follow the target address of that call, i find a jump to the resolved Win API function.\nAnd sometime, it's directly a call to the resolved function.</p>\n<p>For instance:</p>\n<ul>\n<li><p>the binary A is using call like :\n<code>call    ds:GetSystemDirectoryW</code></p>\n</li>\n<li><p>the binary B is calling like that:\n<code>call  GetSystemDirectoryW  -&gt; jmp ds:__imp_GetSystemDirectoryW </code></p>\n</li>\n</ul>\n<p>Can someone explain me the this difference in the calling procedure ?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "181",
    "tags": [
        "pe",
        "iat"
    ],
    "user": "Guillaume",
    "time": "Nov 1, 2020 at 20:13",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The direct call can be generated by the compiler when it knows that the function comes from a DLL at compile time, or whole program optimization is used. If the target function is not marked as dllimport, the compiler generates a simple call to an external symbol and at link time this external symbol is  resolved to a stub which actually jumps to the DLL import.\nFor more info:</p>\n<p><a href=\"https://docs.microsoft.com/en-us/cpp/build/importing-function-calls-using-declspec-dllimport\" rel=\"nofollow noreferrer\"> Importing function calls using __declspec(dllimport)</a></p>\n<p><a href=\"https://devblogs.microsoft.com/oldnewthing/20100318-00/?p=14563\" rel=\"nofollow noreferrer\">What is DLL import binding?</a></p>\n</div>",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Nov 9, 2020 at 11:44",
            "is_accepted": true,
            "comments": []
        }
    ]
}