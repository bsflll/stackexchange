{
    "title": "What is xmmword in IDA Pro?",
    "link": "https://reverseengineering.stackexchange.com/questions/30215/what-is-xmmword-in-ida-pro",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><em>Probably a silly question.</em></p>\n<p><a href=\"https://i.sstatic.net/H0njV.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/H0njV.png\"/></a></p>\n<p>What's the xmmword means in IDA Pro?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "3k",
    "tags": [
        "ida",
        "disassembly",
        "assembly"
    ],
    "user": "Galaxy226",
    "time": "Apr 11, 2022 at 18:32",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>XMMWORD</code> is a 128-bit operand for SSE (previously MMX) instructions (it is nothing special in IDA Pro).</p>\n<p>It is derived from names of XMM registers (<code>XMM0</code>, <code>XMM1</code>, ...) used with SSE instructions.</p>\n<ul>\n<li><p><strong>SSE</strong> means “<strong>S</strong>treaming <strong>S</strong>IMD <strong>E</strong>xtensions”, where</p>\n</li>\n<li><p><strong>SIMD</strong> means “<strong>S</strong>ingle <strong>I</strong>nstruction <strong>M</strong>ultiple <strong>D</strong>ata”.</p>\n<p>(<strong>S</strong>ingle <strong>I</strong>nstruction - for example addition – is performed on <strong>M</strong>ultiple <strong>D</strong>ata - for example on multiple pairs of numbers.)</p>\n</li>\n</ul>\n<p>(<strong>SSE</strong> = <strong>SIMD</strong> + Floating Point Arithmetic + Saturation Arithmetic + Special Instructions)</p>\n<p>For explanation:</p>\n<ul>\n<li><p>Beside “basic”, well-known instructions (e.g. <code>ADD</code> or <code>JMP</code>) inherited from early Intel X86 instruction set, there is <em>other</em> instruction set (containing e.g. <code>MAXPS</code> or <code>MOVNTQ</code> instructions):</p>\n<ul>\n<li><p><strong>SSE</strong> (previously <strong>MMX</strong> – officially a meaningless acronym, often interpreted as <strong>M</strong>ulti<strong>M</strong>edia e<strong>X</strong>tension) with their <em>own special set of 128-bit registers</em> (<code>XMM0</code>, <code>XMM1</code>, ... ),<br/>\nfurther extended to</p>\n</li>\n<li><p><strong>AVX</strong> (<strong>A</strong>dvanced <strong>V</strong>ector e<strong>X</strong>tensions) with added</p>\n<ul>\n<li><p>256-bit YMM registers (<code>YMM0</code>, <code>YMM1</code>, ...  – lower halves overlap with XMM registers), and</p>\n</li>\n<li><p>512-bit ZMM registers (<code>ZMM0</code>, <code>ZMM1</code>, ...  – lower halves overlap with YMM registers).</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>",
            "votes": "3",
            "user": "MarianD",
            "time": "Apr 5, 2022 at 20:31",
            "is_accepted": false,
            "comments": []
        }
    ]
}