{
    "title": "What are the tools use for reverse engineering android apk?",
    "link": "https://reverseengineering.stackexchange.com/questions/18170/what-are-the-tools-use-for-reverse-engineering-android-apk",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Currently, I only know about apktool.</p>\n<p>But is there any tools that helps in checking the code, editing it and compiling it back to apk?</p>\n</div>",
    "votes": "17",
    "answers": 7,
    "views": "60k",
    "tags": [
        "android",
        "apk"
    ],
    "user": "Daniel Mana",
    "time": "May 4, 2018 at 15:18",
    "comments": [
        {
            "user": "atdre",
            "text": "<span class=\"comment-copy\"><a href=\"https://github.com/cryptax/androidre\" rel=\"nofollow noreferrer\">github.com/cryptax/androidre</a></span>",
            "time": null
        },
        {
            "user": "user10886651",
            "text": "<span class=\"comment-copy\">\"Apk editor pro\" overrules both suggestions &amp; it's so much faster too. Show java is okay for observation.</span>",
            "time": null
        },
        {
            "user": "shizhen",
            "text": "<span class=\"comment-copy\">See github repo: <a href=\"https://github.com/russell-shizhen/DecompileApk\" rel=\"nofollow noreferrer\">Android Apk reverse engineering using Apktool and Frida</a></span>",
            "time": null
        },
        {
            "user": "Muhammad Furqan Ul Haq",
            "text": "<span class=\"comment-copy\">Recently, I had compiled an ultimate list of <a href=\"https://www.edopedia.com/blog/best-apk-decompilers/\" rel=\"nofollow noreferrer\">47 best APK decompilers</a> on my website. I arranged them into 4 different sections. 1. Open Source APK Decompilers 2. Online APK Decompilers 3. APK Decompiler for Windows, Mac or Linux 4. APK Decompiler Apps I hope this collection will be helpful to you. Link: <a href=\"https://www.edopedia.com/blog/best-apk-decompilers/\" rel=\"nofollow noreferrer\">https://www.edopedia.com/blog/best-apk-decompilers/</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There are many tools, some are more low-level and some build on top of the low-level tools to make nicer and more complete tools. </p>\n<p>Here are my favorites:  </p>\n<ul>\n<li><strong>JADX</strong> - GUI (and Command line) to produce Java source code from Android Dex and Apk files <a href=\"https://github.com/skylot/jadx\" rel=\"noreferrer\">https://github.com/skylot/jadx</a> </li>\n<li><strong>Android MultiTool</strong> - decompile/recompile and sign applications + jar framework files <a href=\"https://forum.xda-developers.com/showthread.php?t=2326604\" rel=\"noreferrer\">https://forum.xda-developers.com/showthread.php?t=2326604</a></li>\n<li><strong>Apktool</strong> - Cmd tool to decompile/recompile applications and there resources. Among other things wraps Samli/Baksmali <a href=\"https://ibotpeaches.github.io/Apktool/\" rel=\"noreferrer\">https://ibotpeaches.github.io/Apktool/</a></li>\n<li><strong>Smali/Baksmali</strong> - Convert binary <code>.dex</code> files to textual <code>.smali</code> classes. Can be used in after unzipping the APK manually. More here: <a href=\"https://reverseengineering.stackexchange.com/questions/8044/repackaging-apk-file-using-baksmali-and-smali/16514\">Repackaging APK file using baksmali and smali</a></li>\n<li><strong>JEB</strong> - Professional tool for reversing android (and many other) applications <a href=\"https://www.pnfsoftware.com/\" rel=\"noreferrer\">https://www.pnfsoftware.com/</a></li>\n</ul>\n<p>Also look promising:  </p>\n<ul>\n<li><strong>APK Studio</strong> - IDE for reverse-engineering (decompiling/editing) &amp; recompiling of Android applications <a href=\"https://forum.xda-developers.com/showthread.php?t=2493107\" rel=\"noreferrer\">https://forum.xda-developers.com/showthread.php?t=2493107</a></li>\n</ul>\n<p><em>Edit November 2019</em>: </p>\n<ul>\n<li><strong>Bytecode Viewer</strong> - A user friendly Java reverse engineering suite, similar to JADX. <a href=\"https://bytecodeviewer.com/\" rel=\"noreferrer\">https://bytecodeviewer.com/</a></li>\n</ul>\n</div>",
            "votes": "29",
            "user": "Gal",
            "time": "Nov 24, 2019 at 9:45",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If you want to modify code, then the only real option I know of is <code>bak/smali</code>, which <code>apktool</code> provides a helpful wrapper for. </p>\n<p>If you merely want to understand the code, there's lots of options. For example, you could use <a href=\"https://github.com/Storyyeller/enjarify\" rel=\"noreferrer\">Enjarify</a> or dex2jar to translate it to a jar file and then use any Java bytecode tools or decompilers. There's also a few decompilers with native Android support.</p>\n</div>",
            "votes": "7",
            "user": "Antimony",
            "time": "May 5, 2018 at 0:49",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Hyeonseo Yang",
                    "text": "<span class=\"comment-copy\">Colud you mention the decompilers that support ndk?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><strong>On desktop</strong></p>\n<p>You can try Antimony's answer.</p>\n<p>Also check <a href=\"https://reverseengineering.stackexchange.com/questions/12393/reverse-engineering-android-vendor-system-apps/12406#comment17489_12406\">this comment</a>(which states using dex2jar on .dex file and JD-GUI on jar file):</p>\n<p>If you want to decompile an apk directly <strong>on your phone</strong>, <a href=\"http://26utm_medium%3Dorganic%26utm_term%3Dshow+java\" rel=\"nofollow noreferrer\">show java</a> can be a good option. You can just select an apk file and wait. Then you can get rhe java source code of the app. Though it has much rooms for improvement, its handy.</p>\n<p><strong>WHEN YOU ENCOUNTER JNI/NDK</strong></p>\n<p>You have to decompile the <code>.so</code> files inside the <code>lib</code> folder. So you may have to decompile them, which are usually arm linux shared libraries.</p>\n<p>I am currently developing a helper app that helps you decompile native library targeted ARM and x86, and other CPU instructions.</p>\n<p><strong>Releases</strong></p>\n<p><a href=\"https://github.com/KYHSGeekCode/ARMDisasm/releases\" rel=\"nofollow noreferrer\">Android-Disassembler release.</a></p>\n<p>Or you can visit the <a href=\"https://github.com/KYHSGeekCode/ARMDisasm\" rel=\"nofollow noreferrer\">git repository</a> (Android-Disassembler).</p>\n<p><strong>However In general,</strong>\nUnfortunately, some developers prevent or make it hard to decompile the apk file, by changing class, methods and variables' names. So you may have some hard time as many reversing routines do.</p>\n<p>Hope my answer helped anyway.</p>\n</div>",
            "votes": "4",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>GDA: supports APK, DEX, ODEX and OAT files. A Dalvik bytecode decompiler was written entirely in c++. So, unlike most app analysis tools, GDA does not need to rely on the Java platform, And as the use of the Bytecode directly translated into Java code without Smali code translation. So it is more succinct, more portable and faster. </p>\n<p><a href=\"https://github.com/charles2gan/GDA-android-reversing-Tool\" rel=\"nofollow noreferrer\">https://github.com/charles2gan/GDA-android-reversing-Tool</a></p>\n</div>",
            "votes": "2",
            "user": "charles2gan",
            "time": "May 17, 2019 at 8:21",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<ul>\n<li><a href=\"https://github.com/xtiankisutsa/MARA_Framework\" rel=\"nofollow noreferrer\">MARA_Framework</a></li>\n<li><a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF\" rel=\"nofollow noreferrer\">MobSF</a></li>\n<li><a href=\"https://ibotpeaches.github.io/Apktool/\" rel=\"nofollow noreferrer\">Apktool</a></li>\n<li><a href=\"http://apk-deguard.com/\" rel=\"nofollow noreferrer\">apk-deguard</a></li>\n<li><a href=\"https://forum.xda-developers.com/android/software-hacking/tool-apk-easy-tool-v1-02-windows-gui-t3333960\" rel=\"nofollow noreferrer\">APK Easy Tool</a></li>\n</ul>\n</div>",
            "votes": "1",
            "user": "Morteza M",
            "time": "Jan 14, 2020 at 9:46",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>any tools that helps in checking the code, editing it and compiling it back to apk?</p>\n</blockquote>\n<p>See <a href=\"https://buildapks.github.io/buildAPKs/\" rel=\"nofollow noreferrer\">https://buildapks.github.io/buildAPKs/</a> for information regarding the tools you are seeking.</p>\n</div>",
            "votes": "0",
            "user": "S D Rausty",
            "time": "Jul 19, 2019 at 5:28",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">please elaborate a bit more about those tools</span>",
                    "time": null
                },
                {
                    "user": "S D Rausty",
                    "text": "<span class=\"comment-copy\">Compiling it back to APK can be accomplished with build scripts such as <code>build.one.bash</code> and <code>build.in.dir.bash</code>.  Tools that help in checking code and editing are available at <a href=\"https://github.com/BuildAPKs/buildAPKs.developers.tools\" rel=\"nofollow noreferrer\">github.com/BuildAPKs/buildAPKs.developers.tools</a> and to build these tools on device you can use <code>~/buildAPKs/build.developers.tools.bash</code> once BuildAPKs is installed.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>APK Editor Pro\nIt is really good an its in android:</p>\n<p><a href=\"https://dl2.androidtime.co/uploads/app/APK-Editor-Pro-1.9.10-Mod(www.Androidtime.co).apk\" rel=\"nofollow noreferrer\">https://dl2.androidtime.co/uploads/app/APK-Editor-Pro-1.9.10-Mod(www.Androidtime.co).apk</a></p>\n</div>",
            "votes": "0",
            "user": "KingAmir",
            "time": "Jan 14, 2020 at 11:50",
            "is_accepted": false,
            "comments": []
        }
    ]
}