{
    "title": "Decoding a list of integer values in unknown format",
    "link": "https://reverseengineering.stackexchange.com/questions/31368/decoding-a-list-of-integer-values-in-unknown-format",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm attempting to reverse engineer a binary file format which is used to encode a list of integer values. I can't work out how this format works, as the number of bytes used to encode each value changes depending on the value itself, yet there's nothing I can see in the format which gives any indication of how many bytes each integer value contains!</p>\n<p>Here's a sample of binary file contents vs their expected integer list values:</p>\n<div class=\"s-table-container\">\n<table class=\"s-table\">\n<thead>\n<tr>\n<th>binary</th>\n<th>values</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>0a 07 0a 05 03 04 06 07 0b</code></td>\n<td>3, 4, 6, 7, 11</td>\n</tr>\n<tr>\n<td><code>0a 04 0a 02 07 0b</code></td>\n<td>7, 11</td>\n</tr>\n<tr>\n<td><code>0a 1a 0a 18 88 0b 89 0b  8a 0b 8b 0b 8c 0b 8d 0b 8e 0b 8f 0b 90 0b 91 0b 92 0b 93 0b</code></td>\n<td>1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427</td>\n</tr>\n<tr>\n<td><code>0a 0e 0a 0c 01 02 03 04 05 06 07 08 09 0a 0b 0c</code></td>\n<td>1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12</td>\n</tr>\n<tr>\n<td><code>0a 1e 0a 1c 01 02 03 04 05 06 07 08 09 0a 0b 0c b8 06 86 0b 8e 0b 8f 0b 91 0b 92 0b 93 0b 94 0b</code></td>\n<td>1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 824, 1414, 1422, 1423, 1425, 1426, 1427, 1428</td>\n</tr>\n<tr>\n<td><code>0a 04 0a 02 94 0b</code></td>\n<td>1428</td>\n</tr>\n<tr>\n<td><code>0a 03 0a 01 01</code></td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>0a 07 0a 05 d2 85 d8 cc 04</code></td>\n<td>1234567890</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Clearly the format starts with <code>0a total_size 0a list_size</code> followed by the actual list of values, but I can't work out how the values could possibly be encoded!</p>\n<p>Any assistance or insights would be greatly appreciated...</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "98",
    "tags": [
        "binary-analysis",
        "file-format"
    ],
    "user": "ndawson",
    "time": "Jan 9, 2023 at 4:01",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>it is clear that if the high bit of the first byte is not set then it is just the value of the byte</p>\n<p>So we can suspect that the high bit is a signal for extending the number</p>\n<p>checking the lone 1428 value which in hex is 0x0594 we can see the sequence start with 94 (which has the high bit set) so it's in little endian followed by 0b and we can calculate <code>5&lt;&lt;1 | 1 = 0xb</code></p>\n<p>So I presume the decoder code is</p>\n<pre><code>acc = 0\nshift = 0\nfor each byte \n   acc |= (byte &amp; 0x7f) &lt;&lt; shift\n   shift += 7\n   if high bit not set\n       emit acc\n       acc = 0\n       shift = 0\n</code></pre>\n<p>This also works with the 824 in one of the givens which matches to <code>b8 06</code> and <code>(0xb8 &amp; 0x7f) | (0x06 &lt;&lt; 7) = 0x338 = 824</code></p>\n</div>",
            "votes": "2",
            "user": "ratchet freak",
            "time": "Jan 9, 2023 at 13:27",
            "is_accepted": true,
            "comments": [
                {
                    "user": "ndawson",
                    "text": "<span class=\"comment-copy\">Works perfectly, thank you!</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The answer from @ratchet freak is correct.</p>\n<p>To add a little more information, this format is known as <a href=\"https://en.wikipedia.org/wiki/LEB128\" rel=\"nofollow noreferrer\">LEB128</a>.  It's not uncommon and pops up in various places. For example, DWARF3 debug info and android's dalvik executable files.</p>\n</div>",
            "votes": "1",
            "user": "Ian Cook",
            "time": "Jan 10, 2023 at 23:07",
            "is_accepted": false,
            "comments": []
        }
    ]
}