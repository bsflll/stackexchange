{
    "title": "Merge two function arguments",
    "link": "https://reverseengineering.stackexchange.com/questions/31996/merge-two-function-arguments",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a function with a signature:</p>\n<pre><code>int func(undefined8 param_1,int param_2,char *pData,int nDataSize)\n</code></pre>\n<p>I know from a header file that the first two arguments are actually one, a struct that I know the composition of (I already added it to my data types). How can I instruct Ghidra to merge <code>param_1</code> and <code>param_2</code> to this single argument? Any editing (retype, change function signature) seems to reinterpret the already existing code erronously, introducing various additional variables, CONCAT() calls and similar, and also harming the already determined usage of the remaining two arguments.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "247",
    "tags": [
        "ghidra"
    ],
    "user": "Gábor",
    "time": "Jun 23, 2023 at 12:59",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Considering that the struct was passed in registers, I finally found the solution. In the signature change dialog, I had to note the exact registers first, then change to custom storage, list the same registers for the argument and then it worked.</p>\n</div>",
            "votes": "2",
            "user": "Gábor",
            "time": "Jun 23, 2023 at 17:49",
            "is_accepted": false,
            "comments": []
        }
    ]
}