{
    "title": "Add indirect branch target reference manually (xref, crossreference) in Cutter (radare2)?",
    "link": "https://reverseengineering.stackexchange.com/questions/23269/add-indirect-branch-target-reference-manually-xref-crossreference-in-cutter",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>How can I create a reference for an indirect branch instruction </p>\n<pre><code>blx r0\n</code></pre>\n<p>so that the call to the address stored in r0 shows up in the graph?</p>\n<p>I've tried flagging the target (function), but that does not get picked up automatically.\nDo I need to re-start analysis for the function somehow (how?)?</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "126",
    "tags": [
        "radare2"
    ],
    "user": "handle",
    "time": "Feb 16, 2020 at 13:00",
    "comments": [
        {
            "user": "Megabeets",
            "text": "<span class=\"comment-copy\">Can you share the binary and the relevant offset so we can have a better look? :)</span>",
            "time": null
        },
        {
            "user": "handle",
            "text": "<span class=\"comment-copy\">@Megabeets Sorry, I mustn't... and I have put the project on hold for now. But isn't it kind of a general question anyway (telling radare2/Cutter explicitly how to interpret instructions/data)?</span>",
            "time": null
        },
        {
            "user": "Megabeets",
            "text": "<span class=\"comment-copy\">is it on debug mode? otherwise, if you want radar to figure what's the future value of a register it isn't trivial. But I think that some emulation configurations will be helpful. Try enabling \"asm.emu\" and \"emu.str\" and see if this data is available in the comments :)</span>",
            "time": null
        },
        {
            "user": "Megabeets",
            "text": "<span class=\"comment-copy\">Other than that, I suggest looking at the \"ax\" command and it's subcommands. For example \"ax [addr] [at]\" will define a code xref</span>",
            "time": null
        },
        {
            "user": "handle",
            "text": "<span class=\"comment-copy\">@Megabeets Thank you, if/when I revisit the project, I'll give that a try.</span>",
            "time": null
        }
    ],
    "answers_data": []
}