{
    "title": "Storing a string with with x64dbg",
    "link": "https://reverseengineering.stackexchange.com/questions/21370/storing-a-string-with-with-x64dbg",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to patch a Windows binary (actually an ocx) with x64dbg. More specifically, I want to store a string of 60 bytes and store its address in EAX at a certain point.</p>\n<p>Do I just have to add it to a free spot in the memory dump and store its address in EAX? Or should open the file with a hex editor and add my string to the end and then somehow reference to that address?</p>\n<p>The problem is that I don't really have grasp on what these dump windows mean. Why are there 5 and what's inside?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "x64dbg"
    ],
    "user": "Sam",
    "time": "May 26, 2019 at 19:55",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I don't know how to do it in x64dbg, but here is another way to achieve it.</p>\n<p>Open your ocx (dll) file in <a href=\"http://www.angusj.com/resourcehacker/\" rel=\"noreferrer\">Resource Hacker</a> and you should see the resorces within your dll file. Then click <em>Create Resources from Blank Script</em> button and type there:</p>\n<pre><code>your_res_name RCDATA\n{\n   \"the_very_long_string_you_want_to_add\\0\"\n}\n</code></pre>\n<p>And click <em>Compile Script</em> button (or press <code>F5</code> instead). Then save the file and now your dll should contain the resource you have just created. Additionally, a copy of your original dll will be created with a name <code>nameOfYourDllFile_original.dll</code>.</p>\n<p>Now, you just have to get the address of the previously inserted string - you may use IDA (and many other tools) for this.</p>\n<p>After doing that, it is time to patch the binary - just find the place where you would like to move the string address to eax and just replace bytes with <code>mov eax, address</code> instruction.</p>\n<p><strong>Note1:</strong> I suppose you just want to change <code>mov eax, addr_of_some_string</code> to <code>mov eax, addr_of_your_string</code> - in that case you may just change the last 4 bytes of the instruction opcode, such that they contain relevant address. However, when it's not the case, you have to be very careful with patching, so that you do not overwrite any important instructions.</p>\n<p><strong>Note2:</strong> You may want to add multiple strings as a resource if you wish - see <a href=\"https://docs.microsoft.com/en-us/windows/desktop/menurc/rcdata-resource\" rel=\"noreferrer\">link</a> for more information.</p>\n</div>",
            "votes": "5",
            "user": "bart1e",
            "time": "May 29, 2019 at 20:42",
            "is_accepted": false,
            "comments": []
        }
    ]
}