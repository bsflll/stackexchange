{
    "title": "IDA Pro Patch Error",
    "link": "https://reverseengineering.stackexchange.com/questions/4484/ida-pro-patch-error",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to alter a <code>jnz</code> in IDA but it wont allow me. It says:</p>\n<pre><code>Cannot Reach Destination From current location\n</code></pre>\n<p>Any reason for this problem ?</p>\n<p>Edit:\nThe Program is Trying to <code>CreateFileA</code>.\nIt Then makes a <code>cmp</code> between <code>eax</code> and <code>0FFFFFFFFh</code>( i am guessing it returns -1 if file doesnt exist ).\nMore Information <code>jnz     short FileExist ; Jump if Not Zero (ZF=0)</code> Changing that to <code>jmp short FileExist</code></p>\n<p>Edit 2: \nSo I changed the hex code for the jmp and it works but when i do it by assembly it doesnt , still yet to find out why.</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "1k",
    "tags": [
        "ida",
        "crackme"
    ],
    "user": "user4742",
    "time": "May 30, 2014 at 11:27",
    "comments": [
        {
            "user": "perror",
            "text": "<span class=\"comment-copy\">Tell more about the context, your explanation is too short.</span>",
            "time": null
        },
        {
            "user": "Guntram Blohm",
            "text": "<span class=\"comment-copy\">The most common opcode for jnz is 0x75, which takes one parameter in the range -128 .. +127. Your new jnz destination is probably outside that range. There is another jnz (opcode 0x0f 0x85) that has a longer parameter, but if your current instruction is the 0x75, you have only 2 bytes, and you don't have space for the longer one. See, for example, <a href=\"http://www.mathemainzel.info/files/x86asmref.html#jne\" rel=\"nofollow noreferrer\">mathemainzel.info/files/x86asmref.html#jne</a></span>",
            "time": null
        },
        {
            "user": "DCoder",
            "text": "<span class=\"comment-copy\">@GuntramBlohm: after the question has been edited, it seems the OP is trying to change a <code>jnz</code> to <code>jmp</code> without altering the destination, and it works fine when done manually, so the issue sounds more like a flaw in IDA's assembly generation.</span>",
            "time": null
        },
        {
            "user": "bad_decoy",
            "text": "<span class=\"comment-copy\">This doesn't answer your question, but it does solve your problem. Why not change the comparison to something like xor eax, eax? (And fill in any extra bytes with nop)That will set your flags appropriately and it's much easier than computing jump targets.</span>",
            "time": null
        }
    ],
    "answers_data": []
}