{
    "title": "Is there a static data flow analysis tool for .net assemblies?",
    "link": "https://reverseengineering.stackexchange.com/questions/14954/is-there-a-static-data-flow-analysis-tool-for-net-assemblies",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I read <a href=\"https://stackoverflow.com/questions/36982618/is-fxcop-dead-can-we-use-it-with-vs2015-edition\">here</a> that CAT.NET and FxCop are dead. As far as I understand, the successor Roslyn requires a visual studio project and source code. </p>\n<p>Is there a tool that reads in a compiled .NET program and offers an API to do static data flow analysis?</p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "454",
    "tags": [
        "static-analysis",
        ".net"
    ],
    "user": "langlauf.io",
    "time": "May 23, 2017 at 12:37",
    "comments": [
        {
            "user": "Dominik Antal",
            "text": "<span class=\"comment-copy\">I dont know the answer to your original question, but you could try using dnSpy to decompile the application to source, then open that in Visual Studio.</span>",
            "time": null
        },
        {
            "user": "langlauf.io",
            "text": "<span class=\"comment-copy\">Does this work in all cases? Is this workflow reliable enough to be automated? Did you do this and did the visual studio data flow analysis plugins work?</span>",
            "time": null
        },
        {
            "user": "Dominik Antal",
            "text": "<span class=\"comment-copy\">This method might work manually. I dont think it is a reliable method for automation. Usually after decompilation you will have to fix a lot of code manually to work and be compilable. I did this before manually and it worked. For automation, maybe you could take a look at dnLib to create such a project.</span>",
            "time": null
        },
        {
            "user": "svick",
            "text": "<span class=\"comment-copy\">Do you have a specific example of the kind of analysis you want to do?</span>",
            "time": null
        },
        {
            "user": "langlauf.io",
            "text": "<span class=\"comment-copy\">Good question. I would like to detect data dependencies between variables, arguments, return values, or data hard-coded in the binary. For example, checking if an argument for function A depends on the return value of function B, or tracking user-entered data (taint analysis).</span>",
            "time": null
        }
    ],
    "answers_data": []
}