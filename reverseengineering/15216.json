{
    "title": "IDA hexrays decompiler [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/15216/ida-hexrays-decompiler",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>Closed</b>. This question needs <a href=\"/help/closed-questions\">details or clarity</a>. It is not currently accepting answers.\n                                \n                            </div>\n</div>\n</div>\n</div>\n</div>\n<hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n<div class=\"fw-nowrap fc-black-500\">\n<div class=\"d-flex fd-column lh-md\">\n<div class=\"mb0 d-flex\">\n<div class=\"flex--item mr8\">\n<svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\"><path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\"></path></svg>\n</div>\n<p><b>Want to improve this question?</b> Add details and clarify the problem by <a href=\"/posts/15216/edit\">editing this post</a>.</p>\n</div>\n<div class=\"mb0 mt6 d-flex\">\n<p class=\"ml24 pl2\">Closed <span class=\"relativetime\" title=\"2017-04-28 18:13:21Z\">8 years ago</span>.</p>\n</div>\n<div class=\"ml24 pl2\">\n</div>\n</div>\n</div>\n<div class=\"mt24 d-flex gsx gs8\">\n<a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/15216/edit\">\n                        Improve this question\n                    </a>\n</div>\n</aside>\n</div>\n<p>Sometimes i see such lines. What do they mean, such syntax? </p>\n<blockquote>\n<p>(*(void (__fastcall **)(int, int))(*(_DWORD *)v2 + 24))(v2, v4);</p>\n</blockquote>\n<pre><code>int __fastcall sub_1(int a1, int a2)\n{\n  int v2; // r4@1\n  int v3; // r5@1\n  int v4; // r6@1\n  int v5; // r0@2\n  int v6; // r0@2\n  unsigned int v7; // r0@4\n  int v8; // r5@8\n\n  v2 = a2;\n  v3 = a1;\n  sub_2(a2);\n  v4 = *(_BYTE *)(sub_3(*(_DWORD *)(v3 + 1684)) + 13);\n  (*(void (__fastcall **)(int, int))(*(_DWORD *)v2 + 24))(v2, v4);\n  if ( v4 )\n  {\n    (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)v2 + 56))(v2, *(_DWORD *)(v3 + 1700));\n</code></pre>\n</div>",
    "votes": "-2",
    "answers": 1,
    "views": "643",
    "tags": [
        "ida",
        "decompilation"
    ],
    "user": "feauqt",
    "time": "8 years ago",
    "comments": [
        {
            "user": "JAL",
            "text": "<span class=\"comment-copy\">In what context?</span>",
            "time": null
        },
        {
            "user": "feauqt",
            "text": "<span class=\"comment-copy\">this what context in</span>",
            "time": null
        },
        {
            "user": "julian",
            "text": "<span class=\"comment-copy\"><a href=\"https://www.hex-rays.com/products/ida/support/ppt/decompilers_and_beyond_white_paper.pdf\" rel=\"nofollow noreferrer\">hex-rays.com/products/ida/support/ppt/â€¦</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It's very likely what you're looking at is a virtual method call on a class. </p>\n<p>Virtual methods are usually implemented by the use of a pointer to a table of function pointers. The pointer is added at the beginning of the class data and is added transparently by the compiler if a class has a virtual method.</p>\n<p>First it casts v2 to a pointer to a DWORD, reads the DWORD (vtable pointer), adds 24 to the vtable base pointer, reads the pointer to the method at offset 24 in the vtable, casts that to a function pointer and calls it. </p>\n<p>Since v2 is both used to locate the vtable pointer and passed as the first argument it's likely the this pointer.</p>\n</div>",
            "votes": "4",
            "user": "Peter Andersson",
            "time": "Apr 26, 2017 at 4:08",
            "is_accepted": true,
            "comments": []
        }
    ]
}