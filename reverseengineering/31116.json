{
    "title": "Why does this code use multiple shifts instead of one?",
    "link": "https://reverseengineering.stackexchange.com/questions/31116/why-does-this-code-use-multiple-shifts-instead-of-one",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I came across the following piece of 16-bit x86 code for multiplying a value by 40, using just shifts and additions:</p>\n<pre><code>; BX holds the value we want to multiply.\n; The result is stored in AX.\nMOV AX, BX\n\n; Multiply by 4 using two shifts\nSHL AX, 1\nSHL AX, 1\n\n; Add the original value, this gives us BX * 5\nADD AX, BX\n\n; Now multiply by 8 using three shifts for the final result\nSHL AX, 1\nSHL AX, 1\nSHL AX, 1\n</code></pre>\n<p>Now what I'd like to know is why this code uses multiple shifts in a row instead of just doing <code>SHL 2</code> and <code>SHL 3</code>. It was almost certainly written by hand, so I assume there was some speed benefit or something. Does anyone have any insights?</p>\n<p>The code was written in 1991 and was targeting 286 and 386 class machines.</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "80",
    "tags": [
        "disassembly",
        "x86"
    ],
    "user": "lethal-guitar",
    "time": "Nov 9, 2022 at 19:32",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Shift/rotate with an immediate byte didn't exist until the 80186.  On the 8086 only shifting/rotating by 1 or CL was possible.  So it is likely you have some 8086 code.</p>\n</div>",
            "votes": "2",
            "user": "matja",
            "time": "Nov 9, 2022 at 22:13",
            "is_accepted": true,
            "comments": [
                {
                    "user": "lethal-guitar",
                    "text": "<span class=\"comment-copy\">Ahh I see, yeah that would make a lot of sense!</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There are two reasons I can think of and that has to do with overflow. Perhaps SHL AX, 1 and SHL AX 3 deal with overflow differently? otherwise, I don't see a difference unless there is possible some speed difference.</p>\n</div>",
            "votes": "0",
            "user": "Serpardum",
            "time": "Nov 9, 2022 at 21:30",
            "is_accepted": false,
            "comments": [
                {
                    "user": "lethal-guitar",
                    "text": "<span class=\"comment-copy\">Ah, that's an interesting point! I don't believe it applies in this case, but thanks for sharing!</span>",
                    "time": null
                }
            ]
        }
    ]
}