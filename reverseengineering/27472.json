{
    "title": "How to find sleep() in ollydbg or IDA or ghidra",
    "link": "https://reverseengineering.stackexchange.com/questions/27472/how-to-find-sleep-in-ollydbg-or-ida-or-ghidra",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a program which converts videos from a proprietary format into mp4.\nThe conversion is very slow and CPU utilization is less than 1%.\nI'm able to speed up the conversion process via Cheat Engine's \"Speed Hack\" feature.\nThis way, I can reach 100% CPU utilization, and the conversion is done within seconds.\nThe resulting mp4 file looks fine. There are no issues.\nI'm assuming that the developers of the conversion tool forgot to remove a sleep() in their program.\nIs there an easy way to search for sleep via IDA-Free or Ghidra or Ollydbg?\nI want to overwrite the sleep with NOP.</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "299",
    "tags": [
        "ida",
        "windows",
        "ollydbg",
        "ghidra",
        "winapi"
    ],
    "user": "Anonymous",
    "time": "Apr 14, 2021 at 23:29",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Load your binary into IDA, after completing the initial analysis click on, imports, then press CTRL + F and type sleep, automatically IDA will reference the import (if used), from that you will need to list all cross references with \"X\", so it will locate the routines used for its sleep function, however taking into account, I do not believe that the developer has used something like sleep, it may be some thread not synchronized correctly, see also:</p>\n<p>Understand how the Cheat Engine speed hack works:</p>\n<p><a href=\"https://stackoverflow.com/questions/17512906/how-does-cheatengines-speed-hack-work\"><strong>How does CheatEngine's speed hack work?</strong></a></p>\n<p>Try to implement your own speed hack based on someone else's idea:</p>\n<p><a href=\"https://github.com/IamSanjid/ce_speed_hack\" rel=\"nofollow noreferrer\"><strong>CE's Speed Hack in C++</strong></a></p>\n<p>Tips for cool projects:</p>\n<ul>\n<li>Try to attach a process and apply it</li>\n</ul>\n<p>Take the basic Guided Hacking training (It will help you a lot):</p>\n<p><a href=\"http://guidedhacking.com/starthere\" rel=\"nofollow noreferrer\">Guided Hacking Training</a></p>\n</div>",
            "votes": "1",
            "user": "Happy",
            "time": "Apr 15, 2021 at 11:36",
            "is_accepted": false,
            "comments": []
        }
    ]
}