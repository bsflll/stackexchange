{
    "title": "IDA and XRefs in the .data Section",
    "link": "https://reverseengineering.stackexchange.com/questions/4398/ida-and-xrefs-in-the-data-section",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>When using IDA, I can press <kbd>x</kbd> on any subroutine to see where it is called from. Eventually I end up in the <code>.data</code> section. </p>\n<p>But, what am I looking at when I get to this point ? </p>\n<p>Are these exports offered by the <code>.dll</code> that I'm looking at ? And, if I get to this point, is it safe to assume that there are no other calls to my function (with the exception of dynamically-generated and/or external calls) ? See reference image below for context.</p>\n<p><img alt=\"XRefs\" src=\"https://i.sstatic.net/UKpsu.png\"/></p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "4k",
    "tags": [
        "ida",
        "disassembly"
    ],
    "user": "zz3star90",
    "time": "May 22, 2014 at 12:33",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It's hard to tell without more context, but you're probably looking at a <a href=\"http://en.wikipedia.org/wiki/Virtual_method_table\" rel=\"nofollow noreferrer\">virtual function table (vtable)</a>. See <a href=\"https://reverseengineering.stackexchange.com/questions/3116/converting-a-virtual-table-from-rdata-into-an-ida-struct\">Converting a virtual table from .rdata into an IDA struct</a> for an example.</p>\n</div>",
            "votes": "3",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": true,
            "comments": []
        }
    ]
}