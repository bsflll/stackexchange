{
    "title": "Decrypting Lua Files",
    "link": "https://reverseengineering.stackexchange.com/questions/21759/decrypting-lua-files",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to decrypt a lua file which has been encrypting using a key. Some background to the LUA file. Its from an android Game i decompiled the APK and found that all the lua files are encrypted.</p>\n<p>The Game is made in an engine called Coco2D which allows developers to encrypt their files using a key. After doing some research i found that you can use IDA to look into the Binaries of the SO File and Find the encryption key in a function called ApplicationDidFinishLaunching. I tried that but i'm not really sure what im looking for in that function.</p>\n<p>IDA Text from ApplicationDidFinish Function: <a href=\"https://pastebin.com/9h69PADF\" rel=\"nofollow noreferrer\">https://pastebin.com/9h69PADF</a></p>\n<p>Near the top of the function you can see these set of variables</p>\n<pre><code>.text:00404100 var_90          = -0x90    \n.text:00404100 var_84          = -0x84\n.text:00404100 var_80          = -0x80\n.text:00404100 var_7C          = -0x7C\n.text:00404100 var_74          = -0x74\n.text:00404100 var_70          = -0x70\n.text:00404100 var_6C          = -0x6C\n.text:00404100 var_68          = -0x68\n.text:00404100 var_64          = -0x64\n.text:00404100 var_60          = -0x60\n.text:00404100 var_5C          = -0x5C\n.text:00404100 var_3C          = -0x3C\n</code></pre>\n<p>Im not sure what the above variables represent but i dont think they represent the key since the key is meant to be 128bit string encoded as Hex.</p>\n<p>Example of Encryption key: <a href=\"https://static.packt-cdn.com/products/9781783284757/graphics/B0561_11_01.jpg\" rel=\"nofollow noreferrer\">https://static.packt-cdn.com/products/9781783284757/graphics/B0561_11_01.jpg</a></p>\n<p>After More Digging i found this section in the function\n<a href=\"https://pastebin.com/N44prr2N\" rel=\"nofollow noreferrer\">https://pastebin.com/N44prr2N</a></p>\n<p>This section includes 32 hex Digits with a break of DCB 5 and DCB 4 within. I think that this is most likely the key but im unsure on how i would assemble what i have in the pastebin to a 128Bit key. I also don't know what DCB is (goin g to do research on it in a sec) and i don't know why there are breaks of 5 and 4 within the section.</p>\n<p>I went online and found a Hex to Ascii Converter and found that the hex digits do convert to Ascii. 7C converts to | and 78 converts to X just like the comments suggest but the problem i have now is that hex values such as 0xC dont convert to an Ascii value.</p>\n<p>Link To the APK: <a href=\"https://apkpure.com/taptap-heroes/com.westbund.heros.en\" rel=\"nofollow noreferrer\">https://apkpure.com/taptap-heroes/com.westbund.heros.en</a>\nLink To Encrypted Lua File + SO: <a href=\"https://www.mediafire.com/file/5ypqt5tk0scjwb5/LuaEncrypted.rar/file\" rel=\"nofollow noreferrer\">https://www.mediafire.com/file/5ypqt5tk0scjwb5/LuaEncrypted.rar/file</a></p>\n<p>Edit: after looking at the pseudo for the function i found no sign of a XTEA key being used (i may be wrong). Although i did find that RSA endcoding was used for Lua files. I still don't know what or how to decode it if its using RSA.</p>\n<p>Link To RSA: <a href=\"https://pastebin.com/quNJNzYd\" rel=\"nofollow noreferrer\">https://pastebin.com/quNJNzYd</a></p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "20k",
    "tags": [
        "ida",
        "c++",
        "android",
        "game-hacking",
        "lua"
    ],
    "user": "Cartion",
    "time": "Jul 26, 2019 at 11:38",
    "comments": [
        {
            "user": "tmr232",
            "text": "<span class=\"comment-copy\">The var_XX = XX lines you're seeing are var offsets, not values. I highly recommend that you look for some IDA Pro tutorials and introductory videos.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>xxtea encrypt with KEY: sxpDM2018</p>\n<p>result\n<a href=\"https://pastebin.com/H1piR93u\" rel=\"noreferrer\">FightLogic.lua</a></p>\n<p><strong>how find the KEY</strong></p>\n<ul>\n<li><code>IDA</code> look at <code>Function window</code></li>\n<li><p>press <code>CTRL+F</code> and type <code>xxtea_decrypt</code>. double click first item and scroll up to see <code>cocos2d::FileUtilsAndroid::getData</code>\n<a href=\"https://i.sstatic.net/U6IfO.png\" rel=\"noreferrer\"><img alt=\"result\" src=\"https://i.sstatic.net/U6IfO.png\"/></a></p></li>\n<li><p>double click <code>cocos2d::FileUtilsAndroid::getData</code> and press <code>F5</code> to decompiler\n<a href=\"https://i.sstatic.net/IGm4G.png\" rel=\"noreferrer\"><img alt=\"result\" src=\"https://i.sstatic.net/IGm4G.png\"/></a></p></li>\n<li><p>look at image <code>xxtea_decrypt</code>, you can see <code>v34</code> is KEY\nscroll up and see, this is encrypt key</p></li>\n</ul>\n<pre><code>byte *xxtea_decrypt(byte *data, long data_len, byte *key, long key_len, long *ret_length)\n</code></pre>\n<p><a href=\"https://i.sstatic.net/3QGiF.png\" rel=\"noreferrer\"><img alt=\"result\" src=\"https://i.sstatic.net/3QGiF.png\"/></a></p>\n<ul>\n<li>I rewrite code in javascript and run it with Chrome DevTool</li>\n</ul>\n<pre><code>var v45 = [896, 914, 915, 827, 756, 630, 499, 369, 252]\nvar v18 = 666\nvar v34 = []\nfor (var v17=0;v17&lt;9;v17++) {\n v19 = v45[v17]\n v34.push((v19-v18)/2) //((((v19-v18)&gt;&gt;31) + (v19-v18)) &lt;&lt; 23) &gt;&gt; 24\n v18 = (v19 - v17) - 222\n}\n// result sxpDM2018\nconsole.log(String.fromCharCode.apply(null, v34))\n</code></pre>\n<p><a href=\"https://i.sstatic.net/Ofzbj.png\" rel=\"noreferrer\"><img alt=\"final\" src=\"https://i.sstatic.net/Ofzbj.png\"/></a></p>\n</div>",
            "votes": "6",
            "user": "user29082",
            "time": "Jul 26, 2019 at 7:39",
            "is_accepted": true,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">Hi and welcome to RE.SE. It's said: <i>Give a man a fish, and you feed him for a day; show him how to catch fish, and you feed him for a lifetime.</i> ... perhaps you'd like to elaborate <i>how</i> you got there (tools, approach ...) instead of simply <i>doing the homework</i>?! Thanks.</span>",
                    "time": null
                },
                {
                    "user": "Cartion",
                    "text": "<span class=\"comment-copy\">thank you is it possible to know how you achieved this as i don't want to come back everytime the key changes + it would be great to know thanks alot anyways ive been looking at it for the past few days and as someone new to reverse engineering this is all too confusing</span>",
                    "time": null
                },
                {
                    "user": "user29082",
                    "text": "<span class=\"comment-copy\">ok, i will edit tomorrow.</span>",
                    "time": null
                },
                {
                    "user": "Cartion",
                    "text": "<span class=\"comment-copy\">okay thanks by any chance when you edit it tomorrow can you tell me how you decrypted the file because i used a simple python script to decrypt the same file in but it didn't work</span>",
                    "time": null
                },
                {
                    "user": "user29082",
                    "text": "<span class=\"comment-copy\">You need to remove 8byte sign <a href=\"https://imgur.com/YZ8mg17\" rel=\"nofollow noreferrer\">imgur.com/YZ8mg17</a></span>",
                    "time": null
                }
            ]
        }
    ]
}