{
    "title": "Where to identify and access the main object/closure in a JavaScript web app?",
    "link": "https://reverseengineering.stackexchange.com/questions/8767/where-to-identify-and-access-the-main-object-closure-in-a-javascript-web-app",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to add missing functionality to a web app's front end code JavaScript code.</p>\n<p>I can find the code in the browser's developer tools by setting breakpoints and stepping through.</p>\n<p>But in a large app with lots of modules, obfuscated or at least minified code, and layers of self-executing anonymous functions, how do I then begin to intercept / hook / patch the function I want from a user script?</p>\n<p>Looking through the call stack and closure hierarchy doesn't seem to tell me everything I need.</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "85",
    "tags": [
        "obfuscation",
        "javascript",
        "patching",
        "websites"
    ],
    "user": "hippietrail",
    "time": "Apr 26, 2015 at 15:26",
    "comments": [
        {
            "user": "jfriend00",
            "text": "<span class=\"comment-copy\">If code is protected inside a closure, there is no way to get to that code from outside the closure unless you can edit the actual source before it executes.</span>",
            "time": null
        },
        {
            "user": "hippietrail",
            "text": "<span class=\"comment-copy\">@jfriend00: That would then be an answer I would accept, though it won't make my job easier (-: It would be an even better answer if it included a method that would let me know for sure whether or not it's inside a closure.</span>",
            "time": null
        }
    ],
    "answers_data": []
}