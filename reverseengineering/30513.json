{
    "title": "What utilities allow you to debug a process without pausing execution?",
    "link": "https://reverseengineering.stackexchange.com/questions/30513/what-utilities-allow-you-to-debug-a-process-without-pausing-execution",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I was just reading this answer on StackOverflow, <a href=\"https://stackoverflow.com/a/28511887/124486\"><em>\"How can you debug a process using gdb without pausing it?\"</em></a></p>\n<blockquote>\n<p>The Linux kernel provides some support for this via <code>PTRACE_SEIZE</code>, but gdb doesn't use this yet.  There's a <a href=\"https://sourceware.org/bugzilla/show_bug.cgi?id=15250\" rel=\"nofollow noreferrer\">bug in bugzilla you can track, <em>\"Bug 15250 - use <code>PTRACE_SEIZE</code> and <code>PTRACE_INTERRUPT</code>\"</em></a></p>\n</blockquote>\n<p>I was able to find <code>PTRACE_SEIZE</code> documented in <code>man ptrace</code>,</p>\n<blockquote>\n<p><code>PTRACE_SEIZE</code> (since Linux 3.4): Attach  to  the process specified in pid, making it a tracee of the calling process.  Unlike <code>PTRACE_ATTACH</code>, <code>PTRACE_SEIZE</code> does not stop the process.  Group- stops are reported as <code>PTRACE_EVENT_STOP</code> and <code>WSTOPSIG(status)</code> returns the stop signal.  Automatically attached  children  stop  with  <code>PTRACE_EVENT_STOP</code>  and <code>WSTOPSIG(status)</code>  returns  <code>SIGTRAP</code>  instead of having <code>SIGSTOP</code> signal delivered to them.  <code>execve(2)</code> does not deliver an extra <code>SIGTRAP</code>.  Only a <code>PTRACE_SEIZE</code>d process can accept <code>PTRACE_INTERRUPT</code> and <code>PTRACE_LISTEN</code> commands.  The \"seized\" behavior just described is inherited by children that are  automatically  at‚Äê tached  using <code>PTRACE_O_TRACEFORK</code>, <code>PTRACE_O_TRACEVFORK</code>, and <code>PTRACE_O_TRACECLONE</code>.  addr must be zero.  data contains a bit mask of ptrace options to activate immediately. Permission to perform a <code>PTRACE_SEIZE</code> is governed by a ptrace access mode <code>PTRACE_MODE_ATTACH_REALCREDS</code> check; see below.</p>\n</blockquote>\n<p>That raises the question if <code>PTRACE_SEIZE</code> isn't supported by gdb, what tooling (if any) does support this functionality on Linux?</p>\n</div>",
    "votes": "5",
    "answers": 0,
    "views": "369",
    "tags": [
        "linux",
        "gdb"
    ],
    "user": "Evan Carroll",
    "time": "Jun 12, 2022 at 23:17",
    "comments": [],
    "answers_data": []
}