{
    "title": "How to change the export function name of android so file (ELF format)",
    "link": "https://reverseengineering.stackexchange.com/questions/5873/how-to-change-the-export-function-name-of-android-so-file-elf-format",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Here are my <code>.so</code> files:</p>\n<ul>\n<li>\n<a href=\"https://www.sendspace.com/file/obo19p\" rel=\"nofollow\"><code>libJlcVideoEncoder.so</code></a></li>\n<li><a href=\"https://www.sendspace.com/file/l04i9y\" rel=\"nofollow\"><code>java_so_change.exe</code></a></li>\n</ul>\n<p>Below are export functions inside <code>.so</code> files:</p>\n<ul>\n<li><code>Java_com_jlc_BubbleChat_libJlcVideoEncoder_JNIJlcInit</code></li>\n<li><code>Java_com_jlc_BubbleChat_libJlcVideoEncoder_JNIJlcVideoEncoder</code></li>\n</ul>\n<p>In <code>Java project</code>, I define the function like this and call (using JNI call):</p>\n<pre><code>package com.jlc.BubbleChat;\n\npublic class libJlcVideoEncoder\n{\n   static {\n      System.loadLibrary(\"JlcVideoEncoder\");\n   }\n   private native int JNIJlcInit();\n   private native int JNIJlcVideoEncoder(byte[] camdata,byte[] stream,int qp);\n\n   public int JlcInit() {\n       return JNIJlcInis();\n   }    \n   public int JlcVideoEncoder(byte[] camdata,byte[] stream,int qp) {\n       return JNIJlcVideoEncoder(camdata, stream, qp);\n   }    \n}\n</code></pre>\n<p>But, I want to change the export function:</p>\n<ul>\n<li><code>Java_com_jlc_BubbleChat_libJlcVideoEncoder_JNIJlcInit</code> to <code>myInitFunc</code>.</li>\n<li><code>Java_com_jlc_BubbleChat_libJlcVideoEncoder_JNIJlcVideoEncoder</code> to <code>myEncoderFunc</code>.</li>\n</ul>\n<p>So, I opened any so file and edited the function name in <code>winhex</code>.\nBut it does not work.</p>\n<p>And, there are no other files that import this so file. the problem is that after changing the function name, <code>loadlibrary</code> is success but can't find address of export function.</p>\n<p>Editing export function name does not work. Do you know the reason ?</p>\n<p>Or, somewhere there is checksum check when android load so files ?</p>\n<p>I do not want  decompile or modifying. My final aim is to call the original function with different name.</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "2k",
    "tags": [
        "android",
        "elf"
    ],
    "user": "cute_star",
    "time": "Jul 16, 2014 at 15:43",
    "comments": [
        {
            "user": "zetavolt",
            "text": "<span class=\"comment-copy\">Totally unfamiliar with android's usage of ELF, so this is not much more than a reiteration of how you might go about it on an ELF w/ non PIC/PIE code using shared libraries and the standard relocation fixup facilities: Editing an entry from the linkage table will not be sufficient, depending on how you are using this file you may have to objcopy a new .got.plt .$LDHASHTYPE.hash &amp; .rela.X and maybe even  .symtab/.dyntab etc.  It is very possible your ELF requests a custom program interpreter in which case you are just going to have to get down and dirty.</span>",
            "time": null
        },
        {
            "user": "cute_star",
            "text": "<span class=\"comment-copy\">My need is so to change original name ,so simple. now i think android check hash value when loading .so file .</span>",
            "time": null
        },
        {
            "user": "zetavolt",
            "text": "<span class=\"comment-copy\"><code>objcopy</code> can readily take care of that for you if function dispatch is accomplished in a similar fashion to what were are used to on desktop use of ELF.I will reiterate however that my intuition leaves doubt as to if Android's method of relocations of symbols and procedures shares much in common with the form we are all familiar with.</span>",
            "time": null
        },
        {
            "user": "0xec",
            "text": "<span class=\"comment-copy\">Use <code>objcopy --redefine-sym</code>. Use the version from Android NDK.</span>",
            "time": null
        }
    ],
    "answers_data": []
}