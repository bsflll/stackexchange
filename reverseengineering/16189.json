{
    "title": "Why the assembly instructions also have an adresses ?",
    "link": "https://reverseengineering.stackexchange.com/questions/16189/why-the-assembly-instructions-also-have-an-adresses",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am wondering why the assembly instructions also have an adresses (When I open Olly and debug any program I see them there next to the op codes) ? Or this is the address where the result of the instruction is stored ? </p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "92",
    "tags": [
        "assembly"
    ],
    "user": "RandomGuy",
    "time": "Aug 26, 2017 at 19:40",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">show some example. I think you are asking about the address of the instruction but some instructions can contain addresses too.</span>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">please remember that we can't see your screen from here</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In fact, the assembly instructions does not have addresses built-in... But, when analyzing a program, you may encounter more than once the same instruction. In order to make it '<em>unique</em>' in the program (and, thus, understand the role it plays in the program), you have to link it to the address it has in the program.</p>\n<p>Somehow, it is very similar to line numbers associated to a program you write in a programming language. The <code>if (test)</code> line 10 is not the same than the <code>if (test)</code> of line 25.</p>\n</div>",
            "votes": "3",
            "user": "perror",
            "time": "Aug 27, 2017 at 9:58",
            "is_accepted": false,
            "comments": []
        }
    ]
}