{
    "title": "How to know which hashing algorithm is being used?",
    "link": "https://reverseengineering.stackexchange.com/questions/29179/how-to-know-which-hashing-algorithm-is-being-used",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I’ve been reading about digital signatures getting ready for some certification, and there is one question regarding this topic, that I don’t really understand.</p>\n<p>Let’s say that I receive a plaintext with digital signature. I use the public key of the sender to decrypt. Now I have a “pure” hash. In order to check if it’s coming from a legitimate person, I need to hash the plaintext on my own.</p>\n<p>But how do I know, which hashing algorithm has been used? Do I check the number of bits of the hashed function or something else?</p>\n</div>",
    "votes": "0",
    "answers": 2,
    "views": "264",
    "tags": [
        "cryptography",
        "hash-functions"
    ],
    "user": "retne",
    "time": "Oct 29, 2021 at 7:28",
    "comments": [
        {
            "user": "Vlad Havriuk",
            "text": "<span class=\"comment-copy\">See \"<code>hashid</code>\" Linux utility</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The hash file algorithm is (usually) sent together with the file, i.e.</p>\n<blockquote>\n<p>Before sending a file, User1 uses a hashing algorithm to generate a checksum for a file. Then he/she sends it alongside the file itself. User2 receives both the file and the checksum. Now he/she can use the same hashing algorithm on the received file. What’s the point? We already know that a hash is individual (so there can’t be any other file with the same hash) and has to be always the same for an individual file. No matter how many times you use the hash algorithm, it will always give you the same result. So now, User2 can compare both hashes. If they’re the same, it means it’s generated from the same file. There is no way that any other file has the same hash and there is no chance for a hash to be different for the same file.</p>\n</blockquote>\n<p>Taken from here: <a href=\"https://blog.jscrambler.com/hashing-algorithms\" rel=\"nofollow noreferrer\">https://blog.jscrambler.com/hashing-algorithms</a></p>\n<p>Hope that helps.</p>\n</div>",
            "votes": "1",
            "user": "Irbis77",
            "time": "Aug 22, 2021 at 20:30",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In most cases the hash algorithm is known beforehand or can be guessed from a short list. For example, RSA signatures usually use some version of the PKCS standard which either specifies the hash or <a href=\"https://pkiglobe.org/pkcs7.html\" rel=\"nofollow noreferrer\">encodes it using ASN.1 format</a>.</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Aug 22, 2021 at 21:21",
            "is_accepted": false,
            "comments": []
        }
    ]
}