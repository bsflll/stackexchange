{
    "title": "Finding 3-byte checksum algorithm of key transponder",
    "link": "https://reverseengineering.stackexchange.com/questions/31362/finding-3-byte-checksum-algorithm-of-key-transponder",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am developing a tool for programming automotive RFID transponder chips from NXP (e.g. PCF7945, PCF7961). Those chips provide a 3-byte checksum over parts of their internal memory.\nIn order to check whether the chip was correctly programmed, I would like to verify the checksum.</p>\n<p>Unfortunately I do not find any documentation of the used algorithm, even in the chip's full datasheet it is not mentioned.</p>\n<p>As example, I would like to find the checksum for the EEPROM content, which has as size of 512 byte.\nI already tried to use the tool CRC RevEng, but had no success.</p>\n<p>Some sample data files can be found under following link: <a href=\"https://www.mikrocontroller.net/topic/543617#new\" rel=\"nofollow noreferrer\">Sample files posted in mikrocontroller.net</a>\n(Hint: The last 6 characters of the filename represent the checksum which was calculated by the key)</p>\n<p>Could anybody of the experts have a look on it? I would appreciate if someone could give me a hint how to determine the algorithm.</p>\n<p><strong>Edit</strong>: Just for the case you do not like the link to an external forum, I put some example data with corresponding checksum below:</p>\n<p>In the following three samples, only the last byte was modified:</p>\n<pre>4D 49 4B 52 FF 32 FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF 66 FF FF FF F6 00 6A AE </pre>\n<p>Checksum FD 4D 1F</p>\n<pre>4D 49 4B 52 FF 32 FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF 66 FF FF FF F6 00 6A 6E </pre>\n<p>Checksum FD 4E 1F</p>\n<pre>4D 49 4B 52 FF 32 FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF \nFF FF FF FF FF FF FF FF 66 FF FF FF F6 00 6A EE </pre>\n<p>Checksum FD 4F 1F</p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "133",
    "tags": [
        "checksum"
    ],
    "user": "Philipp",
    "time": "Jan 8, 2023 at 22:30",
    "comments": [
        {
            "user": "dieter reichl",
            "text": "<span class=\"comment-copy\">You have a good start: manipulating single bytes and check the result. When possible generate more examples, consecutive in best case. There are so many options in algorithms, you need either pretty good luck or do it via statistics (and still some luck),</span>",
            "time": null
        }
    ],
    "answers_data": []
}