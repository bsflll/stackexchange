{
    "title": "Is it possible to debug a .Net executable with IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/12572/is-it-possible-to-debug-a-net-executable-with-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>When I load a .Net executable into IDA then there is no <code>Debug</code> menu as when I load a normal binary. Is there any way to enable the debug functionality for .Net as well? I'd like to step into some jitted functions in order to analyse the quality (or lack thereof) of the generated native code. </p>\n<p>I know that I can do this with Visual Studio, but that is too cumbersome and unwieldy for my taste. I'd rather use my trusted IDA, which is so much better for stuff like that.</p>\n<p>I tried attaching to an running .Net exe but that didn't really get me anywhere, apart from the need for adding <code>ReadLine()</code> calls to the programs to make them stay around long enough.</p>\n<p>In case it matters, on this machine I'm still using IDA 6.8 (Pro) at the moment because my antivirus - Avira - screams its little head off when I launch IDA 6.9 (on account of the plugins).</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "11k",
    "tags": [
        "ida",
        "debugging",
        ".net"
    ],
    "user": "DarthGizka",
    "time": "May 1, 2016 at 13:31",
    "comments": [
        {
            "user": "tmr232",
            "text": "<span class=\"comment-copy\">In most cases, using a tool like <a href=\"https://github.com/0xd4d/dnSpy\" rel=\"nofollow noreferrer\">dnSpy</a> is much preferable for .Net than using regular debuggers.</span>",
            "time": null
        },
        {
            "user": "DarthGizka",
            "text": "<span class=\"comment-copy\">@tmr: Interesting, thanks! Starred and filed away for further investigation...</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>No. <a href=\"https://www.hex-rays.com/products/ida/debugger/index.shtml\" rel=\"nofollow\">https://www.hex-rays.com/products/ida/debugger/index.shtml</a>\nAsk on their support forum if you want.</p>\n</div>",
            "votes": "3",
            "user": "Vitaly Osipov",
            "time": "May 2, 2016 at 3:56",
            "is_accepted": false,
            "comments": [
                {
                    "user": "DarthGizka",
                    "text": "<span class=\"comment-copy\">Where does that say that IDA cannot debug those Windows executables that happen to be .Net assemblies?</span>",
                    "time": null
                },
                {
                    "user": "Vitaly Osipov",
                    "text": "<span class=\"comment-copy\">Well, surprisingly, if it doesn't list that rather significant capability, it does not have it.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It's an old question, but maybe somebody is searching for it nowadays. Yes, IDA can do it!</p>\n<ul>\n<li><a href=\"https://www.hex-rays.com/products/ida/gallery/\" rel=\"nofollow noreferrer\">https://www.hex-rays.com/products/ida/gallery/</a></li>\n<li><a href=\"https://www.hex-rays.com/products/ida/gallery/dotnet\" rel=\"nofollow noreferrer\">https://www.hex-rays.com/products/ida/gallery/dotnet</a></li>\n</ul>\n</div>",
            "votes": "0",
            "user": "scopolamin",
            "time": "Apr 26, 2020 at 7:44",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">but can it debug? Or it's just displays the IL?</span>",
                    "time": null
                },
                {
                    "user": "DarthGizka",
                    "text": "<span class=\"comment-copy\">@ scopolamin: The links you provided only indicate the ability to <i>disassemble</i> .NET code at the IL level (which IDA has had for quite a while and which <code>ildasm</code> has given us since day 1 of .NET). The question is about the ability to <i>debug</i> .NET code and/or to disassemble the jitted native code, just like Pawel said.</span>",
                    "time": null
                },
                {
                    "user": "scopolamin",
                    "text": "<span class=\"comment-copy\">Sorry, I didn't mean to make up false information.</span>",
                    "time": null
                }
            ]
        }
    ]
}