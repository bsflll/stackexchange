{
    "title": "How to make Radare2 automatically disassemble next instruction after each `ds` debug single-step?",
    "link": "https://reverseengineering.stackexchange.com/questions/20120/how-to-make-radare2-automatically-disassemble-next-instruction-after-each-ds-d",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>How to make Radare2 automatically disassemble next instruction after each <code>ds</code> debug single-step?</p>\n</blockquote>\n<p>I thought that <code>e asm.bytes=1</code> would achieve this, but that doesn't help.</p>\n<p>In particular, GDB supports disassembling the next instruction after each debug single-step, so I guess this should be possible with Radare2 as well.</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "2k",
    "tags": [
        "debugging",
        "radare2"
    ],
    "user": "Shuzheng",
    "time": "Dec 11, 2018 at 8:08",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If you want to execute another command after doing <code>ds</code> you can simply use <code>;</code> to add a new command. So for example, the command <code>ds; pd 1 @ rip</code> will step one instruction and disassemble the instruction at <code>rip</code>.</p>\n<p>You can also define a macro (an alias) for a set of commands. Let's define for example the macro <code>foo</code> to do the following things:</p>\n<ol>\n<li>Single step</li>\n<li>Print hexdump of 16 bytes at <code>rip</code></li>\n<li>Disassemble 1 instruction at <code>rip</code></li>\n</ol>\n<p>To do this you can simply run:</p>\n<pre><code>[0x7f46fea5ee00]&gt; (foo, ds, px 16 @ rip, pd 1 @ rip)\n</code></pre>\n<p>And then use it with <code>.(foo)</code>:</p>\n<pre><code>[0x7f46fea5ee00]&gt; .(foo)\n- offset -       0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF\n0x7f46fea5ee1a  89c0 48c1 e220 4809 c248 8b05 0e70 0200  ..H.. H..H...p..\n            ;-- rip:\n            0x7f46fea5ee1a      89c0           mov eax, eax\n\n[0x7f46fea5ee00]&gt; .(foo)\n- offset -       0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF\n0x7f46fea5ee1c  48c1 e220 4809 c248 8b05 0e70 0200 4889  H.. H..H...p..H.\n            ;-- rip:\n            0x7f46fea5ee1c      48c1e220       shl rdx, 0x20\n\n[0x7f46fea5ee00]&gt; .(foo)\n- offset -       0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF\n0x7f46fea5ee20  4809 c248 8b05 0e70 0200 4889 156f 6802  H..H...p..H..oh.\n            ;-- rip:\n            0x7f46fea5ee20      4809c2         or rdx, rax\n</code></pre>\n<hr/>\n<p><strong>Visual Modes</strong> </p>\n<p>Now, after all this was said, I want to add that in my opinion, interactive debugging using <code>ds</code>, <code>dso</code>, <code>dc</code> and similar are the wrong approach. For a debugging session, it is preferred to use the Visual Modes of radare2. Visual Panels mode is ideal for debugging session but you can also enjoy from a good experience while using the regular Visual and Visual Graph modes.</p>\n<p>The following GIF shows the Visual Panels mode (<code>V!</code>) as well as the regular Visual mode. You can also see that by pressing <code>:</code> I can execute radare2 commands (in the gif I executed <code>px</code>). Visual Panels mode is very configurable and you can tweak it as you see fit. Simply use the <code>?</code> key to see the help and the available commands.</p>\n<p><a href=\"https://i.sstatic.net/xj7Y2.gif\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/xj7Y2.gif\"/></a></p>\n<hr/>\n<p><strong>Read more:</strong></p>\n<ul>\n<li><a href=\"https://radare.gitbooks.io/radare2book/visual_mode/intro.html\" rel=\"nofollow noreferrer\">Visual Modes | r2 book</a></li>\n<li><a href=\"https://radare.gitbooks.io/radare2book/visual_mode/visual_panels.html\" rel=\"nofollow noreferrer\">Visual Panels Mode | r2book</a></li>\n<li><a href=\"https://radare.gitbooks.io/radare2book/scripting/macros.html\" rel=\"nofollow noreferrer\">Macros | r2book</a></li>\n</ul>\n</div>",
            "votes": "3",
            "user": "Megabeets",
            "time": "Dec 11, 2018 at 12:48",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Shuzheng",
                    "text": "<span class=\"comment-copy\">thank you a lot. Now, how do I save the macro, so that it is loaded at next startup of Radare2? Furthermore, do you know why <code>ds</code> doesn't update the prompt address in <a href=\"https://reverseengineering.stackexchange.com/questions/20114/radare2-doesnt-update-current-address-when-single-step-debugging-using-ds/20118?noredirect=1#comment32446_20118\" title=\"radare2 doesnt update current address when single step debugging using ds\">reverseengineering.stackexchange.com/questions/20114/â€¦</a>? The prompt address only updates after pressing like 5-10 <code>ds</code>'s, but that varies.</span>",
                    "time": null
                },
                {
                    "user": "Megabeets",
                    "text": "<span class=\"comment-copy\">You can simply write (echo) it to your radare2rc file (default is: <code>~/.radare2rc</code>). And for the seek, I don't know if it should be changed at all. If you think so, you can open an issue on GitHub or just ask in the radare2 telegram/irc group. Alos, you can add <code>s rip</code> to your macro in order to make r2 seek to the IP.</span>",
                    "time": null
                },
                {
                    "user": "Shuzheng",
                    "text": "<span class=\"comment-copy\">Ahh yes, you are probably right. However, it is just wierd then that after pressing <code>ds</code> many times, the seek address is suddenly updated. That doesn't make sense does it? Anyway, thanks for your answer. I will accept it :)</span>",
                    "time": null
                }
            ]
        }
    ]
}