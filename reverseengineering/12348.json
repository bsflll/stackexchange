{
    "title": "Dynamic instrumentation tools which support reverse execution",
    "link": "https://reverseengineering.stackexchange.com/questions/12348/dynamic-instrumentation-tools-which-support-reverse-execution",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to analyze some execution crash information, and to better identify the root cause of memory access error, I would like to <code>reverse execute</code> the program from the crash point. </p>\n<p>For example, to identify the root cause of memory access error below, I would like to reversely execute from the third line, and by leveraging some data flow analysis techniques, I should be able to identify the root cause at the first line.</p>\n<pre><code>mov    -0x18(%rbp),%rax       &lt;---- root cause is at memory -0x18(%rbp)\nadd    %rdx,%rax\nmov    (%rax),%eax            &lt;--- crash when reading (%rax)\n</code></pre>\n<p>So here is my question, is there any dynamic analysis tool/debugger that can support reverse execution? I prefer <code>Pin</code>, but I am not aware that <code>Pin</code> can do this.. </p>\n</div>",
    "votes": "2",
    "answers": 3,
    "views": "274",
    "tags": [
        "binary-analysis",
        "dynamic-analysis"
    ],
    "user": "lllllllllllll",
    "time": "Apr 5, 2016 at 12:47",
    "comments": [
        {
            "user": "Ta Thanh Dinh",
            "text": "<span class=\"comment-copy\">In previous versions of Pin, there was API for <a href=\"http://www.cs.virginia.edu/kim/publicity/pin/docs/31933/Pin/html/group__CHECKPOINTING.html\" rel=\"nofollow noreferrer\">checkpoint/reexecution</a>; but they are not supported in recent versions. They are instead moved to a more complete framework, called <a href=\"https://software.intel.com/en-us/articles/program-recordreplay-toolkit?language=en\" rel=\"nofollow noreferrer\">PinPlay</a>.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Have a Look at <a href=\"http://rr-project.org\" rel=\"nofollow\">http://rr-project.org</a> The website says it supports reverse execution. Yet, I am not a 100% sure if this is exactly the same you are talking about. </p>\n<blockquote>\n<p>rr also provides efficient reverse execution under gdb. Set breakpoints and data watchpoints and quickly reverse-execute to where they were hit.</p>\n</blockquote>\n<p>See also the gdb record and replay feature <a href=\"https://sourceware.org/gdb/onlinedocs/gdb/Reverse-Execution.html#Reverse-Execution\" rel=\"nofollow\">here</a></p>\n<blockquote>\n<p>On some platforms, gdb provides a special process record and replay target that can record a log of the process execution, and replay it later with both forward and reverse execution commands.</p>\n</blockquote>\n</div>",
            "votes": "3",
            "user": "langlauf.io",
            "time": "Apr 5, 2016 at 13:00",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Ta Thanh Dinh",
                    "text": "<span class=\"comment-copy\"><a href=\"http://rr-project.org/\" rel=\"nofollow noreferrer\">rr</a> should be definitely tried, I am indeed excited by this implementation. I wish its API more clear to use.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In previous versions of Pin, there was APIs for <a href=\"http://www.cs.virginia.edu/kim/publicity/pin/docs/31933/Pin/html/group__CHECKPOINTING.html\" rel=\"nofollow\">checkpoint/re-execution</a>; but they are not supported in recent versions. They are instead moved to a more complete framework, called <a href=\"https://software.intel.com/en-us/articles/program-recordreplay-toolkit?language=en\" rel=\"nofollow\">PinPlay</a>.</p>\n<p>You can also implement an ad-hoc <code>reverse execution</code> using existing API(s) (e.g. Pin_ExecuteAt, Pin_SaveContext, etc). The naive idea is to track the memory writing and store the original value. I have implemented actually such an <a href=\"https://github.com/tathanhdinh/PathExplorer/blob/windows_version/version_1/src/base/checkpoint.cpp\" rel=\"nofollow\">engine</a> (sorry for the self-advertisement).</p>\n</div>",
            "votes": "1",
            "user": "Ta Thanh Dinh",
            "time": "Apr 5, 2016 at 13:10",
            "is_accepted": false,
            "comments": [
                {
                    "user": "lllllllllllll",
                    "text": "<span class=\"comment-copy\">Many thanks for your information. Could you elaborate more on how to use your engine? Thank you!</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If you have access to IDA, you can use the <a href=\"https://www.hex-rays.com/products/ida/support/tutorials/replayer/trace_replayer.pdf\" rel=\"nofollow\">trace replayer</a>. It doesn't exactly support reverse execution, but I wrote it with the idea to help in the problem you have: check why a crash happened by replaying recorded executions traces. The program is not executing but rather replaying the execution trace, however, in most cases, that is more than enough.</p>\n</div>",
            "votes": "0",
            "user": "joxeankoret",
            "time": "Apr 11, 2016 at 9:52",
            "is_accepted": false,
            "comments": []
        }
    ]
}