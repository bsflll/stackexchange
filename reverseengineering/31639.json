{
    "title": "A few questions about reloc tables and base memory",
    "link": "https://reverseengineering.stackexchange.com/questions/31639/a-few-questions-about-reloc-tables-and-base-memory",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>A friend and I are poking around with some 32-bit Windows binaries and wanted to get some info about relocation tables.</p>\n<ol>\n<li><p>What is the difference between an exe that does not contain a relocation table (its base memory always starts at a specific address e.g. 0x0040000), and an exe that does contain a relocation table with a base memory that starts at different addresses?</p>\n</li>\n<li><p>What are the benefits or detriments to having a relocation table and not having one in an exe?</p>\n</li>\n<li><p>If an exe has a relocation table already inside of it, what will happen if it is removed? What are the consequences of doing so?</p>\n</li>\n</ol>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "154",
    "tags": [
        "memory",
        "relocations"
    ],
    "user": "Kalamalka Kid",
    "time": "Mar 7, 2023 at 22:09",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Relocation tables exist to load a binary To a different Imagebase instead of the preferred Imagebase embedded in pe header</p>\n<p>Imagebase relocation is mostly applicable to dlls as image base conflicts have more chances to happen in dlls</p>\n<p>Exe is normally the first image to be loaded so it normally tends to get its preferred imagebase 0x400000 in x86</p>\n<p>You can compile an exe without relocation table using /Fixed /DynamicBase:no linker options</p>\n<p>You can rip out a relocation table and theoretically the binary should work alright at its preferred imagebase</p>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "Mar 8, 2023 at 4:51",
            "is_accepted": true,
            "comments": [
                {
                    "user": "peter ferrie",
                    "text": "<span class=\"comment-copy\">subject to ASLR restrictions, depending on the size of the stack and heap, which might end up occupying the place where the image wants to go.</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">@peterferrie  ðŸ˜€ yes theoratically i meant</span>",
                    "time": null
                }
            ]
        }
    ]
}