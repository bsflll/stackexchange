{
    "title": "picoCTF be-quick-or-be-dead-1 dcrypt simulation with python",
    "link": "https://reverseengineering.stackexchange.com/questions/21328/picoctf-be-quick-or-be-dead-1-dcrypt-simulation-with-python",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This is <code>be-quick-or-be-dead-1</code> in <code>picoCTF</code> challenge (<a href=\"http://bayanbox.ir/info/7975794566083887573/be-quick-or-be-dead-1\" rel=\"nofollow noreferrer\">Download</a>)</p>\n<p>in this file we can see <code>decrypt_flag()</code> function, this function return this flag:</p>\n<pre><code>./be-quick-or-be-dead-1 \nCalculating key...\nDone calculating key\nPrinting flag:\npicoCTF{why_bother_doing_unnecessary_computation_fedbb737}\n</code></pre>\n<p>i wanted to implement this function with python, and i wrote this code:</p>\n<pre><code>key=[0x2c,0x97,0xa5,0xe9]\ni=0\nflag=[0x5c,0xfe,0xc6,0x86,0x6e,0xc3,0xe3,0x92,0x59,0xff,0xdc,0xb6,0x4d,0xf8,0xd1,0x81,0x55,0xe5,0xfa,0x8d,0x5e,0xfe,0xcb,0x8e,0x6d,0xe2,0xcb,0x87,0x56,0xf4,0xc0,0x9a,0x47,0xf6,0xd7,0x90,0x6a,0xf4,0xca,0x84,0x46,0xe2,0xd1,0x88,0x43,0xfe,0xca,0x87,0x67,0xf1,0xc0,0x8d,0x5b,0xf5,0x92,0xda,0x0d,0xea]\nwhile i &lt; 58 :\n    flag[i] = chr(flag[i] ^ key[(i&amp;3)])\n    i=i+1\n\nprint \"\".join(flag)\n</code></pre>\n<p>but when i run it, print wrong flag:</p>\n<pre><code>picoBTF{uhy_aothyr_dringAunnzceskaryFcomjutaoionKfedwb73!}\n</code></pre>\n<p>what is my problem?</p>\n<p>thank you</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "256",
    "tags": [
        "decryption",
        "python"
    ],
    "user": "Baba",
    "time": "May 18, 2019 at 1:00",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Your solution script is missing one vital part. if you look at the disassembly you could notice such part</p>\n<pre><code>0x004006ee      8b45ec         mov eax, dword [var_14h]\n0x004006f1      83c001         add eax, 1\n0x004006f4      8945ec         mov dword [var_14h], eax\n</code></pre>\n<p>Where <code>var_14h</code> the key is located so that this part is modifying the first entry in the <code>key</code> every time the algorithm loops over it (you can check few lines above those ones). \nYou could modify your script like this:</p>\n<blockquote>\n<p>➜  picoCTF cat solv.py </p>\n</blockquote>\n<pre><code>key=[0x2c,0x97,0xa5,0xe9]\ni=0\nflag=  [0x5c,0xfe,0xc6,0x86,0x6e,0xc3,0xe3,0x92,0x59,0xff,0xdc,0xb6,0x4d,0xf8,0xd1,0x81,0x55,0xe5,0xfa,0x8d,0x5e,0xfe,0xcb,0x8e,0x6d,0xe2,0xcb,0x87,0x56,0xf4,0xc0,0x9a,0x47,0xf6,0xd7,0x90,0x6a,0xf4,0xca,0x84,0x46,0xe2,0xd1,0x88,0x43,0xfe,0xca,0x87,0x67,0xf1,0xc0,0x8d,0x5b,0xf5,0x92,0xda,0x0d,0xea]\nwhile i &lt; 58 :\n    flag[i] = chr(flag[i] ^ key[(i&amp;3)])\n    if i&amp;3 == 0:\n        key[0] = key[0] + 1\n    i=i+1\n\nprint \"\".join(flag)\n</code></pre>\n<blockquote>\n<p>➜  picoCTF python solv.py <br/>\n  picoCTF{why_bother_doing_unnecessary_computation_fedbb737}</p>\n</blockquote>\n</div>",
            "votes": "2",
            "user": "Paweł Łukasik",
            "time": "May 18, 2019 at 5:29",
            "is_accepted": true,
            "comments": []
        }
    ]
}