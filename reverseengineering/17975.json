{
    "title": "Finding source of memory modification",
    "link": "https://reverseengineering.stackexchange.com/questions/17975/finding-source-of-memory-modification",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to disable the modification of a byte array in a C++ application. I know where the original array is created and where to find the modified one, but I'm having trouble finding the function responsible for the modification, which also copies the array, presumably on-the-fly.</p>\n<p>The memory is dynamic, so I can't set a HW breakpoint ahead of time, but I do know the contents of the unmodifed array. Is there an easier way to find the function that creates the modified array than to try and follow the original array through memory or trace it back? (I have attempted this, but somehow I keep missing it...)</p>\n<p>Is there maybe a plugin for OllyDbg that searches through the trace when you point to a memory address that you need to know where it was modified from?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "419",
    "tags": [
        "ollydbg",
        "c++",
        "memory",
        "tracing"
    ],
    "user": "Mars",
    "time": "Apr 12, 2018 at 0:20",
    "comments": [
        {
            "user": "joxeankoret",
            "text": "<span class=\"comment-copy\">Uhm... can you put a breakpoint after the original array is created, get the newly allocated memory address and put a R/W hardware breakpoint on it? I don't use OllyDbg, but I'm sure there must be some method to script it.</span>",
            "time": null
        },
        {
            "user": "Fewmitz",
            "text": "<span class=\"comment-copy\">If you know where the alloc is and are using windbg you can provide a command to run when a breakpoint gets hit. So you can break on wherever the allocation return is and use the command to set a second breakpoint. e.g.: bp &lt;addrOfAllocReturn&gt; \"ba w 4 &lt;eaxOrAllocRet&gt;\".  You can do something similar with conditional breakpoints in Olly</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The only thing you can do with the dynamic analysis is to find where the final block is allocated. For this you need to enable memory allocation tracing with</p>\n<pre><code>gflags.exe /i yourApplication.exe +ust\n</code></pre>\n<p>Then use windbg and !heap -p -a command on the block address, it will print you the call stack which allocated this memory. So at least you'll have the idea where it was allocated, and you'll be able to put hardware breakpoint at the allocation point.</p>\n</div>",
            "votes": "1",
            "user": "Anton Kukoba",
            "time": "Apr 12, 2018 at 10:18",
            "is_accepted": false,
            "comments": []
        }
    ]
}