{
    "title": "Mono.Cecil throws SymbolsNotMatchingException, how to find out Method line number?",
    "link": "https://reverseengineering.stackexchange.com/questions/27937/mono-cecil-throws-symbolsnotmatchingexception-how-to-find-out-method-line-numbe",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I tried to use a <strong>PDB</strong> file to map the Instructions to the Sequencepoints in Mono.Cecil and find out the line number of a method. But none of the answers in any forum seems to work, because no matter what I try the <strong>SymbolsNotMatchingException</strong> is thrown with the error message</p>\n<blockquote>\n<p>Symbols were found but are not matching the assembly\".</p>\n</blockquote>\n<p>By the way, my target \"application\" is a Unity Game.</p>\n<p>Here is some code I use (side note: ProjectPath is the path to my target <code>*.dll</code>):</p>\n<pre><code>var resolver = new DefaultAssemblyResolver();\nresolver.AddSearchDirectory(GetDLLsFolderToResolve(ProjectPath));\n\nusing var assembly = AssemblyDefinition.ReadAssembly(ProjectPath,\n                new ReaderParameters { ReadWrite = true, AssemblyResolver = resolver, \n                    SymbolReaderProvider = new PdbReaderProvider(), ReadSymbols = true });\n</code></pre>\n<p>I have already the <code>Mono.Cecil.dll</code> and <code>Mono.Cecil.Pdb.dll</code> in the same folder due to import Mono.Cecil via NuGet. Also, the target DLL and the PDB also are in the same folder.</p>\n<p>Does anybody have a working example? Or any idea how this error could be solved? Would be happy for any help.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "533",
    "tags": [
        "debugging",
        "debuggers",
        "c#",
        "exception",
        "pdb"
    ],
    "user": "programming_is_bae",
    "time": "Jul 3, 2021 at 13:06",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">are you sure PDB actually matches the file?</span>",
            "time": null
        },
        {
            "user": "programming_is_bae",
            "text": "<span class=\"comment-copy\">I don't know if they are matching each other, but the *.dll's and *.pdb's were created in the same folder after the build process. Maybe I choose the wrong settings for the Unity build process. I will have a look, thank you! :)</span>",
            "time": null
        },
        {
            "user": "programming_is_bae",
            "text": "<span class=\"comment-copy\">Can't believe that this hint helped me to solve it. I have modified the *.dll with Mono.Cecil before and it doesn't match afterwards with the *.pdb file. Thank you so much!</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">@programming_is_bae please write this up as an answer and accept it. It's perfectly fine to do that here and you may even get some upvotes for it. Most importantly it will help others who ran into the same issue.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>So all the steps above are correct the way they were described. The only thing I have done wrong was, that my target <strong>DLL</strong> was modified by Mono.Cecil before (I already had read and wrote my target <strong>DLL</strong> and modified it by this way). So the <strong>DLL</strong> and the <strong>PDB</strong> was not the same anymore.</p>\n<p>So if you want to run Mono.Cecil just once and you get the exception above do the following things:</p>\n<ol>\n<li>Build your target application again (which should have all the DLL's and the corresponding PDB's for each DLL)</li>\n<li>Add <code>ReadSymbols = true</code> to the ReadParameters (in my case I don't\nwant to write, so I need only the ReadParameters)</li>\n<li>Run your Mono.Cecil application</li>\n</ol>\n<p>Note: This is only a solution if you want to run Mono.Cecil once. If you want to run it again over your target <strong>DLL</strong>, you have to make all steps above again.</p>\n<p>Hopefully this will help someone!</p>\n<p>~Sulan</p>\n</div>",
            "votes": "3",
            "user": "MarianD",
            "time": "Jul 5, 2021 at 16:22",
            "is_accepted": true,
            "comments": []
        }
    ]
}