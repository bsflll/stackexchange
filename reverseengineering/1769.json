{
    "title": "In what industries is [code] reverse engineering used?",
    "link": "https://reverseengineering.stackexchange.com/questions/1769/in-what-industries-is-code-reverse-engineering-used",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>While we all know what fun reverse engineering of code can be, I am wondering what legitimate industries, besides the anti-X industry, reverse engineer code? While this may sometimes be needed in many technical roles, I am speaking more of jobs where this is a primary responsibility. I suspect there are very few jobs where reverse engineering is a necessary skill, or few that would be admitted to, but don't know that for certain. Yes, it is of course always a complementary skill!</p>\n</div>",
    "votes": "18",
    "answers": 6,
    "views": "2k",
    "tags": [
        "disassembly",
        "career-advice"
    ],
    "user": "dyasta",
    "time": "Jan 28, 2019 at 10:38",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><em>Community wiki: feel free to edit</em></p>\n<h1>As a main skill</h1>\n<ul>\n<li>malware analysis</li>\n<li>digital forensics and Incident response</li>\n<li>security assessment, pen testing\n<ul>\n<li>is this website/software/cpu really secure? which one is the most secure?</li>\n</ul></li>\n<li><p>exploit development</p>\n<ul>\n<li>si vis pacem, para bellum</li>\n</ul></li>\n<li><p>plagiarism detection (if a company sues another one because they claim they stole their source code)</p></li>\n<li>emulation\n<ul>\n<li>adapting older games to newer medias\n<ul>\n<li>such as <a href=\"http://www.dotemu.com\" rel=\"noreferrer\">DotEmu</a>, <a href=\"http://www.gog.com/\" rel=\"noreferrer\">Good old games</a></li>\n</ul></li>\n<li>adapting older hardware to newer\n<ul>\n<li>emulate older protection dongles for no longer supported softwares</li>\n</ul></li>\n</ul></li>\n<li>source code recovery\n<ul>\n<li>because backup may fails</li>\n</ul></li>\n<li>business logic recovery / process recovery (regarding Legacy Systems)\n<ul>\n<li>because documenting all the quirks, workarounds and clever solutions adequately is hard</li>\n</ul></li>\n</ul>\n<h1>As a side skill</h1>\n<ul>\n<li>understanding what a program is about\n<ul>\n<li>because too often, one doesn't have the time to document how an internal tool works</li>\n</ul></li>\n</ul>\n</div>",
            "votes": "21",
            "user": "4 revs, 3 users 92%Ange",
            "time": "Jan 2, 2014 at 22:17",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Here's a few that you may not usually think about:</p>\n<ul>\n<li>Car tuning shops. A lot of modern car tuning is basically firmware hacking.</li>\n<li>Compiler development. When you're making a toolchain that produces code that other people will rely on, it's good to have an outside tool for sanity check.</li>\n<li>General software development. While debuggers are usually enough, sometimes you need to RE your own program to realize what's going on. Or look inside a library you're using when docs are incomplete, wrong, or just plain missing.</li>\n<li>Checking out what your competitors are doing (both software and hardware).</li>\n</ul>\n</div>",
            "votes": "14",
            "user": "Igor Skochinsky",
            "time": "Apr 14, 2013 at 21:21",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">as for the first point I can tell you that there is a difference between the people packing <i>that</i> experience under their belts and the ones selling/offering it.</span>",
                    "time": null
                },
                {
                    "user": "Rolf Rolles",
                    "text": "<span class=\"comment-copy\">+1 for the comment about RE as a part of the software development process.  I can't tell you how many times IDA has saved my ass during development, where I have some linker error that is driving me insane, and I just open the offending objects in the disassembler and all becomes clear.  Similarly for things that I would swear are \"compiler errors\" which turn out to be my fault.  And that experience also helps me debug my software much better.</span>",
                    "time": null
                },
                {
                    "user": "dyasta",
                    "text": "<span class=\"comment-copy\">Good points! Especially about reverse engineering competitor's products. I remember having to reverse other packers when PECompact was in development over a decade ago, as I couldn't figure out how in the world they packed so tight. I found the answer by reversing: BCJ2 (x86 jmp/call offset optimization). At the time, it was quite a revelation!</span>",
                    "time": null
                },
                {
                    "user": "gandolf",
                    "text": "<span class=\"comment-copy\">+1 for firmware hacking, and firmware development. In fact I found myself doing trivial RE when developing small robotics or other hardware/software projects..And lots of companies, while do not explicitly list reverse engineering as a requirement for a developer position, it's a skill if not present makes you just a very 'technical writer' and not an actual software developer.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>No one seems to have mentioned compatibility yet. I know this isn't the biggest thing reversing is used for, but making software that is compatible with proprietary file formats or protocols is very important, fairly common, and explicitly protected by law in some countries.</p>\n<p>Often, a developer can use reversing as a \"complementary skill\", but in many cases it would make sense for this to be someone's job. For example, when using clean-room techniques, or if the file format or protocol is excessively complex.</p>\n</div>",
            "votes": "11",
            "user": "Dougall",
            "time": "Apr 15, 2013 at 0:16",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Probably a niche but my RE skills often help to get (CR)Applications to work in virtual environments such as Citrix XenApp/XenDesktop. </p>\n<p>I write a lot about these experiences on my <a href=\"http://www.remkoweijnen\">blog</a>.</p>\n<p><strong>self promo warning</strong>: here are a few recent examples:</p>\n<ul>\n<li><a href=\"http://www.remkoweijnen.nl/blog/2013/03/11/the-case-of-the-com-port-redirection/\">The case of the COM Port redirection</a></li>\n<li><a href=\"http://www.remkoweijnen.nl/blog/2013/02/19/cannot-create-shell-notification-icon-error-during-unattended-install/\">Cannot create shell notification icon error during unattended install</a></li>\n<li><a href=\"http://www.remkoweijnen.nl/blog/2013/01/25/the-case-of-the-missing-audio/\">The case of the missing audio</a></li>\n</ul>\n</div>",
            "votes": "8",
            "user": "Remko",
            "time": "Apr 15, 2013 at 21:13",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Probably the security industry is the biggest user of reverse engineering. Malware analysis, analyzing binaries for potential security vulns, and analysis of patches to write security product signatures.</p>\n</div>",
            "votes": "1",
            "user": "broadway",
            "time": "Apr 14, 2013 at 19:37",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It's rampant in the microprocessor industry; here are a few sources you might find interesting:</p>\n<ul>\n<li><a href=\"http://www.techspot.com/article/599-amd-rise-and-fall/\" rel=\"nofollow\">http://www.techspot.com/article/599-amd-rise-and-fall/</a></li>\n<li><a href=\"http://www.extremetech.com/extreme/56018-analyst-intel-reverseengineered-amd64\" rel=\"nofollow\">http://www.extremetech.com/extreme/56018-analyst-intel-reverseengineered-amd64</a></li>\n<li><a href=\"http://www.darkreading.com/security/news/222600843\" rel=\"nofollow\">http://www.darkreading.com/security/news/222600843</a></li>\n<li><a href=\"http://uvicrec.blogspot.ca/2011/09/understanding-intel-4004.html\" rel=\"nofollow\">http://uvicrec.blogspot.ca/2011/09/understanding-intel-4004.html</a></li>\n</ul>\n</div>",
            "votes": "1",
            "user": "Andrew Odri",
            "time": "Aug 14, 2013 at 0:10",
            "is_accepted": false,
            "comments": []
        }
    ]
}