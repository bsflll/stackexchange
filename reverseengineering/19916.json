{
    "title": "How to find which event is bound to which GUI part",
    "link": "https://reverseengineering.stackexchange.com/questions/19916/how-to-find-which-event-is-bound-to-which-gui-part",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>let's say, I am debugging (with x64dbg) a specific program (in Windows, native programs, probably they are called standard MFC-kind programs ):</p>\n<p><a href=\"https://i.sstatic.net/XpOFK.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/XpOFK.png\"/></a></p>\n<p>that program has a button <code>xyz</code>:</p>\n<p><a href=\"https://i.sstatic.net/K1wVY.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/K1wVY.png\"/></a></p>\n<p>1) how to find out which line/command is executed by clicking on that button?  <br/> 2) if that's possible to know that line before I click that button, it would be excellent.</p>\n<p>I'd like a small \"how-to\" or steps what to do to get that.</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "490",
    "tags": [
        "debugging"
    ],
    "user": "T.Todua",
    "time": "Nov 20, 2018 at 10:28",
    "comments": [
        {
            "user": "zxxc",
            "text": "<span class=\"comment-copy\">This might be very specific to the GUI toolkit the program is using. Some prefer overriding virtual functions, some use events/messages and they all use their own structures and tables and setup code. Are you interested in MFC on Windows only or in general?</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">@T.Todua you were missing the point zxxc was making. Consider something like Chromium-based browsers. The canvas on which the websites are being rendered will be a single <i>window</i> in terms of how Windows (user32.dll) looks at it. Everything inside is drawn by the application. However, something like MFC or WTL makes use of the native windowing capabilities built into Windows and that involves sending/receiving so-called window messages. These two extremes require completely different approaches even though both can run on Windows.</span>",
            "time": null
        },
        {
            "user": "Biswapriyo",
            "text": "<span class=\"comment-copy\">Use <code>AU3_Spy.exe</code> tool in AutoHotKey. It shows many useful info about Window buttons. Also executable may have some resource file, use Resource Hacker.</span>",
            "time": null
        },
        {
            "user": "T.Todua",
            "text": "<span class=\"comment-copy\">@0xC0000022L thanks for explanation! I completely understand now.  Yes, I meant for typical windows application with native window (MFC mostly as i think)</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">@Biswapriyo you may find <a href=\"https://github.com/strobejb/winspy\" rel=\"nofollow noreferrer\">this</a> helpful as well. And of course there is Spy++ which comes with Visual C++.</span>",
            "time": null
        }
    ],
    "answers_data": []
}