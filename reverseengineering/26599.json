{
    "title": "Where Can I Get .PDB files for Windows OS Components?",
    "link": "https://reverseengineering.stackexchange.com/questions/26599/where-can-i-get-pdb-files-for-windows-os-components",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to take a look at some components of the Windows OS in IDA, such as ntoskrnl.exe and some of the Windows API .DLLs. I understand there is a Microsoft symbol server, but I am not sure how to actually retrieve the .PDB of choice from it.</p>\n<p><a href=\"https://reverseengineering.stackexchange.com/questions/21453/how-to-configure-ida-to-load-pdb-files-from-microsoft-public-symbol-server\">While this question is similar to mine</a>, the answers do not include how to statically load a .pdb of choice during disassembly rather than automatically load it from the environment variables while debugging.</p>\n<p>How can I download a specific .PDB for a Windows binary?</p>\n</div>",
    "votes": "3",
    "answers": 3,
    "views": "2k",
    "tags": [
        "ida",
        "disassembly",
        "windows",
        "debugging",
        "symbols"
    ],
    "user": "Invalidation",
    "time": "Dec 21, 2020 at 5:09",
    "comments": [
        {
            "user": "ismael_akez",
            "text": "<span class=\"comment-copy\">I think, once you installed the Windows SDKs and use the WinDBG, all the PDBs or symbols that are needed will be downloaded automatically so you can choose the PDB locally.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>official way is as pointed out by other answers use symchk.exe from windbg installation</p>\n<p>but you can also fetch it by putting together few dbghelp and winsock functions</p>\n<p>find below a poc that uses wget.exe</p>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;windows.h&gt;\n#include &lt;dbghelp.h&gt;\n#pragma comment(lib,\"dbghelp.lib\")\n#pragma comment(lib,\"user32.lib\")\nconst char *formatstr =\n\"wget -c -U=\\\"Microsoft-Symbol-Server/10.0.0.0\\\" \"\n\"\\\"http://msdl.microsoft.com/download/symbols/\"\n\"%s/%08x%04x%04x%02x%02x%02x%02x%02x%02x%02x%02x%x/%s\\\"\";\nchar fetchpdb[0x1000];\nint main(int argc,char *argv[]) {\n    if(argc !=2){\n        printf(\"usage %s path to binary\\n\",argv[0]);\n        exit(0);\n    }\n    SYMSRV_INDEX_INFO syminf ={0};\n    syminf.sizeofstruct = sizeof(SYMSRV_INDEX_INFO);\n    BOOL ret = SymSrvGetFileIndexInfo(argv[1],&amp;syminf,0);\n    if(ret) {\n        wsprintfA(\n        fetchpdb,formatstr,syminf.pdbfile,syminf.guid.Data1,\n        syminf.guid.Data2, syminf.guid.Data3,syminf.guid.Data4[0],\n        syminf.guid.Data4[1],syminf.guid.Data4[2],syminf.guid.Data4[3],\n        syminf.guid.Data4[4],syminf.guid.Data4[5],syminf.guid.Data4[6],\n        syminf.guid.Data4[7],syminf.age,syminf.pdbfile\n        );\n        // Depricated use CreateProcess and/or Winsock functions needs wget.exe in path\n        WinExec(fetchpdb,1);\n    }\n    else {\n        printf(\"%x\\n\",GetLastError());\n    }\n    return 0;\n}\n</code></pre>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "Dec 21, 2020 at 22:15",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can use the <a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/using-symchk\" rel=\"nofollow noreferrer\"><code>symchk</code> tool </a>shipped with the Windows SDK to automate this process.</p>\n<p>IIRC it goes similar to this:</p>\n<pre><code>symchk /v /r c:\\myfiles /s srv*c;\\symbols*https://msdl.microsoft.com/download/symbols\n</code></pre>\n<p>This will go through the PE files in c:\\myfiles, fetch the PDBs from MS symbol server and cache them in c:\\symbols.</p>\n</div>",
            "votes": "0",
            "user": "Igor Skochinsky",
            "time": "Dec 21, 2020 at 7:36",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can download all symbols with:</p>\n<pre><code>\"C:\\Program Files (x86)\\Windows Kits\\10\\Debuggers\\x86\\symchk.exe\" /r c:\\windows /s SRV*c:\\symbols\\*http://msdl.microsoft.com/download/symbols\n</code></pre>\n<p><a href=\"https://www.bleepingcomputer.com/news/microsoft/microsoft-is-no-longer-providing-offline-msi-symbol-packages/\" rel=\"nofollow noreferrer\">https://www.bleepingcomputer.com/news/microsoft/microsoft-is-no-longer-providing-offline-msi-symbol-packages/</a></p>\n</div>",
            "votes": "0",
            "user": "Soleil",
            "time": "Dec 21, 2020 at 7:37",
            "is_accepted": false,
            "comments": []
        }
    ]
}