{
    "title": "Figuring out WhatsApp's receipt info storage format",
    "link": "https://reverseengineering.stackexchange.com/questions/30290/figuring-out-whatsapps-receipt-info-storage-format",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to figure out and document the structure of WhatsApp's database (iOS version). Most data is easily readable, but the table <code>ZWAMESSAGEINFO</code> has a <code>BLOB</code>-column <code>ZRECEIPTINFO</code>. I am guessing this would contain information about when a message has been received/read, but can't decode the binary format. Attatched are two examples. I would suspect the time to be saved in Mac absolute time, but can't find anything that looks like a date in the data.</p>\n<p><code>ZRECEIPTINFO</code> of a message that has been read on 11th April 2022, 12:17 CEST (GMT+2) and was delivered on 11th April 2022, 11:07 CEST (GMT+2):</p>\n<pre><code>121b0a088153000000360057200028952152040800100052040804100018bcdfcf92062002\n</code></pre>\n<p><code>ZRECEIPTINFO</code> of a message that has been read on 13th April 2022, 19:18 CEST (GMT+2) and was delivered 13th April 2022, 19:17 CEST (GMT+2):</p>\n<pre><code>12140a08814b4d00395805442000282252040800100018bd8bdc92062002\n</code></pre>\n<p>Any insight or idea would be appreciated.</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "365",
    "tags": [
        "file-format"
    ],
    "user": "GeF",
    "time": "Apr 22, 2022 at 13:01",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This feels more like a protobuf format - Use an <a href=\"https://protobuf-decoder.netlify.app/\" rel=\"nofollow noreferrer\">online decoder</a> to play around.</p>\n<pre><code>$ echo 121b0a088153000000360057200028952152040800100052040804100018bcdfcf92062002 | xxd -r -p | protoc --decode_raw\n2 {\n  1: \"\\201S\\000\\000\\0006\\000W\"\n  4: 0\n  5: 4245\n  10 {\n    1: 0\n    2: 0\n  }\n  10 {\n    1: 4\n    2: 0\n  }\n}\n3: 1649668028\n4: 2\n</code></pre>\n<p>Field 3 is 1649668028 which fits neatly with the times you mentioned. Here it is formatted in UTC</p>\n<pre><code>$ echo 121b0a088153000000360057200028952152040800100052040804100018bcdfcf92062002 | xxd -r -p | protoc --decode_raw | grep \"^3:\" | awk '{print strftime(\"%c\", $2, 1)}'\nMon Apr 11 09:07:08 2022\n$ echo 12140a08814b4d00395805442000282252040800100018bd8bdc92062002 | xxd -r -p | protoc --decode_raw | grep \"^3:\" | awk '{print strftime(\"%c\", $2, 1)}'\nWed Apr 13 17:17:49 2022\n</code></pre>\n<p>I need more details such as other columns - maybe phone number? to be sure.</p>\n</div>",
            "votes": "4",
            "user": "GeF",
            "time": "Apr 22, 2022 at 13:26",
            "is_accepted": true,
            "comments": [
                {
                    "user": "GeF",
                    "text": "<span class=\"comment-copy\">Thank you! I wasn‘t aware of protobuf. I tried this on a few other rows and it does seem to be the answer. I suspect field 3 to be the timestamp of when the message was sent and fields 4 and 5 of field 2 to be an offset from that time to when the message was received/read. Probably field 1 of field 2 is an ID of the recipient (useful for group messages with many recipients) though I haven‘t figured out the format yet. Not sure why it wants that to be a string though as it obviously has many non-ascii-characters.</span>",
                    "time": null
                },
                {
                    "user": "sudhackar",
                    "text": "<span class=\"comment-copy\">@GeF I don't have access to any dump or an iOS device. The more messages I get I'd be able to correlate and guess. Considering the messages are private, do you access to some public dataset?</span>",
                    "time": null
                },
                {
                    "user": "GeF",
                    "text": "<span class=\"comment-copy\">Sadly I don‘t have access to a public dataset, but I figured out how to read field 2-&gt;1: look at the hex representation of the field and read from the third character and you will get the phone number. Thanks for you help!</span>",
                    "time": null
                }
            ]
        }
    ]
}