{
    "title": "Conditional breakpoint on register containing string catch everything",
    "link": "https://reverseengineering.stackexchange.com/questions/26609/conditional-breakpoint-on-register-containing-string-catch-everything",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to setup a conditional breakpoint to catch a specific string (\"Sessions\") that will be on <code>ESI</code> register but it catches everything:</p>\n<p><a href=\"https://i.sstatic.net/K0VEC.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/K0VEC.png\"/></a></p>\n<p>I also tried with dereferenced register <code>[ESI] == \"Sessions\"</code> but it didn't work.<br/>\nWhat is the problem with my conditional breakpoint?</p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "754",
    "tags": [
        "x64dbg",
        "breakpoint",
        "register"
    ],
    "user": "E235",
    "time": "Dec 22, 2020 at 14:03",
    "comments": [
        {
            "user": "bart1e",
            "text": "<span class=\"comment-copy\">As far as I know, at least some time ago, x64dbg didn't handle string comparison. <a href=\"https://github.com/x64dbg/x64dbg/issues/2067\" rel=\"nofollow noreferrer\">here</a> and <a href=\"https://github.com/x64dbg/x64dbg/issues/1485\" rel=\"nofollow noreferrer\">here</a> are github issues discussing your problem. Possibly you can bypass it by installing some plugins, but this solution is far from perfect.</span>",
            "time": null
        },
        {
            "user": "mrexodia",
            "text": "<span class=\"comment-copy\">This is still a feature that’s not implemented. Someone started working on it by extending expression functions, but it’s still WIP.</span>",
            "time": null
        },
        {
            "user": "tom",
            "text": "<span class=\"comment-copy\">strstr(utf16(esi),\"Sessions\") ?</span>",
            "time": null
        }
    ],
    "answers_data": []
}