{
    "title": "Strange GDB behavior in OSX",
    "link": "https://reverseengineering.stackexchange.com/questions/1958/strange-gdb-behavior-in-osx",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm reversing some malware on an OSX VM when I noticed something peculiar. While stepping through the instructions, the instruction just after a <code>int 0x80</code> gets skipped <em>i.e.</em> gets executed without me stepping through this.</p>\n<p><strong>Example:</strong></p>\n<pre><code> int 0x80\n inc eax ; &lt;--- this gets skipped\n inc ecx ; &lt;--- stepping resumes here\n</code></pre>\n<p>Why does this happen? Have you encountered something similar to this?</p>\n</div>",
    "votes": "6",
    "answers": 1,
    "views": "253",
    "tags": [
        "malware",
        "gdb",
        "osx",
        "x86",
        "mach-o"
    ],
    "user": null,
    "time": "Apr 29, 2013 at 17:14",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>When single-stepping through code, the <code>T</code> flag is set so that the CPU can break after the instruction completes execution.  When an interrupt occurs, the state of the <code>T</code> flag is placed on the stack, and used when the <code>iret</code> instruction is executed by the handler.  However, the <code>iret</code> instruction is one of a few instructions that causes a one-instruction delay in the triggering of the <code>T</code> flag, due to legacy issues relating to the initialization of the stack.</p>\n<p>So the skipped instruction is executing but you can't step into it (but if you set a breakpoint at that location and run to that point instead, then you will get a break).</p>\n</div>",
            "votes": "12",
            "user": "perror",
            "time": "Apr 29, 2013 at 17:25",
            "is_accepted": true,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">+1. Didn't sound like the OP was interested in those low-level details, but now I understand why you were arguing that my answer didn't contain the information asked for. But it turns out I misread the question. Thanks for pointing it out.</span>",
                    "time": null
                },
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">Do we observe the same behavior in other OSes ? *BSD, Linux, OpenSolaris, ... ?</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@perror: should for all practical purposes whenever an interrupt handler is used and therefore <code>iret</code> is used.</span>",
                    "time": null
                }
            ]
        }
    ]
}