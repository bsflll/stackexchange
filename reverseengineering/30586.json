{
    "title": "Capstone not disassembling vpunpcklqdq, vprold, and vshufi32x4",
    "link": "https://reverseengineering.stackexchange.com/questions/30586/capstone-not-disassembling-vpunpcklqdq-vprold-and-vshufi32x4",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to disassemble a binary using Capstone. I noticed that there are some instructions that cannot be disassembled, e.g. the <code>vshufi32x4</code> instruction:</p>\n<pre><code>from capstone import *\nfrom capstone.x86 import *\n\nmd = Cs(CS_ARCH_X86, CS_MODE_64)\nmd.detail = True\n\n#instruction_bytes = b'b\\x11\\r(\\xfe\\xf6'\n# The above instruction_bytes work as expected, the below print shows\n# 0x6: vpaddd ymm14 , ymm14, ymm30               62110d28fef6\n\ninstruction_bytes = b'b\\xf3}(C\\xe4\\x03'\n# Capstone has problem with the above instruction_bytes.\n# IDA Pro shows the instruction vshufi32x4 ymm4, ymm0, ymm4, 3\n\nprint(instruction_bytes.hex())  # '62f37d2843e403'\nfor c_i in md.disasm(instruction_bytes, len(instruction_bytes)):\n    print(hex(c_i.address) + \":\", c_i.mnemonic, c_i.op_str, \"\\t\\t\\t\\t\", c_i.bytes.hex())\n</code></pre>\n<p>Other examples which cannot be disassembled by Capstone are <code>vpunpcklqdq</code> and <code>vprold</code></p>\n<p>What is so special about these instructions? How can I make Capstone disassemble them?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "100",
    "tags": [
        "ida",
        "disassembly",
        "disassemblers",
        "x86-64",
        "capstone"
    ],
    "user": "langlauf.io",
    "time": "Jul 2, 2022 at 18:43",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Reading through the issues in the Capstone repo, there seems to have been some problems/regressions with decoding AVX-512 instructions for the last couple of years:</p>\n<p><a href=\"https://github.com/capstone-engine/capstone/issues?q=is%3Aissue+avx\" rel=\"nofollow noreferrer\">https://github.com/capstone-engine/capstone/issues?q=is%3Aissue+avx</a></p>\n<p>You could try building capstone from <code>next</code> and see if that works:</p>\n<p><a href=\"https://github.com/capstone-engine/capstone/tree/next\" rel=\"nofollow noreferrer\">https://github.com/capstone-engine/capstone/tree/next</a></p>\n</div>",
            "votes": "1",
            "user": "Mega Tonnage",
            "time": "Jul 3, 2022 at 6:59",
            "is_accepted": true,
            "comments": [
                {
                    "user": "langlauf.io",
                    "text": "<span class=\"comment-copy\">Using the <code>next</code> branch solved the problem.</span>",
                    "time": null
                }
            ]
        }
    ]
}