{
    "title": "Ghidra function pointers to another file in project",
    "link": "https://reverseengineering.stackexchange.com/questions/22044/ghidra-function-pointers-to-another-file-in-project",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Given a function pointer which is obtained dynamically using dlsym, how can I tell Ghidra that that pointer points to a function in another .so that I have open in same project for which I have already done some parameter renaming etc. </p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ghidra"
    ],
    "user": "Konrads",
    "time": "Sep 5, 2019 at 8:16",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If you follow the function pointer to where the actual function's address is in your first binary, you should see something similar to this.</p>\n<pre><code>00870808 09 00 00 80     addr      &lt;EXTERNAL&gt;::Function_Something\n</code></pre>\n<p>Right click the operand (the <code>&lt;EXTERNAL&gt;...</code> part) and select '<em>Edit External Location</em>'. A new dialog window will pop up. </p>\n<p>In this window, click the '<em>Edit</em>' button next to the '<em>Path</em>' field and select your <code>.so</code> file.</p>\n</div>",
            "votes": "3",
            "user": "perror",
            "time": "Jan 21, 2020 at 8:48",
            "is_accepted": false,
            "comments": []
        }
    ]
}