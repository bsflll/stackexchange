{
    "title": "IDA Pro Reverse offset in struct",
    "link": "https://reverseengineering.stackexchange.com/questions/27900/ida-pro-reverse-offset-in-struct",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm reversing a Delphi program and have a part where it says:</p>\n<pre><code>Result = *(Self - 44);\n</code></pre>\n<p>But I want it to say something like:</p>\n<pre><code>Result = *(Self - offsetof(VMT_ClassDefinition, vmtClassName));\n</code></pre>\n<p>Being VMT_ClassDefinition the following struct:</p>\n<pre><code>struct VMT_ClassDefinition {\n    Cardinal vmtSelfPtr;\n    Cardinal vmtIntfTable;\n    Cardinal vmtAutoTable;\n    Cardinal vmtInitTable;\n    Cardinal vmtTypeInfo;\n    Cardinal vmtFieldTable;\n    Cardinal vmtMethodTable;\n    Cardinal vmtDynamicTable;\n    Cardinal vmtClassName;\n    Cardinal vmtInstanceSize;\n    Cardinal vmtParent;\n    Cardinal vmtSafeCallException;\n    Cardinal vmtAfterConstruction;\n    Cardinal vmtBeforeDestruction;\n    Cardinal vmtDispatch;\n    Cardinal vmtDefaultHandler;\n    Cardinal vmtNewInstance;\n    Cardinal vmtFreeInstance;\n    Cardinal vmtDestroy;\n};\n</code></pre>\n<p>Where cardinal is unsigned int. The problem is that after using \"Right Click &gt; Struct offset\" on top of the number 44 it generates the following result:</p>\n<pre><code>Result = *(Self - offsetof(VMT_ClassDefinition, vmtSafeCallException));\n</code></pre>\n<p>I was doing what is said in <a href=\"https://hex-rays.com/blog/new-features-in-hex-rays-decompiler-1-6/\" rel=\"nofollow noreferrer\">New features in Hex-Rays Decompiler 1.6</a> section 3, but as you can see the expected result and what I got is totally different.</p>\n<p>My guess is that it forgets about the \"-\" sign and just advances from the start +44. Is there a way to reverse this behavior? I know it can be done in ASM view by inverting with \"_\" and then pressing \"T\" like in <a href=\"https://hex-rays.com/blog/negated-structure-offsets/\" rel=\"nofollow noreferrer\">Negated structure offsets</a>, but that does not apply to the Pseudocode view.</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "541",
    "tags": [
        "ida",
        "offset",
        "delphi"
    ],
    "user": "Ricardo",
    "time": "Jun 26, 2021 at 19:42",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><a href=\"https://hex-rays.com/products/ida/support/idadoc/1695.shtml\" rel=\"nofollow noreferrer\">Shifted pointer</a> should work, I think.</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Jun 28, 2021 at 12:52",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Since there seems to be no other way I ended up converting the Self variable into a pointer to the struct and IDA generated the following code:</p>\n<pre><code>Self[-1].vmtClassName\n</code></pre>\n<p>At least it is readable now.</p>\n</div>",
            "votes": "1",
            "user": "Ricardo",
            "time": "Jun 27, 2021 at 13:49",
            "is_accepted": false,
            "comments": []
        }
    ]
}