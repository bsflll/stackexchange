{
    "title": "How to retrieve name of a variable defined in the data segment in IDA when no process is attached?",
    "link": "https://reverseengineering.stackexchange.com/questions/25268/how-to-retrieve-name-of-a-variable-defined-in-the-data-segment-in-ida-when-no-pr",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have disassembled an old DOS application with IDA. It run in 16-bit real mode. Some instructions are referencing variables defined in the data segment (DS). </p>\n<pre><code>push    word ptr ds:8401h\n</code></pre>\n<p>Since I have imported debug symbols, I can display variable name by simply putting mouse over the <code>ds:xxxxh</code> part.</p>\n<p>The problem is this only works when IDA is running in debug mode (eg: a DOSBox process is attached to it). Otherwise nothing is shown.</p>\n<p>One possible explanation is that the data segment register (DS) is only set when application is running so IDA as no clue what value it is. In fact, the very first instructions of the program are dedicated to initializing the data segment : </p>\n<pre><code>; entry point\nmov   dx, seg dseg \n...                     \n...                      ; a few instruction later\nmov   ds, dx\n</code></pre>\n<p>I think this is how IDA is able to guess where the data segment is (which is reported as <em>dseg</em> in the <em>Segments</em> view). </p>\n<p>In that application, DS is set once for good and never changed over the time. Is there a way to tell IDA it should assume DS is equal to a given value in the whole disassembly ? (so hovering those variables will give proper name even when no process is attached).</p>\n</div>",
    "votes": "0",
    "answers": 2,
    "views": "456",
    "tags": [
        "ida",
        "debugging",
        "symbols",
        "dos",
        "segmentation"
    ],
    "user": "tigrou",
    "time": "Jun 10, 2020 at 22:36",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You need to set <code>ds</code> to the actual segment value used by the program. Usually it's one of the segments near the end. I suggest you to check which of the segments has something fitting at 8401h, or try to see how ds is set up in the calling function (you may need to go several levels up). You can also try to map the value you see in DOSBox debugger back to one of the segments in IDA (e.g. check what is at ds:0 and find it in database).</p>\n<p>In the <kbd>Alt-G</kbd> dialog, you can enter the selector (paragraph) value of the segment (database, not runtime) or simply the segment name.</p>\n<p>If all accesses in the current code segment use the same data segment, you can set it as the default in Edit-Segments-Set Default Segment Register Value...</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Jun 11, 2020 at 20:29",
            "is_accepted": true,
            "comments": [
                {
                    "user": "tigrou",
                    "text": "<span class=\"comment-copy\">The last part is exactly what I wanted. Thanks</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can press <code>Ctrl+G</code> and check the different settings of the segment registers.</p>\n<p>You can press <code>Alt+G</code> to edit the segment registers.</p>\n</div>",
            "votes": "1",
            "user": "macro_controller",
            "time": "Jun 11, 2020 at 7:54",
            "is_accepted": false,
            "comments": [
                {
                    "user": "tigrou",
                    "text": "<span class=\"comment-copy\"><code>Ctrl+G</code> is indeed very useful. Thanks for the tip.  If I press <code>Alt+G</code>, select ds and enter some value (eg: 294C) nothing happen. All I have is \"assume ds:nothing\" added where the cursor is.</span>",
                    "time": null
                }
            ]
        }
    ]
}