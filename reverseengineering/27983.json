{
    "title": "Display open handles in IDA pro, just like xdbg?",
    "link": "https://reverseengineering.stackexchange.com/questions/27983/display-open-handles-in-ida-pro-just-like-xdbg",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to know for example that if a ReadFile is happening and the handle number is 100, which file or whatever this handle belongs to?\nlets assume for whatever reason i cannot trace CreateFiles to note handles myself.</p>\n<p>Obviously i want this during debugging, so is there any handle table, just like the one that exist in xdbg?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "342",
    "tags": [
        "ida",
        "idapro-sdk",
        "ida-plugin"
    ],
    "user": "Notoriouss",
    "time": "Jul 12, 2021 at 13:30",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>A handle is an abstract object.</p>\n<p>I am assuming that you are using IDA for static analysis, and that you are not using any embedded debugger through IDA. Correct me if it's not the case.</p>\n<p>From a static analysis point of view, you can't trace back the object where is comes from only with its value (100 in your exemple). The handle value is going to be different each time it is being used, so it is not relevant for a static analysis with IDA.</p>\n<p>Since you are specifically asking for IDA, take a look at what is happening before your ReadFile() call.</p>\n<p>As ReadFile() take a handle as an input, you should find a place in the code where this handle is being open. Something like a call to CreateFile (for instance). This is where you'll find the filename mapped with this handle value.</p>\n<p>You can always try to search for cross-reference (shortcut 'X' in IDA) to the local variable that is holding your handle to retrieve the place where the handle is being open.\nIf the handle is not saved to a local variable, just trace back the register that is holding your handle.\nOr simple search for imports that are coherent with what you are looking</p>\n<p>Take a look at this small example:</p>\n<pre><code>HANDLE hFile = CreateFile(    \"C:\\\\filename.txt\",                // &lt;- what you are looking for\n                              GENERIC_READ,           \n                              FILE_SHARE_READ,        \n                              NULL,                   \n                              OPEN_EXISTING,          \n                              FILE_FLAG_OVERLAPPED,   \n                              NULL);   \n[...]               \nint result = ReadFile(        hFile,                            // &lt;- what you are looking at\n                              ReadBuffer, \n                              BUFFERSIZE-1, \n                              &amp;ol, \n                              FileIOCompletionRoutine);\n</code></pre>\n<p>You need to go back a bit in the code's flow to search where this handle was opened first.</p>\n<p>If you want to go the lazy way, you can either use a debugger, they all supports handle tracing. As you exclude x64dbg in your question, try with another one. If a tool is not working, pick another one and see.</p>\n<p>If it's still not working (anti-debug/static analysis too painful), I would rather try to investigate the 'whatever reason' that prevent you from tracing CreateFiles() calls.</p>\n</div>",
            "votes": "1",
            "user": "Guillaume",
            "time": "Jul 12, 2021 at 13:28",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Notoriouss",
                    "text": "<span class=\"comment-copy\">Well I'm asking about during debugging, i thought it was obvious since i was comparing to xdbg. Is there any handle table tab in IDA pro, just like xdbg?</span>",
                    "time": null
                },
                {
                    "user": "Guillaume",
                    "text": "<span class=\"comment-copy\">My bad; I'm not a big fan of IDA for anything other than static analysis. So I can't really answer that. But why using IDA, and not something that is meant to be used as a debugger (Olly, x64dbg, WinDbg) ? Anyway, an ugly option would be to break somewhere where your handle is opened, and use ProcessHacker or something else (like the 'Handle' tools from the sysinternals utils) that is able to inspect opened handles for a given process.</span>",
                    "time": null
                }
            ]
        }
    ]
}