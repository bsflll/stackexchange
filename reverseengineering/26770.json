{
    "title": "Exporting C++ types from database to another",
    "link": "https://reverseengineering.stackexchange.com/questions/26770/exporting-c-types-from-database-to-another",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a pe dll binary with it's pdb file. I'd want to use this file's types in another database.</p>\n<p>I tried to export the types using \"Create C header file\" and \"Dump typeinfo to IDC file\", but neither worked properly. Trying to import the generated C header file to the second database fails due to templates. The exported IDC file doesn't include all of the types present in the first database.</p>\n<p>Seems like IDA doesn't support importing types that use C++ features, like templates. I was wondering if there's any way to work around this. I wouldn't want to start manually renaming and importing the types since there's thousands of them.</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "734",
    "tags": [
        "ida"
    ],
    "user": "vtnmk",
    "time": "Jan 14, 2021 at 9:39",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<h2>Warning: hack!</h2>\n<ol>\n<li>with the first IDB open, copy the <code>idbname.til</code> to another place</li>\n<li>run <code>tilib -#- idbname.til</code></li>\n<li>copy it to IDA's <code>til/pc</code> (or matching processor) directory.</li>\n<li>in the second IDB, add the type library from the Type Libraries list.</li>\n<li>types are now available even though they're not shown in Local Types. You can, for example, \"Add standard structure\", or use them in the decompiler.</li>\n</ol>\n<p>This is not officially supported so you may run into all kinds of issues (e.g conflicts between type libraries).</p>\n</div>",
            "votes": "3",
            "user": "Igor Skochinsky",
            "time": "Jan 14, 2021 at 22:46",
            "is_accepted": true,
            "comments": []
        }
    ]
}