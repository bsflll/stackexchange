{
    "title": "How does Borland C++ 5 exception handling work?",
    "link": "https://reverseengineering.stackexchange.com/questions/29080/how-does-borland-c-5-exception-handling-work",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>So, I'm still working on reverse-engineering an 1996 game. I have cleared a lot of roadblocks, but one thing that continues to annoy me is exception handling and RTTI metadata.</p>\n<p>There is a function <code>extern void _ExceptInit(void *);</code> that is declared from <code>BC5/SOURCE/RTL/SOURCE/THREADS/WIN32/THREAD.C</code>, but its implementation is nowhere to be found - all in the <em>entire</em> BC5 source that contains ExceptInit are a bunch of pre-compiled .OBJ files (<code>NOXX.OBJ</code> / <code>XXV.OBJ</code>) that have no corresponding source attached. They are dis-assemblable in Ghidra and contain labels, I grant Borland that, but there are obviously no comments on how exactly that entire mechanism works.</p>\n<p>Same goes for RTTI metadata that lives inside compiled binaries. The \"Borland Open Architecture Handbook\" aka <code>bc4boa.zip</code> doesn't contain information about either, too (probably because it's too old?), and the Borland books also don't go into detail on implementation.</p>\n<p>Any idea where I could go on to search?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "232",
    "tags": [
        "c++",
        "exception"
    ],
    "user": "Skynet",
    "time": "Aug 1, 2021 at 18:21",
    "comments": [
        {
            "user": "Rolf Rolles",
            "text": "<span class=\"comment-copy\">You've got the <code>.OBJ</code> files? Dig in! What are you waiting for?</span>",
            "time": null
        },
        {
            "user": "Skynet",
            "text": "<span class=\"comment-copy\">The ASM files for the startup code contained a boatload of comments on how exactly the stuff works and what it does, I had hoped for a similar load of information on exceptions and RTTI since that ain't documented anywhere</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Try to find Borland C++ Builder runtime sources, IIRC it included EH and RTTI details, albeit updated for Win32. Long time ago I made <a href=\"https://www.openrce.org/downloads/details/86/Typeinfo_IDC_scripts_collection\" rel=\"nofollow noreferrer\">scripts</a> for parsing and labeling those structures (see <code>bcc.idc</code>); they probably wonâ€™t work as is for DOS code but could be useful for reference.</p>\n<p><strong>EDIT</strong>: see <code>struct tpid</code> (RTTI) and <code>struct ERRbc</code> (EH) in <a href=\"https://github.com/earthsiege2/borland-cpp-ide/blob/master/SOURCE/RTL/RTLINC/XX.H\" rel=\"nofollow noreferrer\">XX.H</a></p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Jan 7, 2022 at 19:26",
            "is_accepted": false,
            "comments": []
        }
    ]
}