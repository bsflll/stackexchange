{
    "title": "how Can I use a linux so file from a program other than the program it was developed for?",
    "link": "https://reverseengineering.stackexchange.com/questions/13816/how-can-i-use-a-linux-so-file-from-a-program-other-than-the-program-it-was-devel",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I wish to use the codecs that come with realplayer but without needing realplayer. The codecs I want to use are all in <code>.so</code> format, but I don't know how to separate the codecs from the rest of realplayer and use the <code>.so</code> files directly.</p>\n<p>Is there a way to do this so that I can just plug the codecs into a new mediaplayer, without having to decompile and recompile the binaries?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "143",
    "tags": [
        "binary-analysis",
        "elf",
        "binary",
        "shared-object",
        "got"
    ],
    "user": "user17881",
    "time": "Apr 26, 2017 at 15:29",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>an <code>so</code> file is self contained, to use it, you simply need to load it and use functions it implements. However, in order to use those functions a header file describing the functions and their input parameters is required. </p>\n<p>Getting the available functions from within an <code>so</code> file is easy, you just need to parse the <a href=\"http://bottomupcs.sourceforge.net/csbu/x3824.htm\" rel=\"nofollow\">GOT</a>. Understanding the input (and output) parameters is a bit more difficult, you'll need to disassemble the functions you're interested in and understand the parameters from the code.</p>\n<p>That is of course, if you don't have access to that library's SDK, which usually contain header files for all shared objects.</p>\n</div>",
            "votes": "1",
            "user": "NirIzr",
            "time": "Oct 26, 2016 at 17:14",
            "is_accepted": true,
            "comments": []
        }
    ]
}