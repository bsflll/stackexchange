{
    "title": "reversing enrichment routine",
    "link": "https://reverseengineering.stackexchange.com/questions/24976/reversing-enrichment-routine",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to know where a specific <code>std::string</code> comes from, find the enrichment routine in the <code>C++</code> application I'm reversing.</p>\n<p>The variable I'm looking for it at @ <code>[X21,#8]</code>, I don't fully understand the following code, is that @ <code>*(*off_1B2000) + 8)</code> ?  ( off_1B2000.readPointer().add(8).readPointer() ? )</p>\n<p>Do I need to look for who sets the global pointer <code>off_1B2000</code> ?</p>\n<p>Is that an inline constructor ? </p>\n<p>Let's assume I break in the start routine, I want to know where to set write <strong>watchpoint</strong> to figure out who writes to <code>*(x21+8)</code>\ndo I set @ <code>*(*off_1B2000) + 8)</code> ?</p>\n<pre><code>loc_9F0000\nADRP            X0, #off_1B2000@PAGE\nADD             X21, SP, #0x260+v1\nADD             X24, SP, #0x260+v1\nMOV             X8, X24\nLDR             X0, [X0,#off_1B2000@PAGEOFF]\nSTR             XZR, [X21,#0x50]\nADD             X0, X0, #0x18\nSTR             X0, [X21]\nSTR             X0, [X21,#8] // &lt;&lt;  *(x21+8)=x0 This is who I'm looking for\nSTR             X0, [X21,#0x10]\nSTR             X0, [X21,#0x18]\nSTR             X0, [X21,#0x20]\nSTR             X0, [X21,#0x28]\nSTR             X0, [X21,#0x30]\nSTR             X0, [X21,#0x38]\nSTR             X0, [X21,#0x40]\nMOV             W0, #0xFFFFFFFF\nSTR             W0, [X21,#0x48]\nMOV             W0, #1\nSTR             W0, [X21,#0x4C]\nMOV             X0, X19\nSTR             WZR, [X21,#0x58]\nSTR             WZR, [X21,#0x5C]\nSTRB            WZR, [X21,#0x60]\nBL              sub_9F7000\n</code></pre>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "66",
    "tags": [
        "arm64",
        "aarch64"
    ],
    "user": "James W.",
    "time": "May 13, 2020 at 14:09",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">What exactly is \"enrichment routine\"? I'm not familiar with the term.</span>",
            "time": null
        },
        {
            "user": "James W.",
            "text": "<span class=\"comment-copy\">Terminology; for example, <code>person_id</code> to <code>Person</code> object -&gt; enrichment. Some routine takes an <code>id</code> and I want to figure out where the enrichment takes place, find the query to the DB (not the case, or might be.. statically compiled)</span>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">so it's just a weird term for \"lookup\"?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This <code>STR</code> operation adds 8 bytes to the offset at X21, then stores the value of X0 there.</p>\n<p>You are working with QWORD sized variables (8), so in C code it is something like:</p>\n<p><code>(uint64_t *)(offset_at_X21 + 1) = X0</code></p>\n<p>Edit:</p>\n<p>The first instruction sets <code>X0=address of off_1B2000</code> (const 0x1B2000). Later it is dereferenced <code>[X0,#offset...]</code>. This is *(0x1B2000+0x1B2000), which is odd. Could it be <code>LDR X0,[X0]</code>? IDA may give it the name \"#off_1B2000\" because it is clear that this is the value.</p>\n<p>X21 pointes to the variable \"v1\" on the stack, (set by <code>ADD X21,SP,#0x260+v1</code>).</p>\n<p>The result of the code is something like this:</p>\n<p><code>[v1+8] = *(off_1B2000)</code></p>\n</div>",
            "votes": "1",
            "user": "Yotamz",
            "time": "May 11, 2020 at 9:55",
            "is_accepted": false,
            "comments": [
                {
                    "user": "James W.",
                    "text": "<span class=\"comment-copy\">That I understood, please explain the relation to <code>off_1B2000</code></span>",
                    "time": null
                },
                {
                    "user": "Yotamz",
                    "text": "<span class=\"comment-copy\">Edited my answer</span>",
                    "time": null
                },
                {
                    "user": "James W.",
                    "text": "<span class=\"comment-copy\">Thanks but where do I set the watchpoint ?</span>",
                    "time": null
                },
                {
                    "user": "Yotamz",
                    "text": "<span class=\"comment-copy\">The watchpoint is on write to <code>off_1B2000</code>. And yes it looks like a constructor of a class instance, pointed to by <code>v1</code> on the stack. The v1+8 is the second QWORD of the class.</span>",
                    "time": null
                }
            ]
        }
    ]
}