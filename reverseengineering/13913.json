{
    "title": "Tools for RE OpenCL Kernel",
    "link": "https://reverseengineering.stackexchange.com/questions/13913/tools-for-re-opencl-kernel",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have an OpenCL 2.0 program with various <code>.bin</code> files that I would like to reverse.  <code>file</code> shows:</p>\n<pre><code>$&gt; file k.bin\nk.bin: ELF 64-bit LSB executable, *unknown arch 0x40c* version 1 (SYSV),\ncorrupted program header size, not stripped. \n</code></pre>\n<p>I believe these files to be OpenCL kernel files. Opening the file in <code>vim</code> shows many OpenCL references. At the end of the binary blob there are plaintext attributes like this:</p>\n<pre><code>uniqueid:1038\n;memory:uavprivate:0\n;memory:datareqd\n</code></pre>\n<p>What is the best current approach to disassemble these binaries?</p>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "839",
    "tags": [
        "disassembly",
        "tools",
        "amd64",
        "graphics"
    ],
    "user": "Sephiroph",
    "time": "Aug 3, 2017 at 7:23",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You may use <code>cuobjdump</code>, <code>nvdisasm</code>, or <code>nvprune</code>, three CUDA binary tools.\nYou can find a full explanation of how to use it on this <a href=\"http://docs.nvidia.com/cuda/cuda-binary-utilities/index.html\" rel=\"nofollow noreferrer\">page</a>.</p>\n<p>See also this <a href=\"https://stackoverflow.com/questions/6689224/disassemble-an-opencl-kernel\">question in SO (Disassemble an OpenCL kernel?)</a>.</p>\n</div>",
            "votes": "4",
            "user": "perror",
            "time": "Aug 5, 2017 at 7:54",
            "is_accepted": false,
            "comments": []
        }
    ]
}