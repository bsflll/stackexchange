{
    "title": "How to get thread start address in Windows?",
    "link": "https://reverseengineering.stackexchange.com/questions/27758/how-to-get-thread-start-address-in-windows",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm writing thread finder in module. My goal is find all threads in process and find threads currently working address locations. Like image on below. I do this goal with NtQueryInformationThread API.</p>\n<p><a href=\"https://i.sstatic.net/VnwtP.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/VnwtP.png\"/></a></p>\n<p>I'm search all web, and I find little bit code pieces. I compile and run my program, but thread start address is always being 0x00000 or 0xccccc. Where I do mistake? My Thread Start Address Finder function is here:</p>\n<pre><code>#define ThreadQuerySetWin32StartAddress 9\n\ntypedef NTSTATUS(WINAPI* NTQUERYINFOMATIONTHREAD)(HANDLE, LONG, PVOID, ULONG, PULONG);\nDWORD WINAPI GetThreadStartAddress(__in HANDLE hThread)\n{\n    NTSTATUS ntStatus;\n    DWORD dwThreadStartAddr = 0;\n    NTQUERYINFOMATIONTHREAD NtQueryInformationThread;\n\n    if ((NtQueryInformationThread = (NTQUERYINFOMATIONTHREAD)GetProcAddress(GetModuleHandleA(\"ntdll.dll\"), \"NtQueryInformationThread\"))) {\n        ntStatus = NtQueryInformationThread(hThread, ThreadQuerySetWin32StartAddress, &amp;dwThreadStartAddr, sizeof(DWORD), NULL);\n    }\n\n    return dwThreadStartAddr;\n}\n</code></pre>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "windows",
        "thread",
        "processhacker"
    ],
    "user": "Crazy Programmer",
    "time": "May 31, 2021 at 10:37",
    "comments": [
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">Iirc this api is documented include winternl.h  second iirc for this threadinfoclass you need sizeof(pvoid) not sizeof(dword). And check returned bytes , ntstatus etc compile with w4 and /analyze.  Also check dbgeng.h the dbgeng has methods to retrieve this</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Like I Commented this function is documented in winternl.h and you can use ntdll.lib to link with\nalso start address being a pointer will need 8 bytes in x64</p>\n<pre><code>#include &lt;windows.h&gt;\n#include &lt;winternl.h&gt;\n#include &lt;stdio.h&gt;\n\nint main(void)\n{\n    ULONG64 Tinfo = 0;\n    ULONG retlen = 0;\n    NTSTATUS ntqitret = NtQueryInformationThread(GetCurrentThread(), (THREADINFOCLASS)9,\n    &amp;Tinfo, sizeof(PVOID), &amp;retlen);\n    printf(\"START  = %I64x\\nret    = %x\\nretlen = %x\\n\",Tinfo, ntqitret, retlen );\n}\n</code></pre>\n<p>compiling ,executing , comparing</p>\n<pre><code>:&gt;cl /Zi /W4 /analyze /Od /EHsc /nologo ntqit.cpp /link /release ntdll.lib\nntqit.cpp\n\n:&gt;ntqit.exe\nSTART  = 7ff73b0d1434\nret    = 0\nretlen = 8\n\n:&gt;cdb -c \"x ntqit!*maincrt*;q\" ntqit.exe | awk \"/Reading/,/quit:/\"\n0:000&gt; cdb: Reading initial command 'x ntqit!*maincrt*;q'\n00007ff7`3b0d1434 ntqit!mainCRTStartup (void)\nquit:\n</code></pre>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "May 31, 2021 at 19:43",
            "is_accepted": false,
            "comments": []
        }
    ]
}