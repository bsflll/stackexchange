{
    "title": "Translate ASM code x86 32 bits in C",
    "link": "https://reverseengineering.stackexchange.com/questions/29388/translate-asm-code-x86-32-bits-in-c",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a exercise which i can't resolve it, and i need help. If anyone can help me it would be great. I have the next ASM code in x86 32 bits which i need to translate in <strong>C language</strong>:</p>\n<pre><code>Dump of assembler code for function main:\n0x0000054d &lt;+0&gt;: lea ecx,[esp+0x4]\n0x00000551 &lt;+4&gt;: and esp,0xfffffff0\n0x00000554 &lt;+7&gt;: push DWORD PTR [ecx-0x4]\n0x00000557 &lt;+10&gt;: push ebp\n0x00000558 &lt;+11&gt;: mov ebp,esp\n0x0000055a &lt;+13&gt;: push ebx\n0x0000055b &lt;+14&gt;: push ecx\n0x0000055c &lt;+15&gt;: sub esp,0x10\n0x0000055f &lt;+18&gt;: call 0x450 &lt;__x86.get_pc_thunk.bx&gt;\n0x00000564 &lt;+23&gt;: add ebx,0x1a9c\n0x0000056a &lt;+29&gt;: mov DWORD PTR [ebp-0x10],0x0\n0x00000571 &lt;+36&gt;: lea eax,[ebx-0x19a0] ; “3jd9cjfk98hnd”\n0x00000577 &lt;+42&gt;: mov DWORD PTR [ebp-0x14],eax\n0x0000057a &lt;+45&gt;: sub esp,0xc\n0x0000057d &lt;+48&gt;: push DWORD PTR [ebp-0x14]\n0x00000580 &lt;+51&gt;: call 0x3e0 &lt;strlen@plt&gt;\n0x00000585 &lt;+56&gt;: add esp,0x10\n0x00000588 &lt;+59&gt;: mov DWORD PTR [ebp-0x18],eax\n0x0000058b &lt;+62&gt;: mov DWORD PTR [ebp-0xc],0x0\n0x00000592 &lt;+69&gt;: jmp 0x5ad &lt;main+96&gt;\n0x00000594 &lt;+71&gt;: mov edx,DWORD PTR [ebp-0xc]\n0x00000597 &lt;+74&gt;: mov eax,DWORD PTR [ebp-0x14]\n0x0000059a &lt;+77&gt;: add eax,edx\n0x0000059c &lt;+79&gt;: movzx eax,BYTE PTR [eax]\n0x0000059f &lt;+82&gt;: movsx eax,al\n0x000005a2 &lt;+85&gt;: imul eax,DWORD PTR [ebp-0x18]\n0x000005a6 &lt;+89&gt;: add DWORD PTR [ebp-0x10],eax\n0x000005a9 &lt;+92&gt;: add DWORD PTR [ebp-0xc],0x1\n0x000005ad &lt;+96&gt;: mov eax,DWORD PTR [ebp-0xc]\n0x000005b0 &lt;+99&gt;: cmp eax,DWORD PTR [ebp-0x18]\n0x000005b3 &lt;+102&gt;: jl 0x594 &lt;main+71&gt;\n0x000005b5 &lt;+104&gt;: sub esp,0x8\n0x000005b8 &lt;+107&gt;: push DWORD PTR [ebp-0x10]\n0x000005bb &lt;+110&gt;: lea eax,[ebx-0x1992] ; “[+] Code generated: %i\\n”\n0x000005c1 &lt;+116&gt;: push eax\n0x000005c2 &lt;+117&gt;: call 0x3d0 &lt;printf@plt&gt;\n0x000005c7 &lt;+122&gt;: add esp,0x10\n0x000005ca &lt;+125&gt;: mov eax,0x0\n0x000005cf &lt;+130&gt;: lea esp,[ebp-0x8]\n0x000005d2 &lt;+133&gt;: pop ecx\n0x000005d3 &lt;+134&gt;: pop ebx\n0x000005d4 &lt;+135&gt;: pop ebp\n0x000005d5 &lt;+136&gt;: lea esp,[ecx-0x4]\n0x000005d8 &lt;+139&gt;: ret\nEnd of assembler dump.\n</code></pre>\n<ol>\n<li>I need to divide this in basic blocks.</li>\n<li>Make flow chat.</li>\n<li>Convert this code in C.</li>\n</ol>\n<p>I know this code is using a loop, cause the line +102 takes again to main+71. Also, i have a bit of idea of this code, but, nothing clear. That's why i'm asking you.</p>\n<p>I appreciate a lot your time helping me guys.</p>\n<p>Thank you so much!</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "654",
    "tags": [
        "disassembly",
        "assembly",
        "x86",
        "c"
    ],
    "user": "FAN",
    "time": "Oct 10, 2021 at 13:14",
    "comments": [
        {
            "user": "Edward",
            "text": "<span class=\"comment-copy\">Show what work you've done so far.  Have you made a flow chart?</span>",
            "time": null
        },
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">:\\&gt;python -c \"inp='3jd9cjfk98hnd'; print(hex(sum([ord(i)*len(inp) for  i in inp ])))\" 0x3aa7</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>i got the solution.\nThe solution is on internet in the next links:</p>\n<p><a href=\"https://pwnedchile.com/codigo-muerto-asm-x86/\" rel=\"nofollow noreferrer\">https://pwnedchile.com/codigo-muerto-asm-x86/</a>\n<a href=\"https://jaymonsecurity.com/reversing-programacion-keygen/\" rel=\"nofollow noreferrer\">https://jaymonsecurity.com/reversing-programacion-keygen/</a>\n<a href=\"https://www.mycompiler.io/new/c?fork=IRYzOqA\" rel=\"nofollow noreferrer\">https://www.mycompiler.io/new/c?fork=IRYzOqA</a></p>\n<p>Thank Edward for your help!</p>\n</div>",
            "votes": "-1",
            "user": "FAN",
            "time": "Oct 11, 2021 at 21:24",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Community",
                    "text": "<span class=\"comment-copy\">As it’s currently written, your answer is unclear. Please <a href=\"https://reverseengineering.stackexchange.com/posts/29401/edit\">edit</a> to add additional details that will help others understand how this addresses the question asked. You can find more information on how to write good answers <a href=\"/help/how-to-answer\">in the help center</a>.</span>",
                    "time": null
                }
            ]
        }
    ]
}