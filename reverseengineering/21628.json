{
    "title": "Dump the value of register into file",
    "link": "https://reverseengineering.stackexchange.com/questions/21628/dump-the-value-of-register-into-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've reverse engineering little game on windows 32bit. </p>\n<p>I found a string in executable which was interesting for me (it is a board game and this string represents the fact that somebody made a move on the board). </p>\n<p><a href=\"https://i.sstatic.net/c7G8k.png\" rel=\"nofollow noreferrer\"><img alt=\"Interesting memory address\" src=\"https://i.sstatic.net/c7G8k.png\"/></a></p>\n<p>You can see that in the string is moved into <code>eax</code>. But more interesting part here is instruction before that</p>\n<pre><code>mov ebx,eax\n</code></pre>\n<p>Here <code>ebx</code> will contain the coordinate of a move which player made. This is what I'm interested about. I want to dump this coordinate into a file. So what I want to do is to modify assembly(in my case this code is in dll) and just write that data(which is in <code>ebx</code>) into a file.</p>\n<p>I've done a little research but could not found anything useful. All I found is how to patch an executable like make a slightest modifications into assembly which is pretty simple. I was even wondering if there is any tool that could help me achieve this(like shift assembly code to make enough space for me to write some code in it).</p>\n<p>One idea that I have is to write a shellcode which dumps data, then add that shellcode at the end of some section, find my string into .txt section, edit the code to jump to my shellcode and then back to original state. But that would be pretty hard because I'm not really experienced in writing shellcode.</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "99",
    "tags": [
        "windows",
        "assembly",
        "x86",
        "c++"
    ],
    "user": "Ojs",
    "time": "Jul 8, 2019 at 15:57",
    "comments": [
        {
            "user": "bart1e",
            "text": "<span class=\"comment-copy\">What about setting a breakpoint there and reading <code>ebx</code> value?</span>",
            "time": null
        },
        {
            "user": "Ojs",
            "text": "<span class=\"comment-copy\">I want to launch application normally without a debugger and I want it to dump the data.</span>",
            "time": null
        },
        {
            "user": "bart1e",
            "text": "<span class=\"comment-copy\">Are you able to upload the executable?</span>",
            "time": null
        },
        {
            "user": "bart1e",
            "text": "<span class=\"comment-copy\">You may try Cheat Engine. It enables you to write scripts that could dump the data you want, but if you want the DLL to do this for you, patching will be the only option.</span>",
            "time": null
        },
        {
            "user": "0xec",
            "text": "<span class=\"comment-copy\">@Ojs Binary Ninja (incl. the demo version) has a shellcode compiler. You can use that to write a short C snippet to do what you want and it would emit the corresponding assembly instructions. <a href=\"https://scc.binary.ninja/\" rel=\"nofollow noreferrer\">scc.binary.ninja</a></span>",
            "time": null
        }
    ],
    "answers_data": []
}