{
    "title": "What is _bittest macro?",
    "link": "https://reverseengineering.stackexchange.com/questions/19253/what-is-bittest-macro",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Here is an example of the <code>bt</code> instruction in a X64 Windows binary:</p>\n<pre><code>bt      eax, 18h\njnb     short loc_a\nlea     rcx, String\ncall    cs:__imp_wprintf\nmov     eax, [rbx+40h]\n</code></pre>\n<p>In pseudocode:</p>\n<pre><code>if ( _bittest(&amp;Mode, 0x18u) )\n{\n  wprintf(L\"String\");\n  Mode = Properties-&gt;Mode;\n}\n</code></pre>\n<p>What is the <code>_bittest</code> macro used in a IF statement? Is it similar with <code>if(a &amp; b == b)</code> or something? The code <code>if(a &amp; b == b)</code> is used for checking if a flag is present in an OR-ed flag. And from debugging, I found the above assembly code is doing something like that. </p>\n</div>",
    "votes": "2",
    "answers": 3,
    "views": "1k",
    "tags": [
        "disassembly"
    ],
    "user": "Biswapriyo",
    "time": "Sep 4, 2018 at 16:00",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It tests if the <em>n</em>th bit is set, returns <code>true</code> if set, <code>false</code> if not set.</p>\n<p>It's basically the same as <code>if(a &amp; (1 &lt;&lt; num_bit))</code> as the argument is the number of the bit to test rather than the bit (or flag if you will) itself.</p>\n</div>",
            "votes": "3",
            "user": "Johann Aydinbas",
            "time": "Sep 4, 2018 at 16:44",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>_bittest</code> is a <a href=\"https://msdn.microsoft.com/en-us/library/h65k4tze.aspx\" rel=\"nofollow noreferrer\">compiler intrinsic which maps to the <code>bt</code> instruction</a>:</p>\n<blockquote>\n<p>Generates the <code>bt</code> instruction, which examines the bit in position b of\n  address a, and returns the value of that bit.</p>\n<pre><code>unsigned char _bittest(  \n   long const *a,  \n   long b  \n);\n</code></pre>\n</blockquote>\n</div>",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Sep 5, 2018 at 12:41",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>bt</code> is an x86 <a href=\"https://www.felixcloutier.com/x86/BT.html\" rel=\"nofollow noreferrer\">instruction</a> to check if a bit is set in a number/value. It sets <code>CF</code> flag as the value of that bit and you can use <code>jb</code>/<code>jnb</code>/<code>jc</code>/<code>jnc</code> to check if its 1/0.</p>\n<pre><code>bt      eax, 18h\n</code></pre>\n<p>As already mentioned in @Johann's answer, its equivalent to python </p>\n<pre><code>CF = (eax &amp; (1 &lt;&lt; 0x18)) &gt;&gt; 0x18\n</code></pre>\n<p>I have added some code for you to play with it <a href=\"https://gist.github.com/sudhackar/0f566726180ce533a4c8062b2294f021\" rel=\"nofollow noreferrer\">here</a>.</p>\n</div>",
            "votes": "1",
            "user": "sudhackar",
            "time": "Sep 5, 2018 at 8:16",
            "is_accepted": false,
            "comments": []
        }
    ]
}