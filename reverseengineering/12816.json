{
    "title": "Wierd names in import table",
    "link": "https://reverseengineering.stackexchange.com/questions/12816/wierd-names-in-import-table",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to do a static analysis of a PE file to see what it does.\nWhile doing so, I stumbled upon some really wierd function names in my objdump</p>\n<pre><code>DLL Name: msvcrt.dll\nvma:  Hint/Ord Member-Name Bound-To\nc2c68    1371  wcsncmp\nc2c72    1017  _wcsnicmp\nc2c7e    1229  iswdigit\nc2c8a    1013  _wcslwr_s\nc2c96    1225  iswalpha\nc2ca2       5  ??0bad_cast@@QAE@ABV0@@Z\nc2cbe      14  ??1bad_cast@@UAE@XZ\nc2cd4    1241  localeconv\nc2ce2    1256  memchr\nc2cec    1304  strcspn\nc2cf6    1292  sprintf_s\nc2d02     884  _strtoi64\n</code></pre>\n<p>notice the 2 bad_cast functions. Why are they wierd looking like that? What does this syntax mean?</p>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "329",
    "tags": [
        "pe",
        "dll",
        "static-analysis",
        "functions"
    ],
    "user": "muchwow",
    "time": "Jun 6, 2016 at 16:20",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "<span class=\"comment-copy\">These are mangled C++ symbols. See for example <a href=\"https://demangler.com/\" rel=\"nofollow noreferrer\">here</a>.</span>",
            "time": null
        },
        {
            "user": "muchwow",
            "text": "<span class=\"comment-copy\">Awesome! Please post this comment as the answer and I will accept it, thanks!</span>",
            "time": null
        },
        {
            "user": "tibar",
            "text": "<span class=\"comment-copy\">Use <code>undname</code>, see <a href=\"https://msdn.microsoft.com/en-us/library/5x49w699.aspx\" rel=\"nofollow noreferrer\">msdn.microsoft.com/en-us/library/5x49w699.aspx</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>As @guntram-blohm says, these are mangled C++ functions. If you demangle the names (using, for example, an <a href=\"https://demangler.com/\">online demangler</a>) you will get the fully decorated function names:</p>\n<pre><code>public: __thiscall bad_cast::bad_cast(class bad_cast const &amp;)\npublic: virtual __thiscall bad_cast::~bad_cast(void)\n</code></pre>\n<p>So these functions are the constructor and the destructor for <a href=\"http://en.cppreference.com/w/cpp/types/bad_cast\">bad_cast objects</a>, used to thrown an exception <em>when a dynamic_cast to a reference type fails the run-time check</em>.</p>\n</div>",
            "votes": "5",
            "user": "joxeankoret",
            "time": "Jun 7, 2016 at 7:47",
            "is_accepted": true,
            "comments": []
        }
    ]
}