{
    "title": "How to avoid database / code mismatch when developing and debugging your own code in IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/26695/how-to-avoid-database-code-mismatch-when-developing-and-debugging-your-own-cod",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This seems like a very basic use case and I can't get it to work properly. I'm developing my own test application in Visual Studio c++. I want to test it through several IDA debugging sessions. Every time I modify the code, recompile and try to debug it, IDA warns me that the input has changed and that I should reload the binary, which I do through \"File -&gt; Load file -&gt; Reload input file\". I then go to \"Options -&gt; General -&gt; Analysis -&gt; Reanalyze program\".</p>\n<p>Is this the correct way to do things?</p>\n<p>I'm also quite concerned because <em>sometimes</em> this loop fails as the function window show many (more) functions with (null) name and \"sp analysis failed\" all over the disassembly. I then have to close the project and start a new one, which is rather annoying.</p>\n<p>Any pointers on how to speed this whole thing up are welcome. Please note that I'm much less interested in removing the errors messages than removing the problems associated with them.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "167",
    "tags": [
        "ida",
        "c++",
        "development"
    ],
    "user": "Eric",
    "time": "Jan 4, 2021 at 2:50",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>“Reload input file” only refreshes the byte values, it does not  reanalyze the file. So if, for example, you added some functions and the code moved, it may interfere with the existing analysis.</p>\n<p>If you don’t actually need to analyze the binary but just debug it, you can used IDA in so called “instant debugging” mode. Open IDA without loading anything, then use the Debug-Run menu to run your compiled program. IDA will start the process and only do minimal analysis necessary to show the currently executing code. After stopping the debugger this execution-only analysis will be discarded and on next run the updated binary (if it changed) from disk will be used again.</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Jan 6, 2021 at 20:33",
            "is_accepted": false,
            "comments": []
        }
    ]
}