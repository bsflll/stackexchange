{
    "title": "IDA pro: jump back to previous instruction",
    "link": "https://reverseengineering.stackexchange.com/questions/15406/ida-pro-jump-back-to-previous-instruction",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm new with IDA pro and currently running with debugger, I have few questions:</p>\n<ol>\n<li>How can I jump on previous instruction? Undo the latest instruction ?</li>\n<li>Is it possible in IDA to examine memory of an executable ? Like it is in Immunity Debugger? Something like <a href=\"https://i.sstatic.net/6weo6.jpg\" rel=\"nofollow noreferrer\">this</a> and examine each segment briefly like it is in Immunity Debugger ?</li>\n</ol>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "2k",
    "tags": [
        "ida",
        "debugging",
        "c",
        "immunity-debugger"
    ],
    "user": "Rasty",
    "time": "May 26, 2017 at 16:46",
    "comments": [
        {
            "user": "PhoeniX",
            "text": "<span class=\"comment-copy\">check those: <a href=\"https://reverseengineering.stackexchange.com/questions/1909/how-to-display-memory-zones-content-on-ida-pro\" title=\"how to display memory zones content on ida pro\">reverseengineering.stackexchange.com/questions/1909/…</a> or <a href=\"https://reverseengineering.stackexchange.com/questions/11869/how-to-change-address-in-the-hex-view-in-ida-debugger\" title=\"how to change address in the hex view in ida debugger\">reverseengineering.stackexchange.com/questions/11869/…</a> or <a href=\"https://reverseengineering.stackexchange.com/questions/12087/how-to-display-dump-data-in-ida-debugger\" title=\"how to display dump data in ida debugger\">reverseengineering.stackexchange.com/questions/12087/…</a></span>",
            "time": null
        },
        {
            "user": "Martin",
            "text": "<span class=\"comment-copy\">To jump back to a previous instruction in the disassembly view, just press <code>ESC</code></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>As for the first point, in order to go back to instruction that was already executed (under the debugger), one needs to use a feature called reverse debugging (or Time Travel Debugging). As far as I know IDA's debugger doesn't have this. </p>\n<p>Some other tools that you could use to do a reverse debugging:</p>\n<ul>\n<li><p><a href=\"https://radare.gitbooks.io/radare2book/content/debugger/revdebug.html\" rel=\"nofollow noreferrer\">radare2</a></p></li>\n<li><p><a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/time-travel-debugging-overview\" rel=\"nofollow noreferrer\">WinDbg Preview</a></p></li>\n<li><p><a href=\"https://www.gnu.org/software/gdb/news/reversible.html\" rel=\"nofollow noreferrer\">gdb</a></p></li>\n</ul>\n</div>",
            "votes": "1",
            "user": "Paweł Łukasik",
            "time": "Jun 21, 2018 at 17:32",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Debugging a program means executing its instruction on your CPU, \"undoing\" the last instruction is usually not possible with a standard debugger.</p>\n<p>But you can debug your program in a virtual machine, take memory snapshots at given points while debugging, and restore those snapshots.</p>\n</div>",
            "votes": "0",
            "user": "user2823000",
            "time": "May 26, 2017 at 16:01",
            "is_accepted": false,
            "comments": []
        }
    ]
}