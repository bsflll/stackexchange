{
    "title": "Reversing bit rotations",
    "link": "https://reverseengineering.stackexchange.com/questions/27855/reversing-bit-rotations",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>so I have a question regarding the assembly instructions <code>ror</code> and <code>rol</code>:<br/>\nIs it possible to properly reverse them?\nSo assuming I have something like</p>\n<pre><code>ROR        EDX, 0x4\n</code></pre>\n<p>and know the contents of <code>EDX</code> after this instruction, is it mathematically possible to  find out the initial value of <code>EDX</code>? If so, can anyone explain to me how it's done?<br/>\nSadly I couldn't find any good answer to this so far, so I would be really happy if someone could help me with this :)</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "464",
    "tags": [
        "assembly"
    ],
    "user": "MrFluffy",
    "time": "Jun 17, 2021 at 18:48",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>For <code>ror</code>/<code>rol</code> you just use the reverse operation - <code>rol</code>/<code>ror</code> as bits are rotated - nothing is lost.</p>\n<p><code>0xdeadbeef rol 5</code> -&gt; <code>0xd5b7ddfb</code></p>\n<p><code>0xd5b7ddfb ror 5</code> -&gt; <code>0xdeadbeef</code></p>\n</div>",
            "votes": "3",
            "user": "Paweł Łukasik",
            "time": "Jun 17, 2021 at 19:53",
            "is_accepted": false,
            "comments": []
        }
    ]
}