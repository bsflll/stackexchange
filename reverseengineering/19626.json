{
    "title": "Radare2 Call $+5 and register-based cross-references not found",
    "link": "https://reverseengineering.stackexchange.com/questions/19626/radare2-call-5-and-register-based-cross-references-not-found",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a library of ~65MB which uses this \"technique\" as a kind of PIC.</p>\n<p>First, it gets some kind of base address (it is always the same):</p>\n<pre><code>0x00708497      e800000000     call 0x70849c\n0x0070849c      5b             pop ebx\n0x0070849d      81c3ac442601   add ebx, 0x12644ac\n</code></pre>\n<p>And then it's used to reference strings or global variables:</p>\n<pre><code>0x007084bc      8d832e29a8ff   lea eax, [ebx - 0x57d6d2]\n</code></pre>\n<p>So, is there any analysis command which could find these references?</p>\n</div>",
    "votes": "8",
    "answers": 1,
    "views": "237",
    "tags": [
        "disassembly",
        "radare2"
    ],
    "user": "Fabian Mendez",
    "time": "Oct 17, 2018 at 19:27",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There are a few issues on radare's GitHub about such code, e.g.:</p>\n<p><a href=\"https://github.com/radare/radare2/issues/6819\" rel=\"nofollow noreferrer\">Invalid strings xref in x86</a></p>\n<p><a href=\"https://github.com/radare/radare2/issues/6402\" rel=\"nofollow noreferrer\">String(DATA) xref does not work with x86 binary built with -fPIC -m32</a></p>\n<p>According to some comments on them, <code>aae</code> is supposed to resolve such references after <a href=\"https://github.com/radare/radare2/pull/6902\" rel=\"nofollow noreferrer\">this change</a>, so try it. If not, open a new issue or try other <a href=\"https://github.com/radare/radare2#pointers\" rel=\"nofollow noreferrer\">support options</a>.</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Oct 17, 2018 at 19:22",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Fabian Mendez",
                    "text": "<span class=\"comment-copy\">I will create a issue once I make a smaller library reproducing the issue, for now I made a <a href=\"https://gitlab.com/snippets/1765072\" rel=\"nofollow noreferrer\">python script</a> using r2pipe to find these references</span>",
                    "time": null
                },
                {
                    "user": "Anton Kochkov",
                    "text": "<span class=\"comment-copy\">@FabianMendez so, have you found a way to do a smaller reproducer? Opening an issue even just \"as is\" can help too.</span>",
                    "time": null
                },
                {
                    "user": "Fabian Mendez",
                    "text": "<span class=\"comment-copy\">@AntonKochkov There is an issue already: <a href=\"https://github.com/radare/radare2/issues/11309\" rel=\"nofollow noreferrer\">github.com/radare/radare2/issues/11309</a></span>",
                    "time": null
                }
            ]
        }
    ]
}