{
    "title": "Understanding bootlog load address",
    "link": "https://reverseengineering.stackexchange.com/questions/13986/understanding-bootlog-load-address",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I was looking at the bootlog for the WAG160N found here: <a href=\"https://wiki.openwrt.org/toh/linksys/wag160n\" rel=\"nofollow noreferrer\">https://wiki.openwrt.org/toh/linksys/wag160n</a> and I wanted to clarify how the booting works.</p>\n<p>*Boot Address 0xbfc00000</p>\n<p>Total memory used by CFE:  0x80401000 - 0x80528800 (1210368)*</p>\n<p>Why is the boot address not within in total memory used range (0x8040100-0x80528800) of CFE? If I understand correctly 0xbfc00000 is already a virtual memory address.</p>\n<p>Thanks!</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "467",
    "tags": [
        "ida",
        "firmware",
        "mips"
    ],
    "user": "HKC",
    "time": "Nov 19, 2016 at 7:02",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>MIPS <a href=\"http://www.johnloomis.org/microchip/pic32/memory/memory.html\" rel=\"nofollow noreferrer\">memory mapping</a> is pretty peculiar. The virtual address <code>0xbfc00000</code> (in <code>kseg1</code>) corresponds to the physical address <code>0x1fc00000</code> and is likely in ROM. I suspect that the range 0x80401000 - 0x80528800  is in RAM (<code>kseg0</code>), so it's natural the addresses don't match. To know more you will probably need to read the processor's datasheet and/or board schematics to figure out where exactly and how much ROM and RAM are present.</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Nov 19, 2016 at 9:04",
            "is_accepted": false,
            "comments": []
        }
    ]
}