{
    "title": "Reverse Intel hex to programming code",
    "link": "https://reverseengineering.stackexchange.com/questions/17089/reverse-intel-hex-to-programming-code",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a file in the Intel hex format, which was taken of from a pic16F1705 chip. I need to find a way to disassemble it into some form of human friendly programming language in order to make some modifications to it. I tried running it through a x86 and x64 dissembler, but in both cases I got an output, which looked like assembler code, but there were around 4000 bad lines in both cases.\nMy question is how should I disassemble this file, so I can read it in some human friendly programming language and modify it? </p>\n<pre><code>0:  02 00                   add    al,BYTE PTR [eax]\n2:  00 04 00                add    BYTE PTR [eax+eax*1],al\n5:  00 fa                   add    dl,bh\n7:  10 00                   adc    BYTE PTR [eax],al\n9:  00 00                   add    BYTE PTR [eax],al\nb:  80 31 0f                xor    BYTE PTR [ecx],0xf\ne:  28 ff                   sub    bh,bh\n10: 3f                      aas\n11: ff                      (bad)\n12: 3f                      aas\n13: 7e 14                   jle    0x29\n15: 80 31 20                xor    BYTE PTR [ecx],0x20\n18: 00 7f 08                add    BYTE PTR [edi+0x8],bh\n1b: a2 10 00 10 00          mov    ds:0x100010,al\n20: f0 00 04 2e             lock add BYTE PTR [esi+ebp*1],al\n24: 70 08                   jo     0x2e\n</code></pre>\n<p>These are some example lines of the output I get after running the hex through a x86/x64 dissembler. </p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "3k",
    "tags": [
        "assembly",
        "disassemblers",
        "hex",
        "intel"
    ],
    "user": "Radi",
    "time": "Dec 31, 2017 at 14:33",
    "comments": [
        {
            "user": "broadway",
            "text": "<span class=\"comment-copy\">you'll need to use a pic disassembler -- it's not x86 or x64. I know ida supports pic 16xx cpus and there's this disassembler (but I haven't tried it) <a href=\"https://github.com/fredimachado/PICHexDisassembler\" rel=\"nofollow noreferrer\">github.com/fredimachado/PICHexDisassembler</a></span>",
            "time": null
        },
        {
            "user": "Radi",
            "text": "<span class=\"comment-copy\">I tried it using ida and got some results, so I will continue working from here. Thank you really much for your help!</span>",
            "time": null
        },
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">iirc radare2 understands ihex format files i think i had a post but cant find it atm</span>",
            "time": null
        },
        {
            "user": "Megabeets",
            "text": "<span class=\"comment-copy\">Should work with radare2. Install radare2 <a href=\"https://github.com/radare/radare2\" rel=\"nofollow noreferrer\">from git</a> and execute <code>r2 ihex://filename</code></span>",
            "time": null
        },
        {
            "user": "Megabeets",
            "text": "<span class=\"comment-copy\">@blabb, <a href=\"https://reverseengineering.stackexchange.com/a/11692/18698\">this answer</a>, I assume</span>",
            "time": null
        }
    ],
    "answers_data": []
}