{
    "title": "Re-engineering to create UML Diagrams from Source and Binary",
    "link": "https://reverseengineering.stackexchange.com/questions/3808/re-engineering-to-create-uml-diagrams-from-source-and-binary",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Are there tools that would create:  </p>\n<ul>\n<li>UML Structural Diagrams from Source Code.  </li>\n<li>UML Behavioral Diagrams from Binary executing on a arm / x86 system.<br/>\n  Sources would be in C &amp;/ C++ &amp;/ Python.</li>\n</ul>\n<p>Such tools would boost productivity while re-engineering (understanding existing software and modifying it.) on a Linux platform.</p>\n</div>",
    "votes": "8",
    "answers": 3,
    "views": "3k",
    "tags": [
        "tools",
        "static-analysis",
        "dynamic-analysis",
        "processhacker"
    ],
    "user": "ThrivingWithLinux",
    "time": "Mar 6, 2014 at 13:51",
    "comments": [
        {
            "user": "atdre",
            "text": "<span class=\"comment-copy\">Klocwork used to have a tool for this long ago, Java only I believe</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I did some work on modelling C programs sometimes back, I used this article as starting point,</p>\n<p><a href=\"http://www.drdobbs.com/uml-for-c-programmers/184401948\" rel=\"nofollow\">http://www.drdobbs.com/uml-for-c-programmers/184401948</a></p>\n<p>then evaluated few ide and found EA most fitting also IBM RSA has good support for modelling C programs. </p>\n<p>However what you will need to do is, formulate a way of modelling C programs in UML and then follow it, this is because C not being an Object Oriented language and UML being inherently Object oriented we need to device how we will represent a C construct in UML.</p>\n<p>hope this helps for C, for C++ EA and <a href=\"http://www.ibm.com/developerworks/downloads/r/architect/\" rel=\"nofollow\">RSA</a>'s reverse engineering worsk well and not much effort is required as C.</p>\n</div>",
            "votes": "2",
            "user": "ThrivingWithLinux",
            "time": "Aug 27, 2014 at 6:51",
            "is_accepted": true,
            "comments": [
                {
                    "user": "abpan",
                    "text": "<span class=\"comment-copy\">you should respond to or accept the answers to the questions you have asked mate.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<ul>\n<li>Sparx Systems Enterprise Architect for Java or .NET</li>\n<li>IDA Pro RTTI plugin for C++ compiled binary</li>\n<li>doxygen for C, Java, and other language source code</li>\n</ul>\n</div>",
            "votes": "3",
            "user": "atdre",
            "time": "Mar 6, 2014 at 14:22",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Just about all the major tools will take source files / directories and produce namespace (a Package), class and interface definitions, attributes, properties, and operation signatures. For a variety of languages.</p>\n<p>However, not all dependencies nor all relationships between classes will be discovered as operation definition bodies are not parsed, thus Activity model of an operation cannot be derived ( nor its Activity Diagram ).</p>\n<p>Microsoft in Visual Studio 2010 ( I believe, through to 2015 ) included an Operation to Sequence Diagram generator for any operation selected in the editor. It has since been dropped, probably due to it being restricted to managed languages.</p>\n<p>To derive State Machine model / diagram would also need to be cognitive of the coding convention originally employed in the source to be meaningful.  Perhaps this is an area that Machine Learning might have impact.</p>\n<p>Collaboration Diagrams have been dropped from UML.</p>\n<p>I'm suprised that parsing op bodies has not been up taken by vendors, EA, MagicDraw, not even Eclipse Papyrus for Java.</p>\n<p>Hope that helps,\nRegards</p>\n</div>",
            "votes": "0",
            "user": "Cavan Watson",
            "time": "Jan 29, 2017 at 12:35",
            "is_accepted": false,
            "comments": []
        }
    ]
}