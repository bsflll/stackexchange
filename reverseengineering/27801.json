{
    "title": "How can I decrypte the data in this SQLite Database file",
    "link": "https://reverseengineering.stackexchange.com/questions/27801/how-can-i-decrypte-the-data-in-this-sqlite-database-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have this SQLite Database file</p>\n<p><a href=\"https://we.tl/t-RwKqYyS3D7\" rel=\"nofollow noreferrer\">https://we.tl/t-RwKqYyS3D7</a></p>\n<p>When I open it in notepad++, I got some decoded strings. I was trying to clean it and show only the strings without the symboles but then I found this website</p>\n<p><a href=\"https://filext.com/online-file-viewer.html\" rel=\"nofollow noreferrer\">https://filext.com/online-file-viewer.html</a></p>\n<p>When I open that file there, it show a db table and the text column have only numbers.</p>\n<p>I was thinking, maybe that's the strings but encrypted ?</p>\n<p>Hope someone have an explanation for that numbers and maybe a way to decrypte it.</p>\n<p>Example of the numbers</p>\n<pre><code>92,91,72,49,93,32,32,39,97,98,32,32,97,119,98,60,98,114,62,10,60,98,114,62,10,97,32,112,114,105,109,105,116,105,118,101,32,119,111,114,100,59,60,98,114,62,10,60,98,114,62,10,102,97,116,104,101,114,44,32,105,110,32,97,32,108,105,116,101,114,97,108,32,97,110,100,32,105,109,109,101,100,105,97,116,101,44,32,111,114,32,102,105,103,117,114,97,116,105,118,101,32,97,110,100,32,114,101,109,111,116,101,32,97,112,112,108,105,99,97,116,105,111,110,41,46,32,67,111,109,112,97,114,101,32,110,97,109,101,115,32,105,110,32,34,65,98,105,45,34,46,60,98,114,62,10,60,98,114,62,10,60,98,114,62,10,75,74,86,58,32,99,104,105,101,102,44,32,40,102,111,114,101,45,41,102,97,116,104,101,114,40,45,108,101,115,115,41,44,32,88,32,32,112,97,116,114,105,109,111,110,121,44,32,112,114,105,110,99,105,112,97,108,46,60,98,114,62,10\n</code></pre>\n<p>Or maybe a regex to clean all the file</p>\n<p>Thank you!</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "7k",
    "tags": [
        "encryption",
        "decryption",
        "unknown-data"
    ],
    "user": "M J",
    "time": "Jun 5, 2021 at 20:38",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can open that file using SQLiteStudio to get that information.</p>\n<p>Steps:</p>\n<ol>\n<li><a href=\"https://sqlitestudio.pl/\" rel=\"nofollow noreferrer\">Download SQLiteStudio</a> and install it</li>\n<li>Drag the file (Strong.isa_lex) onto the left sidebar in SQLiteStudio and click OK</li>\n<li>Double-click on the new database (\"Strong\")</li>\n<li>You will see 2 tables, \"Lemma\" and \"TBInfo\", both with 2 columns each.</li>\n<li>Right-click on table \"Lemma\" and Generate query for table &gt; SELECT</li>\n<li>Hit F9</li>\n<li>Perform steps 5 and 6 for TBInfo as well</li>\n</ol>\n<p>Now you have all the data.</p>\n<p>Let me know if you have any issues.</p>\n</div>",
            "votes": "3",
            "user": "Steve",
            "time": "Jun 5, 2021 at 22:24",
            "is_accepted": true,
            "comments": [
                {
                    "user": "M J",
                    "text": "<span class=\"comment-copy\">Thank you so much Steve. Do you know a regex to remove [H7] and many other like that ?</span>",
                    "time": null
                },
                {
                    "user": "Steve",
                    "text": "<span class=\"comment-copy\">Not a problem! Unfortunately I'm not well versed with regex, so I won't be of much help there, sorry!</span>",
                    "time": null
                },
                {
                    "user": "M J",
                    "text": "<span class=\"comment-copy\">no problem, thank you my friend :)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>those numbers you pasted are ordinals for the respective characters</p>\n<p>92 is ordinal for escaped backslash</p>\n<pre><code>ord('\\\\')\n92\n</code></pre>\n<p>you can use a for i in blah construct with python to print them up</p>\n<pre><code>python\nPython 3.9.1 (tags/v3.9.1:1e5d33e, Dec  7 2020, 17:08:21) [MSC v.1927 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; input = [92,91,72,49,93,32,32,39,97,98,32,32,97,119,98,60,98,114,62,10,60,98,114,62,10,97,32,112,114,105,109,105,116,105,118,101,32,119,111,114,100,59,60,98,114,62,10,60,98,114,62,10,102,97,116,104,101,114,44,32,105,110,32,97,32,108,105,116,101,114,97,108,32,97,110,100,32,105,109,109,101,100,105,97,116,101,44,32,111,114,32,102,105,103,117,114,97,116,105,118,101,32,97,110,100,32,114,101,109,111,116,101,32,97,112,112,108,105,99,97,116,105,111,110,41,46,32,67,111,109,112,97,114,101,32,110,97,109,101,115,32,105,110,32,34,65,98,105,45,34,46,60,98,114,62,10,60,98,114,62,10,60,98,114,62,10,75,74,86,58,32,99,104,105,101,102,44,32,40,102,111,114,101,45,41,102,97,116,104,101,114,40,45,108,101,115,115,41,44,32,88,32,32,112,97,116,114,105,109,111,110,121,44,32,112,114,105,110,99,105,112,97,108,46,60,98,114,62,10]\n&gt;&gt;&gt; for i in input:\n...     print(chr(i),end=\"\")\n...\n\\[H1]  'ab  awb&lt;br&gt;\n&lt;br&gt;\na primitive word;&lt;br&gt;\n&lt;br&gt;\nfather, in a literal and immediate, or figurative and remote application). Compare names in \"Abi-\".&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\nKJV: chief, (fore-)father(-less), X  patrimony, principal.&lt;br&gt;\n&gt;&gt;&gt;\n</code></pre>\n<p>or you can dump the database to a textfile by redirecting this with python</p>\n<pre><code>import sqlite3\nconn = sqlite3.connect(\".\\copysql\")\ncur = conn.cursor()\n\nres = cur.execute(\"SELECT * FROM Lexicon\")\nfor a in res:\n    print(a)\n\nres = cur.execute(\"SELECT * FROM TBinfo\")\nfor a in res:\n    print(a)\n</code></pre>\n</div>",
            "votes": "2",
            "user": "blabb",
            "time": "Jun 6, 2021 at 23:27",
            "is_accepted": false,
            "comments": [
                {
                    "user": "M J",
                    "text": "<span class=\"comment-copy\">Man, you're awesome, thank you so much for your time and the explalantion.</span>",
                    "time": null
                }
            ]
        }
    ]
}