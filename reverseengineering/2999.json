{
    "title": "Lossless Rice Compression",
    "link": "https://reverseengineering.stackexchange.com/questions/2999/lossless-rice-compression",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to figure out how the <a href=\"http://www.firstpr.com.au/audiocomp/lossless/#rice\" rel=\"nofollow\">Lossless Rice compression</a> algorithm works on the following file. Here is a <a href=\"http://www.sendspace.com/file/me8bcw\" rel=\"nofollow\">DICOM file</a>.</p>\n<p>Looking at the information I can see:</p>\n<pre><code>$ gdcmdump I160 | grep \"Tamar Compression Type\"\n(07a1,1011) CS [LOSSLESS RICE ]                                # 14,1 Tamar Compression Type\n</code></pre>\n<p>I can open the image using <a href=\"http://www.tomovision.com/download/binaries/Tomo_21_r5.zip\" rel=\"nofollow\">TomoVision</a>. The image is 512x512, 16bits (unsigned).</p>\n<p>The compressed stream:</p>\n<pre><code>$ gdcmraw -t 07a1,100a I160 comp.raw\n</code></pre>\n<p>contains (hexdump comp.raw):</p>\n<pre><code>1A D5 F8 EB  F2 77 A5 CE  A3 54 D5 2A  C0 5D AA 32...\n</code></pre>\n<p>But TomoVision seems to output a series of zeroes until byte 0x1DE. I can also use a command line tool: <a href=\"http://www.tomovision.com/download/download_dicomatic.htm\" rel=\"nofollow\">DICOMatic</a> to process the file. However without a proper license, the <a href=\"http://www.speedyshare.com/qhjq2/I160.dcm\" rel=\"nofollow\">generated file</a> contains a waterwark. So only the first few bytes looks ok:</p>\n<pre><code>$ gdcmraw /tmp/I160.dcm /tmp/pixeldata.raw\n$ hexdump /tmp/pixeldata.raw |less\n</code></pre>\n<p>Some more encoded files can be found <a href=\"http://www.speedyshare.com/4Xr9f/lossless-rice.tgz\" rel=\"nofollow\">here</a>.</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "758",
    "tags": [
        "decryption"
    ],
    "user": "tibar",
    "time": "Nov 4, 2013 at 11:22",
    "comments": [
        {
            "user": "Ange",
            "text": "<span class=\"comment-copy\"><a href=\"http://sun.aei.polsl.pl/~rstaros/papers/ss2003-eh.pdf\" rel=\"nofollow noreferrer\">this</a> looks related. Also, providing a non-RICE dicom and a non-graphical tool (unlike TomoVision) supporting the RICE-compressed file would help. (<a href=\"http://comp.compression.narkive.com/uIjbk5UE/reverse-engineering-variable-length-encoding-of-differences-of-predictions\" rel=\"nofollow noreferrer\">5 years old</a> ?)</span>",
            "time": null
        },
        {
            "user": "asheeshr",
            "text": "<span class=\"comment-copy\">You can edit the question and make changes. If you want to ask about specific aspects, or maybe try out a different approach, you can post another question. The only restriction being that it should be distinct enough to not warrant a close vote.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Not worth any bounty, but it might help, as <code>Tomovision.exe</code> doesn't look obfuscated in any way after a quick look, and contains the algorithm you're looking for:</p>\n<ol>\n<li>open it in your favorite disassembler</li>\n<li>check for reference to <code>RICE</code> strings (such as <code>C:\\TomoVision\\Prog\\Prog_Lib\\TomoVision_Convert\\NEMA_Compression_RICE_decode.cpp</code> at address <code>4F59C4</code>)</li>\n<li>study the ASM code - a.k.a. do your homework ;)</li>\n</ol>\n</div>",
            "votes": "2",
            "user": "Ange",
            "time": "Nov 4, 2013 at 14:50",
            "is_accepted": true,
            "comments": []
        }
    ]
}