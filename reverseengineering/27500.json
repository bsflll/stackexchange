{
    "title": "Unrecognized function",
    "link": "https://reverseengineering.stackexchange.com/questions/27500/unrecognized-function",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There is function:</p>\n<pre><code>push    65h\npush    edi\ncall    sub_5D8750\n</code></pre>\n<p>In this case, function takes 65 bytes to be filled with zeros, and edi is memory address starting from which to fill these 65 bytes with zeros. I put breakpoint, this function is called before the WinMain, and immediately at the beginning of the WinMain. What kind of function could it be if IDA didn't recognize it? Maybe ZeroMemory? But why IDA not recognize it? Thanks in advance.</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "56",
    "tags": [
        "ida",
        "c++",
        "disassemblers"
    ],
    "user": "black4joss",
    "time": "Apr 19, 2021 at 14:28",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Evidently looking at the three lines the actual functionality must be in <code>sub_5D8750</code>. And if you know it's effectively a zero-filling then simply rename it. The reason why IDA may not have recognized it is probably because no signature matched. But that's where the I in IDA comes into play ...</span>",
            "time": null
        },
        {
            "user": "Orwellophile",
            "text": "<span class=\"comment-copy\">That's 0x65 = 101 bytes.  Possibly a 100 byte string with spare byte for the termination null.  I already have issues with the present level of FLIRT in IDA mis-detecting functions as library functions, but it's worth it for all the times it gets the really complex ones right.  You really wouldn't want it to be any more aggressive.</span>",
            "time": null
        }
    ],
    "answers_data": []
}