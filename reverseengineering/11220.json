{
    "title": "Finding user process for Windows kernel API call",
    "link": "https://reverseengineering.stackexchange.com/questions/11220/finding-user-process-for-windows-kernel-api-call",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've set breakpoints on some Windows kernel functions using WinDBG. When the breakpoints are hit, I can query information about the invoking user-mode process using the <code>!process</code> or <code>!peb</code> commands.</p>\n<p>How are these commands implemented? How can I find the relevant memory structures and \"manually\" trace back to the user-mode caller when one of my BPs hit?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "599",
    "tags": [
        "windows"
    ],
    "user": "buherator",
    "time": "Oct 31, 2015 at 12:07",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>currentprocess KPROCESS offset is returned by</p>\n<pre><code>IDebugSystemObjects::GetCurrentProcessDataOffset\n</code></pre>\n<p>peb is returned by</p>\n<pre><code>IDebugSystemObjects::GetCurrentProcessPeb method\n</code></pre>\n<p>both are implemented in dbgeng </p>\n<p>you can set process specific breakpoints so that the kernel api will break only in the correct process context </p>\n<pre><code>bp /p [eprocess] {kernel api}\n</code></pre>\n<p>to look at the stack use <code>kb</code> when the breakpoint is hit  </p>\n<p>windbg comes with sample src code that shows various forms of implementation \nright from the very old wdbgext extensions to the latest engextcpp extension </p>\n<p>a basic implementation is simple and straightforward \nCall DebugCreate() to obtain a IDebugClient Interface \nQuery the Other Interfaces from this Client Interface and call the methods</p>\n<p>to find a series of articles that show how to use the dbgeng functions \nexplore here \n<a href=\"http://www.woodmann.com/forum/entry.php?246-A-Simple-Dbgeng-Based-User-Mode-Debugger\" rel=\"nofollow\">http://www.woodmann.com/forum/entry.php?246-A-Simple-Dbgeng-Based-User-Mode-Debugger</a></p>\n</div>",
            "votes": "3",
            "user": "blabb",
            "time": "Oct 31, 2015 at 19:04",
            "is_accepted": true,
            "comments": [
                {
                    "user": "buherator",
                    "text": "<span class=\"comment-copy\">Thanks! Can you point me to any implementation details of the mentioned debug methods?</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">added some details and a link explore</span>",
                    "time": null
                }
            ]
        }
    ]
}