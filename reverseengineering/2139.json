{
    "title": "Is it possible to create data xrefs manually?",
    "link": "https://reverseengineering.stackexchange.com/questions/2139/is-it-possible-to-create-data-xrefs-manually",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a binary with lots of indirect calls (<code>call dword ptr [register + offset ]</code>) the register is calculated with a simple math which I manage to statically calculate on my own (the call itself lead to some winapi calculated from the current offset)</p>\n<p>whenever I try to use <code>AddCodeRefs (ins, winapi, XREF_USER | fl_CN/f)</code> to this data my graph turns out wrong and all the basic blocks become one instruction per basic block; when I try to do the reverse, IDA (logically :/) thinks that the data is really code and reinterprets all of the section to be garbage code.</p>\n<p>My question is - Is it possible to create data xrefs from code manually ? <code>AddCodeRefs</code> seem to spoil the graph and I couldn't find any <code>AddDataRefs</code>, I'm using IDA 6.4.</p>\n</div>",
    "votes": "7",
    "answers": 1,
    "views": "3k",
    "tags": [
        "ida",
        "python",
        "idapython"
    ],
    "user": "xrefsfrom",
    "time": "May 30, 2013 at 15:17",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Perhaps less f-words next time would also get your point across?</span>",
            "time": null
        },
        {
            "user": "xrefsfrom",
            "text": "<span class=\"comment-copy\">I see that you've already edit'ed it, sorry, I will s// next time</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I think you might be looking for <strong><code>add_dref(long From,long To,long drefType)</code></strong>. <strong><a href=\"https://www.hex-rays.com/products/ida/support/idadoc/313.shtml\" rel=\"noreferrer\">IDA Online Help</a></strong> describes it as following:</p>\n<pre><code>Data reference types (combine with XREF_USER!):\n#define dr_O    1                       // Offset\n#define dr_W    2                       // Write\n#define dr_R    3                       // Read\n#define dr_T    4                       // Text (names in manual operands)\n#define dr_I    5                       // Informational\n\nvoid    add_dref(long From,long To,long drefType);      // Create Data Ref\nvoid    del_dref(long From,long To);    // Unmark Data Ref\n\nlong    Dfirst  (long From);            // Get first data xref from 'From'\nlong    Dnext   (long From,long current);\nlong    DfirstB (long To);              // Get first data xref to 'To'\nlong    DnextB  (long To,long current);\n</code></pre>\n</div>",
            "votes": "5",
            "user": "PSS",
            "time": "Jun 26, 2013 at 3:54",
            "is_accepted": false,
            "comments": []
        }
    ]
}