{
    "title": "exploit - Getting started with Java exploitation [duplicate]",
    "link": "https://reverseengineering.stackexchange.com/questions/6314/exploit-getting-started-with-java-exploitation",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>This question already has answers here</b>:\n                                \n                            </div>\n</div>\n</div>\n</div>\n<div class=\"flex--item mb0 mt4\">\n<a dir=\"ltr\" href=\"/questions/2888/how-exploit-writers-find-bugs-in-java-machine\">How exploit writers find bugs in Java Machine?</a>\n<span class=\"question-originals-answer-count\">\n                                (3 answers)\n                            </span>\n</div>\n<div class=\"flex--item mb0 mt8\">Closed <span class=\"relativetime\" title=\"2014-09-26 21:12:24Z\">10 years ago</span>.</div>\n</div>\n</aside>\n</div>\n<p>I am looking to get started with Java exploitation. I have not found a good place start or even how to start, so I am asking here. What are the publicly available exploits for Java that one can study ? Also what would be a good starting point ?(ex. maybe decompilation ) </p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "536",
    "tags": [
        "exploit",
        "java"
    ],
    "user": "Sreyan",
    "time": "10 years ago",
    "comments": [
        {
            "user": "0xea",
            "text": "<span class=\"comment-copy\">See this question and my answer <a href=\"http://reverseengineering.stackexchange.com/a/2889/304\">reverseengineering.stackexchange.com/a/2889/304</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>What are the publicly available exploits for Java that one can study ?</p>\n</blockquote>\n<p>There are about 20 publicly available exploits for Java here, with annotated source code and references to the vulnerabilities being exploited: <a href=\"https://github.com/rapid7/metasploit-framework/tree/master/modules/exploits/multi/browser\" rel=\"nofollow\">https://github.com/rapid7/metasploit-framework/tree/master/modules/exploits/multi/browser</a></p>\n</div>",
            "votes": "2",
            "user": "Jason Geffner",
            "time": "Sep 26, 2014 at 12:36",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>So the first question is, what are you trying to exploit?</p>\n<p>Historically, the most popular target is the Java Browser plugin, because the sandboxing relies entirely on in-process Java code, with an attack surface of over 18,000 classes in the standard library. Naturally, this means that it's a frequent source of vulnerabilities, to the point where a lot of people have just disabled the plugin entirely, and even Oracle has made it harder to run applets automatically.</p>\n<p>So if you want to find your own vulnerability, it's just a matter of looking through the standard library code (everything in rt.jar is privileged) and find something that does sensitive operations without properly validating the caller's permissions.</p>\n</div>",
            "votes": "2",
            "user": "Antimony",
            "time": "Sep 25, 2014 at 15:18",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Sreyan",
                    "text": "<span class=\"comment-copy\">Are there any publicly available exploits that I can study ? And what is the <b>rt.jar</b> file for ?</span>",
                    "time": null
                },
                {
                    "user": "Antimony",
                    "text": "<span class=\"comment-copy\">rt.jar is the jar that contains all the core system classes. The last time I checked, it had over 18000 classes in it.</span>",
                    "time": null
                }
            ]
        }
    ]
}