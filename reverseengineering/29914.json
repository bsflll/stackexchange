{
    "title": "How to type data as a relative address in Ghidra?",
    "link": "https://reverseengineering.stackexchange.com/questions/29914/how-to-type-data-as-a-relative-address-in-ghidra",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>A jump table I am reversing uses relative offsets to both data and functions. These relative offsets are 32-bit integers added to the address that the value is stored at. Does Ghidra support typing these as relative addresses for generating references (like how you can type a value as an absolute address by pressing <kbd>P</kbd>)?</p>\n<p>For example:</p>\n<pre><code>                                 INT_00010f00                                            \n           00010f00 49 ff ff ff       int          FFFFFF49h\n</code></pre>\n<p>Is actually a reference to <code>0x00010f00 + 0xffffff49 = 0x00010e49</code></p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ghidra"
    ],
    "user": "Delya Erricson",
    "time": "Jan 25, 2022 at 20:58",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can always set it manually to the specific address from the reference dialog (available under <kbd>R</kbd>). There you can providing the correct address calculated by adding <code>base address</code> and an <code>offset</code>. If you have more than one, you can automate it via <code>python</code> script.</p>\n<p>I've recorded a video detailing such situation in action <a href=\"https://www.youtube.com/watch?v=FvH7b_qLmbU\" rel=\"nofollow noreferrer\">https://www.youtube.com/watch?v=FvH7b_qLmbU</a></p>\n</div>",
            "votes": "1",
            "user": "Paweł Łukasik",
            "time": "Jan 24, 2022 at 17:13",
            "is_accepted": true,
            "comments": []
        }
    ]
}