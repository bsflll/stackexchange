{
    "title": "What is the difference between xrefs and stack trace?",
    "link": "https://reverseengineering.stackexchange.com/questions/18931/what-is-the-difference-between-xrefs-and-stack-trace",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In IDA, I can see what calls a specific function by looking at the xrefs to it, or by looking 1 step back on stack trace.</p>\n<p>What are the differences between them?</p>\n<p>How does IDA know what the stack trace is? And how does IDA know what the xrefs to a specific function are?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "95",
    "tags": [
        "ida",
        "functions",
        "stack",
        "callstack",
        "call"
    ],
    "user": "Jonert6544",
    "time": "Jul 30, 2018 at 19:53",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>x-refs is just a static cross-reference in the binary that can be identified during static-analysis. </p>\n<p>So if you <code>main</code> call <code>funcA</code> you could tell that by looking at x-refs on <code>funcA</code>. But you can't be sure that it will be in fact called during runtime - there might be some conditional jumps that only call <code>funcA</code> in a certain state.</p>\n<p>Stacktrace presents the actual calls at a given point so it's dynamic and might change after another instruction execution.</p>\n<p>Stack trace information is gathered by looking at <code>EBP</code> on the stack <a href=\"https://www.hex-rays.com/products/ida/support/idadoc/1412.shtml\" rel=\"nofollow noreferrer\">ref</a>. x-refs are done by analyzing the binary.</p>\n</div>",
            "votes": "2",
            "user": "Paweł Łukasik",
            "time": "Jul 30, 2018 at 19:57",
            "is_accepted": false,
            "comments": []
        }
    ]
}