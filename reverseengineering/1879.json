{
    "title": "how can I diff two x86 binaries at assembly code level?",
    "link": "https://reverseengineering.stackexchange.com/questions/1879/how-can-i-diff-two-x86-binaries-at-assembly-code-level",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm looking for a tool like <code>Beyond Compare</code>, <code>meld</code>, <code>kdiff</code>, etc. which can be used to compare two disassembled binaries. I know that there's binary (hex) comparison, which shows difference by hex values, but I'm looking for something that shows op-codes and arguments.</p>\n<p>Anyone knows something that can help ?</p>\n</div>",
    "votes": "62",
    "answers": 8,
    "views": "39k",
    "tags": [
        "tools",
        "binary-analysis",
        "bin-diffing"
    ],
    "user": "Mellowcandle",
    "time": "Apr 21, 2013 at 23:15",
    "comments": [
        {
            "user": "Denis Laskov",
            "text": "<span class=\"comment-copy\">well, You always can get listing of op-codes\\arguments from disassembler and compare them as two text lists? Or even build python script for Immunity Debugger :)</span>",
            "time": null
        },
        {
            "user": "Gilles 'SO- stop being evil'",
            "text": "<span class=\"comment-copy\">Why is diff/meld/kdiff/â€¦ on the disassembly not satisfactory?</span>",
            "time": null
        },
        {
            "user": "alexanderh",
            "text": "<span class=\"comment-copy\">@Mellowcandle +1 for mentioning kdiff. It's a great tool for doing a quick diff.</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">@Gilles: see <a href=\"http://reverseengineering.stackexchange.com/questions/1902\">my Q&amp;A here</a>.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Unless I'm mistaken, it sounds like you are looking for a binary diffing tool. Some good options are below. <strong>These all require IDA Pro.</strong></p>\n<ol>\n<li><p><a href=\"http://www.darungrim.org/\" rel=\"noreferrer\">DarunGrim</a> (open-source)\n<img alt=\"DarunGrim\" src=\"https://i.sstatic.net/CHycR.jpg\"/></p></li>\n<li><p><a href=\"http://www.zynamics.com/bindiff.html\" rel=\"noreferrer\">BinDiff</a> (commercial)\n<img alt=\"BinDiff\" src=\"https://i.sstatic.net/MbI2c.gif\"/></p></li>\n<li><p><a href=\"http://research.eeye.com/html/Tools/download/DiffingSuiteSetup.exe\" rel=\"noreferrer\">eEye Binary Diffing Suite</a> (use archive.org to download the installer)</p></li>\n</ol>\n</div>",
            "votes": "34",
            "user": "phuclv",
            "time": "Apr 29, 2017 at 19:36",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Mellowcandle",
                    "text": "<span class=\"comment-copy\">Great. Exactly what I've been looking for</span>",
                    "time": null
                },
                {
                    "user": "Mellowcandle",
                    "text": "<span class=\"comment-copy\">eEye Binary Diffing Suite is open source, and part of it is DarunGrim, according to the link you provided</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">might be worth mentioning that they all work on top of IDA, not stand-alone.</span>",
                    "time": null
                },
                {
                    "user": "newgre",
                    "text": "<span class=\"comment-copy\">Also kind of relevant: <a href=\"http://reverseengineering.stackexchange.com/questions/1475/how-does-bindiff-work/1511#1511\">how BinDiff works</a></span>",
                    "time": null
                },
                {
                    "user": "Tey'",
                    "text": "<span class=\"comment-copy\">BinDiff is now free (but still closed source) and the company has been bought by Google.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can also try radiff2 (Which doesn't require IDA ;)), which is a tool from the <a href=\"http://rada.re\">radare</a> toolsuite. It supports delta diffing (-d), graphdiff (-g), and lots of related goodies.</p>\n</div>",
            "votes": "21",
            "user": "jvoisin",
            "time": "Oct 25, 2013 at 13:06",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There are various great alternatives here. However, all of them seem to be unmaintained. The tool I recommend you is Diaphora <a href=\"https://github.com/joxeankoret/diaphora\" rel=\"noreferrer\">https://github.com/joxeankoret/diaphora</a> (Disclaimer: I'm the author). Is a pure Python plugin for IDA Pro for doing program diffing, is the only one that can import/export structures, enumerations, etc..., the only one that makes use of the Hex-Rays decompiler and, which is more interesting, it's maintained: the last time I committed a change was last week.</p>\n<p>Some screenshots: </p>\n<p>Diffing MS015-034:\n<img alt=\"enter image description here\" src=\"https://i.sstatic.net/xvmu8.png\"/></p>\n<p>Diffing pseudo-code (MS015-050):\n<img alt=\"enter image description here\" src=\"https://i.sstatic.net/1sqd3.png\"/></p>\n<p>Diffing MS015-050:\n<img alt=\"enter image description here\" src=\"https://i.sstatic.net/EumVO.png\"/></p>\n</div>",
            "votes": "17",
            "user": "joxeankoret",
            "time": "Jun 4, 2015 at 6:29",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Biswapriyo",
                    "text": "<span class=\"comment-copy\">Best alternative of BinDiff and works in IDA7+.</span>",
                    "time": null
                },
                {
                    "user": "c00000fd",
                    "text": "<span class=\"comment-copy\">Sounds like a great tool, but why tying it up to that IDA pro? How about at least IDA Free or Ghidra? Not everyone can afford to fork over a bunch of money that they want for it.</span>",
                    "time": null
                },
                {
                    "user": "joxeankoret",
                    "text": "<span class=\"comment-copy\">Because IDA is the de-facto tool for reverse engineering, IDA Free lacks a lot of features, Ghidra doesn't support Python 3.x and also because by the time I wrote Diaphora there wasn't any public version. I have some plans to port to Ghidra, but it's a huge amount of work. Feel free to try yourself.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Also, there is <a href=\"http://corelabs.coresecurity.com/index.php?module=Wiki&amp;action=view&amp;type=tool&amp;name=turbodiff\">Turbodiff</a>, it's an IDA pro plugin.\nHaven't used it yet, though so I can't say anything about the quality of the tool.</p>\n</div>",
            "votes": "10",
            "user": "Mellowcandle",
            "time": "Apr 21, 2013 at 18:56",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Mick",
                    "text": "<span class=\"comment-copy\">Do you know if this works with IDA 6.x? They only list IDA 4.9 and 5.x support.</span>",
                    "time": null
                },
                {
                    "user": "Anton Kochkov",
                    "text": "<span class=\"comment-copy\">Turbodiff is abandoned and doesn't work with latest IDA.</span>",
                    "time": null
                },
                {
                    "user": "asheeshr",
                    "text": "<span class=\"comment-copy\">Please add a short description about the plugin. Link-only answers are not considered answers.</span>",
                    "time": null
                },
                {
                    "user": "newgre",
                    "text": "<span class=\"comment-copy\">It's a binary diffing plugin for IDA Pro. I don't think anything of relevance is missing from this answer, no?</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@newgre: is that ultimately the same as PatchDiff2?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'd recommend <a href=\"http://code.google.com/p/patchdiff2\" rel=\"nofollow\">PatchDiff2</a> too, if you're using IDA Pro.</p>\n<p><b>Here is a description:</b></p>\n<p>PatchDiff2 is a plugin for the IDA dissassembler that can analyze two IDB files and find the differences between both. PatchDiff2 is free and fully integrates with the latest version of IDA (6.1) on Windows and Linux. The plugin can perform the following tasks :</p>\n<ul>\n<li>Display the list of identical functions</li>\n<li>Display the list of matched functions</li>\n<li>Display the list of unmatched functions (with the CRC)</li>\n<li>Display a flow graph for identical and matched functions</li>\n</ul>\n<p>The main purpose of this plugin is to be fast and give accurate results when working on a security patch or a hotfix. Therefore this tool is not made to find similar functions between two different programs. Patchdiff2 supports all processors that IDA can handle and is available in two versions: 32 bit and a 64 bit.</p>\n<p><b>To use all you need to do is:</b></p>\n<p>Unzip the two patch2diff zip and in it will be two folders holding two files for Linux and Windows just copy the patchdiff2.p64 and patchdiff2.plw to your plugins directory located in <b>C:\\Program Files\\IDA Pro Directory\\plugins\\ </b></p>\n<ul>\n<li>Open your executables you want to be diffed and save them as .idb(default).</li>\n<li>Open the .idb of the file (I noticed it fails when just diffing an exe) and in the IDA View-A tab go to Edit down to plugins and you should see PatchDiff2 just click on it and choose the secondary .idb you want to compare.</li>\n</ul>\n<p>Warning this takes a while and IDA will become unresponsive. In the end you'll have a few tabs, Matched functions, Unmatched Functions, Identical Functions.</p>\n</div>",
            "votes": "9",
            "user": "LUser",
            "time": "Nov 28, 2014 at 0:04",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm a big fan of the <a href=\"http://kdiff3.sourceforge.net/\" rel=\"nofollow noreferrer\">kdiff</a> route because it's quick and clean . Note: I use diffing for writing signatures on malware. Most of the time I need a simple visual of the different instructions. If you need to dig deeper go the BinDiff or DarunGrim route as mentioned by Mick.</p>\n<p>In order to use kdiff to diff the binaries you will need the disassembly output generate by IDA. The following script can be used to create the assembly output for all executables in the working directory. </p>\n<pre><code>import os \nimport subprocess\nimport glob\npaths = glob.glob(\"*.exe\")\nida_path = os.path.join(os.environ['PROGRAMFILES'], \"IDA\", \"idaw.exe\")\n\nfor file_path in paths:\n    subprocess.call([ida_path, \"-B\", file_path])\n</code></pre>\n<p>Execute the script. </p>\n<pre><code>C:\\Documents and Settings\\Administrator\\Desktop\\diff\\python make-asm.py\n\nThank you for using IDA. Have a nice day!\n\nC:\\Documents and Settings\\Administrator\\Desktop\\diff&gt;dir\n Directory of C:\\Documents and Settings\\Administrator\\Desktop\\diff\n\n10/25/2013  11:16 AM    &lt;DIR&gt;          .\n10/25/2013  11:16 AM    &lt;DIR&gt;          ..\n10/25/2013  11:16 AM            40,604 a.asm\n10/24/2013  08:35 AM             9,938 a.exe\n10/25/2013  11:16 AM           368,957 a.idb\n10/25/2013  11:16 AM            40,657 b.asm\n10/24/2013  08:35 AM             9,969 b.exe\n10/25/2013  11:16 AM           368,957 b.idb\n10/25/2013  11:15 AM               218 make-asm.py\n</code></pre>\n<p>Select the two .asm files, right click, Kdiff, Compare. Nice and simple output. </p>\n<p><img alt=\"r\" src=\"https://i.sstatic.net/efPZV.png\"/></p>\n</div>",
            "votes": "6",
            "user": "alexanderh",
            "time": "Oct 25, 2013 at 15:38",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Another option you could try is <a href=\"https://www.relyze.com/\" rel=\"nofollow noreferrer\">Relyze</a> <em>(Commercial, Standalone Windows desktop application)</em> which supports binary diffing. It matches functions between two Windows binaries and gives you a list of all equal, modified, removed and added functions, along with a percentage difference value so you can see how heavily modified any two matched functions are.</p>\n<p>The GUI displays the matched functions via interactive graphs so you can navigate them and see the changes. The two graphs can be synced as you navigate so clicking on an instruction in one graph will select the matched instruction, if any, in the other graph.</p>\n<p><img alt=\"Binary Diffing with Relyze\" src=\"https://i.sstatic.net/ixEBZ.png\"/></p>\n</div>",
            "votes": "3",
            "user": "QAZ",
            "time": "Jun 18, 2015 at 10:01",
            "is_accepted": false,
            "comments": [
                {
                    "user": "mirh",
                    "text": "<span class=\"comment-copy\">That's <a href=\"https://www.relyze.com/features.html\" rel=\"nofollow noreferrer\">only</a> available with a professional license (which somehow I cannot even find purchasable on their website).</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>As an open source alternative there's <a href=\"https://github.com/noseglasses/elf_diff\" rel=\"nofollow noreferrer\">elf_diff</a> which compares elf-files and generates html or pdf reports. It's available as a Python package.</p>\n</div>",
            "votes": "2",
            "user": "noseglasses",
            "time": "Oct 10, 2021 at 8:13",
            "is_accepted": false,
            "comments": [
                {
                    "user": "mimo31",
                    "text": "<span class=\"comment-copy\">It looks nice, but I didn't get it to work presumably because of <a href=\"https://github.com/noseglasses/elf_diff/issues/97\" rel=\"nofollow noreferrer\">this issue</a>.</span>",
                    "time": null
                }
            ]
        }
    ]
}