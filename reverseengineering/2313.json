{
    "title": "Attaching GDB to a specific fork",
    "link": "https://reverseengineering.stackexchange.com/questions/2313/attaching-gdb-to-a-specific-fork",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to reverse engineer a Linux binary that makes several <code>fork()</code> calls. I am using GDB 7.5 on Ubuntu. What I am trying to do with GDB is attach to a certain <code>fork()</code> (say the second call). Is the only way to do this to set <code>follow-fork-mode</code> to <code>child</code> and catch all calls to <code>fork</code> and manually switch it each time?</p>\n</div>",
    "votes": "10",
    "answers": 2,
    "views": "3k",
    "tags": [
        "linux",
        "gdb",
        "multi-process"
    ],
    "user": "Compster",
    "time": "Jun 22, 2013 at 1:27",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can also use <code>set detach-on-fork off</code>, as said in the documentation:</p>\n<blockquote>\n<p><code>set detach-on-fork MODE</code>\n       Tells gdb whether to detach one of the processes after a fork, or\n       retain debugger control over them both.</p>\n</blockquote>\n<p>The documentation says also this:</p>\n<blockquote>\n<p>If you choose to set <code>detach-on-fork</code> mode off, then GDB will retain\n  control of all forked processes (including nested forks).  You can list\n  the forked processes under the control of GDB by using the\n  <code>info inferiors</code> command, and switch from one fork to another by using\n  the <code>inferior</code> command</p>\n<p>To quit debugging one of the forked processes, you can either detach\n  from it by using the <code>detach inferiors</code> command (allowing it to run\n  independently), or kill it using the <code>kill inferiors</code> command.</p>\n</blockquote>\n</div>",
            "votes": "5",
            "user": "jvoisin",
            "time": "Jul 15, 2013 at 10:17",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>What you describe is how I've typically approached this.  Setting a breakpoint on <code>fork</code> itself provides a nice spot to change this mode, if necessary.</p>\n<p>Or, if the child threads / processes are \"stable\", you can switch to them after the fact with the <a href=\"http://sourceware.org/gdb/onlinedocs/gdb/Inferiors-and-Programs.html\" rel=\"nofollow\"><code>inferior</code> command</a>.</p>\n<p><a href=\"http://sourceware.org/gdb/onlinedocs/gdb/Forks.html\" rel=\"nofollow\">http://sourceware.org/gdb/onlinedocs/gdb/Forks.html</a></p>\n</div>",
            "votes": "2",
            "user": "Jonathon Reinhart",
            "time": "Jun 28, 2013 at 5:48",
            "is_accepted": false,
            "comments": []
        }
    ]
}