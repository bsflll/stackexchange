{
    "title": "Documenting reversed application",
    "link": "https://reverseengineering.stackexchange.com/questions/3069/documenting-reversed-application",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've been reversing a regularly updated application with various tools (mosty IDA, Olly) for a while now, and I always wondered how to document my findings. For example function names, static variables, relations, namespaces, fields, etc...maybe even changes trough version changes, but that's just an extra.</p>\n<p>The best thing I came up with is a local MediaWiki, where I create a new page/definition for every function, and stuff, but it's obviously pain in the ass, nearly impossible to maintain. There must be some industry standard right? I wonder if you guys know / use any tool like for this issue.</p>\n<p>Edit:\nHere is the structure I'm using now with in the Wiki :\n<img alt=\"MediaWiki Documentation structure\" src=\"https://i.sstatic.net/N4UBs.png\"/></p>\n<p><strong>If you know another solution, I'm looking forward for your answer as well :)</strong></p>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "370",
    "tags": [
        "ida",
        "tools",
        "history"
    ],
    "user": "Dominik Antal",
    "time": "Nov 25, 2013 at 11:17",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">This is virtually the same list of options as for reversing a file format. There are local Wikis as well, also text-based (without any) need for a running DB. IDA itself has a \"Notes\" view if you need it.</span>",
            "time": null
        },
        {
            "user": "perror",
            "text": "<span class=\"comment-copy\">possible duplicate of <a href=\"http://reverseengineering.stackexchange.com/questions/1937/how-do-you-store-your-data-about-a-binary-while-performing-analysis\">How do you store your data about a binary while performing analysis?</a></span>",
            "time": null
        },
        {
            "user": "Peter Andersson",
            "text": "<span class=\"comment-copy\">@perror definitely very close. I won't vote because it will kill the question immediately. It seems this question is more directed towards actually producing some sort of \"API\" documentation though?</span>",
            "time": null
        },
        {
            "user": "perror",
            "text": "<span class=\"comment-copy\">Yes, I might remove my vote because I am interested in answers about this topic anyway... Let see what happen.</span>",
            "time": null
        },
        {
            "user": "dingo_kinznerhook",
            "text": "<span class=\"comment-copy\">I don't think that this is a duplicate - the one perror pointed out is more about \"How do I store data from reversing?\" and this post addresses two questions - \"When you reverse something, what data do you find it important to record, and how do you record it?\"</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The way this usually works in my experience is that if you have a documentation need outside of the IDB database it's generally because you're trying to share information with other reverse engineers. For this, you may want to take a look at <a href=\"http://www.idabook.com/collabreate/\" rel=\"nofollow noreferrer\">collabREate</a> or the <a href=\"http://thunkers.net/~deft/code/toolbag/\" rel=\"nofollow noreferrer\">IDA toolbag</a>. The unfortunate truth is that a lot of these projects tend to slow down or die completely due to a lack of interest from the original authors.</p>\n<p>Now if your problem is completely centered around documentation, what I also find fairly common is to have header files with the function, class and structure definitions in them with <a href=\"http://www.doxygen.nl/\" rel=\"nofollow noreferrer\">doxygen-</a> or <a href=\"http://www.oracle.com/technetwork/java/javase/documentation/index-137868.html\" rel=\"nofollow noreferrer\">JavaDoc-</a>formatted comments in them. You then use doxygen to generate automatic documentation and class diagrams. This way the documentation becomes completely living, self-maintaining and easily navigated.</p>\n</div>",
            "votes": "4",
            "user": "albert",
            "time": "Dec 25, 2018 at 22:45",
            "is_accepted": true,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">perhaps you should answer that in the original question (or as well there).</span>",
                    "time": null
                },
                {
                    "user": "Peter Andersson",
                    "text": "<span class=\"comment-copy\">@0xC0000022L if this is closed I'll add the answer to perror's question.</span>",
                    "time": null
                },
                {
                    "user": "Dominik Antal",
                    "text": "<span class=\"comment-copy\">Thank you for your answer! I'll wait a little bit more before closing it.</span>",
                    "time": null
                },
                {
                    "user": "Peter Andersson",
                    "text": "<span class=\"comment-copy\">@Casual I think the unfortunate or sad truth is that there is no really awesome answer to this question. These sorts of projects pop up, gets abandoned, often due to lack of funding, and never reach the maturity to be the one go to solution.</span>",
                    "time": null
                },
                {
                    "user": "Dominik Antal",
                    "text": "<span class=\"comment-copy\">@PeterAndersson Yeah, I can hardly find anything on the  internetz about this. Thank you for your help anyway!</span>",
                    "time": null
                }
            ]
        }
    ]
}