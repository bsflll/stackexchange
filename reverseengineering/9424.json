{
    "title": "Simple type casting",
    "link": "https://reverseengineering.stackexchange.com/questions/9424/simple-type-casting",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to make this decompiled function look nicer but don't know how ?\nCan you please help me by telling steps to do the structure in ida?</p>\n<p>This is a dot product function. I want to change type of <code>__int64 a2@&lt;rsi&gt;, __int64 a3@&lt;rdx&gt;</code> to look more familiar.</p>\n<pre><code>void \n__usercall dot_prod(signed int a1@&lt;edi&gt;, __int64 a2@&lt;rsi&gt;, __int64 a3@&lt;rdx&gt;,\n                    __int128 _XMM0@&lt;xmm0&gt;, __int128 _XMM1@&lt;xmm1&gt;) \n{   \n  __int64 v5; // rax@2   double v6; // xmm0_8@2\n\n  if ( a1 &gt; 0 )   \n    {\n      v5 = 0LL;\n      v6 = 0.0;\n\n      do\n      {\n        v6 = v6 + *(double *)(a2 + 8 * v5) * *(double *)(a3 + 8 * v5);\n        ++v5;\n      } while ( a1 &gt; (signed int)v5 );   \n   } \n}\n</code></pre>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "988",
    "tags": [
        "ida"
    ],
    "user": "schrodinger",
    "time": "Jul 23, 2015 at 7:26",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Place cursor on a name of variable (in decompiled code window, you arrive there by using TAB in assembly window), press N. This will allow you to rename the entity your cursor stays on, including functions, variables, etc.\nPlace cursor on a name of variable, press Y. This will allow you to change its type.</p>\n<p>Regarding a2 and a3 in your specific example they look like arrays of doubles, \nso their type should be double*.</p>\n<p>I expect that the result of the line will be something like </p>\n<pre><code>v6 = v6 + a2[v5]*a3[v5];\n</code></pre>\n</div>",
            "votes": "0",
            "user": "w s",
            "time": "Jul 23, 2015 at 7:24",
            "is_accepted": true,
            "comments": [
                {
                    "user": "schrodinger",
                    "text": "<span class=\"comment-copy\">I know this...I mean what do you suggest as type here instead of __int64 a2@&lt;rsi&gt;</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">try double* as a types for a2 and a3</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">@schrodinger, if you're asking what the argument names should be, I'd recommend (in Hungarian Notation): <code>a1</code> = <code>nVectorLength</code>, <code>a2</code> = <code>pVector1</code>, <code>a3</code> = <code>pVector2</code>.</span>",
                    "time": null
                }
            ]
        }
    ]
}