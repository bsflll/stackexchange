{
    "title": "How to decompile an Objective-C static library (for iOS)?",
    "link": "https://reverseengineering.stackexchange.com/questions/3654/how-to-decompile-an-objective-c-static-library-for-ios",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to use IDA Pro v6.5 <s>(freeware)</s> (demo) to decompile an objective-c library compiled for ARM7-7S. I tried Hopper v2.8.8 (freeware) with no success. <br/><br/>\nI had no problem until I tried to display a pseudocode. In fact, I can't find the option for that as you can see on this screenshot : <img alt=\"enter image description here\" src=\"https://i.sstatic.net/0x93j.png\"/><br/>\nI believe to know that I can do it because IDA should support ARM decompilation... So my question is : How to decompile an objective-c library ? Or, Am I missing something ?</p>\n</div>",
    "votes": "11",
    "answers": 3,
    "views": "21k",
    "tags": [
        "ida",
        "decompilation",
        "arm"
    ],
    "user": "kl94",
    "time": "Nov 2, 2016 at 13:40",
    "comments": [
        {
            "user": "QAZ",
            "text": "<span class=\"comment-copy\">IDA Pro doesn't provide decompilation itself only disassembly, you will need the hexrays plugin in order to decompile in IDA Pro (or another third party decompiler plugin).</span>",
            "time": null
        },
        {
            "user": "kl94",
            "text": "<span class=\"comment-copy\">@0xC0000022L Yes I've done a mistake, I was talking about the demo version.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There is <a href=\"http://derevenets.com/\">SmartDec</a>, a native-code to C/C++ decompiler. It has two versions. Standalone and plugin to IDA. The latter supports all IDA's architectures, provides full GUI integration - is easy to work with -, makes use of <a href=\"https://reverseengineering.stackexchange.com/questions/175/what-is-a-flirt-signature\">IDA Flirt signatures</a> and will make use of runtime information if you use it together with <a href=\"https://github.com/deresz/funcap\">funcap</a>. There is also <a href=\"http://decompiler.fit.vutbr.cz/decompilation/\">Retargetable Decompiler</a>, an online decompiler developed at Brno University of Technology that supports x86, ARM, ARM+Thumb and MIPS and can decompile to C or Python. It provides not only the decompilation but packer and compiler information, extraction of debug information, call and flow graphs, and signature-based removal of statically linked library code. Its only problem is its input size limitation of 10MB.</p>\n<p>If those do not suffice your needs, you could also adapt or wait for the implementation of ARM support in either <a href=\"https://github.com/EiNSTeiN-/ida-decompiler\">Einstein's IDA Decompiler</a>, <a href=\"https://github.com/jcdutton/libbeauty\">libbeauty</a> - <a href=\"https://github.com/jcdutton/reference\">reference material</a> -, or <a href=\"http://sourceforge.net/projects/desquirr/\">desquirr</a> - as someone already <a href=\"http://www.embedded.com/design/real-time-and-performance/4023282/3/Decompiling-the-ARM-architecture-code\">did</a> but released no code. The first two are the most promising. You could also wait for <a href=\"http://hopperapp.com/\">Hopper</a> to improve it's ARM support. \nHowever, if you need to decompile it now, you'll have to purchase <a href=\"https://www.hex-rays.com/products/ida/\">IDA</a> and the <a href=\"https://www.hex-rays.com/products/decompiler/\">Hex-Rays Decompiler</a>, which is more than worth its cost - if you can afford it - and goes for about 3314 USD - including courier shipping - as of now for a named license. More informations about the purchase can be found in the link Mr.Skochinsky <a href=\"https://www.hex-rays.com/products/ida/order.shtml\">provided</a>.</p>\n</div>",
            "votes": "11",
            "user": "TDKPS",
            "time": "Feb 10, 2014 at 12:21",
            "is_accepted": true,
            "comments": [
                {
                    "user": "kl94",
                    "text": "<span class=\"comment-copy\">I've failed with all tools you've mentioned. I guess IDA Pro is the only one. Thanks for your time anyway</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<ol>\n<li>There's no \"freeware\" v6.5 (at least now, in 2014). You are probably using the demo.</li>\n<li>The decompiler is an additional plugin and is not included in the demo. You need to purchase IDA <em>and</em> the decompiler to access it.</li>\n</ol>\n<p>For purchasing IDA, <a href=\"https://www.hex-rays.com/products/ida/order.shtml\" rel=\"nofollow\">see here</a>.</p>\n</div>",
            "votes": "4",
            "user": "Igor Skochinsky",
            "time": "Feb 10, 2014 at 11:43",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I do mainly refer to the first answer and add:</p>\n<p><strong>Retargetable Decompiler</strong> is indeed working fine, tested it with ARM Binarys. It's only anvailable online.</p>\n<p><strong>SmartDec</strong> has moved to a new site: <a href=\"http://decompilation.info/\" rel=\"nofollow\">http://decompilation.info/</a> but is not currently able of decompiling ARM Platform.</p>\n</div>",
            "votes": "3",
            "user": "user3887",
            "time": "Feb 10, 2014 at 18:23",
            "is_accepted": false,
            "comments": [
                {
                    "user": "kl94",
                    "text": "<span class=\"comment-copy\">Retargetable Decompiler doesn't work for me, I get a \"File format of the input file is not supported.\" I don't know why, I trying to decompile an universal static library (.a) compiled for ARM7, ARM7S, and i386. Again, I guess IDA Pro is the only one... Thanks for your time</span>",
                    "time": null
                }
            ]
        }
    ]
}