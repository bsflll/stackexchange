{
    "title": "Split IDA segment into sub segments",
    "link": "https://reverseengineering.stackexchange.com/questions/21698/split-ida-segment-into-sub-segments",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm reversing a firmware, that comes in one big binary chunk(<code>.bin</code> file). </p>\n<p>After some reversing, I could identify that the big bin has two segments - text and data. Now I want to split the original segment into those two segments. </p>\n<p>For example:</p>\n<p>Original file segments:</p>\n<pre><code>Name   start   end\nROM    0x0     0x21bd\n</code></pre>\n<p>One big segment containing all the code and data. </p>\n<p>Desired result segments:</p>\n<pre><code> Name  start   end\n.text  0x0     0x11bd \n.data  0xc000  0xd000\n</code></pre>\n<p>I want to split the one big segment into two nonadjusted segments, like this. \nthe <code>.data</code> section should hold the bytes from the original <code>ROM</code> section. In other words, 0x11bd - 0x21bd from the original <code>ROM</code> section should be copied to \n0xc000 - 0xd000 of the new data section.</p>\n<p>Any ideas how can I achieve this?</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "1k",
    "tags": [
        "ida",
        "firmware",
        "idapython",
        "segmentation"
    ],
    "user": "macro_controller",
    "time": "Jul 17, 2019 at 14:49",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Open the segments window in IDA. Go to edit that one big segment you have. Change the name to <code>.text</code> and edit the permissions as applicable. Uncheck \"Move adjacent segments\" and \"Disable addresses\", this step is very important, it's what prevents the actual segment data from being deleted. Change the end address to be the end of the <code>.text</code> segment. Click ok and confirm the edit. Right click, and select \"Add segment\", set the name to <code>.data</code> and fill in the start and end addresses as the addresses it was previously loaded at. Then go to Edit -&gt; Segments -&gt; Move current segment to select the correct start address.</p>\n</div>",
            "votes": "1",
            "user": "Avery3R",
            "time": "Jul 18, 2019 at 2:19",
            "is_accepted": true,
            "comments": [
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">will this copy what is at 0x11be to 0xc000 as asked ?</span>",
                    "time": null
                },
                {
                    "user": "Avery3R",
                    "text": "<span class=\"comment-copy\">@blabb I edited it, it will now.</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">thanks good to know so that I can do it without 0x00 filler bytes inbetween</span>",
                    "time": null
                },
                {
                    "user": "macro_controller",
                    "text": "<span class=\"comment-copy\">I followed your instructions, but I keep getting .data: not enough free room at the target address. It seems that I get it only when I copy it to the address that I actually need, but if I copy it to other locations it works fine. Any ideas why?</span>",
                    "time": null
                },
                {
                    "user": "Avery3R",
                    "text": "<span class=\"comment-copy\">@Train What step do you get that error message during? When you move the segment or when you create it?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>i've always found it easier to split and join the file outside of ida to what is needed\nand just create segments using edit -&gt;segment-&gt;createSegment with proper start and end address  rather that dealing with move_segment headache which will keep on saying no room blah blah , bad base blah blah etc etc ..</p>\n<p>may be someone with better ida experience would give a proper ida way to do what you ask</p>\n<p>here is a simple splitter for your case</p>\n<pre><code>forig = open('f://somrom.bin' , 'rb')\npart1 = forig.read(0x11be)\nforig.seek(0x11be,0)\npart2 = forig.read(0x1000)\narr = bytearray(0xc000-0x11be)\n\nffinal = open('f:\\\\somromfinal.bin','wb')\nffinal.write(part1)\nffinal.write(arr)\nffinal.write(part2)\nffinal.close()\nforig.close()\n</code></pre>\n<p>you can check to see if it is split properly</p>\n<pre><code>xxd.exe -g 1 -l 16 -s 0x11b0 somrom.bin\n000011b0: 8c 08 31 2d 09 8a c1 7d 19 39 2b 83 e5 e3 57 ed  ..1-...}.9+...W.\n\nxxd.exe -g 1 -l 16 -s 0x11b0 somromfinal.bin\n000011b0: 8c 08 31 2d 09 8a c1 7d 19 39 2b 83 e5 e3 00 00  ..1-...}.9+..... \n\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;0x11be bf =00\n\nxxd.exe -g 1 -l 16 -s 0xc000 somromfinal.bin\n0000c000: 57 ed 37 31 e2 31 2d 98 18 6f 53 36 59 4e ad 92  W.71.1-..oS6YN..\n&lt;&lt;&lt;&lt;&lt; 0xc000 start with 0x57 ed\n</code></pre>\n<p>you can load this file in ida<br/>\nand just create three segments<br/>\n0000 to 11bd<br/>\n11be to bfff<br/>\nc000 to d000   </p>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "Jul 17, 2019 at 18:52",
            "is_accepted": false,
            "comments": []
        }
    ]
}