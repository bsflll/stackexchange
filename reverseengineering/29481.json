{
    "title": "Change iOS app binary file",
    "link": "https://reverseengineering.stackexchange.com/questions/29481/change-ios-app-binary-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to manipulate iOS binary file and change two strings in it. I used hex editor to search and change these strings. But after the binary file is uploaded and replaced with the origin app's binary file,  it closes immediately when I launch the app, even though I fixed mode and permission of binary, the problem still exists. any suggestions will be appreciated</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "445",
    "tags": [
        "arm",
        "ios",
        "arm64"
    ],
    "user": "Hojat Sajadinia",
    "time": "Oct 31, 2021 at 15:52",
    "comments": [
        {
            "user": "NirIzr",
            "text": "<span class=\"comment-copy\">This is likely because you invalidated the signature of the binary.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>All apps and binaries that are executed on Apple platforms need to be signed by key/certificate issued by Apple. By modifying a single byte in the app binaries, you have invalidated this signature and thus iOS will refuse to execute this binary.</p>\n<p>Look into the system log of the device, there you will find the error message about the invalid signature of the binary.</p>\n<p>Even on jailbroken devices, this signature is still checked. However, depending on the jailbreak, usually a shortcut to accept \"fake signed binaries\" is added by the jailbreak. Therefore, binaries signed by <code>ldid</code> or <code>ldid2</code> are accepted by the OS as valid signature. You can try to resign your binary with one of those tools and re-try.</p>\n<p>Additionally, I recommend not to overwrite the binary as this often causes cache problems. The recommended way if to delete the binary and then copy the new binary to the same place. This seems to avoid some problems.</p>\n</div>",
            "votes": "3",
            "user": "MarianD",
            "time": "Oct 31, 2021 at 18:23",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">NB: overwriting is known to cause problems with signing because the kernel caches some state based on the fileâ€™s inode which does not change if you overwrite the file in place, thus the recommendation to delete and make a new copy.</span>",
                    "time": null
                }
            ]
        }
    ]
}