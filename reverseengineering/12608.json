{
    "title": "How can I call a function that acts like __thiscall, except the caller cleans the stack?",
    "link": "https://reverseengineering.stackexchange.com/questions/12608/how-can-i-call-a-function-that-acts-like-thiscall-except-the-caller-cleans-th",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to call a function with a function pointer in C++, but I can't find any convention that fits it. Its stack arguments are (right to left):</p>\n<pre><code>func(float x, float y, int unk);\n</code></pre>\n<p>...but ecx needs to be pointing to a buffer it can use for output / storage. That would be __thiscall, but the caller cleans up the stack (adds 12 to esp). This is what I have right now:</p>\n<pre><code>((void(__thiscall*)(char*,float,float,int))(0x1234567))(a, b, c);\n</code></pre>\n<p>but it causes the application to crash because the stack isn't evened.</p>\n<p>How can I call this?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "849",
    "tags": [
        "x86",
        "c++",
        "calling-conventions"
    ],
    "user": "Lupe",
    "time": "May 8, 2016 at 17:06",
    "comments": [
        {
            "user": "peter ferrie",
            "text": "<span class=\"comment-copy\">that sounds more like a fastcall, if ecx points to an integer store</span>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">are you <i>sure</i> ecx is used to pass the buffer and not the class instance? please post a fragment of assembly.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Sounds like you have a variadic <code>__thiscall</code> function (printf-like). Those use <code>ecx</code> for <code>this</code> but the remaining arguments are pushed onto the stack and the caller cleans it up.</p>\n</div>",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "May 23, 2017 at 20:54",
            "is_accepted": true,
            "comments": []
        }
    ]
}