{
    "title": "How to recover randomly generated private key from a Program that implements Diffie Hellman Exchange",
    "link": "https://reverseengineering.stackexchange.com/questions/22646/how-to-recover-randomly-generated-private-key-from-a-program-that-implements-dif",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This program implements Diffie Hellman key Exchange, a pair of random private keys are generated every time the program runs. How should I go about finding the random number generation subroutine using a disassembler like IDA?</p>\n<p>Warning: The program is flagged as malware by Windows Defender.<br/>\nhxxps://drive.google.com/open?id=1uErzKPIV-HyOBunn0ecF6pehXJ_mDdGR</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "222",
    "tags": [
        "ida",
        "disassembly",
        "encryption"
    ],
    "user": "Deus Ex",
    "time": "Dec 6, 2019 at 11:47",
    "comments": [
        {
            "user": "0xec",
            "text": "<span class=\"comment-copy\">It's a PyInstaller generated executable. IDA is not quite the right tool here. To answer the question the RNG is <code>randint(2, 198)</code>. You can find it after you've extracted the pyc's from the exe.</span>",
            "time": null
        },
        {
            "user": "Deus Ex",
            "text": "<span class=\"comment-copy\">I extracted pyc files from the exe file, but I am unable to decompile DH file, decompiler says magic number mismatch.  How did you decompile DH file?</span>",
            "time": null
        },
        {
            "user": "0xec",
            "text": "<span class=\"comment-copy\">You need to add a 16 byte signature for Python 3.7 at the beginning of the pyc. Without that the decompiler won't recognize it as a pyc file.</span>",
            "time": null
        }
    ],
    "answers_data": []
}