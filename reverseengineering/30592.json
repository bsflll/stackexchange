{
    "title": "Disassemble specific mach-o function",
    "link": "https://reverseengineering.stackexchange.com/questions/30592/disassemble-specific-mach-o-function",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a mach-o binary and using <code>llvm-objdump</code> version 9 I can disassemble it.  I would like to disassemble only a single function though.</p>\n<p>If I display the symbol table with <code>--syms</code> I can see the function I would like to disassemble:</p>\n<pre><code>0000000100005a54 l     F __TEXT,__text -[ViewController isValidPin:]\n</code></pre>\n<p>however I cannot work out the proper command to do this.</p>\n<p>I have tried the following options which all just result in the usage being displayed and no indication what the issue is with the command:</p>\n<ul>\n<li><code>llvm-objdump-9 --dis-symname \"-[ViewController isValidPin:]\"</code></li>\n<li><code>llvm-objdump-9 --macho --dis-symname \"-[ViewController isValidPin:]\"</code></li>\n<li><code>llvm-objdump-9 --macho --dis-symname \"isValidPin\"</code></li>\n<li><code>llvm-objdump-9 --macho --dis-symname \"- isValidPin\"</code></li>\n<li><code>llvm-objdump-9 --macho --dis-symname \"- isValidPin:\"</code></li>\n<li><code>llvm-objdump-9 --macho --dis-symname \"-isValidPin:\"</code></li>\n</ul>\n<p>If I use <code>--disassemble-functions</code> with all of the above variations on the command name it just shows all the disassembly and not just <code>isValidPin</code>, including if I add the <code>--demangle</code> flag.</p>\n<p>If I try and do it using --start address, i.e.:</p>\n<pre><code>llvm-objdump-9 --macho --start-address=100005a54\n</code></pre>\n<p>or <code>0x100005a54</code> I get the following error:</p>\n<pre><code>llvm-objdump-9: for the   --start-address option: '100005a54' value invalid for ulong argument!\n</code></pre>\n<p>If I convert that to decimal instead it just shows the usage again. If I add a stop address as well it shows the usage regardless of whether that is in hex or dec.</p>\n<p>I came across <a href=\"https://stackoverflow.com/questions/58450076/how-can-i-make-objdump-disassemble-from-a-specified-start-address-on-macos-catal\">this</a> similar question however it is trying to do this on macOS and also the answer there is just suggesting what I have tried.</p>\n<p>The only other mention I can find of <code>llvm-objdump</code> on here is me answering another question.</p>\n<p>Googling just seems to lead me to different versions of the man page or discussion on commits to the source.</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "819",
    "tags": [
        "disassembly",
        "objdump",
        "mach-o",
        "llvm"
    ],
    "user": "Jon",
    "time": "Jul 4, 2022 at 10:29",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I just tested this on a sample binary using single quotes around the sym name:</p>\n<p><code>0000d2a0 l     F __TEXT,__text -[MasterViewController managedObjectContext]</code></p>\n<pre><code>$ llvm-objdump-9.0 -m -d --dis-symname '-[MasterViewController managedObjectContext]' MachO-iOS-armv7s-Helloworld \nMachO-iOS-armv7s-Helloworld:\n(__TEXT,__text) section\n-[MasterViewController managedObjectContext]:\n    d2a0:   82 b0   sub sp, #8\n    d2a2:   43 f6 2a 12 movw    r2, #14634\n    d2a6:   c0 f2 00 02 movt    r2, #0\n    d2aa:   7a 44   add r2, pc\n    d2ac:   01 90   str r0, [sp, #4]\n    d2ae:   00 91   str r1, [sp]\n    d2b0:   01 98   ldr r0, [sp, #4]\n    d2b2:   11 68   ldr r1, [r2]\n    d2b4:   08 44   add r0, r1\n    d2b6:   00 68   ldr r0, [r0]\n    d2b8:   02 b0   add sp, #8\n    d2ba:   70 47   bx  lr\n</code></pre>\n<p>Maybe single quotes are the missing piece.</p>\n</div>",
            "votes": "0",
            "user": "Mega Tonnage",
            "time": "Jul 4, 2022 at 23:32",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Jon",
                    "text": "<span class=\"comment-copy\">Thank you Mega Tonnage!  The problem was that I had not included -d.  As the description for --dis-symname is \"disassemble just this symbol's instructions (requires -macho)\" I wrongfully assumed you wouldn't also have to tell the command to disassemble with -d but that was pretty much the only combination I hadn't tried.  It works with \" or ' as long as you include -d.  Thanks again.</span>",
                    "time": null
                }
            ]
        }
    ]
}