{
    "title": "Getting helpful information on classes in Ghidra?",
    "link": "https://reverseengineering.stackexchange.com/questions/30471/getting-helpful-information-on-classes-in-ghidra",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm an intern at an engineering firm that's being contracted to decompile some ELF32 files on an ARM device compiled with GCC. Currently, we're using Ghidra, but no one at the firm (including me) really has any experience with decompiling. The source code was written in C++ but we're having trouble getting good information related to the classes used in the executables (like class relationships, structures of objects, figuring out functions called from vtables). I've seen OOPAnalyzer, but it doesn't work for ELF files (or at least that's what it said when I tried it out). I've also used Cpp-Class-Analyzer on Github, but I ran into a dead end installing it. Are there any tools out there (or ones built into Ghidra) that you would recommend to get this sort of information?</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "785",
    "tags": [
        "decompilation",
        "c++",
        "ghidra",
        "tools"
    ],
    "user": "Josh Tint",
    "time": "Jun 3, 2022 at 22:52",
    "comments": [
        {
            "user": "anon",
            "text": "<span class=\"comment-copy\">When you say you ran into dead end installing Cpp-Class-Analyzer what do you mean? After compiling it you just install it as an extension in Ghidra which is all supported through the Ghidra API. Do you actually mean you ran into a dead end building the plugin itself? Or physically pressing \"install extension\"? And what version of Ghidra were you trying to install the extension for?</span>",
            "time": null
        },
        {
            "user": "Josh Tint",
            "text": "<span class=\"comment-copy\">I've been in an extensive discussion on Github over what the problem could be exactly, but essentially the plugin doesn't show up after the configure experimental window in the code browser, even though it shows up as being properly installed.</span>",
            "time": null
        }
    ],
    "answers_data": []
}