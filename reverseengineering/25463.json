{
    "title": "Instruction trace using frida in android emulator",
    "link": "https://reverseengineering.stackexchange.com/questions/25463/instruction-trace-using-frida-in-android-emulator",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>i have a emulator named \"Ldplayer\" in my windows os and I'm trying to log all instructions executed by the app that uses ARM JNI libraries. basically, the app is running in an x86 emulator and only has arm JNI Libs, so emulation is used for the ARM Libs.</p>\n<pre><code>import frida, sys\nss = \"\"\"\nJava.perform(function() {\n    const System = Java.use('java.lang.System');\n    const Runtime = Java.use('java.lang.Runtime');\n    const VMStack = Java.use('dalvik.system.VMStack');\n\n    System.loadLibrary.implementation = function(library) {\n        try {\n            console.log('System.loadLibrary(\"' + library + '\")');\n            const loaded = Runtime.getRuntime().loadLibrary0(VMStack.getCallingClassLoader(), library);\n            return loaded;\n        } catch(ex) {\n            console.log(ex);\n        }\n    };\n    \n    System.load.implementation = function(library) {\n        try {\n            console.log('System.load(\"' + library + '\")');\n            const loaded = Runtime.getRuntime().load0(VMStack.getCallingClassLoader(), library);\n            return loaded;\n        } catch(ex) {\n            console.log(ex);\n        }\n    };\n});\n\"\"\"\ndevice = frida.get_device_manager().add_remote_device('127.0.0.1:27042')\npid = device.spawn([\"com.testapp\"])\nsession = device.attach(pid)\nscript = session.create_script(ss)\nscript.load()\ndevice.resume(pid)\nsys.stdin.read()\n</code></pre>\n<p>this code list all libraries loaded when the app starts, but when i do</p>\n<p><code>Module.findBaseAddress('libtest.so');</code></p>\n<p>it always returns null, in the end of the day i just want to log all the instructions being executed by the process so i can get the faulty instruction and search it up in the ida to patch it.\nif there's any other tool i can achieve the same than please suggest me also, process don't support attaching a debugger!</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "1k",
    "tags": [
        "debugging",
        "x86",
        "android",
        "arm",
        "frida"
    ],
    "user": "Ronny",
    "time": "Jul 9, 2020 at 14:18",
    "comments": [
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">Usually module names don't end with <code>.so</code>. I would try <code>libtest</code> or <code>test</code> as module name.</span>",
            "time": null
        },
        {
            "user": "Ronny",
            "text": "<span class=\"comment-copy\">hi, the frida dev told that it doesn't seeks for emulated process</span>",
            "time": null
        },
        {
            "user": "Ronny",
            "text": "<span class=\"comment-copy\">can u suggest me some other tool with which i can get logs of all the instructions executed by the process until it crashes finally ? i cant attach a debugger but i can hook</span>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">Why not simply using a rooted Android device?</span>",
            "time": null
        },
        {
            "user": "Ronny",
            "text": "<span class=\"comment-copy\">its rooted by default</span>",
            "time": null
        }
    ],
    "answers_data": []
}