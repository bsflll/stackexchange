{
    "title": "Adding Backlink for XREF in IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/2931/adding-backlink-for-xref-in-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have an indirect call to a function. I traced the program and added the target to the xref, so this works fine. The problem is though, that on the position where the call is, there is no link shown. I thought, that, when I add an XREF, both positions are shown, because this is also the behaviour with the other referenzes, IDA automatically finds out.</p>\n<p>To illustrate what I mean:</p>\n<p>The call is here without showing me where it points to:</p>\n<pre><code>CODE:004A3F07 00C                 call    dword ptr [edx+28h]\n</code></pre>\n<p>The xref I added is here showing the link:</p>\n<pre><code>CODE:004A3390     DecryptMemory proc near            ; CODE XREF: sub_4A3EC0:loc_4A3F07 P\n</code></pre>\n<p>Is it possible to make IDA show the reference on both addresses? I know I can create a manual xref there as well, but then IDA creates a label as well, which makes it a bit confusing, when revisting. I tried to remove the label, but this doesn't work either (would this be possible?).</p>\n</div>",
    "votes": "8",
    "answers": 2,
    "views": "1k",
    "tags": [
        "ida"
    ],
    "user": "Devolus",
    "time": "Oct 20, 2013 at 10:58",
    "comments": [
        {
            "user": "ekse",
            "text": "<span class=\"comment-copy\">Did you try adding the xref the other way around?</span>",
            "time": null
        },
        {
            "user": "Devolus",
            "text": "<span class=\"comment-copy\">Yes. That's why I said, that a label will be assigned. The problem is, that a lable is confusing in this case, because it looks as if this is a jump target, which it isn't. I guess it's still better than nothing, but I though that XREFs work in both directions, not only one.</span>",
            "time": null
        },
        {
            "user": "Trass3r",
            "text": "<span class=\"comment-copy\">Just create a comment like this in addition to the <code>fl_CN</code> xref: <a href=\"https://gist.github.com/OALabs/04ef6b2d6203d162c5b3b0eefd49530c#file-revil_strings-py-L37\" rel=\"nofollow noreferrer\">gist.github.com/OALabs/â€¦</a></span>",
            "time": null
        },
        {
            "user": "Trass3r",
            "text": "<span class=\"comment-copy\">You are right, adding a back ref will create an assembly label at the callsite. Interestingly it doesn't accept an <code>fl_F</code> xref.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>IDA does not automatically show the xref existence at the source as you are claiming. In most cases it's not necessary, as the destination is usually printed as part of the instruction or data item.</p>\n<p>However, for resolved indirect calls the <em>processor module</em> may display a comment to help the user. For some processors (including x86) you can use the \"Change callee address\" plugin (<kbd>Alt+F11</kbd>) to manually set the destination of an indirect call. It adds both an xref and makes the processor module print an auto-comment.</p>\n</div>",
            "votes": "7",
            "user": "Igor Skochinsky",
            "time": "Oct 20, 2013 at 21:51",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Devolus",
                    "text": "<span class=\"comment-copy\">I didn't claim that, quite on the contrary, I was complaining, that it doesn't do it. ;) Nevertheless, I try your suggestion with <code>Alt-F11</code> and see if that helps. Thanks.</span>",
                    "time": null
                },
                {
                    "user": "Trass3r",
                    "text": "<span class=\"comment-copy\">In addition that command also annotates function arguments. Is it possible to call <code>callee</code> programmatically?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can create a free-form comment mentioning \"004A3390\" at 004A3F07. Anything that remotely resembles a valid reference is clickable in IDA Pro. Double-clicking 004A3390 in your comment will take you to the location.</p>\n</div>",
            "votes": "2",
            "user": "Vitaly Osipov",
            "time": "Oct 22, 2013 at 9:46",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Devolus",
                    "text": "<span class=\"comment-copy\">Yes, but it will not be updated if I change the name, and it is now show in the target as an XREF. I use this for now as a workaround, resp. adding manually the XREFs on both sides.</span>",
                    "time": null
                }
            ]
        }
    ]
}