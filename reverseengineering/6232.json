{
    "title": "Reverse engineering and programming byte-by-byte on mobile OSs?",
    "link": "https://reverseengineering.stackexchange.com/questions/6232/reverse-engineering-and-programming-byte-by-byte-on-mobile-oss",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I can't find any disassembling programs for the various binary formats out there that can run on OSes like Android, iOS, Blackberry, etc. These are the only devices I have access to, and I am trying to learn assembly and very low-level programming for retro-computers architectures (NES, SNES, Genesis, PSX, N64, etc.).</p>\n<p>I managed to find one hex editor for Android that does the job well enough. It's entirely possible to load up any binaries there and hand-disassemble them (meaning look at each byte and an opcode table, etc.). </p>\n<p>Doing so, is it possible that one can completely reverse engineer, say, a game and generate some form of assembly-textual source by stepping each machine byte(s) back to assembly instructions that can be re-programmed then back to the machine executable bytes/data/etc.?</p>\n<p>What I'm asking is, is this possible or is there a step I am missing?</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "341",
    "tags": [
        "machine-code"
    ],
    "user": "TomHardyBoyyy",
    "time": "Oct 15, 2014 at 7:31",
    "comments": [
        {
            "user": "Willem Hengeveld",
            "text": "<span class=\"comment-copy\">I think you should lookup the cpu type of your device, and check if it is in  <a href=\"https://www.hex-rays.com/products/ida/processors.shtml\" rel=\"nofollow noreferrer\">this</a> list.</span>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">If you think it be useful if there was a disassembler for (Insert Platform Here), and there is none - or they do not work the way you'd like - then writing one is a good exercise. It will make you <i>intimately</i> familiar with the system.</span>",
            "time": null
        },
        {
            "user": "user45891",
            "text": "<span class=\"comment-copy\">I'd imagine that doing software development or reverse engineering on a tablet isn't fun. It's probably easier to buy some old laptop. But on question: Yes surely it is possible. Is it doable in an adequate timeframe? Hell no</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><a href=\"http://www.hexblog.com/?p=82\" rel=\"nofollow noreferrer\">Hex-Rays ported IDA to iOS several years ago</a>:</p>\n<p><img alt=\"IDA on iOS\" src=\"https://i.sstatic.net/xZLpV.jpg\"/></p>\n<p>It's not publicly available, but (from <a href=\"http://www.hexblog.com/?p=82#comment-652\" rel=\"nofollow noreferrer\">http://www.hexblog.com/?p=82#comment-652</a>) --</p>\n<blockquote>\n<p>if you have a current ida license and want to play (just to\n  play) with it, feel free to send a request to the support</p>\n</blockquote>\n</div>",
            "votes": "2",
            "user": "Jason Geffner",
            "time": "Sep 14, 2014 at 15:45",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><a href=\"http://rada.re\" rel=\"nofollow\">radare2</a> is running natively on:</p>\n<ul>\n<li>Android</li>\n<li>iPhone</li>\n<li><a href=\"https://twitter.com/trufae/status/379388265704742912\" rel=\"nofollow\">firefoxOS</a></li>\n</ul>\n<p>If you don't like reversing on your device, you can spawn a web interface, and play around with your device, from your web browser, on your computer.</p>\n<p>And it's a free software :)</p>\n<p><img alt=\"r2 on Android\" src=\"https://pbs.twimg.com/media/Bt_cUjOIYAAA_3r.jpg\"/></p>\n</div>",
            "votes": "0",
            "user": "jvoisin",
            "time": "Jan 13, 2015 at 19:31",
            "is_accepted": false,
            "comments": []
        }
    ]
}