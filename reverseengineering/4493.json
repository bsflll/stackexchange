{
    "title": "Any programs that can convert textual ones and zeroes to full comparison bytes?",
    "link": "https://reverseengineering.stackexchange.com/questions/4493/any-programs-that-can-convert-textual-ones-and-zeroes-to-full-comparison-bytes",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>since the byte is the lowest addressable datum and bit rotating/flipping can come in to play here, are there any programs that can enable you to write ones and zeroes (binary), and after every 8 of them it can write the corresponding byte based on measuring textual ASCII values?</p>\n<p>For example, I write:</p>\n<p>10010011 and the program reads every character (which is 1 byte) and checks an ASCII table to see if it's a one or zero ... when known, it records the data. When you've written 8 of them it then writes the corresponding byte value from measured input of ASCII 1s and 0s to a file. In other words it can create a byte with the total measured value of the textual ASCII to bit flipping integer, such as through fstream or such.</p>\n<p>Any programs that can do this? I ask because I want to actually be able to write opcodes bit-by-bit, not byte-by-byte. I'm sure what I'm saying here has to be possible in some way.</p>\n</div>",
    "votes": "-1",
    "answers": 3,
    "views": "144",
    "tags": [
        "tools",
        "machine-code",
        "binary"
    ],
    "user": "OllyDebugger",
    "time": "Jun 3, 2014 at 9:15",
    "comments": [
        {
            "user": "0xec",
            "text": "<span class=\"comment-copy\">You need to use a combination of <code>bitshifts</code> and <code>bitwise or</code> to generate a <code>byte</code> from given <code>bits</code></span>",
            "time": null
        },
        {
            "user": "OllyDebugger",
            "text": "<span class=\"comment-copy\">Yes, but you know what I'm saying here? I would like to type these as text in an editor program and have it produce the equivalent byte based on input ones and zeroes. I am not sure on how to program this ... I am NOT asking for advice (wouldn't hurt), but merely asking if there's any programs that can do this.</span>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">Unless I misunderstand your purpose, it seems <i>extremely</i> simple to write such a program in, oh, I probably could do it in various flavours of Basic, in Z80, ARM, 68000, or 8x86 assembler, in C or in Javascript. I probably forgot a few languages.</span>",
            "time": null
        },
        {
            "user": "nrz",
            "text": "<span class=\"comment-copy\">Here's an example [trivial] program (bash script) with an example input, produces 40 7F:  <code>echo 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 &gt;foo</code>, <code>cat foo | tr -d ' ' | sed 's/\\(0\\|1\\)\\{8\\}/&amp;\\n/g' | xargs -I{} echo 'ibase=2;obase=10000;{}' | bc</code></span>",
            "time": null
        },
        {
            "user": "BraveNewCurrency",
            "text": "<span class=\"comment-copy\">I think people are downvoting this question because <i>nobody</i> writes in binary directly. Hex notation is more compact, supported by more tools, and is still quite trivial to do bit flips programatically or in your head. (i.e. writing a program to flip a hex bit is very similar to the example programs below.)  This app will help you practice your Hex skills: <a href=\"https://play.google.com/store/apps/details?id=com.q42.flippybitandtheattackofthehexadecimalsfrombase16\" rel=\"nofollow noreferrer\">play.google.com/store/apps/â€¦</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Yes, <a href=\"http://www.sweetscape.com/010editor/\" rel=\"nofollow noreferrer\">010 Editor</a> allows you to do this:</p>\n<p><img alt=\"010 Editor\" src=\"https://i.sstatic.net/thNIW.png\"/></p>\n<p>Even though I wrote ASCII text in binary above, you could instead use the same interface to write machine code bit-by-bit.</p>\n</div>",
            "votes": "3",
            "user": "Jason Geffner",
            "time": "May 31, 2014 at 22:15",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The program <code>rax2</code> (part of <a href=\"http://radare.org\" rel=\"nofollow\">radare2</a>) can do this easily:</p>\n<pre><code>rax2 10010011b\n</code></pre>\n<p>The above will output the hex value of the binary string, in the example, <code>0x83</code></p>\n<pre><code>rax2 -b 01000011\n</code></pre>\n<p>The above will output the string represented by the binary, e.g. <code>C</code></p>\n</div>",
            "votes": "2",
            "user": "6EQUJ5",
            "time": "Jun 3, 2014 at 0:45",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>windbg </p>\n<pre><code>lkd&gt; r $t0 = 0y001000001 ; r $t1 =0; .while (@$t1 &lt; 0n26 ) { !grep -e \"Chars\" -c \".formats @$t0\"; r $t0 = @$t0 + 0y1; r $t1 = @$t1+1;}\n  Chars:   ...A\n  Chars:   ...B\n  Chars:   ...C\n  Chars:   ...D\n  Chars:   ...E\n  Chars:   ...F\n  Chars:   ...G\n  Chars:   ...H\n  Chars:   ...I\n  Chars:   ...J\n  Chars:   ...K\n  Chars:   ...L\n  Chars:   ...M\n  Chars:   ...N\n  Chars:   ...O\n  Chars:   ...P\n  Chars:   ...Q\n  Chars:   ...R\n  Chars:   ...S\n  Chars:   ...T\n  Chars:   ...U\n  Chars:   ...V\n  Chars:   ...W\n  Chars:   ...X\n  Chars:   ...Y\n  Chars:   ...Z\n</code></pre>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "Jun 1, 2014 at 8:00",
            "is_accepted": false,
            "comments": []
        }
    ]
}