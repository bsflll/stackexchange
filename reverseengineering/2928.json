{
    "title": "How can I locate exported functions of an EXE or DLL? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/2928/how-can-i-locate-exported-functions-of-an-exe-or-dll",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>Closed</b>. This question needs <a href=\"/help/closed-questions\">details or clarity</a>. It is not currently accepting answers.\n                                \n                            </div>\n</div>\n</div>\n</div>\n</div>\n<hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n<div class=\"fw-nowrap fc-black-500\">\n<div class=\"d-flex fd-column lh-md\">\n<div class=\"mb0 d-flex\">\n<div class=\"flex--item mr8\">\n<svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\"><path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\"></path></svg>\n</div>\n<p><b>Want to improve this question?</b> Add details and clarify the problem by <a href=\"/posts/2928/edit\">editing this post</a>.</p>\n</div>\n<div class=\"mb0 mt6 d-flex\">\n<p class=\"ml24 pl2\">Closed <span class=\"relativetime\" title=\"2013-11-01 06:29:41Z\">11 years ago</span>.</p>\n</div>\n<div class=\"ml24 pl2\">\n</div>\n</div>\n</div>\n<div class=\"mt24 d-flex gsx gs8\">\n<a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/2928/edit\">\n                        Improve this question\n                    </a>\n</div>\n</aside>\n</div>\n<p>I am trying to do some experimenting with certain system files (DLLs, EXEs) in Windows and would like to know how I can get information about the functions that they contain. I want to be able to call some of them just as if Windows does. How could one do this? </p>\n<p>I guess I would need to know what the function names are, and how to call the functions by their names, and what parameters to pass.</p>\n</div>",
    "votes": "-2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "windows",
        "pe",
        "c++",
        "symbols"
    ],
    "user": "user1632018",
    "time": "11 years ago",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Get the functions? That is, the function names, their relative addresses, their addresses after being loaded into a process, the arguments they require? It's unclear what you are asking.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><strong>TL;DR</strong> you can call anything, locating the right part of code is the hard part.</p>\n<h1>export table</h1>\n<p>If you mean 'just as Windows does', then you mean the functions of the DLL that are available to the others, ie the exported ones? in this case, you need to parse the export table - check <a href=\"http://code.google.com/p/pefile/source/browse/trunk/pefile.py#3349\" rel=\"noreferrer\">pefile</a> for a readable and reliable implementation.</p>\n<h1>locating any function</h1>\n<h2>IDA</h2>\n<p>If you actually mean 'all the functions, including the internal ones', then you need to disassemble and tell the difference from code and data. in this case, your best bet is to open the files in IDA - with symbols preferrably - and export the function list.</p>\n<h2>manually</h2>\n<p>If you want to do that manually, then you need your own smart disassembler, which is far from trivial: sometimes, compilers generate some code that doesn't immediately look like parts of a function.</p>\n<h2>calling identified functions</h2>\n<p>Once you've located the functions, you can just call them directly, without the need of injection, but you have to make sure you have the exact same version of the DLL. <a href=\"https://code.google.com/p/corkami/source/browse/trunk/src/PE/hard_imports.asm\" rel=\"noreferrer\">hard_imports</a> use such a method to call pieces of code directly.</p>\n</div>",
            "votes": "8",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Jongware",
                    "text": "<span class=\"comment-copy\">Good answer, but: <i>can</i> you actually call functions externally that are not exported? The usual function, <code>GetProcAddress</code>, needs either an exported name or ordinal value.</span>",
                    "time": null
                },
                {
                    "user": "user1632018",
                    "text": "<span class=\"comment-copy\">I am geussing if they are not exported than you would need to inject into the process.</span>",
                    "time": null
                },
                {
                    "user": "user1632018",
                    "text": "<span class=\"comment-copy\">BTW thanks Ange. That helped. I did mean the exported functions. I actually originally had that in the description then decided to change it thinking others would know what I am talking about.</span>",
                    "time": null
                }
            ]
        }
    ]
}