{
    "title": "Found the adress of a function LIBC without GDB",
    "link": "https://reverseengineering.stackexchange.com/questions/19345/found-the-adress-of-a-function-libc-without-gdb",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>How to calculate the address of a function in the LIBC, when ASLR is not active.\nI only have the address where to load the LIBC (with <code>ldd /bin/bash</code>).</p>\n<p>Thank you for the explanations</p>\n<p><strong>EDIT:</strong></p>\n<p>When I use your method I do not get the good result, although it is good in general (I do not understand why)</p>\n<p>libc base adress</p>\n<p><code>ldd ch33\n        linux-gate.so.1 =&gt;  (0xb7fff000)\n        libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xb7e46000)\n        /lib/ld-linux.so.2 (0x80000000)\n</code></p>\n<p>system offset:</p>\n<p><code>gdb -q /lib/i386-linux-gnu/libc.so.6\ngdb$ print system\n$1 = {&lt;text variable, no debug info&gt;} 0x40310 &lt;__libc_system&gt;\n</code></p>\n<p>I then calculate <code>0x40310 + 0xb7e46000 = 0xb7e86310</code></p>\n<p>However, i should get <code>0xb7e64310</code></p>\n<p>because:\n<code>~$ gdb ch33\ngdb$ r\nStarting program: /challenge/app-systeme/ch33/ch33\n...\ngdb$ p system\n$1 = {&lt;text variable, no debug info&gt;} 0xb7e64310 &lt;__libc_system&gt;\n</code></p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "5k",
    "tags": [
        "libc"
    ],
    "user": "ken",
    "time": "Sep 15, 2018 at 14:48",
    "comments": [
        {
            "user": "0x01Brain",
            "text": "<span class=\"comment-copy\">Did you found an answer for this, I also get randomized addresses for libc functions. I checked ASLR in my system its disabled + binary is compiled with -fno-stack-protector flag so I don't know why libc addresses changes, did you found an answer?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This can be done using </p>\n<p>objdump:</p>\n<pre><code>$ objdump -TC /lib/x86_64-linux-gnu/libc.so.6 | grep \" printf$\"\n\n0000000000064e80 g    DF .text  00000000000000c3  GLIBC_2.2.5 printf\n</code></pre>\n<p>readelf:</p>\n<pre><code>$ readelf -Ws /lib/x86_64-linux-gnu/libc.so.6 | grep \" printf@@GLIBC_2.2.5\"\n   627: 0000000000064e80   195 FUNC    GLOBAL DEFAULT   13 printf@@GLIBC_2.2.5\n</code></pre>\n<p>nm:</p>\n<pre><code>$ nm -D /lib/x86_64-linux-gnu/libc.so.6 | grep \" printf$\"\n0000000000064e80 T printf\n</code></pre>\n<p>gdb:</p>\n<pre><code>$ ldd ./shellpointcode               \n    linux-vdso.so.1 (0x00007fff3f1e1000)\n    libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f3f9213f000)\n    /lib64/ld-linux-x86-64.so.2 (0x00007f3f92732000)\n$ gdb -q /lib/x86_64-linux-gnu/libc.so.6\npwndbg: loaded 171 commands. Type pwndbg [filter] for a list.\npwndbg: created $rebase, $ida gdb functions (can be used with print/break)\nReading symbols from /lib/x86_64-linux-gnu/libc.so.6...Reading symbols from /usr/lib/debug//lib/x86_64-linux-gnu/libc-2.27.so...done.\ndone.\npwndbg&gt; print printf\n$1 = {int (const char *, ...)} 0x64e80 &lt;__printf&gt;\n</code></pre>\n<p>Then the effective address of <code>printf</code> would be </p>\n<pre><code>0x64e80+0x7f3f9213f000 = 0x7f3f921a3e80\n</code></pre>\n</div>",
            "votes": "1",
            "user": "sudhackar",
            "time": "Sep 15, 2018 at 15:25",
            "is_accepted": true,
            "comments": [
                {
                    "user": "ken",
                    "text": "<span class=\"comment-copy\">This method does not work, I edited my message to see</span>",
                    "time": null
                },
                {
                    "user": "julian",
                    "text": "<span class=\"comment-copy\">The title of the question says “without gdb”</span>",
                    "time": null
                },
                {
                    "user": "sudhackar",
                    "text": "<span class=\"comment-copy\">@ken The loading addresses are different sometimes in gdb and ldd although idk why</span>",
                    "time": null
                },
                {
                    "user": "sudhackar",
                    "text": "<span class=\"comment-copy\">@SYS_V I have edited the answer to keed gdb as the last option.</span>",
                    "time": null
                }
            ]
        }
    ]
}