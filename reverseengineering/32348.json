{
    "title": "How many bytes allocated for buffer?",
    "link": "https://reverseengineering.stackexchange.com/questions/32348/how-many-bytes-allocated-for-buffer",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There is start of function:</p>\n<pre><code>cseg01:0001F4C8 Check_CDRom     proc near               ; CODE XREF: Init+Ap\ncseg01:0001F4C8\ncseg01:0001F4C8 var_24          = byte ptr -24h\ncseg01:0001F4C8\ncseg01:0001F4C8                 push    edx\ncseg01:0001F4C9                 sub     esp, 20h\ncseg01:0001F4CC                 mov     eax, offset sub_1F5A4\ncseg01:0001F4D1                 mov     edx, cs\ncseg01:0001F4D3                 call    _harderr_\ncseg01:0001F4D8                 mov     char_disk_letter, 43h ; 'C'\ncseg01:0001F4DF\ncseg01:0001F4DF loc_1F4DF:                              ; CODE XREF: Check_CDRom+60j\ncseg01:0001F4DF                 xor     eax, eax\ncseg01:0001F4E1                 mov     al, char_disk_letter\ncseg01:0001F4E6                 push    eax\ncseg01:0001F4E7                 push    offset aCDataTitle_phd ; \"%c:\\\\data\\\\title.phd\"\ncseg01:0001F4EC                 lea     eax, [esp+2Ch+var_24]\ncseg01:0001F4F0                 push    eax\ncseg01:0001F4F1                 call    sprintf_\ncseg01:0001F4F6                 add     esp, 0Ch\n\n</code></pre>\n<p>My question is - how many bytes are allocated for sprintf(buff ?</p>\n<p>My calculations:</p>\n<p>There is</p>\n<pre><code>sub esp, 20\n</code></pre>\n<p>Then:</p>\n<pre><code>lea     eax, [esp+2Ch+var_24]\n</code></pre>\n<p>i.e. esp + 8.</p>\n<p>And it's means sub esp, 20h and + 8 is esp = 24d;</p>\n<p>And size of buffer sprintf = 24d.</p>\n<p>Itself string \"%c:\\data\\title.phd\" has 19d bytes.</p>\n<p>Am I right buffer for sprintf has 24d bytes?</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "53",
    "tags": [
        "c++"
    ],
    "user": "black4joss",
    "time": "Oct 3, 2023 at 10:55",
    "comments": [
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">It starts at [esp+8] and has no bounds  where do you see a allocation  lea loads the addrees and push uses it no size checking and a  buffer  overflow if it exceeds 0x20 bytes</span>",
            "time": null
        },
        {
            "user": "black4joss",
            "text": "<span class=\"comment-copy\">I think it starts at [esp+8] and ends at rettaddr (start stack frame). From [esp+8] to start stack frame is 24d. I.e. -32d + 8d = 24d.</span>",
            "time": null
        }
    ],
    "answers_data": []
}