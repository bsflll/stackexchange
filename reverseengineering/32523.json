{
    "title": "Frida: how to hook a synthetic class",
    "link": "https://reverseengineering.stackexchange.com/questions/32523/frida-how-to-hook-a-synthetic-class",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>When reverse engineering an APK I came across a class that was marked synthetic.\nI have used JADX decompiler. The simplified result I got was:</p>\n<pre><code>package com;\n\npublic final class zz6 extends B implements C {\n   public /* synthetic */ A(int i, Object obj, Object obj2, Object obj3) {\n       ...\n   }\n\n   ...\n}\n</code></pre>\n<p><a href=\"https://stackoverflow.com/questions/399546/synthetic-class-in-java\">Some googling about synthetic java classes</a> learned me that those classes are generated dynamically.</p>\n<p>I hooked this function using Frida and just printed a log when it is called.\nWhen running the app nothing got printed though I'm quite sure the specific function was called.</p>\n<p>I wonder if Frida is able to hook these functions or if there are any methods to get a hook on these dynamic functions?</p>\n<p>The same constructor function in smali-code:</p>\n<pre><code># direct methods\n.method public synthetic constructor &lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V\n    .locals 0\n\n    .line 1\n    iput p1, p0, Lcom/zz6;-&gt;d:I\n\n    iput-object p2, p0, Lcom/zz6;-&gt;e:Ljava/lang/Object;\n\n    iput-object p3, p0, Lcom/zz6;-&gt;f:Ljava/lang/Object;\n\n    iput-object p4, p0, Lcom/zz6;-&gt;g:Ljava/lang/Object;\n\n    const/4 p1, 0x0\n\n    invoke-direct {p0, p1}, Lcom/w54;-&gt;&lt;init&gt;(I)V\n\n    return-void\n.end method\n</code></pre>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "148",
    "tags": [
        "android",
        "java",
        "frida"
    ],
    "user": "Sven Onderbeke",
    "time": "Nov 26, 2023 at 16:54",
    "comments": [
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">Have you checked SMALI code in Jadx for the same method? The SMALI methods should be what Frida sees =&gt; what should be hookable.</span>",
            "time": null
        },
        {
            "user": "Sven Onderbeke",
            "text": "<span class=\"comment-copy\">When I check the SMALI code I can find it. But not sure if this changes anything : # direct methods .method public synthetic constructor &lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V     .locals 0</span>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">Don't search for \"synthetic\", search for the arguments or the method calls in the method (in smali syntax).</span>",
            "time": null
        },
        {
            "user": "Sven Onderbeke",
            "text": "<span class=\"comment-copy\">I did not search for this keyword. I searched for the method I wanted to find in the smali code. But I assume you saw that my arguments didnt match the one in my smali code. In my example I edited the arguments, (took arguments from another function). Or do I misinterpret your response?</span>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">It wasn't clear how you searched. so I just wanted to make sure. Some people are deterred by smali code as it is so low-level. And as the function you found is a synthetic constructor but you were searching for a regular method I guessed that you may have just searched for synthetic entries. If you are unable to find a matching method on smali level then it seems that you have to search a different way how to get access to the arguments you want to get access or modify.</span>",
            "time": null
        }
    ],
    "answers_data": []
}