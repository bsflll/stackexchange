{
    "title": "What is the size of a security cookie in PE file?",
    "link": "https://reverseengineering.stackexchange.com/questions/30653/what-is-the-size-of-a-security-cookie-in-pe-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I know that pointer to the security cookie in Load Configuration Directory is 4 bytes long for 32-bit exe and 8 bytes long for 64-bit one (<a href=\"https://docs.microsoft.com/en-us/windows/win32/debug/pe-format#load-configuration-layout\" rel=\"nofollow noreferrer\">source</a>), but what is the size of the security cookie itself?</p>\n<p><strong>Edit:</strong> the accepted answer links to a long article, here's the quote from it:</p>\n<blockquote>\n<p>When /GS is specified, the compiler automatically links the object file built from <strong>gs_cookie.c</strong> source file. This file <strong>defines __security_cookie as a 64-bit or 32-bit global variable of the type uintptr_t on x64 and x86, respectively.</strong></p>\n</blockquote>\n<p>And since I can't find any official source for gs_cookie.c online here's the important part, which also shows the default values:</p>\n<pre><code>#ifdef _WIN64\n#define DEFAULT_SECURITY_COOKIE ((UINT_PTR)0x00002B992DDFA232)\n#else  /* _WIN64 */\n#define DEFAULT_SECURITY_COOKIE ((UINT_PTR)0xBB40E64E)\n#endif  /* _WIN64 */\n\nUINT_PTR __security_cookie = DEFAULT_SECURITY_COOKIE;\n</code></pre>\n<p>And just for completeness the documentation for <a href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-tsts/f959534d-51f2-4103-8fb5-812620efe49b\" rel=\"nofollow noreferrer\"><code>UINT_PTR</code></a> shows it's just <code>int</code> for 32-bit and <code>__int64</code> for 64-bit (both unsigned).</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "227",
    "tags": [
        "pe"
    ],
    "user": "BakedPotato16523",
    "time": "Jul 18, 2022 at 18:28",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The cookie itself is the same size as a register, 64 bits or 32 bits.</p>\n<p>The global cookie is copied into a register then xor'ed with RBP/EBP and stored on the stack.</p>\n<p>When unwinding the frame the \"stack cookie\" is xor'ed against RBP/EBP again before being validated against the global cookie to ensure it hasn't been modified.</p>\n<p>Ref: <a href=\"https://docs.microsoft.com/en-us/archive/msdn-magazine/2017/december/c-visual-c-support-for-stack-based-buffer-protection\" rel=\"nofollow noreferrer\">https://docs.microsoft.com/en-us/archive/msdn-magazine/2017/december/c-visual-c-support-for-stack-based-buffer-protection</a></p>\n</div>",
            "votes": "0",
            "user": "Mega Tonnage",
            "time": "Jul 18, 2022 at 9:53",
            "is_accepted": true,
            "comments": []
        }
    ]
}