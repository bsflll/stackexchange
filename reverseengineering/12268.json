{
    "title": "Patching a string using DLL injection and OllyDbg",
    "link": "https://reverseengineering.stackexchange.com/questions/12268/patching-a-string-using-dll-injection-and-ollydbg",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm a novice when it comes to RE but I'm trying to get into it. I have a background in C/C++ so doing the development side of things should be a breeze (aside from when assembly has to be used, im rusty there). I just need to be pointed in the right direction with RE things and will be able to pick things up from there. </p>\n<p>I wrote a simple CLI program (HackMe.exe) to practice RE with, using OllyDbg. It just has a string(\"change me\") which I'm attempting to change (patch?) via a DLL.</p>\n<p>Here's the CLI prog source</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;Windows.h&gt;\n\nint main(int argc, char** argv) {\n    char* change_me = \"change me\";\n\n    while(true) {\n        std::cout &lt;&lt; change_me &lt;&lt; std::endl;\n        Sleep(3000);\n    }\n\n    return 0;\n}\n</code></pre>\n<p>and the DLL source so far which is bare bone</p>\n<pre><code>#include &lt;Windows.h&gt;\n#include &lt;fstream&gt;\n#include &lt;iostream&gt;\n\nVOID attach();\n\nBOOL APIENTRY DllMain(HMODULE module, DWORD reason, LPVOID reserved) {\n\n    switch(reason) {\n        case DLL_PROCESS_ATTACH: {\n            CreateThread(0, 0, (LPTHREAD_START_ROUTINE)&amp;attach, 0, 0, 0);\n            break;\n        }\n    }\n\n    return TRUE;\n}\n\nVOID attach() {\n    // patching code will go here\n}\n</code></pre>\n<p>So far what I've done is</p>\n<ul>\n<li>Attached OllyDbg to running HackMe.exe process</li>\n<li>Searched for all referenced text strings and followed the \"change me\" string</li>\n</ul>\n<p>Following the the string brought me to where the string was found</p>\n<p><a href=\"https://i.sstatic.net/jf5Kw.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/jf5Kw.png\"/></a></p>\n<p>So correct me if I'm wrong or not including something but I believe I need to</p>\n<ul>\n<li>Find the base address of the process and the offset to the string address</li>\n<li>Patch the memory at base + offset with a new string thats len is == to the original </li>\n</ul>\n<p><strong>So i guess my questions are</strong></p>\n<ol>\n<li>How do I find the base offset of process (I assume I can do in the DLL using something like GetModuleHandle(\"HackMe.exe\"))? </li>\n<li>Is there a way to see the base offset in OllyDbg (not that useful I suppose since the base will more than likely change every time the exe is ran)?</li>\n<li>How do I find the +offset of the string from the base?</li>\n</ol>\n<p><strong>Working end result</strong></p>\n<pre><code>#include &lt;Windows.h&gt;\n\nVOID attach();\n\nBOOL APIENTRY DllMain(HMODULE module, DWORD reason, LPVOID reserved) {\n\n    switch(reason) {\n        case DLL_PROCESS_ATTACH: {\n            attach();\n            break;\n        }\n    }\n\n    return TRUE;\n}\n\nVOID attach() {\n\n    DWORD old;\n    DWORD base   = (DWORD)GetModuleHandle(NULL);\n    DWORD offset = 0x01CC80;\n\n    char* ptr = reinterpret_cast&lt;char*&gt;(base + offset);\n    const size_t length   = 10;\n    char buffer[ length ] = \"changed:)\";\n\n    VirtualProtect(ptr, length, PAGE_EXECUTE_READWRITE, &amp;old);\n    memcpy(ptr, buffer, length);\n    VirtualProtect(ptr, length, old, nullptr);\n}\n</code></pre>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "4k",
    "tags": [
        "ollydbg",
        "c++",
        "memory",
        "dll-injection"
    ],
    "user": "SelfTaught",
    "time": "Mar 22, 2016 at 23:09",
    "comments": [
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">you shouldn't be creating threads in DllMain it isn't recommended  <a href=\"https://blogs.msdn.microsoft.com/oldnewthing/20070904-00/?p=25283/\" rel=\"nofollow noreferrer\">blogs.msdn.microsoft.com/oldnewthing/20070904-00/?p=25283</a> <a href=\"https://blogs.msdn.microsoft.com/oldnewthing/20040127-00/?p=40873/\" rel=\"nofollow noreferrer\">blogs.msdn.microsoft.com/oldnewthing/20040127-00/?p=40873</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<ol>\n<li>How do I find the base offset of process (I assume I can do in the DLL using something like GetModuleHandle(\"HackMe.exe\"))?</li>\n</ol>\n</blockquote>\n<p>A process doesn't have a base offset; I believe you mean the base address of the primary module. To get that address, you would use <code>GetModuleHandle(NULL)</code>.</p>\n<blockquote>\n<ol start=\"2\">\n<li>Is there a way to see the base offset in OllyDbg (not that useful I suppose since the base will more than likely change every time the exe\n  is ran)?</li>\n</ol>\n</blockquote>\n<p><kbd>Alt</kbd>+<kbd>E</kbd> will show you the base address of each loaded module.</p>\n<blockquote>\n<ol start=\"3\">\n<li>How do I find the +offset of the string from the base?</li>\n</ol>\n</blockquote>\n<p>There are countless ways to do it, but an easy way is to use a tool like IDA or <a href=\"http://www.mcafee.com/us/downloads/free-tools/bintext.aspx\" rel=\"noreferrer\">BinText</a> to find the string's virtual address, and then subtract from that the default base address of HackMe.exe.</p>\n</div>",
            "votes": "5",
            "user": "Jason Geffner",
            "time": "Mar 22, 2016 at 13:30",
            "is_accepted": true,
            "comments": [
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">wouldn't the <b>std::string change_me</b> be a stack / heap / copy of the original string ? is changing the original string in the exe be enough ? to change the string outputted by cout() ?</span>",
                    "time": null
                },
                {
                    "user": "SelfTaught",
                    "text": "<span class=\"comment-copy\">Correct, I did mean base address. Thanks for the answers.</span>",
                    "time": null
                }
            ]
        }
    ]
}