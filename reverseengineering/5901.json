{
    "title": "USB programmer for SPANSION S25FL064P flash memory",
    "link": "https://reverseengineering.stackexchange.com/questions/5901/usb-programmer-for-spansion-s25fl064p-flash-memory",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Can someone recommend a handy inexpensive USB programmer for <a href=\"http://www.spansion.com/Support/Datasheets/S25FL064A_00.pdf\" rel=\"nofollow\">SPANSION S25FL064P</a> flash memory?</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "2k",
    "tags": [
        "hardware",
        "linux",
        "firmware",
        "memory"
    ],
    "user": "Lexx Luxx",
    "time": "Jul 20, 2014 at 11:55",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It's a SPI flash memory so most decent SPI flash programmers should do. They can be found below 30 USD. If you have a decent micro controller development board already you can probably program and read this chip easily. For instance the Arduino platform has SPI libraries. The pin pitch is 1.3 mm so you should be able to attach to the chip without even desoldering it using decent grabber probes.</p>\n<p>Have you beep tested the board to see if any test points or headers connect to the flash memory pins?</p>\n<p>If you don't want to hack something together yourself, <a href=\"http://www.ebay.com/itm/Universal-USB-Programmer-EEPROM-Flash-SPI-BIOS-24-25-BR90-93-5000-CHIPS/111164374359\" rel=\"nofollow\">here's what seems to be a competent and cheap SPI programmer on ebay</a>. Which is supposed to support you chip. Although it is more fun to solve it yourself, you'll see how easy it is and next time you run into an unsupported SPI flash memory you'll solve it without issues.</p>\n</div>",
            "votes": "1",
            "user": "Peter Andersson",
            "time": "Jul 20, 2014 at 15:38",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Lexx Luxx",
                    "text": "<span class=\"comment-copy\">I want ready device, I have no microcontroller development board. There is JTAG connector pads on PCB, but chipset specification is unavailable, anyway. I'm considering EZP2010 USB SPI Programmer.</span>",
                    "time": null
                },
                {
                    "user": "Peter Andersson",
                    "text": "<span class=\"comment-copy\">@triwo You chip doesn't have JTAG pins so I doubt it's part of the JTAG chain. You could maybe JTAG the MCU then use the fact that the SPI flash is probably fully mapped on the bus in a linear fashion and read it out that way if you're lucky. It's probably easier to just use SPI.</span>",
                    "time": null
                },
                {
                    "user": "Lexx Luxx",
                    "text": "<span class=\"comment-copy\">MCU chipset specification is not available, I can no JTAG it. There is serial port that allows upload and flash the firmware, but not read or write NVRAM fully. Is it possible to define does setup allows reliably flash SPI chip without desoldering it from PCB? (using Test Clip for SOIC16 chip and in-circuit programming)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You shoudl use an SPI flash parallel port programmer. It is a simple and very accurate programmer using a single 74ls244 ic. </p>\n<p>You can get it at: <a href=\"http://www.spiflash.org/\" rel=\"nofollow\">http://www.spiflash.org/</a></p>\n</div>",
            "votes": "-1",
            "user": "perror",
            "time": "May 8, 2016 at 9:31",
            "is_accepted": false,
            "comments": []
        }
    ]
}