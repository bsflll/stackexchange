{
    "title": "SWF ActionScript byte-code method info does not match AVM2 specification",
    "link": "https://reverseengineering.stackexchange.com/questions/24572/swf-actionscript-byte-code-method-info-does-not-match-avm2-specification",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a bunch of SWF files that represent UI in the game. Most of them contain DoABC tag, however the tag type is <code>300</code> instead of <code>82</code>.</p>\n<p>Putting this trouble aside, I started parsing the tag according to <a href=\"https://www.adobe.com/content/dam/acom/en/devnet/pdf/avm2overview.pdf\" rel=\"nofollow noreferrer\">the official AVM2 overview</a>, and found multiple other issues with the structure:</p>\n<ol>\n<li>For most of the methods <code>flag</code> value contains flags <code>0x01</code> and <code>0x04</code> (<code>NEED_ARGUMENTS</code> and <code>NEED_REST</code>) which according to the doc must not be used together.</li>\n<li>For some reason the <code>option_info.option_count</code> is always greater than <code>param_count</code>.</li>\n<li>If I was to ignore point 2 and parse params anyway - param type in most cases is incorrect (page 26)</li>\n</ol>\n<p>Here is the sample byte-code. <code>0x2F</code> means method count. While parsed according to the doc, at 0x12 you can see that there are 5 params, and 0x1b tells us that 7 of them are optional, which is totally nonsense because</p>\n<blockquote>\n<p>[...] The number of optional parameters is given by option_count, which must not be zero nor greater than the parameter_count [...]</p>\n</blockquote>\n<p><a href=\"https://i.sstatic.net/GndPi.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/GndPi.png\"/></a></p>\n<p>My guesses are that the <code>300</code> tag indicates custom tag so custom parsing rules could apply and for other points I would say that the order of fields changed and the flag, as well as param count and optionals info, is at different offset. But how can I be sure that the certain way of parsing is the correct one? I am unfamiliar with ActionScript and have no idea if method name, param name or param type make any sense.</p>\n<p>If we take the example above, parsing it according to the doc would result in the first method (address <code>0x01</code>) named <code>flash.events</code> (<code>0x03</code>) has 0 params (<code>0x01</code>) with the return type <code>fl.transitions.easing.Back</code> (<code>0x02</code>) and flag <code>0x05</code> (<code>0x04</code>)</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "149",
    "tags": [
        "byte-code",
        "actionscript",
        "swf"
    ],
    "user": "lolbas",
    "time": "Mar 30, 2020 at 17:25",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">It's been a while for me, but I think you're right with your assumption about tag 300 being a custom one. As far as I understand there are plenty of flavors of AVM2 around, since apparently the source was handed out at some point (there are variations of AS3 being used all over the place, e.g. in games like The Witcher 3). At my previous job we saw plenty of SWF files and right from the start I saw tags that didn't seem to correspond to the official specification. The only way to be certain is to reverse engineer the VM used for running your AS3 dialect. Don't see another way.</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Does <a href=\"https://web.archive.org/web/20170606040559/http://bloople.net/ActionScript%203%20Language%20Specification.pdf\" rel=\"nofollow noreferrer\">this</a> help perhaps?</span>",
            "time": null
        },
        {
            "user": "lolbas",
            "text": "<span class=\"comment-copy\">@0xC0000022L what's interesting is that in this tag everything matches according to <code>DoABC</code> spec up until methods into. Well, at least I think it does cuz <a href=\"https://github.com/ArachisH/Flazzy\" rel=\"nofollow noreferrer\">Flazzy</a> parser parses the prior data fine.</span>",
            "time": null
        },
        {
            "user": "lolbas",
            "text": "<span class=\"comment-copy\">@0xC0000022L this is from mobile game and the VM is likely to be embedded into binary. Any suggestions what keywords to look for?</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">my crystal ball is unfortunately out of order at this point (<i>mobile</i> game and all) ;). I'd be looking for everything that is unique to SWF, starting with the file signature. Since I don't have the file in question, nor the game, it's kind of hard to give meaningful advice. But since you have already decoded parts of the file, it's probably easiest to go for dynamic analysis of the game, loading the SWF into it and making use of the knowledge gained from parsing <i>up to</i> that mysterious tag 300 (e.g. strings such as class names).</span>",
            "time": null
        }
    ],
    "answers_data": []
}