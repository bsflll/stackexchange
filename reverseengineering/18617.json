{
    "title": "Hopper: What does stack[xxxx] mean?",
    "link": "https://reverseengineering.stackexchange.com/questions/18617/hopper-what-does-stackxxxx-mean",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>When using the 'decompiler' tool in Hopper on the <code>start</code> function of an application it shows this:</p>\n<p><a href=\"https://i.sstatic.net/tm8wi.png\" rel=\"nofollow noreferrer\"><img alt=\"hopper decompiled code\" src=\"https://i.sstatic.net/tm8wi.png\"/></a></p>\n<p>What does the <code>stack[2043]</code> mean, is it 2043 bytes from the top of high memory and its assigning it to the stack?</p>\n<p>Here is what the assembly looks like for the same function:</p>\n<p><a href=\"https://i.sstatic.net/cby43.png\" rel=\"nofollow noreferrer\"><img alt=\"hopper dissasembly\" src=\"https://i.sstatic.net/cby43.png\"/></a></p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "171",
    "tags": [
        "disassembly",
        "decompilation",
        "hopper"
    ],
    "user": "pzirkind",
    "time": "Jun 27, 2018 at 15:19",
    "comments": [
        {
            "user": "Rolf Rolles",
            "text": "<span class=\"comment-copy\">Frankly, it's really difficult to interpret the decompilation. For example, it uses the raw register variable <code>esp</code> in the output, when <code>esp</code> is modified by the prologue -- so which value of <code>esp</code> is it referring to? (Evidently the pre-prologue version.) Also the disassembly listing would be more clear if it showed the symbolic declarations for <code>var_14</code>, <code>var_10</code>, etc. I have a feeling they refer to <code>-0x14</code>, <code>-0x10</code>, etc. but it would help clear things up. Anyway, given the tenor of your question, I'd say the decompilation will just confuse you and simply to ignore it (or use Hex-Rays).</span>",
            "time": null
        }
    ],
    "answers_data": []
}