{
    "title": "When loading Ntoskrnl.exe in IDA Free (7.7) certain functions such as SwapContext are not displayed",
    "link": "https://reverseengineering.stackexchange.com/questions/30085/when-loading-ntoskrnl-exe-in-ida-free-7-7-certain-functions-such-as-swapcontex",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm just having some fun learning <strong>IDA 7.7 Free</strong> and how context switching works both on <strong>Windows 8.1</strong>. I've loaded <code>ntoskrnl.exe</code> into IDA, but I cannot find the following two functions names or symbols: <code>KiSwapContext</code> and <code>SwapContext</code>. I've included the screenshots on loading ntoskrnl.exe and the output details as follows:</p>\n<p><a href=\"https://i.sstatic.net/o4PN3.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/o4PN3.png\"/></a>\n<a href=\"https://i.sstatic.net/4VdPR.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/4VdPR.png\"/></a>\n<a href=\"https://i.sstatic.net/2edXK.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/2edXK.png\"/></a></p>\n<pre><code>&gt;     Possible file format: Portable executable for AMD64 (PE) (C:\\Program Files\\IDA Freeware 7.7\\loaders\\pe64.dll)\n&gt; \n&gt;   bytes   pages size description\n&gt; --------- ----- ---- --------------------------------------------  29450240  3595 8192 allocating memory for b-tree...  29450240  3595\n&gt; 8192 allocating memory for virtual array...    262144    32 8192\n&gt; allocating memory for name pointers...\n&gt; -----------------------------------------------------------------  59162624            total memory allocated\n&gt; \n&gt; Loading processor module C:\\Program Files\\IDA Freeware\n&gt; 7.7\\procs\\pc64.dll for metapc...Initializing processor module metapc...OK Autoanalysis subsystem has been initialized. Loading file\n&gt; 'C:\\Users\\AUSER\\Documents\\Visual Studio 2019\\Reversing\\ntoskrnl.exe'\n&gt; into database... Detected file format: Portable executable for AMD64\n&gt; (PE)\n&gt;   0. Creating a new segment  (0000000140001000-0000000140289000) ... ... OK\n&gt;   1. Creating a new segment  (0000000140289000-000000014028C000) ... ... OK\n&gt;   2. Creating a new segment  (000000014028C000-000000014028F000) ... ... OK\n&gt;   3. Creating a new segment  (000000014028F000-0000000140290000) ... ... OK\n&gt;   4. Creating a new segment  (0000000140290000-0000000140291000) ... ... OK\n&gt;   5. Creating a new segment  (0000000140291000-0000000140305000) ... ... OK\n&gt;   6. Creating a new segment  (0000000140305000-0000000140343000) ... ... OK\n&gt;   7. Creating a new segment  (0000000140343000-0000000140346000) ... ... OK\n&gt;   8. Creating a new segment  (0000000140346000-000000014034E000) ... ... OK\n&gt;   9. Creating a new segment  (000000014034E000-0000000140361000) ... ... OK\n&gt;  10. Creating a new segment  (0000000140361000-000000014037B000) ... ... OK\n&gt;  11. Creating a new segment  (000000014037B000-0000000140658000) ... ... OK\n&gt;  12. Creating a new segment  (0000000140658000-000000014065D000) ... ... OK\n&gt;  13. Creating a new segment  (000000014065D000-0000000140685000) ... ... OK\n&gt;  14. Creating a new segment  (0000000140685000-0000000140688000) ... ... OK\n&gt;  15. Creating a new segment  (0000000140688000-000000014068F000) ... ... OK\n&gt;  16. Creating a new segment  (000000014068F000-0000000140694000) ... ... OK\n&gt;  17. Creating a new segment  (00000001406A8000-00000001406B7000) ... ... OK\n&gt;  18. Creating a new segment  (00000001406B7000-00000001406C3000) ... ... OK\n&gt;  19. Creating a new segment  (00000001406C3000-00000001406CE000) ... ... OK\n&gt;  20. Creating a new segment  (00000001406CE000-0000000140747000) ... ... OK Reading exports directory... Reading imports directory...\n&gt; Applying fixups...\n&gt;  21. Creating a new segment  (0000000140343728-0000000140346000) ... ... OK PDB: using PDBIDA provider Could not find PDB file\n&gt; 'ntkrnlmp.pdb'. Please check _NT_SYMBOL_PATH PDB: loading\n&gt; C:\\symbols\\ntkrnlmp.pdb\\0E352AF38FB64A36AA56E6CC5CAD6C1A1\\ntkrnlmp.pdb\n&gt; Assuming __fastcall calling convention by default PDB: loaded 2129\n&gt; types 1400240EC: name has been deleted: NtCreateEnlistment 1400240F4:\n&gt; name has been deleted: NtCreateResourceManager PDB: total 21006\n&gt; symbols loaded for \"C:\\Users\\AUSER\\Documents\\Visual Studio\n&gt; 2019\\Reversing\\ntoskrnl.exe\" Plan  FLIRT signature: Windows Driver Kit\n&gt; 7/10 64bit Plugin \"eh_parse\" not found Marking typical code\n&gt; sequences... Flushing buffers, please wait...ok File\n&gt; 'C:\\Users\\AUSER\\Documents\\Visual Studio 2019\\Reversing\\ntoskrnl.exe'\n&gt; has been successfully loaded into the database. Hex-Rays Decompiler\n&gt; plugin has been loaded (v7.7.0.220118)   License: 00-0000-0000-00  (0\n&gt; user)   The decompilation hotkey is F5.   Please check the\n&gt; Edit/Plugins menu for more information. Using FLIRT signature: Windows\n&gt; Driver Kit 7/10 64bit Propagating type information... Function\n&gt; argument information has been propagated The initial autoanalysis has\n&gt; been finished.\n</code></pre>\n<p>[UPDATE] I did a clean install of Windows 8/8.1 on another computer installed IDA Free 7.7 and loaded ntoskrnl.exe into IDA. This time IDA was able to display both KiSwapContext and SwapContext functions very similar output as WinDbg. On the PC which is not displaying these two functions in IDA I tried uninstalling Norton Security but that didn't help. Doing a search for SwapContext in IDA displays the following two functions:</p>\n<p><strong>SwapContext_PatchStMxCsr and\nSwapContext_PatchLdt</strong></p>\n<p>Does anyone know why this is the case ? Could this be a windows update patch by Microsoft and the real SwapContext is hidden somewhere else ?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "680",
    "tags": [
        "ida"
    ],
    "user": "Jonny B Good",
    "time": "Mar 6, 2022 at 1:00",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>KiSwapContext is not an exported function, so the mapping between its address and its name is only available either through your own manual guesswork or the PDB (which contains debug symbols).</p>\n<p>You may have had a transient issue loading the PDB file from Microsoft's Symbol Server (which provides symbols over the public Internet); without knowing exactly which mismatched PDB file you did have, and what choices you made on those dialog boxes, it's not 100% clear what went wrong.</p>\n<p>Microsoft patching Windows <em>does</em> cause the symbol table and PDB to change as updates do change the layout of functions, exact addresses, etc., but the PDB's metadata (signature and age) should catch the issue of a PDB for a different version of the binary than the one you have (as they seem to have done here).</p>\n</div>",
            "votes": "2",
            "user": "nanofarad",
            "time": "Mar 6, 2022 at 5:17",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Jonny B Good",
                    "text": "<span class=\"comment-copy\">nanofarad@ thank you. I decided to take your advice and got IDA to reload the symbol file for ntoskrnl.exe (namely ntkrnlmp.pdb) and this time all is working. Both KiSwapContext and SwapContext functions were displayed properly in IDA.</span>",
                    "time": null
                }
            ]
        }
    ]
}