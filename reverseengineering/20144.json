{
    "title": "How to patch JNI library to call functions on Linux",
    "link": "https://reverseengineering.stackexchange.com/questions/20144/how-to-patch-jni-library-to-call-functions-on-linux",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>According to <a href=\"https://googleprojectzero.blogspot.com/2018/12/adventures-in-video-conferencing-part-4.html\" rel=\"nofollow noreferrer\">this post</a> it is possible to run functions inside a shared library <strong>so long as they do not have a dependency on the JVM</strong></p>\n<blockquote>\n<p>It works by patching the .dynamic ELF section to remove unnecessary dependencies by replacing DT_NEEDED tags with DT_DEBUG tags. We also needed to remove constructors and deconstructors by changing the DT_FINI_ARRAYSZ and DT_INIT_ARRAYSZ to zero.</p>\n</blockquote>\n<p>So how could this be implemented?</p>\n<p>Thanks</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "171",
    "tags": [
        "android",
        "patching"
    ],
    "user": "Fabian Mendez",
    "time": "Dec 15, 2018 at 23:26",
    "comments": [],
    "answers_data": []
}