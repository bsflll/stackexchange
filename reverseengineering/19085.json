{
    "title": "Is there any way to call function instead of breakpoint, when certain memory area is accessed or register value is matched?",
    "link": "https://reverseengineering.stackexchange.com/questions/19085/is-there-any-way-to-call-function-instead-of-breakpoint-when-certain-memory-are",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am studying assembly and hooking.</p>\n<p>I know how to hook x86 assembly now.\nso if any thread goes to certain address which is overwritten with my code, it automatically returns to my function.\nI think this is normal hooking principle.\n<a href=\"https://www.apriorit.com/dev-blog/160-apihooks\" rel=\"nofollow noreferrer\">https://www.apriorit.com/dev-blog/160-apihooks</a></p>\n<p>And now, I want to hook x86 registers or memory in windows 32bit, like almost debugger's breakpoints do.\nSo when some memory areas are accessed, automatically call my function in that process memory.\nTo be exact, I want to use my hooked function instead of breakpoint.\nAny advance will be appreciated!</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "121",
    "tags": [
        "windows",
        "assembly",
        "function-hooking"
    ],
    "user": "Luis Bergmann",
    "time": "Aug 19, 2018 at 17:58",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Welcome to RE.SE! Uhm, actually setting a breakpoint will in fact - through operating system facilities - typically end up as some kind of \"hook function\" being called. Alas you don't specify the environment (such as the OS) you're running in and it's not exactly clear what you're looking for, given how breakpoints pretty much <i>already</i> achieve what you want (in particular hardware-assisted breakpoints, whose number is limited, though).</span>",
            "time": null
        },
        {
            "user": "Luis Bergmann",
            "text": "<span class=\"comment-copy\">Thank your for approaching to my problem. 1. I am using windows x32. I think the OS is not a problem.  2. I know about hardware breakpoint. I want sth similar to hardware breakpoint, but I want a function called when condition is matched, instead of breakpoint. Thank you</span>",
            "time": null
        },
        {
            "user": "perror",
            "text": "<span class=\"comment-copy\">@LuisBergmann: Please, edit your question to add these information in it (and add some tags about your OS and the CPU architecture targeted).</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The only way this can be accomplished, in my opinion, is to override the Page Fault Handler. You cannot do this in user mode, however. The hooks you cite deal with user mode DLL entry points, which is easy to achieve. The paging mechanism is implemented in the kernel, at Ring 0, so basically you will need to write a driver which, in case of a Page Fault, checks if the address is in the range you want monitored and, if yes, calls your function; otherwise calls the default kernel routines. Quite tricky to do, especially on Windows (Linux is somewhat easier) and you risk in de-stabilizing the entire system.</p>\n<p>This is what kernel-mode debuggers such as SoftICE  (<a href=\"https://en.wikipedia.org/wiki/SoftICE\" rel=\"nofollow noreferrer\">https://en.wikipedia.org/wiki/SoftICE</a>) or WinDbg (<a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/getting-started-with-windbg--kernel-mode-\" rel=\"nofollow noreferrer\">https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/getting-started-with-windbg--kernel-mode-</a>) do.</p>\n<p>If you really want to go for it, a good starting point for information is here: <a href=\"https://stackoverflow.com/questions/18431261/how-does-x86-paging-work\">https://stackoverflow.com/questions/18431261/how-does-x86-paging-work</a>\nand of course <a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/\" rel=\"nofollow noreferrer\">https://docs.microsoft.com/en-us/windows-hardware/drivers/</a></p>\n<p>PS: No way to do it for registers</p>\n</div>",
            "votes": "0",
            "user": "memo",
            "time": "Aug 20, 2018 at 14:05",
            "is_accepted": true,
            "comments": []
        }
    ]
}