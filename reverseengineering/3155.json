{
    "title": "Extracting files from .data and .toc files",
    "link": "https://reverseengineering.stackexchange.com/questions/3155/extracting-files-from-data-and-toc-files",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<ul>\n<li><a href=\"https://mega.co.nz/#!0MJgGAAL!ArUvamiuumle0uR0HJNDWjebI3g_R12iBLVq-geuZFE\" rel=\"nofollow\">core.toc</a> [87 KB]</li>\n<li><a href=\"https://mega.co.nz/#!hEwlGD4Z!RSA3zXEVk41gjbzdfOKCez3EjI9BZChvPr34VR10Ocg\" rel=\"nofollow\">core.data</a> [130 MB]</li>\n</ul>\n<p>the <code>.toc</code> is a table of contents files that always starts with the header 1rrs.\nIt also contains directory and file paths at offsets that will relate to the data file.</p>\n<p>Where should I start trying to use the <code>.toc</code> to extract from the <code>.data</code> file?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "3k",
    "tags": [
        "file-format"
    ],
    "user": "Impossibear",
    "time": "Dec 11, 2013 at 15:39",
    "comments": [
        {
            "user": "Ange",
            "text": "<span class=\"comment-copy\">Please add more details: don't just provide files with little details and expect us to do your work.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Full Disclosure is always appreciated. This seems to be a (\"the\"?) data file for FASA Studio's \"Shadowrun\". Anyway, the data file contains enough recognizable items to get a good start (PNGs, Unicode text). Data seems to be aligned on 16 bytes, padded with what seems to be random trash.</p>\n<p>PNG images are a good start; you can extract them 'manually' (I used <a href=\"http://www.suavetech.com/0xed/\" rel=\"nofollow noreferrer\">0xED</a>) and see if they are well-formed. The few I tried were, and the all-but-one last data block should be a PNG image, according to the toc file. I located it at <code>0x82A72D0</code>, with a length of <code>0x2E231</code> bytes.</p>\n<p><img alt=\"the very last PNG in core.data\" src=\"https://i.sstatic.net/WDvNG.png\"/></p>\n<p>Then I checked the data around the last PNG file <em>name</em> in <code>core.toc</code> for these bytes. Bingo - not a huge challenge.</p>\n<p>The initial part of the toc file is unknown but may be a fast look-up table. I didn't cross-reference this any further with what follows. After that, the following data can be found per each file:</p>\n<pre><code>4 bytes   length (little endian)\n4 bytes   offset\n8 bytes   unknown (perhaps checksum, perhaps file data/time, who knows?)\n3 bytes   name length -- possibly only the first 2 though, 3 bytes is rare #\nx bytes   name\n</code></pre>\n<p>Right after the block of file names more stuff appears, I couldn't think of a use for it. You could extract all file names, count them, and see if this is relevant. It seems it isn't as the file name block contains everything you were looking for.</p>\n<h2>Edit:</h2>\n<p># Ah-- for the first file, this <code>name length</code> is <code>0x0E 0x00 0x01</code>. Seems the third byte indicates something else, then. I found 2 so far with a <code>0x01</code>, both are '<em>pathless</em>' files.</p>\n</div>",
            "votes": "5",
            "user": "Jongware",
            "time": "Dec 11, 2013 at 18:28",
            "is_accepted": true,
            "comments": [
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\"><i>\"0xED\" is the name of the hex editor, not a hex constant :)</i> Stupid me... :)</span>",
                    "time": null
                },
                {
                    "user": "Jongware",
                    "text": "<span class=\"comment-copy\">No worries mate. Thanks for the grammah-editing!</span>",
                    "time": null
                }
            ]
        }
    ]
}