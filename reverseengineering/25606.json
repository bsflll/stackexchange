{
    "title": "Rust string capacity lower than string lenght",
    "link": "https://reverseengineering.stackexchange.com/questions/25606/rust-string-capacity-lower-than-string-lenght",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><a href=\"https://doc.rust-lang.org/book/ch04-01-what-is-ownership.html#ways-variables-and-data-interact-move\" rel=\"nofollow noreferrer\">According to RUST documentation</a>, strings are stored this way :</p>\n<p><a href=\"https://i.sstatic.net/731rx.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/731rx.png\"/></a></p>\n<p>This is a statement I can verify while reversing rust binaries.\nThe thing is that when I am reversing rust binaries, I likely encounter cases where capacity is lower than length of the string, eg :</p>\n<pre><code>[stack]:00007FFC8BE97218 str_ABCED dq offset ABCED               ; DATA XREF: XX\n[stack]:00007FFC8BE97218                                         ; (len=10) ABCEDFGHIJ\n[stack]:00007FFC8BE97220 dq 28h                                  ; String len: 40\n[stack]:00007FFC8BE97228 cap_ABCED dq 25h                        ; String 'capacity'\n</code></pre>\n<p>How is such a thing possible? Do any resource exists explaining rust internals?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "282",
    "tags": [
        "debugging",
        "memory"
    ],
    "user": "Qwark",
    "time": "Aug 4, 2020 at 9:32",
    "comments": [
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">If you check the acrual string pointer, how much space is reserved there?</span>",
            "time": null
        },
        {
            "user": "Qwark",
            "text": "<span class=\"comment-copy\">@usr2564301 not sure to understand what you mean, the actual string is 40 bytes long, as stated by the \"string len\" (0x00007FFC8BE97220) in memory</span>",
            "time": null
        },
        {
            "user": "sudhackar",
            "text": "<span class=\"comment-copy\">Can you paste the code you used to create this string because I am not able to reproduce this?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>have you considered the possibility that it might be using the <strong><a href=\"https://doc.rust-lang.org/std/primitive.str.html\" rel=\"nofollow noreferrer\">str</a></strong><br/>\ninstead of <strong><a href=\"https://doc.rust-lang.org/std/string/struct.String.html\" rel=\"nofollow noreferrer\">String</a></strong> which only has length and no capacity and<br/>\nyou are looking at a bogus third value ?</p>\n<pre><code>:\\&gt;cat main.rs\nfn main() {\n        let s1 = String::from(\"Hello, std::world!\");\n    println!(\"{}\",s1);\n        println!(\"{} {}\",s1.capacity() , s1.len());\n        let s2 = \"Hello, std::world!o\";\n    println!(\"{}\",s2);\n        println!(\"{} {}\",s2.capacity() , s2.len());\n}\n:\\&gt;cargo build\n   Compiling hello_world v0.1.0 \nerror[E0599]: no method named `capacity` found for reference `&amp;str` in the current scope\n --&gt; main.rs:7:22\n  |\n7 |     println!(\"{} {}\",s2.capacity() , s2.len());\n  |                         ^^^^^^^^ method not found in `&amp;str`\n</code></pre>\n<p>like shown below for the first string</p>\n<pre><code>0:000&gt; dv /v \n00000064`f0cff920              s2 = struct str*\n00000064`f0cff8c0              s1 = \"Hello, std::world!\"\n0:000&gt; dpa 00000064`f0cff920 l3\n00000064`f0cff920  00007ff6`65cf2638 \"Hello, std::world!o\"\n00000064`f0cff928  00000000`00000013\n00000064`f0cff930  00000000`00000010  &lt;&lt;&lt;&lt;&lt;&lt;&lt;  bogus garbage \n0:000&gt; dpa 00000064`f0cff8c0 l3\n00000064`f0cff8c0  00000174`116191f0 \"Hello, std::world!..............................\"\n00000064`f0cff8c8  00000000`00000012\n00000064`f0cff8d0  00000000`00000012  &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; correct\n</code></pre>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "Aug 7, 2020 at 22:02",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Qwark",
                    "text": "<span class=\"comment-copy\">This is probably it, missed that details in the doc ! Thanks !</span>",
                    "time": null
                }
            ]
        }
    ]
}