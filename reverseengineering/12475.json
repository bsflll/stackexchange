{
    "title": "IDApython and IDA-decompiler commenting",
    "link": "https://reverseengineering.stackexchange.com/questions/12475/idapython-and-ida-decompiler-commenting",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Looking at the functions exposed by <code>idaapi</code> I see that functions like the following are exposed.</p>\n<pre><code>get_user_cmt\nset_user_cmt\nsave_user_cmts\n</code></pre>\n<p>As these functions are exposed I'm hoping that I have a way to add comments onto the hex-rays decompiler using a script. I looked around a bit and could not find examples using these functions. </p>\n<p>[EDIT]</p>\n<p>set_user_cmt seems to take 2 arguments, of which the second is the comment and the first is an instance of <code>treeloc_t</code>. However, I'm not too sure how to use it. Using the following leads to an orphan comment.</p>\n<pre><code>idaapi.set_user_cmt(idaapi.treeloc_t(5), \"asdf\")\n</code></pre>\n</div>",
    "votes": "5",
    "answers": 3,
    "views": "6k",
    "tags": [
        "ida",
        "idapython",
        "ida-plugin",
        "hexrays",
        "idapro-sdk"
    ],
    "user": null,
    "time": "Apr 18, 2016 at 20:25",
    "comments": [
        {
            "user": "Vitaly Osipov",
            "text": "<span class=\"comment-copy\">Ask their support for examples?</span>",
            "time": null
        },
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">I'm not pretty sure that it answers your question, but probably it will give you some direction : <a href=\"https://github.com/idapython/src/blob/master/examples/vds4.py\" rel=\"nofollow noreferrer\">github.com/idapython/src/blob/master/examples/vds4.py</a></span>",
            "time": null
        },
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">Just for reference : you will probably find more information on treeloc_t here, in hexrays.hpp file : <a href=\"https://www.hex-rays.com/products/decompiler/manual/sdk/hexrays_8hpp_source.shtml\" rel=\"nofollow noreferrer\">hex-rays.com/products/decompiler/manual/sdk/â€¦</a> . I'd be glad to provide more complete solution but unfortunately I don't have working hex-rays now.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The <a href=\"https://www.hex-rays.com/products/ida/support/idapython_docs/idaapi.treeloc_t-class.html\" rel=\"nofollow\"><code>treeloc_t</code> constructor</a> does not accept an EA, and you need to specify the comment preciser:</p>\n<pre><code>ea = idaapi.get_screen_ea()\ncfunc = idaapi.decompile(ea)\ntl = idaapi.treeloc_t()\ntl.ea = ea\ntl.itp = idaapi.ITP_SEMI\ncfunc.set_user_cmt(tl, \"Test comment\")\ncfunc.save_user_cmts()\n</code></pre>\n<p>You can find more info about the precisers in <a href=\"https://www.hex-rays.com/products/decompiler/manual/sdk/group__type.shtml#ga219c95f85c085e6f539b8d3b96074aee\" rel=\"nofollow\">hexrays.hpp</a>. Not all precisers work everywhere. For example, the above code uses <code>ITP_SEMI</code>, which comments after a semicolon: it will result in an orphan comment if you use it on an <code>if</code>.</p>\n</div>",
            "votes": "2",
            "user": "Andrea Biondo",
            "time": "Jun 19, 2016 at 20:14",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to achieve a similar thing with <a href=\"https://github.com/tintinweb/ida-batch_decompile\" rel=\"nofollow\">ida-batch_decompile</a>. The basic idea is to annotate and decompile the target from commandline (but it also comes with a menu entry; acting as a plugin or idascript)</p>\n<p>It currently annotates functions with a textual description of guessed stack variable sizes and xrefs. To do so it adds a function comment block with <code>SetFunctionCmt(addr, txtcomment, 0)</code> (<a href=\"https://github.com/tintinweb/ida-batch_decompile/blob/master/ida_batch_decompile.py#L157\" rel=\"nofollow\">see code</a>) and once all functions are annotated it decompiles the target binary to pseudocode (optionally also decompiles resolvable imports). Note that atm it is not capable of annotating decompiled lines but I am looking into having that in the future.</p>\n<p>Here's an example for <code>dbghelp.c</code></p>\n<pre><code>//----- (03052800) --------------------------------------------------------\n// **** Variables ****\n// * stack size: 20\n// {\"diff_size\": 4, \"offset_text\": \"[bp+0h]\", \"size\": 4, \"name\": \" s\", \"offset\": 0}\n// {\"diff_size\": 4, \"offset_text\": \"[bp+4h]\", \"size\": 4, \"name\": \" r\", \"offset\": 4}\n// {\"diff_size\": 4, \"offset_text\": \"[bp+8h]\", \"size\": 4, \"name\": \"arg_0\", \"offset\": 8}\n// {\"diff_size\": 4, \"offset_text\": \"[bp+Ch]\", \"size\": 4, \"name\": \"dwBytes\", \"offset\": 12}\n// {\"diff_size\": 4, \"offset_text\": \"[bp+10h]\", \"size\": 4, \"name\": \"arg_8\", \"offset\": 16}\n// *******************\n// ***** XREFS *****\n// * # 1\n// sub_30733D0+30\n// *******************\nint __stdcall sub_3052800(int a1, SIZE_T dwBytes, int a3)\n{\n  int result; // eax@17\n  HANDLE v4; // eax@21\n...\n</code></pre>\n</div>",
            "votes": "0",
            "user": "tintin",
            "time": "Sep 30, 2016 at 9:12",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can use <a href=\"https://www.hex-rays.com/products/ida/support/idapython_docs/idc-module.html#MakeComm\" rel=\"nofollow\">idc.MakeComm</a> or <a href=\"https://www.hex-rays.com/products/ida/support/idapython_docs/idc-module.html#MakeRptCmt\" rel=\"nofollow\">idc.MakeRptCmt</a> functions. For example:</p>\n<pre><code>MakeComm(address, 'My comment')\n</code></pre>\n</div>",
            "votes": "-2",
            "user": "ebux",
            "time": "Apr 19, 2016 at 7:31",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">I don't believe that can be used to apply comments on Hex-Rays decompilations.</span>",
                    "time": null
                }
            ]
        }
    ]
}