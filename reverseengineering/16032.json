{
    "title": "Reverse Packet Encryption with server side checks",
    "link": "https://reverseengineering.stackexchange.com/questions/16032/reverse-packet-encryption-with-server-side-checks",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I made a DLL that hooks the send function of an MMORPG game. When the <code>send()</code> function is called, it will send the packet in a loop until I stop it instead of just sending the packet one time.</p>\n<p>My problem is the packets are encrypted. And, the server checks every packet sent from the client. If the packet that the server expect does not match from what the client sent, the server will disconnect you. So, even if you disable the encryption code in the client, it will still get verified on the server side.</p>\n<p>I manage to disable the encryption of the packet by modifying the binary but I still get disconnected because of the above statement. And, I can't send it in an infinite loop because each packet should be different.</p>\n<p><strong>Info:</strong></p>\n<ul>\n<li>Only the packets sent from client to server are encrypted. The packets from server to client are not encrypted.</li>\n<li>Only the first 2 bytes of the packet is encrypted. The remaining 8 bytes are not. The size of the packet is 10 bytes.</li>\n<li>I found the function (written in assembly) where it generates the dynamic key used to encrypt the first 2 bytes. I wanted to use that codes but I don't know how to translate them into a higher level language like c++.</li>\n</ul>\n<p><strong>Decryption Function</strong></p>\n<pre><code>unsigned short clif_decrypt_cmd( int cmd, struct map_session_data *sd ) {\n  if (sd) {\n    return (cmd ^ ((sd-&gt;cryptKey &gt;&gt; 16) &amp; 0x7FFF));\n  }\n  return (cmd ^ ((((clif-&gt;cryptKey[0] * clif-&gt;cryptKey[1]) + clif-&gt;cryptKey[2]) &gt;&gt; 16) &amp; 0x7FFF));\n}\n</code></pre>\n<p><strong>Question:</strong></p>\n<ul>\n<li>How can I achieve my goal to send the packet in an infinite loop if each packet is checked by the server?</li>\n<li>Should I use the function that encrypts the first two bytes before sending each time I send it?</li>\n</ul>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "disassembly",
        "assembly",
        "ollydbg",
        "debugging"
    ],
    "user": "Noob Programmer",
    "time": "May 7, 2020 at 11:15",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">why do you need to send the same packet in a loop? are you trying to DDoS the server?</span>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">add the disassembly of the function which \"generates the dynamic key used to encrypt the first 2 bytes\"</span>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">so you want to cheat yourself but not let others cheat? I'm not sure I want to go along with that...</span>",
            "time": null
        },
        {
            "user": "Michael Pittino",
            "text": "<span class=\"comment-copy\">@NoobProgrammer I guess anyone who is able to write game cheats isn't dependent on your asm snippet.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>First of all the statement </p>\n<blockquote>\n<p>If the packet that the server expect does not match from what the client sent, the server will disconnect you.</p>\n</blockquote>\n<p>makes no sense.  </p>\n<p>How would the server know what you are going to send to him?<br/>\nMaybe you ment that the server disconnects you if you malform the packet (change the structure of the packet - or, for example, by disabling the packet encryption - in this case the server would try to decrypt it and would get non interpretable results).</p>\n<p><strong>So to answer your question:</strong></p>\n<p>IMO you have two possible ways to achieve your goal:</p>\n<ol>\n<li>Find the function that creates the packet before it is encrypted and use it to send your own data.</li>\n<li>Understand how the network protocol and cryptography of your game works and rebuild it in your own program.</li>\n</ol>\n<p>I'd suggest you use the first option since it's the simpler one. While the second option provides you more flexibility I don't think it's feasable for you since you said <code>but I don't know how to translate them into a higher level language like c++.</code>.</p>\n<p>I can only provide you with general instructions since you didn't post much information about your target (name, some assembly snippets, if it uses TCP or UDP, ..):</p>\n<ol>\n<li>Use a dynamic debugger to find the function mentioned in #1. I prefer <a href=\"https://x64dbg.com\" rel=\"nofollow noreferrer\" title=\"x64dbg\">x64dbg</a> since it works for both, x86 and x64 bit applications.</li>\n<li>Set a breakpoint on the socket send function. Which send function is used depends on your game but possible candidates are <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms740149(v=vs.85).aspx\" rel=\"nofollow noreferrer\" title=\"send msdn\">send</a>, <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms740148(v=vs.85).aspx\" rel=\"nofollow noreferrer\" title=\"sendto msdn\">sendto</a>, <a href=\"https://msdn.microsoft.com/de-de/library/windows/desktop/ms742203(v=vs.85).aspx\" rel=\"nofollow noreferrer\" title=\"WSASend msdn\">WSASend</a> and <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms741693(v=vs.85).aspx\" rel=\"nofollow noreferrer\" title=\"WSASendTo msdn\">WSASendTo</a>.</li>\n<li>Find the used send function by placing a breakpoint on all of them and watch which bp triggers. Now you know which function is used to send the data to the game server. I'll use <code>WSASendTo</code> in this example since it's very common in modern udp applications (I assume your game uses UDP - I could be wrong tho).</li>\n<li>As you know by the documentation of <code>WSASendTo</code> the function takes a pointer to one or more <code>WSABUF</code> structures as second argument. Usually it's just one <code>WSABUF</code>.</li>\n<li>Since almost every windows api function is a <code>__stdcall</code> the second argument will be at <code>[esp+0x8]</code> when your breakpoint triggers (<code>[esp]</code> is the return address, <code>[esp+0x4]</code> is the first argument <code>_In_ Socket s</code>).</li>\n<li>If you use x64dbg you can now follow the pointer to the <code>WSABUF</code> structure \"in dump\" to see the contents of it. You can also follow the return address at <code>[esp]</code> to find the function which called <code>WSASendTo</code>.</li>\n<li>You will probably need to restart the game a few times and set new breakpoints on the function which called the windows send function.</li>\n<li>At some point you will see that the contents of the buffer change - you said that only the first two bytes are encrypted, so you already know at what to put your eyes at.</li>\n<li>At this point you should know which function is responsible for encrypting your data. Maybe this is already all you need - maybe you need to go a bit higher in the calling hierarchy to find the function which actually starts the whole <code>packet create-encrypt-send</code> process.</li>\n</ol>\n<p>Hope that helps!</p>\n</div>",
            "votes": "3",
            "user": "Michael Pittino",
            "time": "Aug 13, 2017 at 11:12",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Michael Pittino",
                    "text": "<span class=\"comment-copy\">Well, as Mr. Skochinsky already said, it's very hard to help you without any asm snippets. Please consider adding some more information to you question so I can update my answer. BTW if you use x64dbg, why is the question tagged with <code>ollydbg</code>?</span>",
                    "time": null
                },
                {
                    "user": "Noob Programmer",
                    "text": "<span class=\"comment-copy\">Sorry, but I can't find the x64dbg tag. So I tagged it with ollydbg and IDA. I edited the question and added the decryption code on the server side. BTW, thank you for the time give an answer to my question.</span>",
                    "time": null
                }
            ]
        }
    ]
}