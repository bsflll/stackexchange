{
    "title": "How to make type libraries from Windows 10 SDK and DDK?",
    "link": "https://reverseengineering.stackexchange.com/questions/18669/how-to-make-type-libraries-from-windows-10-sdk-and-ddk",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to make type libraries from Windows 10 SDK and DDK version 16299 and/or 17134. I saw this tutorial <a href=\"https://www.hex-rays.com/products/ida/5.3/tilib.txt\" rel=\"noreferrer\">TILIB - utility to create type libraries for IDA</a>. Then I downloaded it from <a href=\"https://www.hex-rays.com/products/ida/support/download.shtml\" rel=\"noreferrer\">IDA Support: Download Center</a> and placed it in IDA installation folder i.e. <code>C:\\program files\\ida</code>. I tried with both SDK and DDK but both failed. Here are the outputs:</p>\n<ul>\n<li>SDK:</li>\n</ul>\n<pre><code>$&gt;tilib64.exe -c -h\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.17134.0\\um\\Windows.h\" abc.til\nError C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.17134.0\\um\\Windows.h,1: Can't open include file 'winapifamily.h'\n</code></pre>\n<ul>\n<li>DDK:</li>\n</ul>\n<pre><code>$&gt;tilib64.exe -c -h\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.17134.0\\km\\wdm.h\" abc.til\nError C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.17134.0\\km\\wdm.h,38: #error: Compiler version not supported by Windows DDK\n</code></pre>\n<p>Am I doing anything wrong? Should I add other header and lib files? What is the proper way to make a type libraries for Windows 10?</p>\n</div>",
    "votes": "6",
    "answers": 1,
    "views": "3k",
    "tags": [
        "ida",
        "windows"
    ],
    "user": "Biswapriyo",
    "time": "Jul 2, 2018 at 19:25",
    "comments": [
        {
            "user": "user22363",
            "text": "<span class=\"comment-copy\">You can import Windows SDK/DDK headers into IDA <code>View-&gt;Open subviews-&gt;Type Libraries</code>, similar question <a href=\"https://reverseengineering.stackexchange.com/questions/13175/how-to-import-windows-ddk-headers-into-ida\" title=\"how to import windows ddk headers into ida\">reverseengineering.stackexchange.com/questions/13175/â€¦</a></span>",
            "time": null
        },
        {
            "user": "0xec",
            "text": "<span class=\"comment-copy\">The latest version of IDA viz 7.1 does have type libs for <a href=\"https://www.hex-rays.com/products/ida/7.1/index.shtml\" rel=\"nofollow noreferrer\">ucrt 16299</a>. <i>\"FLIRT: vc/vc64: added signatures for ucrt 16299 (Windows 10 Fall Creators Update SDK)\"</i></span>",
            "time": null
        },
        {
            "user": "Anton Kukoba",
            "text": "<span class=\"comment-copy\">A quote from readme.txt for tilib: \"If your input file uses another header file (e.g. windows.h), you may opt to use the vc6win.til file instead of parsing it again. For that, just use the -b switch and specify vc6win.til as the base til. TILIB will load the contents of the specified file into the memory and parse the input file. All definitions from windows.h, including the preprocessor definitions, will be avaible:  tilib -c -hinput_header_file -bbase_til_file output_til_file\"  Or just take the headers and remove anything that tilib complains about.</span>",
            "time": null
        },
        {
            "user": "mrexodia",
            "text": "<span class=\"comment-copy\">For the DDK you could try loading ntoskrnl.exe with the pdb. That should give you many types, which you should then be able to export and use while reversing drivers.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<ul>\n<li><p><strong>Requirements:</strong> Here I used <code>tilb64.exe</code> from IDA SDK for making 64bit type library. IDA installation folder is <code>E:\\IDA70</code> and Windows SDK and DDK version 10.0.17134.0. </p></li>\n<li><p><strong>Options used:</strong> The following two batch files are: one for SDK and one for DDK. Copy the code in .bat or .cmd file. Edit the necessary paths for your IDA and SDK/DDK. </p></li>\n</ul>\n<pre><code>-c     create til-file\n-h...  parse .h file\n-D...  define a symbol\n-I...  list of include directories\n-e     ignore errors\n</code></pre>\n<h2>Windows.h header file:</h2>\n<pre><code>@echo off\ncls\nset ver=10.0.17134.0\nset folder=%ProgramFiles(x86)%\\Windows Kits\\10\\Include\\%ver%\nE:\\IDA70\\tilib64.exe -c ^\n-Cc1 ^\n-D_MSC_VER=1914 ^\n-D_MSC_FULL_VER=191426433 ^\n-D_WIN32_WINNT=0x0A00 ^\n-DNTDDI_VERSION=WDK_NTDDI_VERSION ^\n-DWDK_NTDDI_VERSION=NTDDI_WIN10_RS4 ^\n-DNTDDI_WIN10_RS4=0x0A000005 ^\n-D_WIN32 ^\n-D_AMD64_ ^\n-D_M_AMD64 ^\n-D_inline=inline ^\n-D__inline=inline ^\n-D__forceinline=inline ^\n-Dbool=uint8_t ^\n-DSIZE_T=size_t ^\n-DPSIZE_T=size_t* ^\n-h\"%folder%\\um\\Windows.h\" ^\n-I\"%folder%\\cppwinrt\\winrt\" ^\n-I\"%folder%\\km\" ^\n-I\"%folder%\\km\\crt\" ^\n-I\"%folder%\\shared\" ^\n-I\"%folder%\\ucrt\" ^\n-I\"%folder%\\um\" ^\n-I\"%folder%\\winrt\" ^\n-e ^\nWindows_17134.til\n</code></pre>\n<h2>ntddk.h header file:</h2>\n<pre><code>@echo off\ncls\nset ver=10.0.17134.0\nset folder=%ProgramFiles(x86)%\\Windows Kits\\10\\Include\\%ver%\nE:\\IDA70\\tilib64.exe -c ^\n-Cc1 ^\n-D_MSC_VER=1914 ^\n-D_MSC_FULL_VER=191426433 ^\n-D_WIN32_WINNT=0x0A00 ^\n-DNTDDI_VERSION=WDK_NTDDI_VERSION ^\n-DWDK_NTDDI_VERSION=NTDDI_WIN10_RS4 ^\n-DNTDDI_WIN10_RS4=0x0A000005 ^\n-D_WIN32 ^\n-D_AMD64_ ^\n-D_M_AMD64 ^\n-D_inline=inline ^\n-D__inline=inline ^\n-D__forceinline=inline ^\n-D__volatile=volatile ^\n-Dbool=uint8_t ^\n-DRC_INVOKED ^\n-D_INC_STRING ^\n-h\"%folder%\\km\\ntddk.h\" ^\n-I\"%folder%\\cppwinrt\\winrt\" ^\n-I\"%folder%\\km\" ^\n-I\"%folder%\\km\\crt\" ^\n-I\"%folder%\\shared\" ^\n-I\"%folder%\\ucrt\" ^\n-I\"%folder%\\um\" ^\n-I\"%folder%\\winrt\" ^\n-e ^\nntddk_17134.til\n</code></pre>\n<ul>\n<li><strong>Notes:</strong> The include folder (with <code>-I</code> option) may change in future. The definitions (with <code>-D</code> option) are added by judging the conditional <code>#define</code> in corresponding header files. Add more definition until you satisfied. But there are many syntax errors in header files which are suppressed with <code>-e</code> option. Those can be remove only by editing every header files but that is more time consuming and tedious.</li>\n</ul>\n</div>",
            "votes": "6",
            "user": "Biswapriyo",
            "time": "Jul 22, 2018 at 13:58",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user202729",
                    "text": "<span class=\"comment-copy\">Also <code>-Cc1</code> indicates that the compiler id is 1 (visual c++) -- from <code>tilib -C?</code>.</span>",
                    "time": null
                }
            ]
        }
    ]
}