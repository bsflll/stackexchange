{
    "title": "Decompiling Android application",
    "link": "https://reverseengineering.stackexchange.com/questions/42/decompiling-android-application",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The Android java code is compiled into Dalvik byte code, which is quite readable. I wonder, is it possible in theory and in practice to write a decompilation software for Dalvik byte code?</p>\n</div>",
    "votes": "31",
    "answers": 6,
    "views": "13k",
    "tags": [
        "decompilation",
        "java",
        "android",
        "byte-code"
    ],
    "user": "Mellowcandle",
    "time": "Apr 10, 2013 at 11:14",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It's not only possible but has been done already, and not just once. Here's three I know about, and there may be more.</p>\n<ol>\n<li><p>Kivlad by Cody Brocious</p>\n<p><a href=\"http://www.matasano.com/research/kivlad/\" rel=\"noreferrer\">http://www.matasano.com/research/kivlad/</a></p>\n</li>\n<li><p>DAD by Zost (Androguard project):</p>\n<p><a href=\"http://code.google.com/p/androguard/wiki/Decompiler\" rel=\"noreferrer\">http://code.google.com/p/androguard/wiki/Decompiler</a></p>\n</li>\n<li><p>JEB by Nicolas Falliere (commercial)</p>\n<p><a href=\"http://www.android-decompiler.com/\" rel=\"noreferrer\">http://www.android-decompiler.com/</a></p>\n</li>\n</ol>\n<p>Then there are all the Java decompilers that can be used after using <a href=\"http://code.google.com/p/dex2jar/\" rel=\"noreferrer\"><code>dex2jar</code></a> or <a href=\"http://siis.cse.psu.edu/dare/index.html\" rel=\"noreferrer\">Dare</a> on the Dalvik binary.</p>\n</div>",
            "votes": "36",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user209",
                    "text": "<span class=\"comment-copy\">In theory all Java decompilers work as well as Dalvik class files can be transformed (back) into Java class files. In addition to the links above, you might want to look at <a href=\"http://www.bodden.de/2013/01/08/soot-android-instrumentation/\" rel=\"nofollow noreferrer\">Soot</a> which recently added Dalvik support.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I think it should be possible even with current Java decompilers, by patching their code. They have at least one big difference - while JVM is stack-based, Dalvik is register-based. This difference could be handled with not so much code. Second difference - bytecode format. So you need use code, which is able to disassemble Dalvik bytecode format.</p>\n</div>",
            "votes": "7",
            "user": "0xC0000022L",
            "time": "Apr 17, 2013 at 4:57",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Don't forget <a href=\"http://dexter.dexlabs.org/\" rel=\"noreferrer\">http://dexter.dexlabs.org/</a> - <em>Dexter is a static android application analysis tool.</em></p>\n</div>",
            "votes": "5",
            "user": "samuirai",
            "time": "Apr 10, 2013 at 10:17",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><a href=\"https://github.com/skylot/jadx\" rel=\"nofollow\">jadx</a> has both CLI and GUI, and it's open source.</p>\n</div>",
            "votes": "3",
            "user": "JayXon",
            "time": "Jan 24, 2015 at 21:06",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Another tool is <strong>Bytecode Viewer</strong>: </p>\n<p><a href=\"https://github.com/Konloch/bytecode-viewer\" rel=\"nofollow\">https://github.com/Konloch/bytecode-viewer</a></p>\n<blockquote>\n<p>Bytecode Viewer is an Advanced Lightweight Java Bytecode Viewer, GUI\n  Java Decompiler, GUI Bytecode Editor, GUI Smali, GUI Baksmali, GUI APK\n  Editor, GUI Dex Editor, GUI APK Decompiler, GUI DEX Decompiler, GUI\n  Procyon Java Decompiler, GUI Krakatau, GUI CFR Java Decompiler, GUI\n  FernFlower Java Decompiler, GUI DEX2Jar, GUI Jar2DEX, GUI Jar-Jar, Hex\n  Viewer, Code Searcher, Debugger and more. It's written completely in\n  Java, and it's open sourced. It's currently being maintained and\n  developed by Konloch.</p>\n</blockquote>\n</div>",
            "votes": "2",
            "user": "Nik NexAndrX",
            "time": "Feb 23, 2015 at 9:35",
            "is_accepted": false,
            "comments": [
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">An example of usage would be more than welcome ! :-)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In addition to the software listed by Igor, there are also tools like <a href=\"http://code.google.com/p/android-apktool\" rel=\"nofollow\">apktool</a> that can be used to decompile code : it transforms dalvik bytecode to smali, a language specific to the dalvik virtual machine (see instructions/opcodes <a href=\"http://pallergabor.uw.hu/androidblog/dalvik_opcodes.html\" rel=\"nofollow\">here</a> for example).</p>\n<p>You can also edit resources in the application, and build the application back (but it will break the original signature as you will have to re-sign it with your own key)</p>\n</div>",
            "votes": "1",
            "user": null,
            "time": "Apr 10, 2013 at 1:58",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">Sorry but what you're describing is <i>disassembly</i>, not decompilation. Smali is just a way to represent Dalvik bytecode, it's not a high level language like Java.</span>",
                    "time": null
                }
            ]
        }
    ]
}