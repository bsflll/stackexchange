{
    "title": "Searching for strings only partially works in x64Dbg",
    "link": "https://reverseengineering.stackexchange.com/questions/30279/searching-for-strings-only-partially-works-in-x64dbg",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Please note that I am new to x64dbg.</p>\n<p>As you can be seen in the picture below, the error message has the string</p>\n<pre><code>[ebp+8]:L\"The information you have entered is invalid!\\n...\"\n</code></pre>\n<p><a href=\"https://i.sstatic.net/My60T.png\" rel=\"nofollow noreferrer\"><img alt=\"address with string\" src=\"https://i.sstatic.net/My60T.png\"/></a></p>\n<p>However, when I do\nSearch For &gt; All Modules &gt; String References, it does not pop up:</p>\n<p><a href=\"https://i.sstatic.net/0HSIy.png\" rel=\"nofollow noreferrer\"><img alt=\"no results found\" src=\"https://i.sstatic.net/0HSIy.png\"/></a></p>\n<p>I am wondering why this searching only works for some strings, not all strings.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "498",
    "tags": [
        "x64dbg"
    ],
    "user": "Mahmoud Maarouf",
    "time": "Apr 18, 2022 at 5:29",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Just because a particular string is presented in your process memory during the execution of your program, it doesn't mean that it was prepared in advance (on disk) before you launch a program.</p>\n<p>There are many other possibilities, how your program may load a \"non-existing\" string, for example:</p>\n<ul>\n<li>The string is combined (e.g. concatenated) from others,</li>\n<li>the string is entered by user,</li>\n<li>the string is created from its encrypted form,</li>\n<li>the string is from dynamically loaded DLL,</li>\n<li>the string is loaded from resources,</li>\n<li>the string is read from an external file,</li>\n<li>the string is loaded from an environmental variable,</li>\n<li>... and so on.</li>\n</ul>\n<p>Searching for a particular string is one of the simplest method in reverse engineering, but in the same time one of the <em>least reliable method</em>.</p>\n</div>",
            "votes": "1",
            "user": "MarianD",
            "time": "Apr 18, 2022 at 6:01",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Mahmoud Maarouf",
                    "text": "<span class=\"comment-copy\">Great, thank you. How may I search a dynamically loaded string? As shown in my case above.</span>",
                    "time": null
                },
                {
                    "user": "MarianD",
                    "text": "<span class=\"comment-copy\">@MahmoudMaarouf, searching for dynamically loaded strings has no meaning, you will have no success with this method.</span>",
                    "time": null
                }
            ]
        }
    ]
}