{
    "title": "Is there a way to explicitly connect r2pipe to an existing radare2 session that I have open?",
    "link": "https://reverseengineering.stackexchange.com/questions/18342/is-there-a-way-to-explicitly-connect-r2pipe-to-an-existing-radare2-session-that",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I understand that I can execute my script within a session using <code>[0x401000]&gt; . server.py</code> and the pipe will be connected to it when I call <code>r2pipe.open()</code> with no arguments. </p>\n<p>Ideally I would like to spawn a simple tcp server in python which waits for specific commands from a client. The client is invoked from a live r2 session like <code>[0x401000]&gt; . client.py --command doAnalysis</code>. The command is passed to the server which opens a pipe to my r2 session, performs the analysis, then maybe updates my session (really to just be able to run commands from the server which was not opened from my r2 session). The reason I require the server to always be running is because it will be collecting data and I don't want to be re-collecting that data every time I need to do some analysis. I can't invoke the server from my r2 session because the session will be blocked by the server. </p>\n<p>It would be great if the server could open an r2pipe directly to my r2 session but I don't know how to do that or if is even possible. I tried using pickle to send the r2 instance over a socket but it couldn't pickle it. Any thoughts? </p>\n</div>",
    "votes": "5",
    "answers": 1,
    "views": "934",
    "tags": [
        "debugging",
        "radare2",
        "python"
    ],
    "user": "Nux",
    "time": "May 23, 2018 at 17:18",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm not sure I fully understood you, but I'll give it a try anyway.</p>\n<p>The following instructions will explain how to achieve something like this:|</p>\n<p><a href=\"https://i.sstatic.net/CXWs9.jpg\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/CXWs9.jpg\"/></a></p>\n<hr/>\n<p>radare2 comes with its own webserver. Although at first, it might seems like an overkill, its actually quite useful, especially when you want to debug embedded systems, or simply to execute commands from a remote terminal.</p>\n<p>Simply launch the web server with <code>=h &lt;port&gt;</code> and connect to it with any HTTP client.</p>\n<p>You can print the help for this command by using <code>=h?</code>:</p>\n<pre><code>[0x00000000]&gt; =h?\n|Usage:  =[hH] [...] # http server\n| http server:\n| =h port       listen for http connections (r2 -qc=H /bin/ls)\n| =h-           stop background webserver\n| =h--          stop foreground webserver\n| =h*           restart current webserver\n| =h&amp; port      start http server in background\n| =H port       launch browser and listen for http\n| =H&amp; port      launch browser and listen for http in background\n</code></pre>\n<p>So let's use a oneliner command to spawn a radare2 web server with a session to our beloved <code>/bin/ls/</code>:</p>\n<pre><code>$ r2 -c=h /bin/ls\nStarting http server...\nopen http://localhost:9090/\nr2 -C http://localhost:9090/cmd/\n</code></pre>\n<p>Good, now that we have an HTTP server running with an open session, let's connect to it.</p>\n<p>You can do this with <code>curl</code>:</p>\n<pre><code>$ curl http://127.0.0.1:9090/cmd/?EHello,World!\n .--.     .--------------.\n | _|     |              |\n | O O   &lt;  Hello,World! |\n |  |  |  |              |\n || | /   `--------------'\n |`-'|\n `---'\n</code></pre>\n<p>You can even do this from your favorite browser:</p>\n<p><a href=\"https://i.sstatic.net/0X4Mh.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/0X4Mh.png\"/></a></p>\n<p>Although it's cool, it isn't helping you -- you asked for a solution using r2pipe. Well... there is!</p>\n<p><strong>What is r2pipe?</strong></p>\n<blockquote>\n<p>The r2pipe APIs are based on a single r2 primitive found behind\n  r_core_cmd_str() which is a function that accepts a string parameter\n  describing the r2 command to run and returns a string with the result.</p>\n<p><em>Source: <a href=\"https://github.com/radare/radare2-r2pipe\" rel=\"noreferrer\">r2pipe repository</a></em></p>\n</blockquote>\n<p>As you probably know, using python, you can just do <code>import r2pipe</code> and <code>r2pipe.open(\"/bin/ls\")</code> to open a radare2 session with \"/bin/ls\". Did you know that you can connect with r2pipe to a remote web server? Yup.</p>\n<p>Let's write a quick script to do so:</p>\n<pre><code>import r2pipe\n\nprint(\"[+] Connecting with python r2pipe\")\n\nr2_remote = r2pipe.open(\"http://127.0.0.1:9090\")\ncommand = \"?E Welcome from server!\"\n\nwhile command != \"stop\":\n    print (r2_remote.cmd(command))\n    command = raw_input(\"r2cmd &gt; \")\n</code></pre>\n<p>Save the script to <code>poc.py</code> on you drive.</p>\n<p>Now let's run <code>r2 -c=h /bin/ls</code> in one terminal and <code>python poc.py</code> in another one:</p>\n<p><a href=\"https://i.sstatic.net/s6Rbw.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/s6Rbw.png\"/></a></p>\n<p>Yes, radare2 can also print QR codes.</p>\n</div>",
            "votes": "7",
            "user": "Megabeets",
            "time": "May 23, 2018 at 19:44",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Nux",
                    "text": "<span class=\"comment-copy\">Sorry I have trouble explaining myself sometimes. Is there a way to use Visual Mode using this method? or is it possible to throw the webserver in the background and use r2 normally in a single terminal? Then if I want to invoke a task in my script from the r2 in that terminal, the script can connect to the webserver instead and do its thing. That would be perfect. Your answer is exactly what I'm looking for btw thanks a bunch!!</span>",
                    "time": null
                },
                {
                    "user": "Nux",
                    "text": "<span class=\"comment-copy\">Hold up! I got it. I open a file with r2. Then do <code>e http.sandbox=false</code> (so I can run scripts) and <code>=h&amp;</code> and boom webservice in background and r2 still running normally! The setup I'm after may seem a little strange but everything works like I originally wanted. My python server runs and when a command is received it connects to the webservice and forwards any r2.cmd()'s to it! Thanks again for your help!</span>",
                    "time": null
                },
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">wow. Didn't know you can r2pipe to a web server. Good to know that!</span>",
                    "time": null
                }
            ]
        }
    ]
}