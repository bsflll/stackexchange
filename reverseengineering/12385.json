{
    "title": "Reversing an MFC application: How to find class memory layouts?",
    "link": "https://reverseengineering.stackexchange.com/questions/12385/reversing-an-mfc-application-how-to-find-class-memory-layouts",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have an old computer game I want to reverse (Windows 95 \"Hover!\" to be exact), and I figured out that it uses the MFC.</p>\n<p>HexRays often decompiles pseudocode like this, which, for example, deals with an MFC class <a href=\"https://msdn.microsoft.com/en-us/library/48xz4yz9.aspx\" rel=\"nofollow noreferrer\"><code>CWinThread</code></a>:\n<a href=\"https://i.sstatic.net/iRS4F.png\" rel=\"nofollow noreferrer\"><img alt=\"IDA MFC code pseudocode\" src=\"https://i.sstatic.net/iRS4F.png\"/></a></p>\n<p>As you can see, the variable <code>this</code> is the <code>CWinThread</code> instance, but the layout of it seems undefined, it accesses its members through offsets.</p>\n<p>I want / need to find out which members are at which offsets.</p>\n<p>Even while easy to guess in the marked example (+48 seems to be the peeked message), there's another member slightly more below at offset +60 about which I have no clue. I searched the MSDN documentation and looked into the header file to find a layout of the class, but couldn't find anything that helped me.</p>\n<p>Where would I retrieve such member / memory layout information about MFC classes?</p>\n</div>",
    "votes": "4",
    "answers": 3,
    "views": "5k",
    "tags": [
        "hexrays",
        "mfc"
    ],
    "user": "Ray",
    "time": "Apr 12, 2016 at 17:51",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You might have a look <a href=\"http://fossies.org/windows/misc/winscp577source.zip/libs/mfc/source/thrdcore.cpp\" rel=\"nofollow noreferrer\">here</a>, line number 456.</p>\n<p>The method you are looking for seems to be the OnIdle function.</p>\n<p><strong>Remark:</strong> In 2018, the link is not active any more. However, the sources might be found in a Visual Studio Community edition (I am using VS2015), directory\n\"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\mfc\".\nThe CWinThread class is contained in the file thrdcore.cpp.</p>\n</div>",
            "votes": "1",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Ray",
                    "text": "<span class=\"comment-copy\">That's pretty amazing! Anyway, if I find another MFC class, how would I look this up?</span>",
                    "time": null
                },
                {
                    "user": "josh",
                    "text": "<span class=\"comment-copy\">According to MS, the MFC full source code has been released by them. See <a href=\"https://msdn.microsoft.com/en-us/library/bs046sh0.aspx\" rel=\"nofollow noreferrer\">msdn.microsoft.com/en-us/library/bs046sh0.aspx</a>. Possibly only in the professional version of VStudio. Until some years ago, I had made many projects with MFC, and it was always possible to step into the MFC sources. However, I have not much reversing experience with them. The Ida decompiler seems to do a good job in the recognition of MFC.</span>",
                    "time": null
                },
                {
                    "user": "Ray",
                    "text": "<span class=\"comment-copy\">The link seems dead, is it possible to get a new one?</span>",
                    "time": null
                },
                {
                    "user": "josh",
                    "text": "<span class=\"comment-copy\">Here the link is still alive!</span>",
                    "time": null
                },
                {
                    "user": "josh",
                    "text": "<span class=\"comment-copy\">No problem, Ray. I searched a little and could not find the sources in the web. However, they are contained in VStudio. I edited the answer accordingly.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In order to easily import the information into IDA it's possible to:</p>\n<ul>\n<li>Download Visual C++ and MFC (ideally the same version)</li>\n<li><p>Make a very small C++ file which contains the definition of the type, for example:</p>\n<pre><code>#include &lt;afxwin.h&gt;\n</code></pre>\n<p>(you can verify that <code>afxwin.h</code> header indeed contains the definition of the class) Assume the file is saved as <code>a.cpp</code></p></li>\n<li><p>Compile it. (it's not necessary to link)</p>\n<pre><code>cl /c /EHsc /Zi a.cpp\n</code></pre>\n<p>The <code>/Zi</code> flag is important, it instructs the compiler to generate debug info.</p>\n<p>Along with <code>a.obj</code>, a <code>vcXXX.pdb</code> file should also be generated (can be <code>vc80.pdb</code>, <code>vc100.pdb</code>, <code>vc140.pdb</code>, etc. depends on the compiler version)</p></li>\n<li>Enter IDA, open the project, choose <code>File -&gt; Load file -&gt; PDB file...</code>, then load that PDB file. Optionally enable <code>Types only</code></li>\n</ul>\n<p>The types should appear in the \"Local Types\" tab now.</p>\n</div>",
            "votes": "2",
            "user": "user202729",
            "time": "Sep 25, 2018 at 16:16",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user202729",
                    "text": "<span class=\"comment-copy\">@RayKoopa Cannot reproduce. / Does any other struct definition get loaded?</span>",
                    "time": null
                },
                {
                    "user": "Ray",
                    "text": "<span class=\"comment-copy\">Nevermind, I was dumbly trying to load the PDB generated for a sample MFC app. I now loaded the PDB files provided with the MFC source. However, IDA only creates a vtable for the main class (like <code>CObject</code>) and not for child classes, like <code>CWinApp</code>. That makes it slightly useless...</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>One way would be to get your hand on a copy of the compiler that was used to produce the binary, including the stock libraries that shipped with it - ideally the exact same version, or at least as close as possible. </p>\n<p>Then you can simply compile suitable little test programs and load them into IDA for inspection and/or in order to export the type info and import it into the IDA database for your binary. Single struct defs can easily be transported via the clipboard (display as C struct, copy, switch to the other IDA, paste).</p>\n</div>",
            "votes": "0",
            "user": "DarthGizka",
            "time": "Apr 9, 2016 at 5:13",
            "is_accepted": false,
            "comments": []
        }
    ]
}