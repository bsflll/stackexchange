{
    "title": "Handling firmware with many copies of the same code/data in different address spaces",
    "link": "https://reverseengineering.stackexchange.com/questions/21231/handling-firmware-with-many-copies-of-the-same-code-data-in-different-address-sp",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>When loading the firmware I am working with, it copies multiple regions of code/data to another write-able memory region. </p>\n<p>I normal load the code/data into the destination location and leave the source empty. But have just noticed the firmware calls some of the functions in the original/source region.</p>\n<p>So I could leave all of the source data/code and load the duplicate data/code regions, but what I am wanting to avoid is duplicated reverse engineer the functions. </p>\n<p>So what I ideally want is someway to alias/memory map the regions so there is only \"one\" version of the memory, thus one labeled data and RE functions.</p>\n</div>",
    "votes": "4",
    "answers": 0,
    "views": "226",
    "tags": [
        "firmware",
        "ghidra"
    ],
    "user": "Simeon Pilgrim",
    "time": "Apr 28, 2019 at 8:29",
    "comments": [],
    "answers_data": []
}