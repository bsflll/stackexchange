{
    "title": "Unpack files from executable",
    "link": "https://reverseengineering.stackexchange.com/questions/16255/unpack-files-from-executable",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have an exe application that contains three files packed in it. I know how those files were named before packing, I have around 80% of packed files and some of main executable file binary code. I've also found out that the execution creates and uses two files in <code>\\AppData\\Local\\Temp\\</code> called <code>MBX@pid@3bytes.###</code> which contains application entry I believe. And when I scan the file header with PEiD I get <code>Nothing found [Overlay] *</code>.</p>\n<p>Thats my objdump result</p>\n<pre><code>application.exe:     file format pei-i386\narchitecture: i386, flags 0x00000102:\nEXEC_P, D_PAGED\nstart address 0x0083db33\n\nCharacteristics 0x30f\n    relocations stripped\n    executable\n    line numbers stripped\n    symbols stripped\n    32 bit words\n    debugging information removed\n\nTime/Date       Tue Dec  8 10:45:51 2009\nMagic           010b    (PE32)\nMajorLinkerVersion  6\nMinorLinkerVersion  0\nSizeOfCode      00000000\nSizeOfInitializedData   00150000\nSizeOfUninitializedData 00000000\nAddressOfEntryPoint 0043db33\nBaseOfCode      0043c000\nBaseOfData      001b2000\nImageBase       00400000\nSectionAlignment    00001000\nFileAlignment       00001000\nMajorOSystemVersion 4\nMinorOSystemVersion 0\nMajorImageVersion   0\nMinorImageVersion   0\nMajorSubsystemVersion   4\nMinorSubsystemVersion   0\nWin32Version        00000000\nSizeOfImage     00457000\nSizeOfHeaders       00001000\nCheckSum        00000000\nSubsystem       00000002    (Windows GUI)\nDllCharacteristics  00000000\nSizeOfStackReserve  00100000\nSizeOfStackCommit   00001000\nSizeOfHeapReserve   00100000\nSizeOfHeapCommit    00001000\nLoaderFlags     00000000\nNumberOfRvaAndSizes 00000010\n\nThe Data Directory\nEntry 0 00000000 00000000 Export Directory [.edata (or where ever we found it)]\nEntry 1 0044eb2c 0000003c Import Directory [parts of .idata]\nEntry 2 003dc000 0005e81a Resource Directory [.rsrc]\nEntry 3 00000000 00000000 Exception Directory [.pdata]\nEntry 4 00000000 00000000 Security Directory\nEntry 5 00000000 00000000 Base Relocation Directory [.reloc]\nEntry 6 00000000 00000000 Debug Directory\nEntry 7 00000000 00000000 Description Directory\nEntry 8 00000000 00000000 Special Directory\nEntry 9 00000000 00000000 Thread Storage Directory [.tls]\nEntry a 00000000 00000000 Load Configuration Directory\nEntry b 00000000 00000000 Bound Import Directory\nEntry c 0044e000 0000005c Import Address Table Directory\nEntry d 0022c5f8 00000060 Delay Import Directory\nEntry e 00000000 00000000 CLR Runtime Header\nEntry f 00000000 00000000 Reserved\n\nThere is an import table in 6 at 0x84eb2c\n\nThe Import Tables (interpreted 6 section contents)\n vma:            Hint    Time      Forward  DLL       First\n                 Table   Stamp     Chain    Name      Thunk\n 0044eb2c   0044eb68 00000000 00000000 0044ecb8 0044e000\n\n    DLL Name: KERNEL32.dll\n    vma:  Hint/Ord Member-Name Bound-To\n    44ebc4    537  InitializeCriticalSection\n    44ebe0    408  GetProcAddress\n    44ebf2    594  LocalFree\n    44ebfe    667  RaiseException\n    44ec10    590  LocalAlloc\n    44ec1e    375  GetModuleHandleA\n    44ec32    583  LeaveCriticalSection\n    44ec4a    143  EnterCriticalSection\n    44ec62    429  GetShortPathNameA\n    44ec76    709  ResumeThread\n    44ec86    925  WriteProcessMemory\n    44ec9c    400  GetPrivateProfileSectionA\n    44ed52    434  GetStringTypeA\n    44ed42    571  LCMapStringW\n    44ed32    570  LCMapStringA\n    44ecfa    714  RtlUnwind\n    44ed06    903  WideCharToMultiByte\n    44ed1c    619  MultiByteToWideChar\n    44ed64    437  GetStringTypeW\n\n 0044eb40   0044ebb8 00000000 00000000 0044ecee 0044e050\n\n    DLL Name: USER32.dll\n    vma:  Hint/Ord Member-Name Bound-To\n    44ecc6    142  DefWindowProcA\n    44ecd8      2  AdjustWindowRectEx\n\n 0044eb54   00000000 00000000 00000000 00000000 00000000\n\nSections:\nIdx Name          Size      VMA       LMA       File off  Algn\n  0 0             000b7000  00401000  00401000  00001000  2**2\n                  CONTENTS, ALLOC, LOAD, CODE, DATA\n  1 1             00029000  005b2000  005b2000  000b8000  2**2\n                  CONTENTS, ALLOC, LOAD, CODE, DATA\n  2 2             00001000  0062f000  0062f000  000e1000  2**2\n                  CONTENTS, ALLOC, LOAD, CODE, DATA\n  3 3             0005e81a  007dc000  007dc000  000e2000  2**2\n                  CONTENTS, ALLOC, LOAD, CODE, DATA\n  4 4             00001000  0083b000  0083b000  00141000  2**2\n                  CONTENTS, ALLOC, LOAD, CODE, DATA\n  5 5             0000c000  0083c000  0083c000  00142000  2**2\n                  CONTENTS, ALLOC, LOAD, CODE, DATA\n  6 6             00000d76  0084e000  0084e000  0014e000  2**2\n                  CONTENTS, ALLOC, LOAD, CODE, DATA\n  7 7             00002000  0084f000  0084f000  0014f000  2**2\n                  CONTENTS, ALLOC, LOAD, CODE, DATA\n</code></pre>\n<p>The result I'm hoping for is extracted files that have been packed into the executable.</p>\n<h2>Update</h2>\n<p>I've used <code>FastScanner 3.0</code> against the application and I've found out that it was packed just as the previous one, using MoleBox Pro. Here's all the FastScanner gueses (same as in previous app).\n<a href=\"https://i.sstatic.net/x6CJB.png\" rel=\"nofollow noreferrer\"><img alt=\"FastScanner results\" src=\"https://i.sstatic.net/x6CJB.png\"/></a></p>\n<p>So everything seems to be just like it was, but the binary file is different and I can't unpack it in any way, when back in previous application it wasn't a problem at all. Molebox is long dead so I doubt it was packed by newer version. \nAlso messing with ollydbg I've found out that the application have entry points on those two files that I've called before.</p>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "7k",
    "tags": [
        "unpacking"
    ],
    "user": "erexo",
    "time": "Sep 5, 2017 at 17:30",
    "comments": [
        {
            "user": "NirIzr",
            "text": "<span class=\"comment-copy\">Aside from \"the result you're hoping for\", what have you tried? where are you stuck? What do you need help with?</span>",
            "time": null
        },
        {
            "user": "erexo",
            "text": "<span class=\"comment-copy\">I've tried to detect the packing program via PEiD but with no results. I've tried to determine if I can find raw packed files in the executable but its encrypted (packed). I have messed with ollydbg to find correct EPs but with no success. Also I've tried to use unpackers for common packing programs like molebox or UPX. I'm not very good at it thats why I've came here for help, I don't know what else I can do</span>",
            "time": null
        },
        {
            "user": "NirIzr",
            "text": "<span class=\"comment-copy\">Please elaborate as much as possible and in the question itself, and not in the comments, so as many people as possible will see the additional information.</span>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">Also explain how do you know there are three files packed into this executable.</span>",
            "time": null
        },
        {
            "user": "erexo",
            "text": "<span class=\"comment-copy\">Because of I'm aware of what have been packed, I've unpacked it before but back then it was packed using molebox, PEiD showed me that in the header so I known how to work with it. Now it have been packed with unknown packer, thats why im so curious about it, but I'm stuck and I dont know how to deal with that. Also if \"result I'm hoping for\" sounded rude, my apologies, it wasn't my intention.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It turns out that the newer version was packed just as the previous one, using same Molebox Pro. But it was messing with PE Headers at runtime so I've needed to unwrap it from those masking layers first. <a href=\"https://tuts4you.com/download.php?view.3503\" rel=\"nofollow noreferrer\">Scylla</a> was perfect tool for that.</p>\n</div>",
            "votes": "1",
            "user": "erexo",
            "time": "Sep 6, 2017 at 17:29",
            "is_accepted": true,
            "comments": []
        }
    ]
}