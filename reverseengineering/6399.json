{
    "title": "How does IDA pro generate function names?",
    "link": "https://reverseengineering.stackexchange.com/questions/6399/how-does-ida-pro-generate-function-names",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am using IDA pro to decompile a series of applications.  These applications share a common feature and what I have found is that in each decompilation each application shares the same set of functions.  If the binary is stripped how does IDA pro work out the function names ?  </p>\n<p>The functions that I am seeing in common between the applications are all very abstract, for example <code>v404()</code>, and as far as I can work out don't come from any open source library set of functions.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "decompilation",
        "functions",
        "symbols",
        "debugging-symbols"
    ],
    "user": "allbabel",
    "time": "Oct 8, 2014 at 11:52",
    "comments": [
        {
            "user": "Jason Geffner",
            "text": "<span class=\"comment-copy\">Can you give some examples of the function names that you're seeing?</span>",
            "time": null
        },
        {
            "user": "Gizmo",
            "text": "<span class=\"comment-copy\">v404()? Hm, mine always look like <code>sub_&lt;address of function&gt;(params)</code></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've seen 4 naming conventions being used: </p>\n<ul>\n<li>vNNN() when decompiling ARM binaries (i.e.: Android JNI code) - not sure how it numbers them as it doesn't seem it's related to their position or address within the binary.</li>\n<li>sub_HHHHHH() when decompiling x86/64 binaries (i.e.: for Windows, OSX) with the actual address on the name</li>\n<li>_name/__name() for functions IDA is able to identify via its FLIRT algorithm</li>\n<li>finally the clear names for functions it has enough information on the binaries to reverse as they were named originally.</li>\n</ul>\n</div>",
            "votes": "3",
            "user": "Roberto Andrade",
            "time": "Nov 17, 2014 at 21:18",
            "is_accepted": true,
            "comments": []
        }
    ]
}