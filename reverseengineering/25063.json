{
    "title": "how to decompile or unite multipart dex class in an android apk file?",
    "link": "https://reverseengineering.stackexchange.com/questions/25063/how-to-decompile-or-unite-multipart-dex-class-in-an-android-apk-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Some Android Apks contain multiple classes.dex files which are numbered like this: classes1.dex, classes2.dex ... and when i try to decompile them it would result into multiple source codes. Is there a way to integrate them into one dex or jar file then decompile so there would be one source code in the end?</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "2k",
    "tags": [
        "android",
        "apk",
        "dalvik"
    ],
    "user": "kamyar haqqani",
    "time": "May 19, 2020 at 14:22",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Dex files have a maximum amount of methods which they can contain, <a href=\"https://developer.android.com/studio/build/multidex\" rel=\"nofollow noreferrer\">specifically 64k methods</a>.</p>\n<p>Jar files are just zip files containing class files.</p>\n<p>Knowing both of these, all you need to do is <code>dex2jar</code> (or whatever you're using to create the jar file from the dex file) each dex file individually. Then unzip each file to the same directory, enter the directory and then zip them all up into a single, massive, jar (zip file).</p>\n<p>After this you can open this as a single jar with <code>jadx</code> or whatever tool you'd like.</p>\n</div>",
            "votes": "3",
            "user": "diff",
            "time": "Jun 18, 2020 at 21:23",
            "is_accepted": false,
            "comments": []
        }
    ]
}