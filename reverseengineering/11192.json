{
    "title": "how to find gsharedinfo from current memory?",
    "link": "https://reverseengineering.stackexchange.com/questions/11192/how-to-find-gsharedinfo-from-current-memory",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>How would you scann all sections mapped in the local memory context to find <code>gsharedinfo</code>?</p>\n<p><code>gsharedinfo</code> is not exported from <code>user32.dll</code> on Windows server 2008 !!!</p>\n<p>I would be grateful if you could help me.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "565",
    "tags": [
        "debugging",
        "c",
        "kernel-mode"
    ],
    "user": "forbiddenhi",
    "time": "Oct 30, 2015 at 8:11",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>See <a href=\"https://github.com/Meatballs1/cve-2013-1300/blob/master/cve-2013-1300/exploit.c#L16\" rel=\"nofollow\">https://github.com/Meatballs1/cve-2013-1300/blob/master/cve-2013-1300/exploit.c#L16</a> for a way to find <code>gSharedInfo</code> by scanning <code>UserRegisterWowHandlers</code>:</p>\n<pre><code>PSHAREDINFO LocateSharedInfo()\n{\n    ULONG i;\n    ...\n    ULONG_PTR pfnUserRegisterWowHandlers = (ULONG_PTR)GetProcAddress(GetModuleHandle(\"USER32.dll\"), \"UserRegisterWowHandlers\");\n\n    ...\n\n    for (i = pfnUserRegisterWowHandlers; \n         i &lt;= pfnUserRegisterWowHandlers +0x250; \n         ++i )\n    {\n        if (0x40c7 == *(WORD*)i &amp;&amp; \n            0xb8 == *(BYTE*)(i + 7))\n        {\n            return (PSHAREDINFO)(*(DWORD*)(i + 8));\n        }\n    }\n}\n</code></pre>\n</div>",
            "votes": "0",
            "user": "Jason Geffner",
            "time": "Nov 2, 2015 at 18:01",
            "is_accepted": true,
            "comments": []
        }
    ]
}