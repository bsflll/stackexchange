{
    "title": "Fixing weird no-sections embedded ELF binary for decompilation",
    "link": "https://reverseengineering.stackexchange.com/questions/13381/fixing-weird-no-sections-embedded-elf-binary-for-decompilation",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I recently stumbled upon a weird binary, complied by a \"Qualcomm Hexagon\" compiler. The ELF binary seems fine, however section tables (section header size and string table index) seem empty. For those reasons OBJDUMP didn't work on the binary.</p>\n<p>Here is the output from the readelf.</p>\n<pre><code>    $ ./hexagon-readelf -a wierdBin.elf \n    ELF Header:\n      Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 \n      Class:                             ELF32\n      Data:                              2's complement, little endian\n      Version:                           1 (current)\n      OS/ABI:                            UNIX - System V\n      ABI Version:                       0\n      Type:                              EXEC (Executable file)\n      Machine:                           Qualcomm Hexagon\n      Version:                           0x1\n      Entry point address:               0x40200000\n      Start of program headers:          52 (bytes into file)\n      Start of section headers:          0 (bytes into file)\n      Flags:                             0x3, V4\n      Size of this header:               52 (bytes)\n      Size of program headers:           32 (bytes)\n      Number of program headers:         31\n      Size of section headers:           40 (bytes)\n      Number of section headers:         0\n      Section header string table index: 0\n\n    There are no sections in this file.\n\n    There are no sections to group in this file.\n\n    Program Headers:\n      Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\n      NULL           0x000000 0x00000000 0x00000000 0x00414 0x00000     0\n      LOAD           0x001000 0x40756000 0x40756000 0x01b94 0x02000     0x1000\n  [..cut for brevity..]\n</code></pre>\n<p>I have never dealt with such type of binary, I guess I have to populate those areas to get OBJDUMP working on it. </p>\n<p>Could someone help me to get it fixed? If anyone wants to take a look, I'm sharing the ELF binary. <a href=\"https://drive.google.com/file/d/0B_1GStFPqbvodDJIc1BIMTI4N00/view\" rel=\"nofollow noreferrer\">weirdBinary.elf</a></p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "1k",
    "tags": [
        "binary-analysis",
        "firmware",
        "elf",
        "gcc"
    ],
    "user": "Ã–mer",
    "time": "Nov 2, 2016 at 9:21",
    "comments": [
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">google says there is a binutils port an llvm compiler some disassembler and even a hexagon processor module for ida did you check any of them out hexagon by quallcomm appears to be a dsp for their snapdragon SOC</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>\"<a href=\"https://en.wikipedia.org/wiki/Qualcomm_Hexagon\" rel=\"nofollow\">Qualcomm Hexagon</a>\" is not a compiler, its an architecture by <a href=\"https://en.wikipedia.org/wiki/Qualcomm\" rel=\"nofollow\">Qualcomm Inc.</a></p>\n<p>The internet has a few resources which might be helpful in your endeavors. </p>\n<ol>\n<li>A third party <a href=\"https://github.com/gsmk/hexagon\" rel=\"nofollow\">IDA processor module</a></li>\n<li>An <a href=\"https://developer.qualcomm.com/software/hexagon-dsp-sdk\" rel=\"nofollow\">SDK</a> provided by Qualcomm.</li>\n<li>A few <a href=\"https://developer.qualcomm.com/software/hexagon-dsp-sdk/tools\" rel=\"nofollow\">other tools and documents</a> provided by Qualcomm.</li>\n</ol>\n<p>Although these do not explain the reason for the empty sections table, I assume going over those in-depth would provide that information.</p>\n</div>",
            "votes": "1",
            "user": "NirIzr",
            "time": "Sep 2, 2016 at 20:42",
            "is_accepted": false,
            "comments": []
        }
    ]
}