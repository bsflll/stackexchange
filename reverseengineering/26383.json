{
    "title": "Where is the persistent storage on this router?",
    "link": "https://reverseengineering.stackexchange.com/questions/26383/where-is-the-persistent-storage-on-this-router",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am working on reversing a router for which I cannot find downloadable firmware anywhere. I managed to get a root shell on the router. I am now confused as I cannot see any persistent writeable mounts. Most are tmpfs filesystems, one is a sysfs which as far as I understand is not an actual filesystem, and /dev/mtdblock7 which is a squashfs filesystem (and is readonly). Where is the persistent storage that keeps my configurations? What am I missing here?</p>\n<pre><code># mount\n/dev/mtdblock7 on / type squashfs (ro,relatime)\n/proc on /proc type proc (rw,relatime)\ntmpfs on /var type tmpfs (rw,relatime,size=15360k)\ntmpfs on /mnt type tmpfs (rw,relatime,size=16k)\nsysfs on /sys type sysfs (rw,relatime)\ntmpfs on /tmp type tmpfs (rw,relatime,size=3096k)\nnone on /proc/bus/usb type usbfs (rw,relatime)\n</code></pre>\n<p><strong>Update:</strong></p>\n<p><em>Board</em></p>\n<p>This is a ZTE router, the board has a printed label that says: <code>ZXHN H367N V1.0</code></p>\n<p>The default update file that uboot looks for when booting over tftp is called <code>H367N_image.bin</code></p>\n<p>Running zcu signature on the config file gives <code>ZXDSL 931VII V3.0</code></p>\n<p>The decryption password used to decrypt and encrypt the file is the same as the one used in <code>ZXHN H208N</code> according to <a href=\"https://reverseengineering.stackexchange.com/questions/11626/zte-encrypted-backup-config-file#answer-25255\">this</a>.</p>\n<p>Also, I remember seeing <code>H368N</code> somewhere, but I'm not sure where.</p>\n<p>Finally I found paths that have the directory <code>H367N_Develop_UGW5.4</code> in them.</p>\n<p><em>mtdblocks</em></p>\n<p>(This is a summary of what binwalk found)</p>\n<p>mtdblock0:</p>\n<ul>\n<li>List item crc</li>\n<li>uImage header \"u-boot image\"</li>\n<li>lzma</li>\n</ul>\n<p>mtdblock1:</p>\n<ul>\n<li>UBI erease count header</li>\n</ul>\n<p>mtdblock2:</p>\n<ul>\n<li>nothing found</li>\n</ul>\n<p>mtdblock3:</p>\n<ul>\n<li>uImage header \"GPHY Firmware\"</li>\n<li>lzma compression</li>\n<li>uImage header \"GPHY Firmware\"</li>\n<li>lzma compression</li>\n<li>zlib compressed data</li>\n<li>PEM RSA private key</li>\n<li>PEM certificate</li>\n<li>uImage header \"MIPS LTQCPE Linux-2.6.32.42\"</li>\n<li>lzma</li>\n<li>squashfs</li>\n<li>uImage header \"MIPS LTQCPE Linux-2.6.32.42\"</li>\n<li>lzma</li>\n<li>squashfs</li>\n</ul>\n<p>mtdblock4:</p>\n<ul>\n<li>uImage header \"GPHY Firmware\"</li>\n<li>lzma</li>\n<li>uImage header \"GPHY Firmware\"</li>\n<li>lzma</li>\n</ul>\n<p>mtdblock5:</p>\n<ul>\n<li>zlib compressed data</li>\n<li>PEM RSA private key</li>\n<li>PEM certificate</li>\n</ul>\n<p>mtdblock6:</p>\n<ul>\n<li>uImage header \"MIPS LTQCPE Linux-2.6.32.42\"</li>\n<li>lzma</li>\n</ul>\n<p>mtdblock7:</p>\n<ul>\n<li>squashfs</li>\n</ul>\n<p>mtdblock8:</p>\n<ul>\n<li>uImage header \"MIPS LTQCPE Linux-2.6.32.42\"</li>\n<li>lzma</li>\n</ul>\n<p>mtdblock9:</p>\n<ul>\n<li>squashfs</li>\n</ul>\n<p>mtdblock10:</p>\n<ul>\n<li>nothing</li>\n</ul>\n<p>mtdblock11:</p>\n<ul>\n<li>nothing</li>\n</ul>\n<p>mtdblock6 and mtdblock8 are identical\nmtdblock7 and mtdblock9 are identical\nmtdblock3 contains the same binary as mtdblocks 6,7,8 and 9, and likely others as well.</p>\n<p>I tried remounting /dev/mtdblock7 but failed. Maybe I did something wrong but my understanding is that squashfs should not be writable in any case.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "328",
    "tags": [
        "firmware"
    ],
    "user": "alex10791",
    "time": "Nov 30, 2020 at 20:12",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Hi and welcome to RE.SE. Please add a little more information. For starters, if it's small bits of information it may not end up in a different type of device (and specifically who says it has to be in a file system?). Also, in theory, a device could full well remount a certain file system read-write on-demand and then revert back to read only after being done saving data. What other MTD devices are there? What have you tried?</span>",
            "time": null
        },
        {
            "user": "alex10791",
            "text": "<span class=\"comment-copy\">I tried adding some information. About the filesystem question, I don't know, I assumed it would. What do you mean by \"if it's small bits of information it may not end up in a different type of device\"?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Some Routers use a NVRAM for storing settings. That would give you exactly this result: No writable partitions but some binary is taking care of reading and writing to that NVRAM (wherever that might be). Check if there's anything called nvread, nvconf or something like that.</p>\n<p>If that's not successful you can always try to find a binary that uses a configurable option, load it into a Disassembler and see what's going on there.</p>\n</div>",
            "votes": "2",
            "user": "Richi",
            "time": "Nov 29, 2020 at 11:59",
            "is_accepted": false,
            "comments": [
                {
                    "user": "multithr3at3d",
                    "text": "<span class=\"comment-copy\">Yeah, the command <code>nvram</code> should exist on the device.</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">... and a device with a name containing <code>nv</code> probably also exists.</span>",
                    "time": null
                },
                {
                    "user": "alex10791",
                    "text": "<span class=\"comment-copy\">there is no nvram command or device with nv in its name</span>",
                    "time": null
                },
                {
                    "user": "multithr3at3d",
                    "text": "<span class=\"comment-copy\">@alex10791 by device, you mean you checked <code>/dev</code>? If still no, I'd suggest looking at some of the binaries to see if they load config at the beginning.</span>",
                    "time": null
                }
            ]
        }
    ]
}