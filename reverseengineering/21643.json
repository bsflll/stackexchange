{
    "title": "x64dbg (x32dbg) log registers every step like windbg",
    "link": "https://reverseengineering.stackexchange.com/questions/21643/x64dbg-x32dbg-log-registers-every-step-like-windbg",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>So I just switched to x64dbg (really using x32 atm) from windbg and so far I like it but the one thing I'm missing is windbg printing all the registers every step in the command window. Anyone know how to get a log like this?</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "5k",
    "tags": [
        "debugging",
        "windbg",
        "x64dbg",
        "register"
    ],
    "user": "Teddy",
    "time": "Jul 10, 2019 at 15:46",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There is no such functionality in x64dbg out of the box, but we can make your own by writing a plugin! There are many examples (often with source code) available on <a href=\"http://plugins.x64dbg.com\" rel=\"noreferrer\">http://plugins.x64dbg.com</a>.</p>\n<p>In this case you will want to register a callback for <code>CB_STEPPED</code>, which gets called after every step. The basic functionality could look something like this:</p>\n<pre><code>PLUG_EXPORT void CBSTEPPED(CBTYPE, PLUG_CB_STEPPED* info)\n{\n    REGDUMP regdump;\n    DbgGetRegDump(&amp;regdump);\n\n    auto&amp; r = regdump.regcontext;\n\n    _plugin_logprintf(R\"(eax=%p ebx=%p ecx=%p\nedx=%p esi=%p edi=%p\neip=%p esp=%p ebp=%p\n)\",\nr.cax, r.cbx, r.ccx,\nr.cdx, r.csi, r.cdi,\nr.cip, r.csp, r.cbp);\n}\n</code></pre>\n<p>I added 64-bit support and a menu to enable/disable this functionality and put the source code on GitHub: <a href=\"https://github.com/mrexodia/regstep\" rel=\"noreferrer\">https://github.com/mrexodia/regstep</a>.</p>\n<p>This functionality is dubiously useful in my opinion, because the changes to register values are highlighted in red in the register view and the affected registers of the selected instruction are underlined there as well. In addition you have the info box below the CPU view, which shows you all relevant values for the currently selected instruction too, but if you think logging registers every step is useful for you feel free to extend the plugin to your liking.</p>\n</div>",
            "votes": "6",
            "user": "mrexodia",
            "time": "Jul 27, 2019 at 9:35",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You have registers listed in <em>CPU view</em> (<code>View</code>-&gt;<code>CPU</code>) like this:\n<a href=\"https://i.sstatic.net/0vVlF.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/0vVlF.png\"/></a></p>\n<p>In case you want to get them in a trace log, you have to do: <code>Trace</code>-&gt;<code>Trace into...</code> and in <em>Log Text</em> field, write: <code>registerName: {registerName}</code> for every register name you want to be listed, for example:</p>\n<pre><code>eax: {eax}, ebx: {ebx}\n</code></pre>\n<p>and click <code>OK</code>. Then under <code>Log window</code> (<code>View-&gt;Log Window</code>) you will get that trace.</p>\n</div>",
            "votes": "2",
            "user": "bart1e",
            "time": "Jul 10, 2019 at 16:02",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Teddy",
                    "text": "<span class=\"comment-copy\">Unfortunately the program I'm working on is multi threaded and that just created a single instance list of x steps. I used eip {eip}, esp {esp} and it gave me x lines of the same values. I'm trying to use it to track previous values from before jmps and calls &lt;img src=\"<a href=\"https://www.codeproject.com/KB/debug/WinDBGAndSOS/WinDBGCommandWindow.PNG\" rel=\"nofollow noreferrer\">codeproject.com/KB/debug/WinDBGAndSOS/WinDBGCommandWindow.PNG</a>\" width=\"100\" height=\"100\"&gt;  It would be great to be able to track the registers each step like this</span>",
                    "time": null
                }
            ]
        }
    ]
}