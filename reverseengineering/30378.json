{
    "title": "How to reference an address set by 2 instructions in Ghidra",
    "link": "https://reverseengineering.stackexchange.com/questions/30378/how-to-reference-an-address-set-by-2-instructions-in-ghidra",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I encountered the following 2 instructions while reversing Tricore assembly:</p>\n<p><a href=\"https://i.sstatic.net/KYcG3.png\" rel=\"nofollow noreferrer\"><img alt=\"2 instructions reference\" src=\"https://i.sstatic.net/KYcG3.png\"/></a></p>\n<p>These 2 instructions load the final address: 0x804A9474. Where a global symbol resides.<br/>\nIs there a way to hint Ghidra the global symbol is located calculated address? (For example like Ctrl+R in IDA)</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "608",
    "tags": [
        "decompilation",
        "ghidra",
        "address",
        "offset"
    ],
    "user": "toothpick",
    "time": "May 9, 2022 at 8:16",
    "comments": [
        {
            "user": "R4444",
            "text": "<span class=\"comment-copy\"><a href=\"https://ghidra-sre.org/CheatSheet.html\" rel=\"nofollow noreferrer\">ghidra-sre.org/CheatSheet.html</a> did you check?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The default hotkey for this is 'R', which is mapped to \"Add/Edit References\". You can also reach this menu by right-clicking in the Listing view on one of these instructions and selecting <code>References-&gt;Add/Edit...</code>. This will open the References Editor, from which you can add a new reference using the green plus icon for \"Add Forward Reference\". You will have to manually specify the address this way, unfortunately. The type of reference will depend on whether this is data, a function address, or something else, and will affect what the decompiler does with this new reference information, if anything.</p>\n<p>In many cases the decompiler automatically takes care of calculating the final value for you, though it probably won't create an explicit reference. I've seen this happen for other architectures, but have not specifically tried with Tricore.</p>\n</div>",
            "votes": "1",
            "user": "goatshriek",
            "time": "May 9, 2022 at 22:03",
            "is_accepted": true,
            "comments": []
        }
    ]
}