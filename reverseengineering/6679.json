{
    "title": "Modifying / Installing stock firmware on ISP Branded WRE2205",
    "link": "https://reverseengineering.stackexchange.com/questions/6679/modifying-installing-stock-firmware-on-isp-branded-wre2205",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Our ISP, MWeb, gave us a free router and Wifi extender (WRE2205v2) as part of a new promotion. Neither of them really work at all (the extender works for about a minute then fails for no apparent reason). Acording to reviews, it should be a decent repeater, but it seems Mweb has completely screwed up the firmware.</p>\n<p><a href=\"http://simonfredsted.com/996\" rel=\"nofollow\">This blog post</a> shows how to get very basic root access (it's running embedded Linux) on the device (the security is... bad). So far I've worked out it's a MIPS device (running <code>file</code> on an executable gives <code>ELF 32-bit MSB  executable, MIPS, MIPS-I version 1 (SYSV)</code> and the file system is squash-fs, so read only. I can also copy files to/from the device using tftp. </p>\n<p>I also know that both the branded firmware and the stock firmware use a binary called fw_upgrade to flash a new firmware. I tried decompiling them using <a href=\"http://decompiler.fit.vutbr.cz/decompilation/\" rel=\"nofollow\">http://decompiler.fit.vutbr.cz/decompilation/</a> but I haven't had much luck there. The branded one has a bit more code which I assume checks something about the new firmware and prevents the stock firmware from being flashed. Finally I tried copying the stock fw_upgrade to the device and running it but it fails without an error message.</p>\n<p>What else can I do to get the stock firmware running?</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "1k",
    "tags": [
        "disassembly",
        "decompilation",
        "linux",
        "firmware"
    ],
    "user": "geniass",
    "time": "Nov 21, 2014 at 23:30",
    "comments": [
        {
            "user": "geniass",
            "text": "<span class=\"comment-copy\">Branded fw_upgrade: <a href=\"https://www.dropbox.com/s/u8ibvv7w39g8ozy/fw_upgrade_isp?dl=0\" rel=\"nofollow noreferrer\">dropbox.com/s/u8ibvv7w39g8ozy/fw_upgrade_isp?dl=0</a> Stock: <a href=\"https://www.dropbox.com/s/zp21r8ijm2dpdph/fw_upgrade?dl=0\" rel=\"nofollow noreferrer\">dropbox.com/s/zp21r8ijm2dpdph/fw_upgrade?dl=0</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>A cursory examination of the two files suggests that the main difference in upgrade paths between the two binaries is that the branded one calls a function named <code>chkfwid</code>. If I'm reading the code correctly, it searches the first <code>0x800</code> bytes for the four ASCII bytes <code>1213</code>; if found, the function succeeds, else it fails and the upgrade is terminated.</p>\n</div>",
            "votes": "3",
            "user": "devttys0",
            "time": "Nov 22, 2014 at 4:21",
            "is_accepted": false,
            "comments": [
                {
                    "user": "geniass",
                    "text": "<span class=\"comment-copy\">How did you decompile them? Is it possible to remove this check from it?</span>",
                    "time": null
                },
                {
                    "user": "devttys0",
                    "text": "<span class=\"comment-copy\">I disassembled them with IDA. It would be simple to remove the check, but there may be other things that need to be changed too, as I did not perform an in depth analysis of the two binaries.</span>",
                    "time": null
                },
                {
                    "user": "geniass",
                    "text": "<span class=\"comment-copy\">Thanks, actually it turns out it wasn't necessary to modify the binary</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I just got it working. Turns out I didn't need to modify the binary. After extracting the squash-fs file system from the update file, I managed to copy fw_update to the device using tftp. Running that binary (<code>/etc/fw_update upg fw.bin</code>) instead of the ISP one worked and flashed the stock firmware. The binary needs to be copied to /etc or /var because the rest is read-only.</p>\n</div>",
            "votes": "2",
            "user": "geniass",
            "time": "Nov 22, 2014 at 20:14",
            "is_accepted": true,
            "comments": []
        }
    ]
}