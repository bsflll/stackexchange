{
    "title": "How to make pseudocode in IDA more human readable",
    "link": "https://reverseengineering.stackexchange.com/questions/31103/how-to-make-pseudocode-in-ida-more-human-readable",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Some codes in IDA are not clear enough. Especially when they do reference after calculation</p>\n<pre><code>while ( dx33[rdi24] );\n  if ( rax35 != &amp;WPP_GLOBAL_Control &amp;&amp; (*((_BYTE *)rax35 + 68) &amp; 2) != 0 &amp;&amp; *((_BYTE *)rax35 + 65) &gt;= 4u )\n  {\n    WPP_SF_sd(\n      (unsigned int)rax35[7],\n      22,\n      (unsigned int)&amp;WPP_b7e02e4f98cc3b1bbc566e561d210229_Traceguids,\n      (_DWORD)dx33,\n      rdi24 - 1);\n    dx33 = Str;\n  }\n  if ( (_DWORD)rdi24 != 1 &amp;&amp; dx33[(int)rdi24 - 1] == 46 &amp;&amp; dx33[(int)rdi24 - 2] == 46 )\n  {\n    dx33[(int)rdi24 - 1] = 0;\n    dx33 = Str;\n  }\n</code></pre>\n<p>For some parts like</p>\n<blockquote>\n<p>(*((_BYTE *)rax35 + 68) &amp; 2)</p>\n</blockquote>\n<p>Can I change it to a more human-readable form? I remember changing the function argument type like int a1 to JNIEnv* can make the pointer reference more readable because it recovers some JNI function names so that</p>\n<blockquote>\n<p>...<em>(_DWORD</em>)(a1+312)(a1,v9)</p>\n</blockquote>\n<p>will become something like</p>\n<blockquote>\n<p>-&gt;func(a1,v9)</p>\n</blockquote>\n<p>But I'm not sure how to do this for other types.</p>\n</div>",
    "votes": "5",
    "answers": 2,
    "views": "1k",
    "tags": [
        "ida"
    ],
    "user": "anonymous bear",
    "time": "Nov 9, 2022 at 2:09",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Quite frankly in this particular case you may want to look at <a href=\"https://learn.microsoft.com/windows-hardware/drivers/devtest/wpp-software-tracing\" rel=\"nofollow noreferrer\">WPP Software Tracing</a> and ETW in general for the first <code>if</code> condition. I am almost certain that this is pretty much some idiomatic way of how the respective <a href=\"https://learn.microsoft.com/windows-hardware/drivers/devtest/wpp-preprocessor\" rel=\"nofollow noreferrer\">WPP macros get expanded</a>. The GUIDs will vary across different pieces of software (or even <i>within</i> a single software). I.e. this would be a piece you don't want to reverse engineer normally. Is this KM or UM?</span>",
            "time": null
        },
        {
            "user": "anonymous bear",
            "text": "<span class=\"comment-copy\">@0xC0000022L It's a piece of code in dns.exe. I think it's UM because when I used Windbg the function in dns.exe didn't appear in all the kernel files</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>To make the listing more human-readable, you just need to add structure definitions,\nfor example:\ntype of variable <strong>rax35</strong> - obviously not <strong>unsigned int</strong></p>\n<p>there should be a pointer to the structure you need to define.</p>\n<hr/>\n<p>The first thing you need is to find the <code>size</code> of this struct or class. To do this, you need to find its <code>constructor</code>.</p>\n<ul>\n<li>If the memory for this object is allocated using the operator <code>New</code>,\nyou can determine the size.</li>\n<li>If memory is allocated on the <code>stack</code>, then heuristic methods must be\nused here. That is, you have to manually parse the <code>stack frame</code>.</li>\n</ul>\n<p>After the size of the structure or class is found, it's time to add it to <code>Local Types</code> in <code>IDA Pro</code>.</p>\n<p>To simplify <code>static analysis</code> as much as possible, you should:</p>\n<ul>\n<li>add, if any, <code>pdb</code>-file to the project.</li>\n<li>for each function declaration - restore <code>prototype</code>s</li>\n</ul>\n</div>",
            "votes": "3",
            "user": "0xC0000022L",
            "time": "May 1, 2023 at 20:20",
            "is_accepted": true,
            "comments": [
                {
                    "user": "anonymous bear",
                    "text": "<span class=\"comment-copy\">But how do I know which structure should I define</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There’s no single solution for every case but basically you need to use the decompiler’s interactive features:</p>\n<ul>\n<li>Renaming</li>\n<li>Retyping</li>\n<li>Commenting</li>\n<li>Navigation between different functions</li>\n</ul>\n<p>Just looking at small parts of the function and renaming a few variables to some name which makes sense can go a long way. Start small and keep making changes until things start to make sense. Sometimes you may need yo visit multiple functions to see how a specific variable is used to figure out its type.</p>\n</div>",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Apr 28, 2023 at 13:23",
            "is_accepted": false,
            "comments": []
        }
    ]
}