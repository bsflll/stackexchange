{
    "title": "Stepping through ARM firmware image",
    "link": "https://reverseengineering.stackexchange.com/questions/13520/stepping-through-arm-firmware-image",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a binary firmware image with a routine that I find hard to understand.\nI want to step through this encryption routine step by step so I can better understand it.</p>\n<p>I was able to obtain all the data from the memory of the device: \nthe firmware, the option banks, the RAM which includes the data to be encrypted, etc.. and  all in raw bytes.</p>\n<p>I know the location of the encryption subroutine and want to start stepping through the program at that point. I've analyzed the firmware as far as possible in IDA PRO.</p>\n<p>The device has an ARM Cortex-M3, which uses the ARMv7-M instruction set. Here is the<br/>\n<a href=\"http://www.st.com/content/ccc/resource/technical/document/datasheet/58/e3/b5/60/88/c8/4b/1b/DM00034689.pdf/files/DM00034689.pdf/jcr:content/translations/en.DM00034689.pdf\" rel=\"nofollow\">data sheet</a>\n of the device.</p>\n<p>What would be a good approach to do this?</p>\n<p><strong>Update 1</strong>  -  sep 19 '16</p>\n<p>I chose to emulate just the code snippet. However I'm slightly clueless what \"configuration\" to choose (configuring QEMU: step 5). The information that comes up when googling for the \"Versatile\" or the \"Integrator\" board doesn't make it more clear. </p>\n<p>How can I determine what configuration to choose?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ida",
        "assembly",
        "firmware",
        "arm"
    ],
    "user": "HolyGuacamole",
    "time": "Sep 25, 2016 at 21:11",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can debug and even step the execution with the following ways:</p>\n<ul>\n<li><strong>Emulating a code snippet</strong>. You can find the detailed steps of code snippet emulation with QEMU in <a href=\"http://www.hexblog.com/?p=111\" rel=\"noreferrer\">hexblog</a>. In this approach you have to set the memory and register values to the correct ones, which can be challenging in some times.</li>\n<li><strong>Emulating the whole firmware</strong>. There is a very good blog post about firmware emulation with QEMU in the <a href=\"http://www.devttys0.com/2011/09/exploiting-embedded-systems-part-3/\" rel=\"noreferrer\">devttsy0</a> blog. Because you emulate the whole firmware in this case, you don't have to set any runtime values for debugging. However, you may have to emulate nvram and other hardware specific features.</li>\n</ul>\n</div>",
            "votes": "5",
            "user": "ebux",
            "time": "Sep 19, 2016 at 5:49",
            "is_accepted": true,
            "comments": []
        }
    ]
}