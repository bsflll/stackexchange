{
    "title": "How to do i fix it when IDA pro mislabels values as loc_",
    "link": "https://reverseengineering.stackexchange.com/questions/18274/how-to-do-i-fix-it-when-ida-pro-mislabels-values-as-loc",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Some times the psuedo code generated by IDA is baffling</p>\n<pre><code>v8 = (signed int)&amp;loc_100010; //ida\nv8 = 0x100010; //actual code\n</code></pre>\n<p>This is not so bad when it is just one value but sometimes the offset for member variables are also distorted this way</p>\n<pre><code>v2 = a1 + (_DWORD)&amp;loc_2043B90 - 33831600); //ida\nv2 = a1 + 224; //actual offset\n</code></pre>\n<p>This makes for horrible readability and it is even worse for arrays. Is there a way to fix this?</p>\n<p>This happens a lot with floating point numbers</p>\n<pre><code>v63 = **(float **)((char *)&amp;loc_15D9503 + 33831601)\n</code></pre>\n<p>I should add this is a MACH-O x86 binary (if that matters)</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "decompilation"
    ],
    "user": "Sinister Mephisto",
    "time": "May 15, 2018 at 17:47",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Names with loc_ prefix are generated in case IDA thinks that it's code at that address. So now IDA thinks that theres' code at 2043B90 and at 100010.</p>\n<p>You should go to 2043B90 (in the disassembly view), undefine the code piece which IDA create and create a data structure there, then specify the type information (Y key) that it's an array like \"int myarray[300]\". This is just an example, you need to determine the type of the data yourself.</p>\n<p>As for loc_100010, you should also go to the address 100010 undefine the code there and create a string, if you think that there's a literal. </p>\n<p>Then press F5 in you function again to renew the decompiler output.</p>\n<p>p.s. IDA might want to keep the loc_ names even after you undefine the code piece, so you'll need to delete this loc_ name in order to make IDA generate the new one.</p>\n</div>",
            "votes": "1",
            "user": "Anton Kukoba",
            "time": "May 22, 2018 at 8:11",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Sinister Mephisto",
                    "text": "<span class=\"comment-copy\">But it is a literal value and not a data structure. An integer not an array of ints</span>",
                    "time": null
                },
                {
                    "user": "Sinister Mephisto",
                    "text": "<span class=\"comment-copy\">I tried it and got  v8 = (signed int)&amp;loc_1048592D;</span>",
                    "time": null
                },
                {
                    "user": "Anton Kukoba",
                    "text": "<span class=\"comment-copy\">I've update the answer, I hope it helps.</span>",
                    "time": null
                },
                {
                    "user": "Sinister Mephisto",
                    "text": "<span class=\"comment-copy\">Thanks for the reply/update. When i undefined the code it simply replace loc_xxxx with unk_xxxx</span>",
                    "time": null
                },
                {
                    "user": "Ray",
                    "text": "<span class=\"comment-copy\">It seems like you can't unless you fix all occurrences of the loc_ with literals.</span>",
                    "time": null
                }
            ]
        }
    ]
}