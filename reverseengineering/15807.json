{
    "title": "Find the code used when you right click and select \"Bring To Front\" in Task Manager",
    "link": "https://reverseengineering.stackexchange.com/questions/15807/find-the-code-used-when-you-right-click-and-select-bring-to-front-in-task-mana",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>How can I find out what code is being called when you right click on a process in Windows Task Manager, and click on \"Bring To Front\" ?</p>\n<p>This is related to <a href=\"https://stackoverflow.com/questions/45046765/bring-window-to-foreground-when-mainwindowhandle-is-0\">https://stackoverflow.com/questions/45046765/bring-window-to-foreground-when-mainwindowhandle-is-0</a>.</p>\n<p>The <code>SetForegroundWindow</code> method only works if the <code>MainWindowHandle</code> is not 0.\nBut the \"Bring To Front\" button in Windows Task Manager works even if the <code>MainWindowHandle</code> is 0.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "334",
    "tags": [
        "windows",
        "winapi"
    ],
    "user": "David Klempfner",
    "time": "Jul 12, 2017 at 5:00",
    "comments": [
        {
            "user": "osvein",
            "text": "<span class=\"comment-copy\">Bring To Front is probably just getting the window handle another way. Every window has a handle, but not every process has a main window.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Here's the answer:\n<a href=\"http://reinventingthewheel.azurewebsites.net/MainWindowHandleIsALie.aspx\" rel=\"nofollow noreferrer\">http://reinventingthewheel.azurewebsites.net/MainWindowHandleIsALie.aspx</a></p>\n<p>I had to use <code>EnumWindows</code> to get the correct handle.</p>\n<pre><code>$TypeDef2 = @\"\n\n    using System;\n    using System.Text;\n    using System.Collections.Generic;\n    using System.Runtime.InteropServices;\n\n    namespace Api\n    {\n\n    public class WinStruct\n    {\n       public string WinTitle {get; set; }\n       public int MainWindowHandle { get; set; }\n    }\n\n    public class ApiDef\n    {\n       private delegate bool CallBackPtr(int hwnd, int lParam);\n       private static CallBackPtr callBackPtr = Callback;\n       private static List&lt;WinStruct&gt; _WinStructList = new List&lt;WinStruct&gt;();\n\n       [DllImport(\"User32.dll\")]\n       [return: MarshalAs(UnmanagedType.Bool)]\n       private static extern bool EnumWindows(CallBackPtr lpEnumFunc, IntPtr lParam);\n\n       [DllImport(\"user32.dll\", CharSet = CharSet.Auto, SetLastError = true)]\n       static extern int GetWindowText(IntPtr hWnd, StringBuilder lpString, int nMaxCount);\n\n       private static bool Callback(int hWnd, int lparam)\n       {\n           StringBuilder sb = new StringBuilder(256);\n           int res = GetWindowText((IntPtr)hWnd, sb, 256);\n          _WinStructList.Add(new WinStruct { MainWindowHandle = hWnd, WinTitle = sb.ToString() });\n           return true;\n       }  \n\n       public static List&lt;WinStruct&gt; GetWindows()\n       {\n          _WinStructList = new List&lt;WinStruct&gt;();\n          EnumWindows(callBackPtr, IntPtr.Zero);\n          return _WinStructList;\n       }\n\n    }\n    }\n    \"@\n\n    Add-Type -TypeDefinition $TypeDef2 -Language CSharpVersion3\n\n    $excelInstance = [Api.Apidef]::GetWindows() | Where-Object { $_.WinTitle.ToUpper() -eq \"Microsoft Excel - Compatibility Checker\".ToUpper() }\n\n$TypeDef1 = @\"\n      using System;\n      using System.Runtime.InteropServices;\n      public class Tricks {\n         [DllImport(\"user32.dll\")]\n         [return: MarshalAs(UnmanagedType.Bool)]\n         public static extern bool SetForegroundWindow(IntPtr hWnd);\n      }\n    \"@\n\n    Add-Type -TypeDefinition $TypeDef1 -Language CSharpVersion3\n\n    [void][Tricks]::SetForegroundWindow($excelInstance.MainWindowHandle)\n</code></pre>\n</div>",
            "votes": "0",
            "user": "David Klempfner",
            "time": "Aug 1, 2017 at 0:32",
            "is_accepted": true,
            "comments": []
        }
    ]
}