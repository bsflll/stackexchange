{
    "title": "FLIRT Signature Applied, IDA shows references but no auto rename?",
    "link": "https://reverseengineering.stackexchange.com/questions/18967/flirt-signature-applied-ida-shows-references-but-no-auto-rename",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>So, I have a program which I am 99% sure it is using Lua as when I look at string references I see this:</p>\n<p><a href=\"https://i.sstatic.net/dppK1.png\" rel=\"nofollow noreferrer\"><img alt=\"Lua Copyright Version\" src=\"https://i.sstatic.net/dppK1.png\"/></a></p>\n<p>Which I am understanding that somewhere in this program they have statically linked a Lua C or something of the sort, so I did a quick Google for Lua 5.2.1 Libraries, I found <a href=\"https://sourceforge.net/projects/luabinaries/files/5.2.1/Windows%20Libraries/Static/\" rel=\"nofollow noreferrer\">this</a> which is a link to the Source Forge for Lua static libraries for 5.2.1, so I downloaded it, opened up the IDA SDK, and ran:</p>\n<pre><code>.\\pcf.exe .\\lua52.lib .\\lua52.pat\n</code></pre>\n<p>which returns: </p>\n<pre><code>...\\lua52.lib: skipped 0, total 793\n</code></pre>\n<p>Which I interpret to understand it found 793 signatures or something similar, so then I ran:</p>\n<pre><code>.\\sigmake.exe .\\lua52.pat .\\lua52.pat\n</code></pre>\n<p>Which returns an error;</p>\n<pre><code>.\\lua52.pat: modules/leaves: 767/793, COLLISIONS: 1\nSee the documentation to learn how to resolve collisions.\n</code></pre>\n<p>Which I assume meant I had to use the -r switch, so I reran it</p>\n<pre><code>.\\sigmake.exe -r .\\lua52.pat .\\lua52.sig\n</code></pre>\n<p>It generated no errors and produced the sig file, so I dropped it in the sig directory in IDA which lets it show up, so when I go to apply \n<a href=\"https://i.sstatic.net/7c2aa.png\" rel=\"nofollow noreferrer\"><img alt=\"Lua Signature Image In IDA\" src=\"https://i.sstatic.net/7c2aa.png\"/></a>\nit shows up which I expected, I add it to IDA, it tells me there are<a href=\"https://i.sstatic.net/h0VXe.png\" rel=\"nofollow noreferrer\"><img alt=\"Proof of references\" src=\"https://i.sstatic.net/h0VXe.png\"/></a> references, but nothing I am \"sure\" is Lua gets renamed? Is that expect or not? I know this line</p>\n<pre><code>sub_140856EE0(v1, (__int64)\"field '%s' missing in date table\", \"year\");\n</code></pre>\n<p>is Lua because when you google the middle field it tells it's a Lua using a Lua function. Finally I've ran a reanalyses to make sure it looks back through the file to give it a once over.</p>\n<p>Have I missed something obvious here?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "756",
    "tags": [
        "ida",
        "flirt-signatures",
        "lua"
    ],
    "user": "Jalomba",
    "time": "Aug 3, 2018 at 1:34",
    "comments": [
        {
            "user": "Biswapriyo",
            "text": "<span class=\"comment-copy\">Rename it with 'N' key</span>",
            "time": null
        },
        {
            "user": "Jalomba",
            "text": "<span class=\"comment-copy\">I do that to manually rename things, but I thought the point in applying a FLIRT signature is that it would fill in names for me?</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">You realize that you can roll your own signatures? I don't remember seeing that FLIRT signature in my default list, so perhaps it was generated by a third-party and it wasn't well-done? Alternatively, how about it's Lua but not that exact version or that exact compiler?</span>",
            "time": null
        },
        {
            "user": "Jalomba",
            "text": "<span class=\"comment-copy\">I figured it out, It's because it wasn't the right arcitecthure and I made it myself if you read the full post you'd see that.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It might help if you use the same architecture as the target process...\nBut that doesn't fully explain why the other non x64 FLIRT signature doesn't rename stuff even if the window says it found X refs </p>\n</div>",
            "votes": "-1",
            "user": "Jalomba",
            "time": "Aug 9, 2018 at 10:26",
            "is_accepted": true,
            "comments": []
        }
    ]
}