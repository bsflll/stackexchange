{
    "title": "Is this really a function IDA could not decode?",
    "link": "https://reverseengineering.stackexchange.com/questions/21286/is-this-really-a-function-ida-could-not-decode",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have the following IDA output:</p>\n<pre><code>BEGTEXT:00415A2C read_dpc_sub_415928 endp\nBEGTEXT:00415A2C\nBEGTEXT:00415A2C ; ---------------------------------------------------------------------------\nBEGTEXT:00415A2D                 align 10h\nBEGTEXT:00415A30                 push    ebx\nBEGTEXT:00415A31                 push    edx\nBEGTEXT:00415A32                 mov     edx, eax\nBEGTEXT:00415A34                 call    sub_41576C\nBEGTEXT:00415A39                 mov     ebx, eax\nBEGTEXT:00415A3B                 call    sub_415758\nBEGTEXT:00415A40                 mov     eax, ebx\nBEGTEXT:00415A42                 call    sub_4158C8\nBEGTEXT:00415A47                 mov     eax, ebx\nBEGTEXT:00415A49                 pop     edx\nBEGTEXT:00415A4A                 pop     ebx\nBEGTEXT:00415A4B                 retn\nBEGTEXT:00415A4B ; ---------------------------------------------------------------------------\n</code></pre>\n<p>As you can see, IDA has considered that this is a code block but it hasn't been made a function.</p>\n<p><strong>Can you explain how one should try handle this situation ?</strong></p>\n<p>i.e. is this really code in the end and what to consider when making a function.</p>\n<p>(if that matters, the executable is a 32-bit Windows one)</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "254",
    "tags": [
        "ida"
    ],
    "user": "aybe",
    "time": "May 6, 2019 at 20:44",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can make it a function by placing a cursor to address 00415A2C in disassembly view and pressing <kbd>P</kbd>. If this doesn't work you can select the whole function and, again, press <kbd>P</kbd>. The documentation on this action is located <a href=\"https://www.hex-rays.com/products/ida/support/idadoc/484.shtml\" rel=\"noreferrer\">here</a>. If all this doesn't work, undefine <code>align 10h</code> by pressing <kbd>U</kbd>, make resulting bytes code by pressing <kbd>C</kbd> and try again.</p>\n<p>There are a lot of reasons why this function has not been created automatically, including, but not limited by:</p>\n<ul>\n<li>This function is not called directly</li>\n<li>This function is not called at all</li>\n<li>IDA autoanalysis was unable to find a reference to this function as function</li>\n</ul>\n</div>",
            "votes": "7",
            "user": "w s",
            "time": "May 7, 2019 at 6:20",
            "is_accepted": true,
            "comments": [
                {
                    "user": "aybe",
                    "text": "<span class=\"comment-copy\">I will assume that IDA is right for the time being, then I will eventually dig deeper with the first two reasons you've written, thanks!</span>",
                    "time": null
                },
                {
                    "user": "Biswapriyo",
                    "text": "<span class=\"comment-copy\">Why undefining the align may solve the issue?</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">I think that I remember something like this on older IDA versions: align was not recognized as instruction and thus the function couldn't be created. I really don't remember in which architecture and in which version I had seen it.</span>",
                    "time": null
                }
            ]
        }
    ]
}