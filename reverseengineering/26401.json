{
    "title": "Decoding Hex Data",
    "link": "https://reverseengineering.stackexchange.com/questions/26401/decoding-hex-data",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to decode <code>.PLW</code> data acquired by a temperature logger (<a href=\"https://www.picotech.com/download/manuals/usb-pt104-rtd-data-logger-programmers-guide.pdf\" rel=\"nofollow noreferrer\">PicoLog PT-104</a>).</p>\n<p>If you convert the <code>.PLW</code> file to a <code>.txt</code> file through the official software you get something like this:</p>\n<p><a href=\"https://i.sstatic.net/dkwwS.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/dkwwS.png\"/></a></p>\n<p>where each row has single temperature measurements across the 20 channels available to the device. I would like to extract the data directly from the <code>.PLW</code>, file without having to convert it to <code>.txt</code> first.</p>\n<p>By opening the <code>.PLW</code> file in a hex editor, I have managed to isolate with a bit of tweaking the section which seems to contain the raw data measurements:</p>\n<p><a href=\"https://i.sstatic.net/8Bv8J.png\" rel=\"nofollow noreferrer\"><img alt=\"hex_dump\" src=\"https://i.sstatic.net/8Bv8J.png\"/></a></p>\n<p>The first 4 hexes contain the row index. And should be read in the reversed column order <code>03 02 01 00</code>.</p>\n<p>There are then the 20 groups of 4 columns, one for each channel. Assuming all groups should be read right to left (given that was the case for the index columns), they all seem to begin with <code>0x41</code> which might maybe be some kind of encoding for the tab character (or similar).</p>\n<p>The next hex in each chunk (so the one just before the <code>0x41</code>) seems to be mapping at least to some approximate way the temperature read in that channel:</p>\n<ul>\n<li>Hex -&gt; TEMP</li>\n<li><code>0x50 -&gt; 13</code></li>\n<li><code>0xa0, 0xa1, 0xa2, 0xa3 -&gt; 20</code></li>\n<li><code>0xa4, 0xa5, 0xaa, 0xab -&gt; 21</code></li>\n<li><code>0xac, 0xae, 0xb0 -&gt; 22</code></li>\n</ul>\n<p>And the order of the channels also seems to match the order of the columns in the <code>.txt</code> file: for example channel 8 in the <code>.txt</code> file has an outlier temperature at <code>13</code> --&gt; which is also present in the 8th data column in the <code>.PLW</code> file, where the <em>temperature</em> hex is set to <code>0x50</code></p>\n<p>Would anyone be able to crack the mapping between the hex values in each chunk to the final temperature measurement displayed in the <code>.txt</code> file?</p>\n<p>Or does anyone know of an encoding where <code>0x41</code> would correspond to a tab-like character? Thanks!</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "642",
    "tags": [
        "decryption",
        "hex"
    ],
    "user": "Alvise",
    "time": "Dec 1, 2020 at 12:00",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The data are floating point encoded on 32 bits Little_endian<br/>\nbyte 0 to 3: 00 00 00 00 = 0 channel number<br/>\nbyte 4 to 7: 1f 85 a3 41 = 0x41a3851f = 20.4400005341<br/>\netc ..<br/>\n<a href=\"https://www.h-schmidt.net/FloatConverter/IEEE754.html\" rel=\"nofollow noreferrer\">https://www.h-schmidt.net/FloatConverter/IEEE754.html</a></p>\n</div>",
            "votes": "4",
            "user": "Gordon Freeman",
            "time": "Dec 1, 2020 at 14:17",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Alvise",
                    "text": "<span class=\"comment-copy\">Thank you very much!   Just for the record, bytes 0 to 3 are the measurement index number. The following 20 * 4-byte encoded values are the temperature values from each channel.  Thanks again Gordon!</span>",
                    "time": null
                },
                {
                    "user": "pythonpython",
                    "text": "<span class=\"comment-copy\">I would be very interested to get my hands on a couple of these .PLW files. Could you post a couple or point to a good resource?</span>",
                    "time": null
                }
            ]
        }
    ]
}