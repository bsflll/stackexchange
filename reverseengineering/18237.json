{
    "title": "Decrypting SQLite Database with key",
    "link": "https://reverseengineering.stackexchange.com/questions/18237/decrypting-sqlite-database-with-key",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a SQLite database that contains a dictionary (just words and definitions) that can be opened with free but proprietary software. To use with the software, it requires an 'unlock' key, which I have. I'm able to see it in this program, but I'd like to manipulate the data and re-arrange it.\nCurrently, I'm paying freelancers on Fiverr to copy/paste every entry to a text document. Old-School Scraping.</p>\n<p>I can open these documents in a SQL viewer like DBBrowser for SQLite. The entry listings are in plaintext, but the definitions are in BLOBs. I've tried hex(), which didn't work. I thought there was somewhere I could paste my key in to decrypt this, but I can't find that. What should I do here?</p>\n<ul>\n<li>I have the database</li>\n<li>I have the key required for unlocking it within the software that reads it</li>\n<li>I have the software that reads it</li>\n</ul>\n<p>This is my first venture into reverse engineering, so I appreciate your help and patience.</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "5k",
    "tags": [
        "encryption",
        "decryption"
    ],
    "user": "Matt Zabojnik",
    "time": "May 11, 2018 at 17:11",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There exists an <a href=\"https://www.sqlite.org/see/doc/trunk/www/index.wiki\" rel=\"nofollow noreferrer\">official encryption addon for SQLite</a> but from your description it sounds more like the data is simply stored encrypted in the blobs and the application decrypts it internally before displaying its content, however:</p>\n<ul>\n<li>we don’t know the exact encryption algorithm</li>\n<li>we don’t know how the password you enter is converted into the decryption key</li>\n<li>we don’t know how the decrypted data is converted to what you see on the screen</li>\n</ul>\n<p>To solve your problem you need to find the answers to these questions (and possibly others I did not think of).  You can try doing it by guessing and trying different algorithms but I doubt you’ll get lucky with just that.</p>\n<p>If I had to do it, I would probably proceed like this:</p>\n<ol>\n<li>Disassemble or debug the binary and identify the SQLite API functions, possibly by looking at references to the database/ tables/column names and/or comparing the compiled code against the SQLite source.</li>\n<li>check what is done with the data retrieved from the DB and see if any functions handling it look like decryption functions (e.g. use standard crypto constants or have a particular loop structure).</li>\n<li>see where the decryption key comes from and try to figure out how it’s derived from the password (optional, since we can just use the final key from the debugger)</li>\n<li>if the structure of the decrypted data is non-obvious, check how it’s parsed and outputted.</li>\n</ol>\n<p>P.S. for a more low-tech solution you could try some UI automation solutions (e.g. possibly AutoIt) but this is out of scope on this site.</p>\n</div>",
            "votes": "4",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": []
        }
    ]
}