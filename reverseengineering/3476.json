{
    "title": "What is the difficulty/advantage to obfuscate a multi-thread program?",
    "link": "https://reverseengineering.stackexchange.com/questions/3476/what-is-the-difficulty-advantage-to-obfuscate-a-multi-thread-program",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>According to my knowledge, several obfuscation strategies are widely used(or at least described in academic) like:</p>\n<ul>\n<li><p>complicating control flow</p>\n<ol>\n<li>inserting bogus control-flow</li>\n<li>control-flow flattening</li>\n<li>jump through branch functions</li>\n<li>opaque values from array aliasing</li>\n</ol></li>\n<li><p>Opaque Predicates</p>\n<ol>\n<li>opaque predicates from pointer aliasing</li>\n</ol></li>\n<li><p>dynamic obfuscation</p>\n<ol>\n<li>self-modifying state machine</li>\n<li>code as key material</li>\n</ol></li>\n</ul>\n<p>From the examples they give when introducing these obfuscation ways, multi-thread program has not been talked.</p>\n<p>So I am wondering whether these strategies are feasible(or even feasible, but not very practical) in multi-thread programs?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "300",
    "tags": [
        "obfuscation",
        "deobfuscation",
        "multi-process"
    ],
    "user": "lllllllllllll",
    "time": "Jan 18, 2014 at 21:06",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>All of them are feasible. \nBy definition obfuscating code transformation is transformation that preserves functional equivalency of obfuscated program, so there is no any difference between multi-thread and single-thread programs from this point of view.</p>\n</div>",
            "votes": "2",
            "user": "w s",
            "time": "Jan 19, 2014 at 7:02",
            "is_accepted": true,
            "comments": []
        }
    ]
}