{
    "title": "How decrypt hexadecimal javascript code? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/18693/how-decrypt-hexadecimal-javascript-code",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>Closed.</b> This question is <a href=\"/help/closed-questions\">off-topic</a>. It is not currently accepting answers.\n                                \n                            </div>\n</div>\n</div>\n</div>\n</div>\n<hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n<div class=\"fw-nowrap fc-black-500\">\n<div class=\"d-flex fd-column lh-md\">\n<div class=\"mb0 d-flex\">\n<div class=\"flex--item mr8\">\n<svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\"><path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\"></path></svg>\n</div>\n<p> This question does not appear to be about reverse engineering within the scope defined in the <a href=\"https://reverseengineering.stackexchange.com/help/on-topic\">help center</a>.</p>\n</div>\n<div class=\"mb0 mt6 d-flex\">\n<p class=\"ml24 pl2\">Closed <span class=\"relativetime\" title=\"2018-07-05 14:44:47Z\">6 years ago</span>.</p>\n</div>\n<div class=\"ml24 pl2\">\n</div>\n</div>\n</div>\n<div class=\"mt24 d-flex gsx gs8\">\n<a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/18693/edit\">\n                        Improve this question\n                    </a>\n</div>\n</aside>\n</div>\n<p>Someone here already had success to deobfuscate 100% a \"hexadecimal\" Javascript code?</p>\n<p>E.g.:</p>\n<pre><code>var _0x22bc92 = function() {\n    var _0x26938d = !![];\n    return function(_0x100751, _0x54d399) {\n        var _0x1a7790 = _0x26938d ? function() {\n            if (_0x54d399) {\n                var _0x28145f = _0x54d399[_0x4734('0x0')](_0x100751, arguments);\n                _0x54d399 = null;\n                return _0x28145f;\n            }\n        } : function() {};\n        _0x26938d = ![];\n        return _0x1a7790;\n    };\n}();\n</code></pre>\n<p>If yes, how do I do it?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "5k",
    "tags": [
        "deobfuscation",
        "javascript",
        "hexadecimal"
    ],
    "user": "FLASHCODER",
    "time": "6 years ago",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Correct me if I am wrong, but this merely looks like <i>obfuscated</i> code to make it harder to read. Simply give those entities whose names start with <code>_0x</code> some more sensible names and you're golden. This isn't really about reverse engineering, though.</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">I'm voting to close this question as off-topic because it's not about reverse engineering, it's just obfuscated Javascript code any developer should be able to comprehend. So it should be migrated to StackOverflow or be closed.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Those hex values could represent anything. Look for <a href=\"https://www.google.com/search?num=100&amp;newwindow=1&amp;rlz=1C1CHZL_enUS745US745&amp;ei=uSU-W9O-F4GzzwLR2IzAAg&amp;q=multi-format%20hexadecimal%20converter&amp;oq=multi-format%20hexadecimal%20converter&amp;gs_l=psy-ab.3...2267.2267.0.2497.1.1.0.0.0.0.68.68.1.1.0....0...1.1.64.psy-ab..0.0.0....0.FocNtzxDAn8\" rel=\"nofollow noreferrer\">online converters</a> that convert hexadecimal to text (consider <a href=\"https://stackoverflow.com/questions/700187/unicode-utf-ascii-ansi-format-differences\">various formats</a>), dec, etc. and see if the results make any sense. If not, then they could just be 100% obfuscated to not recover any sort of meaningful name.</p>\n<p>Therefore, just make meaningful names yourself where you see repeated occurrences of names. For instance, look at how many times you see the value <code>_0x26938d</code> (which I've changed to <code>_0x26938d_CHANGE_ME</code>) appear below. Simply change all of those occurrences to your own name. You can apply a more meaningful name to them once you read through the code and/or execute it to understand its behavior.</p>\n<pre><code>var _0x22bc92 = function() {\n    var _0x26938d_CHANGE_ME = !![];\n    return function(_0x100751, _0x54d399) {\n        var _0x1a7790 = _0x26938d_CHANGE_ME ? function() {\n            if (_0x54d399) {\n                var _0x28145f = _0x54d399[_0x4734('0x0')](_0x100751, arguments);\n                _0x54d399 = null;\n                return _0x28145f;\n            }\n        } : function() {};\n        _0x26938d_CHANGE_ME = ![];\n        return _0x1a7790;\n    };\n}();\n</code></pre>\n</div>",
            "votes": "3",
            "user": "dsasmblr",
            "time": "Jul 5, 2018 at 14:06",
            "is_accepted": true,
            "comments": []
        }
    ]
}