{
    "title": "Understanding Hex-Rays pseudo code",
    "link": "https://reverseengineering.stackexchange.com/questions/20353/understanding-hex-rays-pseudo-code",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>What is the meaning of the following pseudo-code?:</p>\n<ol>\n<li><p><code>BYTE1(v2)</code> or <code>BYTE1(v2)</code></p></li>\n<li><p><code>HIBYTE(v2)</code></p></li>\n</ol>\n<p>Is there any explanation for those macros? How can I implement those macros in C code?</p>\n</div>",
    "votes": "1",
    "answers": 3,
    "views": "4k",
    "tags": [
        "hexrays"
    ],
    "user": "psudoCode",
    "time": "Jan 14, 2019 at 9:46",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>BYTE1(v2)</code> is the second byte of value v2. according to <a href=\"https://github.com/nihilus/hexrays_tools/blob/master/code/defs.h\" rel=\"nofollow noreferrer\">the reference</a> it's Zero-Indexed. defined as:</p>\n<pre><code>#define BYTEn(x, n)   (*((_BYTE*)&amp;(x)+n))\n#define BYTE1(x)   BYTEn(x,  1)         // byte 1 (counting from 0)\n</code></pre>\n<p>for example <code>BYTE1(0x1213141516)</code> is 0x15. (according to Little Endian Byte Order)</p>\n<p><code>HIBYTE(v2)</code> is the higher byte of value v2. defined as:</p>\n<pre><code>#define HIBYTE(x)   (*((_BYTE*)&amp;(x)+1))\n</code></pre>\n<p>for example <code>HIBYTE(0x1213)</code> is 0x12. (according to Little Endian Byte Order) </p>\n</div>",
            "votes": "4",
            "user": "arman",
            "time": "Jan 13, 2019 at 12:31",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Orwellophile",
                    "text": "<span class=\"comment-copy\">Note: HIBYTE <b>used</b> to mean that, but it has changed (contrary to IDA 7.0 defs.h and minwindef.h) to mean <i>the highest byte</i>, e.g., BYTE7 in an __int64.  Not sure when this happened, but somewhere between 7.1 and 7.5.  Not cool IDA.  After C++ conversion, it now looks like this: <code>*(reinterpret_cast&lt;uint8*&gt;(&amp;x)+(sizeof x/sizeof(uint8) - 1))</code></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Open your IDA installation folder open plugins\\defs.h, this file contains all of the macros used by the hexrays decompiler. It can also be found at the github in arman's answer. </p>\n</div>",
            "votes": "1",
            "user": "Zman37",
            "time": "Jan 14, 2019 at 22:38",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><strong>Important</strong> -- this definition has changed in recent versions of IDA, both in <code>defs.h</code> and in the decompiler output.</p>\n<p>As of (some version of IDA between 7.1 and 7.5) the meaning of HIBYTE means something different, I guess you would call it the <em>most significant byte</em>, or <em>highest byte</em>, or <em>last byte</em>.</p>\n<p>e.g., in an <code>__int32</code> it now means <code>BYTE3</code>, in an <code>__int64</code> it would mean <code>BYTE7</code>.</p>\n<p>This is contrary to the default windows definition and older versions of IDA.</p>\n<pre><code>    // minwindef.h\n    auto result_win = static_cast&lt;BYTE&gt;(static_cast&lt;uintptr_t&gt;(x) &gt;&gt; 8 &amp; 0xff);\n\n    // ida_defs_70.h\n    auto result_ida70 = *(reinterpret_cast&lt;uint8*&gt;(&amp;x)+1);\n\n    // ida_defs_75.h\n    auto result_ida75 = *(reinterpret_cast&lt;uint8*&gt;(&amp;x)+(sizeof x/sizeof(uint8) - 1));\n</code></pre>\n<p>Make sure that you are using the definition that applies to your version of IDA, which can be found in <code>defs.h</code> in your IDA executable's path under <code>plugins/</code></p>\n</div>",
            "votes": "1",
            "user": "Orwellophile",
            "time": "Jan 15, 2021 at 20:33",
            "is_accepted": false,
            "comments": []
        }
    ]
}