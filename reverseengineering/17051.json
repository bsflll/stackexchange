{
    "title": "Unable to unpack heavly obfuscated malware",
    "link": "https://reverseengineering.stackexchange.com/questions/17051/unable-to-unpack-heavly-obfuscated-malware",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to unpack malware packed with ConfuserEx 1.0.0 and I can't seem to get it to work. Each time I remove the anti-tamper the whole file gets corrupted.</p>\n<p>I tried all possible tools that I found online, when that failed I tried to do so manually using some tutorials I found online, I always end up destroying the executable in the first stage of the unpacking. I'm using dnspy for this sample.\neach time I attempt to locate the anti-tamper module, it ends up being the incorrect one and i end up destroying the executable..</p>\n<p>Then I tried to debug it and check for memory dumps on x64(32 bit) debugger, I found some anti debugging mechanisms but I am still missing something because the program just keeps running junk code until i detach from it and it crashes, dumping it when its already loaded into memory also dumps junk code.</p>\n<p>What am I missing here? \nDoes anyone have experience with unpacking the confuserex packer? \nCan you guys link me to some information I'm missing? or maybe explain how the ConfuserEx works? </p>\n<p>I would appreciate help in understanding how to unpack it. I'll provide the sample here:</p>\n<pre><code>[WARNING THIS IS A LIVE MALWARE SAMPLE]\neagleepicsocks(dot)com/jk/jkeq.exe\n[WARNING THIS IS A LIVE MALWARE SAMPLE]\n</code></pre>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "2k",
    "tags": [
        "malware",
        ".net"
    ],
    "user": "Potato",
    "time": "Dec 27, 2017 at 8:58",
    "comments": [
        {
            "user": "Vladislav Ivanov",
            "text": "<span class=\"comment-copy\">What exactly do you mean by \"destroying\"?</span>",
            "time": null
        },
        {
            "user": "Potato",
            "text": "<span class=\"comment-copy\">I'm assuming the memory gets corrupted there is no way of knowing since the file is so highly obfuscated I have a hard time knowing what exactly got destroyed.  I am new to the field so even if there is a way of knowing I dont hold the skill set for it</span>",
            "time": null
        },
        {
            "user": "Michael Pittino",
            "text": "<span class=\"comment-copy\">Tip: ConfuserEx will unpack the target during runtime and keep it in memory. You can dump it using dnSpy Debugging. I think the name of the unpacked module was <code>koi</code> or something like that.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>ConfuserEx</code> unpacks your executable at runtime and then gives control to it.\nAfter the <code>ConfuserEx</code> loader finishes its job you can dump the memory and the assembly.</p>\n<p>In order to avoid detection, you can restort to <code>SysInternals</code> <code>Process Explorer</code> or <code>ProcDump</code> to dump the live process after the loader has finished unpacking. This avoids early interference with the loader and simplifies your dump if no other measures are implemented in the protected program.</p>\n<p>You can find an unpacker, this for example, <a href=\"https://github.com/BedTheGod/ConfuserEx-Unpacker-Mod-by-Bed\" rel=\"nofollow noreferrer\">ConfuserEx-Unpacker</a> should do the job.\nHowever, the more interesting part is do it by hand: <a href=\"https://blog.talosintelligence.com/2017/12/recam-redux-deconfusing-confuserex.html\" rel=\"nofollow noreferrer\">this</a> well-written blog shows how to do that in a real case.</p>\n</div>",
            "votes": "2",
            "user": "Yennefer",
            "time": "Jan 7, 2020 at 23:59",
            "is_accepted": false,
            "comments": []
        }
    ]
}