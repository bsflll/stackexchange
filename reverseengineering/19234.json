{
    "title": "Are some special chars(<>) in function names not supported by windbg/cdb?",
    "link": "https://reverseengineering.stackexchange.com/questions/19234/are-some-special-chars-in-function-names-not-supported-by-windbg-cdb",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a function in a binary like this <code>class&lt;class1::class2&gt;::function</code>. I can't directly use commands like <code>bp</code>, <code>u</code>, <code>x</code> on the function. The only option I have right now is <code>x class*</code> and then look in the output for the address and then set a breakpoint <code>bp &lt;address&gt;</code>. </p>\n<p>Is there something that I'm missing? Its too cumbersome to copy and paste addresses each debugging session. One option is to use pykd, but I am looking for a pure windbg solution.</p>\n</div>",
    "votes": "3",
    "answers": 2,
    "views": "191",
    "tags": [
        "binary-analysis",
        "c++",
        "windbg"
    ],
    "user": "sudhackar",
    "time": "Sep 3, 2018 at 6:34",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>they are supported if you add the special escape sequence <strong><a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/breakpoint-syntax\" rel=\"noreferrer\"><code>@!\"  symbol \"</code></a></strong></p>\n<p>make sure you set a resolved breakpoints not an unresolved one </p>\n<p>and be aware a single address may point to several instantiations of these classes </p>\n<pre><code>windbg version \nMicrosoft (R) Windows Debugger Version 10.0.17744.1001 X86\n\nlets look for some functions with angle brackets in them\n\n0:000&gt; x /f /v windbg!*&lt;*&lt;*&lt;*\n\nprv func   00b76da9            6d windbg!Debugger::Utils::SmartCleanup_______snipped\nprv func   00b76e16            46 windbg!Debugger::Utils::SmartCleanup_______snipped\npub func   00b9bcd1             0 windbg!std::basic_string&lt;char,std::_______snipped\nsnip \n\n\n\n0:000&gt; bp @!\" windbg!Debugger::Utils::SmartCleanup_____snipped \"\nBp expression '@!\" windbg!Debugger::Utils::SmartCleanup&lt;&lt;lamb___snipped \"'    \n\ncould not be resolved, adding deferred bp &lt;&lt;&lt;&lt;&lt;\n\n0:000&gt; bl\n     0 e Disable Clear u             0001 (0001) (@!\" windbg!Debugger::Utils::SmartCleanup&lt;&lt;lambda_snipped\n</code></pre>\n</div>",
            "votes": "6",
            "user": "blabb",
            "time": "Sep 3, 2018 at 20:32",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>bm</code> might help to match your function by some pattern. See <a href=\"https://reverseengineering.stackexchange.com/a/13359/22324\">this post</a>.</p>\n</div>",
            "votes": "2",
            "user": "0xC0000022L",
            "time": "Sep 3, 2018 at 13:59",
            "is_accepted": false,
            "comments": []
        }
    ]
}