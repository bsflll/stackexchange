{
    "title": "ghidra scripting: how to distinguish between function and global symbol",
    "link": "https://reverseengineering.stackexchange.com/questions/25989/ghidra-scripting-how-to-distinguish-between-function-and-global-symbol",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a following program:</p>\n<pre><code>int b2[4];\nint foo()\n{\n  static int b2[10];\n  b2[5] = 4;\n}\nint main()\n{\n  static int b2[10];\n  int b[5];\n  b[0] = 1;\n  b2[9] = 4;\n  int *ptr = b;\n  int c = *(ptr + 10);\n  foo();\n  return 0;\n}\n</code></pre>\n<p>I want to distinguish between different b2 arrays defined in functions foo, main and globally. I can collect all the symbols using:</p>\n<pre><code>symbols = set(currentProgram.getSymbolTable().getAllSymbols(True))\n    for s in symbols:\n        print(s.getName())\n</code></pre>\n<p>But, there is no way to distinguish between static (in functional namespace) and global symbols.</p>\n<p>Ghidra GUI shows me something like:\nb2.1913 &lt;- main , b2.1917 &lt;- foo, b2 &lt;- global.</p>\n<p>Thus I can easily distinguish between these symbols using GUI.</p>\n<p>Thanks in advanced for your help.</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ghidra"
    ],
    "user": "R4444",
    "time": "Sep 27, 2020 at 19:34",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The <code>Symbol</code> object has a couple different ways you could go about this. Here are a few options.</p>\n<pre class=\"lang-py prettyprint-override\"><code>symbols = set(currentProgram.getSymbolTable().getAllSymbols(True))\nfor s in symbols:\n    if s.getName() == \"b2\":\n        print(s.getName(), s.getName(True), s.getParentSymbol().getName(), s.getParentNamespace())\n\n</code></pre>\n<p>Output:</p>\n<pre><code>GetSymbolType.py&gt; Running...\n(u'b2', u'b2', u'global', Global)\n(u'b2', u'foo()::b2', u'foo()', foo())\n(u'b2', u'main::b2', u'main', main)\n</code></pre>\n<p>Explanation:</p>\n<ol>\n<li><code>s.getName(true)</code> - Includes the parent namespace in the output (you'll notice that for global symbols, this has no effect)</li>\n<li><code>s.getParentSymbol().getName()</code>, name of the parent <code>Symbol</code>, which will be the namespace <code>Symbol</code> that contains <code>s</code></li>\n<li><code>s.getParentNamespace()</code> - return the parent <code>Namespace</code> object</li>\n</ol>\n<p>More details in the <a href=\"https://ghidra.re/ghidra_docs/api/ghidra/program/model/symbol/Symbol.html\" rel=\"nofollow noreferrer\">API docs</a>.</p>\n</div>",
            "votes": "3",
            "user": "hairlessbear",
            "time": "May 22, 2023 at 2:30",
            "is_accepted": true,
            "comments": []
        }
    ]
}