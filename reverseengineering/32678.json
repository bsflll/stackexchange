{
    "title": "How to change default pointer size in IDA Pro",
    "link": "https://reverseengineering.stackexchange.com/questions/32678/how-to-change-default-pointer-size-in-ida-pro",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>so, I'm writing a script to automate analysis, and the code I'm working with is 64bit.</p>\n<p>the <strong>pointer size</strong> field shown here is the wrong one:</p>\n<p><a href=\"https://i.sstatic.net/WR3wr.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/WR3wr.png\"/></a></p>\n<p>I want to change it from within python to 64bit. I've searched the Idapython documentation and previously similar questions and could not find an answer</p>\n</div>",
    "votes": "0",
    "answers": 2,
    "views": "135",
    "tags": [
        "ida",
        "idapython",
        "binary",
        "compilers"
    ],
    "user": "serv0",
    "time": "Feb 1, 2024 at 16:34",
    "comments": [
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<span class=\"comment-copy\">That stuff in the compiler options page comes from the <code>compiler_info_t</code> structure in the documentation. I'm not sure exactly where you're _supposed_ to set it if using IDAPython, but it's part of <code>idainfo</code>. So, you can prolly use the <code>idaapi.inf_*</code> functions, ctypes with the IDA library to call <code>setinf</code> directly, or I think even the \"Root Node\" netnode iirc.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Thanks to Ali's tip I was able to find the answer</p>\n<p>in idapython the following can be used to set the pointer size:</p>\n<pre><code>ida_ida.inf_set_cc_cm(ida_typeinf.CM_N16_F32)\n</code></pre>\n<p>the enum/definition for 'CM_N16_F32' is found in ida.hpp:</p>\n<p><a href=\"https://hex-rays.com/products/ida/support/sdkdoc/group___c_m__ptr.html\" rel=\"nofollow noreferrer\">https://hex-rays.com/products/ida/support/sdkdoc/group___c_m__ptr.html</a></p>\n<p><a href=\"https://hex-rays.com/products/ida/support/sdkdoc/structcompiler__info__t.html\" rel=\"nofollow noreferrer\">https://hex-rays.com/products/ida/support/sdkdoc/structcompiler__info__t.html</a></p>\n<p>and to use it in idapython I looked up the function/module Ali mentioned and found ida_ida.inf_set_cc_cm() / ida_ida.inf_get_cc_cm for setting/getting compiler info specifically for the compiler memory model mentioned in the previous links:</p>\n<p><a href=\"https://hex-rays.com//products/ida/support/idapython_docs/ida_ida.html#ida_ida.INF_CC_CM\" rel=\"nofollow noreferrer\">https://hex-rays.com//products/ida/support/idapython_docs/ida_ida.html#ida_ida.INF_CC_CM</a>\n<a href=\"https://hex-rays.com//products/ida/support/idapython_docs/ida_typeinf.html#ida_typeinf.CM_N64\" rel=\"nofollow noreferrer\">https://hex-rays.com//products/ida/support/idapython_docs/ida_typeinf.html#ida_typeinf.CM_N64</a></p>\n<p>exciting stuff :)</p>\n</div>",
            "votes": "1",
            "user": "serv0",
            "time": "Jan 31, 2024 at 21:00",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>As hinted by Ali, this info is stored in the global <code>inf</code> structure. It used to be an actual global variable accessible via the <code>idaapi.cvar</code> wrapper, but now you need to use the various getters/setters in the <a href=\"https://hex-rays.com//products/ida/support/idapython_docs/ida_ida.html\" rel=\"nofollow noreferrer\"><code>ida_ida</code> module</a>.</p>\n<p>While you can indeed go down that road and use <code>inf_get_cc</code>/<code>inf_set_cc</code> or <code>inf_set_cc_cm</code>, in case you only need to change the pointers to 64-bit, normally it should be enough to call <strong><code>inf_set_64bit(True)</code></strong>.</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Jan 31, 2024 at 21:08",
            "is_accepted": false,
            "comments": [
                {
                    "user": "serv0",
                    "text": "<span class=\"comment-copy\">indeed, thats a better way to do it.</span>",
                    "time": null
                }
            ]
        }
    ]
}