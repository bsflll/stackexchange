{
    "title": "PE Self Injection Not Working",
    "link": "https://reverseengineering.stackexchange.com/questions/27120/pe-self-injection-not-working",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm working on different PE Injection technique. I want to inject PE file into virtual memory of the current executable. After that, I want to execute the injected PE file, I wrote an injection code, but my method is not working.</p>\n<p>DOS header and NT header parse correctly, I write correctly sections and create new thread on the entrypoint of the <code>.text</code> section, but the thread is not working. What is the problem here?</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;windows.h&gt;\n\nint main()\n{\n    DWORD* ImageBase;\n    void* pImageBase;\n    IMAGE_NT_HEADERS* NTHeader;\n    IMAGE_DOS_HEADER* DOSHeader;\n    IMAGE_NT_HEADERS* mem_NTHeader;\n    IMAGE_DOS_HEADER* mem_DOSHeader;\n    IMAGE_SECTION_HEADER* SecHeader;\n    unsigned char memory_pe[] = { 0x4D, 0x5A, 0x90, 0x00, 0x03, 0x00, ........} // This is binary of PE file.\n    DOSHeader = PIMAGE_DOS_HEADER(memory_pe);\n    NTHeader = PIMAGE_NT_HEADERS(DWORD(memory_pe) + DOSHeader-&gt;e_lfanew);\n    pImageBase = VirtualAlloc(NULL, NTHeader-&gt;OptionalHeader.SizeOfImage, 0x3000, PAGE_EXECUTE_READWRITE);\n    memcpy(pImageBase, memory_pe, NTHeader-&gt;OptionalHeader.SizeOfHeaders);\n    for (int i = 0; i &lt; NTHeader-&gt;FileHeader.NumberOfSections; i++) {\n        SecHeader = (PIMAGE_SECTION_HEADER)(DWORD(memory_pe) + DOSHeader-&gt;e_lfanew + 248 + (i * 40));\n        memcpy(LPVOID(DWORD(pImageBase) + SecHeader-&gt;VirtualAddress), LPVOID(DWORD(memory_pe) + SecHeader-&gt;PointerToRawData), SecHeader-&gt;SizeOfRawData);\n    }\n    mem_DOSHeader = PIMAGE_DOS_HEADER(pImageBase);\n    mem_NTHeader = PIMAGE_NT_HEADERS(DWORD(pImageBase) + mem_DOSHeader-&gt;e_lfanew);\n    CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)(DWORD(pImageBase) + mem_NTHeader-&gt;OptionalHeader.BaseOfCode), NULL, 0, NULL);\n    return 0;\n}\n</code></pre>\n</div>",
    "votes": "-1",
    "answers": 1,
    "views": "175",
    "tags": [
        "windows",
        "pe",
        "injection"
    ],
    "user": "Crazy Programmer",
    "time": "Aug 10, 2021 at 17:44",
    "comments": [
        {
            "user": "peter ferrie",
            "text": "<span class=\"comment-copy\">is BaseOfCode set correctly?  It's an optional field and might not contain any meaningful value.  The proper starting point is the AddressOfEntryPoint field.</span>",
            "time": null
        },
        {
            "user": "Crazy Programmer",
            "text": "<span class=\"comment-copy\">I tried put AddressOfEntryPoint instead BaseOfCode but, issue still continues.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Loading and successfully running code associated with an arbitrary PE may require some additional steps e.g. <a href=\"https://microsoft.public.vb.winapi.narkive.com/5GVk3E7j/relocation-reloc-section-in-win32-pe-exe\" rel=\"nofollow noreferrer\">relocation</a>. Consider converting the EXE into a DLL like <a href=\"https://blog.whtaguy.com/2020/04/calling-arbitrary-functions-in-exes.html\" rel=\"nofollow noreferrer\">this</a> or <a href=\"https://github.com/hasherezade/exe_to_dll\" rel=\"nofollow noreferrer\">this</a> so that you can use Windows APIs to load the code for you.</p>\n</div>",
            "votes": "1",
            "user": "P. Private",
            "time": "Feb 28, 2021 at 22:02",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Crazy Programmer",
                    "text": "<span class=\"comment-copy\">Thank you for supply valuable sources to me. I will try and reply to you.</span>",
                    "time": null
                },
                {
                    "user": "Crazy Programmer",
                    "text": "<span class=\"comment-copy\">I reviewed the sources you posted but I don't mean I want translate exe to DLL.</span>",
                    "time": null
                },
                {
                    "user": "P. Private",
                    "text": "<span class=\"comment-copy\">In that case you may need to debug the code to see where it is not working appropriately. Without the compiled EXE, I can only guess what is happening.</span>",
                    "time": null
                }
            ]
        }
    ]
}