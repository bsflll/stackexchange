{
    "title": "Tools for static function discovery",
    "link": "https://reverseengineering.stackexchange.com/questions/10721/tools-for-static-function-discovery",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In the case of static function discovery based on disassembled code, IDA is the best tool I know. What open source tools or frameworks are also able to perform function detection/analysis?</p>\n<p>I know radare2 does have some code for that, but it isn't similar to IDA's detection. The architecture is mainly x86/x86_64, but also ARM. </p>\n</div>",
    "votes": "3",
    "answers": 3,
    "views": "549",
    "tags": [
        "disassembly",
        "x86",
        "static-analysis"
    ],
    "user": "trenchc0de",
    "time": "Aug 26, 2015 at 16:47",
    "comments": [
        {
            "user": "Vitaly Osipov",
            "text": "<span class=\"comment-copy\">Try this thesis by Cristina Cifuentes before reaching for tools <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.105.6048&amp;rep=rep1&amp;type=pdf\" rel=\"nofollow noreferrer\">citeseerx.ist.psu.edu/viewdoc/â€¦</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There are several free disassemblers availables:</p>\n<ul>\n<li><a href=\"http://radare.org\" rel=\"nofollow\">radare2</a>, which is also a framework. If you don't like its internal analysis capabilities, you can always use its shell to conduct your analysis by hand with it; it's released under LGPL, and written in C.</li>\n<li><a href=\"http://x64dbg.com/\" rel=\"nofollow\">x64dbg</a>, the spiritual successor of <a href=\"http://ww.ollydbg.de\" rel=\"nofollow\">ollydbg</a>, but as a free software; it's Windows only, and written in C++/Qt.</li>\n<li><a href=\"http://hte.sourceforge.net/index.html\" rel=\"nofollow\">HTE</a>, which seems to be a bit like radare2.</li>\n</ul>\n</div>",
            "votes": "1",
            "user": "jvoisin",
            "time": "Aug 27, 2015 at 17:26",
            "is_accepted": false,
            "comments": [
                {
                    "user": "broadway",
                    "text": "<span class=\"comment-copy\">There's some tools designed for specific purposes as well. For example, mcsema includes bin_descend which is designed to recover a cfg. Unfortunately, that's a task ida is probably the best at.</span>",
                    "time": null
                },
                {
                    "user": "joxeankoret",
                    "text": "<span class=\"comment-copy\">Another one: pyew <a href=\"https://github.com/joxeankoret/pyew\" rel=\"nofollow noreferrer\">github.com/joxeankoret/pyew</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>From your question is not clear if you mean <em>known</em> functions or arbitrary ones (a way more complicated problem).</p>\n<p>For the first case you could take a look at Sybil (<a href=\"https://github.com/cea-sec/Sibyl\" rel=\"nofollow\">https://github.com/cea-sec/Sibyl</a>)</p>\n</div>",
            "votes": "0",
            "user": "Carlos Garcia",
            "time": "Aug 28, 2015 at 14:01",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If you are used to using Ollydbg a lot, there is a plugin called <a href=\"https://tuts4you.com/download.php?view.54\" rel=\"nofollow\">Godup</a>. I used it on a daily basis when analyzing Delphi binaries since it contains IDA signatures that can be applied to a file being analyzed in Ollydbg. I believe it is not limited on only Delphi binaries, but based on my work so far that is the area where I used it the most. It saves me quite a lot of time with its function discovery functionality.  </p>\n</div>",
            "votes": "0",
            "user": "ubnix",
            "time": "Nov 30, 2015 at 10:21",
            "is_accepted": false,
            "comments": []
        }
    ]
}