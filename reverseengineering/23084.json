{
    "title": "Linux encryption/luks/pymouth password scripts corruption",
    "link": "https://reverseengineering.stackexchange.com/questions/23084/linux-encryption-luks-pymouth-password-scripts-corruption",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I noticed that the bootup scripts that collect the password for full disk encryption on linux (fedora-31) were displaying corrupted text.  The kind that looked like binary data being printed at text:</p>\n<p>'Forward Password R…uests to Wall Directory Watch'</p>\n<p>When I examined those binary chars I found between to the 'R' and the 'uests' three binary chars (e2, 80, a6).  When I run those unprintable chars into objdump I get valid opcodes:</p>\n<p>0:   e2 80                   loop   0xffffffffffffff82</p>\n<p>2:   a6                      cmpsb  %es:(%rdi),%ds:(%rsi)</p>\n<p>I'm really hoping there is a good reason for valid opcodes being embedded in text messages.  But considering its happening during the full disk encryption password collector it has me worried.</p>\n<p>I've also noticed that others have this same issue.  A web search for \"Forward Password R...\" finds others with the same binary corruption in their bootup logs.   </p>\n<p>Does anyone know what is going on here?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "45",
    "tags": [
        "disassembly",
        "malware",
        "linux",
        "encryption",
        "security"
    ],
    "user": "Mouse",
    "time": "Jan 24, 2020 at 4:01",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Relax. Don't panic.</p>\n<p>Those \"highly suspicious binary bytes\" are the UTF-8 representation of U+2026, which is the Ellipsis <code>...</code>. It's just to print exactly that string that you're quoting.<br/>\nIt probably got shortened by an algorithm to make it fit in a preallocated space.</p>\n<p>The fact that you can disassemble it into \"valid opcodes\" does not mean a thing. You tested these three bytes but not the bytes around it – you might be surprised to learn that you can 'disassemble' just about any sequence of bytes, be it a JPEG image, MP3 music, and your log file.</p>\n</div>",
            "votes": "1",
            "user": "Jongware",
            "time": "Jan 24, 2020 at 9:17",
            "is_accepted": false,
            "comments": []
        }
    ]
}