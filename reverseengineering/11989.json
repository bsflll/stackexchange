{
    "title": "Possible to Bypass V-Safe100 USB encryption?",
    "link": "https://reverseengineering.stackexchange.com/questions/11989/possible-to-bypass-v-safe100-usb-encryption",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a Verbatim flash drive that I do not know my password for. Most of my searching for a solution has led to me to answers like \"take the loss and reformat the drive\" (losing all encrypted data). The V-SAFE100.exe on the drive allows you to access your hidden-encrypted partition. </p>\n<p>However, I thought someone here might find it to be an interesting experiment to try and bypass the V-SAFE100 encryption program (direct link <a href=\"http://www.verbatim.com/includes/binary_details.php3?show=1&amp;id=2960\" rel=\"nofollow\">http://www.verbatim.com/includes/binary_details.php3?show=1&amp;id=2960</a> ), and at the same time, give me a solution that doesn't forfeit my data. The idea would be to NOP the password comparison. According to this article on pg. 62, (<a href=\"http://content.yudu.com/Library/A1rc91/Hakin9201001/resources/62.htm\" rel=\"nofollow\">http://content.yudu.com/Library/A1rc91/Hakin9201001/resources/62.htm</a> ) it should be possible. \nI'm just too new to IDA and OllyDBG to do it myself. Any takers?</p>\n<p>Also, I realize that I might not be able to copy and paste a fixed version of the program, but I should be able to replicate the process for my drive's program.<br/>\nTHANKS!</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "encryption",
        "usb"
    ],
    "user": "JCeos",
    "time": "Feb 10, 2016 at 19:07",
    "comments": [
        {
            "user": "Mike Haboustak",
            "text": "<span class=\"comment-copy\">Have you tried the PoC password extractor linked from the Hakin9 article?</span>",
            "time": null
        },
        {
            "user": "JCeos",
            "text": "<span class=\"comment-copy\">I did not, where exactly?</span>",
            "time": null
        },
        {
            "user": "Mike Haboustak",
            "text": "<span class=\"comment-copy\">Page 64, \"On the 'Net\" box, reference [6]. It's cited within the text of the article in the middle column of page 64.</span>",
            "time": null
        },
        {
            "user": "JCeos",
            "text": "<span class=\"comment-copy\">So I just tried it out. No luck, but something interesting. According to the article, they were bypassing the VSafeVista.exe, mine is VSafe100.exe. After running the password extractor on my Vsafe100 it found what it believed to be the password, and no hint. Now although the password is incorrect, I did find that string in my program while attempting to disassemble it. Maybe there is an updated extractor out there for my updated program version.</span>",
            "time": null
        },
        {
            "user": "Alexander",
            "text": "<span class=\"comment-copy\">I just wanted to thank you so much for including a link to the old V-SAFE100 program. I deleted it from an old drive, and I was finally able to get it from the link in your post and access the rest of the space in my drive. Verbatim doesn't list it anywhere.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It's not possible to bypass the password protection of V-Safe 100 by patching VSafe100.exe or reversing it's proprietary API.</p>\n<p>The linked article about VSafeVista mentions Verbatim drives using a USBest usb flash controller. The UT163 flash controller does not have any integrated encryption or privacy volume support. VSafeVista emulates it in software.</p>\n<p>VSafe100.exe works with Phison controllers like the PS2231. These controllers have integrated encryption and support for this concept of a privacy volume.</p>\n<p>VSafe100.exe never handles the password that was used to lock the privacy volume. It sends a \"switch volume\" command with the user supplied password, and the response from the controller is some kind of volume state indicator (0xA0, 0xA1, 0xA2) that tells VSafe100 which volume the controller is currently presenting. Based on the volume state response, VSafe100 knows whether the unlock was successful or not, and it knows which volume is currently mounted.</p>\n<p>It may be possible to attack or patch the controller's firmware to bypass or extract the stored password, or to extract the privacy volume encryption keys and read directly from the flash chip. Reversing the firmware would be dependent on the usb flash controller used by your particular flash drive. </p>\n<p>There's a tool called GetInfo on the internet for Phison devices that will report the controller model and firmware version.</p>\n<p>There's also a project on github with some references to the Phison 2251-03 controller. This is a modern USB3 controller from Phison. So it's not completely unreasonable that the firmware could be deciphered enough to recover the privacy volume. </p>\n</div>",
            "votes": "1",
            "user": "Mike Haboustak",
            "time": "Feb 14, 2016 at 15:30",
            "is_accepted": false,
            "comments": []
        }
    ]
}