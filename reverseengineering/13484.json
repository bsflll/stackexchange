{
    "title": "Anti-theft system rs485 keypad",
    "link": "https://reverseengineering.stackexchange.com/questions/13484/anti-theft-system-rs485-keypad",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><br/>\nI'm trying to recycle an Anti-theft system keypad.<br/>\nMy goal is use this keypad as my system peripheral.<br/>\nThis keypad is interfaced with its master device phisically using bus <strong>rs485</strong>.<br/>\nThe first step in order to exploit this keyboard, is understand the communication between this two devices, the master and its keypad.<br/>\nMy first idea have been tap the bus and sniff the traffic.<br/>\nDoing this, I collected few dumps of estabilished dialogs between those two devices, but because the  tap, I can't have any idea of the direction the bytes I logged.<br/>\nSo my second step have been play the <em>man-in-the-middle</em> game.<br/><br/>\nI setup a device to put between the master and its keypad cutting the bus and using two transceiver, one facing the master an another facing the keypad.<br/>\nThen I wrote a simple program to forward everything from an interface to another.<br/>\nIn this scenario however, it seems keypad does not react to the messages sent by its master, received by my device ad forwarded to it.<br/>\nHaving the feeling something in the transmission could be wrong, the rs485 chip on my usb dongle and the one on the keypad are different (<strong>sipex sp485ec</strong> keypad - <strong>st 485ecdr</strong> usb dongle), I tried to tap directly a logic analyzer to the serial pin on the microcontroller. Doing this I verified that sending bytes through my usbdongle I could receive them on the pins on the MCU.<br/><br/><br/>\nCan someone give me any direction to step forward my project?</p>\n</div>",
    "votes": "4",
    "answers": 2,
    "views": "321",
    "tags": [
        "serial-communication"
    ],
    "user": "Alessandro",
    "time": "Sep 10, 2016 at 19:26",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It is quite possible the master device requires keypad to answer within a specific time window. Adding a man-in-the-middle violates these conditions.</p>\n<p>To analyze data direction, you can try connecting a small value resistor (100 â€” 1k) in series in the line between the devices. Connect an oscilloscope to the line. Signal voltage level will be slightly different depending on which side is driving the line.</p>\n</div>",
            "votes": "2",
            "user": "Vladislav Ivanov",
            "time": "Sep 20, 2016 at 8:46",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>As often happen, solution is easiest than you might have thought.<br/>\nBut before proceed telling you which was the problem, I want to ask a simple question to you all: <br/> <em>Did you know that, if in serial communication the stop bit setting is wrong, you can receive and decode successfully the stream?</em><br/>\nFrankly I didn't know, and that's the main cause I waste all this time on a simple problem such as this.<br/>\nWell you should also understand that in my experience, I never ever had the need to change the stop bit setting.<br/>\n<strong>Never ever... until now.</strong><br/><br/>\nAs you might have guessed, the problem laid in the fact that \"stop bit\" setting was wrong.<br/>\nInstead of the classic <strong>9600,8,n,1</strong> this setup needed <strong>9600,8,n,2</strong>.<br/>\nGuess what, I needed a very long time to figure it out.<br/>\nI ended up probing serial data, directly on the MCU serial pins tx and rx pins, that because I feared the rs485 driver could have something wrong.<br/>\nAt last, comparing a sniffed waveform from original MASTER and the waveform I produced I finally saw the difference.\n<a href=\"https://i.sstatic.net/WJ3bk.gif\" rel=\"nofollow noreferrer\"><img alt=\"waveforms comparsion\" src=\"https://i.sstatic.net/WJ3bk.gif\"/></a>\nNow I can successfully transmit bytes to the devices on this bus  and proceed with my original goal of reverse engineer the protocol to use this hardware on my custom Anti-theft system.</p>\n</div>",
            "votes": "1",
            "user": "Alessandro",
            "time": "Sep 28, 2016 at 19:46",
            "is_accepted": true,
            "comments": []
        }
    ]
}