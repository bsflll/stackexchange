{
    "title": "Setting a breakpoint at system call",
    "link": "https://reverseengineering.stackexchange.com/questions/6835/setting-a-breakpoint-at-system-call",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to modify my teamspeak server (linux), I'm particulary interested in the connection with clients (UDP), so I figured I need to set a breakpoint at the linux socket function to start reversing. How can I achieve this?</p>\n<p>Thanks!</p>\n</div>",
    "votes": "12",
    "answers": 1,
    "views": "20k",
    "tags": [
        "linux",
        "operating-systems"
    ],
    "user": "Hugo Kiiski",
    "time": "Dec 16, 2014 at 20:18",
    "comments": [
        {
            "user": "Ciro Santilli OurBigBook.com",
            "text": "<span class=\"comment-copy\">For write: <a href=\"http://stackoverflow.com/questions/8235436/how-can-i-monitor-whats-being-put-into-the-standard-out-buffer-and-break-when-a\" title=\"how can i monitor whats being put into the standard out buffer and break when a\">stackoverflow.com/questions/8235436/â€¦</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In <code>gdb</code> you can set a syscall breakpoint with <code>catch syscall</code>.</p>\n<p>If this is in 32-bit x86 (IA-32), check the syscall number in <code>your_linux_source_dir/usr/include/asm/unistd_32.h</code>. There is no syscall called <code>socket</code> in 32-bit x86, do you mean <code>socketcall</code>? Its number is 102.</p>\n<p>If this is in x86-64 (AMD64), check the syscall number in <code>your_linux_kernel_source_dir/usr/include/asm/unistd_64.h</code>. The syscall called <code>socket</code> is 41.</p>\n<p>Then run the executable in <code>gdb</code>:</p>\n<pre><code>$ gdb myexecutable\n</code></pre>\n<p>And set the syscall breakpoint (41 is the <code>socket</code> syscall number in x86-64, change to appropriate syscall number for you):</p>\n<pre><code>(gdb) catch syscall 41\n</code></pre>\n<p>And then run the program:</p>\n<pre><code>(gdb) r\n</code></pre>\n<p>Using the name of syscall (such as <code>socket</code>) instead of the number (eg. <code>41</code>) may also work, depending on your configuration.</p>\n</div>",
            "votes": "15",
            "user": "nrz",
            "time": "Jan 16, 2015 at 18:28",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Celelibi",
                    "text": "<span class=\"comment-copy\">I have no idea when this was added. But now you can use the syscall name instead of its number. So, just <code>catch syscall socket</code>.</span>",
                    "time": null
                }
            ]
        }
    ]
}