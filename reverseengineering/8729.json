{
    "title": "Need to recover C++ code from binary of server and client",
    "link": "https://reverseengineering.stackexchange.com/questions/8729/need-to-recover-c-code-from-binary-of-server-and-client",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>We have an old 2D space shooter multiplayer game community form late 1990s. The game is still alive today but the problem is the creators of the game are no where to be found and the source code is missing. Although, still functional the client and server badly need some updates. For example, all download speeds are capped for 56k connections... So I'm a java developer by trade and I tried to use IDA but I feel like I'm not qualified to try to disassemble client/server that were written in C++ and probably have built in security for such purposes. I want to learn IDA but i'm just so busy atm with other projects but I would like to solve this problem some how or at least investigate what is possible. </p>\n<ol>\n<li>Is it possible to fully reverse engineer the legacy C++ code? </li>\n<li>Is it possible to partially reverse engineer and maybe at least adjust some constant values that are embedded inside the exe</li>\n<li>Are there any disassembly service companies that specialize in this task? </li>\n</ol>\n<p>the game is called Continuum/Subpsace. </p>\n<p><a href=\"http://www.getcontinuum.com/\" rel=\"nofollow\">http://www.getcontinuum.com/</a>    (link to client installer)</p>\n<p>Sample enhancements: </p>\n<ol>\n<li><p>Increase the cap value on download/upload speed for greater than 56k connections</p></li>\n<li><p>Allow the client to download and play mp3 files (currently on does .wav files)</p></li>\n<li><p>If possible ability to upgrade graphics library used</p></li>\n<li><p>Allow for editing of key/value properties in game (right now you have to exit the game to change certain properties)</p></li>\n</ol>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "613",
    "tags": [
        "ida",
        "disassembly",
        "c++",
        "disassemblers",
        "interoperability"
    ],
    "user": "Selwyn",
    "time": "Apr 20, 2015 at 13:38",
    "comments": [
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">Do you have <i>any</i> documentation at all? Map or object files, notes, sketches, flow diagrams? A fully working Debug Build, for example, would help tremendously.</span>",
            "time": null
        },
        {
            "user": "Selwyn",
            "text": "<span class=\"comment-copy\">Yes the game is very active. You can install the game and download maps from any active sever. I am not sure how the underlying application works programmatically I did not develop the original code. No debug build I think if we had prolly have access to the underlying code as well</span>",
            "time": null
        },
        {
            "user": "Selwyn",
            "text": "<span class=\"comment-copy\">I'll try to explain how it works. The continuum40.exe client loads a U.I that allows the configuration of keyboards settings, any user settings, or fixed values. This U.I also presents a list of potential servers that it can connect to with their statistics. Once you select a server and click \"connect\". When you connect to the server binary it loads I believe openGL graphics and uses the subspace protocol (<a href=\"http://wiki.minegoboom.com/index.php/UDP_Game_Protocol\" rel=\"nofollow noreferrer\">wiki.minegoboom.com/index.php/UDP_Game_Protocol</a>) to communicate with the server. The packets are encrypted. I can provide server binary if needed. Server forum: <a href=\"https://shanky.com/\" rel=\"nofollow noreferrer\">shanky.com</a></span>",
            "time": null
        },
        {
            "user": "Selwyn",
            "text": "<span class=\"comment-copy\">But no I don't have any any technical knowledge of the underlying application. I can only deduce what I see as a user. Over the years the community has been able to write an open source server (ASSS) based on the SS protocol but nobody has put in an effort to rewrite the client. Like I said the game still functions and the community is still active but it desperately needs minor enhancements to the client/server to modernize the game.</span>",
            "time": null
        },
        {
            "user": "Selwyn",
            "text": "<span class=\"comment-copy\">@glampert there is an effort on the way already. <a href=\"https://github.com/Periapsis/aphelion\" rel=\"nofollow noreferrer\">github.com/Periapsis/aphelion</a> . I just wanted to see how \"easy\" it was to possibly make some small patches in the mean time. Open source effort is not trivial though (if you look at all the open tickets)</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I checked client exe file and it looks like Pack Master 1.0 (PEX 0.99 Clone) was used to encrypt binary. So first step would be to unpack EXE file. From that point some binary patching might be possible. \nThere is another way of making changes. There is possibility to inject new or changed functionality using dll injection.</p>\n</div>",
            "votes": "1",
            "user": "malikcjm",
            "time": "Apr 25, 2015 at 11:39",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Selwyn",
                    "text": "<span class=\"comment-copy\">I tried 3 different PEX 0.99 unpackers suggested by acidShout all of them threw errors and said couldn't find the signature. I have the Peid .95 and I see it identifies the continuum.exe as compressed with PEX 0.99. Any ideas how to proceed further?</span>",
                    "time": null
                },
                {
                    "user": "malikcjm",
                    "text": "<span class=\"comment-copy\">The main problem is that it it not PEX 0.99. It just clone of it. Pack Master 1.0 uses different algorithm.</span>",
                    "time": null
                }
            ]
        }
    ]
}