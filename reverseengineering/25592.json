{
    "title": "Identifying the nature and contents of a file",
    "link": "https://reverseengineering.stackexchange.com/questions/25592/identifying-the-nature-and-contents-of-a-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>As a preface, <strong>I do not have any experience in reverse engineering</strong>. I am an application developer, so this field is way out of my area of expertise. My end goal is to create a web page out of this information but this is the first hurdle I faced: getting the required data in the first place.</p>\n<p>I am currently trying to identify the nature of a file that I have suspicions might be encrypted and/or compressed (I'm still trying to learn the tell-tales of a file being encrypted/compressed). Since this is way above what I can do at the moment, it would be great if someone can help out or at least provide some guidance.</p>\n<p>This is an example file (do let me know if you'd like some more examples):</p>\n<p><a href=\"https://drive.google.com/file/d/1vwt4G55E-TaGvuWM86L6S-7Sbd2o0gOp/view?usp=sharing\" rel=\"nofollow noreferrer\">https://drive.google.com/file/d/1vwt4G55E-TaGvuWM86L6S-7Sbd2o0gOp/view?usp=sharing</a></p>\n<p>So far, here's what I know and attempted:</p>\n<ul>\n<li>File is most likely a JSON or CSV (not 100% sure, but all the other unencrypted metadata files are JSON/CSV format)</li>\n<li>File has a lot of repeated sets of binary <code>ef</code> <code>bf</code> <code>bd</code>, which I'm assuming are just paddings or an attempt to obfuscate?</li>\n<li>Most of the corresponding hexes do not really translate to a readable set of standard encodings such as UTF-8</li>\n</ul>\n<p>Any help/guidance would be appreciated.</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "binary-analysis",
        "file-format"
    ],
    "user": "unnamed-pizza",
    "time": "Aug 2, 2020 at 11:30",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">Where is the file coming from? Do you have software which reads or writes it?</span>",
            "time": null
        },
        {
            "user": "Bill B",
            "text": "<span class=\"comment-copy\">Note that 0xefbfbd is the UTF-8 \"Replacement Character\".  So the repeated character could be an intentional part of the format (some kind of delimiter or tag?), or it could be evidence of some kind of error or data corruption. See <a href=\"https://en.wikipedia.org/wiki/Specials_(Unicode_block)#Replacement_character\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/â€¦</a> for more info.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>When given an unknown file there are several things you can do:</p>\n<ol>\n<li><p>Identify if the file is a binary format (raw bytes) or a text format. Any hex/text editor should be enough for that purpose.</p>\n</li>\n<li><p>If the file is Binary - it could have text strings inside, which could help understand the nature of the file.  In your case, no text strings appear in the file.</p>\n</li>\n<li><p>Some binary files have \"magic values\" - identifiers that help to understand which file format it is. for example - the 4 first bytes in <code>ELF</code> file format will be always <code>.ELF</code>. In your case, the file starts with <code>CE A3 EF BF</code> which doesn't correspond to any known format.</p>\n</li>\n<li><p>Next step will be to use binary tools like <a href=\"https://github.com/ReFirmLabs/binwalk\" rel=\"nofollow noreferrer\">binwalk</a> to identify any compressed/internal files/objects. In this case, it yields nothing.</p>\n</li>\n<li><p>Next step will be to calculate the entropy of the file. It could be done by <code>binwalk -E &lt;file&gt;</code>. in this case, it yields 0.52 - the higher the entropy it, the higher chances the file is encrypted/obfuscated. Here, it looks like the entropy is not high, meaning the file is not encrypted/obfuscated.</p>\n</li>\n</ol>\n<p>So overall it looks like it's just a custom binary file format. In order to continue investigating, you need to understand which program is using the file - and in what purpose, and continue with a reverse engineering process, usually based on static disassembler like <code>IDA PRO</code> or the free <code>Ghidra</code>.</p>\n</div>",
            "votes": "2",
            "user": "macro_controller",
            "time": "Aug 2, 2020 at 12:31",
            "is_accepted": false,
            "comments": [
                {
                    "user": "unnamed-pizza",
                    "text": "<span class=\"comment-copy\">Thank you very much for the detailed answer! I'm quite relieved it's not either compressed or encrypted based on what you mentioned. For now I'll try to find where the entrypoint is for reading all these files and update this thread accordingly.</span>",
                    "time": null
                }
            ]
        }
    ]
}