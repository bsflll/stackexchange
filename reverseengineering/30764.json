{
    "title": "PowerPC disassembly with libopcodes",
    "link": "https://reverseengineering.stackexchange.com/questions/30764/powerpc-disassembly-with-libopcodes",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to disassemble Wii game executable binaries in C, which use the broadway microprocessor and unfortunately the only disassembler I am aware that I can use is libopcodes.</p>\n<p>I am following this respository <a href=\"https://github.com/antonblanchard/qtrace-tools/blob/3a83cc095de6fb6726c7c969ba8bbeaec75b62c9/qtdis/qtdis.c#L221\" rel=\"nofollow noreferrer\">https://github.com/antonblanchard/qtrace-tools/blob/3a83cc095de6fb6726c7c969ba8bbeaec75b62c9/qtdis/qtdis.c#L221</a> as a reference, which uses Ubuntu's <code>binutils-multiarch-dev</code> package. However, my calls to <code>disassembler</code> always returns a NULL pointer (even when using exactly the same arguments he uses). I only get a valid disassembler with <code>disassembler(bfd_arch_i386, false, bfd_mach_x86_64, NULL)</code>.</p>\n<p>Here's a minimum failing example (<code>test.c</code>):</p>\n<pre><code>#include &lt;stdio.h&gt;\n\n// including BFD stuff requires this stuff apparently...\n// https://stackoverflow.com/questions/11748035/binutils-bfd-h-wants-config-h-now\n#define PACKAGE \"pkg-name\"\n#define PACKAGE_VERSION \"1.0.0\"\n#include &lt;dis-asm.h&gt;\n\nint main(int argc, char const *argv[]) {\n  disassembler_ftype disasm = disassembler(bfd_arch_powerpc, true, bfd_mach_ppc_750, NULL);\n\n  if (!disasm) {\n    printf(\"wth no disasm\\n\");\n  } else {\n    printf(\"ok disasm\\n\");\n  }\n\n  return 0;\n}\n</code></pre>\n<p>Install binutils multiarch <code>sudo apt-get install binutils-multiarch-dev</code>.\nBuild with <code>gcc -o test test.c -lopcodes-multiarch</code> and run <code>./test</code></p>\n<p>It seems that my <code>libopcodes</code> does not support any PowerPC architectures I tried. I would try to build from source but binutils' README <a href=\"https://sourceware.org/git/?p=binutils-gdb.git;a=blob;f=binutils/README;h=42f494800c0b93b1188857bdeaa6ae48843aca24;hb=cd919f5533cc8aa495acd75a6f059e5fcf2e6af9\" rel=\"nofollow noreferrer\">https://sourceware.org/git/?p=binutils-gdb.git;a=blob;f=binutils/README;h=42f494800c0b93b1188857bdeaa6ae48843aca24;hb=cd919f5533cc8aa495acd75a6f059e5fcf2e6af9</a> only mentions flags for supporting specific binary formats, not architectures/machines. Any suggestions?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "134",
    "tags": [
        "disassembly",
        "assembly",
        "powerpc"
    ],
    "user": "user19742600",
    "time": "Aug 12, 2022 at 18:01",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I solved my issue. I had to install <code>binutils-multiarch-dev</code> to support bfd_arch_powerpc and bfd_mach_ppc_750. In my case, I also had to remove my custom installation of binutils because the custom build with no flags apparently does not support PowerPC and <code>dis-asm.h</code> from <code>/usr/local/include</code> was taking priority over the one in <code>/usr/include</code>.</p>\n</div>",
            "votes": "1",
            "user": "user19742600",
            "time": "Aug 12, 2022 at 19:47",
            "is_accepted": false,
            "comments": []
        }
    ]
}