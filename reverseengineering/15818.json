{
    "title": "How to hide / obfuscate the function of an IC?",
    "link": "https://reverseengineering.stackexchange.com/questions/15818/how-to-hide-obfuscate-the-function-of-an-ic",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Let's say I have an IC (integrated circuit) and I want to hide it's function. What would be best practice to do that? </p>\n<ul>\n<li>Removing the markings with sandpaper or acid?</li>\n<li>(E.g. atmega328, ATtiny85,... ) How to avoid that anyone could find out what program sketch is running on it?</li>\n<li>Connecting a few useless other ICs without function to it? </li>\n</ul>\n<p>Imagine now you found one of these black bugs (IC) without markings and without other components. What could you do to get the program sketch running on it?</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "116",
    "tags": [
        "obfuscation",
        "integrated-circuit"
    ],
    "user": "7twenty7",
    "time": "Jul 13, 2017 at 17:19",
    "comments": [
        {
            "user": "ratchet freak",
            "text": "<span class=\"comment-copy\">commission a custom ÂµC with non-standard pinout. When connecting the chip the normal way it instead gets fried</span>",
            "time": null
        },
        {
            "user": "osvein",
            "text": "<span class=\"comment-copy\">I think most AVRs have a fuse that can prevent reading of the program memory. You should check your microcontroller's datasheet.</span>",
            "time": null
        }
    ],
    "answers_data": []
}