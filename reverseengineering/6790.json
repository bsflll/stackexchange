{
    "title": "How to add new button to an executable?",
    "link": "https://reverseengineering.stackexchange.com/questions/6790/how-to-add-new-button-to-an-executable",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>My target exe file has a button. It will display a webpage when the button is clicked on. I used OllyDBG to disassemble this file. My questions are:</p>\n<ol>\n<li>How can I find the url of this webpage? I have searched text strings, but found nothing.</li>\n<li>I want to create a new button with the same function as this previous button. How can I make this work?</li>\n</ol>\n</div>",
    "votes": "-2",
    "answers": 4,
    "views": "1k",
    "tags": [
        "ollydbg",
        "patch-reversing"
    ],
    "user": "Ryan",
    "time": "Dec 17, 2014 at 10:57",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<ol>\n<li><p>It may be generated dynamically, loaded from a file, be there, but obfuscated or encrypted, in the original .exe, or something else. The easiest way to get the url is probably using <a href=\"http://www.telerik.com/fiddler\" rel=\"nofollow\">Fiddler</a>, as you're on windows. Listening to network communication with <a href=\"https://www.wireshark.org/\" rel=\"nofollow\">wireshark</a> or a similar program might work as well, but if the application uses TLS, encryption will get in the way, which fiddler can usually work around.</p></li>\n<li><p>This is where it becomes complicated. Adding a new button to a dialog box might work with a <a href=\"http://www.resedit.net/\" rel=\"nofollow\">resource editor</a>, if the application uses standard windows gui elements. If the application uses a different GUI framework, you're out of luck. Once you have the button, you need to change the button handler of the dialog box to recognize your new button id and react accordingly. This includes writing a new routine, finding a bunch of unused bytes in the code segment of your .exe to place it in, or enlarging the code segment or creating a new segment for your code, patching the original button handler to call your routine if the new button ID is detected, and hoping you don't break anything in the process. Considerable experience is required for this to work, so if you're a beginner with RE, you probably have to learn a lot before attempting this.</p></li>\n</ol>\n</div>",
            "votes": "4",
            "user": "Guntram Blohm",
            "time": "Dec 8, 2014 at 12:55",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Ryan",
                    "text": "<span class=\"comment-copy\">Poor me, XN resource editor can modify child dialogs, but not main windows - where I want to add new button. Is my work possible now? May be I should try to change this default url to my own url :(</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>To find the url which the application connects to search for window socket functions wsaconnect, or set a return breakpoint which will break in when a function return after you click the button and see the stack for functions executed and values pushed, for modifying try to include a resource dialog and find a code cave to write code for executing your app dialog.</p>\n</div>",
            "votes": "0",
            "user": "Alok Saini",
            "time": "Dec 12, 2014 at 11:00",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Ryan",
                    "text": "<span class=\"comment-copy\">thank you! set breakpoint in all APIs of WS2_32.dll and found the url, however it is not hardcoded. So can I modify this url to my own url?</span>",
                    "time": null
                },
                {
                    "user": "Alok Saini",
                    "text": "<span class=\"comment-copy\">Find from where the url is taken, nd modify the source, or find a code cave write ur url there, and replace the address of url with your in the api function call.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>As the page is about to be displayed, capture the text (probably, basically a large string) using a code hook.\nUse the same memory allocation functions the target is using (if it's using a DLL CRT it will be easier).\n\"Realloc()\" or just recreate the text to fit in your changes (I.E. an html button section) using string functions.\nThe hard part might be that you'll have to handle the extra button press(es) your self via probably yet another hook.</p>\n<p>Is it connecting to hosted webpage on the net?\nIf not it probably has a mini-webserver built in. There is a good chance in this case it's either using an open source, or commercial setup. Look for strings in the target that indicate what library/system it might be using, and, or, look for relevant DLL's (like \"awesomium\", etc.) in the targets path. You might be able to find matching libs that you can use; again making some general assumptions that you are going to facilitate your mod/hack via a DLL.</p>\n<p>You got to do more RE'ing to find out how it's doing things and the answer(s) will reveal it's self.</p>\n</div>",
            "votes": "0",
            "user": "Sirmabus",
            "time": "Dec 13, 2014 at 23:01",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>As for the webpage URL changing use CFF Explorer' hex editor to search for the caption of the button, there you will find a parameter that execute the URL and change it to your favourite</p>\n</div>",
            "votes": "-1",
            "user": "Candice",
            "time": "Sep 3, 2015 at 14:14",
            "is_accepted": false,
            "comments": []
        }
    ]
}