{
    "title": "Step Over not working in GDB",
    "link": "https://reverseengineering.stackexchange.com/questions/20150/step-over-not-working-in-gdb",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In the function below, let's say EIP is 0x400688. Now, I want to step over the call instead of stepping inside the subroutine.</p>\n<pre><code>    0x40067a &lt;main+4&gt;       sub    $0x20,%rsp                                                                                                         │\n   │0x40067e &lt;main+8&gt;       mov    $0x3c00,%edi                                                                                                       │\n   │0x400683 &lt;main+13&gt;      mov    $0x0,%eax                                                                                                          │\n  &gt;│0x400688 &lt;main+18&gt;      callq  0x400560 &lt;alarm@plt&gt;                                                                                               │\n   │0x40068d &lt;main+23&gt;      mov    0x2009ac(%rip),%rax        # 0x601040 &lt;stdout@@GLIBC_2.2.5&gt;                                                        │\n   │0x400694 &lt;main+30&gt;      mov    $0x0,%ecx                                                                                                          │\n   │0x400699 &lt;main+35&gt;      mov    $0x2,%edx                                                                                                          │\n   │0x40069e &lt;main+40&gt;      mov    $0x0,%esi                       \n</code></pre>\n<p>I used the next command however it starts executing the main() function itself instead of just executing call and breaking at instruction: 0x40068d as shown below:</p>\n<pre><code>(gdb) next \nSingle stepping until exit from function main,\nwhich has no line number information.\n</code></pre>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "2k",
    "tags": [
        "linux",
        "gdb"
    ],
    "user": "Neon Flash",
    "time": "Dec 16, 2018 at 19:10",
    "comments": [
        {
            "user": "user202729",
            "text": "<span class=\"comment-copy\">Possible duplicate of <a href=\"https://stackoverflow.com/questions/52024529/whats-the-difference-between-nexti-and-stepi-in-gdb\">What's the difference between nexti and stepi in gdb?</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>next</code> will not work as intended unless there is source line information in the symbol table.</p>\n<p>From <a href=\"https://sourceware.org/gdb/onlinedocs/gdb/Continuing-and-Stepping.html\" rel=\"nofollow noreferrer\">Next: Skipping Over Functions and Files</a>:</p>\n<blockquote>\n<p>Continue to the next source line in the current (innermost) stack\n  frame. This is similar to step, but function calls that appear within\n  the line of code are executed without stopping. Execution stops when\n  control reaches a different line of code at the original stack level\n  that was executing when you gave the next command. This command is\n  abbreviated n.</p>\n<p>An argument count is a repeat count, as for step.</p>\n<p>The next command only stops at the first instruction of a source line.\n  This prevents multiple stops that could otherwise occur in switch\n  statements, for loops, etc.</p>\n</blockquote>\n</div>",
            "votes": "1",
            "user": "julian",
            "time": "Dec 16, 2018 at 19:25",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Neon Flash",
                    "text": "<span class=\"comment-copy\">Then what is the alternative? How do I step over the function call?</span>",
                    "time": null
                },
                {
                    "user": "julian",
                    "text": "<span class=\"comment-copy\">@NeonFlash I typically set a breakpoint at the memory address of the instruction immediately following the function call. Then when I get to the function call I <code>continue</code> to skip the function code.</span>",
                    "time": null
                },
                {
                    "user": "Neon Flash",
                    "text": "<span class=\"comment-copy\">Yes, that is one way but I was expecting a more convenient way instead of setting a breakpoint each time there is a call instruction.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>As said, <code>next</code> won't work if the source has not its symbol table. You can obtain such debug symbols with <code>-g</code> option from gcc.</p>\n<p>But otherwise, I think you're looking for the command <code>nexti</code> that can be shortened to <code>ni</code>. </p>\n</div>",
            "votes": "1",
            "user": "Leath",
            "time": "Dec 17, 2018 at 23:59",
            "is_accepted": false,
            "comments": []
        }
    ]
}