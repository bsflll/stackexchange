{
    "title": "Unknown game data compression method (Gamecube)",
    "link": "https://reverseengineering.stackexchange.com/questions/6527/unknown-game-data-compression-method-gamecube",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I got some game compression data which I couldn't find any clue.\nAll compressed file signature start with: [<em>SK_ASC</em>] and unknown compression method.</p>\n<p>I got some information from RAM/Executive file but still didn't work.\nI think the compression is the lossless format (But it's not a LZO nor ZLIB).\nCan anyone help me figure out the compression, and how to decompress?</p>\n<ul>\n<li>All of example file above can be found here: <strong><a href=\"http://goo.gl/JJQfl4\" rel=\"nofollow\">http://goo.gl/JJQfl4</a></strong></li>\n</ul>\n<p><strong>=== 10.25.14 ADDED ===</strong></p>\n<p>The list below compression method that I tested, but doesn't match:</p>\n<ul>\n<li>LZ10</li>\n<li>LZ11</li>\n<li>LZ77</li>\n<li>LZO1x-1</li>\n<li>LZO1x-999</li>\n<li>LZSS</li>\n<li>LZW</li>\n<li>LZMA</li>\n<li>HUFF blocksize 4 &amp; 8 byte</li>\n<li>RLE</li>\n<li>ZLIB</li>\n</ul>\n<p><strong>=== 10.26.14 ADDED ===</strong></p>\n<p>Today I analysis something via memory dump.</p>\n<p>First of all, compressed <code>EMnMenu.cmp</code> file could be loaded when I enter the main menu by guessing it's file name. and there are very similar files which is unused. (<code>EKisokMenu.cmp</code>, <code>EE3Menu.cmp</code>)</p>\n<p>So I try to check memory dump by replacing file each other. and I got <code>dump_menu.ram</code>, <code>dump_e3menu.ram</code>, <code>dump_kioskmenu.ram</code>. By comparing three different ram dump data, <br/>I found out only specific offset data is changed.</p>\n<p>By using this method, I finally got a decompression data dumped via offset: <strong>0x80CA6980</strong>. Decompressed data is well known texture which was first 4 byte signature  start with 0x00 0x20 0xAF 0x30. (check texture format here: <em><a href=\"http://goo.gl/UqLz3m\" rel=\"nofollow\">http://goo.gl/UqLz3m</a></em>)</p>\n<p>I try to find compression algorithm by compressing the decompression data and compare with original data. but non of algorithm that I test above doesn't match.</p>\n<p>Anyway, I uploaded several decompressed data via ram dump and compressed data so you can check here: <strong>goo.gl/JJQfl4</strong></p>\n<ul>\n<li><strong>CMP</strong> is a compressed data which always start with <em>SK_ASC</em>.</li>\n<li><strong>BIN</strong> is a same as CMP.</li>\n<li><strong>DCMP</strong> is a instant copy from memory file, which was extracted from offset 0x80CA6980.</li>\n<li><strong>DMP</strong> is a data value correction by subtracted 0x80CA6980 because there so many memory scrapping dummy (so this is the cleaned decompressed data if I guess right)</li>\n</ul>\n<p><strong>ADDED</strong> Didn't work with regular deflate/zlib all compress level.</p>\n<p><strong>== 11.09.14 ==</strong></p>\n<p>I posted several forum to help, but no clue for weeks :(</p>\n<ul>\n<li><a href=\"http://zenhax.com/viewtopic.php?f=9&amp;t=313&amp;sid=3172c154c5da95476795ac742501fec1\" rel=\"nofollow\">http://zenhax.com/viewtopic.php?f=9&amp;t=313&amp;sid=3172c154c5da95476795ac742501fec1</a></li>\n<li><a href=\"http://encode.ru/threads/2074-Identifying-compression-method?p=41188&amp;posted=1#post41188\" rel=\"nofollow\">http://encode.ru/threads/2074-Identifying-compression-method?p=41188&amp;posted=1#post41188</a></li>\n</ul>\n<p><strong>== 11.15.14 ==</strong></p>\n<p>Other forum user said to me there are Gamecube DOL (executive file) plugin for IDA.\nSo I use them and now I've found decompression main/algorithm subroutine.\nWould anyone help me find out describe how it works?</p>\n<p>(I'm not well in dis-assembly, So I'm learning now)</p>\n<p><a href=\"http://goo.gl/2bQNfj\" rel=\"nofollow\">http://goo.gl/2bQNfj</a></p>\n<p><strong>Power PC based Dis-Assembly skill Required</strong></p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "1k",
    "tags": [
        "file-format",
        "decompress"
    ],
    "user": "NGC_KOR",
    "time": "Oct 6, 2015 at 4:53",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">You should run <code>signsrch</code> on the binary doing decompression, not the compressed data. Though it's quite likely the algorithm is completely custom and you'll just have to reverse it.</span>",
            "time": null
        },
        {
            "user": "Jason Geffner",
            "text": "<span class=\"comment-copy\">According to <a href=\"http://webcache.googleusercontent.com/search?q=cache:G32DNOBV_QoJ:forum.xentax.com/viewtopic.php%3Ff%3D21%26t%3D12093\" rel=\"nofollow noreferrer\">webcache.googleusercontent.com/â€¦</a>, <code>SK_ASC</code> is used for at least one game developed by <a href=\"http://en.wikipedia.org/wiki/Silicon_Knights\" rel=\"nofollow noreferrer\">Silicon Knights</a>. The <code>SK</code> suggests that this is using an algorithm that's proprietary to Silicon Knights, as @IgorSkochinsky suggested.</span>",
            "time": null
        },
        {
            "user": "NGC_KOR",
            "text": "<span class=\"comment-copy\">@IgorSkochinsky, I used 'signsrch' on Executive/Memory file, not a compressed data. Anyway, algorithm is quite mess and still no clue.</span>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">Are you sure you uploaded the correct files? At a glance, they look very similar, and neither starts with <code>SK_ASC</code>.</span>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">What I mean is it seems you uploaded the memory dump twice. I don't see the signature in either.</span>",
            "time": null
        }
    ],
    "answers_data": []
}