{
    "title": "SPI Flash, how to find the System memory addresses?",
    "link": "https://reverseengineering.stackexchange.com/questions/18661/spi-flash-how-to-find-the-system-memory-addresses",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>How to determine the System memory addresses of SPI Flash used in device running eCos operating system? For example, <code>show flash</code> command returns the following info:</p>\n<pre><code> Flash Device Information:\n\n      CFI Compliant: no\n        Command Set: Generic SPI Flash\n   Device/Bus Width: x16\n Little Word Endian: no\n    Fast Bulk Erase: no\n    Multibyte Write: 256 bytes max\n  Phys base address: 0xbadf1a5\n Uncached Virt addr: 0x1badf1a5\n   Cached Virt addr: 0x2badf1a5\n   Number of blocks: 129\n         Total size: 8388608 bytes, 8 Mbytes\n       Current mode: Read Array\n        Device Size: 8388608, Write buffer: 256, Busy bit: \n\n      Size  Device      Device     Region\nBlock  kB   Address     Offset     Offset   Region Allocation\n----- ---- ---------- ----------- --------- -----------------\n    0   32 0x1badf1a5           0         0 Bootloader (32768 bytes)\n    1   32 0x1bae71a5       32768       ??? {unassigned}\n    2   64 0x1baef1a5       65536         0 Permanent NonVol (65536 bytes)\n    3   64 0x1baff1a5      131072         0 Image1\n    4   64 0x1bb0f1a5      196608     65536 Image1\n    5   64 0x1bb1f1a5      262144    131072 Image1\n    6   64 0x1bb2f1a5      327680    196608 Image1\n    7   64 0x1bb3f1a5      393216    262144 Image1\n    ..  .. ........ \n  127   64 0x1c2bf1a5     8257536   4063232 Image2 (4128768 bytes)\n  128   64 0x1c2cf1a5     8323072         0 Dynamic NonVol (65536 bytes)\n</code></pre>\n<p>But these addresses seems is not an actual addresses of memory locations.\nBecause when I try <code>readmem</code> command, it always returns errors.\nFor example, there is an example of <code>readmem</code> command:</p>\n<p><code>readmem -s 4 -n 64 0x80001234  -- Reads 64 bytes as 32-bit values</code>.</p>\n<p>When I tried <code>readmem -s 4 -n 16384 0x1baef1a5</code> it always returns error: <code>ERROR - Address</code>(for any addresses from above table). So I assume these addresses is not an actual Flash Memory addresses. I tnink is this because processor’s memory controller maps the flash address space to the system address space. And flash word-size differs from system word-size.\nHow to find the System memory address to read SPI Flash?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "811",
    "tags": [
        "memory",
        "embedded",
        "mips",
        "flash",
        "spi"
    ],
    "user": "minto",
    "time": "Jul 6, 2018 at 8:09",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">what commands are available in the bootloader? is there anything like memory map?</span>",
            "time": null
        },
        {
            "user": "minto",
            "text": "<span class=\"comment-copy\">I will re-check the output of serial console I have, but I remember that only small generic info was displayed on boot, the last lines was \"output/input to console is disabled in NonVol\".</span>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\"><a href=\"https://wenku.baidu.com/view/8ba1842ee2bd960590c67754.html\" rel=\"nofollow noreferrer\">this document</a> lists <code>show memory</code>, does it work for you?</span>",
            "time": null
        },
        {
            "user": "minto",
            "text": "<span class=\"comment-copy\"><code>show memory</code> command available, but it show sort of general stats info, no memory map addresses. Many commands from listed in doc are not available in this F/W, only a limited number. Serial console <a href=\"https://pastebin.com/raw/Xiisfnv9\" rel=\"nofollow noreferrer\">output</a>.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm not too familiar with eCos, but my guess is that <code>device address</code> is not a memory address but the address of the hardware device used to access the SPI chip by the OS and bootloader, i.e. something similar to the PCI address like B0:D31:F0 (bus 0, device 31, function 0) on the PC. You should try to find where the flash is mapped into memory and read the chunks using the <code>Offset</code> column.</p>\n</div>",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Jul 2, 2018 at 18:24",
            "is_accepted": false,
            "comments": [
                {
                    "user": "minto",
                    "text": "<span class=\"comment-copy\">Based on serial output from other similar BCM33XX based devices, it looks like the f/w image Load Address is 80004000. A built-in telnet command <code>read_memory</code> allow read max 16384 bytes at a time, so to read the full image I need manually perform 248 read cycles (4063232/16384), this doesn't appear to be feasible.</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">just automate it with some scripts. in any case that’s a different issue, feel free to add a new question about it. I believe I addressed the original question.</span>",
                    "time": null
                }
            ]
        }
    ]
}