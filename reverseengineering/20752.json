{
    "title": "What does layout of Cutter/Radare2's function dissasembly mean?",
    "link": "https://reverseengineering.stackexchange.com/questions/20752/what-does-layout-of-cutter-radare2s-function-dissasembly-mean",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Cutter displays functions like this:\n<a href=\"https://i.sstatic.net/wPYgn.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/wPYgn.png\"/></a></p>\n<p>I'm having trouble understanding the layout of the functions </p>\n<p>For example:\n<a href=\"https://i.sstatic.net/1lEpQ.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/1lEpQ.png\"/></a></p>\n<p>What does 184 mean?\nWhat does the green | mean at the beginning of each  line?\nWhy are there two jump instructions?</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "403",
    "tags": [
        "radare2"
    ],
    "user": "Riker",
    "time": "Mar 1, 2019 at 18:39",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>this query has got noting to do with Reverse Engineering </p>\n<p>184 is the size of Function \nyou can use afi to check what the function sizes are </p>\n<pre><code>[0x01012d6c]&gt; afil\naddress    size  nbbs edges    cc cost  min bound range max bound  calls locals args xref frame name\n========== ==== ===== ===== ===== ==== ========== ===== ========== ===== ====== ==== ==== ===== ====\n0x01012d6c  626    43    62    23  290 0x0101217f 110918 0x0102deb2    19    6      3    0   112 entry0\n[0x01012d6c]&gt;\n</code></pre>\n<p>the green lines represent basic block boundaries / jumps to / jumps from etc </p>\n<p>you can disable them with </p>\n<pre><code>e asm.lines = false\n</code></pre>\n<p>why two jumps who knows it is your binary may be it is handcrafted code \nyou have to determine that </p>\n<p>you can have n number of unconditional jumps one below other </p>\n<p>supposing you have code like this </p>\n<pre><code>#include &lt;stdio.h&gt;\n__declspec (naked) void foo(void) {\n    goto jumphere;\n    jumpthere:\n    goto dowork;    \n    jumphere:\n    goto jumpthere;\n    dowork:\n    printf (\"i came here after jumping through hoops\\n\");\n}\nvoid main(void){\nfoo();\n}\n</code></pre>\n<p>if you disassemble foo() you can see jumps like you show on screenshot</p>\n<pre><code>[0x00401358]&gt; af @0x401000\n[0x00401358]&gt; pdf @0x401000\n            ;-- section..text:\n/ (fcn) fcn.00401000 20\n|   fcn.00401000 ();\n|       ,=&lt; 0x00401000      eb06           jmp 0x401008                ; [00] -r-x section size 249856 named .text\n..\n|      ||   ; CODE XREF from fcn.00401000 (0x401008)\n|    ,.---&gt; 0x00401004      eb04           jmp 0x40100a\n..\n|   |||||   ; CODE XREF from fcn.00401000 (0x401000)\n|   ||```-&gt; 0x00401008      ebfa           jmp 0x401004\n|   ||      ; CODE XREF from fcn.00401000 (0x401004)\n|   ``----&gt; 0x0040100a      68a0e14300     push str.i_came_here_after_jumping_through_hoops ; 0x43e1a0 ; \"i came here after jumping through hoops\\n\"\n|           0x0040100f      e85c000000     call fcn.00401070\n|           0x00401014      83c404         add esp, 4\n\\           0x00401017      cc             int3\n</code></pre>\n<p><strong>[0x00401358]&gt; e asm.lines= false</strong></p>\n<pre><code>[0x00401358]&gt; pdf @0x401000\n;-- section..text:\n(fcn) fcn.00401000 20\n  fcn.00401000 ();\n0x00401000      eb06           jmp 0x401008                            ; [00] -r-x section size 249856 named .text\n..\n; CODE XREF from fcn.00401000 (0x401008)\n0x00401004      eb04           jmp 0x40100a\n..\n; CODE XREF from fcn.00401000 (0x401000)\n0x00401008      ebfa           jmp 0x401004\n; CODE XREF from fcn.00401000 (0x401004)\n0x0040100a      68a0e14300     push str.i_came_here_after_jumping_through_hoops ; 0x43e1a0 ; \"i came here after jumping through hoops\\n\"\n0x0040100f      e85c000000     call fcn.00401070\n0x00401014      83c404         add esp, 4\n0x00401017      cc             int3\n[0x00401358]&gt;\n</code></pre>\n</div>",
            "votes": "2",
            "user": "blabb",
            "time": "Mar 2, 2019 at 21:41",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Riker",
                    "text": "<span class=\"comment-copy\">In the functions section to the left there is a column called sized. The size of this function is listed as 5 in that column. How could 184 be the size?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I don't know what the 184 means; perhaps you should scroll right the left pane to see if it appears there and what is the name of the column.</p>\n<p>Regarding the pipes on the left, these are the arrows stretching from the functions that appear on top: these are just \"lines\" stretching down so you will be able to track the branches sources / destinations.</p>\n</div>",
            "votes": "0",
            "user": "Eli",
            "time": "Mar 2, 2019 at 20:55",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Riker",
                    "text": "<span class=\"comment-copy\">It does not appear in the column to the left.</span>",
                    "time": null
                }
            ]
        }
    ]
}