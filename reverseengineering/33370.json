{
    "title": "Renaming ordinal exported functions in a multi file ghidra project",
    "link": "https://reverseengineering.stackexchange.com/questions/33370/renaming-ordinal-exported-functions-in-a-multi-file-ghidra-project",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm analyzing multiple files in a single ghidra project. There are a few DLLs that only export via ordinal. I would like to be able to rename the exported functions as I identify what they do, to make it easier to see what is going on in other locations that call these functions. This works fine within a single DLL, but seems to break external program name references across the file boundary.</p>\n<p>I created a MWE that creates these conditions at <a href=\"https://github.com/balloon-bin/ordinal-mwe\" rel=\"nofollow noreferrer\">https://github.com/balloon-bin/ordinal-mwe</a>. Running <code>make</code> builds the example if you have the <code>x86_64-w64-mingw32</code> toolchain, but the binaries are included too.</p>\n<p>This is my approach so far:</p>\n<ol>\n<li>create a ghidra project and import all files into it</li>\n<li>Set all external program name associations for DLL files in window-&gt;external programs.</li>\n<li>At this point you can right click imported functions and \"go to external location\" to follow the function call into the dll where it is defined.</li>\n<li>When the function has been identified it is renamed (pressing L on the symbol)</li>\n<li>Now the external name association is broken and you can no longer go to external function</li>\n</ol>\n<p>Is there a way to achieve a rename that is visible across all files in the project?</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "31",
    "tags": [
        "windows",
        "ghidra",
        "dll"
    ],
    "user": "omicron",
    "time": "Jan 26 at 16:13",
    "comments": [],
    "answers_data": []
}