{
    "title": "calculate branch target address powerpc",
    "link": "https://reverseengineering.stackexchange.com/questions/23097/calculate-branch-target-address-powerpc",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to know how next instruction address (NIA) is calculated for BL instruction. Lets assume that there is such instruction:</p>\n<pre><code>.text:100004C8    BL sub_10000670.\n</code></pre>\n<p>This command in hex is:</p>\n<pre><code>48 00 01 A9\n</code></pre>\n<p>Here we have that current instruction address (CIA) is <code>100004C8</code> and NIA is <code>10000670</code>. So accroding to <a href=\"http://math-atlas.sourceforge.net/devel/assembly/ppc_isa.pdf\" rel=\"nofollow noreferrer\">this book (page 33 in pdf)</a> we have to concatenate LI (in our case it is <code>6A</code>) and <code>0B00</code>, sign extend it and sunm with 32 high ordered bits of <code>NIA</code>. The formula is </p>\n<pre><code>NIA = CIA + EXTS(LI || 0B00).\n\nNIA - CIA = 10000670 - 100004C8 = 1A8.\n</code></pre>\n<p>How can i get from <code>1A8</code> my <code>LI = 6A</code> value? What do i misunderstand?</p>\n</div>",
    "votes": "0",
    "answers": 2,
    "views": "299",
    "tags": [
        "address",
        "powerpc"
    ],
    "user": "Setplus",
    "time": "Jan 25, 2020 at 9:24",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>NIA = CIA + EXTS(LI || 0B00)</p>\n</blockquote>\n<p>The <code>||</code> notation denotes concatenation. So if you take LI</p>\n<blockquote>\n<p>0x6A -&gt; 0b1101010</p>\n</blockquote>\n<p>And add two zeroes:</p>\n<blockquote>\n<p>0b1101010 || 0b00  -&gt; 0b110101000 -&gt; 0x1A8</p>\n</blockquote>\n<p>You get: NIA = 0x100004C8 + 0x1A8 = 10000670</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Jan 25, 2020 at 15:53",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Setplus",
                    "text": "<span class=\"comment-copy\">Thank you for your answer! And what should i do, if NIA less then CIA? For example. NIA = 1000029C, CIA = 1000052C, and instruction in hex = 4B FF FD 6D?</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">In that case LI is treated as a signed number and is sign extended (this is what SEXT notation means)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>base16 0x480001a9 == base2 1001000000000000000000110101001  </p>\n<p>chop of 5 upper bits and two lower bits for LI = 000000000000000001101010   = 0x6a</p>\n<p>shift left 0x6a by two  0x6a &lt;&lt; 2 = 0x1a8</p>\n<p>add current instruction Address 0x100004c8 to the result 0x10000670  is the Target Address</p>\n<p>since LK = 1 put 0x100004cc in link register </p>\n<p>a simple python demo (edited to add negative )</p>\n<pre><code>instruction = [0x480001a9,0x4BFFFD6D]\nCIA = [0x100004c8,0x1000052C]\nfor i in range(0,len(instruction),1):\n    asbin = bin(instruction[i])\n    print (hex(instruction[i]) +' = '+ asbin)\n    print (\"length of asbin = \" + str(len(asbin)))\n    Displacement  = ((int( '0b'+ asbin[8:31] ,2) &lt;&lt; 2) &amp; 0xffff )\n    if((Displacement &amp; 0x8000) == 0x8000):\n        Displacement = -(0x10000-Displacement)\n    print hex(Displacement)\n    NIA = hex(CIA[i] + Displacement)\n    print (NIA)\n</code></pre>\n<p>executed</p>\n<pre><code>0x480001a9 = 0b1001000000000000000000110101001\nlength of asbin = 33\n0x1a8\n0x10000670\n0x4bfffd6d = 0b1001011111111111111110101101101\nlength of asbin = 33\n-0x294\n0x10000298\n</code></pre>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "Jan 25, 2020 at 17:44",
            "is_accepted": false,
            "comments": [
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">edited the code to address your comment take a look</span>",
                    "time": null
                }
            ]
        }
    ]
}