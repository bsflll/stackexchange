{
    "title": "Help analyzing ThunderSoft DRM-protected EXE video (Delphi, AES, Machine ID binding)",
    "link": "https://reverseengineering.stackexchange.com/questions/33435/help-analyzing-thundersoft-drm-protected-exe-video-delphi-aes-machine-id-bind",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm currently analyzing a video file that has been wrapped in a .exe and protected using ThunderSoft Video Password Protect / DRM Protection v4.1. I'm trying to understand how the protection works and if there's a way to play the video on a different machine where the original credentials fail.</p>\n<p>Details:\nThe original video is in .wmv format.\nIt's wrapped into an EXE built with Borland Delphi 6.0 â€“ 2010.\nThe DRM uses AES encryption.</p>\n<p>The \"Play Password\" is generated based on:\nAn encryption key\nThe machine ID</p>\n<p>If run on another device (even with the same password), it shows:</p>\n<blockquote>\n<p>\"Illegal password, inconsistent with the current machine code!\"</p>\n</blockquote>\n<p>My questions:</p>\n<ol>\n<li>How can I bypass the machine ID check (e.g., patching JNZ to JMP)?</li>\n<li>Is it possible to extract the WMV video from inside the EXE, or is it likely fully encrypted until runtime?</li>\n<li>Are there known unpacking strategies/tools for ThunderSoft-protected files?</li>\n</ol>\n<ul>\n<li>I own the file and password and just want to be able to run it on a secondary machine.</li>\n<li>Attached is a sample of the encrypted file from the link provided, for analysis purposes only\n<a href=\"https://pixeldrain.com/u/wRJfvCAg\" rel=\"nofollow noreferrer\">https://pixeldrain.com/u/wRJfvCAg</a></li>\n</ul>\n<ul>\n<li>Thanks in advance for any help, suggestions, or tools you recommend!</li>\n</ul>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "6",
    "tags": [
        "unpacking"
    ],
    "user": "power mind",
    "time": "yesterday",
    "comments": [],
    "answers_data": []
}