{
    "title": "Why IDA shows return statement in separate subroutine?",
    "link": "https://reverseengineering.stackexchange.com/questions/17790/why-ida-shows-return-statement-in-separate-subroutine",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>IDA shows this following code in separate subroutine. </p>\n<p>Assembly:</p>\n<pre><code>sub_180049410 proc near\njmp     rax\nsub_180049410 endp\n</code></pre>\n<p>Pseudo-Code:</p>\n<pre><code>__int64 __usercall sub_180049410@&lt;rax&gt;(__int64 (*a1)(void)@&lt;rax&gt;)\n{\n  return a1();\n}\n</code></pre>\n<p>The previous subroutine calls it as (off_180052510 and sub_180049410 are same)</p>\n<pre><code>mov     rcx, [rsp+0C8h+var_88]\nmov     rax, [rcx]\nmov     r8, rsi\nmov     edx, 5\nmov     rax, [rax+18h]\ncall    cs:off_180052510\nmov     rcx, [rsp+0C8h]\ntest    eax, eax\njs      loc_18000969B\n</code></pre>\n<p>So, why IDA shows it in separate subroutine? Can I join that in it's previous function?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "201",
    "tags": [
        "ida",
        "disassembly"
    ],
    "user": "Biswapriyo",
    "time": "Mar 25, 2018 at 6:06",
    "comments": [
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">off_180052510 and sub_180049410 appears to be two distinct addresses what do you mean when you write they are same</span>",
            "time": null
        },
        {
            "user": "Biswapriyo",
            "text": "<span class=\"comment-copy\">I mean to say that the offset points to that subroutine.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>No. Ofc, you can modify assembly in IDA with API funcs by yourself, but there is no need in this. <code>call</code> instruction is not just jumping to code, it also modifies stack, pushing there return address, so called function can correctly return (read <a href=\"https://c9x.me/x86/html/file_module_x86_id_26.html\" rel=\"nofollow noreferrer\">https://c9x.me/x86/html/file_module_x86_id_26.html</a> ). Thats why this code is shown in another subroutine, and thats why just inlining <code>jmp rax</code> to code won't be correct in this case.</p>\n<p>Also, rax value will be known only in runtime, so IDA's static analysis can't provide information, which function exactly will be called here. So <code>sub_180049410</code> its just function to call some other function via pointer to it.</p>\n</div>",
            "votes": "1",
            "user": "Scher Khan",
            "time": "Mar 25, 2018 at 9:05",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Biswapriyo",
                    "text": "<span class=\"comment-copy\">Is there any relation with this subroutine and COM vtable/function pointer?</span>",
                    "time": null
                }
            ]
        }
    ]
}