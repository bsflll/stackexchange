{
    "title": "Obtaining the decryption keys for Super Mario Run (Android/iOS Game)",
    "link": "https://reverseengineering.stackexchange.com/questions/16534/obtaining-the-decryption-keys-for-super-mario-run-android-ios-game",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Super Mario Run is a <em>il2cpp</em> Unity game. Most of its assets are downloaded in-game through http requests. I particularly want the OGG files of the music. I can see the list of their names comes from this <a href=\"https://download-cdn-supermariorun.akamaized.net/native/e07e1191b490a31c/3.0.1/raw/RawSound/DeALProject.json\" rel=\"nofollow noreferrer\">file</a>.</p>\n<p>I know this because it appears before all the requests of the OGGs are made, sadly it and the OGGs are <a href=\"https://download-cdn-supermariorun.akamaized.net/native/e07e1191b490a31c/3.0.1/raw/RawSound/sound/BGM/Athletic_RB_32.ogg\" rel=\"nofollow noreferrer\">encrypted</a>.</p>\n<p>Since Super Mario Run is an <em>il2cpp</em> game, the strings and function names and whatnot are contained in a different file -- \"<em>global-metadata.dat</em>\". Looking at this file I can see a function named <code>get_OggEncryptionAesKey</code>, as for where this function is and what it returns I cannot find out.</p>\n<p>I disassembled the \"<em>libil2cpp.so</em>\" with IDA, but did not seem to find this function or anything useful.</p>\n<p>I believe that the libraries that deal with the encryption might be \"<em>libdeal.so</em>\" or \"<em>libDeALWrapper.so</em>\".</p>\n<p>Closest I've came was pulling the ogg's from memory, but the best I got was some interface sounds.</p>\n<p>Does anyone have any other ideas to decrypt these files?</p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "1k",
    "tags": [
        "ida",
        "encryption",
        "decryption"
    ],
    "user": "Michael",
    "time": "Oct 11, 2017 at 18:47",
    "comments": [
        {
            "user": "Jevgeni Geurtsen",
            "text": "<span class=\"comment-copy\">If you obtain the encrypted files through http requests on runtime I can imagine the related decryption is also send somewhere during this process. Did you try to sniff the network requests/responses?</span>",
            "time": null
        },
        {
            "user": "Michael",
            "text": "<span class=\"comment-copy\">I checked them all and didn't find anything that looked like an encryption key.</span>",
            "time": null
        },
        {
            "user": "Jevgeni Geurtsen",
            "text": "<span class=\"comment-copy\">I believe <code>libdeal</code> is just a library for dealing with algorithms and complex data structures in C++ (not sure though). Atleast we know they use <code>AES</code> encryption. Maybe you can try to find the <code>Rijndael</code> algorithm and work from there?</span>",
            "time": null
        },
        {
            "user": "Jevgeni Geurtsen",
            "text": "<span class=\"comment-copy\">Also, have you looked at <a href=\"https://github.com/nevermoe/unity_metadata_loader\" rel=\"nofollow noreferrer\">github.com/nevermoe/unity_metadata_loader</a> ?</span>",
            "time": null
        },
        {
            "user": "Michael",
            "text": "<span class=\"comment-copy\">@JevgeniGeurtsen I used that, but none of the files I've decompiled had the OggEncryptionAesKey function although they had all the other functions from the same class, very strange.</span>",
            "time": null
        }
    ],
    "answers_data": []
}