{
    "title": "Crash after hook a function",
    "link": "https://reverseengineering.stackexchange.com/questions/25721/crash-after-hook-a-function",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have hooked a sound function that work within the game menu after, when the battle start, the game will crash.</p>\n<p>The function at the first parameter get correctly the sound file name, before the battle begin.</p>\n<p>If the function 'HookSum' is empty the game work without any crash.</p>\n<p>The line:</p>\n<pre><code>//\nstd::cout &lt;&lt; \"your program has been hacked! \" &lt;&lt; std::endl;\n//\n</code></pre>\n<p>don't cause the crash, but If I insert any other line of code for example:</p>\n<pre><code>//\nstd::string StrFileName;\nStrFileName = \"test\";\n//\n</code></pre>\n<p>the game crash. So at this point I can't hook nothing, becouse I can't insert any code inside the hooked function.</p>\n<p>Someone can please explain why the game crash ?</p>\n<p>Follow the full code.</p>\n<pre><code>#include &lt;Windows.h&gt;\n#include &lt;iostream&gt;\n\n#include \"detours.h\"\n#include \"sigscan.h\"\n\n\n\nDWORD AddressOfSum = 0;\n\n\ntypedef void(*sum) (char *a1, int a2, int a3, int a4);\n\nvoid HookSum(char *a1, int a2, int a3, int a4)\n{\n\n    std::cout &lt;&lt; \"your program has been hacked! \" &lt;&lt; std::endl;\n\n    std::string StrFileName;\n    StrFileName = \"test\";\n\n    sum originalSum = (sum)AddressOfSum;\n    return originalSum(a1,a2,a3,a4);\n\n    // MessageBoxA(0, a1, \"MsgTitle\", MB_OK | MB_ICONQUESTION);\n\n    // return;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nBOOL WINAPI DllMain(HMODULE hModule, DWORD dwReason, LPVOID lpReserved)\n{\n    // store the address of sum() in testprogram.exe here.\n\n    if (dwReason == DLL_PROCESS_ATTACH)\n    {\n        // We will use signature scanning to find the function that we want to hook\n        // we will find the function in IDA pro and create a signature from it:\n\n        SigScan Scanner;\n\n        AddressOfSum = Scanner.FindPattern(\"bzone.exe\", \"\\x55\\x8B\\xEC\\x51\\x83\\x3D\\x94\\x55\\x91\", \"xxxxxxxxx\"); // BattleZoneRedux 43AA30\n\n\n        DetourTransactionBegin();\n        DetourUpdateThread(GetCurrentThread());\n\n        // this will hook the function\n        DetourAttach(&amp;(LPVOID&amp;)AddressOfSum, &amp;HookSum);\n\n        DetourTransactionCommit();\n    }\n    else if (dwReason == DLL_PROCESS_DETACH)\n    {\n        // unhook\n        DetourTransactionBegin();\n        DetourUpdateThread(GetCurrentThread());\n\n        // this will hook the function\n        DetourDetach(&amp;(LPVOID&amp;)AddressOfSum, &amp;HookSum);\n\n        DetourTransactionCommit();\n    }\n    return TRUE;\n} \n</code></pre>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "229",
    "tags": [
        "disassembly",
        "c++",
        "function-hooking",
        "dll-injection",
        "hooking"
    ],
    "user": "user3449922",
    "time": "Aug 22, 2020 at 9:53",
    "comments": [
        {
            "user": "morsisko",
            "text": "<span class=\"comment-copy\">It is impossible to tell why it crashes with information you provided. Perhaps the address of function is wrong, the call convention is wrong, the number of parameters is incorrect etc.</span>",
            "time": null
        },
        {
            "user": "user3449922",
            "text": "<span class=\"comment-copy\">Thank you morsisko, I have solved with a easy workaround. I have added try and catch and now work perfectly !! thanks. Ps: can you please explain better about call convention is wrong and incorect paramenters ?</span>",
            "time": null
        },
        {
            "user": "morsisko",
            "text": "<span class=\"comment-copy\">You pass the parameters like (a1, a2, a3, a4), maybe there is for example also a5 parameter? To the call convention thing - there are multiple ways how you can pass the parameters to function. Like pushing it on stack from right to left, left to right, using registers etc. You should take a look at <a href=\"https://en.wikipedia.org/wiki/X86_calling_conventions\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/X86_calling_conventions</a></span>",
            "time": null
        },
        {
            "user": "camp0",
            "text": "<span class=\"comment-copy\">Not sure, but the std::cout operation dont generate any stack allocation, and the instructions std::string StrFileName, so probably something on the stack potentially got the issue.</span>",
            "time": null
        }
    ],
    "answers_data": []
}