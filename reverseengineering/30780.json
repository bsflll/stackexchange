{
    "title": "How to encode file",
    "link": "https://reverseengineering.stackexchange.com/questions/30780/how-to-encode-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to decrypt a lua file which has been encrypting using a key. Some background to the lua file. Its from an android I decompiled the APK and found that all the lua files are encrypted.</p>\n</div>",
    "votes": "4",
    "answers": 2,
    "views": "2k",
    "tags": [
        "android"
    ],
    "user": "Neit",
    "time": "Feb 10, 2023 at 9:07",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Hi, could you explain why you were trying to remove details from the answer with an edit? The answer doesn't seem to be from you, so it seems odd that you are trying to redact it.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You seem to have correctly identified the point where the decryption is invoked. It seems like a1 (the first argument of that function) is a <code>this</code> pointer, pointing to some kind of game engine wrapper object. At (a1+40), there is a pointer to the key, and (a1+48) contains the length of the key. The initialization of those members happens somewhere else, likely in the constructor or some initialization function of the engine wrapper object.</p>\n</div>",
            "votes": "4",
            "user": "Michael Karcher",
            "time": "Aug 19, 2022 at 8:02",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Neit",
                    "text": "<span class=\"comment-copy\">What should I do now?</span>",
                    "time": null
                },
                {
                    "user": "Michael Karcher",
                    "text": "<span class=\"comment-copy\">If you can perform dynamic analysis (e.g. by attaching Frida), you can hook <code>tj_xxtea_decrypt</code> and dump the key, or you can set a breakpoint in a debugger at the call to <code>tj_xxtea_decrypt</code> and use the debugger to read the key. If you need to stay in \"static analysis land\", you need to find the function that initiliazes the key, which might be tricky. You likely look for a function initializing a structure member at offset 40 by a pointer directly followed by initializing a 32-bit number at offset 48 with the length of an XXTEA key. Finding that function might prove tedious.</span>",
                    "time": null
                },
                {
                    "user": "Neit",
                    "text": "<span class=\"comment-copy\">I still can't figure out what to do, can you be more detailed?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>xor_key</code> (16 byte): <code>EB 16 0D DE E8 7E 0F 31 5E 98 B8 2D 04 E1 A3 02</code></p>\n<pre><code>// structure of encrypted file ..................\n// 2     bytes 74 6A\n// 1     bytes 21 | 65 | 7A\n// 16    bytes of xor key xxtea\n// 4     bytes size of original file\n//       bytes total: 23\n// other bytes data encrypted ...................\n</code></pre>\n<p><a href=\"https://i.sstatic.net/wsdwa.png\" rel=\"nofollow noreferrer\"><img alt=\"file structure\" src=\"https://i.sstatic.net/wsdwa.png\"/></a></p>\n<p><strong>Algorithm decryption file</strong></p>\n<ol>\n<li>Check 3 bytes header, if match do step 2</li>\n<li>Read next 16 bytes <code>file_key</code> and xor this with <code>xor_key</code> to get <code>xxtea_key</code></li>\n<li>Decrypt data with xxtea <code>xxtea_key</code> to get <code>original data</code></li>\n<li>If <code>data[2] == 0x21 || data[2] == 0x7A</code> then uncompress lz4</li>\n</ol>\n<p><strong>Example</strong></p>\n<pre><code>xor_key   = EB 16 0D DE E8 7E 0F 31 5E 98 B8 2D 04 E1 A3 02\nfile_key  = 96 55 47 66 46 FF 23 18 0E EA 07 3D D8 55 CC 15 (in image)\nxxtea_key = 7D 43 4A B8 AE 81 2C 29 50 72 BF 10 DC B4 6F 17 (xor_key ^ file_key)\n\ndata = raw[23:]\nxxxtea_decrypt(data, xxtea_key)\n</code></pre>\n<p><a href=\"https://www.mediafire.com/file/se3qiazc3qnwdqj/code.zip/file\" rel=\"nofollow noreferrer\">source code (Golang)</a></p>\n<pre class=\"lang-golang prettyprint-override\"><code>func decryptData(data []byte, key []byte) ([]byte, bool) {\n    // check header 1\n    if data[0] != 0x74 &amp;&amp; data[1] != 0x6A {\n        return nil, false\n    }\n\n    // check header 2\n    if data[2] != 0x21 &amp;&amp; data[2] != 0x65 &amp;&amp; data[2] != 0x7A {\n        return nil, true\n    }\n\n    for i := 0; i &lt; len(key); i++ {\n        data[i+3] ^= key[i]\n    }\n    //fmt.Printf(\"xxtea_key: % 2X\\n\", data[3:0x13])\n    dec := Decrypt(data[0x17:], data[3:0x13])\n    if data[2] == 0x21 || data[2] == 0x7A {\n        unz := make([]byte, binary.LittleEndian.Uint32(dec[:4]))\n        _, err := lz4.UncompressBlock(dec[4:], unz)\n        return unz, err == nil\n    }\n    return dec, true\n}\n</code></pre>\n<p><a href=\"https://i.ibb.co/QPwFjgY/demo.gif\" rel=\"nofollow noreferrer\"><img alt=\"usage\" src=\"https://i.ibb.co/QPwFjgY/demo.gif\"/></a></p>\n<p><strong>I'll make video RE with IDA remote android debugger to get xor_key when I have time</strong></p>\n</div>",
            "votes": "4",
            "user": "0xC0000022L",
            "time": "Mar 3, 2023 at 11:32",
            "is_accepted": false,
            "comments": [
                {
                    "user": "xax",
                    "text": "<span class=\"comment-copy\">You should try <a href=\"https://github.com/chrisli-03/reverse-engineering-notes\" rel=\"nofollow noreferrer\">reverse engineering notes</a>.</span>",
                    "time": null
                }
            ]
        }
    ]
}