{
    "title": "Using IDA 8.3 Freeware on a Z180 .bin file",
    "link": "https://reverseengineering.stackexchange.com/questions/32431/using-ida-8-3-freeware-on-a-z180-bin-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The last time I tried my hand at disassembly it was in\n1986-1988...  a Z80 embedded processor PROM image file...<br/>\n42K of code turned into 27000+ lines of assembler code...\nusing a disassembly program called Dazzlestar... which\nran on 8080/8085/Z80 CP/M  (am I dating myself?)\nAnyway I was able to add a number of features to the\nsource and re-assemble it and it worked...</p>\n<p>But that was then and this is now.</p>\n<p>I've been asked by a friend to patch the firmware in another embedded system, a Z180 that uses a little over half of a 27C512.  All he wants to do is to change the baud rate of the\nExar 88C681 serial port from 2400 baud to 9600 or even 19.2 if it will do it.  If I'm reading the Exar data sheet correctly it should be a 1 or 2 byte patch.</p>\n<p>Yes, this old embedded product was designed to run with a Hayes Smartmodem 2400 because at that time it was the most common modem in personal home computing.  The product itself has been abandoned by the manufacturer... they no longer support it and they'd like to pretend they never made it.</p>\n<p>I have IDA Free 8.3 on my Win10 laptop and the 64kb image file of the 27c512 PROM chip (it is a .bin, the executable code starts at address zero).</p>\n<p>When I start IDA it says that it can't proceed because it's not a PE file.<br/>\nIt took me about 30 minutes to find out that PE meant Portable Executable.</p>\n<p>How do I fix this?  Is there a tool that will convert\na .bin to an acceptable PE ?  Or is there a command\nline option to allow it to read a .bin ?</p>\n<p>I did some searches looking for any mention of IDA Free\nand PE and found nothing.  But as I said, I'm a newbie\nand may not have searched with the correct words...</p>\n<p>Is there a tool that I missed that converts a .bin\ninto a PE ?</p>\n<p>If IDA is not the proper tool for breaking a .bin into\nassembly then what is?</p>\n<p>It needs to be free or cheap as I'm in my 70s, retired,\non a limited fixed income and doing this out of my own\npocket as a favor for a friend I've known for over\n50 years.  It will be fun to get back into bit-banging!</p>\n<p>I really hope the image file is assembly and not compiled!</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "484",
    "tags": [
        "ida",
        "disassembly",
        "embedded",
        "firmware-analysis"
    ],
    "user": "Mike",
    "time": "Oct 25, 2023 at 20:49",
    "comments": [
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">The <a href=\"https://hex-rays.com/ida-free/\" rel=\"nofollow noreferrer\">IDA Free web page</a> mentions the limitation \"Support x86/x64 processors\".</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">A disassembler targets a specific instruction set usually. It turns machine-readable instructions back into human-readable mnemonics as they are known from assemblers. That's what disassembly is. So your file needs to be compiled in some way, because if it isn't already machine-readable you likely have a human-readable form already. Seeing the extension <code>.bin</code> suggests you have some form of compiled (or assembled) binary, though. So a disassembler targeting the desired instruction set should be capable of helping out. Also have a look at <code>objdump</code> from Binutils if the others don't work.</span>",
            "time": null
        },
        {
            "user": "Mike",
            "text": "<span class=\"comment-copy\">Thanks for the response. Yes, I have a 32k image file of about 20K of assembled Z180 binary... (the rest of the 27C512 is blank).  It's the firmware from an industrial device.    And as I said, about 35 years ago I turned 42K of Z80 binary back into 27000+ lines of assembler.  So I know what disassembly is.    I'm just looking for a Win10 tool to do that to Z180 code.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>PE in this context stands for \"Portable Executable\", the format used mainly by Windows OS.</p>\n<p>The firmware you are trying to load is supposed to run on embedded systems that don't use this format.</p>\n<p>On IDA's file loader you should select \"Binary file\", and you will probably have to manually select loader parameters such as processor type, ROM and RAM addresses etc.</p>\n<p>Note that IDA free version is limited by the types of processors it supports, this 8086 may or may not be supported.</p>\n<p>Note2: When loading x86 code IDA will ask whether the code is 16-bit or 32-bit. It is 16.</p>\n</div>",
            "votes": "1",
            "user": "Yotamz",
            "time": "Oct 25, 2023 at 10:37",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">PE are also used by .NET and in UEFI context, though. Admittedly with a strong Microsoft bias, but I guess <i>mainly</i> Windows captures that as well.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Well, it looks like IDA Free won't do what I need...\nIt was pointed out that it is limited to x86 and\nx64 CPUs and the Z180 isn't one of those.</p>\n<p>(edit: typo correction)</p>\n</div>",
            "votes": "1",
            "user": "Mike",
            "time": "Oct 27, 2023 at 1:58",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">Hi and welcome to RE.SE. Please don't ask another question within an perfectly acceptable answer. Open another question. Although in this case it's not a good fit for this site. It is also customary not to use \"Thanks\" in questions or answers. Comments are fair game for that, though (and seeing that you are new you are of course limited in where and how you may comment). For further details please have a look at our <a href=\"https://reverseengineering.stackexchange.com/help\">help center</a>. That said: have you tried tools such as Ghidra or Cutter/Rizin which are available free of charge?</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">Looks like Ghidra could be a match?! -&gt; <a href=\"https://github.com/NationalSecurityAgency/ghidra/blob/master/Ghidra/Processors/Z80/data/languages/z80.ldefs\" rel=\"nofollow noreferrer\">github.com/NationalSecurityAgency/ghidra/blob/master/Ghidra/â€¦</a></span>",
                    "time": null
                },
                {
                    "user": "Mike",
                    "text": "<span class=\"comment-copy\">Cutter/Rizin does not support Z180 (or it's predecessors the Z80, 8085 or 8080).  I will look at Ghidra</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">Yeah, I'll be honest. I didn't check up front. Which is why I posted the additional comment about Ghidra a bit later.</span>",
                    "time": null
                }
            ]
        }
    ]
}