{
    "title": "Assign a constant value to an ARM register",
    "link": "https://reverseengineering.stackexchange.com/questions/30752/assign-a-constant-value-to-an-arm-register",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I was reversing an <code>libil2cpp.so</code> and decompiled it using <code>ghidra</code> and as of now my assembly language knowledge is very limited and studied it long time btw I had an assembly code like this:</p>\n<pre><code>                    ********************************************\n                    *                 FUNCTION                 *\n                    ********************************************\n                    void __stdcall gameOverANDTERMINATED(int param_1, float param_2)\n         void               &lt;VOID&gt;           &lt;RETURN&gt;\n         int                r0:4             param_1\n         float              r1:4             param_2\n                                                                                                      \n    0037127c 70 4c 2d e9              stmdb           sp!,{r4 r5 r6 r10 r11 lr}\n    00371280 10 b0 8d e2              add             r11, sp, #0x10\n    00371284 04 8b 2d ed              vpush           {d8,d9}\n    00371288 0c 61 9f e5              ldr             r6, [DAT_0037139c]                                                                                      ; = 00CE6282h\n    0037128c 00 40 a0 e1              cpy             r4, param_1\n    00371290 01 50 a0 e1              cpy             r5, param_2\n    00371294 06 60 8f e0              add             r6, pc, r6\n    00371298 00 00 d6 e5              ldrb            param_1, [r6,#0x0]=&gt;DAT_0105751e                                                                        ; = ??\n    0037129c 00 00 50 e3              cmp             param_1, #0x0\n    003712a0 05 00 00 1a              bne             LAB_003712bc\n    003712a4 f4 00 9f e5              ldr             param_1, [DAT_003713a0]                                                                                 ; = 00CC11A8h\n    003712a8 00 00 9f e7              ldr             param_1, [pc,param_1]=&gt;PTR_DAT_01032458                                                                 ; = 00d954fc\n    003712ac 00 00 90 e5              ldr             param_1=&gt;__DT_SYMTAB[671].st_size, [param_1,#0x0]=&gt;DAT_00d954fc                                          ; = 00002BE8h\n    003712b0 2b be fd eb              bl              thunk_FUN_0029b5bc                                                                                     ; undefined thunk_FUN_0029b5bc()\n    003712b4 01 00 a0 e3              mov             param_1, #0x1\n    003712b8 00 00 c6 e5              strb            param_1, [r6,#0x0]=&gt;DAT_0105751e                                                                        ; = ??\n                    LAB_003712bc                                                                                                        XREF[1]: 003712a0(j)  \n    003712bc e0 60 9f e5              ldr             r6, [DAT_003713a4]                                                                                      ; = 00CC1060h\n    003712c0 06 60 9f e7              ldr             r6, [pc,r6]=&gt;-&gt;Class$PlayingSceneController                                                             ; = 010df7d8\n    003712c4 00 00 96 e5              ldr             param_1, [r6,#0x0]=&gt;Class$PlayingSceneController                                                        ; = ??\n    003712c8 5c 00 90 e5              ldr             param_1, [param_1,#0x5c]\n    003712cc 00 00 d0 e5              ldrb            param_1, [param_1,#0x0]\n    003712d0 00 00 50 e3              cmp             param_1, #0x0\n    003712d4 25 00 00 0a              beq             LAB_00371370\n    003712d8 c8 00 9f e5              ldr             param_1, [DAT_003713a8]                                                                                 ; = 00CC02B0h\n    003712dc 10 5a 09 ee              vmov            s18, r5\n    003712e0 00 00 9f e7              ldr             param_1, [pc,param_1]=&gt;-&gt;Method$CapsuleGame.CapsuleSingleton&lt;CapsuleExecute&gt;.get_Instance()             ; = 010d9080\n    003712e4 00 00 90 e5              ldr             param_1, [param_1,#0x0]=&gt;Method$CapsuleGame.CapsuleSingleton&lt;CapsuleExecute&gt;.get_Instance()             ; = ??\n    003712e8 cb c8 19 eb              bl              CapsuleGame.CapsuleSingleton&lt;T&gt;$$get_Instance                                                          ; undefined CapsuleGame.CapsuleSingleton&lt;T&gt;$$get_Instance()\n    003712ec 00 50 a0 e1              cpy             r5, param_1\n    003712f0 00 00 50 e3              cmp             param_1, #0x0\n    003712f4 00 00 00 1a              bne             LAB_003712fc\n    003712f8 50 be fd eb              bl              thunk_FUN_00293108                                                                                     ; undefined thunk_FUN_00293108()\n                    -- Flow Override: CALL_RETURN (CALL_TERMIN\n                    LAB_003712fc                                                                                                        XREF[1]: 003712f4(j)  \n    003712fc 00 00 96 e5              ldr             param_1, [r6,#0x0]=&gt;Class$PlayingSceneController                                                        ; = ??\n    00371300 00 20 a0 e3              mov             r2, #0x0\n    00371304 54 10 d5 e5              ldrb            param_2, [r5,#0x54]\n    00371308 00 8a b0 ee              vmov.f32        s16, 0x40000000\n    0037130c 5c 00 90 e5              ldr             param_1, [param_1,#0x5c]\n    00371310 00 00 51 e3              cmp             param_2, #0x0\n    00371314 49 8a b0 0e              vmoveq.f32      s16, s18\n    00371318 00 20 c0 e5              strb            r2, [param_1,#0x0]\n    0037131c 88 00 9f e5              ldr             param_1, [DAT_003713ac]                                                                                 ; = 00CBFF84h\n    00371320 00 00 9f e7              ldr             param_1, [pc,param_1]=&gt;-&gt;Class$GamePref                                                                 ; = 010dc8d0\n    00371324 0c 50 94 e5              ldr             r5, [r4,#0xc]\n    00371328 00 00 90 e5              ldr             param_1, [param_1,#0x0]=&gt;Class$GamePref                                                                 ; = ??\n    0037132c bb 10 d0 e5              ldrb            param_2, [param_1,#0xbb]\n    00371330 02 00 11 e3              tst             param_2, #0x2\n    00371334 03 00 00 0a              beq             LAB_00371348\n    00371338 74 10 90 e5              ldr             param_2, [param_1,#0x74]\n    0037133c 00 00 51 e3              cmp             param_2, #0x0\n    00371340 00 00 00 1a              bne             LAB_00371348\n    00371344 34 be fd eb              bl              thunk_FUN_002948b8                                                                                     ; undefined thunk_FUN_002948b8()\n                    LAB_00371348                                                                                                        XREF[2]: 00371334(j), 00371340(j)  \n    00371348 05 00 a0 e1              cpy             param_1, r5\n    0037134c 00 10 a0 e3              mov             param_2, #0x0\n    00371350 5b 7d 03 eb              bl              GamePref$$updateScore                                                                                  ; void GamePref$$updateScore(int param_1)\n    00371354 40 8a b5 ee              vcmp.f32        s16, #0\n    00371358 10 fa f1 ee              vmrs            apsr, fpscr\n    0037135c 05 00 00 1a              bne             LAB_00371378\n    00371360 04 00 a0 e1              cpy             param_1, r4\n    00371364 04 8b bd ec              vpop            {d8,d9}\n    00371368 70 4c bd e8              ldmia           sp!,{r4 r5 r6 r10 r11 lr}\n    0037136c 75 00 00 ea              b               PlayingSceneController$$showGameOverMenu                                                               ; undefined PlayingSceneController$$showGameOverMenu()\n                    -- Flow Override: CALL_RETURN (CALL_TERMIN\n                    LAB_00371370                                                                                                        XREF[1]: 003712d4(j)  \n    00371370 04 8b bd ec              vpop            {d8,d9}\n    00371374 70 8c bd e8              ldmia           sp!,{r4 r5 r6 r10 r11 pc}\n                    LAB_00371378                                                                                                        XREF[1]: 0037135c(j)  \n    00371378 10 1a 18 ee              vmov            param_2, s16\n    0037137c 04 00 a0 e1              cpy             param_1, r4\n    00371380 47 01 00 eb              bl              PlayingSceneController$$showGameOverMenu                                                               ; undefined PlayingSceneController$$showGameOverMenu()\n    00371384 00 10 a0 e1              cpy             param_2, param_1\n    00371388 04 00 a0 e1              cpy             param_1, r4\n    0037138c 00 20 a0 e3              mov             r2, #0x0\n    00371390 04 8b bd ec              vpop            {d8,d9}\n    00371394 70 4c bd e8              ldmia           sp!,{r4 r5 r6 r10 r11 lr}\n    00371398 41 48 11 ea              b               UnityEngine.MonoBehaviour$$StartCoroutine                                                              ; undefined UnityEngine.MonoBehaviour$$StartCoroutine()\n                    -- Flow Override: CALL_RETURN (CALL_TERMIN\n                    DAT_0037139c                                                                                                        XREF[1]: 00371288(R)  \n    0037139c 82 62 ce 00              undefined4      00CE6282h\n                    DAT_003713a0                                                                                                        XREF[1]: 003712a4(R)  \n    003713a0 a8 11 cc 00              undefined4      00CC11A8h\n                    DAT_003713a4                                                                                                        XREF[1]: 003712bc(R)  \n    003713a4 60 10 cc 00              undefined4      00CC1060h\n                    DAT_003713a8                                                                                                        XREF[1]: 003712d8(R)  \n    003713a8 b0 02 cc 00              undefined4      00CC02B0h\n                    DAT_003713ac                                                                                                        XREF[1]: 0037131c(R)  \n    003713ac 84 ff cb 00              undefined4      00CBFF84h\n\n</code></pre>\n<p>the specific part I was concentrating is this part:</p>\n<pre><code>                    LAB_00371348                                                                                                        XREF[2]: 00371334(j), 00371340(j)  \n    00371348 05 00 a0 e1              cpy             param_1, r5\n    0037134c 00 10 a0 e3              mov             param_2, #0x0\n    00371350 5b 7d 03 eb              bl              updateScore                                                                                  \n    00371354 40 8a b5 ee              vcmp.f32        s16, #0\n    00371358 10 fa f1 ee              vmrs            apsr, fpscr\n    0037135c 05 00 00 1a              bne             LAB_00371378\n    00371360 04 00 a0 e1              cpy             param_1, r4\n    00371364 04 8b bd ec              vpop            {d8,d9}\n    00371368 70 4c bd e8              ldmia           sp!,{r4 r5 r6 r10 r11 lr}\n    0037136c 75 00 00 ea              b               showGameOverMenu                                                               ; undefined showGameOverMenu()\n                    -- Flow Override: CALL_RETURN (CALL_TERMIN\n\n</code></pre>\n<p>I wanted to change the value of <code>param_1</code> got called with the function <code> updateScore</code> and assign <code>param_1</code> with the <code>249F0</code> using ghidra like for example <code>MOV  param_1, #0x249F0</code> using <code>patch instruction</code> command but that was not possible. BTW now <code>param_1</code> was copied the value of <code>r5</code> which was assigned value by previous instructions but I am unable to modify it.</p>\n<p>all in all, How can I assign <code>0x249F0</code> value on <code>param_1</code> or even `r5' registers? is this possible? is there another way I could have achieved this goal?</p>\n<p>Edit: HERE IS DECOMPILED <code>updateScore</code> function:</p>\n<pre><code>                    ********************************************\n                    *                 FUNCTION                 *\n                    ********************************************\n                    void __stdcall updateScore(int param_1)\n         void               &lt;VOID&gt;           &lt;RETURN&gt;\n         int                r0:4             param_1\n                    GamePref$$updateScore                                                                                               XREF[1]: PlayingSceneController$$gameOver:00371350(c)  \n    004508c4 30 48 2d e9              stmdb           sp!,{r4 r5 r11 lr}\n    004508c8 08 b0 8d e2              add             r11, sp, #0x8\n    004508cc a0 50 9f e5              ldr             r5, [DAT_00450974]                                                                                      ; = 00C07326h\n    004508d0 00 40 a0 e1              cpy             r4, param_1\n    004508d4 05 50 8f e0              add             r5, pc, r5\n    004508d8 00 00 d5 e5              ldrb            param_1, [r5,#0x0]=&gt;DAT_01057c02                                                                        ; = ??\n    004508dc 00 00 50 e3              cmp             param_1, #0x0\n    004508e0 05 00 00 1a              bne             LAB_004508fc\n    004508e4 8c 00 9f e5              ldr             param_1, [DAT_00450978]                                                                                 ; = 00BE6778h\n    004508e8 00 00 9f e7              ldr             param_1, [pc,param_1]=&gt;PTR_DAT_01037068                                                                 ; = 00d91bf4\n    004508ec 00 00 90 e5              ldr             param_1=&gt;__DT_SYMTAB[443].st_name+1, [param_1,#0x0]=&gt;DAT_00d91bf4                                        ; = 00001DA1h\n    004508f0 9b 40 fa eb              bl              thunk_FUN_0029b5bc                                                                                     ; undefined thunk_FUN_0029b5bc()\n    004508f4 01 00 a0 e3              mov             param_1, #0x1\n    004508f8 00 00 c5 e5              strb            param_1, [r5,#0x0]=&gt;DAT_01057c02                                                                        ; = ??\n                    LAB_004508fc                                                                                                        XREF[1]: 004508e0(j)  \n    004508fc 78 50 9f e5              ldr             r5, [DAT_0045097c]                                                                                      ; = 00BE09A4h\n    00450900 05 50 9f e7              ldr             r5, [pc,r5]=&gt;-&gt;Class$GamePref                                                                           ; = 010dc8d0\n    00450904 00 00 95 e5              ldr             param_1, [r5,#0x0]=&gt;Class$GamePref                                                                      ; = ??\n    00450908 bb 10 d0 e5              ldrb            r1, [param_1,#0xbb]\n    0045090c 02 00 11 e3              tst             r1, #0x2\n    00450910 03 00 00 0a              beq             LAB_00450924\n    00450914 74 10 90 e5              ldr             r1, [param_1,#0x74]\n    00450918 00 00 51 e3              cmp             r1, #0x0\n    0045091c 00 00 00 1a              bne             LAB_00450924\n    00450920 bd 40 fa eb              bl              thunk_FUN_002948b8                                                                                     ; undefined thunk_FUN_002948b8()\n                    LAB_00450924                                                                                                        XREF[2]: 00450910(j), 0045091c(j)  \n    00450924 15 00 00 eb              bl              getScore                                                                                     ; undefined getScore()\n    00450928 04 00 50 e1              cmp             param_1, r4\n    0045092c 30 88 bd a8              ldmiage         sp!,{r4 r5 r11 pc}\n    00450930 00 00 95 e5              ldr             param_1, [r5,#0x0]=&gt;Class$GamePref                                                                      ; = ??\n    00450934 bb 10 d0 e5              ldrb            r1, [param_1,#0xbb]\n    00450938 02 00 11 e3              tst             r1, #0x2\n    0045093c 04 00 00 0a              beq             LAB_00450954\n    00450940 74 10 90 e5              ldr             r1, [param_1,#0x74]\n    00450944 00 00 51 e3              cmp             r1, #0x0\n    00450948 01 00 00 1a              bne             LAB_00450954\n    0045094c b2 40 fa eb              bl              thunk_FUN_002948b8                                                                                     ; undefined thunk_FUN_002948b8()\n    00450950 00 00 95 e5              ldr             param_1, [r5,#0x0]=&gt;Class$GamePref                                                                      ; = ??\n                    LAB_00450954                                                                                                        XREF[2]: 0045093c(j), 00450948(j)  \n    00450954 5c 00 90 e5              ldr             param_1, [param_1,#0x5c]\n    00450958 04 10 a0 e1              cpy             r1, r4\n    0045095c 00 20 a0 e3              mov             r2, #0x0\n    00450960 08 00 90 e5              ldr             param_1, [param_1,#0x8]\n    00450964 aa b8 12 eb              bl              UnityEngine.PlayerPrefs$$SetInt                                                                        ; undefined UnityEngine.PlayerPrefs$$SetInt()\n    00450968 00 00 a0 e3              mov             param_1, #0x0\n    0045096c 30 48 bd e8              ldmia           sp!,{r4 r5 r11 lr}\n    00450970 39 ba 12 ea              b               UnityEngine.PlayerPrefs$$Save                                                                          ; undefined UnityEngine.PlayerPrefs$$Save()\n                    -- Flow Override: CALL_RETURN (CALL_TERMIN\n                    DAT_00450974                                                                                                        XREF[1]: 004508cc(R)  \n    00450974 26 73 c0 00              undefined4      00C07326h\n                    DAT_00450978                                                                                                        XREF[1]: 004508e4(R)  \n    00450978 78 67 be 00              undefined4      00BE6778h\n                    DAT_0045097c                                                                                                        XREF[1]: 004508fc(R)  \n    0045097c a4 09 be 00              undefined4      00BE09A4h\n\n</code></pre>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "377",
    "tags": [
        "ghidra",
        "decompiler",
        "game-hacking",
        "dnspy"
    ],
    "user": "hanan",
    "time": "Aug 11, 2022 at 7:45",
    "comments": [
        {
            "user": "raspiduino",
            "text": "<span class=\"comment-copy\">Which architecture is <code>libil2cpp.so</code> compiled for?</span>",
            "time": null
        },
        {
            "user": "hanan",
            "text": "<span class=\"comment-copy\">@raspiduino, armv7 in this case.</span>",
            "time": null
        },
        {
            "user": "hanan",
            "text": "<span class=\"comment-copy\">Of course, previously searched on google and make such conclusions that ghidra decompiler somehow put in there for simplicity or may be. But any idea to achieve such goal?</span>",
            "time": null
        },
        {
            "user": "hanan",
            "text": "<span class=\"comment-copy\">@raspiduino I have edited the question and added the decompiled <code>updateScore</code> fucntion. take a look plz.</span>",
            "time": null
        },
        {
            "user": "raspiduino",
            "text": "<span class=\"comment-copy\">I can't think of anyway other than storing the value <code>0x249F0</code> to an unused place in the binary, then use <code>LDR</code> to load it from its address to the <code>param_1</code>. Hopefully someone will think of a better way to do it</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>ARM limits the values of constants you can use in the MOV instruction: The complete MOV instruction needs to fit into 32 bits, so there is no space for an arbitrary 32-bit constant. Probably 0x25000 would be possible. If it needs to be 0x249F0 exactly, there is no chance to put that into the 32-bit space occupied by <code>mov param_2, #0</code></p>\n<p>Using LDR in PC-relative mode, and storing 0x249F0 in free space close to the instruction might work, but you would need to find a free 32-bit slot yourself first.</p>\n</div>",
            "votes": "2",
            "user": "Michael Karcher",
            "time": "Aug 19, 2022 at 10:54",
            "is_accepted": false,
            "comments": [
                {
                    "user": "hanan",
                    "text": "<span class=\"comment-copy\">thanks for the idea, I have solved it using like <code>movn</code> which when negated the value gives the expected value. hey pal can you give me some ideas to this question:: <a href=\"https://reverseengineering.stackexchange.com/questions/30805/find-constant-variables-with-float-values-using-ghidra\" title=\"find constant variables with float values using ghidra\">reverseengineering.stackexchange.com/questions/30805/…</a></span>",
                    "time": null
                }
            ]
        }
    ]
}