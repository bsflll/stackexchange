{
    "title": "Binary patching using radare2 in debug mode",
    "link": "https://reverseengineering.stackexchange.com/questions/14215/binary-patching-using-radare2-in-debug-mode",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Im a newbe in radare and while I tried to patch a crackme binary, I opened it the first time in debug mode (-d), while debugging I used oo+ to reopen it with write mode, when I modify an instruction using wx, it works but when I quit it gives me two confirmation messages with yes no I press enter two times, then it get back to the original stat, and loose the modification, \nHow could I keep changes even after quitting ???</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "5k",
    "tags": [
        "radare2",
        "patching"
    ],
    "user": "krachleur",
    "time": "Dec 22, 2016 at 4:52",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I just tried opening a binary file and patching and it actually saves my patches. The steps I followed are:</p>\n<pre><code>[99:99:99] &lt;myuser&gt;:answer $ cp crackme0x00 crackme0x00_patched\n[99:99:99] &lt;myuser&gt;:answer $ radare2 -Aw crackme0x00_patched\n[0x08048360]&gt; <a class=\"__cf_email__\" data-cfemail=\"6717030127141e0a490a060e09\" href=\"/cdn-cgi/l/email-protection\">[emailÂ protected]</a> \n[0x08048360]&gt; 0x08048487\n[0x08048487]&gt; wa ret\nWritten 1 bytes (ret) = wx c3\n[0x08048487]&gt; q\n[99:99:99] &lt;myuser&gt;:answer $ cmp -l crackme0x00 crackme0x00_patched | gawk '{printf \"%08X %02X %02X\\n\", $1, strtonum(0$2), strtonum(0$3)}' \n00000488 E8 C3\n</code></pre>\n<p>(I stole the compare script from <a href=\"https://superuser.com/questions/125376/how-do-i-compare-binary-files-in-linux\">here</a>)</p>\n<p>As you can see, in my case the binary remains patched even after quitting (<code>C3</code> is the opcode for the <code>ret</code> instruction. Instead of reopening the file with <code>oo+</code> as you did, I opened it in write mode with <code>w</code> and <code>A</code> (equivalent of <code>aaa</code>). I just tried myself and I <strong><em>couldn't</em></strong> patch binaries and save them (if anyone can give a more accurate explaination is welcome).</p>\n</div>",
            "votes": "0",
            "user": "Community",
            "time": "Mar 20, 2017 at 10:18",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This is normal and expected behaviour. when you are in the debugger what you are modifying is the process memory, not the disk file.</p>\n</div>",
            "votes": "6",
            "user": "pancake",
            "time": "Dec 23, 2016 at 12:15",
            "is_accepted": false,
            "comments": [
                {
                    "user": "krachleur",
                    "text": "<span class=\"comment-copy\">Being a new be in the huge world of reverse ingeniering, I had not this idea in my mind, the next time, I'll be ready for similar cases (before asking) ^^</span>",
                    "time": null
                }
            ]
        }
    ]
}