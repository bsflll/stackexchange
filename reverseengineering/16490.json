{
    "title": "How to decompile with Hex Rays via a Python API?",
    "link": "https://reverseengineering.stackexchange.com/questions/16490/how-to-decompile-with-hex-rays-via-a-python-api",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If i have a large set of files and I'd like to run Hex-rays over them to produce output as C - can I do so in python?</p>\n<ul>\n<li>I see there is IDA Python</li>\n<li>And I see Hex-rays has a C++ SDK</li>\n</ul>\n<p>Is there a python Hex-rays API?</p>\n</div>",
    "votes": "2",
    "answers": 4,
    "views": "7k",
    "tags": [
        "ida",
        "idapython",
        "python",
        "hexrays",
        "idapro-sdk"
    ],
    "user": "chris",
    "time": "Oct 6, 2017 at 14:17",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Yes. The newer versions of IDA has official bindings for the Hex-Rays decompiler.<br/>\nOriginally, the Python bindings were written by <a href=\"https://github.com/EiNSTeiN-/hexrays-python\" rel=\"nofollow noreferrer\">EiNSTeiN</a> around the Hex-Rays Decompiler SDK API. Later it has been merged into IDAPython.</p>\n<p>You can find the documentation under \"<em>ida_hexrays</em>\" in the <a href=\"https://www.hex-rays.com/products/ida/support/idapython_docs/\" rel=\"nofollow noreferrer\">IDAPython docs</a>.<br/>\nExamples can be found in IDAPython <a href=\"https://github.com/idapython/src/tree/master/examples\" rel=\"nofollow noreferrer\">repository</a>. Check the scripts which starting with \"<em>vds</em>\".</p>\n<p>You can check <a href=\"https://github.com/tintinweb/ida-batch_decompile\" rel=\"nofollow noreferrer\">IDA Batch Decompile</a> plugin which aims, as stated by the author, to batch decompile files in a folder:</p>\n<blockquote>\n<p><em>IDA Batch Decompile</em> is a plugin for Hex-Ray's IDA Pro that adds the\n  ability to batch decompile multiple files and their imports with\n  additional annotations (xref, stack var size) to the pseudocode .c\n  file</p>\n</blockquote>\n<p>Notice that this is a work-in-progress project so you might encounter some bugs.</p>\n</div>",
            "votes": "5",
            "user": "Glorfindel",
            "time": "Apr 18, 2019 at 11:03",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It depends on IDA version you're using.\nVersion 7.0 (and AFAIR version 6.9) has <a href=\"https://www.hex-rays.com/products/ida/support/idapython_docs/ida_hexrays-module.html\" rel=\"nofollow noreferrer\">ida_hexrays</a> python module which has functions <code>decompile</code> and <code>decompile_many</code>. \nIf I remember it correctly the older IDA versions had these functions in <code>idaapi</code> module and these functions already had been introduced in IDA 6.6.</p>\n</div>",
            "votes": "2",
            "user": "w s",
            "time": "Oct 6, 2017 at 16:33",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Well,there exist some examples at the idapython's github, see the idapyhton/examples/vds1.py,you can get a demo.</p>\n<pre><code>import idaapi\nf=idaapi.get_func(ea)\ncfunc=idaapi.decompile(f)\n</code></pre>\n<p>I have tried this on ida pro 6.8</p>\n</div>",
            "votes": "2",
            "user": "YaFeng  Luo",
            "time": "Apr 25, 2018 at 14:52",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Thanks for all the answers. In the end I used retdec due to some licensing restrictions. I can't share the exact code used, but this might be useful for others looking at this too:</p>\n<p>Docker-IDA -  <a href=\"https://github.com/intezer/docker-ida\" rel=\"nofollow noreferrer\">https://github.com/intezer/docker-ida</a> - Can be changed to work on HexRays fairly easily</p>\n<p>Then commands such as the following may be useful:</p>\n<p>['/ida/idat','-Ohexrays:outfile:ALL','-A',folder + 'input.bin'])</p>\n<p>['mono','/dnSpy/dnSpy.Console.exe',filename,'-o', outdir]</p>\n<p>['/retdec/bin/decompile.sh','-l','py',filename]</p>\n</div>",
            "votes": "0",
            "user": "chris",
            "time": "May 1, 2018 at 11:38",
            "is_accepted": false,
            "comments": []
        }
    ]
}