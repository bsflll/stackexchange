{
    "title": "Can't change the icon of a .exe file. Seems to be protected?",
    "link": "https://reverseengineering.stackexchange.com/questions/8013/cant-change-the-icon-of-a-exe-file-seems-to-be-protected",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to change the icon of a .exe file, normally a simple task but this .exe file is a installer and for some reason when after I change or remove the icon, the exe shrinks in size from 300 mb to 12 kb and crashes when it runs.</p>\n<p>I've tried using Resource Hacker to either replace the icon or remove it but when I try to save it, the result ends up as a tiny file which crashes when it runs. I also tried using IconChanger 3.8 and the same thing happened. I cannot change any resources on the file using Resource Hacker. If I attempt to modify version info, description, anything, it will save as a tiny 12 kb file.</p>\n<p>Is there some kind of protection against changing resources that I don't know about? What can I do in this situation? Any other methods that might work for changing an icon or removing its icon in this situation?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "5k",
    "tags": [
        "executable",
        "software-security"
    ],
    "user": "Joesph",
    "time": "Jan 14, 2015 at 0:15",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "<span class=\"comment-copy\">As you say it's an installer, i'd assume it consists of a 12k stub, and a large resource of unknown type that contains the file to install. If IconChanger or Resource Hacker don't recognize that resource, they'll probably throw it away. See also <a href=\"http://reverseengineering.stackexchange.com/questions/1399/how-to-prevent-use-of-resource-editors/1538#1538\">this answer</a>.</span>",
            "time": null
        },
        {
            "user": "0xec",
            "text": "<span class=\"comment-copy\">The overlay is getting stripped on changing the icon. Solution -&gt; Dump the overlay, change the icon, append the dumped overlay.</span>",
            "time": null
        },
        {
            "user": "Joesph",
            "text": "<span class=\"comment-copy\">@GuntramBlohm Thanks. I looked at the answers and it would seem like whoever modified this .exe exploited Resource Hacker to cause it to discard the contents</span>",
            "time": null
        },
        {
            "user": "Joesph",
            "text": "<span class=\"comment-copy\">@ExtremeCoders How can I dump the overlay of a file? Sorry, I don't have any experience in reverse engineering.</span>",
            "time": null
        },
        {
            "user": "0xec",
            "text": "<span class=\"comment-copy\">@Joesph See answer</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Such a problem is common with executables having overlay.</p>\n<p>An overlay is extra data appended at the end of a <code>PE</code>. The overlay is located at the end of the sections. When a <code>PE</code> is loaded the overlay is <strong>not</strong> mapped into the memory of the process. </p>\n<p>An overlay is common with installers, self extracting archives etc. In order to extract the overlay, you can use any decent PE editor such as <em><a href=\"http://exeinfo.atwebpages.com/\" rel=\"nofollow noreferrer\">exeinfope</a></em>, <em><a href=\"http://ntinfo.biz/\" rel=\"nofollow noreferrer\">Detect It Easy</a></em> or like <a href=\"https://reverseengineering.stackexchange.com/questions/2014/how-can-one-extract-the-appended-data-of-a-portable-executable\">this</a> way.</p>\n<p>Hence for your problem, I would suggest to dump the overlay, make required modifications on the PE, and finally re-append back the dumped overlay to the end of the executable. <br/>For the last step you can use a Hex Editor or the <a href=\"http://support.microsoft.com/kb/71161\" rel=\"nofollow noreferrer\">MS-DOS COPY command</a>.</p>\n</div>",
            "votes": "3",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": true,
            "comments": [
                {
                    "user": "vane",
                    "text": "<span class=\"comment-copy\">To further elaborate on this, you can also use a hex editor to dump the overlay and the specific copy command could be like this <code>copy /b modded.exe+overlay.bin final_exe.exe</code> where <code>/b</code> tells copy that you're copying binary data</span>",
                    "time": null
                }
            ]
        }
    ]
}