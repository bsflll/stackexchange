{
    "title": "Windows 11: Interact with IDA pro when running in session 0",
    "link": "https://reverseengineering.stackexchange.com/questions/31518/windows-11-interact-with-ida-pro-when-running-in-session-0",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to debug a windows service, so I set IDA as the debugger of that service.</p>\n<p>But since services are running in session 0, I can't interact with IDA. Also in the latest windows version (e.g. 22h2), it looks like they removed tools that make this job easier like UI0detect and it looks like they made this task impossible.</p>\n<p>Is there any way to work around this problem?</p>\n<p>For example, maybe a command line argument that runs IDA in a different session?</p>\n<p>I suppose one solution could be to set IDA to run a remote debugging, not sure if that would work but I would consider it if nothing else works, since it looks like it's going to be a pain to set up.</p>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "140",
    "tags": [
        "ida",
        "windows"
    ],
    "user": "tturbox",
    "time": "Feb 7, 2023 at 17:30",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If you want to debug a service from the startup, a low tech option could be the following:</p>\n<ul>\n<li>Increase service timeout in the <a href=\"https://support.citrix.com/article/CTX221996/changing-the-service-startup-timeout-servicespipetimeout-in-windows\" rel=\"nofollow noreferrer\">registry</a>.</li>\n<li>Patch the service executable with an infinite loop (EB FE) to give you extra time</li>\n<li>Run debugger as System (e.g. using <a href=\"https://learn.microsoft.com/en-us/sysinternals/downloads/psexec\" rel=\"nofollow noreferrer\">PSExec</a>) in a normal user/console session</li>\n<li>Attach debugger, remove infinite loop (write back original bytes) and resume</li>\n</ul>\n</div>",
            "votes": "4",
            "user": "Remko",
            "time": "Feb 8, 2023 at 11:31",
            "is_accepted": false,
            "comments": [
                {
                    "user": "tturbox",
                    "text": "<span class=\"comment-copy\">doesnt seem too bad, might be a step above setting up a remote debugger. might use this at the end if there are no other better solutions (and hoping there is no integrity check on the binary)</span>",
                    "time": null
                }
            ]
        }
    ]
}