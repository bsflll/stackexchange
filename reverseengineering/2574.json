{
    "title": "Changing parameter of function call in ELF executable",
    "link": "https://reverseengineering.stackexchange.com/questions/2574/changing-parameter-of-function-call-in-elf-executable",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to alter a ELF executable function call and replace one of it's parameters.\nThe executable calls <code>dlopen()</code> function and passes <code>RTLD_NOW</code> as the flag parameter.\nI want to change it to <code>RTLD_LAZY</code>.</p>\n<p>What's the easiest way to detect the exact place where this call is done, and replacing the parameter.</p>\n<p>I have to do it on production environment, so I only have GNU toolchain, gcc, gdb, etc.</p>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "878",
    "tags": [
        "linux",
        "elf"
    ],
    "user": "Mellowcandle",
    "time": "Aug 3, 2013 at 7:29",
    "comments": [
        {
            "user": "PSS",
            "text": "<span class=\"comment-copy\">Are you talking about permanently patching the executable or modifying at run time?</span>",
            "time": null
        },
        {
            "user": "Mellowcandle",
            "text": "<span class=\"comment-copy\">Both. At runtime to test it. And then persist it.</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Theoretically <code>LD_PRELOAD</code> would be your friend, but given that <code>dlopen</code> is implemented within the loader, it's possible that this approach would fail.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The easiest way to do this is with <a class=\"post-tag\" href=\"/questions/tagged/gdb\" rel=\"tag\" title=\"show questions tagged 'gdb'\">gdb</a>. Put a breakpoint on the <code>dlopen</code> function, and change the parameters (likely passed on the stack). <code>RTLD_NOW</code> is defined as 2. Simply change it by 1 (<code>RTLD_LAZY</code>).</p>\n<p>To sum up, in <code>gdb</code></p>\n<pre><code>breakpoint dlopen\nrun\nset stack_memory_address = 1\ncontinue\n</code></pre>\n<p>Where <code>stack_memory_address</code> is the address of your mode parameter.</p>\n</div>",
            "votes": "2",
            "user": "0xC0000022L",
            "time": "Aug 4, 2013 at 19:26",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Mellowcandle",
                    "text": "<span class=\"comment-copy\">How do I save it, is it possible from gdb ?</span>",
                    "time": null
                },
                {
                    "user": "jvoisin",
                    "text": "<span class=\"comment-copy\">You can use an hex-editor, seek to the offset that you broke on in GDB, and change the 2 in a 1.</span>",
                    "time": null
                }
            ]
        }
    ]
}