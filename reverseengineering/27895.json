{
    "title": "Try to parse all functions with IdaPython",
    "link": "https://reverseengineering.stackexchange.com/questions/27895/try-to-parse-all-functions-with-idapython",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Sometime Ida didn't parse some function into binary , so I search the beginning of function (in Arm it's <code>PUSH {R4-*,LR}</code>  and press <code>P</code> -create a function.</p>\n<p>How can I do it automatically for all undefined function with IdaPython ? How can I run on all over \"Instruction area\" and try to parse function?</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "1k",
    "tags": [
        "ida",
        "idapython"
    ],
    "user": "ida-python",
    "time": "Jun 24, 2021 at 19:28",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I use this code snippet when I need to find, define, and do the auto-analysis of every function starting by a specific stub:</p>\n<pre><code>from idaapi import *\nfrom ida_search import *\nfrom ida_funcs import *\n\ncnt = 0\nmy_pattern = '' # The hex value of the opcodes you are looking for\n\ndef is_function(start_addr):\n   content = get_bytes(start_addr, 4, False).hex()\n   if content == my_pattern:\n      return True\n   return False\n\naddr = find_unknown(0, 1)\nwhile addr != BADADDR\n   is_valid = is_function(addr)\n   if is_valid:\n      add_func(addr)\n      cnt += 1\n   addr = find_unknown(addr, 1)\n\nprint('A total of ' + str(cnt) + ' new functions where defined')\n</code></pre>\n<p>In your, case, replace <code>my_pattern</code> by the opcodes of the pattern that you are looking for. For instance, in ARM, the \"MOV R12, SP\" instruction is a good indicator  of a new function, so I set <code>my_pattern = '0DC0A0E1'</code></p>\n<p>More details on this through this similar question: <a href=\"https://reverseengineering.stackexchange.com/questions/28016/how-to-know-when-a-subroutine-starts-when-reversing-an-arm64-file/28018#28018\">How to know when a subroutine starts when reversing an ARM64 file?</a></p>\n</div>",
            "votes": "2",
            "user": "Guillaume",
            "time": "Jul 26, 2021 at 7:25",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You probably need the following IDAPython functions:</p>\n<ul>\n<li><a href=\"https://hex-rays.com/products/ida/support/idapython_docs/idautils-module.html#Heads\" rel=\"nofollow noreferrer\">idautils.Heads</a> for iterating over the segment</li>\n<li><a href=\"https://hex-rays.com/products/ida/support/idapython_docs/idc-module.html#MakeFunction\" rel=\"nofollow noreferrer\">idc.MakeFunction</a> for creating a function</li>\n<li><a href=\"https://hex-rays.com/products/ida/support/idapython_docs/idc-module.html#GetDisasm\" rel=\"nofollow noreferrer\">idc.GetDisasm</a> for getting the disassembly text of an instruction</li>\n</ul>\n<p>Full documentation about IDAPython is <a href=\"https://hex-rays.com/products/ida/support/idapython_docs/\" rel=\"nofollow noreferrer\">here</a></p>\n</div>",
            "votes": "1",
            "user": "w s",
            "time": "Jun 25, 2021 at 11:11",
            "is_accepted": false,
            "comments": [
                {
                    "user": "paramikoooo",
                    "text": "<span class=\"comment-copy\">The problem is that <code>idc.GetDisasm</code> works only if the address is code, so you need first convert the address to code with <code>idaap.create_insn</code> there is no function that try to convert data to code without make change into IDB</span>",
                    "time": null
                }
            ]
        }
    ]
}