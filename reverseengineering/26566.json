{
    "title": "Is it possible for a process to debug itself?",
    "link": "https://reverseengineering.stackexchange.com/questions/26566/is-it-possible-for-a-process-to-debug-itself",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>What happens if you try to debug yourself ? I mean, does the process crash ?\nIf it is possible, how would you implement it ?</p>\n<p>I have tried launching x64dbg and I can't attach to my own x64dbg process.</p>\n<p>Thank you!</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "248",
    "tags": [
        "windows",
        "debugging",
        "debuggers"
    ],
    "user": "beauthi",
    "time": "Dec 17, 2020 at 8:04",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Hi and welcome to RE.SE. It would likely end up in a deadlock situation, since the debugger loop - which could conceivably be in a separate thread - would inevitably break at some point, but there is no one to act on it. Is this out of curiosity? Otherwise, could you explain what it is you're trying to achieve rather than what you're doing?!</span>",
            "time": null
        },
        {
            "user": "beauthi",
            "text": "<span class=\"comment-copy\">Hello, thank you for answering! It is just for curiosity haha</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Usually itâ€™s not possible because one process must control the other and most debugging commands (e.g. reading or writing registers) need the target process to be stopped.</p>\n<p>A common approach is run a copy of itself as a separate process (can be done on Unix systems using fork()) and debug that. In theory you could implement a custom debug-like functionality using signal or exception handlers or low level APIs but this is definitely something that would require a lot of work and unlikely to be very robust.</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Dec 17, 2020 at 16:47",
            "is_accepted": true,
            "comments": []
        }
    ]
}