{
    "title": "Log EIP while in a certain memory range?",
    "link": "https://reverseengineering.stackexchange.com/questions/16691/log-eip-while-in-a-certain-memory-range",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm looking for a means to log EIP of a process while it is within a certain memory range.  I've dabbled a little bit in x64dbg's logging functionality, but was unsuccessful in getting a memory range conditional working.</p>\n<p>Open to ideas.</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "510",
    "tags": [
        "debugging",
        "x86",
        "x64dbg"
    ],
    "user": "Mudsy",
    "time": "Nov 2, 2017 at 14:45",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have one solution after mucking around for a while, I'm sure I can find something better, in the meantime however here you go.</p>\n<p>Using the 'Memory Map' Tab you can create a memory breakpoint on code sections</p>\n<p>Right click on a section-&gt;Memory Breakpoint-&gt;Execute-&gt;Restore</p>\n<p>Then you can edit the breakpoint condition to be something like this\n(I am using a 64 bit process)</p>\n<p><a href=\"https://i.sstatic.net/YeemF.png\" rel=\"nofollow noreferrer\"><img alt=\"Editing memory execute breakpoints to log EIP/RIP\" src=\"https://i.sstatic.net/YeemF.png\"/></a></p>\n<p>I just figured out how to reduce the range of this.</p>\n<p>You can use Log Condition like this:</p>\n<p><code>00007FF6D2F71000 &lt; rip &lt; 00007FF6D2F72000</code></p>\n<p>which is symbolically</p>\n<p><code>start_address &lt; eip &lt; end_address</code></p>\n<p>or</p>\n<p><code>start_address &lt; rip &lt; end_address</code></p>\n<p>It works pretty well. I'll update if I find any better alternatives</p>\n<p>EDIT:</p>\n<p><a href=\"https://x64dbg.readthedocs.io/en/latest/introduction/Expression-functions.html\" rel=\"nofollow noreferrer\">https://x64dbg.readthedocs.io/en/latest/introduction/Expression-functions.html</a>\n<a href=\"https://x64dbg.readthedocs.io/en/latest/introduction/Expressions.html\" rel=\"nofollow noreferrer\">https://x64dbg.readthedocs.io/en/latest/introduction/Expressions.html</a></p>\n<p>Read some of the docs for the cool stuff you can do</p>\n<p>I managed to get it to log only call instructions, and print the address and instruction using</p>\n<p><code>dis.iscall(rip)</code> in Break Condition and</p>\n<p><code>{rip}:{i:rip}</code> in Log Expression</p>\n<p>Thanks for asking this question, this is actually really useful stuff I never thought of before.</p>\n</div>",
            "votes": "2",
            "user": "Samson",
            "time": "Nov 3, 2017 at 0:03",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Mudsy",
                    "text": "<span class=\"comment-copy\">That's exactly what I wanted.  Thanks for the help!</span>",
                    "time": null
                }
            ]
        }
    ]
}