{
    "title": "Is this equivalent to overflow check",
    "link": "https://reverseengineering.stackexchange.com/questions/6815/is-this-equivalent-to-overflow-check",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>IDA generates the following disassembly from a software :</p>\n<pre><code>.text:004D594E add     eax, ebx\n.text:004D5950 mov     [esi], eax\n.text:004D5952 cmp     ebx, eax\n.text:004D5954 jbe     short loc_\n</code></pre>\n<p>So we add <code>ebx</code> to <code>eax</code>, then we check if <code>ebx</code> is lower or equal to <code>eax</code>.</p>\n<p>This is either a check to see if ebx is negative or to see if the addition resulted in a value higher than <code>0xFFFFFFFF</code>.</p>\n<p>Any hint on how I should interpret this?</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "106",
    "tags": [
        "disassembly"
    ],
    "user": "Eric",
    "time": "Dec 13, 2014 at 4:50",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>we check if <code>eax</code> is lower or equal to <code>ebx</code>.</p>\n</blockquote>\n<p>No, <code>cmp ebx, eax; jbe ...</code> checks to see if <code>ebx</code> <code>&lt;=</code> <code>eax</code>, not the other way around.</p>\n</div>",
            "votes": "2",
            "user": "Jason Geffner",
            "time": "Dec 13, 2014 at 4:49",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Eric",
                    "text": "<span class=\"comment-copy\">ugg, edited the question</span>",
                    "time": null
                },
                {
                    "user": "Eric",
                    "text": "<span class=\"comment-copy\">The question here is really how can adding ebx to eax make eax lower than ebx</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\"><a href=\"http://en.wikipedia.org/wiki/Integer_overflow\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Integer_overflow</a></span>",
                    "time": null
                },
                {
                    "user": "Eric",
                    "text": "<span class=\"comment-copy\">So this is an overflow check, is there any other way to interpret those operations?</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">The question here is really how can adding ebx to eax make eax lower than ebx  only when eax wraps around and becomes zero that is when eax = 0xffffffff and ebx = 1 adding ebx t o eax turns eax to 0 which is then below ebx assemble this inplace and execute and you can observe esi = 0xffffffff when ebfe is reached MOV     EAX, 0 MOV     EBX, 1MOV  ESI, EAX ADD     EAX, EBX CMP     EBX, EAX JBE     SHORT 063FB2 JMP     SHORT 1063FB0 JMP     SHORT 01063FA8</span>",
                    "time": null
                }
            ]
        }
    ]
}