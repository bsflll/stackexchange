{
    "title": "Loading a .sys file into Immunity Debugger",
    "link": "https://reverseengineering.stackexchange.com/questions/14249/loading-a-sys-file-into-immunity-debugger",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Can somebody tell me how to load a .sys file into Immunity Debugger correctly ?\nBecause when I load a driver into Imm. Debugger then I get the message that HAL.dll could not be found and that Imm. Debugger could not find the entry point.</p>\n<p>I tried the solutins at <a href=\"https://reverseengineering.stackexchange.com/questions/2866/loading-a-driver-in-immunity?rq=1\">Loading a Driver in Immunity</a> but that does not help.</p>\n<p>I do not know what to do.</p>\n<p>Best regards, </p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "immunity-debugger",
        "driver"
    ],
    "user": "user18558",
    "time": "Apr 13, 2017 at 12:49",
    "comments": [
        {
            "user": "rebel87",
            "text": "<span class=\"comment-copy\">You got to use windbg ,install the driver/sys on a machine/vm and debug remotely...immunity/olly are ring 3 debuggers ,you need ring 0 debugger i.e. windbg...</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>.sys extension is usually used for drivers. While they are the same PE executables, they run in kernel mode and thus use kernel-mode APIs exposed by the kernel executive itself (<a href=\"https://en.m.wikipedia.org/wiki/Ntoskrnl.exe\" rel=\"nofollow noreferrer\">ntoskrnl.exe</a>) or kernel-mode DLLs such as hal.dll. \nAFAIR someone made fake DLLs to simulate enough kernel APIs to achieve unpacking of drivers in user-mode debuggers like Olly but I don't have a link handy. </p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Dec 26, 2016 at 11:53",
            "is_accepted": false,
            "comments": []
        }
    ]
}