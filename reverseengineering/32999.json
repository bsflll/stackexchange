{
    "title": "Injecting dll to x86 process above user-virtual-address",
    "link": "https://reverseengineering.stackexchange.com/questions/32999/injecting-dll-to-x86-process-above-user-virtual-address",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>First, sorry for my bad english.</p>\n<p>I have some program that heavely virtualized and doing dll injection behavior.</p>\n<p>The target process is x86 process and execute in wow64 system.</p>\n<p>When I saw the target process's dump after dll has been injected, the dll is allocated after 0x7fffffff address. (PE Header seems deleted)</p>\n<p><a href=\"https://i.sstatic.net/fuQrfu6t.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/fuQrfu6t.png\"/></a></p>\n<p>So, I used APIMonitor tool and hook several suspicious API, the program just call VirtualAlloc API and address beyond 0x7fffffff was given by it's parameter.</p>\n<p><a href=\"https://i.sstatic.net/3K9uocnl.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/3K9uocnl.png\"/></a></p>\n<p>I heard the address after 0x7fffffff in x86 process is used by kernel. So, I think just using VirtualAlloc API to allocate after 0x7fffffff will not be succeed, even if program execute on wow64 system.</p>\n<p>And, I just make program that using VirtualAlloc API with higher address and test it, the allocation failed with ERROR_INVALID_ADDRESS(0x1E7)</p>\n<p>Is there any way that allocate address after 0x7fffffff in x86 process using VirtualAlloc API?</p>\n<p>I hope for your guide. thank you.</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "42",
    "tags": [
        "dll-injection"
    ],
    "user": "schnabel",
    "time": "Jun 3, 2024 at 6:55",
    "comments": [
        {
            "user": "SergeyE",
            "text": "<span class=\"comment-copy\">try to set the dll loading address to the process   by <a href=\"https://learn.microsoft.com/en-us/cpp/build/reference/linker-property-pages?view=msvc-170#base-address\" rel=\"nofollow noreferrer\">learn.microsoft.com/en-us/cpp/build/reference/…</a>   this works in some cases - I've tested it   <a href=\"https://learn.microsoft.com/en-us/cpp/build/reference/base-base-address?view=msvc-170\" rel=\"nofollow noreferrer\">learn.microsoft.com/en-us/cpp/build/reference/…</a></span>",
            "time": null
        }
    ],
    "answers_data": []
}