{
    "title": "Idapython: adding links where a function address is loaded into a register",
    "link": "https://reverseengineering.stackexchange.com/questions/20653/idapython-adding-links-where-a-function-address-is-loaded-into-a-register",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm writing an Idapython loader script to help reverse-engineer the firmware on an embedded system with a 68000 processor.</p>\n<p>Unfortunately I can't get a copy of the original C compiler used in order to build FLIRT signatures, but I would like to use Idapython to give IDA hints about some of the optimisations it's done.</p>\n<p>As an example - the compiler often does things like this:</p>\n<pre><code>MOVEA.L   #sub_1234, a4\n...\nJSR       (a4)\n</code></pre>\n<p>The optimisation is, it's using an address register to hold the address of the function, which saves code space when one function is called several times.</p>\n<p>I think I can figure out how to search for these patterns in the code -- but how can I tell IDA that \"(a4)\" is really a reference to sub_1234?</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "196",
    "tags": [
        "idapython"
    ],
    "user": "philpem",
    "time": "Feb 19, 2019 at 1:34",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Come to think of it, apart from my other answer, there's a feature of IDA that I forgot: put your cursor on the call and do Edit-&gt;Plugins-&gt;Change the callee address (Alt-F11).</p>\n</div>",
            "votes": "1",
            "user": "Rolf Rolles",
            "time": "Feb 21, 2019 at 17:29",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">not for 68k alas.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>IDA doesn't accept \"hints\" along those lines, but you can create the cross-references manually via script. If you know the address of the destination, you can add an out-going cross-reference from the source address to the destination using <a href=\"https://www.hex-rays.com/products/ida/support/idapython_docs/ida_xref-module.html#add_cref\" rel=\"nofollow noreferrer\">add_cref</a>. These will show up if you press ctrl-X at the destination, or X at the source. You can also add a comment at the call site with the target address, which will result in basically a \"hyperlink\" that you can double-click or press 'enter' with your cursor over.</p>\n</div>",
            "votes": "0",
            "user": "Rolf Rolles",
            "time": "Feb 20, 2019 at 5:10",
            "is_accepted": false,
            "comments": []
        }
    ]
}