{
    "title": "Windbg 'as' command in log breakpoint",
    "link": "https://reverseengineering.stackexchange.com/questions/4384/windbg-as-command-in-log-breakpoint",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to break the debugee as it opens a known file, using <code>windbg</code>. As <code>$scmp</code> doesn't accept direct address, I have to use <code>as</code> (<code>windbg</code> alias command). So, I put a conditional breakpoint at <code>CreateFileA</code>:</p>\n<pre><code>bu Kernel32!CreateFileA \"as /ma ${/v:fName} poi(esp+4);.echo ${fName};...;g\"\n</code></pre>\n<p>It always prints the same (first) file name. I also tried script files</p>\n<pre><code>bu ... \"$&gt;&lt; bpCmd\"\nbu ... \"$$&gt;&lt; bpCmd\"\n</code></pre>\n<p><em><code>bpCmd</code> content:</em></p>\n<pre><code>as /ma ${/v:fName} poi(esp+4);\n.echo ${fName};\n...\ng;\n</code></pre>\n<p>It didn't work as well.</p>\n<p>So, why <code>as</code> doesn't work in log breakpoints?</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "954",
    "tags": [
        "windbg"
    ],
    "user": "sealed...",
    "time": "May 20, 2014 at 13:37",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>The alias needs to be evaluated</code> <strong>everytime</strong> the break point is hit<br/>\nelse it will print the old alias only<br/>\nto force alias evaluation` enclose the  .echo and other commands inside a <strong>.block{}</strong> </p>\n<pre><code>crefil:\\&gt;dir /b\nCreateFile.cpp    \ncrefil:\\&gt;type CreateFile.cpp\n#include &lt;stdio.h&gt;\n#include &lt;windows.h&gt;\nint main (void)\n{\n    PWIN32_FIND_DATA lpFindFileData = \n            (PWIN32_FIND_DATA) calloc(1 , sizeof( WIN32_FIND_DATA));\n    FILE *fp;\n    errno_t err;\n    if (lpFindFileData)\n    {\n        HANDLE hFind = FindFirstFile(\"*.*\",lpFindFileData);\n        if ( hFind != INVALID_HANDLE_VALUE )\n        {\n            do\n            {\n                printf(\"%s\\n\",lpFindFileData-&gt;cFileName);\n                if ( (err = fopen_s(&amp;fp,lpFindFileData-&gt;cFileName,\"rb\") ) == 0 )\n\n                    if (fp)\n                        fclose(fp);\n            }while( ( FindNextFile(hFind,lpFindFileData) ) != FALSE );\n            FindClose(hFind);\n            free(lpFindFileData);\n        }\n    }\n    return 0;\n}\n</code></pre>\n<p>as in windbg conditional breakpoint    </p>\n<p><strong>crefil:&gt;cdb -c \"bp kernel32!CreateFileA \\\"as /ma ${/v:fname} poi(@esp+4);.block\n { .echo fname };gc\\\";g;q\" CreateFile.exe</strong></p>\n<pre><code>0:000&gt; cdb: Reading initial command 'bp kernel32!CreateFileA \"as /ma ${/v:fname}\n poi(@esp+4);.block { .echo fname };gc\";g;q'\n.\n..\nCreateFile.cpp\nCreateFile.exe\nCreateFile.obj\nCreateFile.pdb\n vc100.pdb\nquit:\n</code></pre>\n</div>",
            "votes": "3",
            "user": "blabb",
            "time": "May 20, 2014 at 19:57",
            "is_accepted": true,
            "comments": []
        }
    ]
}