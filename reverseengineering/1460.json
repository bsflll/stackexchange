{
    "title": "How can I work out which PCB layer a via goes to, without destroying the board?",
    "link": "https://reverseengineering.stackexchange.com/questions/1460/how-can-i-work-out-which-pcb-layer-a-via-goes-to-without-destroying-the-board",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to reverse engineer some boards that have multiple layers, but can't figure out any way of discovering which layer certain vias go to. Unfortunately I can't destroy the board with corrosives, since it's my only one. How can I find out how deep they go?</p>\n</div>",
    "votes": "8",
    "answers": 1,
    "views": "272",
    "tags": [
        "hardware",
        "pcb"
    ],
    "user": "Polynomial",
    "time": "Apr 1, 2013 at 21:24",
    "comments": [
        {
            "user": "Cybergibbons",
            "text": "<span class=\"comment-copy\">Just to clarify - why do you need to know which layer the connection goes to? Do you not just need to know what the via is connected to? If you actually need to reverse the PCB as a whole, then it's very challenging to do non-destructively.</span>",
            "time": null
        },
        {
            "user": "Polynomial",
            "text": "<span class=\"comment-copy\">From what I can tell, there are two data buses that sit on different internal layers, but the vias for them are hidden under an ASIC that is bound to the board. I'm pretty sure I know which bus is on which layer from a functional standpoint, since there's a board edge connector for one of them and you can clearly see the copper running through. The problem is that it's a 68 line bus (32 data lines, 32 address lines, 4 control lines) and I don't know which of those pins are the control lines that I have vias for. I could test them individually, but that's effort!</span>",
            "time": null
        },
        {
            "user": "cb88",
            "text": "<span class=\"comment-copy\">You could assume the 4 control lines are at one end or other of the bus as that would be most likely.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You would probably need some <a href=\"http://www.pcbreverseengineering.com/\" rel=\"noreferrer\">expensive scanning equipment</a>. It is possible  you could get old equipment that is being discarded but that would be rather difficult. Then you would probably need to write software to handle the output of the equipment as you most likely wouldn't have a license for the accompaning software unless you nabbed a complete system intact.</p>\n<p>If you were willing to forgo saving the original PCB you could do <a href=\"http://www.flexiblecircuitpcb.com/blog/pcb-copy-board-methods-and-steps.html\" rel=\"noreferrer\">this</a>. Basically carefully note component positions, remove the parts, scan both sides, clean up scans with image tool, then repeat removing layers of the board as you go... sounds quite error prone to me.</p>\n<p>It is also possible you could figure out a few by checking exhaustivly if some groups  of pins go to the same layer... you could probably assume those were power/ground pins.</p>\n<p>Another thing that may help is if the board is designed to support <a href=\"http://people.ee.duke.edu/~krish/teaching/ECE269/boundaryscan_tutorial.pdf\" rel=\"noreferrer\">boundary scan</a> testing. If I understand correctly you might be able to use that to automate detecting connecitons between chips if not which layer they are on. And here is a <a href=\"http://events.ccc.de/congress/2009/Fahrplan/attachments/1435_JTAG.pdf\" rel=\"noreferrer\">PDF on that topic</a>.</p>\n</div>",
            "votes": "8",
            "user": "cb88",
            "time": "Apr 1, 2013 at 22:46",
            "is_accepted": true,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">The problem with JTAG is that it supports a range of voltages and frequencies. You can literally fry your chips if you do the wrong thing. Be careful!</span>",
                    "time": null
                },
                {
                    "user": "cb88",
                    "text": "<span class=\"comment-copy\">@0xC0000022L good point I suppose at least if it were an expansion type card you could infer the voltages on the board from the slot voltage of course unless there were a voltage regulator then you could probably figure out what it was outputting.</span>",
                    "time": null
                }
            ]
        }
    ]
}