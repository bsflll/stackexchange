{
    "title": "Finding the correct emulator for programming a renesas sh7722 processor",
    "link": "https://reverseengineering.stackexchange.com/questions/21115/finding-the-correct-emulator-for-programming-a-renesas-sh7722-processor",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a question about reverse engineering a Roland gr-55 guitar synthesizer. I'm 90% sure the device uses a Renesas sh7722 processor as the main CPU, or at least one of the CPU's in the SH family. I first tried to disassemble the firmware binary using IDA, I then realized that IDA doesn't support the exact processor I have. On Renesas' website all the development tools are available along with a debugging emulator (E10A-USB emulator). My question is, am I able to use this emulator with my device? According to the user manual for the E10Aa-USB emulator (pg.31) the devices uses either a 14 pin or 36 pin connector which connects from the emulator to the user system or (gr-55 PCB board). According to the schematics for the Roland gr-55 (pg.34) top left corner of the page you can see a 24 pin connector labeled 24FLT-SM2-TB unpop for debug. So it seems the debugging port for the gr-55 is a 24 pin connector. So did the manufacture use their own custom emulator designed for just this board? Can there be multiple emulators for a processor, or is it that the main CPU is not a Renesas sh7722 and the E10A-USB is the wrong emulator. If the manufacture of the board did use their own custom emulator, is there any way to find and acquire the correct one? I'll post the schematics for the Roland GR-55 and the emulator user manual below.</p>\n<p><a href=\"https://www.renesas.com/tw/zh/doc/products/tool/doc/004/R20UT0870EJ1001_e10a.pdf\" rel=\"nofollow noreferrer\">E10A-USB Emulator user manual Pg.31</a></p>\n<p><a href=\"https://www.joness.com/gr300/service/GR-55_SERVICE_NOTES.pdf\" rel=\"nofollow noreferrer\">Roland Gr-55 schematic service notes pg.34</a></p>\n<p><a href=\"https://www.renesas.com/us/en/products/microcontrollers-microprocessors/superh/sh7780/sh7722.html#tools\" rel=\"nofollow noreferrer\">the development tools for sh7722, (emulator is at bottom of list)</a></p>\n<p><a href=\"https://www.roland.com/us/support/by_product/gr-55/updates_drivers/f64a41ce-c897-4fd5-94d7-71ec8ff6f036/\" rel=\"nofollow noreferrer\">Download link for the Roland GR-55 firmware </a></p>\n<p>Also on the board the 24 pin connector is not present, but it seems the outline for the connector is there for me to solder it to the board. So it seems if I find the right emulator I would have to solder on the 24 pin connector first.</p>\n<p>My main goal is to be able acquire all the right development software and equipment for this unit, learn the assembly language for this processor, and disable the checksum so i'm able to change the names of strings and maybe some other functions making the UI for this system 1000x more usable.</p>\n<p>If someone can clear this up for me I would greatly appreciate it.</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "238",
    "tags": [
        "disassembly",
        "debugging",
        "emulation"
    ],
    "user": "Dukes Mayonnaise",
    "time": "Apr 13, 2019 at 17:19",
    "comments": [
        {
            "user": "Bruce Abbott",
            "text": "<span class=\"comment-copy\">E10A-USB is $720.00 on Digikey, almost as much as the synthesizer itself. Then you are probably looking at several hundred hours analyzing the machine code to understand how the program works sufficiently to make it '1000x better'. Are you up for that?   Seems to me that time might be better spent learning how to drive the existing GUI and then actually <i>using</i> the device. What would you rather be - a musician, or a hacker?</span>",
            "time": null
        },
        {
            "user": "Dukes Mayonnaise",
            "text": "<span class=\"comment-copy\">I'm aware of how much the emulator cost. I don't want to make the GUI 1000x better, I said just changing the strings would make it 1000x more usable. I've owned the unit for seven years so I can drive the GUI just fine, but you can only drive it so fast. By the time I'm done editing to get the sound I'm looking for I've forgotten what I was originally going to play.  It seems that the manufacture used there own debugging emulator, but I cannot find anything about what emulator was used in the schematics, just the port labeled debug.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The 24 pin debug connector on the GR-55 seems to have all required signals for the E10A-USB, so I'm guessing they just used a smaller connector to reduce board space and cost. The connection diagram below is for a different CPU, but the pin designations match those in the GR-55 so I bet they are compatible. You just have to make a custom adapter cable.  </p>\n<p><a href=\"https://i.sstatic.net/KPPwE.jpg\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/KPPwE.jpg\"/></a></p>\n<blockquote>\n<p>My main goal is to be able acquire all the right development software\n  and equipment for this unit, learn the assembly language for this\n  processor, and disable the checksum so i'm able to change the names of\n  strings and maybe some other functions making the UI for this system\n  1000x more usable.</p>\n</blockquote>\n<p>Luckily for you the firmware is not encrypted and has many useful strings and debug symbols in it, so it should be relatively easy to disassemble and patch. Changing the UI functions will take a lot more work.     </p>\n</div>",
            "votes": "2",
            "user": "Bruce Abbott",
            "time": "Apr 16, 2019 at 7:50",
            "is_accepted": true,
            "comments": []
        }
    ]
}