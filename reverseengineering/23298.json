{
    "title": "IDA Freeware 7.0 disassemble ARM .so file",
    "link": "https://reverseengineering.stackexchange.com/questions/23298/ida-freeware-7-0-disassemble-arm-so-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a .so file from an android app, and I want to disassemble it with IDA. However I get the error: \n<code>The processor type 'arm' is not included in the installed version of IDA.</code></p>\n<p>IDA Version: Freeware 7.0<br/>\nOS: Windows 10</p>\n<p>Can the freeware 7.0 just not disassemble arm files? If not, what is a suitable alternative that actually works properly and displays a nice function table etc.?\nThanks!</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "8k",
    "tags": [
        "ida",
        "arm",
        "shared-object"
    ],
    "user": "PG Cubing",
    "time": "Feb 19, 2020 at 19:32",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Radare2 can disassemble .so</p>\n<pre><code>:\\&gt;file libogg_opus_encoder.so\nlibogg_opus_encoder.so; ELF 32-bit LSB shared object, ARM, version 1 (SYSV), dynamically linked, stripped\n\n:\\&gt;radare2 libogg_opus_encoder.so\n -- Disable these messages with 'e cfg.fortunes = false' in your ~/.radare2rc\n[0x00018d78]&gt; aa\n←[32m[x]←[0m Analyze all flags starting with sym. and entry0 (aa)\n[0x00018d78]&gt; pdf\n            ;-- entry.fini1:\n            ;-- section..text:\n            ;-- pc:\n            ;-- r15:\n/ (fcn) entry0 12\n|   entry0 ();\n|           0x00018d78      04009fe5       ldr r0, [0x00018d84]        ; [0x18d84:4]=0x4835c ; [15] -r-x\n|           0x00018d7c      00008fe0       add r0, pc, r0\n\\       ,=&lt; 0x00018d80      3a0f01ea       b sym.imp.__cxa_atexit      ; sym.imp.__cxa_finalize+0xc\n</code></pre>\n<p>also ghidra should be able to disassemble .so</p>\n<p>the link you posted in comments shows a functionlist and a graphical disassembly both are available in radare2 \nlook for fs,f,pdf,VV commands</p>\n<p>shown below is the same disassembly on the link youposted</p>\n<pre><code>:\\&gt;file libminecraftpe.so\nlibminecraftpe.so; ELF 32-bit LSB shared object, ARM, version 1 (SYSV), dynamically linked (uses shared libs), stripped\n\n:\\&gt;radare2 -A libminecraftpe.so\n[←[0m{ctrl+c} pressed.lags starting with sym. and entry0 (aa)\n←[32m[x]←[0m Analyze all flags starting with sym. and entry0 (aa)\n -- git pull now\n[0x002315d0]&gt; f~Crafting~Held\n0x003e2dd8 76 sym.CraftingInventoryScreenController::_handleHeldButton_int\n0x003e2dd8 1 method.CraftingInventoryScreenController._handleHeldButton_int\n[0x002315d0]&gt; s 0x3e2dd8\n[0x003e2dd8]&gt; af\n[0x003e2dd8]&gt; pdf\n            ;-- method.CraftingInventoryScreenController._handleHeldButton_int:\n/ (fcn) sym.CraftingInventoryScreenController::_handleHeldButton_int 76\n|   sym.CraftingInventoryScreenController::_handleHeldButton_int ();\n|           0x003e2dd8      f8b5           push {r3, r4, r5, r6, r7, lr}\n|           0x003e2dda      00f12c06       add.w r6, r0, 0x2c\n|           0x003e2dde      0546           mov r5, r0\n|           0x003e2de0      0f46           mov r7, r1\n|           0x003e2de2      3046           mov r0, r6\n|           0x003e2de4      5df01efb       bl sym.HeldButtonData::getCollectionIndex__const\n|           0x003e2de8      b842           cmp r0, r7\n|           0x003e2dea      0446           mov r4, r0\n|       ,=&lt; 0x003e2dec      01d0           beq 0x3e2df2\n|       |   ; CODE XREF from sym.CraftingInventoryScreenController::_handleHeldButton_int (0x3e2e22)\n|     ..--&gt; 0x003e2dee      0120           movs r0, 1\n|     ::|   0x003e2df0      f8bd           pop {r3, r4, r5, r6, r7, pc}\n|     ::`-&gt; 0x003e2df2      431c           adds r3, r0, 1\n|     `===&lt; 0x003e2df4      fbd0           beq 0x3e2dee\n|      :    0x003e2df6      3046           mov r0, r6\n|      :    0x003e2df8      5df0f6fa       bl sym.HeldButtonData::getButtonId__const\n|      :    0x003e2dfc      b5f92630       ldrsh.w r3, [r5, 0x26]\n|      :    0x003e2e00      8342           cmp r3, r0\n|      :,=&lt; 0x003e2e02      05d0           beq 0x3e2e10\n|     .---&gt; 0x003e2e04      2846           mov r0, r5\n|     ::|   0x003e2e06      2146           mov r1, r4\n|     ::|   0x003e2e08      5df012fb       bl sym.MinecraftScreenController::_handleHeldButton_int\n|     ::|   0x003e2e0c      0120           movs r0, 1\n|     ::|   0x003e2e0e      f8bd           pop {r3, r4, r5, r6, r7, pc}\n|     ::`-&gt; 0x003e2e10      3046           mov r0, r6\n|     ::    0x003e2e12      5df0effa       bl sym.HeldButtonData::getItemLocation__const\n|     ::    0x003e2e16      0328           cmp r0, 3\n|     `===&lt; 0x003e2e18      f4d1           bne 0x3e2e04\n|      :    0x003e2e1a      2846           mov r0, r5\n|      :    0x003e2e1c      2146           mov r1, r4\n|      :    0x003e2e1e      fff7d7fe       bl sym.CraftingInventoryScreenController::_handleArmorTakePlace_int\n\\      `==&lt; 0x003e2e22      e4e7           b 0x3e2dee\n[0x003e2dd8]&gt;\n</code></pre>\n<p>function list grepped for MainChunk</p>\n<pre><code>[0x003e2dd8]&gt; f~MainChunk\n0x00000000 1 class.MainChunkSource\n0x00298f1c 4 sym.MainChunkSource::getStoredChunks__const\n0x00298f1c 1 method.MainChunkSource.getStoredChunks__const\n0x00298f20 4 sym.MainChunkSource::getStoredChunks\n0x00298f20 1 method.MainChunkSource.getStoredChunks\n0x0029e558 1 method.MainChunkSource._MainChunkSource\n0x0029e5a8 18 sym.MainChunkSource::_MainChunkSource\n0x0029e5bc 320 sym.MainChunkSource::releaseChunk_LevelChunk\n0x0029e5bc 1 method.MainChunkSource.releaseChunk_LevelChunk\n0x002a0afc 102 sym.MainChunkSource::getExistingChunk_ChunkPosconst\n0x002a0afc 1 method.MainChunkSource.getExistingChunk_ChunkPosconst\n0x002be794 112 sym.MainChunkSource::MainChunkSource_std::unique_ptr_ChunkSource_std::default_delete_ChunkSource\n0x002be794 1 method.MainChunkSource.MainChunkSource_std::unique_ptr_ChunkSource_std::default_delete_ChunkSource\n0x002d60d0 174 sym.MainChunkSource::requestChunk_ChunkPosconst__ChunkSource::LoadMode\n0x002d60d0 1 method.MainChunkSource.requestChunk_ChunkPosconst__ChunkSource::LoadMode\n0x002d6180 168 sym.MainChunkSource::acquireDiscarded_std::unique_ptr_LevelChunk_std::default_delete_LevelChunk\n0x002d6180 1 method.MainChunkSource.acquireDiscarded_std::unique_ptr_LevelChunk_std::default_delete_LevelChunk\n0x005e3cb0 80 obj.vtableforMainChunkSource\n</code></pre>\n<p>the graph view</p>\n<p><a href=\"https://i.sstatic.net/SjM1o.jpg\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/SjM1o.jpg\"/></a></p>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "Feb 19, 2020 at 22:02",
            "is_accepted": true,
            "comments": [
                {
                    "user": "PG Cubing",
                    "text": "<span class=\"comment-copy\">I've tried that, but it doesn't return the same thing as IDA would (according to a tutorial I was following). You can see images of what it should return in the tutorial I'm viewing: <a href=\"https://github.com/byteandahalf/MCPE-NativeMods/wiki/4:-Setting-up-IDA\" rel=\"nofollow noreferrer\">github.com/byteandahalf/MCPE-NativeMods/wiki/4:-Setting-up-IDA</a></span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">well both the things that are shown in the link are available in radare2 i edited the answer take a look</span>",
                    "time": null
                },
                {
                    "user": "PG Cubing",
                    "text": "<span class=\"comment-copy\">Awesome! Exactly what I needed. Thank you so much!</span>",
                    "time": null
                },
                {
                    "user": "PG Cubing",
                    "text": "<span class=\"comment-copy\">Just one question: On what OS are you doing this?</span>",
                    "time": null
                },
                {
                    "user": "PG Cubing",
                    "text": "<span class=\"comment-copy\">Hmm. I don't seem to get the same output as you when I run this. For instance, <code>f~Crafting~Held</code> doesn't show any output at all. Am I doing something wrong? Also, the <code>file</code> command doesn't exist.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>No, it doesn’t support ARM files.</p>\n<p>From <a href=\"https://www.hex-rays.com/products/ida/support/download_freeware/\" rel=\"nofollow noreferrer\">the description</a>:</p>\n<blockquote>\n<p>The freeware version of IDA v7.0 comes with the following limitations:</p>\n<p>• no commercial use is allowed</p>\n<p>•   lacks all features introduced in IDA &gt; v7.0</p>\n<p>•   <strong>lacks support for many processors</strong>, file formats, etc…</p>\n<p>•   comes without technical support</p>\n</blockquote>\n</div>",
            "votes": "1",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": []
        }
    ]
}