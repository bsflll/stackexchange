{
    "title": "adding instructions in IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/8149/adding-instructions-in-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I noticed that you can't simply add an instruction in IDA. Yes, you can modify one, but not add(maybe there is such feature? Can't find it though). So I used HxD to forcibly increase the PE binary where I wanted with nops to then change the nops with what I wanted in IDA. However, I realized that screwed up all the calls and jumps that came afterwards. My question is then, how should I go on about adding instructions in a binary file? Specifically a PE one in my case. Thank you.</p>\n</div>",
    "votes": "4",
    "answers": 2,
    "views": "4k",
    "tags": [
        "ida"
    ],
    "user": "savram",
    "time": "Feb 2, 2015 at 17:50",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "<span class=\"comment-copy\">Search for some unused space, add your instructions there. My answer on <a href=\"http://reverseengineering.stackexchange.com/questions/6479/insert-jmp-detour-into-a-compiled-program/6484#6484\">this question</a> might help you.</span>",
            "time": null
        },
        {
            "user": "savram",
            "text": "<span class=\"comment-copy\">I don't have enough unused space</span>",
            "time": null
        },
        {
            "user": "user2823000",
            "text": "<span class=\"comment-copy\">increase the virtualSize of a section then?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I use Stud_Pe and I have added over 8 mb to a program using this. All you need to do is make a new .stud (sort of like adding a second .text section) and then code cave it in. Also, You shouldn't have any problems using this and then working with IDA or Olly for analysis. </p>\n<p><a href=\"http://www.cgsoftlabs.ro/studpe.html\" rel=\"nofollow\">http://www.cgsoftlabs.ro/studpe.html</a></p>\n<p>Try it out and let me know if you get stuck with it. I can show you how to use this but it should be pretty strait forward.</p>\n</div>",
            "votes": "2",
            "user": "LUser",
            "time": "Feb 9, 2015 at 12:12",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It's not an easy task. You can consider adding your own section in the PE image where to write your code and data and then link them with the original code. Or else you could try producing an assembly file from the PE and then reassembling it into new PE image. I haven't tried the second option but I think it should be possible.</p>\n<p>For the first one you could use LordPE. Here are links to it (<a href=\"https://exelab.ru/download.php?action=get&amp;n=MjA=\" rel=\"nofollow\">here</a> &amp; <a href=\"http://www.softpedia.com/get/Programming/File-Editors/LordPE.shtml\" rel=\"nofollow\">here</a>).</p>\n</div>",
            "votes": "1",
            "user": "sasho648",
            "time": "Feb 7, 2015 at 13:04",
            "is_accepted": false,
            "comments": []
        }
    ]
}