{
    "title": "Is command injection using a valid file path possible?",
    "link": "https://reverseengineering.stackexchange.com/questions/26061/is-command-injection-using-a-valid-file-path-possible",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>My question is theoretical, and not bound to python - but for the sake of simplicity, I'll use Python code snippet.</p>\n<p>Let's assume I have the following code:</p>\n<pre><code>import os\nimport sys\n\nif os.path.exist(sys.argv[1]):\n    os.system(f\"echo {sys.argv[1]}\")\n</code></pre>\n<p>Is there a way to do a command injection attack in the scenario when the unsanitized input is a path to a valid file?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "321",
    "tags": [
        "python",
        "injection",
        "command-line"
    ],
    "user": "macro_controller",
    "time": "Oct 5, 2020 at 14:16",
    "comments": [
        {
            "user": "user202729",
            "text": "<span class=\"comment-copy\">Windows or Linux?</span>",
            "time": null
        },
        {
            "user": "macro_controller",
            "text": "<span class=\"comment-copy\">Either of them interseting</span>",
            "time": null
        },
        {
            "user": "sudhackar",
            "text": "<span class=\"comment-copy\">How is this related to RE?</span>",
            "time": null
        },
        {
            "user": "sudhackar",
            "text": "<span class=\"comment-copy\">Also yes. It can lead to code execution <a href=\"https://imgur.com/9eRFeJY\" rel=\"nofollow noreferrer\">example</a></span>",
            "time": null
        },
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">@sudhackar sorry, this is not code execution. the lol executable in your example is executed by the shell, even before python runs.  The first correct example that comes to mind is a file with a name like \"abcde;ls\" where ls will be executed.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>On GNU/Linux, <code>system</code> passes any arguments to <code>/bin/sh -c \"&lt;command&gt;\"</code>. Any shell metacharacters  (e.g. <code>&amp;</code>, <code>|</code>, <code>`</code>, <code>$</code>, <code>;</code> etc.) in the command will be interpreted. So,  commands can be run using <code>`command`</code> or <code>$(command)</code> to use a subshell, or with other logic.</p>\n<p>If a file has those characters, commands could be run:</p>\n<pre><code>$ ls itworks\n$ touch '$(touch itworks)'\n$ ./myscript.py '$(touch itworks)'\n$ ls itworks\nitworks\n</code></pre>\n<p>Since the file exists, it will be passed to <code>system</code>, and any nested commands executed. You may be limited in what commands and arguments can be passed, since <code>/</code> cannot be used in the filename.</p>\n</div>",
            "votes": "1",
            "user": "multithr3at3d",
            "time": "Oct 18, 2020 at 17:18",
            "is_accepted": true,
            "comments": []
        }
    ]
}