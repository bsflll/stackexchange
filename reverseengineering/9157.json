{
    "title": "Declaration of a complex C expression",
    "link": "https://reverseengineering.stackexchange.com/questions/9157/declaration-of-a-complex-c-expression",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I used IDA Pro and got the following expression from a produced C file:</p>\n<pre><code>v25 = (*(int (**)(void))(v22 + 464))();\n</code></pre>\n<p>I am trying to figure out the meaning of the above expression with the following links:</p>\n<p><a href=\"http://www.unixwiz.net/techtips/reading-cdecl.html\" rel=\"nofollow\">http://www.unixwiz.net/techtips/reading-cdecl.html</a>\n<br/>\n<a href=\"http://www.codeproject.com/Articles/7042/How-to-interpret-complex-C-C-declarations\" rel=\"nofollow\">http://www.codeproject.com/Articles/7042/How-to-interpret-complex-C-C-declarations</a></p>\n<p>I start with <code>(v22 + 464)</code> and then go out of the parenthesis and to the left to the following <code>*(int (**)(void))</code>.</p>\n<p>But, still can't understand. Any hints?</p>\n<p>EDIT: I guess this expression is not a declaration but a function call.</p>\n<p>(v22+464) is then cast to a pointer to a pointer to a function that takes void as an argument and returns an int. Then that pointer is dereference and the () operator is applied - the function is called.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "185",
    "tags": [
        "ida",
        "c",
        "functions"
    ],
    "user": "fred26",
    "time": "Jun 17, 2015 at 12:20",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>(*(int (**)(void))(v22 + 464))()</code> is a function call (<code>v22</code> is an object (perhaps a vtable) that contains a function pointer).</p>\n</div>",
            "votes": "3",
            "user": "Jason Geffner",
            "time": "Jun 17, 2015 at 1:32",
            "is_accepted": true,
            "comments": []
        }
    ]
}