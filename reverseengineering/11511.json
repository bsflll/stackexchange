{
    "title": "Can't find \"referenced string\" in OllyDBG",
    "link": "https://reverseengineering.stackexchange.com/questions/11511/cant-find-referenced-string-in-ollydbg",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>So I am trying to reverse a program but I am not able to find any of the Strings through searching for \"referenced Strings\" or \"binary Strings\", I am new to OllyDBG and I don't know a lot about it, which is why this is driving me crazy. I'd like to know how or where I can find the Strings then or if there is another method of finding a given Assembly Line where I could start.</p>\n<p>Thank you already :) </p>\n<p>Edit: If you need any more information, just ask and I'll deliver it.</p>\n</div>",
    "votes": "4",
    "answers": 2,
    "views": "4k",
    "tags": [
        "ollydbg",
        "strings"
    ],
    "user": "njoye",
    "time": "Dec 14, 2015 at 21:45",
    "comments": [
        {
            "user": "Mynah",
            "text": "<span class=\"comment-copy\">I know this thread is old but in case this can help someone: I am new to reverse engineering myself but one thing I've learned recently when I can't find useful strings in the program I am debugging (either because of encryption or any other form of protection) is to look at names of external functions that the program is calling. Certain functions are particularly interesting and can give a good starting point to reverse the code. \"Search for → All intermodular calls\"</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>OllyDbg isn't very good at finding \"referenced strings\".</p>\n<p>I'd recommend doing the following:</p>\n<ol>\n<li>Use a hex editor to search for the given string, in both ASCII and Unicode formats.</li>\n<li>If you find the static string in your hex editor, then disassemble the binary in IDA, go to the string's address in IDA, and see if IDA found any static cross-references to that string. And if IDA didn't find any static cross-references to that string, use OllyDbg to set a hardware-read-breakpoint on the first byte of that string to find what code references it at runtime.</li>\n</ol>\n</div>",
            "votes": "2",
            "user": "Jason Geffner",
            "time": "Dec 14, 2015 at 15:49",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Your program is either packed or strings are encrypted. Since strings can be a starting point in reverse engineering, some programs store encrypted strings in binary and only decrypt them at startup or right before usage.</p>\n<p>Either way, the easiest way to check is to attach the debugger to a running application and try to “Search for → All referenced text strings” in a main program module.</p>\n</div>",
            "votes": "0",
            "user": "Vladislav Ivanov",
            "time": "Dec 14, 2015 at 16:31",
            "is_accepted": false,
            "comments": []
        }
    ]
}