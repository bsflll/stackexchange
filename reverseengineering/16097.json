{
    "title": "How can I get the shared libraries' function calls using angr",
    "link": "https://reverseengineering.stackexchange.com/questions/16097/how-can-i-get-the-shared-libraries-function-calls-using-angr",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to get all the library function calls that a binary performs in a preorder-DFT traversal of the CFG. I'm able to get the CFG like:</p>\n<pre><code>import sys, angr\nimport networkx as nx\nproj = angr.Project(sys.argv[1],auto_load_libs=False)\ncfg = proj.analyses.CFG().graph\n</code></pre>\n<p>I was able to get the CFG and I can even traverse it like this (Suppose I'm getting the correct main function's node):</p>\n<pre><code>s = nx.dfs_preorder_nodes(cfg,mainFuncNode)\nnodes = []\ntry:\n    while True:\n        nodes.append(ns.next())\nexcept:\n    pass\n</code></pre>\n<p>However I don't know how to get the function calls from the nodes (if they are actually doing it).\nI read some documentation and all I could come up with was:</p>\n<pre><code>for n in nodes:\n    if n.is_simprocedure:\n          print n.to_codenode().function\n</code></pre>\n<p>The output is all None and I'm sure that's wrong because the binary Is doing some I/O operations. So I expect to see something like:</p>\n<ul>\n<li><code>libc_puts</code></li>\n<li><code>libc_gets</code></li>\n<li>...</li>\n</ul>\n<p>I would appreciate if you could give me some better pointers. </p>\n</div>",
    "votes": "6",
    "answers": 1,
    "views": "2k",
    "tags": [
        "static-analysis",
        "python",
        "binary",
        "control-flow-graph",
        "angr"
    ],
    "user": "anon",
    "time": "Aug 16, 2017 at 8:04",
    "comments": [
        {
            "user": "perror",
            "text": "<span class=\"comment-copy\">Hmm, on this SE site we have specialists of IDApro, Radare2 and others, but I did not see a lot of people from Angr... It would be nice to try to attract some community from them! :-) @anon : Thanks for your question about Angr!</span>",
            "time": null
        },
        {
            "user": "sraboy",
            "text": "<span class=\"comment-copy\">I know OP was already there but, just for others who browse here, there is a <a href=\"https://angr.slack.com/\" rel=\"nofollow noreferrer\">Slack channel</a> with <a href=\"http://angr.io/invite.html\" rel=\"nofollow noreferrer\">automatic invites generated</a>. Hopefully the angr tag picks up here though.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>However I don't know how to get the function calls from the nodes </p>\n</blockquote>\n<p>Are you saying you want to know which function a node belongs to, or which function a node is calling?</p>\n<p>For the former, each block has a corresponding <code>CFGNode</code> object that are in the graph. Each <code>CFGNode</code> has a <code>.function_address</code> member, which tells you the address of the function that the node belongs to.</p>\n<p>For the latter, every edge in the graph is labeled with properties, and we use 'jumpkind' to mark the type of an edge. An <code>Ijk_Call</code> jumpkind means that edge is a call from a block (or a node) to a function.  </p>\n<p>By the way, angr's CFG class is more than just the <code>.graph</code> member (which is a <code>networkx.DiGraph</code> instance). You might find it easier sometimes to directly work on <code>CFG</code>, instead of manually traversing the graph.</p>\n<p>In addition, once a CFG is generated, you can access all functions by accessing <code>CFG.functions</code>. Each <code>Function</code> instance has two intra-function graphs associated with it: a <code>.graph</code> and a <code>.transition_graph</code>. You may find it easier to work with than traversing the CFG of the whole binary.</p>\n<p>In the end, if you like GUI, and you have a lot of patience, you might want to give <a href=\"https://github.com/angr/angr-management/\" rel=\"noreferrer\">angr Management</a> a try.</p>\n</div>",
            "votes": "5",
            "user": "Fish",
            "time": "Aug 16, 2017 at 9:07",
            "is_accepted": true,
            "comments": [
                {
                    "user": "anon",
                    "text": "<span class=\"comment-copy\">Thank you for the pointers. Yes I meant the latter. I also want to know. How does the CFG represent a shared library function call. Does it have a jump edge to that shared lib's location(@ptr actually) with the respective symbol name?</span>",
                    "time": null
                },
                {
                    "user": "anon",
                    "text": "<span class=\"comment-copy\">Thanks for the GUI I was able to get the functions I expected like memset, memcpy, _controlfp, etc... However I need to know if I can find these in the CFG nodes.</span>",
                    "time": null
                },
                {
                    "user": "Fish",
                    "text": "<span class=\"comment-copy\">It does have edges pointing to functions in shared libraries, even if the library is not loaded with the project.</span>",
                    "time": null
                },
                {
                    "user": "anon",
                    "text": "<span class=\"comment-copy\">Thank you! Do you know how I can see if that node is a shared lib function?</span>",
                    "time": null
                },
                {
                    "user": "Fish",
                    "text": "<span class=\"comment-copy\">First get the address of the node. If it is a function, you can get the <code>Function</code> instance by <code>cfg.functions[addr]</code>, and then access <code>.binary</code> and <code>.binary_name</code>. If it is not a function, you can call <code>project.loader.whats_at(addr)</code>.</span>",
                    "time": null
                }
            ]
        }
    ]
}