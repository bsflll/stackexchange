{
    "title": "Can I search floats / doubles in IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/8685/can-i-search-floats-doubles-in-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have two versions of the same binary, and I know that both are using a float (<code>127.0</code>) which is stored in a variable like <code>ds:dbl_7F5A28</code> (offset from binary #1).</p>\n<p>There's only one xref to that <code>dbl_</code> in both binaries, but I don't know how to find <code>127.0</code> in binary #2, so I can xref it and find the function that's using it.</p>\n<p>So, is there a way to search for float / double values in IDA?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida"
    ],
    "user": "rev",
    "time": "Apr 11, 2015 at 15:49",
    "comments": [
        {
            "user": "user1743",
            "text": "<span class=\"comment-copy\">I'm not sure if this helps at all, but would it be easier to search for the instructions that manipulate floating point values?</span>",
            "time": null
        },
        {
            "user": "rev",
            "text": "<span class=\"comment-copy\">@blahfish I'm analyzing a game, and floating point values are (ab)used a lot, so that wouldn't help</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There are some ways to do this.</p>\n<ol>\n<li>Text search. Just press Alt-T in the disassembly window and enter 127.0. This will probably not work if in your current idb version this value is not recognized as floating point number.</li>\n<li>Binary search. Go to the binary where your known value resides, go to the address of this value and undefine it/see its byte contents any other way. You will see the binary representation on the same place. Search it as a binary on the second binary and you'll probably find desirable. </li>\n</ol>\n<p>Good luck</p>\n</div>",
            "votes": "1",
            "user": "w s",
            "time": "Apr 12, 2015 at 5:30",
            "is_accepted": false,
            "comments": [
                {
                    "user": "rev",
                    "text": "<span class=\"comment-copy\">The problem is that the binary is kinda big (200MB+), so text search is really, really slow and not effective. Binary search didn't work (searched for <code>0x42fe0000</code> -&gt; <code>127.0</code>)</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">what does it mean didn't work ? Gave too much alternatives or did not find anything ? Did you try binary search on first executable ?</span>",
                    "time": null
                },
                {
                    "user": "rev",
                    "text": "<span class=\"comment-copy\">Did not find anything, however, I just found the function by xref-ing other known functions, and it does use the number (as I supposed). Therefore, not a reliable way to search for floats.</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">Does binary representation looks the same in both executables ?</span>",
                    "time": null
                },
                {
                    "user": "rev",
                    "text": "<span class=\"comment-copy\">It 'does': in one binary it's like <code>127.0</code>, in the other one it's in hexadecimal form. I can, of course, make both be <code>127.0</code> or <code>0x42fe0000 </code> by redefining the type, but if I need to find it first, there's no way I can do this.</span>",
                    "time": null
                }
            ]
        }
    ]
}