{
    "title": "Bypassing IsDebuggerPresent [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/25408/bypassing-isdebuggerpresent",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>Closed</b>. This question needs <a href=\"/help/closed-questions\">details or clarity</a>. It is not currently accepting answers.\n                                \n                            </div>\n</div>\n</div>\n</div>\n</div>\n<hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n<div class=\"fw-nowrap fc-black-500\">\n<div class=\"d-flex fd-column lh-md\">\n<div class=\"mb0 d-flex\">\n<div class=\"flex--item mr8\">\n<svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\"><path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\"></path></svg>\n</div>\n<p><b>Want to improve this question?</b> Add details and clarify the problem by <a href=\"/posts/25408/edit\">editing this post</a>.</p>\n</div>\n<div class=\"mb0 mt6 d-flex\">\n<p class=\"ml24 pl2\">Closed <span class=\"relativetime\" title=\"2020-07-03 21:50:04Z\">4 years ago</span>.</p>\n</div>\n<div class=\"ml24 pl2\">\n</div>\n</div>\n</div>\n<div class=\"mt24 d-flex gsx gs8\">\n<a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/25408/edit\">\n                        Improve this question\n                    </a>\n</div>\n</aside>\n</div>\n<p>I am currently trying to attach a debugger to a program with a callback for IsDebuggerPresent. Normally, i would patch the program to pass over this check, but patching the program is not an option. How would I go about getting a debugger attached so dynamic analysis is possible?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "370",
    "tags": [
        "debugging"
    ],
    "user": "nathan",
    "time": "4 years ago",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Hi and welcome to RE.SE! For starters, what debugger is this? Your question is unclear. Mentioning <code>IsDebuggerPresent</code> indicates that this is on Windows, but even that may be a fallacy on my part. So what debugger, what OS? If this is <code>IsDebuggerPresent</code> on Windows, it's implemented by checking for some value in the PEB, IIRC. So presumably you could attempt to set a hardware breakpoint there and be notified whenever some code access this particular piece of data.</span>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">Why is \"patching the program is not an option.\"? can you use breakpoints after attaching?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>as I understand your question, if your binary doesn't have a packer / protector, and you can't use any way to hook the original source, try using a kernel hooke like TitanHide, and observe the behavior, now if not having anything so complicated check the sides of your debugger look for flags and find the \"zero flag\", and change your return, this is something simple, but if you specify better I can give you another answer, good luck.</p>\n</div>",
            "votes": "1",
            "user": "Happy",
            "time": "Jul 3, 2020 at 17:45",
            "is_accepted": false,
            "comments": []
        }
    ]
}