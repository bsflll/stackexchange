{
    "title": "DLL - Dynamic Analysis on IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/4271/dll-dynamic-analysis-on-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm \"middle-new\" in re and I have to debug a dll's function. How can I tell to IDA : start function XXX with parameters A, B and C ?\nIs there a solution or a plugin doing that ? I've tried doing that with rundll32.exe but unsucessfully.</p>\n<p>I have no experience on ollydbg this is why I ask for a IDA solution</p>\n<p>Thanks for helping !</p>\n</div>",
    "votes": "3",
    "answers": 2,
    "views": "7k",
    "tags": [
        "ida",
        "dll",
        "dynamic-analysis"
    ],
    "user": "user4559",
    "time": "May 5, 2014 at 13:29",
    "comments": [
        {
            "user": "Henno Brandsma",
            "text": "<span class=\"comment-copy\">rundll32.exe should do it. You can set parameters in the debugger settings.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Based on <a href=\"https://stackoverflow.com/questions/3207365/how-to-use-rundll32-to-execute-dll-function\">this answer</a>, rundll only supports running functions with a specific signature. I would recommend writing a simple executable that loads it. For example, in c, you could call <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms684175%28v=vs.85%29.aspx\" rel=\"nofollow noreferrer\">LoadLibrary</a>(\"yourdll.dll\") and then <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms683212%28v=vs.85%29.aspx\" rel=\"nofollow noreferrer\">GetProcAddress</a>(\"yourfunc\") and then call it that way. See MSDN (linked) for more info.</p>\n<p>In IDA, you would then give your executable as the process, but your dll as the input file. That will allow you to set breakpoints that IDA will set when the dll is loaded. It also gives you control over the parameters since you can just pass them through from the command line.</p>\n</div>",
            "votes": "4",
            "user": "Community",
            "time": "May 23, 2017 at 12:37",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user4559",
                    "text": "<span class=\"comment-copy\">Thanks, I wrote a executable using this mecanism and it works perfectly! =)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>IDA Pro has this mechanism called <a href=\"http://www.hexblog.com/?p=112\" rel=\"nofollow\">AppCall</a> which basically allows you to set up the parameters of a function and call it directly. </p>\n<blockquote>\n<p>Briefly, Appcall is a mechanism used to call functions inside the debugged program from the debugger or your script as if it were a built-in function. If you’ve used GDB (call command), VS (Immediate window), or Borland C++ Builder then you’re already familiar with such functionality.</p>\n</blockquote>\n<p>Now , this might not be directly applicable to your situation, bit I guess creating a small wrapper program and using appcall on it could make things easier. </p>\n</div>",
            "votes": "4",
            "user": "0xea",
            "time": "May 5, 2014 at 14:11",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user4559",
                    "text": "<span class=\"comment-copy\">Thanks for answer, I didn't know AppCall system but it could be usefull.</span>",
                    "time": null
                }
            ]
        }
    ]
}