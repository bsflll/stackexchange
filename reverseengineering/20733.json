{
    "title": "How do I set the return type for this type declaration?",
    "link": "https://reverseengineering.stackexchange.com/questions/20733/how-do-i-set-the-return-type-for-this-type-declaration",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a function that seems to calculate the length of a string.</p>\n<p>I have made this type declaration and it does kind of work as IDA now flags the string correctly. </p>\n<p><code>__int64 __fastcall strlen(char strlen_string);</code></p>\n<p>Now, RAX seems to hold the length of the string. But doing <code>strlen@&lt;rax&gt;</code> tells me that 'location rax is not allowed here'. Also, I'd like to flag exactly where the length is being used.</p>\n<p>This is what I have now:</p>\n<pre><code>mov     rdi, rcx ; strlen_string\ncall    strlen\nmov     [rbp+var001], rax  \n</code></pre>\n<p>and this is what I want to have with the new type declaration:</p>\n<pre><code>mov     rdi, rcx ; strlen_string\ncall    strlen\nmov     [rbp+var001], rax ; string_length\n</code></pre>\n<p>How can I do that? Is it even possible? </p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "790",
    "tags": [
        "ida"
    ],
    "user": "G. Ramistella",
    "time": "Feb 27, 2019 at 17:26",
    "comments": [
        {
            "user": "Johann Aydinbas",
            "text": "<span class=\"comment-copy\">If I'm not mistaken you can only specify argument locations when you use <code>__usercall</code>, you can't combine custom locations with predefined calling conventions like <code>__fastcall</code>. I have also never seen IDA name return value locations so unless I've missed it the whole time, you'd probably need to write your own script for that.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Specifying argument locations syntax is only available in the specific <code>__usercall</code> pseudo calling convention, which IDA supports precisely for that use case, where no other calling convention fit.</p>\n<p>However, as mentioned in the comments, setting IDA's return value location has little impact, and it is impossible to have IDA automatically set a comment for the returned value (only arguments support that). You can, however, write a short IDAPython script for that.</p>\n</div>",
            "votes": "0",
            "user": "NirIzr",
            "time": "Feb 28, 2019 at 10:07",
            "is_accepted": true,
            "comments": []
        }
    ]
}