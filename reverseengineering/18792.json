{
    "title": "Is there a good place to search information about known DLLs?",
    "link": "https://reverseengineering.stackexchange.com/questions/18792/is-there-a-good-place-to-search-information-about-known-dlls",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm just starting in learning some Reverse Engineering and there are a lot of DLLs being imported or called at runtime and I'd like to know what they do. I would have expected that there would be documentation pages for common DLLs, or at least all of Microsoft's DLLs, but mostly when I Google for information about DLLs there are a lot of <em>How to fix your missing VCRUNTIME140.dll</em> or such.</p>\n<p>Is there really no great way of getting information about DLLs asides from looking at them yourself or happening to find answers or references at various places online?</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "556",
    "tags": [
        "windows",
        "dll",
        "libraries"
    ],
    "user": "theTheodidact",
    "time": "Jul 13, 2018 at 19:14",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">So far your question does not seem to be about reverse engineering. I you are asking this as user, try <a href=\"https://superuser.com/\">superuser.com</a>. If  as a developer: <a href=\"https://stackoverflow.com/\">stackoverflow.com</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm sorry to have to correct you, but <code>VCRUNTIME140.dll</code> is for example <strong>no</strong> known DLL (checked on Windows 7). \"Known DLLs\" is in fact a term that refers to a well-defined subset and the NT object manager is <em>exactly</em> the way to find out about which ones are known DLLs.</p>\n<p>But that's likely not what you're asking. Instead you might want to try out the <a href=\"http://www.dependencywalker.com/\" rel=\"nofollow noreferrer\">Dependency Walker</a> or a similar tool to find out what functions are exported by certain DLLs. Then look up these functions on <a href=\"https://msdn.microsoft.com\" rel=\"nofollow noreferrer\">MSDN</a> to find out what they're doing.</p>\n<p>But if <em>that</em> is seriously where you are coming from, you may want to start by grabbing a book on Win32 API programming or read some tutorials. Either way reverse engineering should <em>follow</em> the engineering part. Which is to say that the engineering expertise is a prerequisite. In your case that means intimate knowledge of lots of aspects of Windows <em>already</em> as a prerequisite.</p>\n<p>Anyway, DLLs have gotten messy/orderly depending on whom you ask. There are so-called API sets which Windows uses since Windows 7 (IIRC) to group functions.</p>\n<p>Check out these two resources regarding API sets:</p>\n<ul>\n<li><a href=\"https://www.nirsoft.net/articles/windows_7_kernel_architecture_changes.html\" rel=\"nofollow noreferrer\">Windows 7 Kernel Architecture Changes - api-ms-win-core files\n</a> ... the title is a misnomer and seems to refer more to kernel32.dll than to the actual Windows kernel.</li>\n<li><a href=\"https://www.geoffchappell.com/studies/windows/win32/apisetschema/\" rel=\"nofollow noreferrer\">The API set schema</a></li>\n</ul>\n<p>Hope this helps a bit to get you started, but quite honestly if you don't already have an excellent working knowledge of Windows programming and architecture you might want to postpone picking up Windows targets for reverse engineering.</p>\n<hr/>\n<p><strong>Actual</strong> known DLLs on a Windows 7. You can see (and export) such a list yourself using a tool like <a href=\"https://bitbucket.org/assarbad/ntobjx/downloads/\" rel=\"nofollow noreferrer\">this one</a>.</p>\n<pre><code>\\KnownDlls [Directory]\n    advapi32.dll [Section]\n    api-ms-win-downlevel-advapi32-l1-1-0.dll [Section]\n    api-ms-win-downlevel-normaliz-l1-1-0.dll [Section]\n    api-ms-win-downlevel-ole32-l1-1-0.dll [Section]\n    api-ms-win-downlevel-shlwapi-l1-1-0.dll [Section]\n    api-ms-win-downlevel-user32-l1-1-0.dll [Section]\n    api-ms-win-downlevel-version-l1-1-0.dll [Section]\n    CFGMGR32.dll [Section]\n    clbcatq.dll [Section]\n    COMCTL32.dll [Section]\n    COMDLG32.dll [Section]\n    CRYPT32.dll [Section]\n    DEVOBJ.dll [Section]\n    difxapi.dll [Section]\n    gdi32.dll [Section]\n    IERTUTIL.dll [Section]\n    IMAGEHLP.dll [Section]\n    IMM32.dll [Section]\n    kernel32.dll [Section]\n    KERNELBASE.dll [Section]\n    KnownDllPath [SymbolicLink] -&gt; C:\\Windows\\system32\n    LPK.dll [Section]\n    MSASN1.dll [Section]\n    MSCTF.dll [Section]\n    MSVCRT.dll [Section]\n    NORMALIZ.dll [Section]\n    NSI.dll [Section]\n    ntdll.dll [Section]\n    ole32.dll [Section]\n    OLEAUT32.dll [Section]\n    profapi.dll [Section]\n    PSAPI.DLL [Section]\n    rpcrt4.dll [Section]\n    sechost.dll [Section]\n    Setupapi.dll [Section]\n    SHELL32.dll [Section]\n    SHLWAPI.dll [Section]\n    URLMON.dll [Section]\n    user32.dll [Section]\n    USERENV.dll [Section]\n    USP10.dll [Section]\n    WININET.dll [Section]\n    WINTRUST.dll [Section]\n    WLDAP32.dll [Section]\n    WS2_32.dll [Section]\n\\KnownDlls32 [Directory]\n    advapi32.dll [Section]\n    api-ms-win-downlevel-advapi32-l1-1-0.dll [Section]\n    api-ms-win-downlevel-normaliz-l1-1-0.dll [Section]\n    api-ms-win-downlevel-ole32-l1-1-0.dll [Section]\n    api-ms-win-downlevel-shlwapi-l1-1-0.dll [Section]\n    api-ms-win-downlevel-user32-l1-1-0.dll [Section]\n    api-ms-win-downlevel-version-l1-1-0.dll [Section]\n    CFGMGR32.dll [Section]\n    clbcatq.dll [Section]\n    COMCTL32.dll [Section]\n    COMDLG32.dll [Section]\n    CRYPT32.dll [Section]\n    CRYPTBASE.dll [Section]\n    DEVOBJ.dll [Section]\n    difxapi.dll [Section]\n    gdi32.dll [Section]\n    IERTUTIL.dll [Section]\n    IMAGEHLP.dll [Section]\n    IMM32.dll [Section]\n    kernel32.dll [Section]\n    KERNELBASE.dll [Section]\n    KnownDllPath [SymbolicLink] -&gt; C:\\Windows\\syswow64\n    LPK.dll [Section]\n    MSASN1.dll [Section]\n    MSCTF.dll [Section]\n    MSVCRT.dll [Section]\n    NORMALIZ.dll [Section]\n    NSI.dll [Section]\n    ntdll.dll [Section]\n    ole32.dll [Section]\n    OLEAUT32.dll [Section]\n    profapi.dll [Section]\n    PSAPI.DLL [Section]\n    rpcrt4.dll [Section]\n    sechost.dll [Section]\n    Setupapi.dll [Section]\n    SHELL32.dll [Section]\n    SHLWAPI.dll [Section]\n    SspiCli.dll [Section]\n    URLMON.dll [Section]\n    user32.dll [Section]\n    USERENV.dll [Section]\n    USP10.dll [Section]\n    WININET.dll [Section]\n    WINTRUST.dll [Section]\n    WLDAP32.dll [Section]\n    WS2_32.dll [Section]\n</code></pre>\n</div>",
            "votes": "3",
            "user": "0xC0000022L",
            "time": "Jul 13, 2018 at 21:44",
            "is_accepted": true,
            "comments": [
                {
                    "user": "theTheodidact",
                    "text": "<span class=\"comment-copy\">@0xC0000022L Thank you! Your answer was helpful in helping me to understand what I <i>don't</i> understand, and provided helpful resources for reading. For those who are interested, <a href=\"http://www.processlibrary.com/en/\" rel=\"nofollow noreferrer\">this is a version of a site that was more along what I was thinking when I originally asked the question</a>.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>if they are Microsoft dlls you are interested to know about \nthen ms normally provides a concise description of its  dlls functionality in it FileVersion information      </p>\n<p>also other legitimate dlls do provide this information     </p>\n<p>(malware dlls or unknown authors dlls may not have it or may be faked up so it is just an indicator that can be trusted with a trusted base of dll not for arbitrary binaries )</p>\n<p>you can right click the dll in question and look at the Details Tab </p>\n<p><a href=\"https://i.sstatic.net/iPbxV.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/iPbxV.png\"/></a></p>\n<p>or you can script it to dump a bunch of dlls as shown below</p>\n<p>contents of batch file</p>\n<pre><code>C:\\&gt;cat dlldesc.bat\n@echo off\nfor /f %%i in ('dir /s /b c:\\windows\\system32\\*.dll') do powershell -c \"(((get-command \"%%i).FileVersionInfo).FileDescri\nption)\"\n</code></pre>\n<p>result on execution </p>\n<pre><code>C:\\&gt;dlldesc.bat\nAnywhere access client\nacadficn\nEase of access  control panel\nMicrosoft Internet Account Manager Resources\nAccess Control List Editor\nSecurity Descriptor Editor\nCompatibility Tab Shell Extension Library\nAction Center\nAction Center Control Panel\nUnattend Action Queue Generator / Executor\nADs Router Layer DLL\nActiveX Interface Marshaling Library\nADAL.Native for x86\nIEAK Global Policy Template Parser\nAdministrative Templates Extension\nadprovider DLL\nADs LDAP Provider DLL\nADs LDAP Provider C DLL\nADs LDAP Provider DLL\nADs Windows NT Provider DLL\nSecurity Audit Schema DLL\nTerminate batch job (Y/N)? y\n\nC:\\&gt;\n</code></pre>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "Jul 15, 2018 at 19:26",
            "is_accepted": false,
            "comments": []
        }
    ]
}