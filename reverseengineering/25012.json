{
    "title": "IDA pro not showing function names properly",
    "link": "https://reverseengineering.stackexchange.com/questions/25012/ida-pro-not-showing-function-names-properly",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am working with a C++ application in IDA and whenever I name a function with a :: or a ~ symbol it shows up in the function window as an underscore which is very hard to read (ex. Class::Function shows up as Class__Function)</p>\n<p>How can I make it so that in the function window it will show the actual symbols and not underscores? Every database that I open shows the function names like this except mine.</p>\n<p>I am using IDA Pro 7.0</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "symbols"
    ],
    "user": "username3630",
    "time": "May 14, 2020 at 16:08",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Hi and welcome to RE.SE. These names are invalid in IDA, so that's why. However, I think you can enable the demangled names in comments. I'll have a look when I have an actual IDA in front of me.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can't simply name a function with these characters.</p>\n<p>However, IDA can read mangled names and \"demangle\" them, showing their prototype with the C++ original symbols.</p>\n<p>Basically, you want to write mangled names yourself, so that IDA will demangle them to show what you want to see.</p>\n<p>There are different, sometimes complex, rules for mangling names. Here is an example for Visual Studio applications: <a href=\"https://en.wikiversity.org/wiki/Visual_C%2B%2B_name_mangling\" rel=\"nofollow noreferrer\">https://en.wikiversity.org/wiki/Visual_C%2B%2B_name_mangling</a></p>\n<p>Just a basic example:\nName a function:\n<code>??1@ClassName@@@Z</code> will be translated into <code>ClassName::~ClassName()</code></p>\n<p>Edit:\nNames will show as comment. If you want them to show as actual names, open Options menu, Demangled names and choose \"names\".</p>\n</div>",
            "votes": "1",
            "user": "Yotamz",
            "time": "May 16, 2020 at 13:24",
            "is_accepted": false,
            "comments": []
        }
    ]
}