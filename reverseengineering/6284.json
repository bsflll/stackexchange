{
    "title": "Add Section to pe file function error [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/6284/add-section-to-pe-file-function-error",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>Closed.</b> This question is <a href=\"/help/closed-questions\">off-topic</a>. It is not currently accepting answers.\n                                \n                            </div>\n</div>\n</div>\n</div>\n</div>\n<hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n<div class=\"fw-nowrap fc-black-500\">\n<div class=\"d-flex fd-column lh-md\">\n<div class=\"mb0 d-flex\">\n<div class=\"flex--item mr8\">\n<svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\"><path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\"></path></svg>\n</div>\n<p> Questions on <b>software development</b> are off-topic here, but can be asked on <a href=\"http://stackoverflow.com/about\">Stack Overflow</a>.</p>\n</div>\n<div class=\"mb0 mt6 d-flex\">\n<p class=\"ml24 pl2\">Closed <span class=\"relativetime\" title=\"2014-09-26 15:50:11Z\">10 years ago</span>.</p>\n</div>\n<div class=\"ml24 pl2\">\n</div>\n</div>\n</div>\n<div class=\"mt24 d-flex gsx gs8\">\n<a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/6284/edit\">\n                        Improve this question\n                    </a>\n</div>\n</aside>\n</div>\n<p>I'm having some strange errors with the following function which adds a section to a pe executable. When I run the program I get the success message, when I proceed to try to open the executable in ollydbg I get an invalid file error, I then open it in LordPE and find that the section has been added and everything seems to be in order, when I again open the executable in ollydbg it opens the executable and I can see that the section has been added though all the fields aside from section name are set to 0. I have tried this many times and get the same result with different executables. </p>\n<pre><code>void addSection(char* fileName)\n{\nHANDLE hFile = CreateFile(fileName, GENERIC_READ | GENERIC_WRITE, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);\nif(hFile !=INVALID_HANDLE_VALUE){\n    DWORD fileSize = GetFileSize(hFile, NULL);\n    BYTE *byte = new BYTE[fileSize];\n    DWORD numberOfBytesReadTracker;\n    ReadFile(hFile, byte, fileSize, &amp;numberOfBytesReadTracker, NULL);\n\n    IMAGE_DOS_HEADER *dosHeader = (IMAGE_DOS_HEADER*)byte;\n    IMAGE_NT_HEADERS *ntHeader = (IMAGE_NT_HEADERS*)((DWORD)byte+dosHeader-&gt;e_lfanew);\n    if(dosHeader-&gt;e_magic==IMAGE_DOS_SIGNATURE &amp;&amp; ntHeader-&gt;Signature == IMAGE_NT_SIGNATURE){\n        IMAGE_FILE_HEADER *fileHeader = (IMAGE_FILE_HEADER*)((DWORD)byte+dosHeader-&gt;e_lfanew+sizeof(IMAGE_NT_SIGNATURE));\n        IMAGE_OPTIONAL_HEADER *optionalHeader = (IMAGE_OPTIONAL_HEADER*)((DWORD)byte+dosHeader-&gt;e_lfanew+sizeof(IMAGE_NT_SIGNATURE)+sizeof(IMAGE_FILE_HEADER));\n        IMAGE_SECTION_HEADER *sectionHeader = (IMAGE_SECTION_HEADER*)((DWORD)ntHeader+sizeof(IMAGE_NT_HEADERS));\n\n        const char *sectionName = \"AddedSec\";\n        ZeroMemory(&amp;sectionHeader[fileHeader-&gt;NumberOfSections], sizeof(IMAGE_SECTION_HEADER));\n        CopyMemory(&amp;sectionHeader[fileHeader-&gt;NumberOfSections].Name, sectionName, 8);\n        sectionHeader[fileHeader-&gt;NumberOfSections].Characteristics = 0x60500060;\n        sectionHeader[fileHeader-&gt;NumberOfSections].Misc.VirtualSize = 0x1000;\n        sectionHeader[fileHeader-&gt;NumberOfSections].VirtualAddress = sectionHeader[fileHeader-&gt;NumberOfSections-1].VirtualAddress+optionalHeader-&gt;SectionAlignment;\n        sectionHeader[fileHeader-&gt;NumberOfSections].SizeOfRawData = optionalHeader-&gt;FileAlignment;\n        sectionHeader[fileHeader-&gt;NumberOfSections].PointerToRawData = sectionHeader[fileHeader-&gt;NumberOfSections-1].PointerToRawData+sectionHeader[fileHeader-&gt;NumberOfSections-1].SizeOfRawData;\n\n        fileHeader-&gt;NumberOfSections = fileHeader-&gt;NumberOfSections+1;\n        optionalHeader-&gt;SizeOfImage = optionalHeader-&gt;SizeOfImage+alignToSectionAlignment(sectionHeader[fileHeader-&gt;NumberOfSections].Misc.VirtualSize, optionalHeader-&gt;SectionAlignment);\n        cout &lt;&lt; \"ADDED SECTION\" &lt;&lt; endl;\n        SetFilePointer(hFile, 0, NULL, FILE_BEGIN);\n        WriteFile(hFile, byte, fileSize, &amp;numberOfBytesReadTracker, NULL);\n    }else{\n        cout &lt;&lt; \"Is not a PE executbale\" &lt;&lt; endl;\n    }\n    CloseHandle(hFile);\n}\n</code></pre>\n<p>}</p>\n</div>",
    "votes": "-1",
    "answers": 2,
    "views": "985",
    "tags": [
        "ollydbg",
        "c++"
    ],
    "user": "user28130",
    "time": "10 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<pre><code>IMAGE_SECTION_HEADER *sectionHeader = (IMAGE_SECTION_HEADER*)((DWORD)ntHeader+sizeof(IMAGE_NT_HEADERS));\n</code></pre>\n<p>The line above is incorrect. It should be:</p>\n<pre><code>IMAGE_SECTION_HEADER *sectionHeader = (IMAGE_SECTION_HEADER*)((DWORD)ntHeader+sizeof(IMAGE_NT_SIGNATURE)+sizeof(IMAGE_FILE_HEADER)+fileHeader-&gt;SizeOfOptionalHeader);\n</code></pre>\n<p>You're setting the <code>IMAGE_SCN_ALIGN_16BYTES</code> flag in <code>Characteristics</code>, though this is only valid for object files.</p>\n<pre><code>sectionHeader[fileHeader-&gt;NumberOfSections].VirtualAddress = sectionHeader[fileHeader-&gt;NumberOfSections-1].VirtualAddress+optionalHeader-&gt;SectionAlignment;\n</code></pre>\n<p>The line above will cause problems if the last section in the original PE file has a virtual size greater than the section alignment. </p>\n<pre><code>sectionHeader[fileHeader-&gt;NumberOfSections].PointerToRawData = sectionHeader[fileHeader-&gt;NumberOfSections-1].PointerToRawData+sectionHeader[fileHeader-&gt;NumberOfSections-1].SizeOfRawData;\n</code></pre>\n<p>The line above will cause problems if the last section in the original PE file has a raw size that is not a multiple of the file alignment.</p>\n<pre><code>fileHeader-&gt;NumberOfSections = fileHeader-&gt;NumberOfSections+1;\n</code></pre>\n<p>The line above will cause problems if the original PE file had 65535 sections.</p>\n<pre><code>optionalHeader-&gt;SizeOfImage = optionalHeader-&gt;SizeOfImage+alignToSectionAlignment(sectionHeader[fileHeader-&gt;NumberOfSections].Misc.VirtualSize, optionalHeader-&gt;SectionAlignment);\n</code></pre>\n<p>The line above should be:</p>\n<pre><code>optionalHeader-&gt;SizeOfImage = optionalHeader-&gt;SizeOfImage+alignToSectionAlignment(sectionHeader[fileHeader-&gt;NumberOfSections-1].Misc.VirtualSize, optionalHeader-&gt;SectionAlignment);\n</code></pre>\n<p>Your code assumes that there's space between the last <code>IMAGE_SECTION_HEADER</code> and the beginning of the first section to add another <code>IMAGE_SECTION_HEADER</code>; this isn't always the case.</p>\n<p>Also, it's very likely that the new section's <code>PointerToRawData</code> + <code>SizeOfRawData</code> is greater than the size of the file, which will cause the loader to fail.</p>\n<p>In the future, please post these types of programming questions to <a href=\"https://stackoverflow.com/\">https://stackoverflow.com/</a> instead.</p>\n</div>",
            "votes": "3",
            "user": "Community",
            "time": "May 23, 2017 at 12:37",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Consider using <code>TitanEngine</code> (<a href=\"https://bitbucket.org/mrexodia/titanengine-update\" rel=\"nofollow\">https://bitbucket.org/mrexodia/titanengine-update</a>)</p>\n<p>and its function <code>AddNewSection</code> or <code>AddNewSectionEx</code>.</p>\n<p>Or have a look how its implemented there <a href=\"https://bitbucket.org/mrexodia/titanengine-update/src/50379e53e9f3a1d9cf835e37e2fd7cbade61dc6a/TitanEngine/TitanEngine.PE.Section.cpp?at=master#cl-512\" rel=\"nofollow\">https://bitbucket.org/mrexodia/titanengine-update/src/50379e53e9f3a1d9cf835e37e2fd7cbade61dc6a/TitanEngine/TitanEngine.PE.Section.cpp?at=master#cl-512</a></p>\n</div>",
            "votes": "0",
            "user": "pHiL",
            "time": "Sep 23, 2014 at 12:00",
            "is_accepted": false,
            "comments": []
        }
    ]
}