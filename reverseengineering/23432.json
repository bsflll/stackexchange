{
    "title": "Unable to intercept traffic of an android app even after patching ssl pinning",
    "link": "https://reverseengineering.stackexchange.com/questions/23432/unable-to-intercept-traffic-of-an-android-app-even-after-patching-ssl-pinning",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Recently, I was trying to test an app developed on <strong>Rhomobile</strong>, I setup a proxy with <strong>burp</strong>, and of course I have installed burp certificate on my device hence I can intercept other apps on my device but I am unable to see the traffic of the app in question on burp suite instead the app works fine and connects to the remote server without even appearing an error alert of the burp suite. in reversing the app I concluded that it is using https protocol to connect to the server. even typically apps targeting android api level 24 and above, a network_security_config.xml should be specified and in my reversing I created that file and set it its location on manifest file but nothing avail. then these questions pop into my mind I would be very pleased if you can clear it.  </p>\n<p><strong>1. in general, what am I missing? or where else should I look at?</strong></p>\n<p><strong>2. specifically Is an app developed on rhomobile is proxy unaware app?</strong></p>\n<p><strong>3. if the issue is associated with certificate pinning, typically the alert tab of the burp suite would have shown it, why the app is working fine and connecting to the server while other apps leave an error in the alert tab of burp suite? if I conclude that it is a proxy unaware app, how can I finally intercept its traffic?</strong> </p>\n<p><em>any help would be appreciated.</em></p>\n<p><strong><em>Thanks,</em></strong></p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "833",
    "tags": [
        "ida",
        "disassembly",
        "debugging",
        "android",
        "patch-reversing"
    ],
    "user": "hanan",
    "time": "Mar 20, 2020 at 10:49",
    "comments": [
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">The app my use raw TCP or UDP sockets. Those are not affected by the proxy settings.</span>",
            "time": null
        },
        {
            "user": "hanan",
            "text": "<span class=\"comment-copy\">@Robert, how can I intercept those packets?</span>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">You need to a machine that receives all IP packets (redirect all traffic on IP level). The easiest was is to use a Linux PC with Wifi adapter and use the Wifi adapter to set-up a Wifi hotspot. Then you can e.g. use mitmproxy in transparent mode on that PC and redirect the traffic via iptables to mitmproxy or just sniff the data using Wireshark.</span>",
            "time": null
        },
        {
            "user": "hanan",
            "text": "<span class=\"comment-copy\">can I implement this on windows? any online guide would you suggest to do this?</span>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">You can use \"Virtual WiFi\"/\"Internet connection sharing\" feature of Windows to make a hotspot. This should enable you to sniff via Wireshark but mitmproxy in transparent mode is AFAIK not possible on Windows at least I don't know a way.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Have a look at this article :\n<a href=\"https://medium.com/@ved_wayal/hail-frida-the-universal-ssl-pinning-bypass-for-android-e9e1d733d29\" rel=\"nofollow noreferrer\">https://medium.com/@ved_wayal/hail-frida-the-universal-ssl-pinning-bypass-for-android-e9e1d733d29</a></p>\n</div>",
            "votes": "-2",
            "user": "alone",
            "time": "Mar 20, 2020 at 13:05",
            "is_accepted": false,
            "comments": [
                {
                    "user": "hanan",
                    "text": "<span class=\"comment-copy\">but just this one needs a rooted device!</span>",
                    "time": null
                },
                {
                    "user": "alone",
                    "text": "<span class=\"comment-copy\">use an emulator as it describe in acrticle. genymotion is ok for this.</span>",
                    "time": null
                },
                {
                    "user": "hanan",
                    "text": "<span class=\"comment-copy\">already tried it on genymotion the app crashes, or stops. always showing the message <code>this app stopped</code></span>",
                    "time": null
                },
                {
                    "user": "alone",
                    "text": "<span class=\"comment-copy\">use arm translator  <a href=\"https://github.com/m9rco/Genymotion_ARM_Translation\" rel=\"nofollow noreferrer\">github.com/m9rco/Genymotion_ARM_Translation</a>  Based on your android arch</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@alone hi and welcome to RE.SE. You should really edit these additional pieces of information into your answer. It would also be helpful to give a meaningful excerpt of the contents from that linked Medium article. In a few years from now the link may have gone stale and your answer becomes useless this way. Thanks for your understanding.</span>",
                    "time": null
                }
            ]
        }
    ]
}