{
    "title": "Hooking the BootClassLoader [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/8269/hooking-the-bootclassloader",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>Closed.</b> This question is <a href=\"/help/closed-questions\">off-topic</a>. It is not currently accepting answers.\n                                \n                            </div>\n</div>\n</div>\n</div>\n</div>\n<hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n<div class=\"fw-nowrap fc-black-500\">\n<div class=\"d-flex fd-column lh-md\">\n<div class=\"mb0 d-flex\">\n<div class=\"flex--item mr8\">\n<svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\"><path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\"></path></svg>\n</div>\n<p> This question does not appear to be about reverse engineering within the scope defined in the <a href=\"https://reverseengineering.stackexchange.com/help/on-topic\">help center</a>.</p>\n</div>\n<div class=\"mb0 mt6 d-flex\">\n<p class=\"ml24 pl2\">Closed <span class=\"relativetime\" title=\"2015-02-21 09:40:56Z\">10 years ago</span>.</p>\n</div>\n<div class=\"ml24 pl2\">\n</div>\n</div>\n</div>\n<div class=\"mt24 d-flex gsx gs8\">\n<a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/8269/edit\">\n                        Improve this question\n                    </a>\n</div>\n</aside>\n</div>\n<p>According to Wikipedia, there are 3 class loaders.</p>\n<p>The Boot Class-Loader which loads everything in RT.jar and /../jre/lib</p>\n<p>Then the extensions class loader and the system class loader.</p>\n<p>I'm only interested in the Boot class loader because I want to hook it and redefine a class in RT.jar without all the legality issues that come with <code>-Xbootclasspath:/p</code>. </p>\n<p>Docs: <a href=\"http://docs.oracle.com/cd/E13150_01/jrockit_jvm/jrockit/jrdocs/refman/optionX.html\" rel=\"nofollow\">http://docs.oracle.com/cd/E13150_01/jrockit_jvm/jrockit/jrdocs/refman/optionX.html</a></p>\n<blockquote>\n<p>Note: Applications that use this option to override a class in rt.jar\n  should not be deployed. Doing so would contravene the Java 2 Runtime\n  Environment binary code license.</p>\n</blockquote>\n<p>And the license here: <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jre-6u21-license-159054.txt\" rel=\"nofollow\">http://www.oracle.com/technetwork/java/javase/downloads/jre-6u21-license-159054.txt</a></p>\n<p>states:</p>\n<blockquote>\n<p>C.  Java  Technology  Restrictions.  You may not  create,  modify,  or\n  change the behavior of, or authorize your licensees to create, modify,\n  or change the behavior of, classes,  interfaces, or  subpackages  that\n  are in any  way  identified  as  \"java\",  \"javax\",  \"sun\"  or  similar\n  convention   as   specified   by  Oracle  in  any  naming   convention\n  designation.</p>\n</blockquote>\n<p>So I'm thinking that if I can hook the boot class loader from native code via C++, I can replace a class in by hooking the <code>JVM_DefineClass</code> function from <code>JVM.dll</code> without any legal trouble.</p>\n<p>The function has the signature: </p>\n<p><code>JNIEXPORT jclass JNICALL JVM_DefineClass(JNIEnv *env, const char *name, jobject _loader, const jbyte *buf, jsize len, jobject pd)</code></p>\n<ul>\n<li>1: Does this function actually get call when a JVM is starting up?</li>\n<li>2: Would I still be breaking the license if I hook it?</li>\n<li>3: Am I hooking the right function or should I be doing something else(better method maybe?)?</li>\n</ul>\n</div>",
    "votes": "3",
    "answers": 0,
    "views": "676",
    "tags": [
        "c++",
        "java",
        "winapi",
        "function-hooking"
    ],
    "user": "user11780",
    "time": "10 years ago",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "<span class=\"comment-copy\">Not a lawyer, but using the boot class loader to replace a class would probably still qualify as changing the behaviour of that class. Besides, very probably you don't have the resources to defend yourself against oracle should they sue you.</span>",
            "time": null
        },
        {
            "user": "Antimony",
            "text": "<span class=\"comment-copy\">I'm voting to close this question as off-topic because it is asking for legal advice.</span>",
            "time": null
        },
        {
            "user": "user11780",
            "text": "<span class=\"comment-copy\">Well.. I did it anyway. It turns out the JVM calls the above function (<code>JVM_DefineClass</code> from <code>JNI.dll</code>) to define a class. It also calls <code>Java_lang_lang_DefineClassX</code> from <code>Java.dll</code> where X is a number from 0 to 2 inclusive. Replacing the bytes with your own allows you to redefine any class. Of course, <code>Xbootclasspath</code> is easier though.</span>",
            "time": null
        }
    ],
    "answers_data": []
}