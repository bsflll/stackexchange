{
    "title": "How to obtain decrypted virus body of Bolzano virus using Ollydbg 1.10 debugging on windows OS",
    "link": "https://reverseengineering.stackexchange.com/questions/2476/how-to-obtain-decrypted-virus-body-of-bolzano-virus-using-ollydbg-1-10-debugging",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I installed windows NT 4.0 service pack 6 on vmware player. Then I added Ollydbg 2 from vmware shared folder into windows NT. I extracted ollydbg zip and run ollydbg.exe. I am getting this error :</p>\n<p>PSAPI.DLL is not found. This library contains important process and module oriented functions for OSes based on NT technology. Normal debugging is hardly possible. Do you want to continue ?</p>\n<p>And then I am not able to debug program. </p>\n<p>I can run same exe on my host windows 7 OS without any error. On windows NT, I can run Ollydbg 1.10. But when I try to debug file in Ollydbg 1.10, I am getting error \"try to change eip or pass exception to program\". After searching I found that I should install Ollydbg 2. </p>\n<p>The reason I am using windows NT: I am debugging one malware and that only works on windows NT. But it is giving error \"try to change eip or pass exception to program\" as mentioned above. </p>\n</div>",
    "votes": "5",
    "answers": 2,
    "views": "1k",
    "tags": [
        "ollydbg"
    ],
    "user": "user1744108",
    "time": "Jul 19, 2013 at 14:23",
    "comments": [
        {
            "user": "David Hoelzer",
            "text": "<span class=\"comment-copy\">Have you tried passing the exception to the program?  Does the malware exit or continue as expected?</span>",
            "time": null
        },
        {
            "user": "user1744108",
            "text": "<span class=\"comment-copy\">Yes even I tried to pass the exception in case of Ollydbg 1.10. But then my EIP points to address 00000000 and I keeps on getting same error \"try to change eip or pass exception to program\". Is there a problem with version of Ollydbg ? As I am using 1.10. I searched on this error and some suggested to use 2.0. But in case of 2.0 I am getting this dll error mention above</span>",
            "time": null
        },
        {
            "user": "Jason Geffner",
            "text": "<span class=\"comment-copy\">Have you tried using dynamic analysis tools without a debugger to be sure that the malware even works on Windows NT 4.0? If it runs correctly outside of OllyDbg but doesn't run correctly inside of OllyDbg, then it may very well be because of anti-debugging code in the malware, not an error in OllyDbg itself.</span>",
            "time": null
        },
        {
            "user": "user1744108",
            "text": "<span class=\"comment-copy\">I think Bolzano virus can not run on windows NT version. I tried to execute executable malware file directly, but I was getting access violation exception.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I believe that a major part of your answer can be found here: <a href=\"http://www.ollydbg.de/download.htm\">http://www.ollydbg.de/download.htm</a></p>\n<p>The relevant bit is:</p>\n<blockquote>\n<blockquote>\n<p>The distribution includes files PSAPI.DLL and DBGHELP.DLL that are the Microsoft(R) Redistributable files. These files should be installed only in the directory where the Software resides. You should use supplied PSAPI.DLL only on Windows NT(R) 4.0. You are not allowed to distribute PSAPI.DLL or DBGHELP.DLL separately from the Software.</p>\n</blockquote>\n</blockquote>\n<p>I would expect it to properly find PSAPI.DLL in the current directory where you are executing Olly.  Verify that the file exists.  If it does and it is still failing I would suggest copying it to <code>C:\\WINNT\\SYSTEM</code> and giving it another go.</p>\n<p>It this does not resolve it consider sharing the name of the malware.  It sounds pretty old so it can't be that secret! It may actually allow us to give you a more specific answer or even try it out ourselves to resolve it.</p>\n</div>",
            "votes": "5",
            "user": "David Hoelzer",
            "time": "Jul 15, 2013 at 2:00",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user1744108",
                    "text": "<span class=\"comment-copy\">I found that my windows NT do not have psapi.dll neither in unzipped Ollydbg folder nor in SYSTEM folder. So I tried and copied dll from my host window 7 to windows NT (just a try) ollydbg and after that SYSTEM folder but it still don't work. So is there problem with my windows NT OS ? By the way, I am debugging polymorphic malware Bolzano. You can get its sample from <a href=\"http://oc.gtisc.gatech.edu:8080/search.cgi?search=bolzano\" rel=\"nofollow noreferrer\">oc.gtisc.gatech.edu:8080/search.cgi?search=bolzano</a></span>",
                    "time": null
                },
                {
                    "user": "David Hoelzer",
                    "text": "<span class=\"comment-copy\">No.  There's something wrong with the archive of Ollydebug that you have.  PSAPI.dll should be in the zip file.  I'd suggest that you download a fresh copy.</span>",
                    "time": null
                },
                {
                    "user": "PSS",
                    "text": "<span class=\"comment-copy\">Ollydbg version 1 comes with psapi.dll. However, version 2 doesn't</span>",
                    "time": null
                },
                {
                    "user": "David Hoelzer",
                    "text": "<span class=\"comment-copy\">I believe that he said that he is using Olly 1.10 which does come with the DLL.</span>",
                    "time": null
                },
                {
                    "user": "user1744108",
                    "text": "<span class=\"comment-copy\">I am using Olly 1.10 which has PSAPI.dll in its archive, but its not in case of Olly 2. As suggested by Jason, there are chances that virus is using anti debug technique and that why I am getting \"try to change eip or pass exception to program\" error in case of Olly 1.10. Or virus itself cannot run on windows NT. But I found one article on virus <a href=\"http://spth.virii.lu/29a4/29A-4.505.txt\" rel=\"nofollow noreferrer\">spth.virii.lu/29a4/29A-4.505.txt</a>, and after looking at assembly code of virus I think it is running on windows NT. My goal is to get virus body (code which do actual infection) after it is decrypted.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I don't have <code>NT4 vm</code><br/>\nAlso your link points to several samples<br/>\nProviding exact <code>MD5/SHA/some verifiable checksum</code> of the sample can eliminate ambiguities while answering</p>\n<p>here is a small walk through using basic hex editor and a basic disassembler of why it might be possible for that exception to be generated. </p>\n<pre><code>using winxp sp3 vm hxd hexeditor and ollydbg 1.10 in a basic dis-aaseembler mode\n</code></pre>\n<p>downloaded the first sample in openmalware</p>\n<pre><code>MD5:        f40547d521818f7c34754710f8603d5a\nSHA1:       f9e3c0e824dda984046b4eedeef06f938805983b\nSHA256:     a9beda469c835abbf416ea8da5462170eafdef215b96ac68523045600883855b\nOCID:   245478739\nOriginal Filename:  Virus.Win32.Bolzano.5572 \n</code></pre>\n<p>drag dropped to <code>vpc 2007 xp sp3 vm</code></p>\n<p>unzipped using given password infected</p>\n<p>drag dropped into <code>hxd hexeditor and verified checksums</code></p>\n<pre><code>MD-5:       F40547D521818F7C34754710F8603D5A\nSHA-1:      F9E3C0E824DDA984046B4EEDEEF06F938805983B\nSHA-256:    A9BEDA469C835ABBF416EA8DA5462170EAFDEF215B96AC68523045600883855B\n</code></pre>\n<p>all three checksums match ok</p>\n<pre><code>WORD MajorSubsystemVersion  \nWORD MinorSubsystemVersion  \nContains the minimum subsystem version required to run the executable.   \nA typical value for this field is 3.10 (meaning Windows NT 3.1).  \n</code></pre>\n<p><a href=\"http://msdn.microsoft.com/en-us/library/ms809762.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/ms809762.aspx</a> </p>\n<p>using ollydbg as a disassembler   </p>\n<pre><code>view -&gt; file -&gt; malware.exe -&gt; right click -&gt; speacial -&gt; pe header\n</code></pre>\n<p>ctrl+g 100 </p>\n<p>pe header shows </p>\n<pre><code>00000148    0300        DW 0003              ;  MajorSubsystemVersion = 3\n0000014A    0A00        DW 000A              ;  MinorSubsystemVersion = A (10.)     \n\n00000200    00100000    DD 00001000          ;  VirtualSize = 1000 (4096.)\n00000204    00100000    DD 00001000          ;  VirtualAddress = 1000  &lt;-----\n00000208    00020000    DD 00000200          ;  SizeOfRawData = 200 (512.)\n0000020C    00060000    DD 00000600          ;  PointerToRawData = 600    \n\n00000228    00200000    DD 00002000          ;  VirtualSize = 2000 (8192.)\n0000022C    00200000    DD 00002000          ;  VirtualAddress = 2000\n00000230    00200000    DD 00002000          ;  SizeOfRawData = 2000 (8192.)\n00000234    00080000    DD 00000800          ;  PointerToRawData = 800 &lt;------\n\n00000128    00100000    DD 00001000          ;  AddressOfEntryPoint = 1000\n</code></pre>\n<p>so we can start disassembling at 0x600</p>\n<pre><code>ctrl+g 600 right click -&gt; disassemble\n</code></pre>\n<p>disassembly</p>\n<pre><code> 1. 00000600    60              PUSHAD\n 2. 00000601    E9 FA0F0000     JMP     00001600\n</code></pre>\n<p>virtual size of section is 1000 as we saw earlier<br/>\nso it jumps to next section<br/>\nnext section starts at 0x800 as we saw earlier  </p>\n<pre><code>ctrl+g 800 disassemble\n</code></pre>\n<p>disassembly  </p>\n<pre><code>00000800    E8 D50E0000     CALL    000016DA  (402eda) 400000 +2000 + (16da-800) \n</code></pre>\n<p>following </p>\n<pre><code>000016DA    E8 00000000     CALL    000016DF  $+5 (402edf) 400000+ 2000+ (16df-800)  \n000016DF    5D              POP     EBP  ebp  will be 402edf  \n000016E0    81ED DF0E0000   SUB     EBP, 0EDF ebp will be 402000\n000016E6    C3              RETN    will return to 805 or 402005\n</code></pre>\n<p>ctrl+g 805 disassemble</p>\n<pre><code>00000805    BF 000C0100     MOV     EDI, 10C00\n0000080A    B9 00010000     MOV     ECX, 100\n0000080F    33C0            XOR     EAX, EAX\n00000811    F3:AE           REPE    SCAS BYTE PTR ES:[EDI]  \nscan all bytes from 10c00 to 10d00 for 0  \n00000813    75 0C           JNZ     SHORT 00000821          \nif all not zero go to win95/98\n00000815    BE 2D110000     MOV     ESI, 112D           win nt\n0000081A    BF 0000F077     MOV     EDI, 77F00000       k32 base\n0000081F    EB 0A           JMP     SHORT 0000082B\n00000821    BE 25110000     MOV     ESI, 1125           win 95 / 98\n00000826    BF 0000F7BF     MOV     EDI, BFF70000       k32 base\n</code></pre>\n<p><code>sets the base of kernel32.dll to edi</code> for byte scanning puproses<br/>\nlooks if all 100 bytes starting at 10c00 are zero<br/>\nif they are zero sets <code>kernel base to 77f00000</code> (win nt k32 base no aslr fixed)<br/>\nelse to <code>bff70000</code> (win 95 / 98 kernel32 base no aslr fixed)<br/>\nesi to some offset </p>\n<pre><code>( esi = 1125 or 112d)  ( ebp = 402000)  40312d/25  1925 or 192d (800+1125 or 112d)                               \n0000082B    03F5            ADD     ESI, EBP   \n(so esi will be either 403125 or 40312d)\n0000082D    89BD C8170000   MOV     DWORD PTR SS:[EBP+17C8], EDI \nsaves the pointer kernel base guess why ?? \n00000833    BA 00000400     MOV     EDX, 40000\n00000838    FC              CLD\n00000839    B9 08000000     MOV     ECX, 8\n0000083E    56              PUSH    ESI\n0000083F    57              PUSH    EDI\n00000840    F3:A6           REPE    CMPS BYTE PTR ES:[EDI], BYTE PTR&gt;\n00000842    5F              POP     EDI\n00000843    5E              POP     ESI \n</code></pre>\n<p>compares <code>byte pattern</code> in k32 dll</p>\n<p>for <code>95/98</code> this pattern</p>\n<pre><code>00001925    C2 0400         RETN    4\n00001928    57              PUSH    EDI\n00001929    6A 22           PUSH    22\n0000192B    2BD2            SUB     EDX, EDX\n</code></pre>\n<p>for <code>win nt</code> this pattern</p>\n<pre><code>0000192D    C2 0400         RETN    4\n00001930    55              PUSH    EBP\n00001931    8B4C24 0C       MOV     ECX, DWORD PTR SS:[ESP+C]\n</code></pre>\n<p>jumps to ok or not ok</p>\n<pre><code>00000844    74 0A           JE      SHORT 00000850  `right user with right os jump`\n00000846    47              INC     EDI\n00000847    4A              DEC     EDX\n00000848    0F84 CD000000   JE      0000091B        `wrong user with wrong os jump`\n0000084E  ^ EB E9           JMP     SHORT 00000839\n</code></pre>\n<p>if it finds the pattern will go to 850</p>\n<p>else 91b</p>\n<p>at 91b there is </p>\n<pre><code>0000091B    E8 BA0D0000     CALL    000016DA\n</code></pre>\n<p>so this will return to 920 (see above retn to 402005)</p>\n<pre><code>00000920    8B5424 20       MOV     EDX, DWORD PTR SS:[ESP+20]  \n00000924    B9 40000000     MOV     ECX, 40\n00000929    83EA 05         SUB     EDX, 5\n0000092C    BE 4F180000     MOV     ESI, 184F\n</code></pre>\n<p>this will retn to kernel or exit thread address (pushad == 0x20)<br/>\nall else are junk<br/>\nexe contains nothing at 204f to 224f will simply exit via retn<br/>\n(184f+800 ecx = 40 two lodsd = 80 dwords = 200 bytes = 224f)      </p>\n<p>if the region compared ok to retn value - 5 (see sub edx,5)<br/>\nthe app will crash and ollydbg can issue that warning    </p>\n<pre><code>00000931    03F5            ADD     ESI, EBP \n00000933    AD              LODS    DWORD PTR DS:[ESI]\n00000934    3BC2            CMP     EAX, EDX\n00000936    AD              LODS    DWORD PTR DS:[ESI]\n00000937    74 04           JE      SHORT 0000093D\n00000939  ^ E2 F8           LOOPD   SHORT 00000933\n0000093B    61              POPAD\n0000093C    C3              RETN\n0000093D    8985 47010000   MOV     DWORD PTR SS:[EBP+147], EAX\n00000943    61              POPAD\n00000944    EB 00           JMP     SHORT 00000946\n00000946    68 00000000     PUSH    0 &lt;---- apllication will crash \n0000094B    C3              RETN    eip not valid or 0\n</code></pre>\n<p><strong>ollydbg will show dont know how to step because memory at address 0 \nis not readable try changing Eip or pass exception to program if it reaches here</strong></p>\n<p>disassembling at 850 or 402050</p>\n<pre><code>00000850    83C7 03         ADD     EDI, 3  add 3 to bytepattern address \n00000853    BE E70E0000     MOV     ESI, 0EE7  \n00000858    03F5            ADD     ESI, EBP 402ee7 = 16e7 (ee7 -800 + 1000)\n0000085A    8BC6            MOV     EAX, ESI\n0000085C    83C0 07         ADD     EAX, 7  16e7+7 = 16ee\n</code></pre>\n<p>byte pattern at 16ee</p>\n<pre><code>000016EE  43 72 65 61 74 65 46 69 6C 65 4D 61 70 70 69 6E  CreateFileMappin\n000016FE  67 41                                            gA\n</code></pre>\n<p>disassembling further </p>\n<pre><code>0000085F    50              PUSH    EAX   **pushes string CreateFileMapping**\n00000860    8B85 C8170000   MOV     EAX, DWORD PTR SS:[EBP+17C**8] \n00000866    50              PUSH    EAX**  pushes kernel base \n00000867    FFD7            CALL    NEAR EDI  (can you guess ?? what api ??)\n</code></pre>\n<p>try walking ahead a bit :)</p>\n</div>",
            "votes": "2",
            "user": "blabb",
            "time": "Jul 15, 2013 at 22:41",
            "is_accepted": false,
            "comments": [
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">if you patch the kernel32 base address to suit xp kernel32 base @ EBP+17C8 (viz  say 0x7c800000 instead of the hardcoded 77f00000 ) you can force the sample above to run in xp vm no need for NT (if you guessed you can tweak EDI to the correct address and infect xp also</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">i just noticed the article you mentioned in your comment it does not talk about the virus it contains complete source code for the virus.                                            also if possible change the title of the question to something like how to debug bolzano virus using ollydbg 1.10 in nt vm or similar</span>",
                    "time": null
                },
                {
                    "user": "user1744108",
                    "text": "<span class=\"comment-copy\">I think Bolzano virus can not run on windows NT version. I tried to execute executable malware file directly, but I was getting access violation exception.</span>",
                    "time": null
                },
                {
                    "user": "user1744108",
                    "text": "<span class=\"comment-copy\">I am using sp 6 of windows NT 4.0. I found <a href=\"http://www.liutilities.com/malware/computer-virus/w32-bolzano/\" rel=\"nofollow noreferrer\">liutilities.com/malware/computer-virus/w32-bolzano</a> article. It is mentioned here that \"It also attacks Windows NT file system. However, if you have higher version of Windows NT like version 3.50 to 4.0 with service packs, you don’t have to worry about this virus’s attack\". So is it because OS, I am getting the error ?</span>",
                    "time": null
                },
                {
                    "user": "user1744108",
                    "text": "<span class=\"comment-copy\">When I am debugging malware I am going to 'right OS with right user jump' because when I set break point at                    00000850    83C7 03         ADD     EDI, 3                                            ,debugger is coming to this step. But then when program comes to                                                  00000867    FFD7            CALL    NEAR EDI and api called is \"FindNextFileA\" I am getting EIP related error.</span>",
                    "time": null
                }
            ]
        }
    ]
}