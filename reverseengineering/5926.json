{
    "title": "What Linux software can I use to explore entropy of a file?",
    "link": "https://reverseengineering.stackexchange.com/questions/5926/what-linux-software-can-i-use-to-explore-entropy-of-a-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've heard of <a href=\"http://gynvael.coldwind.pl/?id=158\">tools</a> that could be used to graph entropy of a file. Is there a graphical Linux program that I could use for this job that would let me conveniently explore which blocks of a file have certain entropy patterns that could suggest compressed or encrypted data?</p>\n</div>",
    "votes": "15",
    "answers": 3,
    "views": "13k",
    "tags": [
        "binary-analysis"
    ],
    "user": "d33tah",
    "time": "Jul 23, 2014 at 10:24",
    "comments": [
        {
            "user": "JamalS",
            "text": "<span class=\"comment-copy\">What definition of entropy are you interested in, e.g. binary Shannon entropy?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You could use the #entropy command <a href=\"http://rada.re\" rel=\"noreferrer\">radare2</a>. <a href=\"http://binwalk.org\" rel=\"noreferrer\">binwalk</a> can calculate entropy, too.</p>\n<h2>Radare2</h2>\n<p>From the manual page of Radare2:</p>\n<pre><code> #[hash]     Calculates the sha1, sha256, sha384, sha512, par, xor,\n             xorpair, hamdist, mod255, crc16, crc32, md4, md5, entropy of\n             the current block from the selected seek\n</code></pre>\n<p>So, using this command is as follow:</p>\n<pre><code>$ radare2 /bin/ls\n[0x00404890]&gt; #entropy\n5.338618\n</code></pre>\n<h2>Binwalk</h2>\n<p>If you get binwalk from the <a href=\"https://github.com/devttys0/binwalk\" rel=\"noreferrer\">original Github project</a>, you will also grad a few <a href=\"https://github.com/devttys0/binwalk/tree/master/src/binwalk/modules\" rel=\"noreferrer\">Python modules</a>, one of these is computing the <a href=\"https://github.com/devttys0/binwalk/blob/master/src/binwalk/modules/entropy.py\" rel=\"noreferrer\">entropy of the analyzed file</a>.</p>\n<p>Get these modules and run it on your file.</p>\n</div>",
            "votes": "15",
            "user": "perror",
            "time": "Jul 24, 2014 at 8:31",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Edward",
                    "text": "<span class=\"comment-copy\">Those are both good suggestions, but I'd add that there is great insight to be gained in writing your own tools.</span>",
                    "time": null
                },
                {
                    "user": "milahu",
                    "text": "<span class=\"comment-copy\">commands: <code>radare2 -q -c '#entropy' file</code> and <code>binwalk -E file</code></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><a href=\"http://ntinfo.biz/index.php/detect-it-easy\" rel=\"noreferrer\">Detect It Easy</a> can do it:</p>\n<p><img alt=\"Entropy\" src=\"https://i.sstatic.net/vPW9J.jpg\"/></p>\n<p>There is version for Linux.</p>\n</div>",
            "votes": "8",
            "user": "user3147",
            "time": "Jul 23, 2014 at 20:53",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Use <code>ent</code>: <a href=\"https://www.fourmilab.ch/random/\" rel=\"nofollow noreferrer\">https://www.fourmilab.ch/random/</a> to run statistical tests checking for randomness.</p>\n<pre><code>$ cat 1-gb-file.img | ent\nEntropy = 7.999998 bits per byte.\n\nOptimum compression would reduce the size\nof this 100000000 byte file by 0 percent.\n\nChi square distribution for 100000000 samples is 249.38, and randomly\nwould exceed this value 58.75 percent of the times.\n\nArithmetic mean value of data bytes is 127.4928 (127.5 = random).\nMonte Carlo value for Pi is 3.141514686 (error 0.00 percent).\nSerial correlation coefficient is -0.000094 (totally uncorrelated = 0.0).\n</code></pre>\n</div>",
            "votes": "1",
            "user": "mhansen",
            "time": "Feb 5, 2022 at 9:47",
            "is_accepted": false,
            "comments": []
        }
    ]
}