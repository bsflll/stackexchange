{
    "title": "Does IMAGE_FILE_SYSTEM actually means System file",
    "link": "https://reverseengineering.stackexchange.com/questions/16110/does-image-file-system-actually-means-system-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have some concerns related to <code>Characteristics</code> flag <code>IMAGE_FILE_SYSTEM</code> of <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms680313(v=vs.85).aspx\" rel=\"nofollow noreferrer\">IMAGE_FILE_HEADER structure</a>.</p>\n<p>According to all specs it says that file having this set is System file. However it doesn't clarify meaning of <em>System file</em>, also I have checked bunch of files from <em>System32</em> and none of those had it set.</p>\n<p>Does anyone knows actual meaning of this flag (and if it is not deprecated) and has any real life sample with this flag set.</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "362",
    "tags": [
        "windows",
        "pe"
    ],
    "user": "ST3",
    "time": "Aug 16, 2017 at 13:24",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>According to <a href=\"http://www.pelib.com/resources/luevel.txt\" rel=\"nofollow noreferrer\">PeLib</a> project:</p>\n<blockquote>\n<p>IMAGE_FILE_SYSTEM is set if the file is a system file such as a\n  driver. This is unused for executable files; it is also not used in\n  all the NT drivers I inspected.</p>\n</blockquote>\n<p>I combined a quick Powershell script to check whether a file has the IMAGE_FILE_SYSTEM attribute: </p>\n<pre><code>function isSystemFile([string] $filename)\n{\n    # Get the content of the file, as an array of bytes \n    $fileBytes = Get-Content $filename -ReadCount 0 -Encoding byte\n\n    $IMAGE_FILE_SYSTEM = 0x1000 \n\n    # The offset of the signature in the file is stored at location 0x3c. \n    $offsetOfSignature = $fileBytes[0x3c]\n\n    $coffHeader = $offsetOfSignature + 4\n\n    # The characteristics data are 18 bytes into the COFF header. The BitConverter ## class manages the conversion of the 4 bytes into an integer. \n    $characteristicsData = [BitConverter]::ToInt32($fileBytes, $coffHeader + 18)\n\n    # Check if the data from the file has IMAGE_FILE_SYSTEM flag set\n\n    if(($characteristicsData -band $IMAGE_FILE_SYSTEM) -eq $IMAGE_FILE_SYSTEM) \n    {\n        Write-Host \"File has IMAGE_FILE_SYSTEM attribute\" \n    } \n    else\n    {\n        Write-Host \"Nope :-(\"\n    }\n}\n</code></pre>\n<p><em>The script might not be accurate, it was written really quick</em></p>\n<p>More information about <a href=\"https://www.lifewire.com/what-is-a-system-file-2626015\" rel=\"nofollow noreferrer\">System Files</a> can be found here.</p>\n<hr/>\n<p><strong>Edit:</strong> I removed the part about <a href=\"https://technet.microsoft.com/en-us/library/bb490868.aspx\" rel=\"nofollow noreferrer\">attrib</a> which is a system-level flag. Thanks @Igor for pointing this out.</p>\n</div>",
            "votes": "3",
            "user": "Megabeets",
            "time": "Aug 16, 2017 at 17:52",
            "is_accepted": false,
            "comments": [
                {
                    "user": "mrexodia",
                    "text": "<span class=\"comment-copy\">I believe it is actually used for the csrss.exe file.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I guess it was intended for system files in early NT versions but is unused nowadays. Apparently you can set this flag by using the <code>/dll:system</code> <a href=\"https://www.geoffchappell.com/studies/msvc/link/link/options/dll.htm?tx=37\" rel=\"nofollow noreferrer\">switch of LINK.EXE</a> but I don't know of any file actually using it; however apparently such files won't be loaded in user mode (see comment).</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Aug 18, 2017 at 21:32",
            "is_accepted": false,
            "comments": [
                {
                    "user": "peter ferrie",
                    "text": "<span class=\"comment-copy\">the kernel cares to the degree that such a file can't be loaded in user-mode.  The reverse (the flag is not set, yet the file is a driver) is not true (the kernel will load it in kernel-mode without question).</span>",
                    "time": null
                }
            ]
        }
    ]
}