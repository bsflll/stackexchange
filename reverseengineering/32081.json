{
    "title": "How to get global variables with objdump from ELF files",
    "link": "https://reverseengineering.stackexchange.com/questions/32081/how-to-get-global-variables-with-objdump-from-elf-files",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have compiled this program with gcc</p>\n<pre><code>#include &lt;stdio.h&gt;\nconst char* message = \"Outside defined\";\nint a = 1337;\nint b = 10;\nint c = 9;\nint d = 8;\nint e = 7;\nint main () {return 0;}\n</code></pre>\n<p>When I objdump -t, I am able to recover the global variable names:</p>\n<pre><code>0000000000004020 g     O .data  0000000000000004              e\n0000000000004018 g     O .data  0000000000000004              c\n0000000000004010 g     O .data  0000000000000004              a\n</code></pre>\n<p>My question is, is it possible to retrieve the values for the respective global variables too by the objdump? Is it possible without running/debugging the program at all?</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "1k",
    "tags": [
        "objdump"
    ],
    "user": "killertoge",
    "time": "Jul 20, 2023 at 18:31",
    "comments": [
        {
            "user": "Rolf Rolles",
            "text": "<span class=\"comment-copy\">I'm not sure if objdump can do that, but reverse engineering tools like IDA (and free ones like Ghidra) can do that without running the program. Just open the binary in Ghidra and look at the data values at those addresses.</span>",
            "time": null
        }
    ],
    "answers_data": []
}