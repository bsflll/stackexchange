{
    "title": "I need simple debugger source",
    "link": "https://reverseengineering.stackexchange.com/questions/30769/i-need-simple-debugger-source",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>How can I write a simple debugger for Windows? I need to launch another program (do not attach to an already running one, but launch it yourself) then to let it run and to catch it at a certain address. Moreover, the breakpoint must be set via hardware debugging registers, not by just 0xCC. I did not find any source code for an example of such thing over the Internet, alas.</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "61",
    "tags": [
        "windows",
        "development",
        "debug"
    ],
    "user": "Perikl Femidi",
    "time": "Aug 13, 2022 at 16:34",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Not exactly an RE question but MSDN has an <a href=\"https://docs.microsoft.com/en-us/windows/win32/debug/writing-the-debugger-s-main-loop\" rel=\"nofollow noreferrer\">example of the main loop</a>.\nI also found this tutorial:</p>\n<p><a href=\"https://www.codeproject.com/Articles/43682/Writing-a-basic-Windows-debugger\" rel=\"nofollow noreferrer\">https://www.codeproject.com/Articles/43682/Writing-a-basic-Windows-debugger</a></p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Aug 14, 2022 at 0:10",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Perikl Femidi",
                    "text": "<span class=\"comment-copy\">I need to write a launcher for some program so that the program unpacks itself and then stops at its unpacked code. The fact is that I can't use 0xCC, it will be overwritten during the unpacking so I need to make a stop using HDR to stop on execution at a certain address.  I saw the link to MSDN you mentioned, but it shows just a skeleton, no specifics. Thanks for the second link, it's more clear there. The question remains: how to use HDR? Am I have to modify their values via say SetThreadContext? I did not find any WinAPI for manipulating exactly the values ​​of hardware debug registers.</span>",
                    "time": null
                },
                {
                    "user": "Perikl Femidi",
                    "text": "<span class=\"comment-copy\">And yes, the program I try to dig in is packed (protected) with Themida, so it's quite an RE question :-) I need Themida unpack its stuff first and then I get down to the program itself.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I remember reading Grey Hat Python where they take you through writing your own debugger, maybe that would be a good start.</p>\n</div>",
            "votes": "0",
            "user": "Mega Tonnage",
            "time": "Aug 13, 2022 at 23:07",
            "is_accepted": false,
            "comments": []
        }
    ]
}