{
    "title": "Program goes to suspend when buffer overflow occurs",
    "link": "https://reverseengineering.stackexchange.com/questions/27395/program-goes-to-suspend-when-buffer-overflow-occurs",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><strong>Full disclosure:</strong> I am seeking help to complete a college assignment. I am seeking help on steps where I am stuck and unable to move forward, not a ready made answer.</p>\n<p>I need to exploit it to get a shell with the help of a shellcode through buffer overflow. The program has some check to avoid debugging and sort of canary to avoid buffer overflow. When I bypass these two checks, in gdb, I am able to get the shell.</p>\n<p>However in the shell the program is exhibiting a behavior that I am not able to understand. When I attempt to pass a long string, instead of generating a segmentation fault the program suspends/stops.</p>\n<pre><code>$ ./prog $(python -c 'print \"A\" * 1000')\n\n[1]+ Stopped ./prog $(python -c 'print \"A\" * 1000')\n</code></pre>\n<p>Inside gdb, however, the program does generate segmentation fault. Similarly, inside gdb I am able to get a shell but in the shell the program stops/suspends like above. Attempting to bring it to foreground using 'fg' doesn't work and I do not get any respone. I have to kill it from another terminal.</p>\n<pre><code>$ file ./prog\n\nprog: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=7bfd429ec2e2d445afeb557b9eead176f3136690, not stripped\n</code></pre>\n<p>The output of ps when the program is stopped both due to my shellcode and by overflow:</p>\n<pre><code>$ ps f\nPID TTY STAT TIME COMMAND\n3776 pts/0 Ss+ 0:39 -bash\n17774 pts/0 t 0:00 \\_ AAAAAAAAAAAAAAA....\n28834 pts/0 t 0:00 \\_ /bin//sh\n</code></pre>\n<p>Can someone help me in understanding what syntax I should be looking for in the assembly code of this program to find what is causing the program to suspend? Or anything else I might be missing?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "84",
    "tags": [
        "debugging",
        "linux",
        "buffer-overflow",
        "shellcode"
    ],
    "user": "Sid Swamy",
    "time": "Apr 4, 2021 at 6:00",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>A program might act differently in gdb environment and the shell environment, due to the environment variables GDB sets upon execution. GDB sets two environment variables <strong>LINES</strong> and <strong>COLUMNS</strong> to show the output on terminal correctly. Use the following commands inside GDB, then run the program inside GDB and adjust the shellcode accordingly.</p>\n<pre><code>Unset environment LINES \nUnset environment COLUMNS\n</code></pre>\n<p><a href=\"https://secnigma.wordpress.com/2021/04/05/an-introduction-into-linux-buffer-overflow/\" rel=\"nofollow noreferrer\">Source 1</a></p>\n<p><a href=\"https://samsclass.info/127/proj/lbuf1.htm\" rel=\"nofollow noreferrer\">Source 2</a></p>\n</div>",
            "votes": "2",
            "user": "secnigma",
            "time": "Apr 4, 2021 at 22:42",
            "is_accepted": false,
            "comments": []
        }
    ]
}