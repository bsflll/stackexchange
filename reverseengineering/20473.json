{
    "title": "Print opcodes in trace - x64dbg",
    "link": "https://reverseengineering.stackexchange.com/questions/20473/print-opcodes-in-trace-x64dbg",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>How can I print the opcodes in a trace log?</p>\n<p>I can use <code>{x:bswap([cip])}</code> but this will print a fix amount of bytes (which most of the time will end up as either more or less number of bytes), regardless of the ones that the instruction does have</p>\n</div>",
    "votes": "0",
    "answers": 2,
    "views": "794",
    "tags": [
        "x64dbg"
    ],
    "user": "user1156544",
    "time": "Jan 26, 2019 at 5:08",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can use <code>{mem;dis.len(cip)@cip}</code>. See <a href=\"http://help.x64dbg.com/en/latest/introduction/Formatting.html\" rel=\"nofollow noreferrer\">http://help.x64dbg.com/en/latest/introduction/Formatting.html</a> for the relevant documentation.</p>\n</div>",
            "votes": "2",
            "user": "mrexodia",
            "time": "Jan 27, 2019 at 9:39",
            "is_accepted": true,
            "comments": [
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">@ mr exodia mem;ken@ addr is broken or does nit work  it either says format error or unknow blah blah from long time</span>",
                    "time": null
                },
                {
                    "user": "mrexodia",
                    "text": "<span class=\"comment-copy\">Perhaps you are using an older version?</span>",
                    "time": null
                },
                {
                    "user": "mrexodia",
                    "text": "<span class=\"comment-copy\">I tried and there appears to be a bug in the command separator so when using the command: log “{mem;dis.len(cip)@cip}” it will separate it into two commands and fail. But when using it in the log text everything works as expected...</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">@ mrexodia yes that command does not accept the semicolon and no i am using a fairly new snapshot but that doesn't matter it has been so for a long time i've tried. it i just pulled the v25 14nov2016 build and it exhibits the same behaviour</span>",
                    "time": null
                },
                {
                    "user": "mrexodia",
                    "text": "<span class=\"comment-copy\">See my previous post. The command is broken, but the trace “log text” field is working perfectly fine for me.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>trace record log file already logs opcodes<br/>\nselect the trace window<br/>\nselect start run trace<br/>\naccept the file name<br/>\nand start tracing<br/>\nit will trace 50000 steps (default can be configured in preferences) and stop </p>\n<p>and the format of trace file is documented so you can code some utility to parse it if you want </p>\n<p><a href=\"https://i.sstatic.net/cDDgg.jpg\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/cDDgg.jpg\"/></a></p>\n</div>",
            "votes": "0",
            "user": "blabb",
            "time": "Jan 26, 2019 at 17:29",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user1156544",
                    "text": "<span class=\"comment-copy\">Yes, that is the Trace tab (Run Trace), but I am using the \"trace into\" which logs the results into a file directly</span>",
                    "time": null
                }
            ]
        }
    ]
}