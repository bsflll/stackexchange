{
    "title": "Understanding the meaning of EBP + 0xffff98b4",
    "link": "https://reverseengineering.stackexchange.com/questions/29875/understanding-the-meaning-of-ebp-0xffff98b4",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm currently reverse-engineering an old game from 2003 to extend its functionality. I have now found what I am looking for and since it was written in C++ I'm trying to re-create the used classes. I have found the constructor call for an important class and now need to know how large it is in memory (since Ghidra tries to set the struct size way too small so I get weird things like accessing fields at this[6]). However, before the call to the constructor is made, no memory is allocated, rather the instruction <code>LEA ECX,[EBP + 0xffff98b4]</code> is executed (where ECX will be the 'this' pointer in the constructor). I don't expect that the explanation of what adding a huge value to EBP actually does would help me in finding out how large the object is, however it has intrigued me enough to wanting to know what it actually does, I hope someone can help</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "121",
    "tags": [
        "disassembly",
        "windows",
        "x86",
        "c++",
        "ghidra"
    ],
    "user": "MansenC",
    "time": "Jan 14, 2022 at 22:10",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Hi and welcome to RE.SE. Isn't it more likely a negative offset? Still big, but still reasonably big for a class.</span>",
            "time": null
        },
        {
            "user": "MansenC",
            "text": "<span class=\"comment-copy\">Thank you for the welcome! As it turns out I'm quite blind, however reasonably big depends on the context since this call is made after a lot of setup. This turns out to be the fifth value that got pushed onto the stack</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>that is a negative number</p>\n<pre><code>C:\\&gt;python -c \"print(hex(0xffff98b4-2**32))\"\n-0x674c\n</code></pre>\n<p>or in other words</p>\n<pre><code>C:\\&gt;python -c \"print(hex(2**32 - 0x674c))\"\n0xffff98b4\n</code></pre>\n</div>",
            "votes": "2",
            "user": "blabb",
            "time": "Jan 15, 2022 at 16:57",
            "is_accepted": true,
            "comments": [
                {
                    "user": "MansenC",
                    "text": "<span class=\"comment-copy\">As it turns out yes, I am completely blind</span>",
                    "time": null
                }
            ]
        }
    ]
}