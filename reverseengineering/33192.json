{
    "title": "In a Ghidra Loader in Java, how can I set the types of symbols or at addresses?",
    "link": "https://reverseengineering.stackexchange.com/questions/33192/in-a-ghidra-loader-in-java-how-can-i-set-the-types-of-symbols-or-at-addresses",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm writing a bunch of Ghidra Loaders for retro platforms.</p>\n<p>I know how to use <code>SymbolTable</code> <code>createLabel()</code> and <code>addExternalEntryPoint()</code> but sometimes I know the types of certain fields, symbols, or addresses too.</p>\n<p>So far I can't find how to add types from Java. For now I'm only thinking about basic data types like <code>byte</code>, <code>word</code>, <code>dword</code>, if that makes a difference.</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "28",
    "tags": [
        "ghidra",
        "symbols"
    ],
    "user": "hippietrail",
    "time": "Sep 2, 2024 at 4:07",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I managed to figure it out by a combination of guesswork, fumbling around, and searching the Ghidra source on GitHub:</p>\n<p>The term used by Ghidra is <a href=\"https://ghidra.re/ghidra_docs/api/ghidra/program/model/data/DataType.html\" rel=\"nofollow noreferrer\"><code>DataType</code></a> and data types are set via the <a href=\"https://ghidra.re/ghidra_docs/api/ghidra/program/model/listing/Listing.html\" rel=\"nofollow noreferrer\"><code>Listing</code></a>, which you can obtain in your Loader's <code>load()</code> method:</p>\n<pre class=\"lang-java prettyprint-override\"><code>Listing listing = program.getListing();\n</code></pre>\n<p>And you can then set built-in types like so:</p>\n<pre class=\"lang-java prettyprint-override\"><code>listing.createData(address, UnsignedShortDataType.dataType);\nlisting.createData(address, PascalStringDataType.dataType);\n</code></pre>\n<p>If you haven't used addresses before, you typically get them like this:</p>\n<pre class=\"lang-java prettyprint-override\"><code>AddressSpace addressSpace = program.getAddressFactory().getDefaultAddressSpace();\nAddress loadAddress = addressSpace.getAddress(0x30000);\n</code></pre>\n<p>By the way, strings and arrays are a little different:</p>\n<pre class=\"lang-java prettyprint-override\"><code>listing.createData(address, new StringDataType(), 2);\nlisting.createData(address.add(2), new ArrayDataType(UnsignedIntegerDataType.dataType, 4));\n</code></pre>\n</div>",
            "votes": "0",
            "user": "hippietrail",
            "time": "Sep 2, 2024 at 7:42",
            "is_accepted": true,
            "comments": []
        }
    ]
}