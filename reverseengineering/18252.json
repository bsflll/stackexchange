{
    "title": "Some question about IDA [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/18252/some-question-about-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>Closed</b>. This question needs <a href=\"/help/closed-questions\">details or clarity</a>. It is not currently accepting answers.\n                                \n                            </div>\n</div>\n</div>\n</div>\n</div>\n<hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n<div class=\"fw-nowrap fc-black-500\">\n<div class=\"d-flex fd-column lh-md\">\n<div class=\"mb0 d-flex\">\n<div class=\"flex--item mr8\">\n<svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\"><path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\"></path></svg>\n</div>\n<p><b>Want to improve this question?</b> Add details and clarify the problem by <a href=\"/posts/18252/edit\">editing this post</a>.</p>\n</div>\n<div class=\"mb0 mt6 d-flex\">\n<p class=\"ml24 pl2\">Closed <span class=\"relativetime\" title=\"2018-05-18 06:43:53Z\">6 years ago</span>.</p>\n</div>\n<div class=\"ml24 pl2\">\n</div>\n</div>\n</div>\n<div class=\"mt24 d-flex gsx gs8\">\n<a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/18252/edit\">\n                        Improve this question\n                    </a>\n</div>\n</aside>\n</div>\n<p>This binary was from a CTF challenge.</p>\n<p>I found 2 way to solve this, one is run &amp; debug the bin, set a break point and see result in flag after the bin running, another is trying to understand the function.</p>\n<p>There are some parts that i dont understand even when i solved this challenge :</p>\n<p>Why my IDA reverse the string (v6 should be \"Bkav\" and v7 + v8 should be \"Security\"</p>\n<p>As you see, it pass the char* v6 (\"Bkav\") into the func01 and func02, but when i do the same thing, it give wrong flag. But when i try to pass the \"BkavSecurity\" in to func01 and func02, it give me right flag. Quite confuse about this.</p>\n<p><a href=\"https://i.sstatic.net/m3rp8.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/m3rp8.png\"/></a></p>\n<p>You can find file here : <a href=\"https://www.sendspace.com/file/g7w8nz\" rel=\"nofollow noreferrer\">https://www.sendspace.com/file/g7w8nz</a></p>\n</div>",
    "votes": "-2",
    "answers": 2,
    "views": "189",
    "tags": [
        "ida",
        "hexrays"
    ],
    "user": "beo sen",
    "time": "6 years ago",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">please give this question a more meaningful title</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">You're passing a flag? Where? It's not clear to me what you're asking here.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Remember that what you're passing is an address. And the address of <code>v6</code> and since <code>v6</code>,<code>v7</code> and <code>v8</code> are adjacent to each other so any method that works on <code>char *</code> will read from one to the other until it reaches byte <code>0</code>.</p>\n<pre><code>Letter |  Address | Variable\n   B   | ebp-7e5h | -&gt; v6 (4 bytes)\n   k   | ebp-7e4h | \n   a   | ebp-7e3h | \n   v   | ebp-7e2h | \n   S   | ebp-7e1h | -&gt; v7 (4 bytes)\n   e   | ebp-7e0h |\n   c   | ebp-7dfh |\n   u   | ebp-7deh |\n   r   | ebp-7ddh | -&gt; v8 (4 bytes)\n   i   | ebp-7dch |\n   t   | ebp-7dbh |\n   y   | ebp-7dah |\n  \\0   | ebp-7d9h | -&gt; v9 (1 byte)\n</code></pre>\n</div>",
            "votes": "0",
            "user": "Paweł Łukasik",
            "time": "May 13, 2018 at 12:55",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>well you can create a <strong>stackvar K</strong>   on all the four instructions and convert those stack variables to an array of proper length </p>\n<p>then you can see ida showing you the offsets from base the screen shot is from ida free 5 on a 32 bit machine  (it doesn't decompile ) </p>\n<p>but in your case i think decompilation would be more better ( this construct is an inlined/unrolled strcpy(src,dest) </p>\n<p><a href=\"https://i.sstatic.net/q7JRx.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/q7JRx.png\"/></a></p>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "May 14, 2018 at 19:02",
            "is_accepted": false,
            "comments": []
        }
    ]
}