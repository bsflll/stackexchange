{
    "title": "How can I compare different execution traces of the same exe, but ran with different parameters?",
    "link": "https://reverseengineering.stackexchange.com/questions/33334/how-can-i-compare-different-execution-traces-of-the-same-exe-but-ran-with-diffe",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<h4>Context</h4>\n<p>I'm working on analyzing how a software's behavior changes when run with different parameters.</p>\n<p>My goal is to compare the execution traces (e.g., function calls, memory accesses, or instruction flows) to identify differences caused by the input parameters.</p>\n<h4>Question</h4>\n<p>I want to capture the execution trace for two runs: one with <code>param1</code> and another with <code>param2</code>. So, for example:</p>\n<ul>\n<li><p><code>sofware.exe --param1</code></p>\n<p>VS</p>\n</li>\n<li><p><code>software.exe --param2</code></p>\n</li>\n</ul>\n<p>Ideally, I'd like to see which functions, code paths, or memory regions are accessed differently between the two runs.\nI'm looking for effective techniques to:</p>\n<ul>\n<li>Compare traces to identify key differences in execution paths</li>\n<li>Analyze patterns in how parameter changes affect program flow</li>\n</ul>\n<p>How can I compare different execution flows?</p>\n<h4>What I tried</h4>\n<p>I tried to use <a href=\"https://help.x64dbg.com/en/latest/gui/views/Trace.html\" rel=\"nofollow noreferrer\">x64Dbg's tracing feature</a>. However, you cant really compare two different executions.</p>\n<p>I also explored <a href=\"https://github.com/gaasedelen/lighthouse\" rel=\"nofollow noreferrer\">lighthouse</a> for IDA/Binary Ninja:</p>\n<p><a href=\"https://i.sstatic.net/U8gWZBED.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/U8gWZBED.png\"/></a></p>\n<p>However, it seems like it doesnt seem to do what I want.</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "134",
    "tags": [
        "ida",
        "debugging",
        "x64dbg",
        "debuggers"
    ],
    "user": "MendelG",
    "time": "Dec 8, 2024 at 20:45",
    "comments": [
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<span class=\"comment-copy\">There's also tenet from the same author of lighthouse. It's not a direct comparison of traces, but might be closer to what you're trying to analyze.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have never done this or needed to do this, however my first instinct is to diff the two trace files, however I know it is special format so I did a search and found this issue: <a href=\"https://github.com/x64dbg/x64dbg/issues/3042\" rel=\"nofollow noreferrer\">https://github.com/x64dbg/x64dbg/issues/3042</a> in which someone wanted to compare traces, and the creator of x64dbg suggested 2 options, I would be inclined to use the 2nd option (because I am unsure the 1st option will compare): <a href=\"https://github.com/mrexodia/dumpulator/blob/main/tests/x64dbg-tracedump.py\" rel=\"nofollow noreferrer\">https://github.com/mrexodia/dumpulator/blob/main/tests/x64dbg-tracedump.py</a> and dump the files and then use diff or some comparison tool.</p>\n<p>I think you may prefer a more visual tool for this, for obvious reasons, but it may have similar effect using compare 2 files in an editor</p>\n<p>I found this question interesting so I wanted to offer a possibility you may not have considered.</p>\n</div>",
            "votes": "0",
            "user": "jonk",
            "time": "Dec 16, 2024 at 23:36",
            "is_accepted": false,
            "comments": []
        }
    ]
}