{
    "title": "nrf52-based localization tag flash dump and modification",
    "link": "https://reverseengineering.stackexchange.com/questions/30017/nrf52-based-localization-tag-flash-dump-and-modification",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Lately I've bought a localisation tag (Apple AirTag alike). When I click a button on my cell phone, the device plays a chiptune-like ringtone. The ringtone is configurable using the app and stored on the tag itself – I confirmed that by comparing firmware dumps before and after changing the ringtone.</p>\n<p>To dump the firmware, I connected to the chip SWD interface. The chip is NRF52820 Nordic Semiconductor Bluetooth SoC. I used STLinkV2 together with OpenOCD to dump its memory – manually 256 kB starting from 0.</p>\n<p>My goal is to patch this ringtone and upload back to the device, but it surprisingly doesn't work. There is a <a href=\"https://www.reddit.com/r/TileTracker/comments/ji3oxe/reverse_engineering_tile_ringtones_need_info/\" rel=\"nofollow noreferrer\">reddit post</a> describing the chiptune binary format – that's why I know which parts I can edit. So basically:</p>\n<ol>\n<li>I dump the firmware.</li>\n<li>I change the chiptune using android app</li>\n<li>I dump the firmware again.</li>\n<li>The changed tune can be found in two places in flash memory (not sure why two). There are also smaller changes in other parts of memory, but also duplicated, so it looks like:</li>\n</ol>\n<pre><code>dump1:\naddress a: somedata_1\naddress b: somedata_2\naddress c: chiptune_data\naddress d: somedata_1\naddress e: somedata_2\naddress f: chiptune_data\n\ndump2:\naddress a: altered_somedata_1\naddress b: altered_somedata_2\naddress c: altered_chiptune_data\naddress d: altered_somedata_1\naddress e: altered_somedata_2\naddress f: altered_chiptune_data\n</code></pre>\n<ol start=\"5\">\n<li>I push a button in the Android app and hear that the tune has in fact changed.</li>\n<li>I patch the area of code at addresses \"c\" and \"f\" to repeating two notes - multiple occurences of \"4b 0a 52 0a\" to cover the modified ringtone, to break this tune</li>\n<li>I program the patched firmware and verify it is successfully written to flash</li>\n<li>I turn off devices power to ensure that nothing stays in SRAM</li>\n<li>I turn it back on and dump the firmware again to ensure again that flash is modified</li>\n<li>I push the button in app and hear the second ringtone, not the modified \"chirp\"</li>\n<li>I dump the firmware for the third time, still my changes are present. It doesn't look like a ringtone is uploaded every time I call the tag - while changing ringtone in settings it takes a longer time to upload than when I call it, moreover, the firmware does not have the changed ringtone.</li>\n</ol>\n<p>It looks like there is no way that the old ringtone is on the device anymore(at least in its plain form), yet it plays it.</p>\n<ol>\n<li>What am I doing wrong?</li>\n<li>Also, why would the same data be stored in two parts of flash at the same time? Or maybe there is a certain type of protection on the chip i don't know about that shuffles the memory addressing?</li>\n</ol>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "105",
    "tags": [
        "binary-analysis",
        "binary",
        "binary-editing"
    ],
    "user": "tomaszu",
    "time": "Feb 11, 2022 at 11:42",
    "comments": [],
    "answers_data": []
}