{
    "title": "Loading a PE32 executable DLL Intel 80386 into a c# program",
    "link": "https://reverseengineering.stackexchange.com/questions/24917/loading-a-pe32-executable-dll-intel-80386-into-a-c-program",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm new here so I'm sorry if this isn't the right section for my question.</p>\n<p>I'm reverse engineering a software that's written in .net 3.5 c# which loads a weird dynamic dll, which has an important functionality of decrypting / encrypting strings. I tried to make a c# program and import the dlls but visual studio complains about invalid / unsupported dll.</p>\n<p>Here is some output and info:</p>\n<pre><code>targetframework: .Net Framework v3.5 \n</code></pre>\n<pre><code>FileAnalyzer.dll:  PE32 executable (DLL) (GUI) Intel 80386, for MS Windows\n</code></pre>\n<p>the .net software loads it and hooks its functions like this:</p>\n<pre><code> public class FileDataCtrlWrap\n  {\n    [DllImport(\"FileDataCtrl.dll\", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    private static extern bool GetPersonalSettingsFolder(byte[] buffer, uint type);\n\n    [DllImport(\"FileDataCtrl.dll\", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    private static extern bool GetSettingsFolder(byte[] buffer, uint type);\n\n    [DllImport(\"FileDataCtrl.dll\", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    private static extern bool GetSnapShotFolder(byte[] buffer);\n\n    [DllImport(\"FileDataCtrl.dll\", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    private static extern bool GetSnapShotPath(string cameraName, byte[] buffer);\n\n    [DllImport(\"FileDataCtrl.dll\", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]\n    private static extern int Encrypt(string intput, StringBuilder output);\n...\n...\n..etc\n</code></pre>\n<ol>\n<li>How is this .net program loading a pe32 dll? </li>\n<li>Is it possible to replicate this behavior? If not what are the alternatives?</li>\n</ol>\n<p>the dll file can be found <a href=\"https://filebin.net/sqxsz86tmh63fdq2\" rel=\"nofollow noreferrer\">here</a></p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "1k",
    "tags": [
        "dll",
        "c#",
        "dll-injection",
        "pe32"
    ],
    "user": "Hassan Abdul-Kareem",
    "time": "May 5, 2020 at 2:13",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">Is your app targeted to x86 or x64?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can't load 32bit Dlls in 64bit Processes</p>\n<p>Solution: build a 32bit App or write an external 32bit prozess(yes a EXE) that loads the DLL and communication with that process using Pipes or TCP/IP from your 64bit app</p>\n<p>btw: the first Dlls name is FileAnalyzer.dll, in the Code is FileDataCtrl.dll?</p>\n</div>",
            "votes": "1",
            "user": "llm",
            "time": "May 5, 2020 at 8:29",
            "is_accepted": true,
            "comments": []
        }
    ]
}