{
    "title": "What are some ways to pass raw bytes to a program via the Linux terminal?",
    "link": "https://reverseengineering.stackexchange.com/questions/24755/what-are-some-ways-to-pass-raw-bytes-to-a-program-via-the-linux-terminal",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to pass raw bytes to a (C) program using the Linux Bash shell. I find that when I try to pass for example \"\\x00\\xFF\\xAB\", the program receiving the input actually gets the <strong>ASCII character codes</strong> for the string, rather than interpret them as the raw bytes.</p>\n<p>One way I've seen people accomplish this is by calling <code>python -c 'print(\"\\x00\\xFF\\xAB\")'</code> and piping output to the program under test. Is there a way to do this without using Python by just using the Bash shell?</p>\n</div>",
    "votes": "15",
    "answers": 2,
    "views": "11k",
    "tags": [
        "binary-analysis",
        "binary",
        "fuzzing"
    ],
    "user": "the_endian",
    "time": "Apr 23, 2020 at 5:12",
    "comments": [
        {
            "user": "bart1e",
            "text": "<span class=\"comment-copy\">You can use ‘printf \\xbb’, where you replace ‘bb’ by the byte you want. The only problem is, you cannot pass null byte this way.</span>",
            "time": null
        },
        {
            "user": "the_endian",
            "text": "<span class=\"comment-copy\">Ah thanks do you know how I could pass a null byte?</span>",
            "time": null
        },
        {
            "user": "bart1e",
            "text": "<span class=\"comment-copy\">Unfortunately, I don't. :/</span>",
            "time": null
        },
        {
            "user": "the_endian",
            "text": "<span class=\"comment-copy\">@bart1e thanks I don't think there is a way to do it like this. For null bytes I may have to run execve manually and pass the args I believe.</span>",
            "time": null
        },
        {
            "user": "rici",
            "text": "<span class=\"comment-copy\">@bart1e: you can print NUL bytes with printf. You just can't save them in a variable.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Use <code>echo -e</code> and pipe to your program's input.</p>\n<p>Example:\n<code>echo -e \"\\x41\\x42\\x43\\x44\" | &lt;executable&gt;</code>\nWill write ABCD as input.</p>\n<p>edit:\nYou can pass null-bytes</p>\n</div>",
            "votes": "11",
            "user": "Yotamz",
            "time": "Apr 19, 2020 at 9:53",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Woodrow Barlow",
                    "text": "<span class=\"comment-copy\">would you mind adding an example on how to pass bytes as an <i>argument</i> to the executable?</span>",
                    "time": null
                },
                {
                    "user": "Yotamz",
                    "text": "<span class=\"comment-copy\">Put the <code>echo -e</code> command after the executable name, surrounded by backticks: (`). Null bytes are ok in this method too. (Newline chars, however, will break the string)</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@Yotamz yikes ... backticks? That's so 1990s. Drop the backticks and use <code>$(...)</code> to dodge the escaping nightmare that ensues as soon as you start nesting backticks ... null bytes will work in arguments? I find that surprising, since they're treated as zero-terminated. Can you substantiate that claim?</span>",
                    "time": null
                },
                {
                    "user": "Yotamz",
                    "text": "<span class=\"comment-copy\">Yes, tried it with <code>ls</code>, echo -e \"\\x2E\\x2E\" (ls ..) works the same as <code>ls</code> with echo \"\\x2E\\x00\\x2E\", even though it supposedly ends the string. I'd expect the latter to be treated as just \"\\x2E\" and list the current folder but it doesn't. I agree with you on the backticks-escaping though.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If you need null bytes, you can write them to a file and use the file as input for the program, e.g.:</p>\n<blockquote>\n<p>echo -e -n \"\\x00\\xFF\\xAB\" &gt; file.bin</p>\n<p>program &lt; file.bin</p>\n</blockquote>\n<p>You can use also use <a href=\"https://linux.die.net/man/1/xxd\" rel=\"noreferrer\"><code>xxd</code></a> to convert hex to binary:</p>\n<blockquote>\n<p>echo \"00 FF AB\" | xxd -r -p | program</p>\n</blockquote>\n</div>",
            "votes": "18",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Hermann",
                    "text": "<span class=\"comment-copy\">Upvoted for the use of <code>xxd</code> – it is much more convenient without the backslashes.</span>",
                    "time": null
                }
            ]
        }
    ]
}