{
    "title": "Why IDA Pro will generate this kind of code(mess up macro name and variable name)?",
    "link": "https://reverseengineering.stackexchange.com/questions/3596/why-ida-pro-will-generate-this-kind-of-codemess-up-macro-name-and-variable-name",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I use IDA Pro 6.1 to disassembly ELF file,\nwhich is compiled on 32 bit Linux, gcc 4.6.3</p>\n<p>I modified the code and try to make it reassemble, \nand I find a problem here(this is directly created by IDA Pro):</p>\n<pre><code>main    proc near\n......\nmov     dword ptr [esp+4], offset msgid\n......\n......\nfoo     proc near\nmsgid   =  dword ptr -18d\n......\nmov     [esp+1Ch+msgid], 1\n\nsection .rodata\nmsgid           db 'extra operand %s',0\n</code></pre>\n<p>So if I do some modify work and assembly it use <strong>nasm</strong>, it will produce this error:</p>\n<pre><code>error: label or instruction expected at start of line \n</code></pre>\n<p>targeting on this line:</p>\n<pre><code>msgid           db 'extra operand %s',0\n</code></pre>\n<p>If I modify it like this:</p>\n<pre><code>main    proc near\n......\nmov     dword ptr [esp+4], offset msgid111\n......\n......\nfoo     proc near\nmsgid   =  dword ptr -18d\n......\nmov     [esp+1Ch+msgid], 1\n\nsection .rodata\nmsgid111           db 'extra operand %s',0\n</code></pre>\n<p>Then no error in this part.</p>\n<p>So my questions are:</p>\n<ol>\n<li>Why IDA Pro will use variable name as the macro name?</li>\n<li>Is there any better way to bypass this error than modify the variable name?</li>\n</ol>\n<p>Thank you!</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ida",
        "disassembly",
        "assembly",
        "nasm"
    ],
    "user": "lllllllllllll",
    "time": "Apr 28, 2017 at 12:57",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<ol>\n<li><p>IDA will use this variable name if you renamed it somehow.\nThis variable name is local for the function because it is a stack offset. </p></li>\n<li><p>There is no better way than name modification.\nYou can solve this specific kind of error by writing script that renames anything in <code>.rodata</code> section by applying <code>g_</code> prefix to any object in it.</p></li>\n</ol>\n<p>The code will look like this:</p>\n<pre><code>#Use carefully, I didn't check this code\n#beware errors\n\nimport idautils\nimport idc\n\nprefixes = {\".rodata\": \"g_ro_\",\n            \".data\": \"g_\"}\n\n#Passing over all non default names\nfor (ea, name) in idautils.Names():\n    seg_name = idc.SegName(ea)\n    # if the name is in required segment\n    if seg_name in prefixes:\n        if not name.startswith(prefixes[seg_name]):\n            # renaming it by adding required prefix\n            # if the prefix is not added yet\n            name = prefixes[seg_name] + name\n            idc.MakeName(ea, name)\n</code></pre>\n</div>",
            "votes": "4",
            "user": "perror",
            "time": "Feb 2, 2014 at 8:17",
            "is_accepted": true,
            "comments": []
        }
    ]
}