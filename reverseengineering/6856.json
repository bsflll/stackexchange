{
    "title": "Reverse Engineering Quebec Canada PDF417 restaurant bills",
    "link": "https://reverseengineering.stackexchange.com/questions/6856/reverse-engineering-quebec-canada-pdf417-restaurant-bills",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Let me explain what I'm trying to do, and then where I am at...</p>\n<p>As you can see on this image :</p>\n<p><img alt=\"enter image description here\" src=\"https://i.sstatic.net/sRldz.jpg\"/></p>\n<p>There is a PDF417 at the end containing a string that at my best guess is some base64 string.</p>\n<p>Here it is :</p>\n<blockquote>\n<p>3GLDjVKaUbwysHTAffMyChP1wqzvc/h41aebPrw0PsprtPy85tBa87vzsLw6hL8t5FBJLGlHODGQ0O8ml0OKs7mmqgB1pZsAvcs2CyAgICA0MzA2MzjAyzYLICAgICBKdWxpZSAgIDMwU09CUwAApQAAagcAAAAAAAAA</p>\n</blockquote>\n<p>And when I decode it, I get the following :</p>\n<p><img alt=\"enter image description here\" src=\"https://i.sstatic.net/dOVD1.png\"/></p>\n<p>I kind of found the waitress name \"Julie\" and in front of it, there is a bunch of space characters, which I guess it is because there is a limited size to the name.</p>\n<p>Same for the bill number, and the table number.</p>\n<p>But I was wondering what kind of information was in the previous bits, so any idea how to proceed to decode/decrypt this information would be greatly appreciated.</p>\n<hr/>\n<p>The machine used for the generation of the base64 string and its content is a \"AEC-6822\".</p>\n<p>And here is some unrelated information to what I'm trying to do, but may help... (I hope)\n<a href=\"http://www.revenuquebec.ca/documents/en/publications/in/in-577-v(2013-08).pdf\" rel=\"noreferrer\">http://www.revenuquebec.ca/documents/en/publications/in/in-577-v(2013-08).pdf</a></p>\n<p>Thank you very much,\nANY help is greatly appreciated!</p>\n</div>",
    "votes": "8",
    "answers": 3,
    "views": "2k",
    "tags": [
        "decryption"
    ],
    "user": "user66792",
    "time": "Dec 19, 2014 at 17:05",
    "comments": [
        {
            "user": "Ilmari Karonen",
            "text": "<span class=\"comment-copy\">Never mind the barcode, I'm wondering what those random(?) mathematical symbols at the bottom are about.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>From <a href=\"https://www.ctf.ca/ctfweb/Documents/PDF/2009ctj/09ctj4-ainsworth.pdf\" rel=\"nofollow\">https://www.ctf.ca/ctfweb/Documents/PDF/2009ctj/09ctj4-ainsworth.pdf</a> --</p>\n<blockquote>\n<p>In addition to ensure the integrity of the information presented on\n  the receipt, the solution designed by Revenu Québec ensures that the\n  bar-code scanned by the [handheld] reader is produced by the\n  certificate delivered by [Revenu Québec] to the specific MEV [SRM]\n  which generates this signature. The signature is produced by a\n  combination of SHA-256 and ECC-224.</p>\n<p>This method uses a certificate which includes a public and a private\n  key issued for each MEV [SRM] with information that identifies the MEV\n  [SRM] and the restaurant.</p>\n<p>We choose the elliptic curve algorithm (ECC) to reduce the length of\n  the result (<strong><em>to be converted to a barcode</em></strong>) and to maintain a good\n  strength.</p>\n</blockquote>\n<p>So apparently the previous bits in the barcode make up a digital signature, which would explain the high entropy.</p>\n</div>",
            "votes": "4",
            "user": "Jason Geffner",
            "time": "Dec 19, 2014 at 17:20",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user66792",
                    "text": "<span class=\"comment-copy\">Hey thanks, I have been looking up for days for this information, and you found it in minutes... sigh...</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">Happy to help. Here's the search that found it for me: <a href=\"https://www.google.com/webhp?q=canada+OR+canadian+OR+quebec+%22srm%22+%22barcode%22\" rel=\"nofollow noreferrer\">google.com/…</a> -- it's the third hit.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I once had a set of receipts and chewed through the statistics of how often the symbols are repeated.  That shows that there most likely are 256 symbols, which would make the row of symbols contain 96 = 12 * 8 bits.</p>\n<p><a href=\"https://www.ietf.org/mail-archive/web/81attendees/current/msg00986.html\" rel=\"nofollow\">https://www.ietf.org/mail-archive/web/81attendees/current/msg00986.html</a></p>\n<p>Checking the Unicode charts, almost all of the symbols are on the page U+22xx, \"Mathematical symbols\".  I haven't tracked down the rest, some of which are seriously obscure, but some seem to be sans-serif Hebrew letters. I am guessing that the symbols not in U+22xx are to replace some symbols on that page that are too much like others.</p>\n<p>There doesn't seem to be any ordinary data processing purpose that the symbols could serve, since any information you wanted to be machine processable you'd put in the barcode.  My guess is that the symbols are a hash, summary, or subset of the information in the barcode and function as a \"receipt number\" that the <em>recipient</em> can read, so that if two buyers purchase the same thing, the establishment cannot give them two copies of one (recorded) receipt but rather has to record two receipts to give to each of them.</p>\n<p>This explanation accounts for why the symbols are easily human recognizable.  It is also based on an experience in the Musée de la civilisation à Québec:  I purchased a tea from the cafe, and my companion purchased a tea as well, immediately after me, from the same cashier.  Our receipts had the same line of symbols, a surpasingly unlikely event, which suggests that we received duplicate copies of one recorded receipt.</p>\n</div>",
            "votes": "1",
            "user": "Dale",
            "time": "Sep 11, 2016 at 14:33",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Based on a few samples, here is an overview of some fields that can be read in clear.</p>\n<p>Source: <a href=\"https://github.com/fproulx/tastybits/blob/master/NOTES.md\" rel=\"nofollow noreferrer\">https://github.com/fproulx/tastybits/blob/master/NOTES.md</a></p>\n<p>Datasets: <a href=\"https://github.com/fproulx/tastybits/tree/master/sample-data\" rel=\"nofollow noreferrer\">https://github.com/fproulx/tastybits/tree/master/sample-data</a></p>\n<h1>Unofficial specification</h1>\n<blockquote>\n<ul>\n<li>PDF417 barcode with BASE64 encoded binary payload</li>\n<li>Always 0x7A bytes long == 122 bytes == 976 bits</li>\n<li>Endianness appears to be Little Endian (Intel)</li>\n<li>[0x00, 0x39] Unknown data. Always differs from bill to bill.</li>\n<li>[0x40, 0x43] MEV serial number\n  \n  <ul>\n<li><em>Notes:</em> left-aligned binary 32-bits little endian, zero padded (0x00)</li>\n</ul></li>\n<li>[0x44, 0x47] MEV transaction counter (monotonically increasing)\n  \n  <ul>\n<li><em>Notes:</em> left-aligned binary 32-bits little endian, zero padded (0x00)</li>\n</ul></li>\n<li>[0x48, 0x4B]  Unknown data</li>\n<li>[0x4C, 0x55] Unique bill/transaction number\n  \n  <ul>\n<li><em>Notes:</em> right-aligned ASCII text, whitespace padded (0x20)</li>\n</ul></li>\n<li>[0x56, 0x59] Bill datetime\n  \n  <ul>\n<li><em>Note:</em> Number of seconds from MRQ Epoch (2009-01-01)</li>\n</ul></li>\n<li>[0x5A, 0x63] Employee name\n  \n  <ul>\n<li><em>Notes:</em> right-aligned ASCII text, whitespace padded (0x20)</li>\n</ul></li>\n<li>[0x64, 0x6B] Vendor field, typically table number, takeout, etc.\n  \n  <ul>\n<li><em>Notes:</em> right-aligned ASCII text, whitespace padded (0x20)</li>\n</ul></li>\n<li>[0x6C, 0x6E] TPS value in cents \n  \n  <ul>\n<li><em>Notes:</em> left-aligned binary 24-bits, little-endian, zero padded (0x00)</li>\n</ul></li>\n<li>[0x6F, 0x71] TVQ value in cents\n  \n  <ul>\n<li><em>Notes:</em> left-aligned binary 24-bits, little-endian, zero padded (0x00)</li>\n</ul></li>\n<li>[0x72, 0x77] Total price (including TPS+TVQ) in cents\n  \n  <ul>\n<li><em>Notes:</em> left-aligned binary 24-bits, little-endian, zero padded (0x00)</li>\n</ul></li>\n<li>[0x78, 0x7A] Constant data (0C:43:0E)</li>\n</ul>\n</blockquote>\n</div>",
            "votes": "0",
            "user": "h3xStream",
            "time": "Jan 7, 2020 at 20:40",
            "is_accepted": false,
            "comments": []
        }
    ]
}