{
    "title": "Remove code signature from a Mac binary",
    "link": "https://reverseengineering.stackexchange.com/questions/13622/remove-code-signature-from-a-mac-binary",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>How can I remove the code signature from a binary so that I can patch it without the binary refusing to run afterwards?</p>\n<p><em>Needless to say, I'm not the original creator of the binary, nor I have the certs that were used to sign the binary.</em></p>\n</div>",
    "votes": "14",
    "answers": 3,
    "views": "26k",
    "tags": [
        "binary-analysis",
        "binary",
        "osx",
        "patching",
        "mach-o"
    ],
    "user": "alexandernst",
    "time": "Sep 6, 2017 at 16:28",
    "comments": [
        {
            "user": "user34480",
            "text": "<span class=\"comment-copy\">if the app's name I want to remove the code signature is a two words with space between them, how should I type it? Thanks in advance</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There are <a href=\"https://github.com/steakknife/unsign\" rel=\"noreferrer\">tools</a> for <a href=\"https://github.com/alexzielenski/optool\" rel=\"noreferrer\">that</a>, as well as a <code>codesign</code> flag <code>--remove-signature</code></p>\n<p>First two should work the same. The <code>codesign</code> flag is undocumented and so YMMV (A user reported in a comment the <code>codesign</code> produced a corrupt executable).</p>\n<p>You should use any of them with caution and backup the application before using them.</p>\n</div>",
            "votes": "18",
            "user": "NirIzr",
            "time": "Sep 6, 2017 at 16:26",
            "is_accepted": true,
            "comments": [
                {
                    "user": "alexandernst",
                    "text": "<span class=\"comment-copy\">Would you recommend me using one of those 3 tools in particular or any of those would work exactly the same for me and my use case?</span>",
                    "time": null
                },
                {
                    "user": "NirIzr",
                    "text": "<span class=\"comment-copy\">Added the question to address your questions here</span>",
                    "time": null
                },
                {
                    "user": "zneak",
                    "text": "<span class=\"comment-copy\"><code>codesign --remove-signature</code> seems to create malformed executables, at least in some cases.</span>",
                    "time": null
                },
                {
                    "user": "NirIzr",
                    "text": "<span class=\"comment-copy\">@zneak thanks for sharing your experience. Edited my answer to note that.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Another blunt way that seemed to work for me on Catalina (note that this strips all attributes):</p>\n<p><code>xattr -cr /path/to/your/program.app</code></p>\n</div>",
            "votes": "2",
            "user": "user31463",
            "time": "Mar 20, 2020 at 11:21",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<pre><code>codesign --remove-signature /path/to/binaryAppName\n</code></pre>\n<p>Tested it on macOS 10.15.3 Catalina, works perfectly.</p>\n<p>You can edit the hex values of the now removed code signature binaries and it will launch on macOS with out a hitch.</p>\n</div>",
            "votes": "-1",
            "user": "S To",
            "time": "Mar 19, 2020 at 12:00",
            "is_accepted": false,
            "comments": [
                {
                    "user": "julian",
                    "text": "<span class=\"comment-copy\">This answer doesn't offer any new information. The accepted answer (from 2016) already discusses the <code>codesign --remove-signature</code> approach</span>",
                    "time": null
                }
            ]
        }
    ]
}