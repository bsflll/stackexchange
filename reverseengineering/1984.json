{
    "title": "API for LockState Wireless Internet Thermostat",
    "link": "https://reverseengineering.stackexchange.com/questions/1984/api-for-lockstate-wireless-internet-thermostat",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I want to develop a web-based API in Rails for some <a href=\"http://rads.stackoverflow.com/amzn/click/B0071IWJ62\" rel=\"nofollow\">LockState wifi programmable thermostats</a>, so that other different application can control these thermostats. But I'm cannot find any resource about how these thermostats are accessible from the Internet and how to connect to these thermostats. Is there any documentation available? If not, how would I find how to interact with the thermostats?</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "431",
    "tags": [
        "interoperability",
        "api",
        "embedded"
    ],
    "user": "rony36",
    "time": "May 2, 2013 at 12:25",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">So you want to reverse engineer the API that is apparently used by some proprietary application? Do you have the proprietary application? Do you have one of the thermostats?</span>",
            "time": null
        },
        {
            "user": "Till",
            "text": "<span class=\"comment-copy\">Given that you could answer @0xC0000022L's question with a <code>yes</code>, the next step would be using a traffic sniffer (e.g. wireshark) or logging proxy (e.g. Charles) for gathering information on the control requests and their answers.</span>",
            "time": null
        },
        {
            "user": "rony36",
            "text": "<span class=\"comment-copy\">yes, I have one.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Okay, so far your question is a bit meager on the informational side, but it's intriguing. Let me <em>start</em> an attempt to answer it. I'll not be able to answer it, lacking the device in question.</p>\n<h1>Methodology</h1>\n<p>Here's what I would do.</p>\n<ol>\n<li>Pose as a WiFi access point (AP). Most WiFi cards will allow you to do this, if the software side allows for it as well. If the existing access point is something like a Linux-based access point, you don't need anything else.</li>\n<li>Once you <em>are</em> the AP sniff the traffic that goes through the interface using Wireshark, <code>tcpdump</code> or similar tools.\n\n<ol>\n<li>Figure out the protocol used\n\n<ul>\n<li>if it's a plain text protocol you are only left with decoding the meaning of the sent data</li>\n<li>if it is encrypted\n\n<ol>\n<li>see whether you can use a man-in-the-middle attack to read the data stream</li>\n<li>try to find out the version of the server software. Usually embedded software is lagging behind a bit, so if you find it is vulnerable, you may be able to get a (<code>root</code>) shell.</li>\n<li>try to find firmware updates for the device and see whether tools like <code>binwalk</code> and <a href=\"http://code.google.com/p/firmware-mod-kit/\" rel=\"nofollow noreferrer\"><code>firmware-mod-kit</code></a> can make sense of them. Being able to unpack the firmware updates will give you a lot of information about the device and what's running on the current version, even if the versions may differ.</li>\n</ol></li>\n<li>if you find out that particular certificates are allowed and they are based based on a weak hash algorithm (<a href=\"http://en.wikipedia.org/wiki/MD5\" rel=\"nofollow noreferrer\">MD5</a>) or if it happens to be an <a href=\"http://lists.debian.org/debian-security-announce/2008/msg00152.html\" rel=\"nofollow noreferrer\">SSH key created on Debian while it was vulnerable</a>. In the former case you may be able to forge a certificate and in the latter you will be able to brute-force an otherwise secure SSH connection</li>\n</ul></li>\n</ol></li>\n<li>Failing all of the above and being able (financially) to sacrifice one of the devices, I'd take it apart and try to find whether I can get a serial console or whether <a href=\"https://reverseengineering.stackexchange.com/q/1374/245\">JTAG</a> pins/contacts are available. If I was able to find out more about the used chips, I'd give boundary scanning a try.</li>\n</ol>\n<p>The further down you were reading the more hurdles to take and the harder the approach. Now, perhaps you edit more details into your question if this partial answer gets you started.</p>\n</div>",
            "votes": "6",
            "user": "3 revs, 2 users 90%0xC0000022L",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Till",
                    "text": "<span class=\"comment-copy\">great answer - I would never have thought about possible SSH usage etc. not to mention on how to tackle that. Still my guess (and it really is just a guess!) is that the traffic/API will be plain HTTP based, JSON formatted REST stuff.</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@Till: likely indeed. But without further input from the OP we won't be able to give anything but an outline of a generic approach as I did. Oh well :)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This thermostat looks identical to the Radio Thermostat CT-50. That device has an open JSON API which you can read on their website.  <a href=\"http://radiothermostat.com\" rel=\"nofollow\">http://radiothermostat.com</a></p>\n</div>",
            "votes": "2",
            "user": "Joe Zydeco",
            "time": "Jun 27, 2013 at 20:04",
            "is_accepted": false,
            "comments": [
                {
                    "user": "asheeshr",
                    "text": "<span class=\"comment-copy\">Please add some of the relevant information into the answer itself. <i>Link only</i> posts are not considered answers.</span>",
                    "time": null
                }
            ]
        }
    ]
}