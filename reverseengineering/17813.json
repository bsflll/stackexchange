{
    "title": "Alter /proc/cmdline for QEMU emulated process",
    "link": "https://reverseengineering.stackexchange.com/questions/17813/alter-proc-cmdline-for-qemu-emulated-process",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am using <code>qemu-arm</code> to run a statically linked binary on an Ubuntu system. There is little to no chance of emulating the entire system.</p>\n<p>The binary reads <code>/proc/cmdline</code> as it starts up, to check for a specific parameter concerning MTD partitions. Obviously, my <code>/proc/cmdline</code> does not match.</p>\n<p>Is there any easy way to alter the contents of <code>/proc/cmdline</code> for this emulated binary?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "168",
    "tags": [
        "qemu"
    ],
    "user": "Cybergibbons",
    "time": "Apr 3, 2018 at 12:49",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The typical way to do something like this is to write a small library that intercepts open/read and fakes out the data your program is looking for, and then arrange for that library to be loaded by passing in an <code>LD_PRELOAD</code> environment variable (QEMU's <code>-E</code> option).</p>\n<p>It's pretty straightforward; you could adapt the instructions here on <a href=\"http://www.devttys0.com/2012/03/emulating-nvram-in-qemu/\" rel=\"nofollow noreferrer\">emulating NVRAM in QEMU</a>.</p>\n</div>",
            "votes": "1",
            "user": "Brendan Dolan-Gavitt",
            "time": "Mar 26, 2018 at 16:18",
            "is_accepted": false,
            "comments": []
        }
    ]
}