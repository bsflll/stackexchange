{
    "title": "How to find status and path of the specific module with C in the windows? [duplicate]",
    "link": "https://reverseengineering.stackexchange.com/questions/8826/how-to-find-status-and-path-of-the-specific-module-with-c-in-the-windows",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>This question already has an answer here</b>:\n                                \n                            </div>\n</div>\n</div>\n</div>\n<div class=\"flex--item mb0 mt4\">\n<a dir=\"ltr\" href=\"/questions/8297/proc-self-maps-equivalent-on-windows\">/proc/self/maps equivalent on windows</a>\n<span class=\"question-originals-answer-count\">\n                                (1 answer)\n                            </span>\n</div>\n<div class=\"flex--item mb0 mt8\">Closed <span class=\"relativetime\" title=\"2015-05-07 17:34:11Z\">9 years ago</span>.</div>\n</div>\n</aside>\n</div>\n<p>How to find status and path of the specific module with C in the windows?</p>\n<p>such as windbg lm (list loaded module)</p>\n<pre><code>kd&gt; lm m cdd\nstart    end       module   name\n93ae0000 93afe000  cdd          (deferred)\n</code></pre>\n<p>I need start of module(.<em>sys</em>) but on C code</p>\n<p>thanks</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "581",
    "tags": [
        "debugging",
        "c",
        "windbg",
        "kernel-mode",
        "driver"
    ],
    "user": "forbiddenhi",
    "time": "9 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>VirtualQueryEx()</code> is the way to go if you want a memory map of a target process.</p>\n<p>However, if you want information about modules only, you can extract it from the PEB of the target process.</p>\n<p>Get the PEB address using <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms684280%28v=vs.85%29.aspx\" rel=\"nofollow\"><code>NtQueryInformationProcess</code></a>, using <code>ProcessBasicInformation</code> for the <code>ProcessInformationClass</code>, so it writes a <code>PROCESS_BASIC_INFORMATION</code>. This structure has a <code>PebBaseAddress</code> field that gives you the PEB address.</p>\n<p>Using this PEB address, access to the <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa813706%28v=vs.85%29.aspx\" rel=\"nofollow\"><code>PPEB_LDR_DATA Ldr</code></a> field, it contains a list named <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa813708%28v=vs.85%29.aspx\" rel=\"nofollow\"><code>InMemoryOrderModuleList</code></a> that you can use to iterate through all the modules of the process.</p>\n<p><a href=\"https://gist.github.com/Spl3en/9c0ea329bb7878df9b9b\" rel=\"nofollow\">Here</a> is a demonstration of that technique.</p>\n<p>Output :</p>\n<pre><code>modules.exe    : 0x00400000 -&gt; 0x00422fff (C:\\Users\\Spl3en\\Desktop\\modules.exe)\nntdll.dll      : 0x81d20000 -&gt; 0x81ec8fff (C:\\Windows\\SYSTEM32\\ntdll.dll)\nKERNEL32.DLL   : 0x7f660000 -&gt; 0x7f798fff (C:\\Windows\\system32\\KERNEL32.DLL)\nKERNELBASE.dll : 0x7f450000 -&gt; 0x7f55dfff (C:\\Windows\\system32\\KERNELBASE.dll)\nmsvcrt.dll     : 0x7f970000 -&gt; 0x7fa16fff (C:\\Windows\\system32\\msvcrt.dll)\n</code></pre>\n</div>",
            "votes": "5",
            "user": "Spl3en",
            "time": "May 9, 2015 at 10:10",
            "is_accepted": false,
            "comments": [
                {
                    "user": "forbiddenhi",
                    "text": "<span class=\"comment-copy\">I need this information for .sys file</span>",
                    "time": null
                },
                {
                    "user": "Spl3en",
                    "text": "<span class=\"comment-copy\">@forbiddenhi that's almost the same, even simplier ! Use <code>SystemModuleInformation</code> in <code>ZwQuerySystemInformation</code>. Take a look here if you want an implementation : <a href=\"https://github.com/zer0box/zer0m0n/blob/master/src/driver/module.c#L89\" rel=\"nofollow noreferrer\">github.com/zer0box/zer0m0n/blob/master/src/driver/module.c#L89</a></span>",
                    "time": null
                }
            ]
        }
    ]
}