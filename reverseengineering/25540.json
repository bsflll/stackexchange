{
    "title": "Why are relocation tables needed?",
    "link": "https://reverseengineering.stackexchange.com/questions/25540/why-are-relocation-tables-needed",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I understand that the relocation table exists for when an image isn't loaded at its preferred address, but if an image isn't loaded at its preferred address, doesn't everything need to be relocated relative to the actual load address? Isn't that the whole point of an RVA? What makes addresses that have entries in the relocation table different?</p>\n<p>(My first question, please point out mistakes if I made them. Thanks.)</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "803",
    "tags": [
        "pe"
    ],
    "user": "ehargitt",
    "time": "Jul 24, 2020 at 12:20",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Relative Virtual Address = RVA  it is relative within the address space</p>\n<p>jmp here+78  will always jump +78 from wherever here is</p>\n<p>now jump 402078 will always try to jump to 402078</p>\n<p>this will only succeed if 402078's preferred loading address was 400000 and the binary</p>\n<p>loaded at 400000</p>\n<p>if it loaded at 600000 then 402078 does not exist in that address space and will result in access vioaltion</p>\n<p>here relocation table is required</p>\n<p>Loader when loading the binary will check preferred address  and patch the 402078 to 602078  when loading</p>\n<p><a href=\"https://reverseengineering.stackexchange.com/questions/20057/call-instruction-changed-while-running/20058#20058\">posts that contain relevent information</a></p>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "Jul 24, 2020 at 17:30",
            "is_accepted": true,
            "comments": []
        }
    ]
}