{
    "title": "Is there a meaning to the test instruction if it isnt followed by a conditional jump?",
    "link": "https://reverseengineering.stackexchange.com/questions/26389/is-there-a-meaning-to-the-test-instruction-if-it-isnt-followed-by-a-conditional",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Pasting a snippet of code I found inside a malware sample.</p>\n<pre><code>0040F695    push ecx                    \n0040F696    lea ecx,dword ptr ss:[esp+8]\n0040F69A    sub ecx,1000                \n0040F6A0    sub eax,1000                \n0040F6A5    test dword ptr ds:[ecx],eax \n0040F6A7    cmp eax,1000                \n0040F6AC    jae sample.40F69A           \n0040F6AE    sub ecx,eax                 \n0040F6B0    mov eax,esp                 \n0040F6B2    test dword ptr ds:[ecx],eax \n0040F6B4    mov esp,ecx                 \n0040F6B6    mov ecx,dword ptr ds:[eax]  \n0040F6B8    mov eax,dword ptr ds:[eax+4]\n0040F6BB    push eax                    \n0040F6BC    ret                                                \n</code></pre>\n<p>I am not sure what the test instruction achieves here. I am used to seeing a conditional jump right after it. But here there is a test, cmp and then a conditional jump and also a test followed by no jumps. Would it make any difference if the test instructions were omitted?</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "66",
    "tags": [
        "assembly",
        "x86"
    ],
    "user": "user1720897",
    "time": "Nov 29, 2020 at 8:51",
    "comments": [
        {
            "user": "bart1e",
            "text": "<span class=\"comment-copy\">It seems like a junk instruction here. The result of the first <code>test</code> is not used because of a <code>cmp</code> right after it, but there is still a (small) chance that the result of the second <code>test</code> is actually used later on after <code>ret</code> - it affected flags whch were not overwritten afterwards. The first <code>test</code> is a junk instruction and so is the second most likely.</span>",
            "time": null
        },
        {
            "user": "user1720897",
            "text": "<span class=\"comment-copy\">@bart1e Can this sort of instruction be used to put off decompilers?</span>",
            "time": null
        },
        {
            "user": "bart1e",
            "text": "<span class=\"comment-copy\">Possibly, but I think that these esp manipulations confuse decompilers even more.</span>",
            "time": null
        }
    ],
    "answers_data": []
}