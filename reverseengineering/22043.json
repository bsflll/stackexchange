{
    "title": "Dumping a NAND Flash",
    "link": "https://reverseengineering.stackexchange.com/questions/22043/dumping-a-nand-flash",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am currently trying to dump the content of a NAND Flash that is part of an embedded system. </p>\n<p>The chip is a QCA4531 and the NAND Flash is a GD5F1GQ4RCYIG. The module consists of 28 Pins, 14 per side. The NAND Flash has 8 contacts, 4 per side.</p>\n<p>I am pretty new to this but I already did some reasearch work and I think I am not that far away anymore but the \"last\" step is giving me some headaches.</p>\n<p>I am a little bit limited because I can't desolder the NAND Flash so I try to get access to its content while it's still assembled. </p>\n<p>My idea was getting the Bus Pirate v4, connecting it to the NAND Flash and reading out the content via flashrom. I knew that flashrom has some problems with the Bus Pirate when it is used in a Virtual Machine from the DangerousPrototypes Forum but I tried it anyways and as expected it doesn't really work. So I tried to get a Windows version of flashrom. Unfortunately it's a pretty old one but I wanted to see what happens when I try to read out the Flash and I got the following output:</p>\n<p>Found Chip \"Generic unknown SPI chip (RDID)\" (0 KB, SPI) at physical address 0x0.\nThis flash part has status NOT WORKING for operations: PROBE READ ERASE WRITE</p>\n<p>I am a little bit confused right now, is there any other tool that I can use to read out the Flash or what can I do to access the content?</p>\n<p>Btw since the Flash is still soldered to the embedded system is it important to hold the system in reset? I read something about that but I didn't want to do that before understanding why this could be an issue.</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "hardware",
        "flash",
        "firmware-analysis"
    ],
    "user": "Ramazuri",
    "time": "Oct 15, 2019 at 10:23",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">what kind of chips is that? how many pins?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It seems you have an SPI NAND chip and not a more common SPI NOR on which flashrom specializes. The support for SPI NAND in flashrom is <a href=\"https://github.com/flashrom/flashrom/pull/62\" rel=\"nofollow noreferrer\">pretty new</a>, covers only Toshiba and Micron for now and is not even merged in the master branch yet, so it's very unlikely your build even has it. You can try to either add support for GigaDevice on your own (e.g. from the datasheet or <a href=\"https://patchwork.ozlabs.org/patch/493667/\" rel=\"nofollow noreferrer\">this OpenWrt patch</a>) or contact flashrom <a href=\"https://flashrom.org/Mailinglist\" rel=\"nofollow noreferrer\">mailing list</a> or <a href=\"https://flashrom.org/IRC\" rel=\"nofollow noreferrer\">IRC channel</a> to confirm if there are plans to support GigaDevice NAND parts and get help getting it work.</p>\n<p>For the common problems that may affect reading flash while it's on board, see <a href=\"https://flashrom.org/ISP\" rel=\"nofollow noreferrer\">https://flashrom.org/ISP</a></p>\n</div>",
            "votes": "4",
            "user": "Igor Skochinsky",
            "time": "Sep 5, 2019 at 12:38",
            "is_accepted": true,
            "comments": []
        }
    ]
}