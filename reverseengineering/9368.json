{
    "title": "Android priority values",
    "link": "https://reverseengineering.stackexchange.com/questions/9368/android-priority-values",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Reversing some Android malware I see that it sets <code>android:priority</code> to 10000 in the AndroidManifest.xml file. Looking at the Android Documentation I see that it needs a value &gt; <code>-1000</code> and &lt; <code>1000</code>.</p>\n<p>How does this work? Is <code>10000</code> a valid priority value? Are there legitimate applications that use that priority value?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "android"
    ],
    "user": null,
    "time": "Jul 16, 2015 at 16:21",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The <a href=\"http://developer.android.com/reference/android/content/IntentFilter.html\" rel=\"nofollow\">Android documentation</a> does, indeed, specify <code>SYSTEM_HIGH_PRIORITY = 1000</code> and <code>SYSTEM_LOW_PRIORITY = -1000</code>. Those are guidelines, though: the <a href=\"https://android.googlesource.com/platform/frameworks/base/+/master/core/java/android/content/IntentFilter.java\" rel=\"nofollow\">IntentFilter source code</a> doesn't actually check the priority. This means the actual range is from -2,147,483,648 to 2,147,483,647.\nBy using a very high value the malware can guarantee to run its receiver before any other. Since it doesn't follow the guidelines, it shouldn't be used in production/not malicious code. </p>\n</div>",
            "votes": "1",
            "user": "Andrea Biondo",
            "time": "Jul 16, 2015 at 18:02",
            "is_accepted": true,
            "comments": [
                {
                    "user": "DataDino",
                    "text": "<span class=\"comment-copy\">I've seen more then a few apps that use MAX_INT (2,147,483,647) for the priority of an IntentFilter that weren't considered malware. This use to be used a lot by SMS apps for receiving SMS because you wanted to be able to abort() the broadcast of the SMS to the other apps so that the given app was the only app that got the SMS, but that has gone away mostly with Android L and the Default SMS App feature.</span>",
                    "time": null
                },
                {
                    "user": "Andrea Biondo",
                    "text": "<span class=\"comment-copy\">@DataDino Yes, that's true. I wasn't saying that using <code>MAX_INT</code> is only done by malware, I was pointing out the reason why the malware is using it. It's still an hack though, and should be avoided if other options exist (for example, it won't work if two SMS apps use this trick - the one installed first will get it because same-priority receivers are handled in that order).</span>",
                    "time": null
                }
            ]
        }
    ]
}