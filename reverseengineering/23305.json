{
    "title": "GDB hangs when I try to run and debug a binary",
    "link": "https://reverseengineering.stackexchange.com/questions/23305/gdb-hangs-when-i-try-to-run-and-debug-a-binary",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>When I type <code>gdb a.out</code> and then <code>run</code> inside the gdb itself <strong>I get stuck on the empty line</strong>:</p>\n<pre><code>jericho-laptop:exploit.education jericho$ gdb a.out \nGNU gdb (GDB) 9.1\n...\nReading symbols from a.out...\n(No debugging symbols found in a.out)\n(gdb) run\nStarting program: /Users/jericho/Desktop/exploit.education/a.out \n[New Thread 0x2703 of process 53514]\n[New Thread 0x2603 of process 53514]\n\n  &lt;&lt;&lt; STUCK IN HERE &gt;&gt;&gt;\n</code></pre>\n<p>It obviously says 2 threads of a process 53514 were created. Though the program is not multi-threaded it is a simple tiny C crackme with only a main function.</p>\n<p>The console gets stuck, I can type whatever I want but I can't get it to continue and I can't get it to quit. I have to forcibly close the terminal window.</p>\n<h2>What am I doing wrong?</h2>\n<p>I don't know what to do. The GDB does the same for any other binary I try to run. I am using MacOS with gdb 9.1 which I codesigned.</p>\n</div>",
    "votes": "5",
    "answers": 3,
    "views": "12k",
    "tags": [
        "assembly",
        "debugging",
        "gdb",
        "macos"
    ],
    "user": "user3732445",
    "time": "Feb 20, 2020 at 14:18",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">Dod you try some static analysis to check if maybe there aren’t any anti-debugging tricks?</span>",
            "time": null
        },
        {
            "user": "user3732445",
            "text": "<span class=\"comment-copy\">@PawełŁukasik there aren't any anti-debugging tricks. I know that because I have the C source code :-) Intentionally I am trying to analyze the resulting binary. And as I said already, even if I run it on any other binary the result is the same, the GDB gets stuck.</span>",
            "time": null
        },
        {
            "user": "julian",
            "text": "<span class=\"comment-copy\">This issue looks similar to the one listed here: <a href=\"https://github.com/Homebrew/homebrew-core/issues/34750\" rel=\"nofollow noreferrer\">github.com/Homebrew/homebrew-core/issues/34750</a> . If this problem occurs whenever gdb is used regardless of which binary is being debugged, clearly it’s a problem with that build of gdb.</span>",
            "time": null
        },
        {
            "user": "honey_badger",
            "text": "<span class=\"comment-copy\">On line 5: \"(No debugging symbols found in a.out)\". Did you compile with debugging info (-g flag for gnu compilers)? Anyhow, this will probably not fix the hanging issue, which was reported to <code>gdb</code> developers <a href=\"https://sourceware.org/bugzilla/show_bug.cgi?id=24069\" rel=\"nofollow noreferrer\">sourceware.org/bugzilla/show_bug.cgi?id=24069</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It looks like the problem is partially fixed by running <code>set startup-with-shell off</code> inside the <code>gdb</code>. Why? I don't know, no clue, I just read it somewhere.</p>\n<p>If anyone has a different solution or know why this works, please, tell us here.</p>\n</div>",
            "votes": "8",
            "user": "user3732445",
            "time": "Feb 20, 2020 at 17:23",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Steven Scott",
                    "text": "<span class=\"comment-copy\">set startup-with-shell off seems to work for me using gdb 12.1 (from homebrew) and the code signing instructions found here: <a href=\"https://gist.github.com/mike-myers-tob/9a6013124bad7ff074d3297db2c98247\" rel=\"nofollow noreferrer\">gist.github.com/mike-myers-tob/9a6013124bad7ff074d3297db2c98247</a></span>",
                    "time": null
                },
                {
                    "user": "Frenzy Li",
                    "text": "<span class=\"comment-copy\">Life-saving helpful! Works for gdb 13.1 (brew). Code signing instructions from <a href=\"https://sourceware.org/gdb/wiki/PermissionsDarwin#Create_a_certificate_in_the_System_Keychain\" rel=\"nofollow noreferrer\">the GDB Wiki</a>.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If you've only opened the program in GDB and used <code>run</code>, then your program will start without stopping to let you debug it. GDB will typically only begin prompting you for input on an exception, signal, or breakpoint.</p>\n<p>What you most likely need to do is to set a breakpoint on main, or some other function of interest, and then use run. This will make gdb stop at the breakpoint and prompt you for what to do next.</p>\n<p>A handy alternative to <code>b main; run</code> is the <code>start</code> command. <code>start</code> will drop a breakpoint at main, or any other appropriate entry point in the binary, and immediately begin running the program.</p>\n<p>In summary, the following should work:</p>\n<pre><code>$ gdb a.out\n...\n\n(gdb) b main\n...\n\n(gdb) run &lt;args&gt;\n</code></pre>\n<p>Or with start:</p>\n<pre><code>$ gdb a.out\n...\n\n(gdb) start &lt;args&gt;\n...\n</code></pre>\n<p>More information and detail is available here:</p>\n<ul>\n<li><a href=\"https://sourceware.org/gdb/onlinedocs/gdb/Starting.html\" rel=\"nofollow noreferrer\">https://sourceware.org/gdb/onlinedocs/gdb/Starting.html</a></li>\n</ul>\n</div>",
            "votes": "2",
            "user": "Chris",
            "time": "Feb 21, 2020 at 3:22",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I think you're not doing anything wrong, you're experiencing this bug:\n<a href=\"https://sourceware.org/bugzilla/show_bug.cgi?id=24069\" rel=\"nofollow noreferrer\">https://sourceware.org/bugzilla/show_bug.cgi?id=24069</a></p>\n<p>Usually if you retry several times you might get it to work eventually; it looks like a race condition.</p>\n<p>The patch proposed in the bug report kind of works for me on macOS 10.15.5: instead of just hanging, GDB errors out upon <code>run</code> with:</p>\n<pre><code>During startup program terminated with signal ?, Unknown signal\n</code></pre>\n<p>but at least it does not hang. You can then retry <code>run</code> (or <code>start</code>) until it works.</p>\n</div>",
            "votes": "2",
            "user": "philb",
            "time": "Jun 26, 2020 at 22:35",
            "is_accepted": false,
            "comments": []
        }
    ]
}