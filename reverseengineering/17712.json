{
    "title": "Static Offset in PE",
    "link": "https://reverseengineering.stackexchange.com/questions/17712/static-offset-in-pe",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am making a crackme, that get's hexadecimal values and converts it to ASCII to get the password.</p>\n<p>The problem is I use a part of code into the main function to search the opcodes from <strong>.text</strong> section which could make the corresponding ASCII password.</p>\n<p>So, using that part of code I get the offsets but when I remove that code the offsets change and I am left with garbage text. </p>\n<p>If I change some code, can it be certain that after compilation the opcodes above it in PE file won't change ?</p>\n<p>e.g. : </p>\n<pre><code>#include &lt;windows.h&gt;\n#include &lt;tchar.h&gt;\n#include &lt;vector&gt;\n#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\n#include &lt;string&gt;\n\n#ifdef UNICODE\n#  define tcout wcout\n#  define tcerr wcerr\n#else\n#  define tcout cout\n#  define tcerr cerr\n#endif\n\nconst UINT DUMP_SIZE = 96;\nconst UINT DEFAULT_DUMP_SIZE = 4096;\n\nusing namespace std;\n\nVOID ImageInformation( HMODULE&amp; hModule, PVOID&amp; pVirtualAddress,PVOID&amp; pCodeStart, SIZE_T&amp; dwCodeSize,PVOID&amp; pCodeEnd );\nint hsearch( LPCVOID pcbStartAddress, LPCVOID pDisplayBaseAddress,DWORD dwSize, int toSearch );\nvector&lt;int&gt; calculate_flag(int []);// For checking the user input\n\nint main(int argc, _TCHAR* argv[])\n{\n    cout&lt;&lt;\"\\t\\t &lt;&lt; Welcome to My CrackME &gt;&gt;\\n\\n\"&lt;&lt;endl;\n    cout&lt;&lt;\"Enter 10 Numbers, I give you the flag \"&lt;&lt;endl;\n    HMODULE hModule = NULL;\n    PVOID   pVirtualAddress = NULL;\n    PVOID   pCodeStart = NULL;\n    PVOID   pCodeEnd = NULL;\n    SIZE_T  dwCodeSize = 0;\n\n    ImageInformation( hModule, pVirtualAddress, pCodeStart,dwCodeSize, pCodeEnd );\n    int input[10];\n    for(int i=0; i&lt;10; i++){\n        cin&gt;&gt;input[i];\n    }\n    vector&lt;int&gt; result = calculate_flag(input);\n    for(int i=0; i&lt;40; i++){\n        printf(\"%c\",(((PBYTE)pCodeStart)[ input[i] ]));\n    }\n    //cout&lt;&lt;result&lt;&lt;endl;\n    //\n    cout&lt;&lt;endl;\n    /*int flg[40] = {....flag array here...};\n    vector &lt;int&gt; v;\n    for(int characters=0; characters&lt;40; characters++){\n            int location = hsearch(pCodeStart, pCodeStart, dwCodeSize, flg[characters]);\n            v.push_back(location);\n            printf(\"%d \",location);\n    }\n    string res;\n    for(int i=0; i&lt;v.size(); i++){\n        if(v[i] == -1){\n            printf(\" \\n\");\n        }else{\n            printf(\"%c\",(((PBYTE)pCodeStart)[ v[i] ]));\n            res.push_back((char)(((PBYTE)pCodeStart)[ v[i] ]));\n        }\n    }\n    for(int i=0;i&lt;100;i++)\n        printf(\" \");\n    printf(\"%s\\n\",result);\n    cout&lt;&lt;result&lt;&lt;endl;*/\n    return 0;\n}\n\nvector&lt;int&gt; calculate_flag(int input[]){\n....\nOther functions defined\nhsearch : Used to get the offsets\n</code></pre>\n<h3>Problem</h3>\n<p>If I'm removing the hsearch function, why the offset of previous statements change ?</p>\n<p>How do I get the part of code whose offset won't change, so as I can use that to make this crackme ?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "197",
    "tags": [
        "disassembly",
        "windows",
        "decompilation",
        "pe",
        "crackme"
    ],
    "user": "jame",
    "time": "Mar 16, 2018 at 13:07",
    "comments": [
        {
            "user": "jame",
            "text": "<span class=\"comment-copy\">@usr2564301 sorry, I don't get your point.What do you mean to say and how do I achieve what I want to achieve in this crackme ?</span>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">@usr2564301 please don't use comments for answers. better make a proper answer and explain the reason.</span>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">@IgorSkochinsky: I can't tell OP how to properly do it. (OP also did not understand my comment, so nothing lost there.)</span>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">@usr2564301 it could still be helpful for others having a similar issue... comments should be used to ask for clarifications, not answers (or attempts of)</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Your question is very unclear, but as for this specific question:</p>\n<blockquote>\n<p>If I change some code, can it be certain that after compilation the opcodes above it in PE file won't change ?</p>\n</blockquote>\n<p>The answer is no. If you change part of the program, the compiler may change different parts of the program that you did not modify. The two most accessible examples are functions called by the function you modified, and functions that call the modified function. In both cases, your changes to one function might result in the compiler manufacturing a different calling convention for any of the functions just mentioned, or the compiler may perform something along the lines of interprocedural common subexpression elimination. Then there are other optimizations like profile-guided ones that might drastically change the binary, although you'll know if you're using profile-guided optimizations, which it seems very strongly like you aren't.</p>\n</div>",
            "votes": "1",
            "user": "Rolf Rolles",
            "time": "Mar 19, 2018 at 21:13",
            "is_accepted": false,
            "comments": []
        }
    ]
}