{
    "title": "Context-Free Grammar from Samples",
    "link": "https://reverseengineering.stackexchange.com/questions/1410/context-free-grammar-from-samples",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Is there a tool available that will generate a grammar from a corpus of sample inputs, similar to what <a href=\"http://hotfuzz.sourceforge.net/\" rel=\"noreferrer\">HotFuzz</a> does for network protocols?</p>\n<p>For example, given a collection of MP3 files, I'm looking for a tool that would generate a BNF grammar to describe the format of MP3.</p>\n</div>",
    "votes": "9",
    "answers": 1,
    "views": "938",
    "tags": [
        "tools",
        "fuzzing"
    ],
    "user": "mrduclaw",
    "time": "Mar 31, 2013 at 20:24",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I haven't used either, but <a href=\"http://peachfuzzer.com/\" rel=\"nofollow\">Peach Fuzzer</a>, on which HotFuzz is based, has a \"Peach Fuzz Bang\" GUI for fuzzing files.</p>\n<p>Keep in mind, though, that fuzzers try to generate <em>invalid</em> inputs that crash a program, not determine the exact grammar that describes all valid input.</p>\n<p>Furthermore, strictly speaking, it isn't mathematically possible to do what you're asking. If a computer could comprehensively learn a language merely by reading text in that language, then machine translation would be a solved problem. (This is a slightly poor analogy since <a href=\"http://www.eecs.harvard.edu/~shieber/Biblio/Papers/shieber85.pdf\" rel=\"nofollow\">not all human languages are context-free</a>, but the idea is clear.)</p>\n</div>",
            "votes": "3",
            "user": "Daniel W. Steinbrook",
            "time": "Apr 2, 2013 at 14:28",
            "is_accepted": false,
            "comments": [
                {
                    "user": "mrduclaw",
                    "text": "<span class=\"comment-copy\">I'm probably showing my ignorance, but it doesn't <i>seem</i> like it should be that impossible of a problem, right?  Given a bunch of sample data, I should be able to diff and determine the general structure (e.g. 4-byte header that stays the same, followed by a 4-byte int, maybe a NULL-terminated string follows, etc).  Why would doing that be impossible?</span>",
                    "time": null
                },
                {
                    "user": "Daniel W. Steinbrook",
                    "text": "<span class=\"comment-copy\">@mrduclaw: It's just the title of your question that's the impossibly general part, and is the subject of <a href=\"http://aclweb.org/anthology-new/O/O06/O06-1004.pdf\" rel=\"nofollow noreferrer\">research</a>. If you just want to figure out the common header structure of a set of binary files, see <a href=\"http://stackoverflow.com/questions/492751/tools-to-help-reverse-engineer-binary-file-formats\">this SO question</a>, which has some good answers.</span>",
                    "time": null
                },
                {
                    "user": "mrduclaw",
                    "text": "<span class=\"comment-copy\">Great paper suggestion, seems far from impossible, thanks!</span>",
                    "time": null
                },
                {
                    "user": "Mathew Hall",
                    "text": "<span class=\"comment-copy\"><a href=\"http://www.cse.iitk.ac.in/users/chitti/thesis/references/learningRegSetsFromQueriesAndCounterExamples.pdf\" rel=\"nofollow noreferrer\">Angluin's paper on L*</a> gives a proof that grammar inference can be achieved in polynomial time if an oracle is available to answer membership queries. <a href=\"http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.53.5084\" rel=\"nofollow noreferrer\">This paper</a> includes descriptions and discussion of performance of other algorithms for grammar inference. An approach as used by <a href=\"http://repository.cmu.edu/cgi/viewcontent.cgi?article=1007&amp;context=ece\" rel=\"nofollow noreferrer\">Polyglot</a> might scale better, though.</span>",
                    "time": null
                },
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">Here are some papers about a technique to derive a context free grammar based on the binary analysis of the polymorphic engine of a virus <a href=\"http://ieeexplore.ieee.org/ielx5/6044613/6059944/06059958.pdf?tp=&amp;arnumber=6059958&amp;isnumber=6059944\" rel=\"nofollow noreferrer\">[1</a>,<a href=\"http://www.labri.fr/perso/tabary/publis/polysigns.pdf\" rel=\"nofollow noreferrer\">2</a>,<a href=\"http://www.labri.fr/perso/tabary/publis/nss2011-slides.pdf\" rel=\"nofollow noreferrer\">3</a>]. I am not sure it is really relevant here... But, maybe you can find some use of it.</span>",
                    "time": null
                }
            ]
        }
    ]
}