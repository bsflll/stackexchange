{
    "title": "Determine what architecture a piece of shellcode targets",
    "link": "https://reverseengineering.stackexchange.com/questions/21507/determine-what-architecture-a-piece-of-shellcode-targets",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>After some personal research I didn't find any possible way or a paper to explain how to determine what architecture a given piece of shellcode may targets. The only obvious way I found would be to disassemble it for various architectures and check for which one of those the assembly code makes any sense. But this way demands that an actual person has to study the assembly code every time. So is there any other way that we can use to be certain that a piece of shellcode targets a certain architecture? Thank you in advance!</p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "190",
    "tags": [
        "disassembly",
        "assembly",
        "malware",
        "shellcode"
    ],
    "user": "game0ver",
    "time": "Jun 18, 2019 at 16:45",
    "comments": [
        {
            "user": "0xec",
            "text": "<span class=\"comment-copy\">A possible way can be to train neural net on various pieces shellcode classifying them as per their architecture. There are some research paper based on this idea.</span>",
            "time": null
        },
        {
            "user": "camp0",
            "text": "<span class=\"comment-copy\">You can check <a href=\"http://shell-storm.org/shellcode/\" rel=\"nofollow noreferrer\">shell-storm.org/shellcode</a> and take some of the samples that they have and see the differences, you can see that some of them are easy to spot.</span>",
            "time": null
        },
        {
            "user": "game0ver",
            "text": "<span class=\"comment-copy\">@camp0 yes that would work but that's what I'm trying to avoid. I'm looking for a general and automatic way to do that!</span>",
            "time": null
        },
        {
            "user": "game0ver",
            "text": "<span class=\"comment-copy\">@0xec that sounds very interesting, could you please provide some links to such papers?</span>",
            "time": null
        },
        {
            "user": "0xec",
            "text": "<span class=\"comment-copy\"><i><a href=\"https://people.eecs.berkeley.edu/~dawnsong/papers/Recognizing%20functions%20in%20binaries%20with%20neural%20networks_augsut%202015.pdf\" rel=\"nofollow noreferrer\">Recognizing Functions in Binaries  with Neural Networks</a></i> and <i><a href=\"https://www.usenix.org/system/files/conference/usenixsecurity17/sec17-chua.pdf\" rel=\"nofollow noreferrer\">Neural Nets Can Learn Function Type  Signatures From Binaries</a></i></span>",
            "time": null
        }
    ],
    "answers_data": []
}