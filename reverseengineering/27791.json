{
    "title": "Is there a way to decompress a Fody-Costura generated exe in c#?",
    "link": "https://reverseengineering.stackexchange.com/questions/27791/is-there-a-way-to-decompress-a-fody-costura-generated-exe-in-c",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There is a program that is possibly a RAT, and I would like to view the source code.\nAfter opening the .exe in dnSpy, I was able to tell that it was compressed with Fody-Costura. (<a href=\"https://github.com/Fody/Costura\" rel=\"nofollow noreferrer\">https://github.com/Fody/Costura</a>)\nIs there any way to de-compress the file? If so, how?</p>\n</div>",
    "votes": "3",
    "answers": 2,
    "views": "1k",
    "tags": [
        "decompress",
        "c#",
        "exe",
        "windows-10",
        "dnspy"
    ],
    "user": "Nqndi",
    "time": "Jun 4, 2021 at 14:00",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Embedded assemblies needs to be decompressed before they can be used so you can inspect all the code that does that in the assembly. Just go to <code>Costura.AssemblyLoader</code> to check how it is done. below is a extract from a simple example using <code>Costura.Fody</code>.</p>\n<pre><code>Assembly executingAssembly = Assembly.GetExecutingAssembly();\nif (fullName.EndsWith(\".compressed\"))\n{\n    using (Stream manifestResourceStream = executingAssembly.GetManifestResourceStream(fullName))\n    {\n        using (DeflateStream deflateStream = new DeflateStream(manifestResourceStream, CompressionMode.Decompress))\n        {\n            MemoryStream memoryStream = new MemoryStream();\n            AssemblyLoader.CopyTo(deflateStream, memoryStream);\n            memoryStream.Position = 0L;\n            return memoryStream;\n        }\n    }\n}\n</code></pre>\n<p>You could modify this code to save decompressed assemblies to disk by adding a line <code>File.WriteAllBytes(fullName.Replace(\".compressed\", \"\"), memoryStream.ToArray());</code> or just extract dlls resources and decompress externally via python or anything else that can do deflate.</p>\n</div>",
            "votes": "4",
            "user": "Paweł Łukasik",
            "time": "Jun 5, 2021 at 6:27",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Nqndi",
                    "text": "<span class=\"comment-copy\">Hi! Thanks for the reply! How should I go about extracting the resources? I found a few resource extractors, but none of them seem to work.</span>",
                    "time": null
                },
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">dnSpy has an option to save reaources.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I had success using the <a href=\"https://github.com/G4224T/Fody-Costura-Decompress\" rel=\"nofollow noreferrer\">Fody-Costura-Decompress tool</a>.</p>\n<p>You would need to build the solution from source. it has a simple GUI for choosing your file and decompressing it.</p>\n</div>",
            "votes": "2",
            "user": "Alenros",
            "time": "Dec 12, 2022 at 8:19",
            "is_accepted": false,
            "comments": []
        }
    ]
}