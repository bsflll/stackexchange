{
    "title": "What is an indicator that a PE section definitely contains stuff of a specific type?",
    "link": "https://reverseengineering.stackexchange.com/questions/8350/what-is-an-indicator-that-a-pe-section-definitely-contains-stuff-of-a-specific-t",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I was recently working with the <a href=\"https://msdn.microsoft.com/en-us/windows/hardware/gg463119.aspx\" rel=\"noreferrer\">Microsoft documentation about the PE and COFF specifications</a>.</p>\n<p>Chapter 5 shows several more or less \"soft\" indicators and characteristics to recognize what kind of stuff a section contains. However, the section characteristics flag is often the same for several different sections, and as I have read, the section name can be of arbitrary value, so it is not a big help too.</p>\n<p>Actually, I can only definitely recognize code sections by looking if the <code>IMAGE_SCN_MEM_EXECUTE</code> flag is set, as other sections should not have this flag set.</p>\n<p>But how could I, for example, recognize the resource directory? It only has <code>IMAGE_SCN_CNT_INITIALIZED_DATA</code> or <code>IMAGE_SCN_MEM_READ</code> set, and many other sections have the same flag.</p>\n<p>Do I have to evaluate with some made-up and typical section names (<code>RSRC</code> or <code>.rsrc</code> for this example)? It will mean that I may get tricked out by custom section names. Do I even have to try-and-error analyzation of section data to get a more definite result of what the section contains?</p>\n<p>Or is there a flag somewhere in the PE headers I skipped, helping me out in this case?</p>\n</div>",
    "votes": "5",
    "answers": 1,
    "views": "860",
    "tags": [
        "windows",
        "pe",
        "file-format",
        "executable"
    ],
    "user": "Ray",
    "time": "Feb 28, 2015 at 17:27",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>I can only definitely recognize code sections by looking if the\n  <code>IMAGE_SCN_MEM_EXECUTE</code> flag is set, as other sections should not have\n  this flag set.</p>\n</blockquote>\n<p>The presence of this flag doesn't \"definitely\" mean that that section contains code, and the absence of this flag doesn't \"definitely\" mean that that section doesn't contain code:</p>\n<ul>\n<li>A PE file can have that flag on a non-code (data) section and still run fine (though this is not advisable from a security perspective).</li>\n<li>A PE file can have that flag missing from an actual code section, assuming that the operating system does not have <a href=\"http://en.wikipedia.org/wiki/Data_Execution_Prevention\">DEP</a> enabled and/or other code changes the memory protection of that section at runtime to make it executable.</li>\n</ul>\n<blockquote>\n<p>But how could I, for example, recognize the resource directory?</p>\n</blockquote>\n<p>The only reliable way to find the resource directory is via the <code>IMAGE_DIRECTORY_ENTRY_RESOURCE</code> entry in the PE file's <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms680305%28v=vs.85%29.aspx\"><code>IMAGE_DATA_DIRECTORY</code></a>.</p>\n</div>",
            "votes": "5",
            "user": "Jason Geffner",
            "time": "Feb 28, 2015 at 18:24",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Ray",
                    "text": "<span class=\"comment-copy\">Yeah, getting misleaded by \"wrong\" or badly set flags on purpose would also trick me out, but then at least I can say that I relied on the characteristic flags. I see that there are also data directories for import and export tables. That can help me further already, parsing the contents of those sections. If the result is still wrong, I just won't parse the section.</span>",
                    "time": null
                }
            ]
        }
    ]
}