{
    "title": "How can I control local variable ordering on stack in gcc?",
    "link": "https://reverseengineering.stackexchange.com/questions/14751/how-can-i-control-local-variable-ordering-on-stack-in-gcc",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am writing a reversing challenge where I need to seed a bug. It's important to have a particular ordering of local variable on stack in a method. However, gcc seems to shuffle those around. How can I control variable ordering in such cases?</p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "1k",
    "tags": [
        "stack",
        "gcc",
        "local-variables"
    ],
    "user": "sherlock",
    "time": "Feb 25, 2017 at 3:10",
    "comments": [
        {
            "user": "Kerim Can Kalıpcıoğlu",
            "text": "<span class=\"comment-copy\">Did you tried without all optimizations? Is it a overflow challenge? I found <a href=\"https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html\" rel=\"nofollow noreferrer\">this</a>, docs about optimization options. But, i cannot find any option similar to your problem. It has lots of reordering option though maybe one of them or combination of these options may be used for your situation. Another method can be using inline assembly.</span>",
            "time": null
        },
        {
            "user": "Ian Cook",
            "text": "<span class=\"comment-copy\">I think that wrapping your local variables in a structure should be enough to prevent GCC reordering them.</span>",
            "time": null
        }
    ],
    "answers_data": []
}