{
    "title": "IDA remote linux Debugger attach to a running process",
    "link": "https://reverseengineering.stackexchange.com/questions/19977/ida-remote-linux-debugger-attach-to-a-running-process",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I usually use remote linux debugger as shown below:</p>\n<pre><code>./linux_server bin\n</code></pre>\n<p>And in IDA Pro, I select Remote Linux Debugger as the debugger and set the process options accordingly with the IP address and port of the Linux machine. The default port is 23946.</p>\n<p>This works alright.</p>\n<p>However, if I already have a process running on the Linux Machine with PID: 400. How can I attach Remote Linux debugger to this already running process?</p>\n<p>I can see that linux_server provides only the following options:</p>\n<pre><code>$ ./linux_server --help\n  -i...  IP address to bind to (default to any)\n  -v     verbose\n  -p...  port number\n  -P...  password\n  -k     keep broken connections\n</code></pre>\n<p>Thanks.</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "3k",
    "tags": [
        "ida",
        "debugging",
        "linux"
    ],
    "user": "Neon Flash",
    "time": "Nov 27, 2018 at 1:31",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>IDA allows remote process debugging as shown in the fourth page <a href=\"https://www.hex-rays.com/products/ida/support/freefiles/remotedbg.pdf\" rel=\"nofollow noreferrer\">here</a> </p>\n<p>Note that you need to run the server with sudo so it could attach to the remote process.<br/>\nAlso note that you need to have the executable (more precisely, the database) that you want to debug in IDA.</p>\n<p>You can see what I did on the linux machine:</p>\n<p><a href=\"https://i.sstatic.net/PkkIv.png\" rel=\"nofollow noreferrer\"><img alt=\"linux machine screenshot\" src=\"https://i.sstatic.net/PkkIv.png\"/></a></p>\n<p>I've compiled the code you can see in the background. It's an endless loop to simulate a running process that you want to debug.</p>\n<p>On the connecting machine (Windows in my case):<br/>\nIn debugger -&gt; process options you need to configure everything as you would normally do to a regular remote debugging. You said you already have this step completed so that's ok.</p>\n<p><a href=\"https://i.sstatic.net/UNqRV.png\" rel=\"nofollow noreferrer\"><img alt=\"debugger-&gt;process options\" src=\"https://i.sstatic.net/UNqRV.png\"/></a></p>\n<p>After that, press debugger -&gt; attach  to process and you'll be presented with a list of processes (for me it showed all of the running process, you might see only the processes that match the database, atleast that what I would expect). Select the process you want to debug:</p>\n<p><a href=\"https://i.sstatic.net/mNDjG.png\" rel=\"nofollow noreferrer\"><img alt=\"processes list\" src=\"https://i.sstatic.net/mNDjG.png\"/></a></p>\n<p>After a couple of single steps, I'm back to main and can debug the process:</p>\n<p><a href=\"https://i.sstatic.net/zanAE.png\" rel=\"nofollow noreferrer\"><img alt=\"ida debug view\" src=\"https://i.sstatic.net/zanAE.png\"/></a></p>\n</div>",
            "votes": "1",
            "user": null,
            "time": "Nov 27, 2018 at 23:01",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Neon Flash",
                    "text": "<span class=\"comment-copy\">Thanks. I had to run Linux remote debugging server as sudo for this to work properly.</span>",
                    "time": null
                }
            ]
        }
    ]
}