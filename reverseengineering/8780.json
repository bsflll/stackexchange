{
    "title": "Reverse engineering a java applet using python/Javascript",
    "link": "https://reverseengineering.stackexchange.com/questions/8780/reverse-engineering-a-java-applet-using-python-javascript",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I love doing online stock trading in my free time. Because I spend most of the day at my job I cannot do much of it. So, I'm thinking of making a software that will automatically place trades for me based on the trading strategy that I created. The trading platform that my broker provided me is java and html5 based and I access it with a web browser. My broker does not provide API for automated trading. I have understanding of some basic Javascript and Python programming. So, in order to make my algo trading software I need to do some reverse engineering. Don't know java (no time to learn also) and don't have enough money for hiring a programmer. Is there anyway I can reverse engineer a java applet using Python/Javascript? If I can, what else I need to learn about reverse engineering, as I know only basic python and JS.</p>\n</div>",
    "votes": "0",
    "answers": 2,
    "views": "775",
    "tags": [
        "python",
        "javascript"
    ],
    "user": "Hannibal Lecter",
    "time": "Apr 29, 2015 at 11:50",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "<span class=\"comment-copy\">I would be very careful with using an undocumented, reverse-engineered API for trading; changes to the API/network protocol won't be announced, and the result might prove <i>quite</i> costly.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If I understand well, you would like to reverse a Java applet in order to plug your own tool on a specific API (which is incidentally a trading platform).</p>\n<p>I do not know why you are speaking about Javascript/Python... If you are reversing a Java application, then you need to know about Java applications... There is no escape from reality, unfortunately.</p>\n<p>Anyway, what you need to use is a Java Decompiler in order to recover as much possible from the <code>*.class</code> files you got from the application you want to understand. There are several Java Decompilers that you can find, here is a small list (from the most featured to the least):</p>\n<ul>\n<li><a href=\"http://jd.benow.ca/\" rel=\"nofollow noreferrer\">Java Decompiler</a></li>\n<li><a href=\"https://bitbucket.org/mstrobel/procyon/wiki/Java%20Decompiler\" rel=\"nofollow noreferrer\">Procyon</a></li>\n<li><a href=\"https://github.com/Storyyeller/Krakatau\" rel=\"nofollow noreferrer\">Krakatau</a></li>\n<li><a href=\"http://www.benf.org/other/cfr/\" rel=\"nofollow noreferrer\">CFR</a></li>\n<li><a href=\"http://varaneckas.com/jad/\" rel=\"nofollow noreferrer\">JAD</a></li>\n<li><a href=\"http://www.brouhaha.com/~eric/software/mocha/\" rel=\"nofollow noreferrer\">Mocha</a></li>\n</ul>\n<p>You can find more information by looking to this <a href=\"https://stackoverflow.com/questions/272535/how-do-i-decompile-java-class-files\">similar question on SO</a>.</p>\n</div>",
            "votes": "3",
            "user": "Community",
            "time": "May 23, 2017 at 12:37",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If its web based, you may not have to reverse the Java app. </p>\n<p>Have you tried tools like Fiddler - <a href=\"http://www.telerik.com/fiddler\" rel=\"nofollow\">http://www.telerik.com/fiddler</a> - to capture web traffic that occurs when you execute a trade?</p>\n<p>You could figure out what parts of the API the browser is actually calling when certain things are executed by capturing that in Fiddler.</p>\n<p>You could then write a program in python to act as you in the browser.</p>\n</div>",
            "votes": "1",
            "user": "Brett Salmiery",
            "time": "Apr 29, 2015 at 12:25",
            "is_accepted": false,
            "comments": []
        }
    ]
}