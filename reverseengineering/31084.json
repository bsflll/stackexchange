{
    "title": "Function pointer as struct field in IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/31084/function-pointer-as-struct-field-in-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have following function:</p>\n<pre><code>void __thiscall ParsePackage_v5(package_t *package, stream_t *stream)\n{\n  (*(*package-&gt;stream + 8))(package-&gt;stream, package, 4);\n}\n</code></pre>\n<pre><code>.text:0069F5A0 ; void __thiscall ParsePackage_v5(package_t *package, _DWORD stream)\n.text:0069F5A0 ParsePackage_5  proc near               ; CODE XREF: ParsePackageHeader+FBâ†“p\n.text:0069F5A0\n.text:0069F5A0                 push    ebp\n.text:0069F5A1                 mov     ebp, esp\n.text:0069F5A3                 sub     esp, 134h\n.text:0069F5A9                 push    ebx\n.text:0069F5AA                 push    esi\n.text:0069F5AB                 push    edi\n.text:0069F5AC                 mov     esi, ecx\n.text:0069F5AE                 mov     ecx, [esi+4]\n.text:0069F5B1                 mov     eax, [ecx]\n.text:0069F5B3                 push    4\n.text:0069F5B5                 push    esi\n.text:0069F5B6                 call    dword ptr [eax+8]\n</code></pre>\n<p><code>stream_t</code> defines as:</p>\n<pre><code>00000000 stream_t        struc ; (sizeof=0x14, align=0x4, mappedto_136)\n00000000 unknown         db ?\n00000001                 db ? ; undefined\n00000002                 db ? ; undefined\n00000003                 db ? ; undefined\n00000004 hFile           dd ?                    ; offset\n00000008 ReadBytes       db ?\n00000009                 db ? ; undefined\n0000000A                 db ? ; undefined\n0000000B                 db ? ; undefined\n0000000C field_C         db ?\n0000000D                 db ? ; undefined\n0000000E                 db ? ; undefined\n0000000F                 db ? ; undefined\n00000010 field_10        db ?\n00000011                 db ? ; undefined\n00000012                 db ? ; undefined\n00000013                 db ? ; undefined\n00000014 stream_t        ends\n</code></pre>\n<p><code>(*(*package-&gt;stream + 8))</code> supposed to be converted into <code>package-&gt;stream-&gt;ReadByte</code> but it wont. How can i do this properly and declare function pointer as field type of <code>ReadByte</code>?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "557",
    "tags": [
        "ida"
    ],
    "user": "Redplcs",
    "time": "Nov 4, 2022 at 23:16",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The first problem in your example is that the fields are defined as bytes, not dwords. Press <kbd>D</kbd> twice on those fields to turn them into dwords.</p>\n<p>The second problem is that the fields don't have proper function pointer types applied to them. Highlight the fields and press <kbd>Y</kbd> to set the type. Enter something like <code>void (__thiscall *ReadBytes)(stream_t *this, package_t *package, size_t size)</code> to create a function pointer type.</p>\n</div>",
            "votes": "1",
            "user": "Rolf Rolles",
            "time": "Nov 4, 2022 at 23:24",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Redplcs",
                    "text": "<span class=\"comment-copy\">Big thanks! Unfortunatelly, now i have <code>(*(package-&gt;stream-&gt;unknown + 8))(package-&gt;stream, package, 4);</code> instead of <code>package-&gt;stream-&gt;ReadBytes(package-&gt;stream, package, 4);</code> What's the problem?</span>",
                    "time": null
                },
                {
                    "user": "Rolf Rolles",
                    "text": "<span class=\"comment-copy\">Ultimately you're going to need two <code>struct</code>s. On the line ending in <code>-AE</code>, the code loads the <code>stream_t</code> pointer from the <code>package_t</code> object. On the next line, it loads <code>*stream_t</code> into <code>eax</code>, and the call to <code>[eax+8]</code> finally takes place on line <code>-B6</code>. This is a virtual function call. Your definition of <code>stream_t</code> is incorrect; the dword at <code>+0</code> needs to be a pointer to a VTable <code>struct</code> that contains the function pointers.</span>",
                    "time": null
                },
                {
                    "user": "Redplcs",
                    "text": "<span class=\"comment-copy\">But how can I define vtable structure? Same as <code>stream_t</code> but each field is byte size? Then how <code>(*(package-&gt;stream-&gt;unknown + 8))</code> knows that there are function and it needs to be invoked?</span>",
                    "time": null
                },
                {
                    "user": "Rolf Rolles",
                    "text": "<span class=\"comment-copy\">No, it's a separate structure. I can't tell you what the structure looks like because all I have is a few lines of assembly, but you're going to want a struct called something like <code>stream_t_vtbl</code> which contains dword-sized members whose types are function pointers. The first element of <code>stream_t</code> needs to be a pointer to that structure. As for what the rest of <code>stream_t</code> looks like, I have no idea; the code snippet doesn't show any fields other than its VTable pointer at <code>+0</code>.</span>",
                    "time": null
                },
                {
                    "user": "Redplcs",
                    "text": "<span class=\"comment-copy\">I figured it out. Big thanks for helping! You saved my nerves :)</span>",
                    "time": null
                }
            ]
        }
    ]
}