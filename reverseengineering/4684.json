{
    "title": "IDAPython: Get struct id defined at an address",
    "link": "https://reverseengineering.stackexchange.com/questions/4684/idapython-get-struct-id-defined-at-an-address",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Spotted an interesting problem when trying to determine which type of structure (since <code>isStruct(getFlags(ea))</code> returns <code>True</code>) is defined at the given address in the DB. Reading through <code>idc.py</code> didn't help much.</p>\n<ul>\n<li>Define a <code>struct</code> in the \"structures\" window.</li>\n<li>It gets assigned a <code>struct</code> ID, so, it can be accessed from IDC/Python scripts.</li>\n<li>Now, define a <code>struct</code> variable somewhere in e.g. the <code>.data</code> section.</li>\n</ul>\n<p>A solid example:</p>\n<pre><code># Some Python code\nstrid = idaapi.get_struc_id('_s__RTTIClassHierarchyDescriptor')\nsize = idaapi.get_struc_size(strid)\nidaapi.doStruct(ea, size, strid)\n</code></pre>\n<p>How, knowing the <code>ea</code>, do I get the <code>strid</code> value ?</p>\n</div>",
    "votes": "4",
    "answers": 4,
    "views": "4k",
    "tags": [
        "idapython"
    ],
    "user": "Dmitry Janushkevich",
    "time": "Jun 25, 2014 at 11:33",
    "comments": [
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">What is your question ? What problem did you spot ?</span>",
            "time": null
        },
        {
            "user": "perror",
            "text": "<span class=\"comment-copy\">I didn't get what is the problem ?!?</span>",
            "time": null
        },
        {
            "user": "Dmitry Janushkevich",
            "text": "<span class=\"comment-copy\">Updated the question.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This works for me:</p>\n<pre><code>ea=here()\nti = idaapi.opinfo_t()\nf = idc.GetFlags(ea)\nif idaapi.get_opinfo(ea, 0, f, ti):\n   print (\"tid=%08x - %s\" % (ti.tid, idaapi.get_struc_name(ti.tid)))\n</code></pre>\n<p>So <code>ti.tid</code> then contains the strid.</p>\n</div>",
            "votes": "9",
            "user": "perror",
            "time": "Jul 2, 2014 at 14:52",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Dmitry Janushkevich",
                    "text": "<span class=\"comment-copy\">Confirmed working. Likely because IDA treats the structure variable as an \"operand\" of some \"instruction\".</span>",
                    "time": null
                },
                {
                    "user": "Dmitry Janushkevich",
                    "text": "<span class=\"comment-copy\">Sorry, there is 1 day timeout for bounties. :-(</span>",
                    "time": null
                },
                {
                    "user": "Zach Riggle",
                    "text": "<span class=\"comment-copy\">Looks like the bounty is still open. <a href=\"https://imgur.com/d0NYZSq.jpg\" rel=\"nofollow noreferrer\">imgur.com/d0NYZSq.jpg</a></span>",
                    "time": null
                },
                {
                    "user": "Dmitry Janushkevich",
                    "text": "<span class=\"comment-copy\">Can't award earlier than 24h after starting the bounty, it seems. :-( Will do so ASAP.</span>",
                    "time": null
                },
                {
                    "user": "Dmitry Janushkevich",
                    "text": "<span class=\"comment-copy\">There we go, awarded! :-)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>in IDC the following works, so I'm not sure if you can use the same functions from Python</p>\n<pre><code>auto type;\nauto ea;\n\nea = 0x8F84C37C;\nMessage(\"isStruct: %d\\n\", isStruct(GetFlags(ea)));\ntype = GetTinfo(ea);\nMessage(\"firstattr: %s\\n\", firstattr(type));\nMessage(\"getattr: %d\\n\", getattr(type,\"typid\"));\n</code></pre>\n<p>outputting:</p>\n<pre><code>isStruct: 1\nfirstattr: typid\ngetattr: 52541\n</code></pre>\n</div>",
            "votes": "3",
            "user": "Simeon Pilgrim",
            "time": "Jun 26, 2014 at 3:54",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Dmitry Janushkevich",
                    "text": "<span class=\"comment-copy\">Doesn't seem to work for me from Python... even if using IDC adapter funcs from idc.py. To be fair, copying your snippet into an IDC script and executing it indeed works. :-)    <code>Python&gt;print idc.isStruct(idc.GetFlags(0x561114)) True Python&gt;print idc.GetTinfo(0x561114) None Python&gt;print idc.GetType(0x561114) None</code> Sorry for this unreadable blob, I seem unable to insert line breaks in comments, but you probably get the idea of what's returned.</span>",
                    "time": null
                },
                {
                    "user": "Simeon Pilgrim",
                    "text": "<span class=\"comment-copy\">That seems broken that the Python IDC wrapper for GetTinfo gets different results.</span>",
                    "time": null
                },
                {
                    "user": "Simeon Pilgrim",
                    "text": "<span class=\"comment-copy\">idc.GetTinfo appears to just be calling idaapi.idc_get_type_raw(ea), but it's strange that it's failing. looking at swig/typeinf.i idc_get_type_raw appears to call get_tinfo so I'd expect it to work.</span>",
                    "time": null
                },
                {
                    "user": "Dmitry Janushkevich",
                    "text": "<span class=\"comment-copy\">Oddly enough: <code>Python&gt;tif = idaapi.tinfo_t() Python&gt;print tif &lt;idaapi.tinfo_t; proxy of &lt;Swig Object of type 'tinfo_t *' at 0x02A5BFB0&gt; &gt; Python&gt;print idaapi.get_tinfo2(0x561114, tif) False</code> and <code>Python&gt;tp = idaapi.qtype() Python&gt;flags = idaapi.qtype() Python&gt;print idaapi.get_tinfo(0x561114, tp, flags) False</code> so either those are broken, or I am doing it wrong (together with idapython, apparently).</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Updated version of @Willem Hengeveld answer for IDA 7.4 API:</p>\n<pre><code>address=0x14001D020\nstruct_id = idaapi.opinfo_t()\nflags = ida_bytes.get_flags(address)\nif ida_bytes.get_opinfo(struct_id, address, 0, flags):\n    struct_name = ida_struct.get_struc_name(struct_id.tid)\n    print (f\"tid=0x{struct_id.tid:08x} - {struct_name}\")\n</code></pre>\n</div>",
            "votes": "1",
            "user": "KulaGGin",
            "time": "Feb 7, 2022 at 12:58",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The minsc plugin at <a href=\"https://github.com/arizvisa/ida-minsc/tree/persistence-refactor\" rel=\"nofollow noreferrer\">https://github.com/arizvisa/ida-minsc</a> exposes this via <a href=\"https://arizvisa.github.io/ida-minsc/modules/database.html#database.type.structure.id\" rel=\"nofollow noreferrer\"><code>database.type.structure.id</code></a>\n<em>Disclaimer: I maintain the ida-minsc plugin.</em></p>\n<pre><code>Python&gt;idc.here()\n0x2ac34\n\nPython&gt;db.disasm(idc.here())\n'2ac34: GUID &lt;?&gt;'\n\nPython&gt;db.t.struc.id(idc.here())\n0xff000054\n\nPython&gt;idaapi.get_struc_name(db.t.struc.id(idc.here())), idaapi.get_struc(db.t.struc.id(idc.here()))\n('GUID', &lt;ida_struct.struc_t; proxy of &lt;Swig Object of type 'struc_t *' at 0x7f9af7f74c30&gt; &gt;)\n</code></pre>\n<p>Although, it's better to just get the structure (and extract the id from it if you still want it).</p>\n<pre><code>Python&gt;db.t.struc(idc.here())\n&lt;class 'structure' name='_GUID' offset=0x2ac34 size=0x10784&gt;\n\nPython&gt;db.t.struc(idc.here()).id\n0xff000055\n</code></pre>\n</div>",
            "votes": "0",
            "user": "Ali Rizvi-Santiago",
            "time": "Jul 21, 2024 at 6:58",
            "is_accepted": false,
            "comments": []
        }
    ]
}