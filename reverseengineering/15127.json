{
    "title": "Why the program can't write to specific memory area",
    "link": "https://reverseengineering.stackexchange.com/questions/15127/why-the-program-cant-write-to-specific-memory-area",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am working on Lab13-01.exe from \"Practical Malware Analysis\" (you can download it from <a href=\"http://I%20am%20working%20on%20Lab13-01.exe%20from%20%22Practical%20Malware%20Analysis%22.%20%20When%20I%20run%20it%20without%20debuggers%20in%20my%20VMWare%20it%20runs%20without%20errors.%20%20I%20started%20to%20analyze%20it%20with%20OllyDbg%202.01.%20%20There%20is%20some%20point%20in%20the%20code%20that%20it%20receives%20exception%20and%20I%20don't%20understand%20why.%20%20It%20has%20resource%20that%20contains%20encoded%20string:%20%20LLLKIZXORXZWVZWLZI%5EZUZWBHRHXTV%20%20This%20resource%20is%20at%20address%200x408060%20At%200x4011C1%20it%20overwrites%20the%20first%20byte%20of%20the%20string%20with%20AL%20(0x77):%20MOV%20BYTE%20PTR%20DS:[ECX],%20AL%20%20Then%20I%20received:%20%22Access%20violation%20when%20writing%20to%20[00408060]%22%20%20When%20I%20press%20Shift+Run/Step,%20it%20succeed%20to%20run.%20%20%20There%20number%20of%20things%20I%20don't%20understand%20here.%20%201.%20If%20it%20can't%20write%20to%20[00408060],%20how%20come%20when%20I%20press%20Shift+Run/Step%20it%20succeed%20?%202.%20Why%20it%20can't%20write%20to%20[00408060]%20?%20Is%20there%20some%20flag%20that%20prevent%20from%20writing%20to%20this%20aread%20(if%20yes,%20where%20can%20I%20see%20it?)%20?\" rel=\"nofollow noreferrer\">here</a>).</p>\n<p>When I run it without debuggers in my VMWare it runs without errors.</p>\n<p>I started to analyze it with OllyDbg 2.01.</p>\n<p>There is some point in the code that it receives exception and I don't understand why.</p>\n<p>It has resource that contains encoded string:  </p>\n<pre><code>LLLKIZXORXZWVZWLZI^ZUZWBHRHXTV\n</code></pre>\n<p>This resource is saved at address <code>0x408060</code><br/>\nAt <code>0x4011C1</code> it overwrites the first byte of the string with <code>AL (0x77)</code>:</p>\n<pre><code>MOV BYTE PTR DS:[ECX], AL\n</code></pre>\n<p>Then I received:</p>\n<blockquote>\n<p>Access violation when writing to [00408060]</p>\n</blockquote>\n<p><a href=\"https://i.sstatic.net/AFYRp.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/AFYRp.png\"/></a></p>\n<p>When I press Shift+Run/Step, it succeed to run.</p>\n<p>There number of things I don't understand here.</p>\n<ol>\n<li>If it can't write to <code>[00408060]</code>, how come when I press Shift+Run/Step it succeed ?</li>\n<li>Why it can't write to <code>[00408060]</code> ? Is there some flag that prevent from writing to this aread (if yes, where can I see it?) ? </li>\n</ol>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "1k",
    "tags": [
        "ollydbg",
        "exception"
    ],
    "user": "E235",
    "time": "Apr 8, 2017 at 12:06",
    "comments": [
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">Probably virtual protected against write access and trapping the exception for handling differently based on presence or absence of debugger follow the exception chain and single step. The handler</span>",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">did you check if it installs an exception handler which catches the exception?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I went to the memory map window.<br/>\nI searched for the memory address range for 408060.<br/>\nIt  was under <code>.rsrc</code> (Resources).<br/>\nIt had only read permissions, I set it with write permissions too and now it works:  </p>\n<p><a href=\"https://i.sstatic.net/op0pv.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/op0pv.png\"/></a></p>\n</div>",
            "votes": "1",
            "user": "E235",
            "time": "Apr 10, 2017 at 10:51",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It could easily be that it is code/data segregation.  </p>\n<p>In Windows it is called Data Execution Protection.  </p>\n<p>A lot of malware will load their code as if it were data, then maybe rewrite it after decryption, then attempt to execute it.  </p>\n<p>DEP should always be on, but for purposes of this demonstration maybe you could turn it off and see if you get different results.  </p>\n<p>Then turn it back on.</p>\n</div>",
            "votes": "0",
            "user": "SDsolar",
            "time": "Apr 10, 2017 at 6:05",
            "is_accepted": false,
            "comments": [
                {
                    "user": "E235",
                    "text": "<span class=\"comment-copy\">I checked with Pestudio and DEP is off. See printscreen here: <a href=\"http://imgur.com/dzaCXmR\" rel=\"nofollow noreferrer\">imgur.com/dzaCXmR</a></span>",
                    "time": null
                }
            ]
        }
    ]
}