{
    "title": "How to see assembly of main function?",
    "link": "https://reverseengineering.stackexchange.com/questions/23178/how-to-see-assembly-of-main-function",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>How can I dump the assembly of main function of binary(not striped) in ubuntu?</p>\n<p>I want to see the assembly command and the hex value of this command</p>\n<p>There are 1 binary for arm and 1 binary for x86</p>\n</div>",
    "votes": "-1",
    "answers": 2,
    "views": "2k",
    "tags": [
        "disassembly",
        "x86",
        "linux",
        "arm"
    ],
    "user": "wfj96649BcaooCom",
    "time": "Feb 3, 2020 at 16:47",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">What tool do you use?</span>",
            "time": null
        },
        {
            "user": "wfj96649BcaooCom",
            "text": "<span class=\"comment-copy\">@Paweł Łukasik I looking for tool ...</span>",
            "time": null
        },
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">Ghidra, ida, r2 ...</span>",
            "time": null
        },
        {
            "user": "wfj96649BcaooCom",
            "text": "<span class=\"comment-copy\">Ida free cant preset disassembly for Arm.(is there Ida for linux?)  Is there any simple and free tool?</span>",
            "time": null
        },
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">there was nothing about tool being free in the question, but Ghidra and r2 are free...</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In your Ubuntu terminal, go to the directory where the file is located and type this:</p>\n<blockquote>\n<p>objdump -M intel -D name-of-file | grep -A20 main.:</p>\n</blockquote>\n<p>(assuming you want intel assembly since it's easier to read but if not,\nremove \"-M intel\" from the command above.)</p>\n<p>This should show you the first twenty lines of your main function. objdump should skip a line after a function is over, so keep adding to the number after -A til you see the whole function followed by a blank line.</p>\n</div>",
            "votes": "2",
            "user": "s. wolfe",
            "time": "Feb 5, 2020 at 2:34",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">Not contend with the default AT&amp;T syntax? ... neither am I. I find it harder to read. Well done, have an upvote.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In order to view the assembly from any function of a compiled binary you will need a disassembler.  There are many disassemblers that can be used for this function including:</p>\n<ul>\n<li><p><a href=\"https://www.hex-rays.com/products/ida/gallery/\" rel=\"nofollow noreferrer\">IDA Pro</a> (Commercial)</p>\n</li>\n<li><p><a href=\"https://ghidra-sre.org/\" rel=\"nofollow noreferrer\">Ghidra</a> (Open Source)</p>\n</li>\n<li><p><a href=\"https://www.radare.org/n/radare2.html\" rel=\"nofollow noreferrer\">Radare2</a> (Open Source)</p>\n<p>To use these tools you will usually just load the binary into the software and it will present you with the assembly representation of the binary using various algorithms such as Linear Sweep and Recursive traversal.</p>\n</li>\n</ul>\n<p>Alternatively you can always open the binaries within a hex editor and extract the OP codes from HEX. However the challenge would be to locate your target location in the binary.</p>\n<p>Hope this helps!</p>\n</div>",
            "votes": "1",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": []
        }
    ]
}