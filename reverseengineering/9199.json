{
    "title": "Python library for linux to demangle MSVC decorated names",
    "link": "https://reverseengineering.stackexchange.com/questions/9199/python-library-for-linux-to-demangle-msvc-decorated-names",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am looking for a python library for linux which can demangle the function names which are mangled by MSVC.\nfor example :</p>\n<blockquote>\n<p>Project!??0?$allocator@D@std@@QAE@XZ</p>\n</blockquote>\n<p>to </p>\n<blockquote>\n<p>Project!public: __thiscall\n  std::allocator::allocator(void)</p>\n</blockquote>\n<p>I found that IDAPython has an API for this but I don't know how to use IDAPython in linux.</p>\n</div>",
    "votes": "5",
    "answers": 0,
    "views": "945",
    "tags": [
        "linux",
        "c++",
        "idapython",
        "python"
    ],
    "user": "in3o",
    "time": "Jun 22, 2015 at 1:50",
    "comments": [
        {
            "user": "Dominik Antal",
            "text": "<span class=\"comment-copy\"><a href=\"http://stackoverflow.com/a/6526814/342862\">How about this solution?</a> <a href=\"http://ishiboo.com/~danny/Projects/vc++filt/\" rel=\"nofollow noreferrer\">Or this.</a></span>",
            "time": null
        },
        {
            "user": "in3o",
            "text": "<span class=\"comment-copy\">I need a library of python. These are acceptable as a C++ executable solution. There is also undname.exe from MSVC which does all the work but its an EXE file so I can't use that.</span>",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">From the answer @Dominik linked to, but first thing I thought as well: \"Name-mangling is implementation-specific. Which compiler are you interested in?\" See <a href=\"http://www.kegel.com/mangle.html\" rel=\"nofollow noreferrer\">kegel.com/mangle.html</a> for a good introduction.</span>",
            "time": null
        },
        {
            "user": "in3o",
            "text": "<span class=\"comment-copy\">yeah. i know. thats why i mentioned msvc in the problem description.</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">So what's wrong with the linked solution? Why can't a Python library (I presume you mean Python module) call external binaries? Besides, you didn't mention you were looking for a <i>pure Python</i> solution. Especially since the provided links give clues how to implement it in pure Python, if that's what you absolutely want. This site isn't for recommendations about software and I can't see what's wrong with Dominik's links for example.</span>",
            "time": null
        }
    ],
    "answers_data": []
}