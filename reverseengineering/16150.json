{
    "title": "How can I modify binary image resource data?",
    "link": "https://reverseengineering.stackexchange.com/questions/16150/how-can-i-modify-binary-image-resource-data",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've been hacking and modding software for years, and have learned a lot, but there are still a few things that vex me - this is one such case.</p>\n<p>I have noticed that some PEs contain an <code>RCData</code> section that can house a large variety of different kinds of data and information. In my experience the data is usually binary files or dialog classes. In this case, I am trying to figure out how an image is being stored in what I can only describe as <s>binary</s> raw format for a dialog (thanks to @Megabeets for refreshing my memory). In my more inexperienced days, I thought the image data in these files was stored directly as plain text or hexadecimal values. When I compared the data in the resource data to the image in question (stored in a different tree as a different format), they did not match. In some cases, this data is its own image with no comparable alternative. Below is an screenshot of the data in question:</p>\n<p><a href=\"https://i.sstatic.net/x5CYb.jpg\" rel=\"nofollow noreferrer\"><img alt=\"Binary data is hilighted in blue\" src=\"https://i.sstatic.net/x5CYb.jpg\"/></a></p>\n<p>I know this data is for an icon, as removing it also removes the image in the application. For some programs, this data can be a dialog GUI asset, or bitmap. How do I \"convert\" this data into an image or vise versa for modification or replacement?</p>\n<p>As a potential alternative solution, could I modify the script to directly reference the main application icon instead?</p>\n<p>Side-note: The image is an icon group containing four icons, and acts as the title bar icon.</p>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "3k",
    "tags": [
        "windows",
        "executable",
        "binary-editing"
    ],
    "user": "Mr. Mendelli",
    "time": "Oct 6, 2022 at 23:27",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Firstly, we need to understand what is RCDATA resource. This is how it described in <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa381039(v=vs.85).aspx\" rel=\"noreferrer\">MSDN</a>:</p>\n<blockquote>\n<p>RCDATA defines a raw data resource for an application. Raw data resources\n  permit the inclusion of binary data directly in the executable file.  </p>\n<p><code>nameID RCDATA  [optional-statements] {raw-data  ...}</code></p>\n<p><strong><em>raw-data</em></strong><br/>\n   Raw data consisting of one or more integers or strings of\n  characters. Integers can be specified in decimal, octal, or\n  hexadecimal format. To be compatible with 16-bit Windows, integers are\n  stored as WORD values. You can store an integer as a DWORD value by\n  qualifying the integer with the \"L\" suffix.</p>\n</blockquote>\n<p>In your example we see the configuration of <code>TfrmMain</code> which is the main form that is derived from <code>TForm</code> and is used as user interface for the program.  </p>\n<p>With that in mind, we can understand that <code>Icon.Data</code> stores an icon for the application in what seems like an <strong><a href=\"https://en.wikipedia.org/wiki/Hexadecimal\" rel=\"noreferrer\">hexadecimal</a></strong> representation of it.<br/>\nAnd indeed, if we will take a look at the <a href=\"https://www.iana.org/assignments/media-types/image/vnd.microsoft.icon\" rel=\"noreferrer\">ICO registration information for at IANA</a> we can see that the <code>Magic Number</code> (the first four octets in the file in hexadecimal) of ICO files is same as in your example:  </p>\n<blockquote>\n<p>Additional information :<br/>\n  1. Magic number(s) : <strong>00 00 01 00</strong><br/>\n  2. File extension(s) : ico</p>\n</blockquote>\n<p>When you compare the <code>Icon.Data</code> with another image, which you said has different file format, you won't see a match because each image format has different structure and specification and therefore, even though the files might look the same, the binary data is different.  </p>\n<p>You can convert hex string into an image and an image to hex string easily using python:  </p>\n<pre><code>import binascii\n\n# open ico file and read its binary content\nwith open('example.ico', 'rb') as f:\n    content = f.read()\n\n# convert the binary content to hexadecimal string\nhexstr = binascii.hexlify(content)\n\n# write this hexadecimal string to output.ico as binary\nwith open('output.ico','wb') as f:\n    f.write(binascii.unhexlify(hexstr))\n</code></pre>\n<p>You can copy and paste the <code>Icon.Data</code> to a plain text and then read it with python using:  </p>\n<pre><code>with open('hexadecimal.txt', 'r') as f:\n    content = f.read()\n</code></pre>\n<p>And then write the content to a file in binary format using the example above.  </p>\n<p>With <code>Resource Hacker</code> you then can remove, add, edit and compile resources in your binary.  </p>\n</div>",
            "votes": "6",
            "user": "Megabeets",
            "time": "Aug 21, 2017 at 8:20",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Mr. Mendelli",
                    "text": "<span class=\"comment-copy\">I must say, your answer is <i>truly</i> amazing and well-done. Unfortunately I don't know how to program or use languages like Python to perform tasks. It may seem strange (or ironic) that I have a vast understanding of how software works despite this. Even still, I am eager to research this, and once I can utilize your answer I will accept and upvote it. Thank you for your response.</span>",
                    "time": null
                },
                {
                    "user": "Megabeets",
                    "text": "<span class=\"comment-copy\">You're welcome! It's a pretty trivial script, you can easily adapt it to most high-level languages you know. We can give a hand if you want to :)</span>",
                    "time": null
                },
                {
                    "user": "Mr. Mendelli",
                    "text": "<span class=\"comment-copy\">That would be great, but the extent of my programming skills is limited to basic batch scripting...</span>",
                    "time": null
                },
                {
                    "user": "Megabeets",
                    "text": "<span class=\"comment-copy\">it won't be easy to do it using Batch. How about Powershell, Bash, external programs? You can even do it online: <a href=\"https://hexed.it/\" rel=\"nofollow noreferrer\">hexed.it</a></span>",
                    "time": null
                },
                {
                    "user": "Mr. Mendelli",
                    "text": "<span class=\"comment-copy\">I'll give PowerShell a shot. Don't get me wrong, I believe that your Python method <i>will</i> work, I just have to learn how to use it first. So, how should I approach this with PowerShell?</span>",
                    "time": null
                }
            ]
        }
    ]
}