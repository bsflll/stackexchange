{
    "title": "Patching an ipa (iPhone app) using Hopper Disassembler",
    "link": "https://reverseengineering.stackexchange.com/questions/18703/patching-an-ipa-iphone-app-using-hopper-disassembler",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have learned in the past to patch some iOS apps to bypass jailbreak detection. Today, I decided to change the UI elements in the Spotify app on iOS Platform (ios 11). I downloaded a .ipa file of Spotify and opened the executable using Hopper Disassembler v3. Can anyone experienced tell me which functions I should modify and resources that will help me identify other functions in the assembly code (64 bit)?</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "805",
    "tags": [
        "arm",
        "ios",
        "hopper"
    ],
    "user": "applehacker321",
    "time": "Jul 6, 2018 at 4:25",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">So your question is how to apply Hopper v3 to the task of patching you have done in the past, right?</span>",
            "time": null
        },
        {
            "user": "applehacker321",
            "text": "<span class=\"comment-copy\">Yes, since I cannot find any examples online other than the basic operations of creating NOP regions to bypass jailbreak detection</span>",
            "time": null
        }
    ],
    "answers_data": []
}