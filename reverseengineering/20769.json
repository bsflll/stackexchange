{
    "title": "Why Ida pseudo-code translate test as AND?",
    "link": "https://reverseengineering.stackexchange.com/questions/20769/why-ida-pseudo-code-translate-test-as-and",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In IDA when disassembling a x86 EXE file there is a line</p>\n<pre><code>test byte ptr [ebp+XXX], cl\n</code></pre>\n<p>Before this line <code>cl</code> has a value of <code>0x11</code></p>\n<p>The Hex-Rays decompiler plugin translates it as <code>if (v10 &amp;0x11)</code>.</p>\n<p>Why is <code>test</code> decompiled like <code>and</code>?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "174",
    "tags": [
        "ida",
        "assembly",
        "x86",
        "hexrays"
    ],
    "user": "psudoCode",
    "time": "Mar 5, 2019 at 21:08",
    "comments": [
        {
            "user": "David",
            "text": "<span class=\"comment-copy\">It seems likely you are referring to the Hex-Rays decompiler. This integrates very well with IDA and is by the same company. However, they are separate products and you can use IDA without a decompiler. It might be worth updating your question.</span>",
            "time": null
        },
        {
            "user": "phuclv",
            "text": "<span class=\"comment-copy\">did  you ever read the <a href=\"https://www.felixcloutier.com/x86/test\" rel=\"nofollow noreferrer\"><code>test</code> instruction's manual</a>, or at least google for <code>x86 test instruction</code>?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><a href=\"https://www.felixcloutier.com/x86/test\" rel=\"nofollow noreferrer\"><code>test</code></a> is basically an <a href=\"https://www.felixcloutier.com/x86/and\" rel=\"nofollow noreferrer\"><code>and</code></a> instruction except it doesn't update the left operand.\nIn the other hand, <a href=\"https://www.felixcloutier.com/x86/cmp\" rel=\"nofollow noreferrer\"><code>cmp</code></a> is the equivalent of <a href=\"https://www.felixcloutier.com/x86/sub\" rel=\"nofollow noreferrer\"><code>sub</code></a> instruction except it doesn't update the left operand.</p>\n<p>To sum up:</p>\n<pre><code>if (v &amp; n)\n</code></pre>\n<p>Is compiled as <code>test</code> instruction.</p>\n<pre><code>if (v == n)\n</code></pre>\n<p>Is compiled as <code>cmp</code> instruction (or <code>test reg, reg</code> is n is 0x0)</p>\n<pre><code>v = a &amp; n\n</code></pre>\n<p>Is compiled as <code>and</code> instruction.</p>\n</div>",
            "votes": "6",
            "user": "wisk",
            "time": "Mar 4, 2019 at 14:05",
            "is_accepted": false,
            "comments": []
        }
    ]
}