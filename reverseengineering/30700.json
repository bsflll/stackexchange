{
    "title": "how to find a string in memory having ARM instructions ARDP and LDR?",
    "link": "https://reverseengineering.stackexchange.com/questions/30700/how-to-find-a-string-in-memory-having-arm-instructions-ardp-and-ldr",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><em>hello, I disassembled the request sent to the game server, I need to change the symbol, but I donâ€™t know its memory address. Help me understand the <strong>ADRP</strong> and <strong>LDR</strong> instructions, I need to understand what address will be assigned to the register <strong>\"x1\"</strong>.</em><a href=\"https://i.sstatic.net/vVia2.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/vVia2.png\"/></a></p>\n<p><em>my disassembly experience is very small, i will be happy for any help.</em></p>\n<p>will this user's question help me? <a href=\"https://reverseengineering.stackexchange.com/questions/15418/getting-function-address-by-reading-adrp-and-add-instruction-values\">getting function address by reading ADRP and ADD instruction values</a></p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "357",
    "tags": [
        "disassemblers",
        "ios",
        "arm64"
    ],
    "user": "qazwsx135",
    "time": "Jul 25, 2022 at 14:56",
    "comments": [
        {
            "user": "qazwsx135",
            "text": "<span class=\"comment-copy\">I looked at similar examples in the code, there are nop everywhere but I don't know why. The address that turned out went beyond the boundaries of the program (I disassembled the unity engine) I was told to look in the debugger for what the address is, but the debugger does not work.</span>",
            "time": null
        },
        {
            "user": "raspiduino",
            "text": "<span class=\"comment-copy\">Given that the architecture is arm64 (you didn't say it). From this post, ADRP will set the <code>x8</code> value to <code>pc + 0x2d71000</code>, then zero out the lower 12 bit. Then <code>nop</code> will do nothing (wonder if it's a hole for debugging?) Then <code>ldr x1, [x8, 0x250]</code> will load the value in the memory address <code>x8 + 0x250</code>. If your program has correct address (the address in the left size of the picture, provide that you don't have some kind of randomized address), then the value in address <code>0x4151250</code> in memory will be loaded to <code>x1</code> register. Please correct me if I'm wrong.</span>",
            "time": null
        },
        {
            "user": "raspiduino",
            "text": "<span class=\"comment-copy\"><code>I was told to look in the debugger for what the address is, but the debugger does not work.</code> What debugger are you using?</span>",
            "time": null
        },
        {
            "user": "qazwsx135",
            "text": "<span class=\"comment-copy\">when you click on the debug button, the download occurs, but the program is not executed. only emulator works</span>",
            "time": null
        },
        {
            "user": "qazwsx135",
            "text": "<span class=\"comment-copy\">thanks for the help, I wrote about this issue on 2 more sites, maybe this is a very problematic task</span>",
            "time": null
        }
    ],
    "answers_data": []
}