{
    "title": "Help starting with UEFI/SMM exploits",
    "link": "https://reverseengineering.stackexchange.com/questions/30609/help-starting-with-uefi-smm-exploits",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a 845 g7 with a bios 1.06, which has a load of CVEs which allow SMM and DXE exploits:</p>\n<p><a href=\"https://support.hp.com/ca-en/drivers/selfservice/hp-elitebook-845-g7-notebook-pc/37506818\" rel=\"nofollow noreferrer\">https://support.hp.com/ca-en/drivers/selfservice/hp-elitebook-845-g7-notebook-pc/37506818</a> (under the UEFI bios versions &gt; 1.06).</p>\n<p>However, I have no real idea how to exploit these. I'm a programmer (C++), however mostly just corporate applications and data management. It would be great if someone could forward me to how to initiate SWSMI for example and how to actually push arbitrary code execution in the SMM, etc.</p>\n<p>I think I understand on a very high level what needs to be done:</p>\n<p>I think I'd have to start with a kernel level driver which writes to an io port to initiate an SMI, particularly SWSMI (0xb2) to initiate SMM? Which would also read from \"shell code\" which is written to registers that are inside the SWRAM.</p>\n<p>However, I'm trying to figure out even where to start. At the moment I'm looking into writing to ioports as a starter, which need to be kernel level drivers, such as here for example: <a href=\"https://github.com/tandasat/SmmExploit\" rel=\"nofollow noreferrer\">https://github.com/tandasat/SmmExploit</a>.</p>\n<p>There is the BRLY stuff which shows something that could be useful to someone who could understand it:</p>\n<p><a href=\"https://www.binarly.io/advisories/BRLY-2021-003/index.html\" rel=\"nofollow noreferrer\">https://www.binarly.io/advisories/BRLY-2021-003/index.html</a></p>\n<p>Ideas on some fun stuff like changing the motherboard serial number, etc.? The exploits give all the way down to -2 ring access.</p>\n<p>Thanks</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "128",
    "tags": [
        "disassembly",
        "memory",
        "buffer-overflow",
        "uefi"
    ],
    "user": "s33ds",
    "time": "Jul 9, 2022 at 7:16",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>OST has a couple of courses that should give you all the background information you need:</p>\n<p><a href=\"https://opensecuritytraining.info/IntroBIOS.html\" rel=\"nofollow noreferrer\">https://opensecuritytraining.info/IntroBIOS.html</a></p>\n<p>Now that Xeno has relaunched OST as OST2 there is also this one, but I'm not sure how much overlap/rebranding is in it:</p>\n<p><a href=\"https://p.ost2.fyi/courses/course-v1:OpenSecurityTraining2+Arch4001_x86-64_RVF+2021_v1/about\" rel=\"nofollow noreferrer\">https://p.ost2.fyi/courses/course-v1:OpenSecurityTraining2+Arch4001_x86-64_RVF+2021_v1/about</a></p>\n<p>N.B. I haven't taken either of these courses myself, but I've been through several others on OST and they were excellent, these are on my todo list</p>\n</div>",
            "votes": "1",
            "user": "Mega Tonnage",
            "time": "Jul 11, 2022 at 0:04",
            "is_accepted": true,
            "comments": [
                {
                    "user": "s33ds",
                    "text": "<span class=\"comment-copy\">Amazing thank you so much! I can't upvote you as I don't have enough reputation. But it's truly appreciated.</span>",
                    "time": null
                }
            ]
        }
    ]
}