{
    "title": "LPC2378FBD144 Arm7 hex file",
    "link": "https://reverseengineering.stackexchange.com/questions/26415/lpc2378fbd144-arm7-hex-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have binary file for the LPC2378FBD144 processor ineed to reverse engineer it using IDA V7.3\nim little confused about memory organization values i should put in the memory organization thank you for your help :)\nhere the data sheet for the processor\n<a href=\"https://www.nxp.com/docs/en/data-sheet/LPC2377_78.pdf\" rel=\"nofollow noreferrer\">https://www.nxp.com/docs/en/data-sheet/LPC2377_78.pdf</a></p>\n<p><a href=\"https://i.sstatic.net/UcIDT.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/UcIDT.png\"/></a></p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "143",
    "tags": [
        "decompilation",
        "arm",
        "hexrays",
        "ida-plugin"
    ],
    "user": "Kamil Amin",
    "time": "Dec 2, 2020 at 18:45",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>ARM7 cores use classic architecture with the exception vectors at the start of the binary (usually mapped at 0), so you can start with the defaults, start disassembling and if the addresses look wrong, rebase the image afterwards.</p>\n</div>",
            "votes": "0",
            "user": "Igor Skochinsky",
            "time": "Dec 3, 2020 at 11:30",
            "is_accepted": true,
            "comments": []
        }
    ]
}