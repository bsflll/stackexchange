{
    "title": "Bypass Javascript Debug Prevention in Firefox",
    "link": "https://reverseengineering.stackexchange.com/questions/27817/bypass-javascript-debug-prevention-in-firefox",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've looked around, and can't find an answer for my specific question. The closest I could find was <a href=\"https://stackoverflow.com/q/53970719\">this</a>.</p>\n<p>I'm trying to reverse engineer some suspicious Javascript, but it repeatedly calls a debugger statement, preventing any meaningful use of breakpoints. The question linked above describes some methods for Chrome, but I was curious if this was possible in Firefox?</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "777",
    "tags": [
        "debugging",
        "anti-debugging",
        "javascript"
    ],
    "user": "Enki",
    "time": "Jun 8, 2021 at 19:26",
    "comments": [
        {
            "user": "0xec",
            "text": "<span class=\"comment-copy\">This should be possible using the FF Remote Protocol. Using the <a href=\"https://developer.mozilla.org/en-US/docs/Tools/Debugger-API\" rel=\"nofollow noreferrer\">Debugger API</a> you can write a script that listens for <code>onDebuggerStatement</code> <a href=\"https://developer.mozilla.org/en-US/docs/Tools/Debugger-API/Debugger#debugger_handler_functions\" rel=\"nofollow noreferrer\">events</a> and automatically resumes execution.</span>",
            "time": null
        },
        {
            "user": "user3840170",
            "text": "<span class=\"comment-copy\">Run it through some kind of AST analyser and remove the debugger statements?</span>",
            "time": null
        }
    ],
    "answers_data": []
}