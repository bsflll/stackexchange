{
    "title": "RopGadget buffer overflow",
    "link": "https://reverseengineering.stackexchange.com/questions/25092/ropgadget-buffer-overflow",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a question,</p>\n<p>I have a device that i can perform on it buffer overflow.</p>\n<p>The problem is that is that there is an ASLR(on all addresses in /proc/binary/maps, but not on the binary itself, but all addresses in binary are starting with two null bytes for example 0x00002000) and there is as well as DEP(on heap an stack).\nI can override the return address(for the first gadget) but not possible to write additional addresses for ROP since all addresses from the binary starts with null bytes.\nI also can`t leak an address and it is not possible to perform brute force in order to guess addresses for example from libc.\nDoes anyone have an idea how can perform the overflow in this case ? </p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "169",
    "tags": [
        "buffer-overflow",
        "rop"
    ],
    "user": "Logan",
    "time": "May 22, 2020 at 11:04",
    "comments": [
        {
            "user": "multithr3at3d",
            "text": "<span class=\"comment-copy\">I think your question could be improved with more detail via an edit. Is the binary's architecture x86? What function causes the overflow to occur (read, strcpy, memcpy), etc.? What type of application; does it fork for each attempt? The more detail you can add, the more likely it will be solved.</span>",
            "time": null
        },
        {
            "user": "multithr3at3d",
            "text": "<span class=\"comment-copy\">Keep in mind on a little endian system, your address is sent as e.g. <code>\\x01\\x20\\x00\\x00</code>. If what you are overwriting already ends with two zeros, it may not matter that you can't send them. Although, this will only let you jump once, which may be enough depending on the stack/register setup (e.g. call <code>system</code>).</span>",
            "time": null
        },
        {
            "user": "Logan",
            "text": "<span class=\"comment-copy\">Hi, This is an ARM( little endian). Yes it is strcpy(not using fork),I am able to overwrite the return address, but it is not enough for performing rop gadget. Do you have any idea ?</span>",
            "time": null
        },
        {
            "user": "multithr3at3d",
            "text": "<span class=\"comment-copy\">Maybe you don't need to ROP though. Do you have control over data in any of the argument registers?</span>",
            "time": null
        },
        {
            "user": "Logan",
            "text": "<span class=\"comment-copy\">Hi,The end of the function end with pop into r4-r7 and to pc. but the problem i can copy only one valid address contains null bytes , since the strcpy will stop copy once it sees null bytes</span>",
            "time": null
        }
    ],
    "answers_data": []
}