{
    "title": "Ida Pro python disconnect debugger and imeddietly connect next one in same script",
    "link": "https://reverseengineering.stackexchange.com/questions/33144/ida-pro-python-disconnect-debugger-and-imeddietly-connect-next-one-in-same-scrip",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>My current script for connecting to debugger is this, however if there's a debugger is already running then it gets disconnected, but new one does not start, have to run script second time to connect.</p>\n<p>Problem is if i add <code>time.sleep(3)</code> it does not just adds wait to the script it also puts ida to sleep same as <code>idc.qsleep(3)</code> so debugger does not exit until 3 seconds wait.</p>\n<pre><code>import ida_idd, ida_dbg, time\n\nif ida_dbg.is_debugger_on():\n    print(\"Debugger already running.\")\n    print(\"disconnected successfully\" if ida_dbg.exit_process() else 'failed to disconnect')\n    time.sleep(3)\n\nprocess_name = \"my_process_name\"\npis = ida_idd.procinfo_vec_t()\ncount = ida_dbg.get_processes(pis)\n\n#print(f\"Found {count}\")\nfor p in pis:\n    #print(f\"{p.pid}: {p.name}\")\n    if process_name in p.name:\n        #print(f\"Attaching to process {p.name}\")\n        ida_dbg.attach_process(p.pid)\n        break\n</code></pre>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "19",
    "tags": [
        "idapython",
        "python",
        "debuggers"
    ],
    "user": "LilBro",
    "time": "Aug 6, 2024 at 19:07",
    "comments": [
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<span class=\"comment-copy\">isn't that exit_process debugger api asynchronous?</span>",
            "time": null
        },
        {
            "user": "LilBro",
            "text": "<span class=\"comment-copy\">@AliRizvi-Santiago what exactly this means? Is there way to introduce wait to make sure it exits before trying to connect again?</span>",
            "time": null
        }
    ],
    "answers_data": []
}