{
    "title": "Ways to define portable executable bitness 64 vs 32",
    "link": "https://reverseengineering.stackexchange.com/questions/8217/ways-to-define-portable-executable-bitness-64-vs-32",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I found several ways to define the bitness of PE.</p>\n<ul>\n<li><code>IMAGE_FILE_HEADER</code> contains the/a (how do you choose an article type in such place?) field <code>Characteristics</code> that could be checked for <code>IMAGE_FILE_32BIT_MACHINE</code>.</li>\n<li><code>IMAGE_OPTIONAL_HEADER</code> contains the field <code>Magic</code> switched between <code>IMAGE_NT_OPTIONAL_HDR32_MAGIC</code>, <code>IMAGE_NT_OPTIONAL_HDR64_MAGIC</code> and some <code>IMAGE_ROM_OPTIONAL_HDR_MAGIC</code>.</li>\n<li><s><code>IMAGE_FILE_HEADER</code> also contains Machine field that could be checked for \n<ul>\n<li>0x8664 - x64</li>\n<li>0xaa64 - ARMv8 in 64-bit mode</li>\n<li>0x0200 - Intel Itanium processor family</li>\n<li>0x0284 - 64-bit Alpha AXP.</li></ul></s></li>\n</ul>\n<li><s>Also <code>SizeOfOptionalHeader</code> in <code>IMAGE_FILE_HEADER</code> could be checked for one of two specific values.</s></li>\n\n<p>Are all of them have the same meaning? Are there any difference, specific conditions, exceptional cases?</p>\n<hr/>\n<p>I found that <code>Machine</code> field check is indirect way because the field is aimed to processor architecture defining. So it's indirect and unreliable as heuristic.\n<code>SizeOfOptionalHeader</code> varies even for the same bitness since some image directories can absent.</p>\n</div>",
    "votes": "3",
    "answers": 2,
    "views": "791",
    "tags": [
        "windows",
        "pe",
        "executable",
        "binary"
    ],
    "user": "SerG",
    "time": "Feb 13, 2015 at 17:00",
    "comments": [
        {
            "user": "MrSynAckSter",
            "text": "<span class=\"comment-copy\">Is there any reason you can't just check for 64 bit registers in the decomp?</span>",
            "time": null
        },
        {
            "user": "SerG",
            "text": "<span class=\"comment-copy\">I look for truth. And I need fast and reliable way for automatic files processing.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>IMAGE_OPTIONAL_HEADER-&gt;MAGIC</code> (which is not optional at all :] ) is what determines for the Windows OS Loader to load this as 32bit vs 64bit. Depending on the value at <code>IMAGE_OPTIONAL_HEADER-&gt;MAGIC</code> is how the loader will parse the rest of the <code>IMAGE_OPTIONAL_HEADER</code>. </p>\n<p>And as stated <code>SizeOfOptionalHeader</code> can be use as a cross reference.</p>\n<p>The IMAGE_FILE_HEADER-&gt;MAGIC is used to determine the intended CPU. Mainly use to determine how machine code should be interpret. </p>\n</div>",
            "votes": "3",
            "user": "k0ng0",
            "time": "Feb 12, 2015 at 21:22",
            "is_accepted": false,
            "comments": [
                {
                    "user": "SerG",
                    "text": "<span class=\"comment-copy\">As Magic is already located inside optional header structure, it's likely bitness is defined before memory after IMAGE_FILE_HEADER will be \"mapped\" to 32 or 64 -bit kind of optional header struct.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The Machine field will tell you the target platform, which includes its bitness, and the endianness of the section contents.  The PE header itself is little-endian (and the optional header is entirely optional for object files).</p>\n</div>",
            "votes": "0",
            "user": "peter ferrie",
            "time": "Feb 15, 2015 at 4:19",
            "is_accepted": false,
            "comments": []
        }
    ]
}