{
    "title": "IDA script: How to properly undefine a byte and then redefine code",
    "link": "https://reverseengineering.stackexchange.com/questions/28028/ida-script-how-to-properly-undefine-a-byte-and-then-redefine-code",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to correct the following instructions in IDA using a script:</p>\n<pre><code>jnb     short near ptr loc_1C61B1+3\n</code></pre>\n<p>It order to do this I'm running a snippet like this in a script:</p>\n<pre><code>ida_bytes.del_value(loc_1C61B1)\nidc.create_insn(loc_1C61B1+3)\n</code></pre>\n<p>I've tried many variations on this including trying to auto wait for the analyzer using <code>ida_auto.*_wait()</code> functions, <code>ida_auto.*_plan</code> functions, deleting multiples bytes (<code>ida_bytes.del_items</code>), etc. but no matter what I do I cannot get the same analyzer outcome as if I ran the 2 functions above manually in the command bar. My guess is there's some race conditions happening with the analyzer.</p>\n<p>How do I properly achieve the following in a script:</p>\n<ul>\n<li>Undefine code at location <code>x</code>.</li>\n<li>Give the analyzer enough time to do its things.</li>\n<li>Make code at location <code>x + y</code>.</li>\n<li>Get the same outcome as if I have done the steps manually.</li>\n</ul>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "713",
    "tags": [
        "ida",
        "idapython",
        "static-analysis"
    ],
    "user": "user3238415",
    "time": "Jul 22, 2021 at 5:52",
    "comments": [],
    "answers_data": []
}