{
    "title": "Radare2 to show code hints like IDA Pro?",
    "link": "https://reverseengineering.stackexchange.com/questions/13160/radare2-to-show-code-hints-like-ida-pro",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to disassemble a binary with radare2, as a free alternative to IDA. Here is how the IDA disassembly of that section looks like : </p>\n<p>Here is what I am doing with Radare2 (with an additional option of <code>e asm.cmtright=true</code> in my <code>.radare2rc</code> file)\n: </p>\n<pre><code>  r2 binary \n    [0x004027c0]&gt; aaa\n│          [0x004027c0]&gt; s 0x40baa4\n│          [0x0040baa4]&gt; pd 10\n│           0x0040baa4    4200053c     a1 |= loc.00420000\n│           0x0040baa8    301ea524     a1 += 7728\n│           0x0040baac    08c52426     a0 = s1 - 15096\n│           0x0040bab0    09f82003     call t9\n│           0x0040bab4    304c02ae     [s0 + 19504] = v0\n│           0x0040bab8    1800bc8f     gp = [sp + 24]\n│           0x0040babc    304c048e     a0 = [s0 + 19504]\n│           0x0040bac0    2c83998f     t9 = [gp - 31956]\n│           0x0040bac4    00000000     \n│           0x0040bac8    09f82003     call t9\n</code></pre>\n<p>whereas the disassembly from the same location in IDA looks like : </p>\n<pre><code>.text:0040BAA4                 la      $a1, aId         # \"id\"\n.text:0040BAAC                 addiu   $a0, $s1, (sub_40C508 - 0x410000)\n.text:0040BAB0                 jalr    $t9 ; parse_uri\n.text:0040BAB4                 sw      $v0, dword_434C30\n.text:0040BAB8                 lw      $gp, 0x12B8+var_12A0($sp)\n.text:0040BABC                 lw      $a0, dword_434C30\n.text:0040BAC0                 la      $t9, sobj_get_string\n.text:0040BAC4                 nop\n.text:0040BAC8                 jalr    $t9 ; sobj_get_string\n</code></pre>\n<p>Is it possible to have radare2 show similar disassembly and be more meaningful? </p>\n<p>Another example would be : </p>\n<pre><code>[0x004127f8]&gt; pd 10\n│           0x004127f8    6c83998f     t9 = [gp - 31892]\n│           0x004127fc    00000000     \n│           0x00412800    09f82003     call t9\n│           0x00412804    2000a427     a0 = sp + 32\n│           0x00412808    1800bc8f     gp = [sp + 24]\n│           0x0041280c    02000524     a1 = 2\n│           0x00412810    5481998f     t9 = [gp - 32428]\n│           0x00412814    21300000     a2 = zero\n│           0x00412818    09f82003     call t9\n│           0x0041281c    2120c002     a0 = s6\n</code></pre>\n<p>compared to IDA : </p>\n<pre><code>.text:004127F8                 la      $t9, system\n.text:004127FC                 nop\n.text:00412800                 jalr    $t9 ; system\n.text:00412804                 addiu   $a0, $sp, 0x248+var_228  # command\n.text:00412808                 lw      $gp, 0x248+var_230($sp)\n.text:0041280C                 li      $a1, 2           # cmd\n.text:00412810                 la      $t9, lockf\n.text:00412814                 move    $a2, $zero       # len\n.text:00412818                 jalr    $t9 ; lockf\n.text:0041281C                 move    $a0, $s6         # fd\n</code></pre>\n<p>IDA even tells me that this is the address of system, while just looking at the radare2 code I wouldn't have had been able to find it. </p>\n<p>Any suggestions on how I could improve the radare2 analysis or it is just one of the limitations ?</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "1k",
    "tags": [
        "ida",
        "disassembly",
        "disassemblers",
        "radare2",
        "mips"
    ],
    "user": "Josh",
    "time": "Jul 28, 2016 at 20:32",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>you probably have e asm.esil set to true and e asm.emu set to false \ntry toggling them</p>\n<pre><code>radare2.exe malloc://0x4f0000\n -- Hello Mr. Anderson\n\n[0x00000000]&gt; s 0x40abb4\n[0x0040abb4]&gt; wx 4200053c301ea52408c5242609f82003\n[0x0040abb4]&gt; e asm.emu = true\n[0x0040abb4]&gt; e asm.esil = true\n[0x0040abb4]&gt; e asm.arch = mips\n\n\n[0x0040abb4]&gt; pd 4\n            0x0040abb4      4200053c       0x420000,a1,=              ; a1=0x420000\n            0x0040abb8      301ea524       7728,a1,+,a1,=             ; a1=0x421e30\n            0x0040abbc      08c52426       15096,s1,-,a0,=            ; a0=0xffffffffffffc508 -&gt; 0xffffff00\n            0x0040abc0      09f82003       0,$ds,&gt;,?{,$$,1,TRAP,BREAK,},pc,4,+,ra,=,t9,$jt,=,1,$ds,=; ra=0x40abc8 ; $jt=0x0 ; CALL: 0x0, 0x0\n, 0x0, 0x0\n\n\n[0x0040abb4]&gt; e asm.esil = false\n[0x0040abb4]&gt; pd 4\n            0x0040abb4      4200053c       lui a1, 0x42               ; a1=0x420000\n            0x0040abb8      301ea524       addiu a1, a1, 0x1e30       ; a1=0x421e30\n            0x0040abbc      08c52426       addiu a0, s1, -0x3af8      ; a0=0xffffffffffffc508 -&gt; 0xffffff00\n            0x0040abc0      09f82003       jalr t9                    ; ra=0x40abc8 ; $jt=0x0 ; CALL: 0x0, 0x0, 0x0, 0x0\n[0x0040abb4]&gt;\n</code></pre>\n</div>",
            "votes": "2",
            "user": "blabb",
            "time": "Jul 29, 2016 at 11:57",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This is currently Work in progress feature. It is called type propagation analysis that allows giving hints on variables types and their name in case of using standard functions.</p>\n<p>I cant explain how to use because it is still not finished. but you will expected to provide <a href=\"https://github.com/radare/radare2/blob/master/doc/calling-conventions.md\" rel=\"nofollow\">calling conventions profile</a> and data-types/function prototypes profiles for target architecture, they will be used to match function arguments to each instance of <code>call</code> instruction stack frame and registers as described per the profiles. </p>\n<p>This analysis round should be target architecture independent. Once it is fully implemented I will update the answer to describe how to use that analysis</p>\n</div>",
            "votes": "0",
            "user": "u185619",
            "time": "Jul 29, 2016 at 12:24",
            "is_accepted": false,
            "comments": []
        }
    ]
}