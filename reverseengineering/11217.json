{
    "title": "Implementing call into compiled, undocumented, C DLL; divining exported function prototype",
    "link": "https://reverseengineering.stackexchange.com/questions/11217/implementing-call-into-compiled-undocumented-c-dll-divining-exported-function",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've been attempting to build my own implementation of Nvidia's Surround functionality by using their DLLs within a more reliable and automatic system. I'm pretty new to this; I've been a programmer for a while, but I've never had need to do any reverse engineering like this, so apologies if I'm being profoundly dumb.</p>\n<p>So far I have managed the following:</p>\n<ul>\n<li>Found the names and addresses of the exported functions that relate\nto what I want to do inside NVCPL.dll.</li>\n<li>Found the only exe that seems to load in a copy of that DLL (nvcplui.exe).</li>\n<li>Using API monitor, I found an instance of one of the DLL's functions\nbeing called at what seems to be the right time.</li>\n<li>Put break points in the assembly of nvcpl.dll whilst attached to\nnvcplui.exe via x64_dbg</li>\n</ul>\n<p>Where I'm stuck:</p>\n<p>When I was using API monitor, I couldn't seem to catch any direct calls to the function I was looking at (NvCplApiDisableSpan), I only ever found it in the stack before a wndproc call. Also, the break points that I placed in and around that function never get triggered.</p>\n<p>My current thoughts are that I'll need to \"see\" the assembly of the function being called so I can get to the next step of figuring out how to shape my calls to that function correctly.</p>\n<p>I thought perhaps that the function was being called by a different process, having being triggered to do so by nvcplui.exe, but according to procexp that's not the case; nvcplui.exe is the only process using that dll.</p>\n<p>Any advise you have for me would be greatly appreciated; I'm not averse to doing my homework, but I can't see a way forward without maybe getting hold of a copy of IDA, however, that's a <em>little</em> outside my budget.</p>\n</div>",
    "votes": "3",
    "answers": 0,
    "views": "249",
    "tags": [
        "dll",
        "functions"
    ],
    "user": "Glitcher",
    "time": "Oct 30, 2015 at 23:20",
    "comments": [
        {
            "user": "Jason Geffner",
            "text": "<span class=\"comment-copy\">Have you considered using the <a href=\"https://www.hex-rays.com/products/ida/support/download_demo.shtml\" rel=\"nofollow noreferrer\">evaluation version of IDA Pro</a>?</span>",
            "time": null
        }
    ],
    "answers_data": []
}