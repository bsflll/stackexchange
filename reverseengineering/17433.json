{
    "title": "Find function's caller locations",
    "link": "https://reverseengineering.stackexchange.com/questions/17433/find-functions-caller-locations",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am debugging a program and searching to see when the program is calling <code>WinHttpOpenRequest</code>.    </p>\n<p>I searched using for the function with <kbd>Ctrl+G</kbd><br/>\n<a href=\"https://i.sstatic.net/jevgG.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/jevgG.png\"/></a></p>\n<p>I pressed on <code>Follow expression</code> and it put me on the definition of the function on the <code>WinHttp</code> module:<br/>\n<a href=\"https://i.sstatic.net/5elBL.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/5elBL.png\"/></a></p>\n<p>I wanted to find the place where the main module of the program is calling this function and not the definition.  </p>\n<p>I put a breakpoint there and after the program stopped there I tried to use the  <code>Go to</code> -&gt; <code>Previous location\\procedure</code> so see the calling to this function from the program but it send me to different places.  </p>\n<p>Any idea how can I find the places where the program is calling to a specific function, in my case <code>WinHttpOpenRequest</code> ?  </p>\n<p>I have a workaround and use IDA to find the exact place, but I am sure OllyDbg has this ability and I just not familiar with it.  </p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "3k",
    "tags": [
        "ollydbg",
        "debugging"
    ],
    "user": "E235",
    "time": "Feb 10, 2018 at 19:31",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>viewing previous procdures does not imply previous callers  to view previous callers you need to look at the stack if you are executing the binary </p>\n<p>use <kbd>ctrl+k</kbd><br/>\nbtw winhttp uses com so it would be convoluted indirect access on vtables over activex object </p>\n<p>it is not clear if you are executing the binary but just disassembling and trying to look at the references since you mention you have a workaround in ida </p>\n<p>i presume you are meaning the xrefs in ida </p>\n<p>if that is the case then ollydbg shows those references when you<br/>\nanalyze the winhttp.dll <kbd>ctrl+a</kbd> \nif you had analyzed the winhttp and used ctrl+g to go to the api </p>\n<p>you will see a small pane between cpu window and dump window stating local calls from  if you double click it you will see all the references to the present call</p>\n<p><a href=\"https://i.sstatic.net/iWy2i.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/iWy2i.png\"/></a></p>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "Feb 11, 2018 at 7:22",
            "is_accepted": true,
            "comments": [
                {
                    "user": "E235",
                    "text": "<span class=\"comment-copy\">Yes, you understood me right. I searched for something like <code>xref</code> in IDA.</span>",
                    "time": null
                }
            ]
        }
    ]
}