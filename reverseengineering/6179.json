{
    "title": "List late binding functions",
    "link": "https://reverseengineering.stackexchange.com/questions/6179/list-late-binding-functions",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'd like to identify all late-binding calls made by a windows 32 or 64 executable program. I can take a look at the imported functions through the IAT but I'm unable to list the functions called during a program invocation.</p>\n<p>Is there a way to accomplish this?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "117",
    "tags": [
        "windows",
        "functions",
        "iat"
    ],
    "user": "Marco A.",
    "time": "Sep 5, 2014 at 13:29",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><a href=\"http://www.dependencywalker.com/\">Dependency Walker</a> is your friend.</p>\n<p>Note that it's almost impossible to find out which libraries/entry points a program uses by static analysis alone, since the strings passed to <code>LoadLibrary</code> and <code>GetProcAddress</code> might be obfuscated, i.e. not visible in the binary. <code>Dependency Walker</code> catches those calls at runtime, which means a) you need to run the program - which may not be advisable if it's known malware - and b) it still might miss something if you don't execute that path of code. But within these restrictions, it's about the best you can get.</p>\n</div>",
            "votes": "5",
            "user": "Guntram Blohm",
            "time": "Sep 5, 2014 at 13:49",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Marco A.",
                    "text": "<span class=\"comment-copy\">I really have to thank you, I didn't know that and I can finally inspect a list of calls that the application did (it seemed suspicious at first that the app didn't use any of the calls I thought it did). Thank you!</span>",
                    "time": null
                }
            ]
        }
    ]
}