{
    "title": "Change value of an IF condition found in IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/19115/change-value-of-an-if-condition-found-in-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>so I have the .idb file of an executeable I want to modify.</p>\n<p>In the IDB file, I found this code</p>\n<p><a href=\"https://i.sstatic.net/K9V5F.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/K9V5F.png\"/></a></p>\n<p>And I basically want to change 4111006 to 1006 in that IF condition.\nhowever, when I press TAB to go to pseudocode, this is what it shows me</p>\n<p><a href=\"https://i.sstatic.net/SNIkH.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/SNIkH.png\"/></a></p>\n<p>(marked in yellow)</p>\n<p>So it shows 4121000 and 4111001 in these segments, but it doesn't show the rest and the one I want to change (4111006), preventing me from finding it in ollydbg / a hex editor and changing it.</p>\n<p>Is it possible to find 4111006 and change it to a different integer value? If so, how can I do that? Thank you.</p>\n</div>",
    "votes": "-3",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ida",
        "assembly",
        "ollydbg",
        "decompilation",
        "executable"
    ],
    "user": "FightRay",
    "time": "Aug 20, 2018 at 20:52",
    "comments": [
        {
            "user": "user202729",
            "text": "<span class=\"comment-copy\">First you need to learn assemble language and understand how the decompiled code corresponds to the disassembly.</span>",
            "time": null
        },
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">please do not post code as images. It's really hard to copy paste from them.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The way how those IFs are constructed in the assembly is a bit different than what you see in high-level overview in IDA code.</p>\n<p>Apart from the first one, ifs are represented with subtraction (<code>sub</code> &amp; <code>dec</code>) and <code>jz</code>.</p>\n<p>This code is an alternative of conditions:</p>\n<pre><code>if (Args == 4121000 || Args == 4111001)\n    goto LABEL_297\n</code></pre>\n<p>and is represented in asm with this code:</p>\n<pre><code>6DCC53: mov ecx, 4121000\n6DCC55: cmp eax, ecx\n6DCC57: jg short loc_6DCC93\n6DCC5D: jz loc_6DCBB6\n6DCC62: sub eax, 4111001\n6DCC68: jz loc_6DCBB6\n</code></pre>\n<p>because in the first 4 lines (excluding 3rd) you have the first part of the if (standard <code>cmp</code> + <code>jz</code>) and then later a value of <code>4111001</code> is subtracted from <code>eax</code>. If it results in zero then we know that the value was equal to it and we jump to the same location. So IDA identifies this as an alternative of two values: <code>4121000</code>, <code>4111001</code>.</p>\n<p>The following ifs are represented with this:</p>\n<pre><code>dec eax\njz loc_6DCXXX\n</code></pre>\n<p>Remember that after the line <code>6DCC62</code> the value in <code>eax</code> we compare with is already <code>-4111001</code>, so if we subtract one more time and if we get zero, we know that the initial value was <code>4111002</code>. This is why IDA represents this as:</p>\n<pre><code>if (Args == 4111002)\n    goto LABEL_346\n</code></pre>\n<p>The next branches are the same. So you if want to modify the last one, you would have to modify the line that IDA correctly pointed you to + the one before. So instead of having there the same pattern as for all the other ifs, you need to write:</p>\n<pre><code>cmp ecx, 1006\njz 6DCD28\n</code></pre>\n<p>and assemble such opcodes.</p>\n</div>",
            "votes": "0",
            "user": "Paweł Łukasik",
            "time": "Aug 21, 2018 at 4:37",
            "is_accepted": true,
            "comments": []
        }
    ]
}