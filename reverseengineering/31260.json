{
    "title": "Reading memory values in IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/31260/reading-memory-values-in-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Want to get 32 bits from 0x8000 adress as 8 bytes</p>\n<pre><code>MEM_EXT:00008000                 db 54h\nMEM_EXT:00008001                 db 53h, 57h, 20h\nMEM_EXT:00008004                 dd 322E3256h, 31332030h, 30303330h, 31313320h, 43432036h\nMEM_EXT:00008004                 dd 2F363535h, 20425345h, 865808FAh, 865808FAh, 865808FAh\nMEM_EXT:00008004                 dd 865808FAh, 865808FAh, 865808FAh, 865808FAh, 865808FAh\nMEM_EXT:00008004                 dd 865808FAh, 865808FAh, 865808FAh, 0FFA735A7h, 962F8E20h\nMEM_EXT:00008004                 dd 0DF00F0h, 0DF00FFh, 0AF008Fh, 70002h, 380038h, 0FF000700h\nMEM_EXT:00008004                 dd 0, 0, 0\n</code></pre>\n<p>Would this be</p>\n<p>0x54 0x53 0x57 0x20 0x32 0x2e 0x32 0x56 ???</p>\n<p>How to get further 64 bits, after first 32 bits from 0x8000?</p>\n<p>Weird things is that 64 bits as 16 bytes should contain also 0 somwehere</p>\n<p>Those should be permutation and S-box key parts</p>\n<p>Some more info:</p>\n<pre><code>ROM:00000000 ; Processor       : c166 [C165]\nROM:00000000 ; Target assembler: Keil A166 Assembler\nROM:00000000 ; Byte sex        : Little endian\n</code></pre>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "417",
    "tags": [
        "ida",
        "disassembly",
        "assembly"
    ],
    "user": "dev",
    "time": "Dec 11, 2022 at 11:49",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In order to change the representation of the data to byte, word(2 bytes), dword(4 bytes) or qword(8 bytes) you can use the following shortcuts after locating the cursor at the needed adress:</p>\n<ul>\n<li><kbd>U</kbd>: undefines the data, reverts it to bytes</li>\n<li><kbd>D</kbd>: changes data representation (pressing it on byte makes it short, pressing it on short makes it dword, and then rolls back to byte)</li>\n<li><kbd>Q</kbd>: changes data representation as qword</li>\n<li><kbd>*</kbd>: makes data an array of the type of the element you located the cursor at, you can choose the size</li>\n<li><kbd>Y</kbd>: Assigns a type to an object at a specific address (for example, in your case, it may be BYTE sbox[size], choose size according to the used encryption algorithm)</li>\n</ul>\n<p>So in order to make the data at your address look like bytes, you need just to undefine the data at <code>00008004</code>, this will revert all the group of dwords to bytes. After that you can arrange the rest of the array as you want with the mentioned shortcuts.</p>\n</div>",
            "votes": "3",
            "user": "w s",
            "time": "Dec 12, 2022 at 8:10",
            "is_accepted": true,
            "comments": []
        }
    ]
}