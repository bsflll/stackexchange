{
    "title": "IDA is not recognizing cross references",
    "link": "https://reverseengineering.stackexchange.com/questions/2130/ida-is-not-recognizing-cross-references",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In the IDA view I see (<code>glb_SomeVar</code> is a byte array):</p>\n<pre><code>cmp al, glb_SomeVar+22h\n</code></pre>\n<p>But when I hit <kbd>x</kbd> to find the cross references of glb_SomeVar, I only find two other matches in the same function:</p>\n<pre><code>cmp al, glb_SomeVar+0Ah\ncmp al, glb_SomeVar+0Bh\n</code></pre>\n<p>Is there a way to fix this, like making IDA re-analyze the selected function or even the whole code? I guess at other places, there are cross references missing too.</p>\n</div>",
    "votes": "6",
    "answers": 2,
    "views": "4k",
    "tags": [
        "ida"
    ],
    "user": "heinrich5991",
    "time": "May 28, 2013 at 19:21",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Edit -&gt; Global -&gt; Cross-references -&gt; Cross reference depth. Increase as applicable.</p>\n<p>From <a href=\"https://www.hex-rays.com/products/ida/support/idadoc/607.shtml\">the documentation</a>:</p>\n<pre><code>    This value \"how many bytes of an object to look at to collect\n    cross references\". For example we have an array:\n            A       db 100 dup(0)\n    If some instruction refers to the 5-th element of the array:\n            mov     al,A+5\n     with TD=3      we'll have no xrefs displayed\n     with TD=10     we'll have this xref\n\n   IDA.CFG parameter: MAX_TAIL\n</code></pre>\n<p>\"TD\" here refers to \"tail depth\" (old name of the setting)</p>\n</div>",
            "votes": "10",
            "user": "Igor Skochinsky",
            "time": "May 28, 2013 at 20:27",
            "is_accepted": true,
            "comments": [
                {
                    "user": "k0ng0",
                    "text": "<span class=\"comment-copy\">Ooooh didn't know this functionality. Thanks</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I think the default in IDA 6.8 is a Cross reference depth of 16. I increased this first to 32 and then to 1024 and then to 65535 (because why not). None of this led to my xref working as desired so I must not understand something.</p>\n<p>I'm analyzing an ARM ELF shared object file. The function I'm looking at is called by a function referenced by an offset in the .init_array segment (not sure if that's relevant). The offset I want to see all references of is:</p>\n<pre><code>.bss:00424778 ; void *dword_424778\n.bss:00424778 dword_424778    % 4\n</code></pre>\n<p>It was originally identified as unk_424778 but I pressed <kbd>Y</kbd> and set the type was \"void *\".</p>\n<p>Hex Rays shows this assignment:</p>\n<pre><code>    dword_424778 = &amp;_sF;\n</code></pre>\n<p>Using HexRaysCodeXplorer I press <kbd>J</kbd> to jump back to disassembly from Hex Rays. It put me on line 0026D69C:</p>\n<pre><code>...\n.text:0026D668                 LDR             R5, [R4,R2] ; unk_424758\n.text:0026D66C                 ADD             R0, R5, #0x1C\n.text:0026D670                 STMIA           R5, {R3,R7}\n.text:0026D674                 STR             R7, [R5,#8]\n.text:0026D678                 STR             R7, [R5,#0xC]\n.text:0026D67C                 STR             R7, [R5,#0x10]\n.text:0026D680                 STR             R7, [R5,#0x14]\n.text:0026D684                 STR             R7, [R5,#0x18]\n.text:0026D688                 BL              sub_26F42C\n.text:0026D68C                 LDR             R2, =(off_374A30 - 0x374C20)\n.text:0026D690                 LDR             R3, [SP,#0x38+var_34]\n.text:0026D694                 STR             R9, [R5]\n.text:0026D698                 STR             R8, [R5,#0x24]\n.text:0026D69C                 STR             R11, [R5,#0x20]\n...\n</code></pre>\n<p>I don't know ARM very well but I read that the STMIA R5, {R3,R7} will result in unpredictable behavior due to the reglist ({R3,R7}) starting with a lower-number register than Rn (R5).</p>\n<p>Could the problem be related to dword_424778 being in the .bss section?</p>\n</div>",
            "votes": "1",
            "user": "Jeffrey LeCours",
            "time": "Dec 20, 2015 at 5:35",
            "is_accepted": false,
            "comments": []
        }
    ]
}