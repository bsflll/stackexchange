{
    "title": "How to find V-Table in IDA? (Using class informer)",
    "link": "https://reverseengineering.stackexchange.com/questions/19125/how-to-find-v-table-in-ida-using-class-informer",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've been trying for a while now to get my head around V-Tables, V-Table patching, etc, i understand what V-Tables are and why they are used (At least i think i do).</p>\n<p>But how do i find them in IDA? I'm using IDA Pro 7.0, and i created a test program with two classes.</p>\n<pre><code>class ClassA\n{\npublic:\n    ClassA();\n    ~ClassA();\n    virtual void Test();\n};\n</code></pre>\n<p>And..</p>\n<pre><code>class ClassB : public ClassA\n{\npublic:\n    ClassB();\n    ~ClassB();\n    void Test() override;\n};\n</code></pre>\n<p>The definition for the <code>Test</code> function in both cases is a simple <code>cout</code> to the console.</p>\n<p>And in <code>main.cpp</code></p>\n<pre><code>int main()\n{\n    ClassB* BClass = new ClassB();\n    while (1)\n    {\n        BClass-&gt;Test();\n        Sleep(1000);\n    }\n    delete BClass;\n    return 0;\n}\n</code></pre>\n<p>I was trying to follow <a href=\"https://youtu.be/RO3pg6ZLGQw?t=504\" rel=\"nofollow noreferrer\">this</a> explanation, but it seems as if the data isn't structured the same way in his version of IDA.</p>\n<p>After clicking on the class in the Class Informer window, i'm taken to IDA View-A, and this is what i see.</p>\n<p><a href=\"https://i.sstatic.net/oOpZa.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/oOpZa.png\"/></a></p>\n<p>At this point i'm a bit lost, as i'm not really sure how to find or follow pointers in IDA.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "7k",
    "tags": [
        "ida",
        "ida-plugin",
        "pointer",
        "vtables"
    ],
    "user": "Michael Strobel",
    "time": "Aug 22, 2018 at 2:48",
    "comments": [
        {
            "user": "Michael Strobel",
            "text": "<span class=\"comment-copy\">I really need to figure out how to navigate the pointers, from class instance through the V-Table pointers, to the target function.   It's not something i was taught in programming courses, and difficult to find straight forward information.</span>",
            "time": null
        },
        {
            "user": "Biswapriyo",
            "text": "<span class=\"comment-copy\">This tutorial from @IgorSkochinsky may help: <a href=\"http://youtu.be/efkLG8-G3J0\" rel=\"nofollow noreferrer\">youtu.be/efkLG8-G3J0</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>What you're looking it is actually a VTable. As you know, a VTable is a table of function pointers and as you can see, at address <code>0x19B64</code> you actually see a single function address (this looks like <code>dd offset sub_XXXX</code>). That is actually a virtual function table of a size of one. Since you only have one virtual function in your demo class. That offset points to one implementation of <code>Test</code>. Double-clicking the function name (which defaults to the function's address prefixed with <code>sub_</code> to indicate it is a subroutine) will set the cursor it it's address (and make it visible).</p>\n<p>Somewhat below that, at address <code>0x19B8C</code>, you can see the second class's vtable, as you have two classes with differing functions. That offset is the second implementation of <code>Test</code></p>\n</div>",
            "votes": "3",
            "user": "NirIzr",
            "time": "Aug 22, 2018 at 21:57",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Michael Strobel",
                    "text": "<span class=\"comment-copy\">So if there is more than one virtual function in the class, i would find them here also?</span>",
                    "time": null
                },
                {
                    "user": "NirIzr",
                    "text": "<span class=\"comment-copy\">Yes. You can compile a more elaborate example and see for yourself :) You'll simply see two (or more) lines of <code>dd offset sub_????</code> one following the other, at sequential addresses.</span>",
                    "time": null
                }
            ]
        }
    ]
}