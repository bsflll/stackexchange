{
    "title": "How to decompile these LUAs from the Bookworm Adventures games?",
    "link": "https://reverseengineering.stackexchange.com/questions/20835/how-to-decompile-these-luas-from-the-bookworm-adventures-games",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to decompile the LUCs (customly extensioned LUAs) from both of the games but they won't decompile, they aren't encrypted and use LUA version 5.0.2 (32-bit) according to the game's code. They are headered LuaV with extra bytes of some sort. Anyone willing to help me decompile these files? If so thanks so much.</p>\n<p><a href=\"https://zenhax.com/download/file.php?id=6262\" rel=\"nofollow noreferrer\">https://zenhax.com/download/file.php?id=6262</a> (Vol 1)</p>\n<p><a href=\"https://zenhax.com/download/file.php?id=6251\" rel=\"nofollow noreferrer\">https://zenhax.com/download/file.php?id=6251</a> (Vol 2)</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "581",
    "tags": [
        "decompilation",
        "lua"
    ],
    "user": "LolHacksRule",
    "time": "Sep 1, 2019 at 2:36",
    "comments": [
        {
            "user": "Avery3R",
            "text": "<span class=\"comment-copy\">I'd compile that version of lua and find the simplest file that can be hand-decompiled, or if the game still has the lua decompilation functions I'd use those to compile some simple code. Then i'd recompile it in the normal version of lua and look at what the differences are.</span>",
            "time": null
        },
        {
            "user": "LolHacksRule",
            "text": "<span class=\"comment-copy\">The game doesn't mention LUC in the executable code but still reads from them (I'm likely missing a library of some sort), it also loads LUA extensioned files similarly this way. I did compile a simple testing LUA of my own and use luac -l on a LUC after fixing some header bytes while using my LUA as an idea and I always get error of some sort. The smallest file I know is Hippogriff, I'm trying to decompile that one for an example on decompiling the other files. One of the games have a few plain LUA files but are missing characters yet the game still reads them fine.</span>",
            "time": null
        },
        {
            "user": "LolHacksRule",
            "text": "<span class=\"comment-copy\">Anyone going to get back to this? I decided to return to this for more documentation on the game code, but this is still hard to mess with, I tried unluac after the changing header but unluac still refuses to decompile it no matter what I try, WordMasterData in Vol2 is the smallest file.</span>",
            "time": null
        },
        {
            "user": "Avery3R",
            "text": "<span class=\"comment-copy\">The way that I would recommend you move forward is to bindiff the game's binaries with a version of lua that you compiled, then look at the differences in the functions relating to creating or parsing compiled lua files.</span>",
            "time": null
        },
        {
            "user": "LolHacksRule",
            "text": "<span class=\"comment-copy\">There's a mechanism where Lua files in scripts/common get compiled to Luc files if they aren't already present, I tried my own and I decompiled it fine after fixing bytes with ChunkSpy to help me on it. <a href=\"https://cdn.discordapp.com/attachments/391399338040885249/617934561657094157/log.lst\" rel=\"nofollow noreferrer\">cdn.discordapp.com/attachments/391399338040885249/…</a> <a href=\"https://cdn.discordapp.com/attachments/391399338040885249/617831964959047691/common.luc\" rel=\"nofollow noreferrer\">cdn.discordapp.com/attachments/391399338040885249/…</a> <a href=\"https://cdn.discordapp.com/attachments/391399338040885249/617805872369893376/Log\" rel=\"nofollow noreferrer\">cdn.discordapp.com/attachments/391399338040885249/…</a></span>",
            "time": null
        }
    ],
    "answers_data": []
}