{
    "title": "Modify value to pass jump and print a message with Radare2",
    "link": "https://reverseengineering.stackexchange.com/questions/25082/modify-value-to-pass-jump-and-print-a-message-with-radare2",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a problem with understanding, why after modifying variable <code>var_4h</code> and passing positively through jne at <code>0x000006c3</code> I still cannot see the message. I use radare2</p>\n<p>In debug mode, just before cmp I use: <code>wv \\0x5 @rbp-0x4</code></p>\n<pre><code> 52: main ();\n│           ; var uint32_t var_4h @ rbp-0x4\n│           0x000006b0      55             push rbp\n│           0x000006b1      4889e5         mov rbp, rsp\n│           0x000006b4      4883ec10       sub rsp, 0x10\n│           0x000006b8      c745fc040000.  mov dword [var_4h], 4\n│           0x000006bf      837dfc05       cmp dword [var_4h], 5\n│       ┌─&lt; 0x000006c3      7518           jne 0x6dd\n│       │   0x000006c5      488d35980000.  lea rsi, qword str.You_win  ; 0x764 ; \"You win!\"\n│       │   0x000006cc      488d3d9a0000.  lea rdi, qword [0x0000076d] ; \"%s\"\n│       │   0x000006d3      b800000000     mov eax, 0\n│       │   0x000006d8      e883feffff     call sym.imp.printf\n│       │   ; CODE XREF from main @ 0x6c3\n│       └─&gt; 0x000006dd      b800000000     mov eax, 0\n│           0x000006e2      c9             leave\n└           0x000006e3      c3             ret\n</code></pre>\n<p>Can someone help me with this? I just ran out of ideas what I'm doing wrong.</p>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "839",
    "tags": [
        "radare2"
    ],
    "user": "BTom",
    "time": "May 21, 2020 at 11:48",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>To replicate your issue, I created a simple program:</p>\n<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n  int x = 4;\n  if (x == 5)\n    printf(\"You win!\\n\");\n  return 0;\n}\n</code></pre>\n<p>and then:</p>\n<pre><code>[0x7fb00d000c30]&gt; aaa\n[x] Analyze all flags starting with sym. and entry0 (aa)\n[x] Analyze function calls (aac)\n[x] Analyze len bytes of instructions for references (aar)\n[x] Check for objc references\n[x] Check for vtables\n[TOFIX: aaft can't run in debugger mode.ions (aaft)\n[x] Type matching analysis for all functions (aaft)\n[x] Propagate noreturn information\n[x] Use -AA or aaaa to perform additional experimental analysis.\n[0x7fb00d000c30]&gt; dcu main\nContinue until 0x004004b2 using 1 bpsize\nhit breakpoint at: 4004b2\n[0x004004b2]&gt; pdf\n            ; DATA XREF from entry0 @ 0x4003fd\n            ;-- rax:\n            ;-- rip:\n┌ 38: int main (int argc, char **argv, char **envp);\n│           ; var int64_t var_4h @ rbp-0x4\n│           0x004004b2      55             push rbp\n│           0x004004b3      4889e5         mov rbp, rsp\n│           0x004004b6      4883ec10       sub rsp, 0x10\n│           0x004004ba      c745fc040000.  mov dword [var_4h], 4\n│           0x004004c1      837dfc05       cmp dword [var_4h], 5\n│       ┌─&lt; 0x004004c5      750a           jne 0x4004d1\n│       │   0x004004c7      bf64054000     mov edi, str.You_win        ; 0x400564 ; \"You win!\"\n│       │   0x004004cc      e8dffeffff     call sym.imp.puts           ; int puts(const char *s)\n│       └─&gt; 0x004004d1      b800000000     mov eax, 0\n│           0x004004d6      c9             leave\n└           0x004004d7      c3             ret\n[0x004004b2]&gt; dcu 0x004004c1\nContinue until 0x004004c1 using 1 bpsize\nhit breakpoint at: 4004c1\n[0x004004c1]&gt; pf d @ rbp-0x4\n0x7ffff4c0021c = 4\n[0x004004c1]&gt; wv 5 @rbp-0x4\n[0x004004c1]&gt; pf d @ rbp-0x4\n0x7ffff4c0021c = 5\n[0x004004c1]&gt; dc\nYou win!\n</code></pre>\n<p>Few things to notice:</p>\n<ol>\n<li>check your write - wv command</li>\n<li>Also note that the output doesn't show up (in my case) if I don't use <code>\\n</code> in <code>\"you win!\\n\"</code> string (although I don't know the exact reason why this happens)</li>\n<li>If you don't have an access to the source code, then edit the string and add <code>\\n</code> yourself.</li>\n</ol>\n<pre><code>&gt;iz\nnth paddr      vaddr      len size section type  string\n―――――――――――――――――――――――――――――――――――――――――――――――――――――――\n0   0x00000564 0x00400564 9   9    .rodata ascii You win!\n&gt;w You win!\\n @0x00400564\n</code></pre>\n<p>(in write mode <code>-w</code>) It is not the most elegant way but worked in my case.</p>\n<p>If you fix this then your program should work fine.</p>\n</div>",
            "votes": "3",
            "user": "R4444",
            "time": "May 21, 2020 at 16:24",
            "is_accepted": false,
            "comments": [
                {
                    "user": "BTom",
                    "text": "<span class=\"comment-copy\">Thank you. I corrected wv command, and did everything the same as you, but message is still not printed (instead I land in printf command). Unfortunately, I don't have an access to the source code, so I cannot modify it.</span>",
                    "time": null
                },
                {
                    "user": "R4444",
                    "text": "<span class=\"comment-copy\">I edited the my answer</span>",
                    "time": null
                },
                {
                    "user": "BTom",
                    "text": "<span class=\"comment-copy\">Thank you. Unfortunately, after changes and going to debug mode, I got blank line in return, and in assembly after \\n I got \\%s</span>",
                    "time": null
                }
            ]
        }
    ]
}