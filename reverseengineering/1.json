{
    "title": "What is the current state of the art for platform modeling?",
    "link": "https://reverseengineering.stackexchange.com/questions/1/what-is-the-current-state-of-the-art-for-platform-modeling",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>When we're doing reverse engineering, we have a few levels of models. One of them is the instruction semantics model, which tells us what every native instruction does to modify instruction state. We're making progress there. However, another problem is that of platform semantics, which is at a higher level. </p>\n<p>For example, a high-level model of a userspace linux program would need to include information about mprotect and that it can alter the visibility of certain regions of code. Threading and callback semantics are also a platform modeling issue, we can discover a programs entrypoint from its header (which is another kind of semantic! but one we're probably not going to compromise on), but other entrypoints are published in the program in the form of arguments to atexit, pthread_create, etc. </p>\n<p>What is our current best effort/state of the art at capturing this high level platform information in a way that is understood by practicioners? What about by mechanical / automated understanding systems? I know that IDA has (or has to have) information about different platform APIs, it seems to know that when an immediate is a parameter to pthread_create then that immediate is a pointer to code and should be treated as such. What do we have beyond that?</p>\n</div>",
    "votes": "32",
    "answers": 2,
    "views": "822",
    "tags": [
        "code-modeling"
    ],
    "user": "Andrew",
    "time": "Jan 28, 2019 at 10:38",
    "comments": [
        {
            "user": "Jesper.Reenberg",
            "text": "<span class=\"comment-copy\">Are you asking for something like REIL or BUP, but at the \"program\"/code level instead of the instruction level?</span>",
            "time": null
        },
        {
            "user": "endeavor",
            "text": "<span class=\"comment-copy\">He is referring to a model of the environment in which the application runs, like an \"IL\" for the system. For example, what's the best way to model the call connect() followed by a subsequent call recv().</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<h2>Direct Detection</h2>\n<p>At the lowest level you can just have copies of the libraries and check if they are the one used. </p>\n<h2>Signature based Detection</h2>\n<p>At a higher level than that is <a href=\"https://www.hex-rays.com/products/ida/tech/flirt/index.shtml\">IDA FLIRT</a> which stores just enough information about a library to identify its use. But its main benefit is reduced disk usage... it is worth noting that you can add more definitions to the default ones.</p>\n<p>Hex-Rays talks about the technology <a href=\"https://www.hex-rays.com/products/ida/tech/flirt/in_depth.shtml#implementation\">in-depth here</a>.</p>\n<h2>Generic recognition</h2>\n<p>Tools like Coverity or the <a href=\"http://clang-analyzer.llvm.org/\">Clang static analyzer</a> or <a href=\"http://klee.llvm.org/\">KLEE</a> are more general and more likely to include models for programming idioms.</p>\n<p>The only thing I know of coming close to IDA that is open source is <a href=\"https://github.com/radare/radare2\">radare</a> which might have some library recognition. Also <a href=\"http://www.radare.org/\"><code>radare</code>'s main page</a>. And I have been looking since I am hunting something like IDA that supports SPARC for free and it looks like <code>radare</code> does although I haven't had time it give it a go yet.</p>\n<p>From what I can tell REC and Boomerang do not recognize libraries the way IDA does, but instead just attempt to decompile everything. <a href=\"http://bap.ece.cmu.edu/\">BAP</a> does analysis of binaries and is derived from the Vine component of the BitBlaze project the two projects below are part of as well.</p>\n<h2>Flow Analysis</h2>\n<p>TEMU and Rudder <a href=\"http://bitblaze.cs.berkeley.edu/#projects\">here</a> look to be quite advanced. And deal with code as it executes. TEMU helps to relate imputs and outputs to the flow. </p>\n<p>It is also worth noting that the Bitblaze tools are designed to provide traces for use in IDA although they could probably be adapted for use otherwise.</p>\n<p>Going off of the specifics you provided <a href=\"http://bitblaze.cs.berkeley.edu/temu.html\">TEMU</a> sounds the closest to what you want.... it allows you to mark tainted inputs (memory locations, physical inputs etc...) and detect the effects of those taints on the execution. If you want to try out TEMU and are on a newer Linux distro (anything with GCC 4+ which is most anything in the past few years) follow the <a href=\"https://groups.google.com/forum/?fromgroups#!topic/bitblaze-users/QdoY9l8D-ho\">instructions here</a>.</p>\n</div>",
            "votes": "9",
            "user": "0xC0000022L",
            "time": "Apr 17, 2013 at 4:38",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm not sure I understand the question but various sandbox solutions(Norman, Androguard) tend to produce a log of events on the system which my give you some idea of the platform and it's state.\nOther than that I'm unaware on any tools which would help you determine system state via static analysis. I use a debugger to answer such questions when possible and manual static analysis when not. </p>\n</div>",
            "votes": "2",
            "user": "user1636717",
            "time": "Mar 28, 2013 at 13:56",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Peter Andersson",
                    "text": "<span class=\"comment-copy\">I think this is more related to the actual modeling of the functions of the system. The only think I can think of which does this sort of thing is static code analysis products such as <a href=\"http://www.coverity.com/\" rel=\"nofollow noreferrer\">Coverity</a>, <a href=\"http://www8.hp.com/us/en/software-solutions/software.html?compURI=1338812#.UVRkdBy4WcE\" rel=\"nofollow noreferrer\">Fortify</a> and <a href=\"http://www.klocwork.com/\" rel=\"nofollow noreferrer\">Klocwork</a>.</span>",
                    "time": null
                }
            ]
        }
    ]
}