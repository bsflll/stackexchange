{
    "title": "How to find the native library for a specific native method in android Java code?",
    "link": "https://reverseengineering.stackexchange.com/questions/33257/how-to-find-the-native-library-for-a-specific-native-method-in-android-java-code",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am having a function in an apk that looks like this:\n<a href=\"https://i.sstatic.net/cKOMtPgY.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/cKOMtPgY.png\"/></a></p>\n<p>I want to find the .so file that contains executable code for this function.</p>\n<p>What I tried:</p>\n<ul>\n<li>I tried looking for calls to <code>System.loadlibrary()</code> in the same class but found none.</li>\n<li>I enumerated loaded libraries using frida but none of them contain any hint about this method (or I have not known what to look for).</li>\n<li>I found classes that extended this <code>k</code> class, but found none.</li>\n</ul>\n<p>Please help!</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "23",
    "tags": [
        "decompilation",
        "android"
    ],
    "user": "Duy Thành Vũ",
    "time": "Oct 10, 2024 at 11:23",
    "comments": [
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">Native method implementations can be contained in any loaded .so file. They just have to be present (loaded) when the native method is called. I would first check the .so files for exported methods that match the JNI method naming scheme (start with <code>Java_</code> and the package and class name). Note that AFAIK it is also possible to define native methods in an .so e.g. in <code>JNI_OnLoad</code>, therefore native method implementations are not always exported functions.</span>",
            "time": null
        }
    ],
    "answers_data": []
}