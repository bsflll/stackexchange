{
    "title": "Anti Dumping Techniques (C++)",
    "link": "https://reverseengineering.stackexchange.com/questions/31134/anti-dumping-techniques-c",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>how would I go about blocking Memory Dumps by corrupting the PE Header or blocking the Debugger to get an Handle?</p>\n<p>I tried <a href=\"https://github.com/LordNoteworthy/al-khaser/tree/master/al-khaser/AntiDump\" rel=\"nofollow noreferrer\">this</a> already but it didnt work. Scylla could still dump it fine.</p>\n</div>",
    "votes": "3",
    "answers": 0,
    "views": "530",
    "tags": [
        "memory",
        "x64dbg",
        "dumping",
        "memory-dump",
        "dump"
    ],
    "user": "Heinz Josef",
    "time": "Nov 13, 2022 at 13:01",
    "comments": [
        {
            "user": "Mega Tonnage",
            "text": "<span class=\"comment-copy\">You can't block memory dumps as you don't control the machine the code is run on, your best bet is to look at encryption.</span>",
            "time": null
        }
    ],
    "answers_data": []
}