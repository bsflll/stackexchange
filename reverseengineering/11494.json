{
    "title": "Reverse Engineering CD-ROM Firmware",
    "link": "https://reverseengineering.stackexchange.com/questions/11494/reverse-engineering-cd-rom-firmware",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to write a program for a Mediatek based CD-ROM to write information to CDs in a different manner. I want to be able to control the laser with, or without a CD within. So my question is, what is the best approach to getting the firmware to rewrite the instruction set accepted from the computer. I am assuming that the architecture is ARM, but do you think that it is best to download the firmware from the company's website, then put it in a disassembler and try things, or is there a better or different approach? My last resort is to create a new control board, in which can control the electronics.</p>\n<p>Thanks,</p>\n<p>Simon</p>\n</div>",
    "votes": "4",
    "answers": 3,
    "views": "2k",
    "tags": [
        "disassembly",
        "firmware",
        "reassembly"
    ],
    "user": "user14366",
    "time": "Dec 9, 2015 at 18:22",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Coastermelt project: open source firmware for creatively repurposing BD-R drives from Micah Scott aka @scanlime. </p>\n<p>It contains 2 very interesting videos: </p>\n<ul>\n<li><a href=\"https://vimeo.com/110257380\" rel=\"nofollow\">https://vimeo.com/110257380</a> </li>\n<li><a href=\"https://vimeo.com/111417458\" rel=\"nofollow\">https://vimeo.com/111417458</a> </li>\n</ul>\n<p>Github code: <a href=\"https://github.com/scanlime/coastermelt/\" rel=\"nofollow\">https://github.com/scanlime/coastermelt/</a></p>\n</div>",
            "votes": "4",
            "user": "Maijin",
            "time": "Jan 16, 2016 at 15:39",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The solution you refer to as a “last resort” is not that difficult. If you don't need to control the position of the laser precisely, there are a few things that need control:</p>\n<ol>\n<li>Brushless motor to spin the disk</li>\n<li>Stepper motor to move the laser</li>\n<li>Laser diode to actually burn something</li>\n</ol>\n<p>You may even do it without much soldering with a board like Arduino.</p>\n<p>If you <em>do</em> need to save most of the CD-ROM functionality, you will need to RE the firmware. The problem is that while the core of the microprocessor is ARM, it also contains a lot of peripheral modules which you don't have any documentation for. You may be able to deduce some of the hardware registers, but this task is not easy overall. It would be useful to have a <a href=\"https://spritesmods.com/?art=hddhack&amp;page=3\" rel=\"nofollow\">JTAG adapter hooked up to the board</a> in order to control the program execution.</p>\n</div>",
            "votes": "2",
            "user": "Vladislav Ivanov",
            "time": "Dec 15, 2015 at 19:40",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Usually is ARM MCU (two different possible opcodes, can be Thumb). The information you want is usually not that public. Mediatek seems to be using some ARM core in their chips <a href=\"https://en.wikipedia.org/wiki/List_of_devices_using_Mediatek_SoCs\" rel=\"nofollow\">https://en.wikipedia.org/wiki/List_of_devices_using_Mediatek_SoCs</a>. You have to explore. Maybe this work helps <a href=\"https://media.blackhat.com/us-13/US-13-Zaddach-Workshop-on-Embedded-Devices-Security-and-Firmware-Reverse-Engineering-Slides.pdf\" rel=\"nofollow\">https://media.blackhat.com/us-13/US-13-Zaddach-Workshop-on-Embedded-Devices-Security-and-Firmware-Reverse-Engineering-Slides.pdf</a></p>\n</div>",
            "votes": "0",
            "user": "Waldo Alvarez",
            "time": "Dec 15, 2015 at 16:13",
            "is_accepted": false,
            "comments": []
        }
    ]
}