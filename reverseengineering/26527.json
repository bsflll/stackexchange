{
    "title": "Analyze stack with IDAPython",
    "link": "https://reverseengineering.stackexchange.com/questions/26527/analyze-stack-with-idapython",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In Ida pseudo-code when I press at stack's variable I can see the place of this variable in stack.</p>\n<pre><code>char buffer[XXX]; // [sp+YYh]\n</code></pre>\n<p>How can I get that information (buffer size and place of this buffer in stack)  in IDAPython?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "203",
    "tags": [
        "ida",
        "idapython",
        "buffer-overflow",
        "stack"
    ],
    "user": "func",
    "time": "Dec 14, 2020 at 21:02",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can do this using idapython - using <code>ida_hexrays</code> api:</p>\n<pre><code>ida_hexrays.init_hexrays_plugin()\nfor var in ida_hexrays.decompile(ea).get_lvars():\n    # offset\n    offset = -stack_size + var.get_stkoff()\n    # variable size\n    size = var.width\n    # variable type\n    type = var.tif\n</code></pre>\n<p>And in ida gui, you can see the comments beside declarations.</p>\n<p><a href=\"https://i.sstatic.net/XHxe5.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/XHxe5.png\"/></a></p>\n</div>",
            "votes": "1",
            "user": "R4444",
            "time": "Dec 14, 2020 at 14:08",
            "is_accepted": false,
            "comments": [
                {
                    "user": "func",
                    "text": "<span class=\"comment-copy\">thank you!  1)<code>stack_size</code>  is not define, and <code>var.get_stkoff()</code> gave me the offset from <code>rsp</code> why did I need <code>stack_size</code> ?   2)How can I see all the xref of this variable ?</span>",
                    "time": null
                },
                {
                    "user": "R4444",
                    "text": "<span class=\"comment-copy\">1) in my case, i wanted an offset wrt to rbp, thus I used stack size (<code>idc.get_func_attr(ea, idc.FUNCATTR_FRSIZE)</code>) to calculate the offset. 2) i'd map these offsets with the variables collected using <code>get_local_vars(ea, stack_size)</code> and get their xrefs, as I am not aware of any way of getting xrefs using decompiler interface</span>",
                    "time": null
                },
                {
                    "user": "func",
                    "text": "<span class=\"comment-copy\">thank you a lot , 1)I didn't find out how can I <code>use get_local_vars</code>  I have tried <code>get_local_vars(0xaaaa,idc.get_func_attr(0xaaaa, idc.FUNCATTR_FRSIZE))</code> but I got error  <code>expected 3 arguments, got 2)</code> and when I looking at <code>help(get_local_vars)</code> I see <code>get_local_vars(prov , ea, out) -&gt; bool</code>, can you please show me an example?    (2) is <code>get_local_vars</code> is better than <code>ida_hexrays.decompile(ea).get_lvars()</code> if I only want to get the stack struct ? what is the diffrence?</span>",
                    "time": null
                },
                {
                    "user": "R4444",
                    "text": "<span class=\"comment-copy\">hello, can u please ask a separate question with an example of what u would like to do? (as this seems independent or unrelated from your original question and their it'd be easier for someone to answer and you may get a quicker reply). 1) can u show an example code? 2) ida_hexrays uses decompiler interface and algorithm to infer types, and the former is without decompiler</span>",
                    "time": null
                }
            ]
        }
    ]
}