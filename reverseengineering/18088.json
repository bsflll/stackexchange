{
    "title": "Start analysis at any position in elf is Entry Point?",
    "link": "https://reverseengineering.stackexchange.com/questions/18088/start-analysis-at-any-position-in-elf-is-entry-point",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>An entry point is considered to be the first point to be made in a program. So if I start at any position in the program to start analyzing it can be considered an entry point is not ??</p>\n<p>please help me! Thank all.</p>\n</div>",
    "votes": "4",
    "answers": 3,
    "views": "10k",
    "tags": [
        "elf",
        "entry-point"
    ],
    "user": "MrBob",
    "time": "Apr 25, 2018 at 4:22",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">Entry point is where the execution starts</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The entry point isn't the address where <strong>you</strong> starts analyzing, but the address from where <strong>the process</strong> starts executing.</p>\n<p>Let's have a quick look at the ELF32 Header:</p>\n<pre><code>#define EI_NIDENT 16\n\ntypedef struct {\n        unsigned char   e_ident[EI_NIDENT];\n        Elf32_Half      e_type;\n        Elf32_Half      e_machine;\n        Elf32_Word      e_version;\n        Elf32_Addr      e_entry;\n        Elf32_Off       e_phoff;\n        Elf32_Off       e_shoff;\n        Elf32_Word      e_flags;\n        Elf32_Half      e_ehsize;\n        Elf32_Half      e_phentsize;\n        Elf32_Half      e_phnum;\n        Elf32_Half      e_shentsize;\n        Elf32_Half      e_shnum;\n        Elf32_Half      e_shstrndx;\n} Elf32_Ehdr;\n</code></pre>\n<p>The <code>e_entry</code> member is actually pointing to the entry point:</p>\n<blockquote>\n<p><strong>e_entry</strong><br/>\n  This member gives the virtual address to which the system first transfers control, thus starting the process. If the file has no associated entry point, this member holds zero.  </p>\n<p><em>Source: <a href=\"http://www.sco.com/developers/gabi/latest/ch4.eheader.html\" rel=\"noreferrer\">http://www.sco.com/developers/gabi/latest/ch4.eheader.html</a></em></p>\n</blockquote>\n<p>And a more detailed description from <a href=\"https://en.wikipedia.org/wiki/Entry_point\" rel=\"noreferrer\">Wikipedia</a>:</p>\n<blockquote>\n<p>In computer programming, an entry point is <strong>where control is\n  transferred from the operating system to a computer program</strong>, at which\n  place the processor enters a program or a code fragment and execution\n  begins. In some operating systems or programming languages, the\n  initial entry is not part of the program but of the runtime library,\n  in which case the runtime library initializes the program and then the\n  runtime library enters the program. In other cases, the program may\n  call the runtime library before doing anything when it is entered for\n  the first time, and, after the runtime library returns, the actual\n  code of the program begins to execute. This marks the transition from\n  load time (and dynamic link time, if present) to run time.</p>\n</blockquote>\n<p><em>[emphasis mine]</em></p>\n</div>",
            "votes": "5",
            "user": "Megabeets",
            "time": "Apr 25, 2018 at 7:55",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">\"The entry point isn't the address where you starts analyzing..\" Although this is true EOP <b>is</b> a good starting point for the analysis :)</span>",
                    "time": null
                },
                {
                    "user": "Megabeets",
                    "text": "<span class=\"comment-copy\">haha good point :)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>No!</p>\n<p>Entry point is the \"keyword\" used to point at the location at which the OS loader will start a program. For a given binary file (<strong>ELFBIN</strong>), you can run the following command to read the binary's header information (-h):</p>\n<pre><code>       readelf -h ELFBIN\n</code></pre>\n<p>You'll obtain an output similar to this:</p>\n<pre><code> ELF Header:\n Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 \n Class:                             ELF64\n Data:                              2's complement, little endian\n Version:                           1 (current)\n OS/ABI:                            UNIX - System V\n ABI Version:                       0\n Type:                              EXEC (Executable file)\n Machine:                           Advanced Micro Devices X86-64\n Version:                           0x1\n Entry point address:               0x400a80\n Start of program headers:          64 (bytes into file)\n Start of section headers:          46528 (bytes into file)\n Flags:                             0x0\n Size of this header:               64 (bytes)\n Size of program headers:           56 (bytes)\n Number of program headers:         9\n Size of section headers:           64 (bytes)\n Number of section headers:         31\n Section header string table index: 30\n</code></pre>\n<p>If you look closely, you'll find <strong>Entry point address : 0x400a80</strong>.\nAfter running objdump on the binary and looking up the given address you'll obtain something this:</p>\n<pre><code>0000000000400a80 &lt;_start&gt;:\n 400a80:       31 ed                   xor    %ebp,%ebp\n 400a82:       49 89 d1                mov    %rdx,%r9\n 400a85:       5e                      pop    %rsi\n 400a86:       48 89 e2                mov    %rsp,%rdx\n 400a89:       48 83 e4 f0             and    $0xfffffffffffffff0,%rsp\n 400a8d:       50                      push   %rax\n 400a8e:       54                      push   %rsp\n 400a8f:       49 c7 c0 c0 48 40 00    mov    $0x4048c0,%r8\n 400a96:       48 c7 c1 50 48 40 00    mov    $0x404850,%rcx\n 400a9d:       48 c7 c7 70 0b 40 00    mov    $0x400b70,%rdi\n 400aa4:       ff 15 1e 85 20 00       callq  *0x20851e(%rip)        # 6  08fc8 &lt;__libc_start_main@GLIBC_2.2.5&gt;\n 400aaa:       f4                      hlt    \n 400aab:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n</code></pre>\n<p>This is the <strong>_start</strong> function that prepares certain parameters/registers before eventually calling <strong>main</strong> (see the label on the right at address <strong>400aa4</strong> in the example) that contains \"your\" code. The <strong>_start</strong> function is usually called after all other sections of the binary have been loaded in memory. After the main is done, the <strong>hlt</strong> instruction is executed to terminate the execution in this example. </p>\n<p>This is what's called <strong>entry point</strong>. Now, regarding analysis, it has to be started somewhere in the binary, that somewhere is represented using an address (like the entry point).\nIf you want to play with the language/jargon, you can say: analysis entry point rather than binary entry point.</p>\n<p>All in all, it's just technical keywords and they have to be defined properly.</p>\n<p>Hope this answers your question :)</p>\n</div>",
            "votes": "2",
            "user": "yaspr",
            "time": "Apr 25, 2018 at 9:40",
            "is_accepted": false,
            "comments": [
                {
                    "user": "yyny",
                    "text": "<span class=\"comment-copy\">the <code>hlt</code> instruction is typically never reached since <code>__libc_start_main</code> calls <code>exit(2)</code> if <code>main</code> returns normally.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Entry point is where system loader will start execution of your executable. It's the entrypoint for the Operating system to begin execution in your program.</p>\n<p>The analogy could be \"main()\" function for C/C++ compilers.</p>\n</div>",
            "votes": "1",
            "user": "revittrk",
            "time": "Apr 25, 2018 at 6:04",
            "is_accepted": false,
            "comments": []
        }
    ]
}