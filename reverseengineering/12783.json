{
    "title": "Mutable parts of PE files in memory",
    "link": "https://reverseengineering.stackexchange.com/questions/12783/mutable-parts-of-pe-files-in-memory",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I currently try to figure out, what actually happens to a <code>PE File</code> in memory. To reword it: How could <code>PE files</code> differ, when they run on different computers and what are the mutable parts of a PE file, when they are loaded into memory? </p>\n<p>My overall goal is to understand, what a <strong>normalization process of memory dumps</strong> of specific processes could look like (as mentioned <a href=\"https://www.google.com/patents/US20090313700\" rel=\"nofollow\">here</a> for example).</p>\n<p><strong>My understanding so far:</strong></p>\n<ul>\n<li>Sections getting mapped to different locations</li>\n<li>Sections get page-aligned</li>\n<li>IAT gets updated</li>\n<li>Base relocations are performed</li>\n</ul>\n<p>Did I miss anything?</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "144",
    "tags": [
        "pe",
        "memory-dump"
    ],
    "user": "knx",
    "time": "Jun 2, 2016 at 15:28",
    "comments": [
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">i think it talks about code that has equivalent operations what you mention are standard changes i think with normalization in that article it could mean  add eax , 1 = inc eax  is normalised?? as  plus()  or a plus() label is assigned when all equivalent instructions are met in a sequence well cant stand the legalese so just glanced around</span>",
            "time": null
        },
        {
            "user": "Vitaly Osipov",
            "text": "<span class=\"comment-copy\">I believe PE file format and how it works is excessively documented  <a href=\"https://www.google.com.au/search?q=pe+file+in+memory\" rel=\"nofollow noreferrer\">google.com.au/search?q=pe+file+in+memory</a></span>",
            "time": null
        },
        {
            "user": "knx",
            "text": "<span class=\"comment-copy\">As @blabb already mentioned, i try to figure out, how the normalization process is performed. Perhaps the \"basic\" normalization of PE loader based changes lead to confusion. Sorry!</span>",
            "time": null
        },
        {
            "user": "peter ferrie",
            "text": "<span class=\"comment-copy\">the TLS section will have its index assigned</span>",
            "time": null
        }
    ],
    "answers_data": []
}