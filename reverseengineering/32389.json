{
    "title": "How to convert variable to struct member in IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/32389/how-to-convert-variable-to-struct-member-in-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm working on a windows program which is walking PEB Ldr list. the related types are as follows:</p>\n<pre><code>struct LDR_DATA_TABLE_ENTRY {\n    LIST_ENTRY InLoadOrderLinks;         // offset = 0, size = 0x10\n    LIST_ENTRY InMemoryOrderLinks;   // offset = 0x10, size = 0x10\n    // ...\n    UNICODE_STRING FullDllName;       // offset = 0x48, size = 0x10\n    UNICODE_STRING BaseDllName;     // offset = 0x58, size = 0x10\n};\n</code></pre>\n<p>the pseudocode IDA generated is like that:</p>\n<pre><code>i = (LDR_DATA_TABLE_ENTRY *)NtCurrentPeb()-&gt;Ldr-&gt;InMemoryOrderModuleList.Flink;\nCurDllName = i-&gt;FullDllName.Buffer;     // FullDllName should be BaseDllName!\nCurDllNameLength = i-&gt;FullDllName.Length;\n</code></pre>\n<p>The problem is, <code>i-&gt;FullDllName</code> should be <code>i-&gt;BaseDllName</code>, because <code>i</code> is not <code>LDR_DATA_TABLE_ENTRY *</code> but actually <code>LDR_DATA_TABLE_ENTRY * + 0x10</code> (address of <code>LDR_DATA_TABLE_ENTRY.InMemoryOrderLinks</code>).</p>\n<p>The correct output should be like that:</p>\n<pre><code>i = NtCurrentPeb()-&gt;Ldr-&gt;InMemoryOrderModuleList.Flink;\nLDR_DATA_TABLE_ENTRY *Node = CONTAINING_RECORD(i, LDR_DATA_TABLE_ENTRY, InMemoryOrderLinks);\nCurDllName = Node-&gt;BaseDllName.Buffer;\nCurDllNameLength = Node-&gt;BaseDllName.Length;\n</code></pre>\n<p>In case <code>i</code> is an offset, Is there any way I can do to change type of <code>i</code> to something correct (like struct members) or just add the variable <code>Node</code> in IDA? The <code>Node</code> pointer I wrote here seems to be optimized out.</p>\n<p>I tried <code>CONTAINING_RECORD</code> but it seems not applicable here.</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "197",
    "tags": [
        "ida",
        "windows",
        "pe"
    ],
    "user": "H3d9",
    "time": "Oct 13, 2023 at 2:39",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Right-click <code>i</code> and select either:</p>\n<ul>\n<li><code>Create new struct type</code> to create a new type deducted from <strong>function-scoped</strong> access to the variable</li>\n<li><code>Convert to struct *</code> to apply an existing type</li>\n</ul>\n<p>You can inspect and manage structure types in <code>Local Types</code> tab (<code>View/Open subviews/Local Types</code>), including the types you already have (found in system APIs and debug symbols).</p>\n</div>",
            "votes": "0",
            "user": "mimak",
            "time": "Oct 13, 2023 at 12:59",
            "is_accepted": true,
            "comments": []
        }
    ]
}