{
    "title": "Process termimates after attaching",
    "link": "https://reverseengineering.stackexchange.com/questions/8663/process-termimates-after-attaching",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am using ollydbg and whenever i attach ollydbg to running process (in this case it's game and it has xtrap) this game terminates all threads and nothing is shown in olly . And when i use OllyAdvanced and when i attach olly into this proces then olly is stopping execution at ntdll.dll.DbgUiRemoteBreakin. Is there any plugin/way to fix that ?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "426",
    "tags": [
        "memory"
    ],
    "user": "JMII89",
    "time": "Apr 8, 2015 at 17:24",
    "comments": [
        {
            "user": "Jason Geffner",
            "text": "<span class=\"comment-copy\">\"Is there any plugin/way to fix that ?\" -- To fix what? Stopping execution at <code>ntdll.dll!DbgUiRemoteBreakin</code> is likely by-design.</span>",
            "time": null
        },
        {
            "user": "JMII89",
            "text": "<span class=\"comment-copy\">I mean to stop in EP not in DbgUiRemoteBreakin.Btw this game has Themida also.</span>",
            "time": null
        },
        {
            "user": "Jason Geffner",
            "text": "<span class=\"comment-copy\">There's nothing to fix. It's by-design.</span>",
            "time": null
        },
        {
            "user": "JMII89",
            "text": "<span class=\"comment-copy\">What do you mean?....</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>See <a href=\"http://index-of.es/Windows/dbgk-2.pdf\" rel=\"nofollow\">http://index-of.es/Windows/dbgk-2.pdf</a></p>\n<p>TL;DR -- When a debugger (OllyDbg in this scenario) calls <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms679295%28v=vs.85%29.aspx\" rel=\"nofollow\"><code>DebugActiveProcess()</code></a>, this results in a call to <code>DbgUiDebugActiveProcess()</code>, which calls <code>DbgUiIssueRemoteBreakin()</code>, which creates a new thread in the debuggee with entrypoint <code>DbgUiRemoteBreakin()</code>.</p>\n<p>So there's nothing that needs fixing. What you're seeing is the result of how Windows works.</p>\n</div>",
            "votes": "1",
            "user": "Jason Geffner",
            "time": "Apr 8, 2015 at 18:52",
            "is_accepted": false,
            "comments": []
        }
    ]
}