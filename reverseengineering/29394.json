{
    "title": "How to step into an invoked method from a DotNet DLL in dnSpy?",
    "link": "https://reverseengineering.stackexchange.com/questions/29394/how-to-step-into-an-invoked-method-from-a-dotnet-dll-in-dnspy",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've been analyzing a malware written in C# using dnSpy. It loaded a dotnet assembly DLL from its Resources:\n<a href=\"https://i.sstatic.net/z5Tuw.png\" rel=\"nofollow noreferrer\"><img alt=\"the malware calling a method from loaded DLL\" src=\"https://i.sstatic.net/z5Tuw.png\"/></a></p>\n<p>I tried stepping into <code>InvokeMember</code> function, but could not go further when hitting this call:\n<a href=\"https://i.sstatic.net/iv9ey.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/iv9ey.png\"/></a></p>\n<p>I've dumped the DLL to file to analyze it statically, but the code is protected by SmartAssembly, so I cannot fully understand its behavior.</p>\n<p>My question is: how can I step into the code of the method called by \"InvokeMethod\"? If I cannot do it directly, is there any workaround?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "assembly",
        "dll",
        ".net",
        "dnspy"
    ],
    "user": "gergeerew",
    "time": "Oct 12, 2021 at 2:18",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've figured out the solution. It's simple. We only need to set a breakpoint inside the DLL.</p>\n</div>",
            "votes": "0",
            "user": "gergeerew",
            "time": "Oct 13, 2021 at 7:41",
            "is_accepted": true,
            "comments": []
        }
    ]
}