{
    "title": "Analyze all functions with radare2",
    "link": "https://reverseengineering.stackexchange.com/questions/20132/analyze-all-functions-with-radare2",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a big library in which IDA found ~84300 functions but using <code>aa</code> in radare2 I was just able to found ~3000.</p>\n<p>I tried setting <code>anal.hasnext</code> to <code>true</code>, <code>anal.from</code> and <code>anal.to</code> to the start and the end of the .text section but with not luck</p>\n<p>So is there an optimal way to analyze all the functions using radare?</p>\n<p>By optimal I mean avoiding xrefs or other analyzis</p>\n<p>Thanks</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "binary-analysis",
        "radare2"
    ],
    "user": "Fabian Mendez",
    "time": "Dec 14, 2018 at 1:38",
    "comments": [
        {
            "user": "defragger",
            "text": "<span class=\"comment-copy\">You can try to use <code>aab</code> as it's quite fast and does not handle xrefs.</span>",
            "time": null
        },
        {
            "user": "Fabian Mendez",
            "text": "<span class=\"comment-copy\">It worked, can you create an answer so I can mark it as answered</span>",
            "time": null
        },
        {
            "user": "Fabian Mendez",
            "text": "<span class=\"comment-copy\">I'm sorry some functions that were correctly analyzed before now are just a bunch of <code>add byte [eax], al</code></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>To see the help of analysis you can use <code>aa?</code>. For a more detailed information i would always suggest visiting the sourcecode as a lot of <code>aa</code> commands are combinations of different steps. A good starting point is at <code>libr/core/cmd_anal.c</code></p>\n<p><code>aab</code> instead is a total different approach and can create a lot of false positives.</p>\n<p>You could also give <code>aaa</code> a try but i assume that will take some time to finish.</p>\n</div>",
            "votes": "1",
            "user": "defragger",
            "time": "Dec 15, 2018 at 6:34",
            "is_accepted": true,
            "comments": []
        }
    ]
}