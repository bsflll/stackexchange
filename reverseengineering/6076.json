{
    "title": "Is there any documentation or examples of PHP bytecode?",
    "link": "https://reverseengineering.stackexchange.com/questions/6076/is-there-any-documentation-or-examples-of-php-bytecode",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to reverse engineer a PHP obfuscator. I know that it pre-compiles the PHP to bytecode, so the recovery of original PHP source is out of scope, but I would still like to get the bytecode out. The problem is that I don't know what it looks like. I can see stuff being decoded in memory (e.g. I encode <code>echo \"abcdefg\";</code> and I can see the string in memory, but I'm not sure where does the bytecode start or what is the structure of it). Is there any documentation or examples of PHP byteccode online?</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "1k",
    "tags": [
        "byte-code",
        "php"
    ],
    "user": "valentinas",
    "time": "Aug 14, 2014 at 22:08",
    "comments": [
        {
            "user": "0xec",
            "text": "<span class=\"comment-copy\">See <i><a href=\"http://php.net/manual/en/internals2.opcodes.php\" rel=\"nofollow noreferrer\">this</a></i></span>",
            "time": null
        },
        {
            "user": "valentinas",
            "text": "<span class=\"comment-copy\">@ExtremeCoders, this is opcodes, I'm looking for bytecode, i.e. actual representation of opcodes in memory.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I found out that there is no specification of what the PHP bytecode should look like, so vendors implement it differently. So technically there is no such thing as \"php bytecode\", it only exists when talking about a particular engine, e.g. \"zend bytecode\".</p>\n</div>",
            "votes": "3",
            "user": "valentinas",
            "time": "Aug 17, 2014 at 7:01",
            "is_accepted": false,
            "comments": []
        }
    ]
}