{
    "title": "Ghidra export to C header, how to remove \".conflict\"?",
    "link": "https://reverseengineering.stackexchange.com/questions/25107/ghidra-export-to-c-header-how-to-remove-conflict",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>When using the export to C header functionality of Ghidra it keeps outputting double and triple symbols with \".conflict\" appended. When I change how the data type manager should deal with conflicts it still keeps outputting them. Does anyone know how to resolve this?</p>\n<p>It prevents Ghidra from parsing that same output back into another version of the application.</p>\n<p><strong>edit: adding clarification as requested</strong>\nI'm playing around with ioncube and what I'm trying to do is:</p>\n<ul>\n<li>Compile PHP with debug enabled</li>\n<li>Extract type information</li>\n<li>Use type information on the ioncube executable</li>\n</ul>\n<p>What I mean with 'use type information' is that I want to have structures available so that I can apply them manually. However when right clicking on the type manager and exporting the 'php with debug enables' to a C header, GHIDRA is not able to import the header file. </p>\n<p>All the issues during import seem to be in regards to anonymous structures that besides the name also receive a '.conflict' append. I've temporarily resolved this by cleaning them up manually and just create the bare minimum to import. However it would be nice to do this as intended by GHIDRA.</p>\n<p>Hope this clarifies a bit more.</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "871",
    "tags": [
        "ghidra"
    ],
    "user": "DiabloHorn",
    "time": "May 31, 2020 at 20:23",
    "comments": [
        {
            "user": "R4444",
            "text": "<span class=\"comment-copy\">can you elaborate on what you did and post your binary if possible</span>",
            "time": null
        },
        {
            "user": "DiabloHorn",
            "text": "<span class=\"comment-copy\">Hope the clarification makes the situation a bit more clear.</span>",
            "time": null
        }
    ],
    "answers_data": []
}