{
    "title": "idapython find functions that contain a loop",
    "link": "https://reverseengineering.stackexchange.com/questions/6175/idapython-find-functions-that-contain-a-loop",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>How can I color functions that contain loops in IDApython ?</p>\n<p>If the end of the basic block can jump to start of basic block it's good enough, even in the rare case this is not a loop. But how do i implement this ?</p>\n<p><strong>EDIT</strong>: This is not good cause the loop can span multiple basic blocks. \nOr, maybe if the <code>ecx</code> register is used ? I don't care if I have some false positives ?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "binary-analysis",
        "idapython"
    ],
    "user": "Vision",
    "time": "Sep 5, 2014 at 6:30",
    "comments": [
        {
            "user": "Willem Hengeveld",
            "text": "<span class=\"comment-copy\">Maybe searching for code xref where  frm &gt; to  will find you already a narrow enough set of possible targets</span>",
            "time": null
        },
        {
            "user": "Ta Thanh Dinh",
            "text": "<span class=\"comment-copy\">You may find <a href=\"http://reverseengineering.stackexchange.com/questions/3498/detecting-recursive-functions-in-ida/\">this quesion</a> useful. It is about finding recursive calls using IDA. Both answers are awesome.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There is an IDA plugin called Loop Detection that does that, it comes with source code and a paper explaining how it works. Have a look at <code>loop_detection.cpp</code> and refer to the paper for an explanation of how it works.</p>\n<p>Plugin with source code : <a href=\"http://www.openrce.org/downloads/details/9/Loop_Detection\">http://www.openrce.org/downloads/details/9/Loop_Detection</a>\nPaper: <a href=\"http://www.uninformed.org/?v=1&amp;a=2&amp;t=pdf\">http://www.uninformed.org/?v=1&amp;a=2&amp;t=pdf</a></p>\n<p>Looking for uses of <code>ecx</code> is not a good approach as this register is often used for other purposes. A better approach is to look for back edges between blocks.</p>\n</div>",
            "votes": "7",
            "user": "ekse",
            "time": "Sep 5, 2014 at 19:57",
            "is_accepted": false,
            "comments": []
        }
    ]
}