{
    "title": "Where can I find these compilers given in the Rich Header of a system BIOS file?",
    "link": "https://reverseengineering.stackexchange.com/questions/30558/where-can-i-find-these-compilers-given-in-the-rich-header-of-a-system-bios-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am working on a project which deals with the BIOS file of a well known manufacturer.</p>\n<p>I recovered the file from the disk partition which stores and uses the file in case BIOS is corrupted or its integrity check fails, therefore the file is named as <code>BIOS_PRE.rcv</code> by the system.</p>\n<p>Though the file has extension <code>.rcv</code> but it is actually a 32-bits portable executable, while exploring file headers in DIE(Detect it Easy), I found the <a href=\"https://github.com/dishather/richprint#what-is-that-rich-header-of-pe-executables\" rel=\"nofollow noreferrer\">Rich Signature</a> contains a list of compilers.</p>\n<p>Except <code>MASM</code> which is in the list, I hardly have any hint about <code>Compiler: Universal Tuple Compiler(19.00.26213)[C++]</code> and many more in the list. Or if I am getting it wrong - Microsoft has started renaming its compiler toolkit?</p>\n<ul>\n<li>Any official site or details about these compiler are greatly acknowledged.</li>\n<li>I have attached  <code>BIOS_PRE.rcv</code> file: <a href=\"https://github.com/volkovtree/sysbios/releases/download/sysfile1/BIOS_PRE.7z\" rel=\"nofollow noreferrer\">GitHub link</a></li>\n</ul>\n<p><em>Screenshots:</em></p>\n<p><a href=\"https://i.sstatic.net/lg2RD.jpg\" rel=\"nofollow noreferrer\"><img alt=\"Rich Signature List\" src=\"https://i.sstatic.net/lg2RD.jpg\"/></a></p>\n<p><a href=\"https://i.sstatic.net/njMTm.jpg\" rel=\"nofollow noreferrer\"><img alt=\"File Signature in DIE\" src=\"https://i.sstatic.net/njMTm.jpg\"/></a></p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "89",
    "tags": [
        "pe",
        "binary",
        "compilers"
    ],
    "user": "Viktor",
    "time": "Jun 26, 2022 at 9:40",
    "comments": [
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\"><code>We call the BackEnd “UTC”, which stands for “Universal Tuple Compiler”, although this name doesn’t show up in any of the binaries included into Visual Studio.</code> <a href=\"https://devblogs.microsoft.com/cppblog/optimizing-c-code-overview/\" rel=\"nofollow noreferrer\">devblogs.microsoft.com/cppblog/optimizing-c-code-overview</a></span>",
            "time": null
        }
    ],
    "answers_data": []
}