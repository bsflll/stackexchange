{
    "title": "Search through compressed/binary plist files in an IPA",
    "link": "https://reverseengineering.stackexchange.com/questions/8167/search-through-compressed-binary-plist-files-in-an-ipa",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm working on an iOS target. I'm effectively interested in running the program and its metadata through strings. I've noticed a simple <code>grep</code> does not return expected results and I suspect its because of compressed/binary plist files.</p>\n<p>How can I search trough the IPA and dump the key value pairs from a compressed/binary plist?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "524",
    "tags": [
        "ios",
        "strings"
    ],
    "user": "jww",
    "time": "Feb 5, 2015 at 23:48",
    "comments": [
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">You must find out what compression is used. If it is zip, for example, you can use <a href=\"http://linux.about.com/library/cmd/blcmdl1_zgrep.htm\" rel=\"nofollow noreferrer\"><code>zgrep</code></a>.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Typically this will use known compression algorithms. Just use <a href=\"http://binwalk.org/\" rel=\"nofollow\">binwalk</a> to find the offset and the compression algorithm. Then decompress and dump the strings. Keep in mind that you may want to specify the encoding sometimes, eg:</p>\n<pre><code>$ string -e l input_file\n</code></pre>\n</div>",
            "votes": "1",
            "user": "tibar",
            "time": "Jul 16, 2015 at 13:44",
            "is_accepted": false,
            "comments": []
        }
    ]
}