{
    "title": "Where can I find the encryption algorithm for this POST request in an Android APP?",
    "link": "https://reverseengineering.stackexchange.com/questions/30560/where-can-i-find-the-encryption-algorithm-for-this-post-request-in-an-android-ap",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have an Android app for which I need to mock an API call outside of that environment. I successfully killed the certificate pinning on this app with Frida in order to access the URL and more, but now I face another obstacle.</p>\n<p>The information on the POST request is encrypted or hashed with something in the client, I just don’t know what is it.</p>\n<p>This is the view (it's in Spanish so I leaved the text as it is in order to search through its labels):</p>\n<p><a href=\"https://i.sstatic.net/wK8Cy.jpg\" rel=\"nofollow noreferrer\"><img alt=\"\" src=\"https://i.sstatic.net/wK8Cy.jpg\"/></a></p>\n<p>This is how the POST request looks when its sent from the app when I enter an amount to send (think of it as app currency) to another peer registered in this same app. So I suppose it's encrypting the contact data and the amount:</p>\n<pre><code>{\n  “content”: “a1b80843068b4ba6e99eb13e165e907695884416c2365a713d3805c1a1b62f45ad13b623b04a93aac19daf5d9280f6b0d0ab96fcce312fefc7f1e53ec3705917b2f5dbb867030006de295053bfc1c8efad9d255aa05a21be4f3da1b4eb3d0448d215e4f47cad89a1d91a3e255fcb5d9f6d3418d33c91e7d3e91404b9a4d8596fe80bffb31509a22958070893eef18a088764155d3a”,\n    \n      “tag”: “1beede6ca014d893e234a1ff6d1dc317”,\n    \n      “iv”: “e5391ed0df5cd71b3472d93b”\n}\n</code></pre>\n<p>I managed to found the smali code where this is done by searching the JSON labels, I used jadx-gui for this, here is the apk used (is an app bundle so I only included the base.apk), it can be opened with jadx-gui:</p>\n<p><a href=\"https://www.mediafire.com/file/myzjnoim974x107/base.apk/file\" rel=\"nofollow noreferrer\">https://www.mediafire.com/file/myzjnoim974x107/base.apk/file</a></p>\n<p>Here it is the decompiler jadx version of it:</p>\n<p><a href=\"https://www.mediafire.com/file/3gupjge3l2h0hpb/decompiled-with-jadx.zip/file\" rel=\"nofollow noreferrer\">https://www.mediafire.com/file/3gupjge3l2h0hpb/decompiled-with-jadx.zip/file</a></p>\n<p>And this is the Google Play Store link:</p>\n<p><a href=\"https://play.google.com/store/apps/datasafety?id=cl.bci.sismo.mach&amp;hl=en&amp;gl=UK\" rel=\"nofollow noreferrer\">https://play.google.com/store/apps/datasafety?id=cl.bci.sismo.mach&amp;hl=en&amp;gl=UK</a></p>\n<p>As I’m reading through this code (at sources\\p427p7\\MessageEncryptedModel.java) I can see that is converting the strings into this encrypted format, but I don’t understand how when looking at the package imported, which is being used for this:</p>\n<pre><code>package p427p7;\n\nimport com.google.gson.annotations.Expose;\nimport com.google.gson.annotations.SerializedName;\nimport ia0.C8465k;\n\n/* renamed from: p7.a */\n/* loaded from: classes.dex */\npublic final class MessageEncryptedModel {\n    @SerializedName(\"content\")\n    @Expose\n\n    /* renamed from: a */\n    private String f36230a;\n    @SerializedName(\"tag\")\n    @Expose\n\n    /* renamed from: b */\n    private String f36231b;\n    @SerializedName(\"iv\")\n    @Expose\n\n    /* renamed from: c */\n    private String f36232c;\n\n    public MessageEncryptedModel(String str, String str2, String str3) {\n        C8465k.m23334f(str, \"content\");\n        C8465k.m23334f(str2, \"tag\");\n        C8465k.m23334f(str3, \"iv\");\n        this.f36230a = str;\n        this.f36231b = str2;\n        this.f36232c = str3;\n    }\n\n    /* renamed from: a */\n    public final String m11426a() {\n        return this.f36230a;\n    }\n\n    /* renamed from: b */\n    public final String m11425b() {\n        return this.f36232c;\n    }\n\n    /* renamed from: c */\n    public final String m11424c() {\n        return this.f36231b;\n    }\n}\n</code></pre>\n<p>Does anyone have an idea of how this JSON data is being encrypted before being sent? I have tried to understand through the package code by replicating it but I can't find a hardcoded key</p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "398",
    "tags": [
        "decompilation",
        "android",
        "encryption",
        "java"
    ],
    "user": "Miguel",
    "time": "Jun 27, 2022 at 19:01",
    "comments": [
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">You already got a lot of information by static analysis. May be it is time to switch over to a dynamic analysis (if possible)? Using <a href=\"https://frida.re\" rel=\"nofollow noreferrer\">frida.re</a> you could try to hook <code>Cipher.init(opmode, key)</code> and other cryptographic calls to get the used secret key, assuming the app uses the standard Java crypto implementations.</span>",
            "time": null
        },
        {
            "user": "Miguel",
            "text": "<span class=\"comment-copy\">Yes, I forgot to mention that I already tried that with the standard crypto implementations, and it only uses them for accessing the app.  For the send which is what I'm looking for I can't find what is it.</span>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">I don't know of a solution which automatically encrypts something by just serializing it. As the annotations belong to GSON I would assume a custom serializer is used. For Gson this should be a class that extends <code>com.google.gson.JsonSerializer</code>, if the class names aren't obfuscated it should be easy to find.</span>",
            "time": null
        },
        {
            "user": "Mega Tonnage",
            "text": "<span class=\"comment-copy\">Have you looked at the code for <code>ia0.C8465k.m23334f()</code> ? .. it looks like this is doing the string conversion.</span>",
            "time": null
        }
    ],
    "answers_data": []
}