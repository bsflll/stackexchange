{
    "title": "Looking for obfuscation patterns within jumps",
    "link": "https://reverseengineering.stackexchange.com/questions/25528/looking-for-obfuscation-patterns-within-jumps",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm working on an obfuscated binary. I recognized some patterns used to confuse the disassembler, some used to obfuscate function calls, some other for conditional jumps and so on.</p>\n<p>The idea was to search these patterns along the binary. The problem is that such patterns are often interleaved with unconditional jumps.</p>\n<p>For example this code is used to replace a simple conditional jump:</p>\n<pre><code>push    offset loc_123456\npush    ebx\npush    eax\nmov     ebx, [esp+8]\nmov     eax, offset loc_654321\ncmovz   ebx, eax\nmov     [esp+8], ebx\npop     eax\npop     ebx\nretn\n</code></pre>\n<p>The problem is that this pattern is often split in two or more parts (because the whole code is split in several blocks that are spread everywhere in the binary and then connected with unconditional jumps), and of course I cannot find it with a simple byte pattern search.</p>\n<p>Is there any way to look for all the pieces of code that satisfy a pattern even if they are broken in 2 (or more) pieces and connected with an unconditional jump?</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "252",
    "tags": [
        "deobfuscation"
    ],
    "user": "stokdam",
    "time": "Jul 21, 2020 at 9:35",
    "comments": [
        {
            "user": "Ricardo",
            "text": "<span class=\"comment-copy\">What tool are you using?</span>",
            "time": null
        },
        {
            "user": "stokdam",
            "text": "<span class=\"comment-copy\">@Ricardo Ida, but any suggestion on other tools is accepted</span>",
            "time": null
        }
    ],
    "answers_data": []
}