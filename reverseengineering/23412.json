{
    "title": "Gui disabled program functionality",
    "link": "https://reverseengineering.stackexchange.com/questions/23412/gui-disabled-program-functionality",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Right now I'm performing analysis of a GUI based application and I'm trying to determine all of it's available functionality.</p>\n<p>Right now there's one button remaining labeled \"Encrypt\", which is greyed out. Based on the context, it would seem as though this button is responsible not for encrypting communication, but rather for packing the output of the program, using another program. I would like to confirm this directly though. </p>\n<p>My issue is that I don't know how to locate the code that this button would trigger on the backend, or how to find what makes it available or unavailable in the GUI. Where can I find the logic responsible for determining what is available in the GUI, and where can I find what buttons are connected to which functionality using static analysis?</p>\n<p>Edit: I've since run through the loading of the GUI using process monitor and I wasn't able to find any meaningful file query missing, which might shoot down the idea that the \"encrypt\" button is responsible for packing the payloads.</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "251",
    "tags": [
        "ida",
        "binary-analysis",
        "tools"
    ],
    "user": "solumnant",
    "time": "Mar 10, 2020 at 21:19",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">If you don't want to write your own program just to issue <code>EnableWindow</code> you can use an obscure old tool called <a href=\"https://duckduckgo.com/html?q=eda_preview270\" rel=\"nofollow noreferrer\">eda_preview270</a>. Provided these are <i>actual</i> windows (a Chrome app usually has one window and does the drawing by itself) you should be able to point to the button and enable it by toggling the respective checkbox.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The button is greyed out, or \"disabled\". This is most likely done by one of two ways:</p>\n<ol>\n<li>Creating the button as initially disabled, by passing the <code>WS_DISABLED</code> flag as <code>dwStyle</code> parameter to <code>CreateWindow</code>/<code>CreateWindowEx</code> API.</li>\n</ol>\n<p>You can set a breakpoint on this function and reset the dwStyle param. Zero will do.</p>\n<ol start=\"2\">\n<li>Disabling the button by calling the <code>EnableWindow</code> API with <code>bEnable = FALSE</code>.</li>\n</ol>\n<p>You can set a breakpoint on this function and set <code>bEnable</code> to TRUE (non-zero)</p>\n<p>This will make the button enabled so you can click on it. It does not guarantee that it will be functional.</p>\n</div>",
            "votes": "1",
            "user": "Yotamz",
            "time": "Mar 21, 2020 at 22:18",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>A few things you could do is go through the strings and see what kind of program it could possibly be loading inside of the software you are reversing. This <em>could</em> give some leads as to if your hypothesis is true.</p>\n<p>Another thing you can do is see if it's a module being loaded. Breakpoint on entry when you run the software in a live debugger and see what DLL's and other modules are being loaded into the program. This could also deliver some leads.</p>\n<p>You mentioned that it's greyed out so I'm not certain if you are able to press the button or not, but if you can, try pressing it and then stepping through the program. Perhaps the code was setup in a way that it won't load the module unless the button gets pressed. Then see what changes occur inside of the program with the button being pressed, and without the button being pressed. This could also give some possible leads on if your idea is true or not.</p>\n<p>Good luck.</p>\n</div>",
            "votes": "0",
            "user": "Graham",
            "time": "Mar 10, 2020 at 23:03",
            "is_accepted": false,
            "comments": []
        }
    ]
}