{
    "title": "Detour null function",
    "link": "https://reverseengineering.stackexchange.com/questions/12002/detour-null-function",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've been trying to detour a nullsub, this function is used with log purposes, but as the program is compiled under release flags it got removed and I'd like to restore it.</p>\n<p>IDA reports as follow:</p>\n<pre><code>.text:004BAC10 ; void __thiscall nullsub_2(void *)\n.text:004BAC10 nullsub_2       proc near       \n.text:004BAC10                 retn\n.text:004BAC10 nullsub_2       endp\n</code></pre>\n<p>My attempt is to detour this address with my own log function, but Microsoft Detours 3.0 throws <strong>ERROR_INVALID_BLOCK</strong> </p>\n<p>I think I get this error as it does not have space to place the jump function, and I don't have any idea how I can fix it.</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "351",
    "tags": [
        "ida",
        "c++",
        "function-hooking"
    ],
    "user": "ernilos",
    "time": "Feb 11, 2016 at 16:14",
    "comments": [
        {
            "user": "Jason Geffner",
            "text": "<span class=\"comment-copy\">Can you share more lines of disassembly after this function?</span>",
            "time": null
        },
        {
            "user": "ernilos",
            "text": "<span class=\"comment-copy\">Sure, @JasonGeffner ! Here it is: <a href=\"http://pastebin.com/qDMP0yz0\" rel=\"nofollow noreferrer\">pastebin.com/qDMP0yz0</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Based on <a href=\"http://pastebin.com/qDMP0yz0\" rel=\"nofollow\">http://pastebin.com/qDMP0yz0</a>, you have enough space to make this work.</p>\n<p>The easiest solution is to patch your target executable such that the data from Virtual Address <code>0x004BAC10</code> through <code>0x004BAC1E</code> is all <code>nop</code>s (<code>0x90</code> bytes), and patch in a <code>retn</code> (<code>0xC3</code> byte) at Virtual Address <code>0x004BAC1F</code>.</p>\n<p>You'll then be able to detour the function with Microsoft Detours.</p>\n<p>If patching the EXE isn't an option, let us know and I can look at Detours to suggest what needs to be changed in the Detours library itself.</p>\n</div>",
            "votes": "0",
            "user": "Jason Geffner",
            "time": "Feb 11, 2016 at 18:01",
            "is_accepted": true,
            "comments": [
                {
                    "user": "ernilos",
                    "text": "<span class=\"comment-copy\">The solution worked like a charm! Thank's ðŸ˜Š</span>",
                    "time": null
                }
            ]
        }
    ]
}