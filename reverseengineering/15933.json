{
    "title": "How to bypass or block GetSystemTime?",
    "link": "https://reverseengineering.stackexchange.com/questions/15933/how-to-bypass-or-block-getsystemtime",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a DLL that call <code>GetSystemTimeAsFileTime</code> and set it for check time to prevent program runing\nNow I want to replace it with fixed date and time for example 07/25/2017 instead of real and dynamic time </p>\n<p>Is this possible ?</p>\n<p>Screenshot</p>\n<p><a href=\"https://i.sstatic.net/brB4P.png\" rel=\"nofollow noreferrer\"><img alt=\"which one should be change and to what?\" src=\"https://i.sstatic.net/brB4P.png\"/></a></p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "1k",
    "tags": [
        "ida",
        "ollydbg"
    ],
    "user": "sIiiS",
    "time": "Jul 28, 2017 at 18:23",
    "comments": [
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\"><a href=\"http://uninformed.org/index.cgi?v=7&amp;a=2&amp;p=5\" rel=\"nofollow noreferrer\">uninformed.org/index.cgi?v=7&amp;a=2&amp;p=5</a></span>",
            "time": null
        },
        {
            "user": "sIiiS",
            "text": "<span class=\"comment-copy\">How this link can help me?</span>",
            "time": null
        },
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">you are looking at gs cookie generation .  it is a standard api every application that was compiled in windows post  vc2010 will have this  .   the cookie generation procedure is described i the link  .  you should be looking elsewhere not here for why your program is being blocked  .</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm going to reply to this without making any assumptions. I have had to do this very thing before for a client regarding non-copyrighted abandonware. Your results may vary.</p>\n<p>As for your specific question, yes, it's possible, but probably not the most optimal (or easiest) solution for what you want to achieve. Regardless, consider the following, bearing in mind that these are just potential solutions:</p>\n<p><strong>1.</strong> Read into <a href=\"https://www.codeproject.com/Articles/20240/The-Beginners-Guide-to-Codecaves\" rel=\"nofollow noreferrer\">codecaves</a>. This very common technique avails you the memory and functionality to craft, inject, redirect, and execute custom code you write.</p>\n<p><strong>2.</strong> Trace the execution of that routine. Note any values of interest to you that are residing in registers and/or on the stack, especially return values from <code>call</code> instructions. Depending on what you find, you can create an injection that only modifies existing bytes.</p>\n<p>For instance, perhaps the bytes from <code>1009A467</code>-<code>1009A474</code> are enough to create a custom <code>mov</code> instruction that puts a value you want into <code>eax</code> prior to the <code>mov</code> instruction at <code>1009A477</code>.</p>\n<p>Or, if you've studied that bit of code enough, perhaps there's something in another register that you can specify at <code>1009A477</code>, i.e. <code>mov [ebp+var_4], ebx</code> or <code>mov [ebp+var_4], edx</code>, etc.</p>\n<p><strong>3.</strong> What happens if you <code>nop</code> the two <code>jz</code> instructions? See how they both jump to that segment of code at <code>loc_1009A467</code>? Note that there may be unintended results like instantly triggering the end of a trial period or corrupting data. This is when it can help to monitor the footprint of an application when installing it so you can identify how it maintains persistence with functionality like activation. Maybe it's a temp file, a registry key, or something else.</p>\n<p>Finally, the two <code>and</code> instructions you're pointing to at <code>1009A442</code> and <code>1009A446</code> are zeroing the memory addresses being referenced at <code>[ebp+offsets]</code>, respectively. This is just setting them up for use somewhere afterward. Anything you <code>and</code> with 0 will equal 0. It's a common method in Assembly for clearing a register, as is when you <code>xor</code> a register with itself, i.e. <code>xor eax, eax</code>. You can read more about the binary operation <code>and</code> <a href=\"http://www.xcprod.com/titan/XCSB-DOC/binary_and.html\" rel=\"nofollow noreferrer\">here</a>.</p>\n</div>",
            "votes": "3",
            "user": "dsasmblr",
            "time": "Jul 28, 2017 at 14:34",
            "is_accepted": false,
            "comments": [
                {
                    "user": "sIiiS",
                    "text": "<span class=\"comment-copy\">new image with full view added. hope it help more to understand..</span>",
                    "time": null
                },
                {
                    "user": "sIiiS",
                    "text": "<span class=\"comment-copy\">Unfortunately, none of you method works!</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Here is an example for you.</p>\n<p>A friend and I made this a long time ago, to bypass trial on a certain program (not naming it). It modifies the value that <code>GetSystemTimeAsFileTime</code> returned.</p>\n<p><a href=\"http://fyyre.ru/dllmain.cpp\" rel=\"nofollow noreferrer\">GetSystemTimeAsFileTime Hotpatch</a></p>\n</div>",
            "votes": "-1",
            "user": "Mithical",
            "time": "Jul 30, 2017 at 13:43",
            "is_accepted": false,
            "comments": [
                {
                    "user": "sIiiS",
                    "text": "<span class=\"comment-copy\">Thank you for your reply and code but really I don't know how can I use this code in the DLL?! Can you please explain more?</span>",
                    "time": null
                },
                {
                    "user": "fyyre",
                    "text": "<span class=\"comment-copy\">You want to modify GetSystemTimeAsFileTime, so the date does not change, yes?  One way to do this; hooking GetSystemTimeAsFileTime itself, so you control the values it returns.  My DLL example, does just this, simply compile it with Visual C++ and attach it to the Import table of application, with a tool such as CFF_Explorer.</span>",
                    "time": null
                },
                {
                    "user": "fyyre",
                    "text": "<span class=\"comment-copy\">See the void WINAPI GetSystemTimeAsFileTimeFake(PFILETIME fileTime) function of my DLL for how to set a fixed date.</span>",
                    "time": null
                },
                {
                    "user": "sIiiS",
                    "text": "<span class=\"comment-copy\">I want to set date&amp;time for example 04/25/2017 instead of the date of today... I have not an application, this is a DLL file that control php file for time expiration</span>",
                    "time": null
                },
                {
                    "user": "fyyre",
                    "text": "<span class=\"comment-copy\">Again, look at the example in my code \"GetSystemTimeAsFileTimeFake\".  Setting wDay = 27;  wMonth = 4;  wYear = 2017; should accomplish what you needed.</span>",
                    "time": null
                }
            ]
        }
    ]
}