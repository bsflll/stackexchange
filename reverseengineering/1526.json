{
    "title": "Open source GUI tool for decomposing a PDF",
    "link": "https://reverseengineering.stackexchange.com/questions/1526/open-source-gui-tool-for-decomposing-a-pdf",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've been looking for an open-source GUI tool to extract PDF's in an automated way on Windows systems. I've used Didier Steven's tools with great interest for a while, but cannot make sense of how to use his <a href=\"http://blog.didierstevens.com/programs/pdf-tools/\">PDF decomposing</a>/<a href=\"http://blog.didierstevens.com/2008/10/20/analyzing-a-malicious-pdf-file/\">analyzing tools</a>, even after watching some of his videos. They seem to require significant understanding of the underlying PDF construction, and possibly much more.</p>\n<p>For SWF files, the tool <a href=\"http://h30499.www3.hp.com/t5/Following-the-Wh1t3-Rabbit/SWFScan-FREE-Flash-decompiler/ba-p/5440167\">SWFScan</a> is the kind I'm looking for: you load the file in question into the tool. From there, you can explore the links, scripts, and images. It even auto-analyses code and shows which parts may have security issues and what the issue is for each one, then gives a webpage reference with more information.</p>\n<p>Does anyone know of a good open-source GUI for Windows that can load a PDF and not execute it but extract all the scripts, compiled code, text, links, images, etc.? Ideally, it would show the relation of each, like when you click on a certain image, it would tell you what script(s) are run, which URL it goes to, and let you see the image on its own.</p>\n<p>PDF's are so common, next to SWF, that this kind of tool seems like it would already be common. I may have overlooked it/them.</p>\n</div>",
    "votes": "34",
    "answers": 5,
    "views": "31k",
    "tags": [
        "decompilation",
        "tools",
        "windows"
    ],
    "user": "Lizz",
    "time": "Apr 3, 2013 at 3:18",
    "comments": [
        {
            "user": "amccormack",
            "text": "<span class=\"comment-copy\">Didier Stevens tools are widely used, but you're right, you do need an understanding of the PDF file format if you want to understand it.  I have a (somewhat lengthy) <a href=\"http://www.amccormack.net/anatomy-of-a-pdf-document/\" rel=\"nofollow noreferrer\">blog post</a> that walks through a PDF file line by line to explain the basics of the structure, but none of it uses any GUI tools.  Didier also has a <a href=\"http://blog.didierstevens.com/programs/pdf-tools/\" rel=\"nofollow noreferrer\">template</a> for <a href=\"http://www.sweetscape.com/010editor/\" rel=\"nofollow noreferrer\">010 Editor</a>. 010 has a strong reputation and you can try it free for 30 days</span>",
            "time": null
        },
        {
            "user": "Lizz",
            "text": "<span class=\"comment-copy\">@amccormack Great comment, tag edit, and great writeup - I'm reading it now. Interestingly, it's convincing me that the tool I'm looking for <i>should</i> exist - even if only commercially, which I'd pay for if it was good. I used to think great tools usually are text/command-line based, but cases like this make me realize a picture is sometimes worth more than 1,000 words. Even with greater complexity than SWF files, there's still a structure which could benefit from such a tool.</span>",
            "time": null
        },
        {
            "user": "Willem Hengeveld",
            "text": "<span class=\"comment-copy\">Unmaintained since 2006, but still an interesting tool: <a href=\"http://multivalent.sourceforge.net/\" rel=\"nofollow noreferrer\">multivalent.sourceforge.net</a></span>",
            "time": null
        },
        {
            "user": "Willem Hengeveld",
            "text": "<span class=\"comment-copy\">Also, <a href=\"https://github.com/qpdf/qpdf\" rel=\"nofollow noreferrer\">github.com/qpdf/qpdf</a> may help, it can convert the pdf to a more human readable format, at the source level.</span>",
            "time": null
        },
        {
            "user": "michaeljt",
            "text": "<span class=\"comment-copy\">I can no longer access @amccormack's blog post under the link in his comment; I do find it here, with a slightly changed URL: <a href=\"https://amccormack.net/2012-01-22-anatomy-of-a-pdf-document.html\" rel=\"nofollow noreferrer\">amccormack.net/2012-01-22-anatomy-of-a-pdf-document.html</a> Thank you!</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Sogeti's <a href=\"https://web.archive.org/web/20190914234428/esec-lab.sogeti.com/pages/origami.html\" rel=\"nofollow noreferrer\">Origami framework</a> comes with a GTK based GUI.</p>\n<blockquote>\n<p><strong>What is it?</strong></p>\n<p>origami is a Ruby framework designed to parse, analyze, and forge PDF\ndocuments. This is NOT a PDF rendering library. It aims at providing a\nscripting tool to generate and analyze malicious PDF files. As well,\nit can be used to create on-the-fly customized PDFs, or to inject\n(evil) code into already existing documents.</p>\n<p><strong>Features</strong></p>\n<ul>\n<li>Create PDF documents from scratch.</li>\n<li>Parse existing documents,\nmodify them and recompile them.</li>\n<li>Explore documents at the object\nlevel, going deep into the document structure, uncompressing PDF\nobject streams and desobfuscating names and strings.</li>\n<li>High-level\noperations, such as encryption/decryption, signature, file\nattachments...</li>\n<li>A GTK interface to quickly browse into the document\ncontents.</li>\n</ul>\n</blockquote>\n<p><img alt=\"enter image description here\" src=\"https://i.sstatic.net/hORLj.png\"/></p>\n<p><strong>Here is how I installed it on my Windows 7 system:</strong></p>\n<ul>\n<li>Ensure you have Ruby v1.9.3 installed for Windows\n<a href=\"http://rubyinstaller.org/downloads/\" rel=\"nofollow noreferrer\">http://rubyinstaller.org/downloads/</a></li>\n<li><em>NOTE:</em> This may work on newer/older Ruby versions, but I've only tested on v1.9.3 on Windows 7. (It does work with ruby v1.8.7 on my Linux system)</li>\n<li>Next, install origami by opening an <em>ADMIN</em> cmd prompt and running:</li>\n</ul>\n<p><code>gem install origami</code></p>\n<ul>\n<li>Next, you will need to install <strong>ruby-gtk2</strong>. From the same ADMIN cmd prompt as earlier, run:</li>\n</ul>\n<p><code>gem install gtk2</code></p>\n<ul>\n<li>Afterwards install pdfwalker, since it was moved to a separate gem:</li>\n</ul>\n<p><code>gem install pdfwalker</code></p>\n<p>Finally, simply run <code>pdfwalker</code> from a cmd prompt.</p>\n<p>If this doesn't work for you, I'd suggest trying the above steps from <a href=\"http://www.cygwin.com/\" rel=\"nofollow noreferrer\">Cygwin</a>, where you can essentially follow instructions for installing on *nix.</p>\n<p><strong>If you're installing it on Ubuntu/Debian</strong></p>\n<p>Install ruby with the following command:</p>\n<p><code>apt install ruby-full</code></p>\n<p>Afterwards install origami as listed above:</p>\n<p><code>gem install origami</code></p>\n<p>If you want to use the GUI you will probably need to install libgtk2.0-dev and get the rake gem installed for you to be able to install gtk2:</p>\n<pre><code>apt install libgtk2.0-dev\ngem install rake\ngem install gtk2\n</code></pre>\n<p>Since pdfwalker also needs libcanberra, it's a good idea to install it now:</p>\n<p><code>apt install libcanberra-gtk-module</code></p>\n<p>Afterwards install pdfwalker, since it was moved to a separate gem:</p>\n<p><code>gem install pdfwalker</code></p>\n<p>And it should run from the commandline as described above.</p>\n</div>",
            "votes": "30",
            "user": "Mick",
            "time": "May 16, 2021 at 20:45",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Lizz",
                    "text": "<span class=\"comment-copy\">This would be great, but I can't seem to get the GUI 'pdfwalker' installed/running. Looking at the webpage, I'm not seeing Windows support. Can you point me to how I can get this app's GUI running on Windows?</span>",
                    "time": null
                },
                {
                    "user": "Mick",
                    "text": "<span class=\"comment-copy\">I updated my answer with steps to install on Windows. I have it running on my Windows 7 system now.</span>",
                    "time": null
                },
                {
                    "user": "sshine",
                    "text": "<span class=\"comment-copy\">Update for Ruby 2.2., gtk2-2.2.5: You need a whole lot of Cygwin packages to make this work. Besides gcc and make, the list of libraries is not obvious and involves running <code>gem install origami</code> and [<a href=\"http://superuser.com/questions/923190/gem-installation-failling-with-the-compiler-failed-to-generate-an-executable-fi](reading\" title=\"gem installation failling with the compiler failed to generate an executable fi%5d(reading\">superuser.com/questions/923190/…</a> the mkmf.log) to see which libraries it fails on. It also requires installing an X server, starting it, <code>export DISPLAY=:0.0</code> and even I get: <code>/usr/share/rubygems/rubygems/core_ext/kernel_require.rb:54:in </code>require': superclass mismatch for class Date (TypeError)`</span>",
                    "time": null
                },
                {
                    "user": "Max Barraclough",
                    "text": "<span class=\"comment-copy\">The Origami website seems to no longer exist.</span>",
                    "time": null
                },
                {
                    "user": "Mick",
                    "text": "<span class=\"comment-copy\">@MaxBarraclough - update link. <a href=\"https://web.archive.org/web/20190914234428/esec-lab.sogeti.com/pages/origami.html\" rel=\"nofollow noreferrer\">web.archive.org/web/20190914234428/esec-lab.sogeti.com/pages/…</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>To extract malicious content mostly, like scripts and exploits, You may look on online tools:</p>\n<p><a href=\"http://wepawet.iseclab.org/index.php\" rel=\"nofollow\">Wepawet</a> - online toolkit for analysis of js\\pdf\\flash files.  </p>\n<p><a href=\"http://jsunpack.jeek.org/\" rel=\"nofollow\">Jsunpack</a> - online toolkit for analysis of files, that may contain packed\\encoded JavaScript code, like PDF\\HTML\\JS. also work with .pcap files</p>\n<p>In addition - offline tool for linux (well, not GUI, but good tool) to extract shellcodes and hidden fields:</p>\n<p><a href=\"https://github.com/CrossRef/pdfextract\" rel=\"nofollow\">Pdfextract</a> - An offline command-line tool and library that can extract various areas of text from a PDF. </p>\n</div>",
            "votes": "8",
            "user": "Denis Laskov",
            "time": "May 8, 2013 at 5:34",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Perhaps <a href=\"https://github.com/dzzie/pdfstreamdumper\">PdfStreamDumper</a> is close enough to what you want, but you're still going to need some knowledge of PDF to use it effectively.</p>\n</div>",
            "votes": "6",
            "user": "perror",
            "time": "Apr 3, 2013 at 13:14",
            "is_accepted": false,
            "comments": [
                {
                    "user": "asheeshr",
                    "text": "<span class=\"comment-copy\">Please add a short description about the link and/or the relevant matter. Link-only answers are not considered answers.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I highly recommend <a href=\"http://icerbero.com/profiler/\" rel=\"nofollow\">Cerbero Profiler</a>! </p>\n<blockquote>\n<p>The Cerbero Profiler is a tool designed primarily for malware and forensic analysis. It supports a huge number of file formats (listed below) on which it performs analysis and lets the user inspect their internal layout. The Profiler is often used to identify 0-day threats and personal information inside of files. However, given of the scale of the project, it has many other uses and we encourage you to visit our blog in order to see the Profiler in action.</p>\n</blockquote>\n<p>You might also want to check out <a href=\"https://github.com/jduck/file-dissect\" rel=\"nofollow\">my open source file-dissect tool</a>. I wrote a PDF parser for it, but haven't committed it yet. Sorry, I know that doesn't help much. I will eventually push it up though.</p>\n</div>",
            "votes": "5",
            "user": "0xC0000022L",
            "time": "Apr 5, 2013 at 14:24",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>While there is no GUI, I believe it's worth mentioning command lines tools that will help with the <code>in an automated way</code> part of your question. I've personally used the <a href=\"https://mupdf.com/\" rel=\"nofollow noreferrer\"><code>mupdf</code></a> associated command line tool: <code>mutool</code>.</p>\n<p>For example working on the following <a href=\"http://storage.googleapis.com/google-code-attachments/openjpeg/issue-235/comment-0/Bug691816.pdf\" rel=\"nofollow noreferrer\">PDF file</a>, here is what you would do to extract the encapsulated JPX stream:</p>\n<pre><code>$ mutool info Bug691816.pdf \nBug691816.pdf:\n\nPDF-1.5\nInfo object (49 0 R):\n&lt;&lt;/ModDate(D:20101122114310-08'00')/CreationDate(D:20101122114251-08'00')/Title(ID1561x.indd)/Creator(Adobe InDesign 1.5.2)/Producer(Adobe PDF Library 4.16)&gt;&gt;\nPages: 1\n\nRetrieving info from pages 1-1...\nMediaboxes (1):\n    1   (54 0 R):   [ 0 0 612 792 ]\n\nImages (1):\n    1   (54 0 R):   [ JPX ] 300x161 8bpc Idx (58 0 R)\n</code></pre>\n<p>So you simply need to:</p>\n<pre><code>$ mutool show -be -o obj58.jp2 Bug691816.pdf 58\n</code></pre>\n<p>You can verify:</p>\n<pre><code>$ file obj58.jp2\nobj58.jp2: JPEG 2000 Part 1 (JP2)\n</code></pre>\n<p>See documentation:</p>\n<ul>\n<li><a href=\"https://mupdf.com/docs/manual-mutool-show.html\" rel=\"nofollow noreferrer\">A tool for displaying the internal objects in a PDF file.</a></li>\n</ul>\n<hr/>\n<p>For <code>PDF/A-3: EmbeddedFile</code> (as in <a href=\"https://github.com/ManuelB/add-zugferd-to-pdf/raw/61fe76c7469666742dc54a4a52ee56d3d6d4282d/src/test/resources/ferd-examples/ZUGFeRD_1p0_BASIC_Einfach.pdf\" rel=\"nofollow noreferrer\">this file</a>) you can even run:</p>\n<pre><code>$ mutool portfolio ZUGFeRD_1p0_BASIC_Einfach.pdf x 0 ZUGFeRD-invoice.xml\n$ head ZUGFeRD-invoice.xml\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!-- \n\nNutzungsrechte \nZUGFeRD Datenformat Version 1.0, 25.6.2014\nBeispiel Version 29.09.2014\n\nZweck des Forums für elektronische Rechnungen bei der AWV e.V („FeRD“) ist u.a. die Schaffung und Spezifizierung \neines offenen Datenformats für strukturierten elektronischen Datenaustausch auf der Grundlage offener und nicht \ndiskriminierender, standardisierter Technologien („ZUGFeRD Datenformat“)\n</code></pre>\n<p>See documentation:</p>\n<ul>\n<li><a href=\"https://mupdf.com/docs/manual-mutool-portfolio.html\" rel=\"nofollow noreferrer\">Manipulate PDF portfolios.</a></li>\n</ul>\n</div>",
            "votes": "2",
            "user": "tibar",
            "time": "Nov 17, 2017 at 7:44",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">OP asks for GUI tool</span>",
                    "time": null
                },
                {
                    "user": "tibar",
                    "text": "<span class=\"comment-copy\">Indeed I missed that, this conflicts with <code>in an automated way</code> imho</span>",
                    "time": null
                },
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">in most cases yes, but doesn't have to</span>",
                    "time": null
                }
            ]
        }
    ]
}