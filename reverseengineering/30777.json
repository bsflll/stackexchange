{
    "title": "How this data can be referenced in Ghidra?",
    "link": "https://reverseengineering.stackexchange.com/questions/30777/how-this-data-can-be-referenced-in-ghidra",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I reverse engineered <code>libil2cpp.so</code> using ghidra. I found these lines of code in a function in the decompiler view:</p>\n<pre><code>UnityEngine.PlayerPrefs$$GetInt(*(undefined4 *)(*(int *)(Class$ItemPref + 0x5c) + 8),5,0);\n</code></pre>\n<p>it is apparently getting the value of a <code>shared_preferences</code>. the syntax of when getting a shared_preference in <code>unity</code> games is as follows as described in the documentation:</p>\n<pre><code>UnityEngine.PlayerPrefs.GetInt(string key, int defaultValue)\n</code></pre>\n<p>so as apparently the <code>*(undefined4 *)(*(int *)(Class$ItemPref + 0x5c) + 8)</code> in the reversed code is the corresponding <code>string key</code>. while in general I know where the key is in the reversed code which is at this address</p>\n<pre><code>010e94b8      undefined4      ??       ; ScoreID                                                                                            \n\n</code></pre>\n<p>so what I wanted to learn is that how <code>*(undefined4 *)(*(int *)(Class$ItemPref + 0x5c) + 8)</code>  is reffering to that address <code>010e94b8</code> holding the string key.</p>\n<p>what I tried so far?</p>\n<p>referring to <a href=\"https://stackoverflow.com/a/69652148\">this answer</a>, I double clicked the value <code>Class$ItemPref</code> in the decompiled code <code>*(undefined4 *)(*(int *)(Class$ItemPref + 0x5c) + 8)</code> and take its memory address <code>010dd710</code> and then adding <code>0x5c</code> yeilds <code>10DD76C</code> and then adding <code>8</code> yeilds <code>10DD774</code> so going to this address <code>10DD774</code> does not contain the string <code>ScoringID</code>.</p>\n<p>also I did this taking memory address of <code>Class$ItemPref</code> which is <code>010dd710</code> and then adding <code>0x5c</code> and the multiply the size of the typecast which is <code>int</code> which is <code>4</code> then the result is <code>4375DB0</code> then adding <code>8</code> equals to <code>4375DB8</code> but this is not quite right.</p>\n<p>but what I really wanted to learn is that how that string <code>ScoreID</code> is referred in the decompiled code <code>UnityEngine.PlayerPrefs$$GetInt(*(undefined4 *)(*(int *)(Class$ItemPref + 0x5c) + 8),5,0);</code> please help this as my limited knowledge of reversing and ghidra.</p>\n<p>if it helps, the corresponding disassembled view of the code is as follows:</p>\n<pre><code>    003e60f0 5c 00 90 e5              ldr             r0, [r0,#0x5c]\n    003e60f4 05 10 a0 e3              mov             r1, #0x5\n    003e60f8 00 20 a0 e3              mov             r2, #0x0\n    003e60fc 08 00 90 e5              ldr             r0, [r0,#0x8]\n    003e6100 10 4c bd e8              ldmia           sp!,{r4 r10 r11 lr}\n    003e6104 1a 63 14 ea              b               UnityEngine.PlayerPrefs$$GetInt                                                                        ; undefined UnityEngine.PlayerPrefs$$GetInt()\n                    -- Flow Override: CALL_RETURN (CALL_TERMIN\n\n</code></pre>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "265",
    "tags": [
        "ghidra",
        "static-analysis",
        "decompile",
        "c#",
        "game-hacking"
    ],
    "user": "hanan",
    "time": "Aug 14, 2022 at 13:50",
    "comments": [
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">I don't think the type <code>string</code> is equivalent to a <code>char*</code> where you would find the characters at the referenced memory address. Instead <code>string</code> is a struct so the pointer just leads you to that struct. See e.g. <a href=\"https://stackoverflow.com/questions/53654062/internal-structure-of-class-string-in-c\" title=\"internal structure of class string in c\">stackoverflow.com/questions/53654062/â€¦</a> (not sure if this also applies to the used <code>string</code> type in your case)</span>",
            "time": null
        }
    ],
    "answers_data": []
}