{
    "title": "Find exact dependency tree of a program",
    "link": "https://reverseengineering.stackexchange.com/questions/6958/find-exact-dependency-tree-of-a-program",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In order to port a program (32 bit) from Win XP to Win 7/8/10 (64 bit), I have to list its dependencies ( all the dependency tree if possible). I've tried several tools that I'm aware of:</p>\n<ul>\n<li>Dependency walker - doesn't see the Wow64 layer. </li>\n<li>ProcessExplorer - gave another result and this time the Wow64 layer appears but not all the tree.</li>\n</ul>\n<p>How could I list the exact list of dependency of my program ? </p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "604",
    "tags": [
        "windows",
        "dll"
    ],
    "user": "Florian GERARD",
    "time": "Jan 5, 2015 at 8:32",
    "comments": [
        {
            "user": "PhoeniX",
            "text": "<span class=\"comment-copy\">Why do you need to see the depandencies if you have the source file? In general, during development stage you need to take into account 64 bit target, so that the appropriate APIs and types are used. In addition, there are some peculiarities that must be taken care of when targeting the above OSs. You need to consult MSDN for this. As to the question, you do not need to see the whole tree as wow64 layer is sufficient to understand what APIs are used. Take into account that you will not see APIs that are resolved during runtime.</span>",
            "time": null
        },
        {
            "user": "Florian GERARD",
            "text": "<span class=\"comment-copy\">This is an old program, i can't find every sources, some of them are lost, maybe with the IDE that were used to make this program. I need to see the dependencie tree in order to ensure that the program will work on future OSs and if not, We have to know were do we have to search</span>",
            "time": null
        },
        {
            "user": "cubuspl42",
            "text": "<span class=\"comment-copy\">While it maybe doesn't anwser your question directly, I'd like to add that when everything else fails, you can try to use <code>procmon</code> to see what DLLs Windows <i>tries</i> to load. It's not offline method, and it doesn't show you any tree, but it has a great advantage that you can see what your application <i>really</i> tries to load and in what order.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can use the following tools to inspect and try to recover information about PE file:</p>\n<ul>\n<li><a href=\"http://www.aldeid.com/wiki/PEiD\" rel=\"nofollow\">PEiD</a> it has extensive pe file editing capabilities</li>\n<li><a href=\"http://www.ntinfo.biz\" rel=\"nofollow\">Detect It Easy</a> - another very useful tool for PE analysis</li>\n<li><a href=\"http://tomsreversing.com/2013/03/11/viewing-imports-table/\" rel=\"nofollow\">Viewing import table from windbg</a> - if the above will not be very helpful, you can always use the debugger.</li>\n<li><a href=\"http://support.microsoft.com/kb/177429\" rel=\"nofollow\">Dumbin</a> - Microsoft utility to inspect PE file, among which is PE imports.</li>\n</ul>\n<p>Those tools can show all the information about the imports that the program has.</p>\n</div>",
            "votes": "4",
            "user": "PhoeniX",
            "time": "Jan 5, 2015 at 9:40",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Florian GERARD",
                    "text": "<span class=\"comment-copy\">Thank you, that helps me to understand why processExplorer hasn't the same result.</span>",
                    "time": null
                }
            ]
        }
    ]
}