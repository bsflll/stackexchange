{
    "title": "Can IDA Pro automatically deal with VM obfuscated binaries?",
    "link": "https://reverseengineering.stackexchange.com/questions/3969/can-ida-pro-automatically-deal-with-vm-obfuscated-binaries",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>VM packers like Code Virtualizer and VMProtect seem challenging to existing reverse engineering work, especially static approach like IDA Pro.</p>\n<p>According to this slides</p>\n<p>www.hex-rays.com/products/ida/support/ppt/caro_obfuscation.ppt</p>\n<p>from Hex-rays, IDA Pro requires experienced reverse engineer to manually recognize the opcode array and understand the semantic, then decode the bytecode array..</p>\n<p>I myself use IDA Pro to deal with simple quicksort program using Code Virtualizer, and I can share two pics.</p>\n<p><img alt=\"enter image description here\" src=\"https://i.sstatic.net/vZqaZ.png\"/></p>\n<p>See, I use Code Virtualizer to protect this part and IDA Pro can not go to 0X599050h.</p>\n<p><img alt=\"enter image description here\" src=\"https://i.sstatic.net/UPTnc.png\"/></p>\n<p>See, the size of relocation section has a significant growth.</p>\n<p>So my questions:</p>\n<ol>\n<li>Can IDA Pro automatically deal with VM obfuscated binaries?</li>\n<li>Any other interesting materials on the state-of-art in this area?</li>\n</ol>\n<p>Thank you!</p>\n</div>",
    "votes": "5",
    "answers": 2,
    "views": "5k",
    "tags": [
        "ida",
        "virtual-machines",
        "virtualizers"
    ],
    "user": "lllllllllllll",
    "time": "Mar 26, 2014 at 15:31",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Regarding question #1, no IDA does not handle obfuscated binaries.</p>\n<p>You might be interested by the Virtual Deofbuscator talk Jason Raber gave at Blackhat last year, he also released an IDA plugin and the source code is available.</p>\n<ul>\n<li>Slides :\n<a href=\"https://media.blackhat.com/us-13/US-13-Raber-Virtual-Deobfuscator-A-DARPA-Cyber-Fast-Track-Funded-Effort-Slides.pdf\">https://media.blackhat.com/us-13/US-13-Raber-Virtual-Deobfuscator-A-DARPA-Cyber-Fast-Track-Funded-Effort-Slides.pdf</a></li>\n<li>Video : <a href=\"https://www.youtube.com/watch?v=hoda99l5y_g\">https://www.youtube.com/watch?v=hoda99l5y_g</a> </li>\n<li>Source code :\n<a href=\"https://github.com/jnraber/VirtualDeobfuscator\">https://github.com/jnraber/VirtualDeobfuscator</a></li>\n</ul>\n</div>",
            "votes": "9",
            "user": "ekse",
            "time": "Mar 26, 2014 at 16:59",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There's now (from 2020) a plugin for IDA Pro that helps in working with obfuscated binaries. It is called <a href=\"https://eshard.com/posts/d810_blog_post_1/\" rel=\"nofollow noreferrer\">D810: Creating an extensible deobfuscation plugin for IDA Pro</a>.</p>\n</div>",
            "votes": "1",
            "user": "auspicious99",
            "time": "Jan 6, 2021 at 15:20",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Orwellophile",
                    "text": "<span class=\"comment-copy\">That's a blatant misrepresentation.  D-810 helps deal with obfu in <b>pseudo-decompiled functions</b>, and isn't going to be a lick of help in decoding VMProtected or other kind of \"decrypt at loadtime\" protection.  All D-810 is going to do is make the psuedo-decompiled functions slightly easier to read.  Not that this isn't <b>awesome</b>, it's just not addressing the OPs concern.</span>",
                    "time": null
                }
            ]
        }
    ]
}