{
    "title": "How to use IDA environment to run python scripts?",
    "link": "https://reverseengineering.stackexchange.com/questions/32497/how-to-use-ida-environment-to-run-python-scripts",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying out following technique:</p>\n<p><a href=\"https://github.com/CMUSTRUDEL/DIRTY\" rel=\"nofollow noreferrer\">https://github.com/CMUSTRUDEL/DIRTY</a></p>\n<p>This is a deep learning approach for type and name recovery. It uses ida scripts to generate and preprocess the dataset.</p>\n<p>It first requires me use IDA to generate the dataset.</p>\n<pre><code>python3 generate.py --ida /path/to/idat64 -b BINARIES_DIR -o OUTPUT_DIR_Step1\n</code></pre>\n<p>This extracts function information from the dataset. After that, I have to run preprocessing scripts as follows (the instruction on their GitHub are incomplete).</p>\n<pre><code># Inside the dirty directory.\n\npython -m utils.preprocess OUTPUT_PATH PATH_TO_DATASET_FILENAMES OUTPUT_DIR_Step1\n</code></pre>\n<p>But, the problem is that, the scripts don't take IDA path and they use <code>idapython</code> libraries such as <code>ida_typeinf</code></p>\n<p>Check - <a href=\"https://github.com/CMUSTRUDEL/DIRTY/blob/main/binary/dire_types.py\" rel=\"nofollow noreferrer\">https://github.com/CMUSTRUDEL/DIRTY/blob/main/binary/dire_types.py</a></p>\n<p>However, if I run the above python script, as it lies outside the ida environment, gives me lib not found errors (because it can't see <code>ida_typeinf</code>).</p>\n<p>Is there any way to run this script within ida environment (that's what I believe is the issue, but I could be wrong). It is also possible that the above command <code>python -m utils.preprocess OUTPUT_PATH PATH_TO_DATASET_FILENAMES OUTPUT_DIR_Step1</code> may not be accurate and I need Ida command line to run that command. Note that I know how to run idat on individual binaries.</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "452",
    "tags": [
        "ida",
        "idapython"
    ],
    "user": "R4444",
    "time": "Nov 13, 2023 at 3:24",
    "comments": [
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">The scripts don't take IDA path as it contains them in <code>idastubs</code> directory (not sure if this is a copy or just a similar re-implementation).</span>",
            "time": null
        },
        {
            "user": "mimak",
            "text": "<span class=\"comment-copy\">you can find the Python libs at <code>&lt;your IDA root dir&gt;/python</code></span>",
            "time": null
        },
        {
            "user": "R4444",
            "text": "<span class=\"comment-copy\">@Robert and mimak I tired to add both of them and set the PYTHONPATH, but no luck.</span>",
            "time": null
        },
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<span class=\"comment-copy\">Are you looking for the -S parameter as in <a href=\"https://hex-rays.com/blog/igor-tip-of-the-week-08-batch-mode-under-the-hood/\" rel=\"nofollow noreferrer\">hex-rays.com/blog/…</a> (or to be more verbose <a href=\"https://hex-rays.com/blog/running-scripts-from-the-command-line-with-idascript/\" rel=\"nofollow noreferrer\">hex-rays.com/blog/…</a>)? Afaik, those libraries are meant to be used from inside since they're calling into the disassembler/decompiler API. Hence, it's sorta weird to run the python interpreter to use them directly.  You can run scripts from the UI with Alt+F7 (File -&gt; Script File), or use the -S parameter from the commandline to explicitly run a script in IDA once it has loaded the database.</span>",
            "time": null
        }
    ],
    "answers_data": []
}