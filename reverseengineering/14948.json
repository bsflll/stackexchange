{
    "title": "How to debug binwalk tool?",
    "link": "https://reverseengineering.stackexchange.com/questions/14948/how-to-debug-binwalk-tool",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>My lecturers have requested that I debug <code>binwalk</code> in order to understand how it works and develop new features so that it can extract more. I tried to use <code>gdb</code> to debug <code>binwalk</code> but it results in the error message \"/usr/bin/binwalk\": not in executable format: File format not recognized\". What other tool can be used to debug it? </p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "393",
    "tags": [
        "debugging",
        "debuggers"
    ],
    "user": "QChí Nguyễn",
    "time": "Mar 19, 2017 at 15:26",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>I tried to use <code>gdb</code> to debug <code>binwalk</code> but it results in the error message \"/usr/bin/binwalk\": not in executable format: File format not recognized\".</p>\n</blockquote>\n<p>In order for <code>gdb</code> to interface with a binary executable, the binary must have one of the following <a href=\"https://sourceware.org/gdb/wiki/Internals%20Object-File-Formats\" rel=\"nofollow noreferrer\">object file formats</a>:</p>\n<ul>\n<li>a.out</li>\n<li>COFF</li>\n<li>ECOFF</li>\n<li>XCOFF</li>\n<li>PE</li>\n<li>ELF</li>\n<li>SOM</li>\n</ul>\n<p>The binary must also have intact section information, as <code>gdb</code> relies on <code>libbfd</code>. Since <code>binwalk</code> is written in Python and interpreted by the Python interpreter instead of being compiled in to an executable binary that conforms to one of the aforementioned formats, <code>gdb</code> cannot be used to dynamically analyze <code>binwalk</code>.</p>\n<blockquote>\n<p>My lecturers have requested that I debug binwalk in order to understand how it works and develop new features so that it can extract more.</p>\n</blockquote>\n<p>If your primary goal is extending the functionality of <code>binwalk</code>, then dynamically analyzing it may not be as productive as looking at </p>\n<ul>\n<li>the <a href=\"https://github.com/devttys0/binwalk\" rel=\"nofollow noreferrer\">the source code</a></li>\n</ul>\n<p>as well as <a href=\"https://github.com/devttys0/binwalk/wiki\" rel=\"nofollow noreferrer\">documentation</a> on </p>\n<ul>\n<li><a href=\"https://github.com/devttys0/binwalk/wiki/Signature-File-Format\" rel=\"nofollow noreferrer\">The signature file format</a></li>\n<li><a href=\"https://github.com/devttys0/binwalk/wiki/Creating-Custom-Signatures\" rel=\"nofollow noreferrer\">Creating custom signatures</a></li>\n<li><a href=\"https://github.com/devttys0/binwalk/wiki/Creating-Custom-Plugins\" rel=\"nofollow noreferrer\">Creating custom plugins</a></li>\n<li><a href=\"https://github.com/devttys0/binwalk/blob/master/API.md\" rel=\"nofollow noreferrer\">Scripting with the API</a></li>\n</ul>\n<p>But if \"debugging\" <code>binwalk</code> is the primary focus, then <a href=\"https://docs.python.org/2/library/pdb.html\" rel=\"nofollow noreferrer\">pdb</a> or using a Python IDE will work.</p>\n</div>",
            "votes": "3",
            "user": "julian",
            "time": "Mar 19, 2017 at 14:39",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Binwalk is written on Python language. Please try pdb. Python debugger.</p>\n</div>",
            "votes": "2",
            "user": "malikcjm",
            "time": "Mar 19, 2017 at 13:16",
            "is_accepted": false,
            "comments": [
                {
                    "user": "HamZa",
                    "text": "<span class=\"comment-copy\">or any modern python IDE with debugging capabilities such as PyCharm.</span>",
                    "time": null
                }
            ]
        }
    ]
}