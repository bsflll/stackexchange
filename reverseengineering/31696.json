{
    "title": "How to determine the encryption type/structure used on a .dat file",
    "link": "https://reverseengineering.stackexchange.com/questions/31696/how-to-determine-the-encryption-type-structure-used-on-a-dat-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a .dat file that is saved by a Delphi 5 application. It is basically the applications backup file for it's internal database.</p>\n<p>I can't seem to find what type of DB it is. The file starts with <code>TPE0&amp;</code> then is followed by a mix of binary.</p>\n<p>I have tried to search the name part but also don't have experience with Delphi so not sure if this is from an internal type class or if the dev rolled their own solution form the 90's</p>\n<p>The other option I tried was to read the file as a binary into rust and then convert to chars to see if it made sense, but that would give not much details. Trying to just have it as a set of int's worked. But the data should map back to ascii as it is from an internal data store of details.</p>\n<p>I'm trying to work out if its possible to make a cli to parse and migrate the data.</p>\n<p><s>(I can't really attach the full file as all the <code>null</code> like bits are cleared out so the data might be even more jumbled when coping)</s></p>\n<h2>Edit 2</h2>\n<p>Below is a hexdump as per masterx244's comment.</p>\n<pre><code>0000000 54 50 45 30 26 20 c3 03 00 00 01 48 63 97 cd 27\n0000010 a2 5f 15 0b aa f0 bd 6f 33 c9 bf 77 55 02 a2 4d\n0000020 42 b2 da ed 9e 47 48 cd 34 8e 49 1c f8 41 bc 42\n0000030 a1 69 41 12 32 7f 7a 80 d2 6e 68 05 92 18 87 e4\n0000040 48 00 00 81 29 56 58 ca a3 7f 64 00 5e dd 7e 70\n0000050 0c 9b 93 4e ea 23 32 46 35 75 e9 f7 cf e8 59 af\n0000060 0c 05 98 84 1f 92 98 01 68 33 d1 68 b8 20 16 86\n0000070 21 cb ae 74 a9 78 23 cf d8 40 16 7a e8 e5 96 54\n0000080 99 4a 7a 3d 57 04 02 d4 c4 30 c9 3a f7 df 66 6c\n0000090 ed b1 93 6a 14 b9 11 29 bb 65 2f 0d b9 4c 4a 59\n00000a0 57 72 08 ad 00 05 15 75 d9 6b 8e 19 78 75 e2 20\n00000b0 74 ae d8 56 63 ec 46 19 eb c2 76 76 c9 bd d0 9f\n00000c0 5c 50 d8 13 50 e5 8e 74 af 66 16 2b c2 75 9e 82\n00000d0 a6 75 94 f7 e8 4f 09 a8 61 8d 1b d4 38 b5 f2 ab\n00000e0 87 5a f2 4b 26 76 b9 34 e9 3d e5 ba 76 99 91 46\n00000f0 f8 7d 55 d3 00 89 5e 2f 3d 2c ea c2 d3 25 da ee\n0000100 9e c2 00 b4 d7 5c a5 0b 32 87 0d 1c 7f 2a 14 16\n0000110 cc da d9 0f b6 6f 4a 0d 42 1e 75 c0 b9 0a 7c 21\n0000120 4f 74 2c fc 61 36 08 1e 03 8f 2c be dd cf b4 07\n0000130 1f 22 29 90 fb ae c8 5e 05 af ce 73 26 6d ec e3\n0000140 1e 55 7c d8 fd c0 35 f8 d3 3d 05 98 cf 7d 6c ee\n0000150 34 f8 9a 7c 0d 46 26 a2 f3 42 01 c1 fe 18 0c 7b\n0000160 78 f4 fd ab 9b 21 b3 d1 03 fe f1 35 f2 62 9b ff\n0000170 e0                                             \n0000171\n</code></pre>\n<h2>Edit</h2>\n<p>Here is the data from the file, I converted the bytes to ascii so you can see what it is and hopefully retain the data</p>\n<pre><code>TPE0&amp; Ã\\u{3}\\0\\0\\u{1}Hc\\u{97}Í'¢_\\u{15}\\u{b}ªð½o3É¿wU\\u{2}¢MB²Úí\\u{9e}GHÍ4\\u{8e}I\\u{1c}øA¼B¡iA\\u{12}2\\u{7f}z\\u{80}Ònh\\u{5}\\u{92}\\u{18}\\u{87}äH\\0\\0\\u{81})VXÊ£\\u{7f}d\\0^Ý~p\\u{c}\\u{9b}\\u{93}Nê#2F5ué÷ÏèY¯\\u{c}\\u{5}\\u{98}\\u{84}\\u{1f}\\u{92}\\u{98}\\u{1}h3Ñh¸ \\u{16}\\u{86}!Ë®t©x#ÏØ@\\u{16}zèå\\u{96}T\\u{99}Jz=W\\u{4}\\u{2}ÔÄ0É:÷ßflí±\\u{93}j\\u{14}¹\\u{11})»e/\\r¹LJYWr\\u{8}\\u{ad}\\0\\u{5}\\u{15}uÙk\\u{8e}\\u{19}xuâ t®ØVcìF\\u{19}ëÂvvÉ½Ð\\u{9f}\\\\PØ\\u{13}På\\u{8e}t¯f\\u{16}+Âu\\u{9e}\\u{82}¦u\\u{94}÷èO\\t¨a\\u{8d}\\u{1b}Ô8µò«\\u{87}ZòK&amp;v¹4é=åºv\\u{99}\\u{91}Fø}UÓ\\0\\u{89}^/=,êÂÓ%Úî\\u{9e}Â\\0´×\\\\¥\\u{b}2\\u{87}\\r\\u{1c}\\u{7f}*\\u{14}\\u{16}ÌÚÙ\\u{f}¶oJ\\rB\\u{1e}uÀ¹\\n|!Ot,üa6\\u{8}\\u{1e}\\u{3}\\u{8f},¾ÝÏ´\\u{7}\\u{1f}\\\")\\u{90}û®È^\\u{5}¯Îs&amp;mìã\\u{1e}U|ØýÀ5øÓ=\\u{5}\\u{98}Ï}lî4ø\\u{9a}|\\rF&amp;¢óB\\u{1}Áþ\\u{18}\\u{c}{xôý«\\u{9b}!³Ñ\\u{3}þñ5òb\\u{9b}ÿà\n</code></pre>\n</div>",
    "votes": "3",
    "answers": 0,
    "views": "150",
    "tags": [
        "unknown-data",
        "delphi"
    ],
    "user": "RSM",
    "time": "Mar 25, 2023 at 14:04",
    "comments": [
        {
            "user": "ESkri",
            "text": "<span class=\"comment-copy\">It is a usual situation - for each project a unique data structure is designed, exactly what is needed for the application.  Actually it is a huge <code>record</code> datatype with all the data inside.</span>",
            "time": null
        },
        {
            "user": "RSM",
            "text": "<span class=\"comment-copy\">I think that is what has happened actually, which is bugging me, as it was an old program from 96 or so, then updated in early 2000s but isn't serviced anymore and the client would like to extend a migration option.</span>",
            "time": null
        },
        {
            "user": "ESkri",
            "text": "<span class=\"comment-copy\">Your file contains a header (with signature and int value <code>3</code>) and a block of encrypted data.</span>",
            "time": null
        },
        {
            "user": "ESkri",
            "text": "<span class=\"comment-copy\">Do you have source files of the application?  Then you can simply find the procedure of creating/reading the data file.  If not, you should disassemble the .exe file.</span>",
            "time": null
        },
        {
            "user": "masterX244",
            "text": "<span class=\"comment-copy\">also: best method for posting data with null bytes is a hexdump. it takes more space but all bytes are preserved.</span>",
            "time": null
        }
    ],
    "answers_data": []
}