{
    "title": "Making operand an offset in IDA Python",
    "link": "https://reverseengineering.stackexchange.com/questions/6384/making-operand-an-offset-in-ida-python",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I working with ARM executable.\nSometimes I have something like this <code>MOV</code> instruction:</p>\n<pre><code>MOV R0, #0xCD548A40\n</code></pre>\n<p>where the number <code>#0xCD548A40</code> is a valid offset but IDA doesn't recognize it as such automatically.\nI tried to reanalyze the executable with enabled option \"<em>Automatically convert data to offsets</em>\" without of any suitable result.\nI also tried to write IDAPython script to fix this, but the only possibility of conversion to offset that I found was:</p>\n<pre><code>idaapi.jumpto(address)\nidaapi.process_ui_action(\"OpOffset\", 0)\n</code></pre>\n<p>Which is not too much convenient to use.</p>\n<h2>Question</h2>\n<blockquote>\n<p>Given an instruction at specific address and one of its operands in a valid offset range is it possible to convert such numbers to offsets using IDA Python ?</p>\n<p>Which IDAPython API should I use for it ?</p>\n</blockquote>\n</div>",
    "votes": "3",
    "answers": 2,
    "views": "6k",
    "tags": [
        "idapython"
    ],
    "user": "w s",
    "time": "Jun 17, 2020 at 9:54",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've been using the Ida <code>OpOff</code> function for that. That was <code>idc</code>, not <code>idapython</code>, but <a href=\"https://www.hex-rays.com/products/ida/support/idapython_docs/idc-module.html#OpOff\" rel=\"noreferrer\">https://www.hex-rays.com/products/ida/support/idapython_docs/idc-module.html#OpOff</a> says there's <code>OpOff</code> in <code>idapython</code> as well. In addition, there's another function, <code>OpOffEx</code>, that lets you specify more details. I think one of those is what you need.</p>\n</div>",
            "votes": "5",
            "user": "Guntram Blohm",
            "time": "Oct 5, 2014 at 20:23",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I happen to just run into this exact issue.</p>\n<p>Here's what I did. Replace the <code>for</code> bits with the <code>if</code> bits to just test it on a small bit.</p>\n<pre><code>from idautils import *\nfrom idaapi import *\nfrom idc import *\n\n#if True:\n#    if True:\n#        if True:\n#            startea = 0x0F9109DC\n#            endea = 0x0F9109F\nfor segea in Segments():\n    for funcea in Functions(segea, SegEnd(segea)):\n        functionName = GetFunctionName(funcea)\n        for (startea, endea) in Chunks(funcea):\n            for ea in Heads(startea, endea):\n                if idc.GetMnem(ea) != \"MOV\" or idc.get_operand_type(ea, 1) != 5 or  idc.get_str_type(idc.get_operand_value(ea, 1)) != 0:\n                    continue\n                print \"0x%08x\"%(ea), \":\", idc.GetOpnd(ea, 1), idc.get_operand_type(ea, 1)\n                idc.op_plain_offset(ea,1,0)\n</code></pre>\n<p>```</p>\n</div>",
            "votes": "2",
            "user": "Erik Smit",
            "time": "Feb 23, 2018 at 15:03",
            "is_accepted": false,
            "comments": []
        }
    ]
}