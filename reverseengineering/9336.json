{
    "title": "Can mprotect set the stack itself as executable?",
    "link": "https://reverseengineering.stackexchange.com/questions/9336/can-mprotect-set-the-stack-itself-as-executable",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm taking my first steps in memory exploitation in Linux. I'm following a tutorial for a practice VM(<code>$ uname -r -&gt; 3.13.0-32-generic</code>)</p>\n<p>The tutorial makes a call to <code>mprotect</code> to set a certain region of memory executable, then uses <code>read</code> to manually input some shellcode.</p>\n<p>I occurred to me that perhaps I could load my shellcode on the stack using the buffer and use <code>mprotect</code> to set the buffer region on the stack as executable and return to it. But that throws an error for reasons I'm not sure of.</p>\n<p>In short, this call to <code>mprotect</code> works:</p>\n<pre><code># mprotect: set memory executable\npayload += p(0x080523e0) # mprotect addr\npayload += p(0x08048882) # return to: pop, pop, pop, retn\npayload += p(0xb7ffd000) # arg1: address of 'mapped' region\npayload += p(0x2000)     # arg2: length\npayload += p(0x7)        # arg3: rwx\n</code></pre>\n<p>But this call fails:</p>\n<pre><code># mprotect: set memory executable\npayload += p(0x080523e0) # mprotect addr\npayload += p(0xbffff6c0) # return to shellcode in buffer on stack\npayload += p(0xbffff6c0) # arg1: beginning of shellcode on stack\npayload += p(0x2000)     # arg2: length\npayload += p(0x7)        # arg3: rwx\n</code></pre>\n<p>Stepping through <code>mprotect</code> in that second example shows me that it takes an error jump:</p>\n<pre><code>=&gt; 0x80523fa &lt;mprotect+26&gt;: jae    0x8053870 &lt;__syscall_error&gt;\n</code></pre>\n<p>As the only difference between the two is the address I want to set executable, I'm wondering if it's simply that <code>mprotect</code> can't set the stack as executable?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "4k",
    "tags": [
        "linux",
        "executable",
        "stack"
    ],
    "user": "Juicy",
    "time": "Jul 12, 2015 at 14:28",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Yes, <a href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?mprotect\" rel=\"nofollow\"><code>mprotect</code></a> can be used to make the stack executable.</p>\n<p>See, for example:</p>\n<ul>\n<li><a href=\"https://github.com/gcc-mirror/gcc/blob/master/libgcc/enable-execute-stack-mprotect.c\" rel=\"nofollow\">https://github.com/gcc-mirror/gcc/blob/master/libgcc/enable-execute-stack-mprotect.c</a></li>\n<li><a href=\"http://rethinkdb.com/blog/handling-stack-overflow-on-custom-stacks/\" rel=\"nofollow\">http://rethinkdb.com/blog/handling-stack-overflow-on-custom-stacks/</a></li>\n</ul>\n<p>You can troubleshoot further by examining the value of <code>errno</code> after the <code>mprotect</code> call.</p>\n</div>",
            "votes": "4",
            "user": "Jason Geffner",
            "time": "Jul 12, 2015 at 18:33",
            "is_accepted": false,
            "comments": []
        }
    ]
}