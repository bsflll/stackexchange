{
    "title": "DLL Injection Call Address In Target",
    "link": "https://reverseengineering.stackexchange.com/questions/21757/dll-injection-call-address-in-target",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have an address that is located in a dll loaded by my target process. I would like to call this address using dll injection.</p>\n<p>For now my dll looks like this:</p>\n<pre><code>BOOL APIENTRY DllMain(HMODULE hModule, DWORD ul_reason_for_call, LPVOID lpReserved)\n{\n    switch (ul_reason_for_call)\n    {\n        case DLL_PROCESS_ATTACH:\n        {\n            MessageBox(NULL, L\"Injection Successful\", L\"TEST:\", MB_OK); \n            //Here I'd like to call the address\n\n            break;\n        }\n        case DLL_THREAD_ATTACH:\n        case DLL_THREAD_DETACH:\n        case DLL_PROCESS_DETACH:\n        break;\n    }\n    return TRUE;\n}\n</code></pre>\n<p>From what I've learned online, there are some problems: </p>\n<ul>\n<li>I can't use the address that is shown in the debugger (x64dbg) because of some offset stuff I don't understand. </li>\n<li>The address is a different one every time I start the program.</li>\n</ul>\n<p>I'm using Cheat Engine to inject the dll and x64dbg as a debugger.\nSince I'm a beginner, a bit of code would be very much appreciated.</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "608",
    "tags": [
        "c++",
        "dll-injection"
    ],
    "user": "Kevin Mueller",
    "time": "Jul 24, 2019 at 17:13",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Doing such stunts from DllMain can be a patently bad idea. Certain locking conditions apply inside DllMain. Grab a decent book and read up on it. Perform only simple actions inside DllMain, perhaps set an event or output a debug string (which you can see in WinDbg or DbgView).</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There are plenty of ways to do what you want.</p>\n<ol>\n<li>I recommend you to export the method you want to call and then use the <code>GetProcAddress</code> function to get the address of it and call it. You can use the code sample from the MSDN; it should work as is in your case.</li>\n<li>You can get the loading address of your DLL: see <a href=\"https://stackoverflow.com/questions/3472517/finding-the-memory-address-of-a-loaded-dll-in-a-process-in-c\">StackOverflow post</a>. You need to calculate the offset to your function and add that to the loading address.</li>\n<li>You can get the current address of your code with some assembly code. See the <a href=\"https://stackoverflow.com/questions/7932287/get-address-of-current-instruction-for-x86\">StackOverflow post</a> for instance. Again, you need to calculate the offset to the function you want to call.</li>\n</ol>\n</div>",
            "votes": "1",
            "user": "bart1e",
            "time": "Jul 24, 2019 at 17:10",
            "is_accepted": false,
            "comments": []
        }
    ]
}