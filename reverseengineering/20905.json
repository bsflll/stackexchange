{
    "title": "Ghidra Control Flow Graph",
    "link": "https://reverseengineering.stackexchange.com/questions/20905/ghidra-control-flow-graph",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Lately I'm using Ghidra and I don't find the API to get the control flow graph of a given function. Can someone help me?</p>\n<p>Thank you in advance.</p>\n<p>EDIT: it is different from the other question (<a href=\"https://reverseengineering.stackexchange.com/questions/20791\">link</a>) because I'm asking for the API.</p>\n</div>",
    "votes": "7",
    "answers": 1,
    "views": "11k",
    "tags": [
        "api",
        "control-flow-graph",
        "ghidra"
    ],
    "user": "Benny",
    "time": "Mar 18, 2019 at 9:46",
    "comments": [
        {
            "user": "perror",
            "text": "<span class=\"comment-copy\">Possible duplicate of <a href=\"https://reverseengineering.stackexchange.com/questions/20791/how-to-display-the-cfg-of-a-function-in-ghidra\">How to display the CFG of a function in Ghidra?</a></span>",
            "time": null
        },
        {
            "user": "Benny",
            "text": "<span class=\"comment-copy\">I edited. I'm asking for the API, so it is not a duplicate.</span>",
            "time": null
        },
        {
            "user": "Nordwald",
            "text": "<span class=\"comment-copy\">Hi and welcome to RE.SE! Could you be more specific on what you want to do with the flow graphs? Layout? Create your own? The api is pretty vast <a href=\"http://ghidra.re/ghidra_docs/api/index-all.html\" rel=\"nofollow noreferrer\">ghidra.re/ghidra_docs/api/index-all.html</a></span>",
            "time": null
        },
        {
            "user": "Benny",
            "text": "<span class=\"comment-copy\">Hi! Given a function, I need to extract its CFG so as to count its edges and nodes for computing the cyclomatic complexity and other metrics. I already browsed through Ghidra's documentation, but I didn't find what I need.</span>",
            "time": null
        },
        {
            "user": "Benny",
            "text": "<span class=\"comment-copy\">I used calculateCyclomaticComplexity​ function to compute the cyclomatic complexity, but I found no API to explicitly generate a control flow graph from which I can extract nodes and edges.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm looking for the same thing and for now I found the class PcodeSyntaxTree having a method called getBasicBlocks(), which returns an array of PcodeBlockBasic elements. This second class has methods like getIn and getOut which retrieve incoming and outgoing nodes (basic blocks), respectively. So I think using this methods should be the interface for interacting with the CFG programmatically. But sadly I didn't figure out yet how to get this PcodeSyntaxTree object, but will continue investigating.</p>\n<p>I hope this can help you a bit!</p>\n<p>links:\n<a href=\"http://ghidra.re/ghidra_docs/api/ghidra/program/model/pcode/PcodeSyntaxTree.html\" rel=\"noreferrer\">http://ghidra.re/ghidra_docs/api/ghidra/program/model/pcode/PcodeSyntaxTree.html</a>\n<a href=\"http://ghidra.re/ghidra_docs/api/ghidra/program/model/pcode/PcodeBlockBasic.html\" rel=\"noreferrer\">http://ghidra.re/ghidra_docs/api/ghidra/program/model/pcode/PcodeBlockBasic.html</a></p>\n<p>PS.: Other thing you can do is to study the code of calculateCyclomaticComplexity​ method, which uses this BasickBlock models, I think I will probably do that.</p>\n<p>EDIT:\ngood news I think. I found the DecompleResults class, having the method getHighFunction() which returns a HighFunction object. HighFunction class extends to PcodeSyntaxTree, so it has also the getBasicBlocks method. From that point you can go on.</p>\n<p>DecompileResults class is contained in ghidra.app.decompiler, as well as DecompInterface, which has the decompileFunction() method that returns a DecompileResults object.</p>\n<p>From <a href=\"https://github.com/NationalSecurityAgency/ghidra/blob/master/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/DecompInterface.java\" rel=\"noreferrer\">https://github.com/NationalSecurityAgency/ghidra/blob/master/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/DecompInterface.java</a> :</p>\n<pre><code>// Make calls to the decompiler: \n// *   DecompileResults res = ifc.decompileFunction(func,0,taskmonitor);\n</code></pre>\n<p>links:\n<a href=\"https://github.com/NationalSecurityAgency/ghidra/blob/master/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/DecompInterface.java\" rel=\"noreferrer\">https://github.com/NationalSecurityAgency/ghidra/blob/master/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/DecompInterface.java</a></p>\n<p><a href=\"https://ghidra.re/ghidra_docs/api/ghidra/app/decompiler/DecompileResults.html\" rel=\"noreferrer\">https://ghidra.re/ghidra_docs/api/ghidra/app/decompiler/DecompileResults.html</a>\n<a href=\"https://ghidra.re/ghidra_docs/api/ghidra/program/model/pcode/HighFunction.html\" rel=\"noreferrer\">https://ghidra.re/ghidra_docs/api/ghidra/program/model/pcode/HighFunction.html</a></p>\n<p>EDIT 2:</p>\n<p>I can imagine something like this (in python api):</p>\n<pre><code>import ghidra.app.decompiler as decomp\n\ninterface = decomp.DecompInterface()\n\n# decompileFunction(function, timeout, monitor)\n# according to documentation, function is a Function object, timeout is int,\n# and monitor is an OPTIONAL ARGUMENT of TaskMonitor type. \n# However, it doesn't say anything about a default value for this argument \n# and omitting the arg in the call falls in an error.\n\nresults = interface.decompileFunction(func, 0, taskMonitor)\nhf = results.getHighFunction()\n\nbbList = hf.getBasicBlocks()\n\n# ...\n# ...\n# ...\n\n</code></pre>\n</div>",
            "votes": "6",
            "user": "Mauricio Sanfilippo",
            "time": "May 16, 2019 at 20:38",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Benny",
                    "text": "<span class=\"comment-copy\">Great, you helped me a lot, thank you so much!</span>",
                    "time": null
                },
                {
                    "user": "Mauricio Sanfilippo",
                    "text": "<span class=\"comment-copy\">You're welcome! btw, I've found another useful information, check this answer in a reported issue: <a href=\"https://github.com/NationalSecurityAgency/ghidra/issues/444#issuecomment-484287997\" rel=\"nofollow noreferrer\">github.com/NationalSecurityAgency/ghidra/issues/…</a>  I'm using that Block Model due I couldn't figure out yet how to properly create and configure an instance of the DecompInterface class</span>",
                    "time": null
                },
                {
                    "user": "hEShaN",
                    "text": "<span class=\"comment-copy\">@MauricioSanfilippo did the code above work for you. I used TaskMonitor.DUMMY as for the third parameter and passed a Function objrct but nothing get disassembled for me. Did you find a solution?</span>",
                    "time": null
                },
                {
                    "user": "Mauricio Sanfilippo",
                    "text": "<span class=\"comment-copy\">@hEShaN Nope, I couldn't figure out how to use the DecompInterface. But I went with the SimpleBlockModel approach, which worked fine for me and it seems to be even simpler. You can read <a href=\"https://github.com/NationalSecurityAgency/ghidra/issues/444#issuecomment-484287997\" rel=\"nofollow noreferrer\">github.com/NationalSecurityAgency/ghidra/issues/…</a>  I created some scripts to get and traverse the graph, I can share them with you if you want. It's mostly ad-hoc but it worked, maybe you can improve them if they don't work for you as they currently are</span>",
                    "time": null
                },
                {
                    "user": "hEShaN",
                    "text": "<span class=\"comment-copy\">thank you very much. Do u have a link to those scripts. Thanks again!</span>",
                    "time": null
                }
            ]
        }
    ]
}