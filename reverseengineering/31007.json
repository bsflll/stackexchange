{
    "title": "Reversing internal function, can't call it with injected DLL",
    "link": "https://reverseengineering.stackexchange.com/questions/31007/reversing-internal-function-cant-call-it-with-injected-dll",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm currently learning RE. I've chosen to do so by trying to RE Skyrim for PC. I'm trying to call the ingame function for printing to the console, I'm doing this via an Injected DLL.</p>\n<p>The function call looks like this</p>\n<pre><code>mov eax,tesv.1095FB8\nmov edx,dword ptr ds:[1B10B58]\npush eax\npush tesv.1095FAC\npush edx\ncall &lt;tesv.ConsoleLog&gt;\nadd esp,C\n</code></pre>\n<p>When called the arguments look like this</p>\n<p><a href=\"https://i.sstatic.net/JSQij.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/JSQij.png\"/></a></p>\n<p>I believe the typedef for this function would be</p>\n<pre><code>typedef void(__cdecl *f_ConsoleLog)(uintptr_t ptr1, const char* ptr2, ...);\n</code></pre>\n<p>However calling the function causes an access violation, I've even tried to call it using inline ASM exactly as the aforementioned assembly does.</p>\n<p>I'm quite stuck and don't know where to look next, could anyone point me in the correct direction?</p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "72",
    "tags": [
        "x86",
        "c++",
        "dll-injection"
    ],
    "user": "Tom James",
    "time": "Oct 17, 2022 at 18:02",
    "comments": [],
    "answers_data": []
}