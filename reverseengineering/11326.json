{
    "title": "How to decompile this assembly code? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/11326/how-to-decompile-this-assembly-code",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>Closed.</b> This question is <a href=\"/help/closed-questions\">off-topic</a>. It is not currently accepting answers.\n                                \n                            </div>\n</div>\n</div>\n</div>\n</div>\n<hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n<div class=\"fw-nowrap fc-black-500\">\n<div class=\"d-flex fd-column lh-md\">\n<div class=\"mb0 d-flex\">\n<div class=\"flex--item mr8\">\n<svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\"><path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\"></path></svg>\n</div>\n<p> Questions asking for help <b>reverse-engineering a specific system</b> are off-topic unless they demonstrate an understanding of the concepts involved and clearly identify a specific problem.</p>\n</div>\n<div class=\"mb0 mt6 d-flex\">\n<p class=\"ml24 pl2\">Closed <span class=\"relativetime\" title=\"2015-11-24 05:42:43Z\">9 years ago</span>.</p>\n</div>\n<div class=\"ml24 pl2\">\n</div>\n</div>\n</div>\n<div class=\"mt24 d-flex gsx gs8\">\n<a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/11326/edit\">\n                        Improve this question\n                    </a>\n</div>\n</aside>\n</div>\n<p>How can I convert the following IDA Pro generated disassembly (assembly language) into a higher level language?</p>\n<pre><code>...\nmov edx, Var1\nmov ecx, Var2\nmov eax, edx\nimul ecx\nmov edx, eax\nimul edx, eax\nmov Var3, ecx\n...\n</code></pre>\n<p>I am trying to write a detailed pseudo code describing the function of the provided assembly snippet.</p>\n</div>",
    "votes": "0",
    "answers": 2,
    "views": "8k",
    "tags": [
        "ida",
        "assembly",
        "decompilation"
    ],
    "user": "Rochelle",
    "time": "9 years ago",
    "comments": [
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">Possible duplicate of <a href=\"http://reverseengineering.stackexchange.com/questions/10924/translate-assembly-to-c\">Translate ASSEMBLY to C</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Please note that there is no general 1:1 relation between assembly code and a higher level language, especially if the assembly was crafted manually. And even for compiled code there may be no good translation if the code was heavily optimized.</p>\n<p>Also, note that reverse engineering is not about translating assembly to higher level language, it's about figuring out what's going on. For example, a year ago, someone asked this series of questions [<a href=\"https://reverseengineering.stackexchange.com/questions/6858/create-key-generator-algorithm-from-validation-algo\">1</a>] [<a href=\"https://reverseengineering.stackexchange.com/questions/6945/identify-a-decryption-scheme\">2</a>] [<a href=\"https://reverseengineering.stackexchange.com/questions/8311/reverse-decryption-algorithm\">3</a>]. That guy meticuously translated a lot of assembly to C and wasn't any wiser; in the end, he could have saved himself 2 months if he had been able to recognize the RSA algorithm from the code.</p>\n<p>Of course, a high level language implementation of something might be easier to read than assembly, so translating to high level might be <em>a part</em> of the work, but it's not the biggest part in most cases.</p>\n<p>That said, as you have only 2 opcodes, one of which is <code>mov</code> which is the equivalent to an assignment:</p>\n<pre><code>mov edx, Var1           ; edx=Var1\nmov ecx, Var2           ; ecx=Var2\nmov eax, edx            ; eax=edx (=Var1)\nimul ecx                ; eax=eax*ecx (=Var1*Var2)\nmov edx, eax            ; edx=eax (=Var1*Var2)\nimul edx, eax           ; edx=edx*eax (=(Var1*Var2)^2)\nmov Var3, ecx           ; var3=ecx (=Var2)\n</code></pre>\n<p>So, your code calculates (Var1*Var2)^2, but then assigns Var2 to Var3, not the calculated result. </p>\n<p>If this was a homework question, i'd assume your teacher wanted to see if you're paying attention to detail. Also, it shows that there's no good translation to a high level language, because you don't generally calculate anything in them without using the result. Although, in C, you could have written</p>\n<pre><code>(Var1*Var2)*(Var1*Var2);    // note the expression without an assignment\nVar3=Var2;\n</code></pre>\n<p>but your compiler would normally throw away the first line of this.</p>\n</div>",
            "votes": "7",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Ta Thanh Dinh",
                    "text": "<span class=\"comment-copy\">This is very true \"... reverse engineering is not about translating assembly to higher level language, it's about figuring out what's going on\".</span>",
                    "time": null
                },
                {
                    "user": "Rochelle",
                    "text": "<span class=\"comment-copy\">That makes a lot of sense, could you also help me write a C language snippet for <a href=\"http://reverseengineering.stackexchange.com/questions/11331/how-can-i-convert-the-following-ida-pro-generated-disassembly-assembly-language\" title=\"how can i convert the following ida pro generated disassembly assembly language\">reverseengineering.stackexchange.com/questions/11331/â€¦</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I believe what you need is a <a href=\"https://en.wikipedia.org/wiki/Decompiler\" rel=\"nofollow\">decompiler</a>.</p>\n<p><a href=\"https://derevenets.com/\" rel=\"nofollow\">Snowman</a> is an example of a free decompiler which integrates easily (can be installed as a plugin) with IDA.</p>\n</div>",
            "votes": "1",
            "user": "iam",
            "time": "Nov 14, 2015 at 21:34",
            "is_accepted": false,
            "comments": [
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">And if you don't have IDA, there is <a href=\"https://retdec.com/decompilation/\" rel=\"nofollow noreferrer\">retdec.com/decompilation</a> which supports formats ELF, PE and  COFF and Intel x86, ARM, ARM+Thumb, MIPS, PIC32 and  PowerPC  architectures. Note that actual decompilation process is not on your computer but on theirs, and if you are dealing with somewhat secret code you shouldn't use it.</span>",
                    "time": null
                }
            ]
        }
    ]
}