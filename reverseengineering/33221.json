{
    "title": "In Ghidra, how do I add AddressSpaces, both through the UI and via a Java extension?",
    "link": "https://reverseengineering.stackexchange.com/questions/33221/in-ghidra-how-do-i-add-addressspaces-both-through-the-ui-and-via-a-java-extens",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm working on Java loaders for the old TI-99/4A microcomputer. As well as the CPU's RAM/ROM address space it has a separate address space for a special TI kind of serial ROM called GROM. (It's actually more complicated than this).</p>\n<p>I want to add the GROM address space for file formats which include bytes that belong in the GROM but I don't understand enough about how Ghidra address spaces work.</p>\n<p>The docs say multiple address spaces are supported so you can have multiple address <code>0x0000</code> each in their own address space for instance. I have used the \"other\" address space to load file format headers but haven't yet added custom address spaces.</p>\n<p>There are also overlays. But these are to do with memory blocks, which are parts of an address space. Intuitively this is to me a second way to have multiple blocks of memory that would live in the same address range, but not at the same time. Many OSes supported overlays until roughly the early 32-bit era I think. I believe some platforms also use Ghidra's overlay support for banked RAM and ROM.</p>\n<p>But are Ghidra's overlays also the way to achieve additional address spaces? What am I missing?</p>\n<hr/>\n<p><strong>Update</strong></p>\n<p>One thing I was missing is that I don't usually program Java and the constructors are not members of <a href=\"https://ghidra.re/ghidra_docs/api/ghidra/program/model/address/AddressSpace.html\" rel=\"nofollow noreferrer\"><code>AddressSpace</code></a>, which is an <code>interface</code>, but are members of its implementations, <a href=\"https://ghidra.re/ghidra_docs/api/ghidra/program/model/address/GenericAddressSpace.html\" rel=\"nofollow noreferrer\"><code>GenericAddressSpace</code></a>, <a href=\"https://ghidra.re/ghidra_docs/api/ghidra/program/model/address/OverlayAddressSpace.html\" rel=\"nofollow noreferrer\"><code>OverlayAddressSpace</code></a>, <a href=\"https://ghidra.re/ghidra_docs/api/ghidra/program/model/address/ProtectedAddressSpace.html\" rel=\"nofollow noreferrer\"><code>ProtectedAddressSpace</code></a>, and <a href=\"https://ghidra.re/ghidra_docs/api/ghidra/program/model/address/SegmentedAddressSpace.html\" rel=\"nofollow noreferrer\"><code>SegmentedAddressSpace</code></a>.</p>\n<p>But I haven't figured out how to use them yet. I've tried</p>\n<pre class=\"lang-java prettyprint-override\"><code>AddressSpace addressSpace = new GenericAddressSpace(\n  \"GROM\", // name of the address space\n  16,     // size - number of bits for the address space\n  AddressSpace.TYPE_CODE,\n  0x994);       // a unique ID for the address space (0 to 32767)\n</code></pre>\n<p>But when I try to add a memory block to it the usual way:</p>\n<pre class=\"lang-java prettyprint-override\"><code>Address loadAddress = addressSpace.getAddress(0x6000);\n\nprogram.getMemory().createInitializedBlock(\n  entryName,\n  loadAddress,\n  inputStream,\n  size,\n  monitor, false);\n</code></pre>\n<p>results in the error <code>Block may not be created with unrecognized address space</code>, which doesn't make sense to me. So I'm obviously still missing something.</p>\n<hr/>\n<p><strong>Update 2</strong></p>\n<p>While <code>AddressFactory</code> doesn't have a way to add the new <code>AddressSpace</code>, there is also <code>DefaultAddressFactory</code> which has <a href=\"http://127.0.0.1:60550/help/nftopic/jar:file:/Users/hippietrail/Downloads/ghidra_11.1.2_PUBLIC/docs/GhidraAPI_javadoc.zip!/api/ghidra/program/model/address/DefaultAddressFactory.html#addAddressSpace(ghidra.program.model.address.AddressSpace)\" rel=\"nofollow noreferrer\"><code>protected void addAddressSpace(AddressSpace space)</code></a>, but since it's <code>protected</code> I can't call it.</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "37",
    "tags": [
        "ghidra"
    ],
    "user": "hippietrail",
    "time": "Sep 13, 2024 at 8:38",
    "comments": [
        {
            "user": "hippietrail",
            "text": "<span class=\"comment-copy\">It seems that in Ghidra, address spaces are a property only of the processor, not of the program or file. I don't know what this implies for platforms with multiple CPU architectures that run simultaneously.</span>",
            "time": null
        }
    ],
    "answers_data": []
}