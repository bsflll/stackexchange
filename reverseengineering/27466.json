{
    "title": "analyze how data is read in android usb device",
    "link": "https://reverseengineering.stackexchange.com/questions/27466/analyze-how-data-is-read-in-android-usb-device",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've a <strong>huawei envizion 360</strong>, which doesn't provide any API for other application. But I want to read raw data from this device, to an android or to a raspberry-pi for debugging and development purpose. I need <a href=\"https://play.google.com/store/apps/details?id=com.huawei.cvIntl60&amp;hl=en&amp;gl=US\" rel=\"nofollow noreferrer\">an android application</a> to record video or take picture from this external device.</p>\n<p>But when I tried to debug this application using Android Studio, I got :</p>\n<pre><code>Missing debug symbols\n                    To debug the APK, native libraries (*.so files) must have debug symbols.\n                    The following libraries are missing debug symbols:\n                    * libViewController.so\n                    * libijkffmpeg.so\n                    * libijkplayer.so\n                    * libijksdl.so\n                    * librtmpClient.so\n</code></pre>\n<p>I was told that I can't get those debug symbol, due to r8 processing.</p>\n<p>So my question is how can read raw frames/data from this device. Any idea ?</p>\n<p>I just have to read data so that I can embed data directly in my application. So my main goal is to decode how those data are being read.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "183",
    "tags": [
        "debugging",
        "android",
        "usb",
        "debugging-symbols",
        "api-reversing"
    ],
    "user": "Maifee Ul Asad",
    "time": "Apr 14, 2021 at 6:44",
    "comments": [
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">Android r8 is only relevant for Java/Dex code. You have here native code in form of .so files. Typically those files are always stripped of debugging symbols. As native code is something completely different than dex code r8 has nothing to do with those libraries.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You have two possible approaches in here:</p>\n<ul>\n<li>Analyze the APK of the device, reverse engineer it and try to make sense of how it communicates with the USB device.</li>\n<li>Connect the USB device to a computer, sniff the USB packets, and try to make sense of how it communicates with the host.</li>\n</ul>\n<p>I believe the former would be straightforward and simpler than the latter, not necessarily always though.</p>\n</div>",
            "votes": "1",
            "user": "Abdullah Mohamed",
            "time": "Apr 14, 2021 at 8:57",
            "is_accepted": false,
            "comments": []
        }
    ]
}