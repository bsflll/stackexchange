{
    "title": "Reversing SYSTEM Process",
    "link": "https://reverseengineering.stackexchange.com/questions/32695/reversing-system-process",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm doing some vulnerability research against a Windows server application that serves some update files that clients can download. Using TcpView/netstat, I can see that there is an open port listening to handle update requests. However, the process is running as SYSTEM.</p>\n<p>I'm familiar with the technique of hooking recv / recvfrom on applications to start reversing the protocol, but that doesn't seem to be possible in this case. I'm not really sure how to figure out what binary the code handling these requests is from, after looking at the process on Process Explorer / Hacker. Any tips or tricks you all can recommend?</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "54",
    "tags": [
        "windbg",
        "windows-10",
        "vulnerability-analysis"
    ],
    "user": "BobNewby",
    "time": "Feb 2, 2024 at 21:48",
    "comments": [
        {
            "user": "Ali Rizvi-Santiago",
            "text": "<span class=\"comment-copy\">sysinternals' process monitor can sometimes give you backtraces if you're trying to avoid digging invasively...</span>",
            "time": null
        },
        {
            "user": "Yotamz",
            "text": "<span class=\"comment-copy\">If what you mean is that the process is a normal executable that is running as the \"SYSTEM\" user, then you can run a debugger in elevated mode and attach to it as any other process.</span>",
            "time": null
        },
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">AFAIR running a debugger with admin permission is not enough, you need SYSTEM permissions. You can use psexec to run executables of your choice with SYSTEM permissions, so you are at the same permission level and can access the process you want at run-time with debugging tools. Anyway a network process running with SYSTEM permissions is a WTF of it's own.</span>",
            "time": null
        },
        {
            "user": "BobNewby",
            "text": "<span class=\"comment-copy\">@Robert - Thanks for the comment. I'll give that a shot.</span>",
            "time": null
        }
    ],
    "answers_data": []
}