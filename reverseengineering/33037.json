{
    "title": "SENT transmission decoding CRC",
    "link": "https://reverseengineering.stackexchange.com/questions/33037/sent-transmission-decoding-crc",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am decoding a SENT transmission (Enhanced serial message format with 12-bit data field and 8-bit message id) for an electronic sensor and have it set up to find each packet of 18 messages and read the required data for the CRC (given in the first 6 messages as the sync bit #2). My output of my code is as follows (Python):</p>\n<p>Packet in message:</p>\n<pre><code> 1 ['1000', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 2 ['1100', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 3 ['1100', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 4 ['1000', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 5 ['1000', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 6 ['1000', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 7 ['0100', '0011', '1110', '0101', '1000', '1101', '0100', '0101']  \n 8 ['0100', '0011', '1110', '0101', '1011', '1100', '0100', '1110']  \n 9 ['0100', '0011', '1110', '0101', '1000', '1101', '0100', '1100']  \n10 ['0100', '0011', '1110', '0101', '1000', '1101', '0100', '0101']  \n11 ['0000', '0011', '1110', '0101', '1000', '1101', '0100', '0101']  \n12 ['1100', '0011', '1110', '0101', '1000', '1101', '0100', '0101']  \n13 ['0100', '0011', '1110', '0101', '1011', '1100', '0100', '1110']  \n14 ['0000', '0011', '1110', '0110', '0000', '1101', '0100', '1011']  \n15 ['1000', '0011', '1110', '0110', '0000', '1101', '0100', '1011']  \n16 ['1100', '0011', '1110', '0101', '1011', '1100', '0100', '1110']  \n17 ['1000', '0011', '1110', '0101', '1000', '1101', '0100', '0101']  \n18 ['0000', '0011', '1110', '0101', '1000', '1101', '0100', '1100']  \n\nCRC:    011000\nData 1: 101010\nData 2: 100011\nData 3: 100001\nData 4: 110100\n</code></pre>\n<p>Packet in message:</p>\n<pre><code> 1 ['1100', '0011', '1110', '0101', '1011', '1100', '0100', '1110']   \n 2 ['1100', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 3 ['1100', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 4 ['1100', '0011', '1110', '0110', '0011', '1100', '0100', '0000']   \n 5 ['1100', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 6 ['1100', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 7 ['0100', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 8 ['0000', '0011', '1110', '0101', '1011', '1100', '0100', '1110']   \n 9 ['0100', '0011', '1110', '0101', '1000', '1101', '0100', '1100']   \n10 ['0000', '0011', '1110', '0101', '1000', '1101', '0100', '0101']  \n11 ['1000', '0011', '1110', '0101', '1011', '1100', '0100', '1110']  \n12 ['0100', '0011', '1110', '0101', '1000', '1101', '0100', '0101']  \n13 ['0000', '0011', '1110', '0101', '0000', '1101', '0100', '0111']  \n14 ['1100', '0011', '1110', '0101', '1011', '1100', '0100', '1110']  \n15 ['1000', '0011', '1110', '0101', '1000', '1101', '0100', '0101']  \n16 ['0000', '0011', '1110', '0101', '1000', '1101', '0100', '0101']  \n17 ['0000', '0011', '1110', '0101', '1011', '1100', '0100', '1110']  \n18 ['0000', '0011', '1110', '0101', '1000', '1101', '0100', '1100']  \n\nCRC:    111111\nData 1: 100010\nData 2: 000110\nData 3: 001101\nData 4: 000000\n</code></pre>\n<p>Packet in message:</p>\n<pre><code> 1 ['1000', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 2 ['1000', '0011', '1110', '0101', '0011', '1100', '0100', '1100']   \n 3 ['1100', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 4 ['1000', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 5 ['1000', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 6 ['1000', '0011', '1110', '0101', '1011', '1100', '0100', '1110']   \n 7 ['0000', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 8 ['0000', '0011', '1110', '0101', '1000', '1101', '0100', '0101']   \n 9 ['0100', '0011', '1110', '0101', '0011', '1100', '0100', '1100']   \n10 ['0100', '0011', '1110', '0101', '1000', '1101', '0100', '0101']  \n11 ['0000', '0011', '1110', '0101', '0000', '1101', '0100', '0111']  \n12 ['1000', '0011', '1110', '0101', '0011', '1100', '0100', '1100']  \n13 ['0000', '0011', '1110', '0101', '0000', '1101', '0100', '0111']  \n14 ['0000', '0011', '1110', '0101', '1000', '1101', '0100', '0101']  \n15 ['0000', '0011', '1110', '0101', '1011', '1100', '0100', '1110']  \n16 ['0100', '0011', '1110', '0101', '1000', '1101', '0100', '0101']  \n17 ['0111', '0011', '1110', '0101', '0000', '1101', '0100', '0111']  \n18 ['0111', '0011', '1110', '0101', '1000', '1101', '0100', '1100']  \n\nCRC:    001000\nData 1: 000010\nData 2: 100001\nData 3: 000000\nData 4: 101010\n</code></pre>\n<p>The first block contains the full packet of data with the CRC checksum, and Message Data bits at the bottom. The following two images contain the same information but for different packets.</p>\n<p>With an online calculation, the verification output with the checksum CRC appended onto the end of the data messages (32 total bits) with the polynomial x^6 + x^4 + x^3 + 1 will return 0b000001 for almost all messages. I was wondering if the output for the verification could be changed so that instead of 0b000000, the output for a successful transmission was 0b000001?</p>\n<p>The link to the website I used for calculation is here: <a href=\"https://www.ghsi.de/pages/subpages/Online%20CRC%20Calculation/index.php?Polynom=1011001&amp;Message=000000%0D%0A000000%0D%0A001011%0D%0A110100%0D%0A011001\" rel=\"nofollow noreferrer\">https://www.ghsi.de/pages/subpages/Online%20CRC%20Calculation/index.php?Polynom=1011001&amp;Message=000000%0D%0A000000%0D%0A001011%0D%0A110100%0D%0A011001</a></p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "23",
    "tags": [
        "encodings",
        "serial-communication",
        "crc"
    ],
    "user": "Electrical Computer Man",
    "time": "Jun 19, 2024 at 12:58",
    "comments": [],
    "answers_data": []
}