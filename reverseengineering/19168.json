{
    "title": "Game's anti-cheat complains when driver test-signing mode is on",
    "link": "https://reverseengineering.stackexchange.com/questions/19168/games-anti-cheat-complains-when-driver-test-signing-mode-is-on",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I use Windows 7 64 bit, thus in order to load a test-signed driver, I need to enable test-signing mode.</p>\n<p>My driver bypasses some of the game's anti-cheat features to allow me to run a debugger and attach to the program.</p>\n<p>However, when I enable the test-signing mode and launch the game, its anti-cheat service detects test-signing is enabled and terminates the game.</p>\n<p>I also tried to disable the driver signature enforcement by restarting the computer and pressing <kbd>F8</kbd>, although the result is the same.</p>\n<p>I thought about a possible solution: set the <code>g_CiEnabled</code> variable to <code>TRUE</code> after the game's run (however, as I can't run my driver, I'd need to find a vulnerability in a signed driver and set it from there, although I think it's not worth doing all that stuff.).</p>\n<p>Is there an easier way to run the test-signed driver on 64 bit system without test-signing mode?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "windows",
        "x86-64",
        "kernel-mode",
        "driver"
    ],
    "user": "anx199",
    "time": "Aug 27, 2018 at 20:28",
    "comments": [
        {
            "user": "NirIzr",
            "text": "<span class=\"comment-copy\">What about, using your driver, disabling the test-signing in-game check, so that the game will not terminate when test-signing is on?</span>",
            "time": null
        },
        {
            "user": "anx199",
            "text": "<span class=\"comment-copy\">@nirlzr AFAIK, to enable/disable test-signing, one needs to restart computer</span>",
            "time": null
        },
        {
            "user": "NirIzr",
            "text": "<span class=\"comment-copy\">You are correct but I'm not suggesting you enable/disable test-signing. I suggest you <i>patch</i> the piece of code that tests whether test-signing is enabled <i>in the game executable</i>.</span>",
            "time": null
        },
        {
            "user": "anx199",
            "text": "<span class=\"comment-copy\">@NirIzr Oh, you're right! I don't know why I didn't think about it earlier, maybe I thought it can be bypassed easier. Thanks!</span>",
            "time": null
        },
        {
            "user": "NirIzr",
            "text": "<span class=\"comment-copy\">Great, let me turn that to an answer then...</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Sometimes the answer can really be more simple then you'd think.</p>\n<p>One approach you could take is that instead of getting your driver to load without test-signing (which seems to be your initial direction of approach), you could <em>prevent the debugged executable from detecting test-signing it on</em>.</p>\n<p><a href=\"https://social.msdn.microsoft.com/Forums/windowsdesktop/en-US/e6c1be93-7003-4594-b8e4-18ab4a75d273/detecting-testsigning-onoff-via-api?forum=windowsgeneraldevelopmentissues\" rel=\"nofollow noreferrer\">This</a> is a link with a few suggestions on how one may detect if test-signing is enabled or not, you can search for similar looking code (e.g. calls to <code>NtQuerySystemInformation</code> with the <a href=\"https://www.geoffchappell.com/studies/windows/km/ntoskrnl/api/ex/sysinfo/codeintegrity.htm\" rel=\"nofollow noreferrer\"><code>SystemCodeIntegrityInformation</code></a>).</p>\n<p>An alternative solution if your main goal is researching the executable at hand, you could consider using windows versions <em>prior to Vista</em>, where loading your own drivers is far easier.</p>\n</div>",
            "votes": "1",
            "user": "0xC0000022L",
            "time": "Apr 5, 2024 at 14:59",
            "is_accepted": true,
            "comments": []
        }
    ]
}