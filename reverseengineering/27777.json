{
    "title": "Java says \"ghidra\" is unknown protocol when creating project on linux",
    "link": "https://reverseengineering.stackexchange.com/questions/27777/java-says-ghidra-is-unknown-protocol-when-creating-project-on-linux",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><strong>Update:</strong> I installed Eclipse and PyDev in Linux and my code works now. This confirms it was an issue setting up the Python/Jython paths. I would still like to know how to import ghidra.jar into jython so that I can use the command line in the future. Any help here would be greatly appreciated.</p>\n<p>I am making a ghidra project on Linux. I am using a Ghidra jar and jython to code my application. I am adding ghidra to my path with system.path.append() and I am running my program with\n<code>jython main.py</code>.</p>\n<p>My code worked with Pydev in Eclipse on Windows, but on Linux I am getting</p>\n<blockquote>\n<p>java.lang.IllegalArgumentException: java.lang.IllegalArgumentException: java.net.MalformedURLException: unknown protocol: ghidra</p>\n</blockquote>\n<p>when I reach <code>ghidraProject.createProject()</code>. I investigated the source and I found that the error occurs when Java tries to <a href=\"https://docs.oracle.com/javase/7/docs/api/java/net/URL.html\" rel=\"nofollow noreferrer\">make a url</a> from a string. I know Ghidra has a <a href=\"http://ghidra.re/ghidra_docs/api/ghidra/framework/protocol/ghidra/Handler.html\" rel=\"nofollow noreferrer\">protocol handler</a> which should be handling the protocol \"ghidra\". I assume Java doesn't register the protocol handler somehow. I tried <code>Handler.registerHandler()</code> with no luck.</p>\n<p>Why is \"ghidra\" an unknown protocol on Linux, but the same code works (save for the PyDev environment) in Eclipse/Windows?</p>\n<p>Error printout:\n<a href=\"https://i.sstatic.net/4zZlv.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/4zZlv.png\"/></a></p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "261",
    "tags": [
        "ghidra"
    ],
    "user": "rbe",
    "time": "Jun 29, 2023 at 10:14",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You are trying to use Ghidra without initializing it first, Ghidra isn't really designed as a typical Java library which you could use like any other <code>.jar</code>. If you want to check out how the Ghidra provided <code>pythonRun</code> entry point handles a minimal jython REPL embedded inside Ghidra, check out: <a href=\"https://github.com/NationalSecurityAgency/ghidra/blob/da94eb86bd2b89c8b0ab9bd89e9f0dc5a3157055/Ghidra/Features/Python/src/main/java/ghidra/python/PythonRun.java\" rel=\"nofollow noreferrer\">https://github.com/NationalSecurityAgency/ghidra/blob/da94eb86bd2b89c8b0ab9bd89e9f0dc5a3157055/Ghidra/Features/Python/src/main/java/ghidra/python/PythonRun.java</a></p>\n<p>The crucial part here is:</p>\n<pre class=\"lang-java prettyprint-override\"><code>ApplicationConfiguration configuration = new HeadlessGhidraApplicationConfiguration();\nApplication.initializeApplication(layout, configuration);\n</code></pre>\n<p>which runs through various initialization steps that the overall Ghidra code assumes to have happened when being executed, one of them being the setup for the <code>ghidra://</code> protocol handler.\nSpecifically the call to <code>ghidra.framework.protocol.ghidra.Handler.registerHandler()</code> happens inside <code>ghidra.ProjectInitializer#run</code>.</p>\n</div>",
            "votes": "4",
            "user": "Florian Magin",
            "time": "May 8, 2023 at 9:20",
            "is_accepted": false,
            "comments": [
                {
                    "user": "rbe",
                    "text": "<span class=\"comment-copy\">I initialized the application in my code:   <code>configuration = HeadlessGhidraApplicationConfiguration() configuration.setInitializeLogging(False)  Application.initializeApplication(GhidraJarApplicationLayout(), configuration)</code>  I think the issue is that I'm not replicating how PyDev creates the Jython environment.</span>",
                    "time": null
                },
                {
                    "user": "Florian Magin",
                    "text": "<span class=\"comment-copy\">I'd need more details on your project and how you are starting it then, especially if your Eclipse/PyDev install has the Ghidra Dev plugin installed</span>",
                    "time": null
                }
            ]
        }
    ]
}