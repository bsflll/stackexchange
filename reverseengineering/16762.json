{
    "title": "Unpacking ROM dump",
    "link": "https://reverseengineering.stackexchange.com/questions/16762/unpacking-rom-dump",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a ROM dump from an unknown controller, which must be reversed (as a task). It looks like encrypted, packed or obfuscated. Binwalk did not give any information(\"cisco os experimental microcode for firmware\"), manual searching for know signatures (packers, CPU, filesystems)  has not produced any result. \nIn hex you can see pieces of repeating open text (0x6AD869h - 0x6AE6D3, 0x949C35 - EOF), first few string of file are this strings with some bit shift(probably), but i could't find a some system for this. \nOpen text:</p>\n<pre><code>00949c40  53 65 65 6b 20 41 47 52  45 45 4d 45 4e 54 20 66  |Seek AGREEMENT f|\n00949c50  6f 72 20 74 68 65 20 64  61 74 65 20 6f 66 20 63  |or the date of c|\n00949c60  6f 6d 70 6c 65 74 69 6f  6e 2e 00 53 65 65 6b 20  |ompletion..Seek |\n00949c70  41 47 52 45 45 4d 45 4e  54 20 66 6f 72 20 74 68  |AGREEMENT for th|\n00949c80  65 20 64 61 74 65 20 6f  66 20 63 6f 6d 70 6c 65  |e date of comple|\n00949c90  74 69 6f 6e 2e 00 53 65  65 6b 20 41 47 52 45 45  |tion..Seek AGREE|\n</code></pre>\n<p>First few strings:</p>\n<pre><code>00000000  da 7c 77 5b 08 c6 31 c5  45 d1 eb bd 4f 57 20 66  |.|w[..1.E...OW f|\n00000010  6e 73 20 74 68 80 8a 56  61 74 65 20 6f 83 8a 51  |ns th..Vate o..Q|\n00000020  6e 6d 70 6c 65 74 69 5b  6e 3f d6 e3 65 0f 8d f4  |nmpleti[n?..e...|\n00000030  a8 e4 94 e0 2e 28 37 20  31 4c 66 6f 72 20 74 68  |.....(7 1Lfor th|\n00000040  65 20 64 61 74 74 f6 13  67 20 63 6f 6d 95 c6 57  |e datt..g com..W|\n00000050  74 69 6f 6e fd 4f 2b 26  42 6e 39 17 14 08 52 ad  |tion.O+&amp;Bn9...R.|\n00000060  18 17 a4 15 20 77 b9 6a  a0 74 48 65 a0 64 03 44  |.... w.j.tHe.d.D|\n00000070  31 82 c1 66 25 66 6d 6e  3d 03 1d 15 44 26 39 0e  |1..f%fmn=...D&amp;9.|\n00000080  61 24 0e 45 18 45 33 2e  37 36 45 4d 45 4e 54 20  |a$.E.E3.76EMENT |\n00000090  66 6f 72 20 74 68 65 20  39 61 74 65 21 6f a4 13  |for the 9ate!o..|\n000000a0  63 6f 6d 70 6c 65 74 06  92 91 d1 a3 e4 1a ac b5  |complet.........|\n</code></pre>\n<p>See:</p>\n<ul>\n<li><a href=\"https://drive.google.com/file/d/1MuGBQQgHv73W7697N6tnU7EJ1QSBaNh4/view?usp=sharing\" rel=\"nofollow noreferrer\">Firmware.rom</a></li>\n<li><a href=\"https://drive.google.com/file/d/1Pey2XEQX9wGvh2knY2QjdHPsXBqC2vfb/view\" rel=\"nofollow noreferrer\">hex dump</a></li>\n</ul>\n<p>Can anyone advise how to encrypt/unpack this, or what am I doing wrong? </p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "706",
    "tags": [
        "binary-analysis",
        "firmware",
        "deobfuscation",
        "rom"
    ],
    "user": "Vougs1",
    "time": "Nov 15, 2017 at 10:14",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><code>Seek AGREEMENT for the date of completion.\\0</code> or <code>Seek AGREEMENT for the date of completion.Â </code> is a key applied by either addition or XORing input with output. You can see how it lines up with the hexdump. It should be relatively easy to write a program which would remove this level of obfuscation.</p>\n<pre><code>00000000  da 7c 77 5b 08 c6 31 c5  45 d1 eb bd 4f 57 20 66  |.|w[..1.E...OW f|\n00000010  6e 73 20 74 68 80 8a 56  61 74 65 20 6f 83 8a 51  |ns th..Vate o..Q|\n00000020  6e 6d 70 6c 65 74 69 5b  6e 3f d6 e3 65 0f 8d f4  |nmpleti[n?..e...|\n00000030  a8 e4 94 e0 2e 28 37 20  31 4c 66 6f 72 20 74 68  |.....(7 1Lfor th|\n00000040  65 20 64 61 74 74 f6 13  67 20 63 6f 6d 95 c6 57  |e datt..g com..W|\n00000050  74 69 6f 6e fd 4f 2b 26  42 6e 39 17 14 08 52 ad  |tion.O+&amp;Bn9...R.|\n\n00000000  53 65 65 6b 20 41 47 52  45 45 4d 45 4e 54 20 66  |Seek AGREEMENT f|\n00000010  6f 72 20 74 68 65 20 64  61 74 65 20 6f 66 20 63  |or the date of c|\n00000020  6f 6d 70 6c 65 74 69 6f  6e 2e 00 53 65 65 6b 20  |ompletion..Seek |\n00000030  41 47 52 45 45 4d 45 4e  54 20 66 6f 72 20 74 68  |AGREEMENT for th|\n00000040  65 20 64 61 74 65 20 6f  66 20 63 6f 6d 70 6c 65  |e date of comple|\n00000050  74 69 6f 6e 2e 00                                 |tion..          |\n</code></pre>\n</div>",
            "votes": "1",
            "user": "Vladislav Ivanov",
            "time": "Nov 14, 2017 at 8:48",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Vougs1",
                    "text": "<span class=\"comment-copy\">John Doe, thanks for the tip! Figured out.</span>",
                    "time": null
                }
            ]
        }
    ]
}