{
    "title": "Binary Exploitation",
    "link": "https://reverseengineering.stackexchange.com/questions/31434/binary-exploitation",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to learn binary exploitation. I can modify the binary behaviour with gdb, but I have not understood how to exploit the binary in C.</p>\n<p>I've found some references on \"<strong>Hacking - the art of exploitation</strong>\", but I cannot completely figure out how to exploit the binary. Could someone show me some examples or give me a guideline?</p>\n<p>Below is the simple code I am trying to exploit (force the app to run execl):</p>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;unistd.h&gt;\n\nint main(int argc, char *argv[]) \n{\n  int shell= 0;\n\n\n  if (shell==0) {\n  printf(\"Bye\\n\");\n  return 1;\n  \n  }\n\n  execl(\"/bin/sh\", \"/bin/sh\", \"-p\", (void *) NULL);\n  perror(\"exec\");\n  return 1;\n}\n  \n</code></pre>\n<p>with objdump:</p>\n<pre><code>08048486 &lt;main&gt;:\n 8048486:       55                      push   %ebp\n 8048487:       89 e5                   mov    %esp,%ebp\n 8048489:       83 ec 04                sub    $0x4,%esp\n...\n 80484b4:       68 68 85 04 08          push   $0x8048568\n 80484b9:       68 68 85 04 08          push   $0x8048568\n 80484be:       e8 8d fe ff ff          call   8048350 &lt;execl@plt&gt;\n 80484c3:       83 c4 10                add    $0x10,%esp\n...\n 80484d8:       c9                      leave  \n 80484d9:       c3                      ret    \n 80484da:       66 90                   xchg   %ax,%ax\n 80484dc:       66 90                   xchg   %ax,%ax\n 80484de:       66 90                   xchg   %ax,%ax\n</code></pre>\n<p>Thank you</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "113",
    "tags": [
        "c",
        "gdb",
        "exploit"
    ],
    "user": "LianoQ",
    "time": "Jan 19, 2023 at 7:36",
    "comments": [
        {
            "user": "LianoQ",
            "text": "<span class=\"comment-copy\">with GDB I can force the binary to execute what is at 0x8048568 (I can even modify it), but I am trying to do it with  an injection script. Thank you</span>",
            "time": null
        },
        {
            "user": "sudhackar",
            "text": "<span class=\"comment-copy\">What do you mean by an \"injection script\"? The program doesn't take any input. Are you missing some line in the C code?</span>",
            "time": null
        },
        {
            "user": "LianoQ",
            "text": "<span class=\"comment-copy\">Hi, I mean, run a program in runtime against the binary that  forces the binary to call  0x8048350 skipping  \"if (shell==0)\"</span>",
            "time": null
        },
        {
            "user": "raspiduino",
            "text": "<span class=\"comment-copy\">What if you use IDA or Ghidra to patch the program, force it to skip the branch to <code>printf</code> and <code>return 1</code>, then generate a hex diff, then use the script to apply that hex diff?</span>",
            "time": null
        },
        {
            "user": "LianoQ",
            "text": "<span class=\"comment-copy\">I was wondering if there was a way to force the program in runtime to execute  \"execl\" using binary privileges (setuid)</span>",
            "time": null
        }
    ],
    "answers_data": []
}