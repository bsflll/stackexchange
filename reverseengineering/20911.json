{
    "title": "Is there a way to generate a PE from a web assembly module?",
    "link": "https://reverseengineering.stackexchange.com/questions/20911/is-there-a-way-to-generate-a-pe-from-a-web-assembly-module",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am in the process of analysing a large web assembly. I have the compiled .wasm file and using the tools available I can convert this to a .wat text representation. Currently, I am doing the following to convert each function within the wasm into its jit-ed assembly code:</p>\n<pre><code>// wasm is the binary; loaded from file\nvar module = new WebAssembly.Module(wasm);\nvar code = wasmExtractCode(module);\nvar regions = code.segments.filter(s =&gt; s.kind === 0);\nregions.map(function(seg) {\n      var segmentcode = code.code.subarray(seg.funcBodyBegin, seg.funcBodyEnd);\n      // segmentcode contains the assembly code\n});\n</code></pre>\n<p>Is there a way of using the code extracted in this way? Ideally, I'd like to generate a PE or some type of file I can drop in Ida and explore and analyse. I understand though that the format of wasm and PE files are fundamentally different and so this is a pretty big ask. If I dump the code from each function into a file and align each function properly, I can open the file in Ida and manually mark the function start and end, and I am then able to analyse it nicely. Doing this for over 27000 functions is a bit of an ask, though...</p>\n<p>Any ideas?\nTIA</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "342",
    "tags": [
        "ida",
        "x86",
        "pe"
    ],
    "user": "user27846",
    "time": "Mar 18, 2019 at 14:56",
    "comments": [],
    "answers_data": []
}