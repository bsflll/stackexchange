{
    "title": "IDA Pro: __GETDS breaks decompiler output",
    "link": "https://reverseengineering.stackexchange.com/questions/22767/ida-pro-getds-breaks-decompiler-output",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>when trying to decompile some interrupt service routines done with Watcom, the __GETDS call at the beginning of the functions will break the decompiler output completely.\nHere's the disassembly:\n<a href=\"https://i.sstatic.net/UuPFE.png\" rel=\"nofollow noreferrer\"><img alt=\"Disassembly\" src=\"https://i.sstatic.net/UuPFE.png\"/></a></p>\n<p>And here the decompiler output:\n<a href=\"https://i.sstatic.net/oJDoP.png\" rel=\"nofollow noreferrer\"><img alt=\"Decompiler\" src=\"https://i.sstatic.net/oJDoP.png\"/></a></p>\n<p>What could be the reason for this? Is there a way to fix this? The only thing that worked for me was creating a separate function for the code below __GETDS, but that's not really satisfying.\nThanks in advance!</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "105",
    "tags": [
        "ida",
        "decompiler"
    ],
    "user": "Mentulatus",
    "time": "Dec 17, 2019 at 13:29",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This happens because <code>__GETDS</code> is placed just after the entrypoint code and is initially detected by IDA as part of the <code>start</code> function:</p>\n<pre><code>cseg01:0001AAD1                 push    eax\ncseg01:0001AAD2                 mov     eax, 0\ncseg01:0001AAD7                 mov     edx, 0Fh\ncseg01:0001AADC                 call    __FiniRtns\ncseg01:0001AAE1                 pop     eax\ncseg01:0001AAE2                 mov     ah, 4Ch ; 'L'\ncseg01:0001AAE4                 int     21h             ; DOS - 2+ - QUIT WITH EXIT CODE (EXIT)\ncseg01:0001AAE4                                         ; AL = exit code\ncseg01:0001AAE6                 mov     eax, eax\ncseg01:0001AAE8\ncseg01:0001AAE8 __GETDS:                                ; CODE XREF: __int23_handler+A↓p\ncseg01:0001AAE8                                         ; __int_ctrl_break_handler+A↓p ...\ncseg01:0001AAE8 __GETDSStart_:\ncseg01:0001AAE8                 mov     ds, cs:word_1AAF1\ncseg01:0001AAF0                 retn\ncseg01:0001AAF0 start           endp\n</code></pre>\n<p>Since the call is to a middle of an existing function, IDA considers it to be non-returning and stops the code flow. The solution is to break <code>start</code> after the <code>int 21h</code> call (Set function end, or 'E' key) and create a proper function for <code>__GETDS</code> itself. Then you will need to reanalyze all call sites (and maybe recreate the functions) so that code flow is properly updated. </p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Dec 17, 2019 at 13:51",
            "is_accepted": true,
            "comments": []
        }
    ]
}