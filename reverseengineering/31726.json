{
    "title": "determine if 2 byte checksum is CRC-16 based",
    "link": "https://reverseengineering.stackexchange.com/questions/31726/determine-if-2-byte-checksum-is-crc-16-based",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have pairs of data / messages with what I believe to be CRC-16</p>\n<p>I know for a fact the bit order of each individual byte is reversed (at least in C# on x86 platform, I have to flip the binary around)</p>\n<p>Can someone help confirm if it is CRC or not?</p>\n<p>Sample message pairs with valid checksums (I can create as many of these samples as needed)</p>\n<p>I can also create samples with less 00 bytes, i.e. more byte values instead of 00, and I can also create samples of a different length if needed.</p>\n<p><strong>Sample 1:</strong> FFFFFFFFFFFF /</p>\n<p>0100100A00000000000000000000FFFFFFFFFF<strong>72BE</strong></p>\n<p><strong>Sample 2:</strong> 000000000000 /</p>\n<p>0100100A00000000000000000000FFFFFFFFFF<strong>2A3D</strong></p>\n<p><strong>Sample 3:</strong> 000000000001 /</p>\n<p>0100100A00000000000000000000FFFFFFFFFF<strong>89F7</strong></p>\n<p><strong>Sample 4:</strong> 000000000002 /</p>\n<p>0100100A00000000000000000000FFFFFFFFFF<strong>0864</strong></p>\n<p><strong>Sample 5:</strong> 000000000003 /</p>\n<p>0100100A00000000000000000000FFFFFFFFFF<strong>ABAE</strong></p>\n<p><strong>Sample 6:</strong> 000000000004 /</p>\n<p>0100100A00000000000000000000FFFFFFFFFF<strong>9396</strong></p>\n<p><strong>Sample 7:</strong> 000000000005 /</p>\n<p>0100100A00000000000000000000FFFFFFFFFF<strong>305C</strong></p>\n<p><strong>Sample 8:</strong> 000000000006 /</p>\n<p>0100100A00000000000000000000FFFFFFFFFF<strong>B1CF</strong></p>\n<p>I've experimented with CRC RevEng and SRP16 and crccalc.com with no luck so far.</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "281",
    "tags": [
        "crc",
        "checksum"
    ],
    "user": "HANGOBA",
    "time": "Mar 29, 2023 at 22:53",
    "comments": [
        {
            "user": "Rohit Gupta",
            "text": "<span class=\"comment-copy\">How about a sample with all 0s</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You could try with <a href=\"https://github.com/colinoflynn/crcbeagle\" rel=\"nofollow noreferrer\">CRC Beagle</a>.</p>\n</div>",
            "votes": "3",
            "user": "Lo√Øc Damien",
            "time": "Apr 1, 2023 at 20:15",
            "is_accepted": false,
            "comments": [
                {
                    "user": "HANGOBA",
                    "text": "<span class=\"comment-copy\">Thanks, do you know off the top of your head if this accounts for both Byte order (Endianess) and Bit order (reflection) ?  I'm almost wondering if thats why I was coming up short with SRP16 even running it against XOR'd together \"purified\" sample message pairs, perhaps SRP16 does reflection (bit order) but not byte order</span>",
                    "time": null
                }
            ]
        }
    ]
}