{
    "title": "Inline assembly does not compile [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/13261/inline-assembly-does-not-compile",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>Closed.</b> This question is <a href=\"/help/closed-questions\">off-topic</a>. It is not currently accepting answers.\n                                \n                            </div>\n</div>\n</div>\n</div>\n</div>\n<hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n<div class=\"fw-nowrap fc-black-500\">\n<div class=\"d-flex fd-column lh-md\">\n<div class=\"mb0 d-flex\">\n<div class=\"flex--item mr8\">\n<svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\"><path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\"></path></svg>\n</div>\n<p> Questions on <b>software development</b> are off-topic here, but can be asked on <a href=\"http://stackoverflow.com/about\">Stack Overflow</a>.</p>\n</div>\n<div class=\"mb0 mt6 d-flex\">\n<p class=\"ml24 pl2\">Closed <span class=\"relativetime\" title=\"2016-08-13 15:18:24Z\">8 years ago</span>.</p>\n</div>\n<div class=\"ml24 pl2\">\n</div>\n</div>\n</div>\n<div class=\"mt24 d-flex gsx gs8\">\n<a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/13261/edit\">\n                        Improve this question\n                    </a>\n</div>\n</aside>\n</div>\n<p>I am currently learning how to hook some functions, and I simply want to insert this simple inline assembly:</p>\n<pre><code>__asm {\n    CMP [ebp + 8], 1\n    JNZ short 01311723\n    jmp [jmpBackAddy]\n}\n</code></pre>\n<p>But Visual Studio gives me that error:</p>\n<blockquote>\n<p>Severity  Code    Description Project File    Line    Suppression State\n  Error   C2400   inline assembler syntax error in 'first operand'; found 'constant'</p>\n</blockquote>\n<p>What am I doing wrong? I though I can copy out the assembly of OllyDbg but Visual Studio does not accept it</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "2k",
    "tags": [
        "assembly",
        "c++",
        "function-hooking"
    ],
    "user": "QDA",
    "time": "8 years ago",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "<span class=\"comment-copy\">My first guess is the compiler doesn't infer the operand size from <code>arg_0</code>, so it doesn't know if a byte, word, or dword should be compared. Try <code>CMP dword ptr[ebp+arg_0], 1</code>.</span>",
            "time": null
        },
        {
            "user": "QDA",
            "text": "<span class=\"comment-copy\">tried it and got the same error :/</span>",
            "time": null
        },
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">Is it possible that the compiler doesn't know of value of arg_0 constant ?</span>",
            "time": null
        },
        {
            "user": "QDA",
            "text": "<span class=\"comment-copy\">yeah that's true, forgot to change it to CPM [ebp + 8], 1. But the problem is in the next line :(</span>",
            "time": null
        },
        {
            "user": "peter ferrie",
            "text": "<span class=\"comment-copy\">the problem is the \"01311723\" instead of a label name.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Yes <code>01311723</code> is a constant and compiler will not know what it is   </p>\n<p>Neither would compiler know what <code>jmpBackAddy</code> is </p>\n<p>for constant you need to replace it with a label and define the label \nfor a label you need to define it in the asm src code </p>\n<pre><code>#include &lt;windows.h&gt;\n#pragma comment(lib ,\"user32.lib\")\n#pragma comment(lib ,\"kernel32.lib\")\nint CALLBACK WinMain( _In_ HINSTANCE,  _In_opt_ HINSTANCE, _In_ LPSTR, _In_ int)\n{\n    MessageBoxA(NULL,\"Hello World\",\"Hello World\",MB_OK);\n    jmpBackAddy:   &lt;&lt;&lt; defined here  \n    __asm\n    {\n        CMP [ebp + 8], 1\n        JNZ short label\n        jmp [jmpBackAddy]\n    }    \nlabel:  &lt; defined here \n    MessageBoxA(NULL,\"Hello jnz\",\"how are you jnz\",MB_OK);\n    ExitProcess(0);        \n}\n</code></pre>\n<p>compiled and linked with</p>\n<pre><code>cl /nologo /Zi /EHsc /O1 /analyze /W4 *.cpp /link /release /entry:WinMain\n\nMsgbox.cpp\ne:\\test\\msgbox\\msgbox.cpp(5) : warning C4740: flow in or out of inline asm code suppresses global optimization\n</code></pre>\n<p>and disassembled</p>\n<pre><code>Msgbox!WinMain:\n00021000 55              push    ebp\n00021001 8bec            mov     ebp,esp\n00021003 6a00            push    0\n00021005 6810200200      push    offset Msgbox!`string' (00022010)\n0002100a 6810200200      push    offset Msgbox!`string' (00022010)\n0002100f 6a00            push    0\n00021011 ff1508200200    call    dword ptr [Msgbox!_imp__MessageBoxA (00022008)]\n\nMsgbox!WinMain+0x17:\n00021017 807d0801        cmp     byte ptr [ebp+8],1\n0002101b 7502            jne     Msgbox!WinMain+0x1f (0002101f)\n\nMsgbox!WinMain+0x1d:\n0002101d ebf8            jmp     Msgbox!WinMain+0x17 (00021017)\n\nMsgbox!WinMain+0x1f:\n0002101f 6a00            push    0\n00021021 681c200200      push    offset Msgbox!`string' (0002201c)\n00021026 682c200200      push    offset Msgbox!`string' (0002202c)\n0002102b 6a00            push    0\n0002102d ff1508200200    call    dword ptr [Msgbox!_imp__MessageBoxA (00022008)]\n00021033 6a00            push    0\n00021035 ff1500200200    call    dword ptr [Msgbox!_imp__ExitProcess (00022000)]\n0002103b 5d              pop     ebp\n0002103c c21000          ret     10h\n</code></pre>\n</div>",
            "votes": "4",
            "user": "blabb",
            "time": "Aug 11, 2016 at 21:39",
            "is_accepted": true,
            "comments": []
        }
    ]
}