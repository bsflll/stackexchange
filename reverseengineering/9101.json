{
    "title": "How to call DebugActiveProcessStop from disassembled code?",
    "link": "https://reverseengineering.stackexchange.com/questions/9101/how-to-call-debugactiveprocessstop-from-disassembled-code",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am debugging an application. Another process is debugged by this application.</p>\n<p>Here is the call </p>\n<pre><code>00705435  FF15 C0007500  CALL DWORD PTR DS [&lt;&amp;KERNEL32.ContinueDebugEvent&gt;] \n</code></pre>\n<p>I want to change call to <code>DebugActiveProcessStop</code>, what should I do ?</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "212",
    "tags": [
        "disassembly",
        "ollydbg",
        "debugging",
        "windbg"
    ],
    "user": "ASD",
    "time": "Jun 9, 2015 at 23:30",
    "comments": [
        {
            "user": "Spl3en",
            "text": "<span class=\"comment-copy\">What do you expect to do with those calls ? I mean, you can simply change the EIP to DebugActiveProcessStop whenever you want, or patch the IAT to a code cave that will take the ContinueDebugEvent parameters and use them to call DebugActiveProcessStop, or hook ContinueDebugEvent directly.</span>",
            "time": null
        },
        {
            "user": "Jason Geffner",
            "text": "<span class=\"comment-copy\">@ASD, what debugger are you using?</span>",
            "time": null
        },
        {
            "user": "ASD",
            "text": "<span class=\"comment-copy\">@JasonGeffner am using ollydbg</span>",
            "time": null
        },
        {
            "user": "Spl3en",
            "text": "<span class=\"comment-copy\">@ASD So... Problem solved ?</span>",
            "time": null
        },
        {
            "user": "ASD",
            "text": "<span class=\"comment-copy\">@Spl3en yes i solved it.</span>",
            "time": null
        }
    ],
    "answers_data": []
}