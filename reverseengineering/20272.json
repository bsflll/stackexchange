{
    "title": "Confused about a firmware binary",
    "link": "https://reverseengineering.stackexchange.com/questions/20272/confused-about-a-firmware-binary",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to reverse engineer an ARM Thumb2 firmware binary, and I've come across a few oddities. Parts of the file when treated as RGB binary data form perfect images, which seems unusual for a firmware file, and when visualised by turning each byte into a greyscale pixel (0x00 as magenta for clarity) around the middle of the file there's a large section of nulls with 64 strips of data that seem to line up perfectly with a width of 404px: <a href=\"https://i.sstatic.net/lnxB5.png\" rel=\"nofollow noreferrer\"><img alt=\"64 strips\" src=\"https://i.sstatic.net/lnxB5.png\"/></a> These strips are exactly 8x76 and appear to form pairs. Attempting to extract them and decode as raw image data resulted in garbage, and I'm at a bit of a loss as to what they are and what they're doing in a firmware binary. </p>\n<p>The target processor for this binary is a Xilinx 7000, and the start of the binary does appear to contain FPGA data for this. The binary is at <a href=\"https://drive.google.com/open?id=1rmCRP_mdGLx4QQ4HurL7a3TEiXe_kHn3\" rel=\"nofollow noreferrer\">https://drive.google.com/open?id=1rmCRP_mdGLx4QQ4HurL7a3TEiXe_kHn3</a> and if anyone has any idea as to what those strips (or other parts of the file too, to be honest) might be, that would be amazing.</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "702",
    "tags": [
        "firmware",
        "arm",
        "thumb2"
    ],
    "user": null,
    "time": "Jan 3, 2019 at 12:34",
    "comments": [
        {
            "user": "domen",
            "text": "<span class=\"comment-copy\">Doesn't look like much of an image to me. Are you sure you're not just over-interpreting some structured/repetitive data?</span>",
            "time": null
        },
        {
            "user": "wisk",
            "text": "<span class=\"comment-copy\">Your file contains, at least, Arm code and probably 4 BMP files at: 0x2be590 (sdcard icon), 0x2bf660 (refresh icon), 0x2bff4c (trash icon) and 0x2c0a54 (power icon). The strings contain reference to BMP, so I only search for bytes 0x42 0x4d which are BMP magic.</span>",
            "time": null
        },
        {
            "user": "user26954",
            "text": "<span class=\"comment-copy\">@wisk how did you manage to extract those BPM files? When I go to those addresses I can see the BMP magics but then the rest of the header appears to be missing?</span>",
            "time": null
        },
        {
            "user": "user26954",
            "text": "<span class=\"comment-copy\">Never mind, :D. I was miss-reading the header</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>After searching for the constant <code>'XLNX'</code>, it turns out this firmware file format is defined <a href=\"https://github.com/TheBlueMatt/u-boot/blob/master/tools/zynqmpimage.c\" rel=\"nofollow noreferrer\">here</a>. You're lucky because the encryption field is set to 0x0 (None).</p>\n<p>Now the question is, what do you really want to do with this image? You only want to extract image files?</p>\n</div>",
            "votes": "1",
            "user": "wisk",
            "time": "Jan 5, 2019 at 0:15",
            "is_accepted": false,
            "comments": []
        }
    ]
}