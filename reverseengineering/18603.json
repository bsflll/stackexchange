{
    "title": "How to make sense of this one pin serial communication",
    "link": "https://reverseengineering.stackexchange.com/questions/18603/how-to-make-sense-of-this-one-pin-serial-communication",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to reverse engineer a serial communication between to microcontrollers (1 device &amp; 1 microcontroller on a board). One MCU validates the other MCU and I want to crack the validation and mimic the validated MCU. I want to find out what protocol is being used to make sense of the data. I have captured the communication with a logic analyzer and here is a screenshot from PulseView:\n<a href=\"https://i.sstatic.net/1uw45.png\" rel=\"nofollow noreferrer\"><img alt=\"Logic Analyzer Signal\" src=\"https://i.sstatic.net/1uw45.png\"/></a></p>\n<p>PulseView has decoding function but I don't know where to begin. The communication happens via 1 wire only. But I am not sure if the protocol is \"one-wire\". Are there any known standard methods to identify an unknown communication protocol? Or do I have to identify it by simply looking at it?</p>\n<p>I wrote a script to convert the data into times required to change from one state to another (high-to-low or low-to-high) to compare repeated measurements and absence of the validated MCU. Each time the patterns look slightly different. It would have been great to know to decode this into byte array or whatever is intended for.</p>\n<p>PS: smallest time required for a change is 30μs as seen at the 3rd row on the image (120μs = 4 states).</p>\n<p>Thanks!</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "64",
    "tags": [
        "binary-analysis",
        "serial-communication"
    ],
    "user": "Saren Tasciyan",
    "time": "Jun 26, 2018 at 13:18",
    "comments": [
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">Do you have some another line between these units that transmits corresponding clock (which would probably make it I2C protocol ) ? In addition, some logic analyzers sometimes have protocol decoders. May be you have something like this ?</span>",
            "time": null
        },
        {
            "user": "Saren Tasciyan",
            "text": "<span class=\"comment-copy\">@ws There are 5 lines in total. Btw, this is Nikon battery and a Nikon DSLR. 2 lines are + and - (7.4V-8.4V). One pin is for the charger to know the balance between 2 LiPo cells. Another pin is supposed to deliver temperature of the battery (probably analog from some oscilloscope measurements). But I didn't dare to connect the pins to not kill my logic analyzer with ~8V. I don't have constant access to oscilloscope either. Do you think that this looks like I2C? In that case I need to read other pins to see if one of them is clock line, right?</span>",
            "time": null
        },
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">I'm not sure what protocol it is (btw, what is the voltage of those signals ? I don't see it on the picture). If you don't see clock line it shouldn't by I2C.</span>",
            "time": null
        },
        {
            "user": "Saren Tasciyan",
            "text": "<span class=\"comment-copy\">@ws The voltage was measured ~3.3V on an oscilloscope. But I continued on a logic analyzer, which was more affordable and useful for my other projects. Logic analyzer only differs between low and high (logic).</span>",
            "time": null
        }
    ],
    "answers_data": []
}