{
    "title": "x64dbg and ollydbg error not enough memory",
    "link": "https://reverseengineering.stackexchange.com/questions/12558/x64dbg-and-ollydbg-error-not-enough-memory",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I wanted to debug an executable but I always receive one of the errors 'last or first chance' exception. The 'last error' label shows me this error : <code>00000008 (ERROR_NOT_ENOUGH_MEMORY)</code>. When I run the executable without any debugger I always have enough memory.</p>\n<p>Ollydbg breaks before I can even debug.\nx64dbg breaks while debugging.</p>\n<p>With ollydbg I have used the 32bit executable of the program.</p>\n<p>The OPc looks like this:</p>\n<pre><code>00007FF6A179B097 | int3                                    |\n00007FF6A179B098 | sub rsp,48                              |\n00007FF6A179B09C | lea rcx,qword ptr ss:[rsp+20]           |\n00007FF6A179B0A1 | call &lt;executable&gt;.7FF6A0C58980          |\n00007FF6A179B0A6 | lea rdx,qword ptr ds:[7FF6A230CE80]     |\n00007FF6A179B0AD | lea rcx,qword ptr ss:[rsp+20]           |\n00007FF6A179B0B2 | call &lt;executable&gt;.7FF6A17CC4EC          |\n00007FF6A179B0B7 | int3                                    | &lt;-\n</code></pre>\n<p>But I guess this isn't any help. We just know that the last call produces this error ?!</p>\n<p>EDIT: I have 12 gb of ram.</p>\n<p>Regards</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ollydbg",
        "debugging",
        "memory",
        "exception"
    ],
    "user": "Sens4",
    "time": "Apr 29, 2016 at 13:12",
    "comments": [
        {
            "user": "Jason Geffner",
            "text": "<span class=\"comment-copy\">For the first-chance-exception, what happens when you tell your debugger to pass the exception back to the program? (And FWIW, I'd recommend <a href=\"https://i.sstatic.net/ZHqGG.png\" rel=\"nofollow noreferrer\">configuring OllyDbg to <i>always</i> pass first-chance-exceptions back to the program</a>.)</span>",
            "time": null
        },
        {
            "user": "Sens4",
            "text": "<span class=\"comment-copy\">The range did the trick to ignore every exception but the memory error still breaks the program and I can not debug further.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Based on the comments exchanged above, it sounds like the program uses anti-debugger code. You have a few options to deal with it:</p>\n<ol>\n<li>Find and disable (NOP / jump-over / etc.) the anti-debugging code.</li>\n<li>Try to hide your debugger (manually or by using a stealthing plugin).</li>\n<li>Run your program without a debugger, and then after it's up and running, attach to it with your debugger.</li>\n</ol>\n<p>Option #1 requires the most effort, but is guaranteed to work.</p>\n<p>Option #2 can save time over Option #1, but can involve a lot of trial-and-error.</p>\n<p>Option #3 is the easiest option, IMHO, as long as you don't need to debug your target from its entry point. It assumes that the anti-debugging code only executes at the very beginning of the program, which is typically a safe assumption.</p>\n</div>",
            "votes": "2",
            "user": "Jason Geffner",
            "time": "Apr 29, 2016 at 14:13",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Sens4",
                    "text": "<span class=\"comment-copy\">I found a plugin for x64dbg (its also for other dbgrs) called: ScyllaHide. Everything works expected now :)</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">Option #2 FTW then ;)</span>",
                    "time": null
                }
            ]
        }
    ]
}