{
    "title": "How to find the the event handler function for a QtAbstractButton?",
    "link": "https://reverseengineering.stackexchange.com/questions/31209/how-to-find-the-the-event-handler-function-for-a-qtabstractbutton",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am not very familiar with Qt to begin with but basic PyQt tutorial showed that a button object is linked with its handler using the connect method that takes in as its argument the function that gets executed when the button signal is met. On trying to reverse an app I managed to successfully figure out where the button was created in IDA:</p>\n<pre><code>v15 = (QAbstractButton *)a1[12];\nv16 = (const struct QString *)QCoreApplication::translate(\n                                  v21,\n                                  \"SCRRegistrationDialog\",\n                                  \"Button Text 1...\",\n                                  0i64,\n                                  -1);\nQAbstractButton::setText(v15, v16);\nQString::~QString(v21);\nv17 = (QAbstractButton *)a1[14];\nv18 = (const struct QString *)QCoreApplication::translate(v21, \"SCRRegistrationDialog\", \"Button Text 2\", 0i64, -1);\nQAbstractButton::setText(v17, v18);\nQString::~QString(v21);\nv19 = (QAbstractButton *)a1[15];\nv20 = (const struct QString *)QCoreApplication::translate(v21, \"SCRRegistrationDialog\", \"Button text 3\", 0i64, -1);\nQAbstractButton::setText(v19, v20);\nQString::~QString(v21);\n</code></pre>\n<p>As can be seen the button text is passed but I simply cant find the function that gets executed when its pressed. I have tried tracing in IDA and tried this answer : <a href=\"https://reverseengineering.stackexchange.com/questions/24959/find-code-executed-on-button-press-in-qt5-linux-application\">Find code executed on button press in Qt5 Linux application</a> but I am unable to follow the method.</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "305",
    "tags": [
        "ida",
        "c++",
        "hexrays",
        "qt"
    ],
    "user": "Ajaykrishnan R",
    "time": "Dec 2, 2022 at 8:36",
    "comments": [
        {
            "user": "Mega Tonnage",
            "text": "<span class=\"comment-copy\">The function isn't included when the object is instantiated, but afterwards by calling <code>btn.clicked.connect(&lt;function&gt;)</code>... you might need to look further.</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Hi and welcome to RE.SE. The function could probably be found by finding the vtable for <code>a1[12]</code> etc. There are IDA plugins for that, but I don't know just how well they interact with the decompiler plugin, if at all. From the code it reads as if <code>a1</code> is something like the form and <code>a1[12]</code>, <code>a1[14]</code>, <code>a1[15]</code> are all instance pointers of <code>QAbstractButton</code>.</span>",
            "time": null
        },
        {
            "user": "Ajaykrishnan R",
            "text": "<span class=\"comment-copy\">@0xC0000022L I think I found the connect statement: <code>QObject::connect(&amp;v24, *(_QWORD *)(a1[5] + 112i64), \"2clicked()\", a1, \"1registrationDialogValidation()\", 0);</code> I think <code>2Clicked()</code> is the signal and <code>1registrationDialogueValidation()</code> seems to be the function but its just in text. I am not familiar with vtables but how do you find the vtable of a1[12] ? This was found before the connect statement:  <code>QDialog::QDialog(a1, a2, 0i64); *a1 = &amp;SCRRegistrationDialog::'vftable'; a1[2] = &amp;SCRRegistrationDialog::'vftable'; v3 = operator new(0x80ui64); a1[5] = v3; sub_7FF7100D0570(v3, a1);</code></span>",
            "time": null
        }
    ],
    "answers_data": []
}