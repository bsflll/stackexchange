{
    "title": "General unpacking of packed malware",
    "link": "https://reverseengineering.stackexchange.com/questions/19349/general-unpacking-of-packed-malware",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I did a brief survey on malware unpacking and I found several theses on automated general unpacking:Eureka, PolyUnpack, omniUnpack, Malware Normalization.</p>\n<p>However, these theses are written years ago and I don't think these methods still work. A basic assumption of these methods is an unpacker routine restore whole protected code at a time. Thus, we can get original code dumping a certain memory region when an unpacker routine finishes its work.</p>\n<p>When it comes to more sophisticated packer (such as <a href=\"http://bitlackeys.org/#maya\" rel=\"nofollow noreferrer\">Maya's veil</a>), it doesn't reveal whole protected code. As far as I know an attempt to attack this problem is to <a href=\"https://ieeexplore.ieee.org/document/5645447/\" rel=\"nofollow noreferrer\">distinguish between code that performs unpacking routine and code does not</a> and I think this is not really unpacking.</p>\n<p>Only way to unpacking sophisticated packers is manually reversing it? </p>\n<p>Thank you.</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "430",
    "tags": [
        "malware",
        "unpacking"
    ],
    "user": "kensuke",
    "time": "Sep 15, 2018 at 15:56",
    "comments": [
        {
            "user": "mrexodia",
            "text": "<span class=\"comment-copy\">Even though there is sophisticated malware out there, there is always unsophisticated malware for which those old techniques might still work.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You actually have more than one option in this case: </p>\n<ol>\n<li><p>RE of sophisticated packer</p></li>\n<li><p>Wait for someone else to RE the sophisticated packer and publish the method/tool. Maybe ask in this community? </p></li>\n<li><p>Ask the author of sophisticated packer to provide the unpacker [buy one?]</p></li>\n<li><p>Ask the author of packed program to provide it to you with no sophisticated packer applied.  </p></li>\n</ol>\n<p>Hope it help :)</p>\n<p>D.L. </p>\n</div>",
            "votes": "2",
            "user": "Denis Laskov",
            "time": "Sep 15, 2018 at 16:05",
            "is_accepted": false,
            "comments": [
                {
                    "user": "kensuke",
                    "text": "<span class=\"comment-copy\">Thank you for your reply. I know I can write an unpacker for a specific packer.</span>",
                    "time": null
                },
                {
                    "user": "kensuke",
                    "text": "<span class=\"comment-copy\">I'm going to do further research to figure out a way to create generic unpacker</span>",
                    "time": null
                },
                {
                    "user": "julian",
                    "text": "<span class=\"comment-copy\">@kensuke this may be helpful: <a href=\"https://reverseengineering.stackexchange.com/questions/72/unpacking-binaries-in-a-generic-way\" title=\"unpacking binaries in a generic way\">reverseengineering.stackexchange.com/questions/72/â€¦</a></span>",
                    "time": null
                }
            ]
        }
    ]
}