{
    "title": "ASLR in Linux Vs Windows",
    "link": "https://reverseengineering.stackexchange.com/questions/25677/aslr-in-linux-vs-windows",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am quite new in binary exploitation. I am doing a lot of beginners exercise here. I am confused about ASLR. I tried some binary exploitation thing in Linux. It was recommended that I should stop ASLR in Linux before analyzing the binary.\nit is the command for that --&gt; <code>echo 0 &gt; /proc/sys/kernel/randomize_va_space</code>\nAm I right here? am I turning off my ASLR (randomizing stack addresses)?</p>\n<p>But When I did the Windows 10 binary exploitation(vulnserver). I had to put my payload into stack address. And I noticed that the stack address (<code>jmp esp</code>) was constant, not changing.\nIs ASLR works differently in various OS?\nI don't know If I am asking a write question. please tell me if you know.</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "392",
    "tags": [
        "disassembly",
        "windows",
        "linux",
        "stack"
    ],
    "user": "lucky thandel",
    "time": "Aug 15, 2020 at 10:49",
    "comments": [
        {
            "user": "ifexploit",
            "text": "<span class=\"comment-copy\">Did you check if the binary has /DYNAMICBASE property set? If it is not set then it means that REBASE was opted out while compiling the program itself i.e. ASLR is not being used.</span>",
            "time": null
        },
        {
            "user": "lucky thandel",
            "text": "<span class=\"comment-copy\">how do I check it in windows?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>By using <a href=\"https://blog.didierstevens.com/2010/10/17/setdllcharacteristics/\" rel=\"nofollow noreferrer\">this tool</a> from Didier Stevens you've been able to check/set/unset DEP/ASLR characteristics of your file.\nCheck the file like this:</p>\n<pre><code>setdllcharacteristics.exe yourfile.exe\n</code></pre>\n<p>If the output said <code>DYNAMIC_BASE    = 0</code> then you can use <code>+d</code> option to enable <code>DYNAMICBASE</code> of your file:</p>\n<pre><code>setdllcharacteristics.exe +d yourfile.exe\n</code></pre>\n<p>And you can use <code>-d</code> to unset again.</p>\n</div>",
            "votes": "3",
            "user": "Sina",
            "time": "Aug 18, 2020 at 16:41",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<ol>\n<li>Yes, the command <code>echo 0 &gt; /proc/sys/kernel/randomize_va_space</code> disables ASLR. From <a href=\"https://www.networkworld.com/article/3331199/what-does-aslr-do-for-linux.html\" rel=\"nofollow noreferrer\">here</a>:</li>\n</ol>\n<blockquote>\n<p>The value shown will be one of the following:</p>\n<p>0 = Disabled</p>\n<p>1 = Conservative Randomization</p>\n<p>2 = Full Randomization</p>\n</blockquote>\n<ol start=\"2\">\n<li>There are several differences in the implementation of ASLR between Windows and Linux, you can search for them online, but to your question: In Windows, an EXE or a DLL can be compiled with or without ASLR (same goes for DEP - Data Execution Prevention).\nFor the purpose of exploitation, we search for code without protection (you can find it with WinDBG using <a href=\"https://www.oreilly.com/library/view/metasploit-revealed-secrets/9781788624596/9b9ac2e7-127a-4f3b-80c6-7e9b8149573f.xhtml\" rel=\"nofollow noreferrer\">mona modules</a> or <a href=\"https://github.com/d0c-s4vage/narly/blob/master/narly/ReadMe.txt\" rel=\"nofollow noreferrer\">narly</a>, for example), in order to try to jump to it and run a code of our choice.\nTherefore, what you have probably seen is a jump to such a code without ASLR, and it's fine that the address is fixed (no ASLR!). If you have control over the stack, the <code>jmp esp</code> command jumps to the stack, and there you can put whatever code you want.</li>\n</ol>\n</div>",
            "votes": "1",
            "user": "alond22",
            "time": "May 20, 2021 at 18:56",
            "is_accepted": false,
            "comments": []
        }
    ]
}