{
    "title": "The questions about ADR.W instruction",
    "link": "https://reverseengineering.stackexchange.com/questions/12258/the-questions-about-adr-w-instruction",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>When reversing a ARM firmware using IDA Pro, I find a instruction:</p>\n<p>ROM:080461FC 0F F2 24 30         ADR.W      R0, aBt_test_mode ; \"BT_TEST_MODE\"</p>\n<p>...</p>\n<p>ROM:08046524    aBt_test_mode       DCB \"BT_TEST_MODE\",0</p>\n<p>...</p>\n<p>I know this is a Thumb-2 instruction.\n<a href=\"https://i.sstatic.net/FlMsb.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/FlMsb.png\"/></a>\nimm8=0010 0100</p>\n<p>Rd=0000</p>\n<p>imm3=011</p>\n<p>but I don't know how to calculate imm32. (imm32 = ZeroExtend(i:imm3:imm8, 32))\nand how to calculate the 08046524?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "273",
    "tags": [
        "arm",
        "thumb2"
    ],
    "user": "user6903",
    "time": "Mar 20, 2016 at 4:02",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>As you say, you have -</p>\n<p><code>imm8 = 0010 0100</code></p>\n<p><code>imm3 = 011</code></p>\n<p>but you also have</p>\n<p><code>i = 0</code></p>\n<p>then</p>\n<p><code>imm32 = ZeroExtend(i:imm3:imm8,32) =&gt;</code></p>\n<p><code>imm32 = ZeroExtend(0:011:00100100,32) =&gt;</code></p>\n<p><code>imm32 = ZeroExtend(001100100100,32) =&gt;</code></p>\n<p><code>imm32 = 00000000000000000000001100100100 = 0x00000324</code></p>\n<p>The ADR instruction description explains that \"This instruction adds an immediate value to the PC value to form a PC-relative address, and writes the result to the\ndestination register.\"</p>\n<p>As you are in Thumb mode, the value of PC is equal to the (4 byte aligned) address of the instruction + 4 bytes. \nIn your case the instruction is at address <code>0x080461FC</code> so <code>PC = 0x080461FC + 4 = 0x08046200</code></p>\n<p>The address calculation is then -</p>\n<p><code>PC + imm32 = 0x08046200 + 0x00000324 = 0x08046524</code></p>\n<p>This is what you see in IDA's disassembly.</p>\n<p>If you look in the 'Operation' section of the ADR instruction in the ARM architecture reference manual you can see this explained.</p>\n</div>",
            "votes": "2",
            "user": "Ian Cook",
            "time": "Mar 20, 2016 at 9:08",
            "is_accepted": true,
            "comments": []
        }
    ]
}