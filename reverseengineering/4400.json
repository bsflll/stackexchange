{
    "title": "What does _acmdln_dll?",
    "link": "https://reverseengineering.stackexchange.com/questions/4400/what-does-acmdln-dll",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Does somebody knows what <code>_acmdln_dll</code> is ? I could not find any useful documentation about that. </p>\n<p>I am asking because I have the following line in the assembly which I try to analyze:</p>\n<pre><code> MOV EAX, DWORD PTR DS : [_acmdln_dll]\n</code></pre>\n<p>After that line I have in register <code>EAX</code> the path of the current process. So my assumption is now the <code>_acmdln_dll</code> stores somehow the path as string sequence.\nIs that true ? </p>\n<p>Can someone confirm that or does someone know more informations about <code>_acmdln_dll</code> ?</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "683",
    "tags": [
        "disassembly",
        "windows",
        "x86"
    ],
    "user": "user3097712",
    "time": "May 22, 2014 at 10:40",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>These are global variables provided by the Microsoft run time library. Here is an excerpt of <em><a href=\"http://msdn.microsoft.com/en-us/library/ff770586.aspx\" rel=\"nofollow noreferrer\">MSDN</a></em> on-line documentation speaking about the <code>_acmdln</code> variable:</p>\n<blockquote>\n<p><strong><code>_acmdln</code></strong>, <code>_tcmdln</code>, <code>_wcmdln</code></p>\n<p><strong>These variables store the complete command line. <code>_acmdln</code> stores the data as a character string</strong>. <code>_wcmdln</code> stores the data as a wide character string. <code>_tcmdln</code> can be defined as either <code>_acmdln</code> or <code>_wcmdln</code>, depending on which is appropriate.</p>\n</blockquote>\n</div>",
            "votes": "4",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><strong>well after rereading the original question it appears both my answer<br/>\nand the answer i followed up do not give an answer to the original question<br/>\noriginal question asks about acmdln_dll which is nowhere to be found in vs crt<br/>\ni leave the answer as it is assuming the suffix __dll to be in code that is not native ms like from reactos here</strong></p>\n<p><a href=\"http://code.google.com/p/reactos-mirror/source/browse/trunk/reactos/lib/crtdll/misc/GetArgs.c?spec=svn271&amp;r=271\" rel=\"nofollow\">http://code.google.com/p/reactos-mirror/source/browse/trunk/reactos/lib/crtdll/misc/GetArgs.c?spec=svn271&amp;r=271</a></p>\n<p><strong>the answer below is pertinent to _acmdln without the suffix _dll see edit 3 also</strong> </p>\n<p>the <code>complete source code</code> is available to you for <code>acmdln</code> if you have installed even the <code>express version of visual studio</code>.</p>\n<p><code>compile a simple hello world with debug info</code> <strong>/Zi</strong>  and view the source code as to what it is</p>\n<p>source file in crt directory of visual studio</p>\n<pre><code>DS:[00408018]=7C812FBD (kernel32.GetCommandLineA)\nJump from __tmainCRTStartup+9B\ncrt0.c:252.  _tcmdln = (_TSCHAR *)GetCommandLineT();\n</code></pre>\n<p>here is a relevent disassembly\nnotice the result of GetCommandline being moved to acmdln a global </p>\n<pre><code>/*\n * command line, environment, and a few other globals\n */\n\n    #ifdef WPRFLAG\n    wchar_t *_wcmdln;           /* points to wide command line */\n    #else  /* WPRFLAG */\n    char *_acmdln;              /* points to command line */\n    #endif  /* WPRFLAG */\n\n    char *_aenvptr = NULL;      /* points to environment block */\n    wchar_t *_wenvptr = NULL;   /* points to wide environment block */\n</code></pre>\n<p>disassembly </p>\n<pre><code>004014D9           CALL    newheapt._amsg_exit\n004014DE           POP     ECX\n004014DF           CALL    NEAR DWORD PTR DS:[&lt;&amp;KERNEL32.GetCommandLineA&gt;]      ; _tcmdln = (_TSCHAR *)GetCommandLineT();\n004014E5           MOV     DWORD PTR DS:[_acmdln], EAX\n004014EA           CALL    newheapt.__crtGetEnvironmentStringsA                 ; _tenvptr = (_TSCHAR *)GetEnvironmentStringsT();\n004014EF           MOV     DWORD PTR DS:[_aenvptr], EAX\n004014F4           CALL    newheapt._setargv                                    ; if ( _tsetargv() &lt; 0 )\n004014F9           TEST    EAX, EAX\n004014FB           JNS     SHORT newheapt.00401505\n004014FD           PUSH    8                                                    ; _amsg_exit(_RT_SPACEARG);\n004014FF           CALL    newheapt._amsg_exit\n00401504           POP     ECX\n00401505           CALL    newheapt._setenvp                                    ; if ( _tsetenvp() &lt; 0 )\n0040150A           TEST    EAX, EAX\n0040150C           JNS     SHORT newheapt.00401516\n0040150E           PUSH    9                                                    ; _amsg_exit(_RT_SPACEENV);\n</code></pre>\n<p><strong>edit 3</strong> </p>\n<p>from a general search it seems that this is defined in crtdll.dll </p>\n<pre><code>C:\\WINDOWS\\system32&gt;grep -rs _acmdln_dll *\nBinary file crtdll.dll matches\nBinary file dllcache/crtdll.dll matches\n^C\nC:\\WINDOWS\\system32&gt;\n</code></pre>\n<p>loading the dll in ollydbg _acmdln_dll is exactly same as _acmdln</p>\n<pre><code>73D91D02                   |&gt; \\FF15 4410&gt;CALL    NEAR DWORD PTR DS:[&lt;&amp;KERNEL32.GetCommandLineA&gt;]      ; [GetCommandLineA\n73D91D08                   |.  A3 CC3EDB&gt;MOV     DWORD PTR DS:[_acmdln_dll], EAX\n73D91D0D                   |.  FF15 4010&gt;CALL    NEAR DWORD PTR DS:[&lt;&amp;KERNEL32.GetEnvironmentStrings&gt;&gt;; [GetEnvironmentStrings\n73D91D13                   |.  A3 D03EDB&gt;MOV     DWORD PTR DS:[73DB3ED0], EAX\n73D91D18                   |.  FF15 0411&gt;CALL    NEAR DWORD PTR DS:[&lt;&amp;KERNEL32.GetVersion&gt;]           ;  kernel32.GetVersion\n</code></pre>\n<p>and this crtdll.dll seems to be from an older windows sdk a brief google yields one page which alludes crtdll.lib belonging to windows sdk 3.5 era</p>\n<p><a href=\"http://support.microsoft.com/kb/94248\" rel=\"nofollow\">http://support.microsoft.com/kb/94248</a></p>\n</div>",
            "votes": "2",
            "user": "blabb",
            "time": "May 22, 2014 at 11:53",
            "is_accepted": false,
            "comments": []
        }
    ]
}