{
    "title": "Understanding operand forms",
    "link": "https://reverseengineering.stackexchange.com/questions/22115/understanding-operand-forms",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>9(%rax, %rdx): What happens here? Is <em>9</em> the offset? and do you add the two registers together?</p>\n<p>I'm reading Randal E. Bryant and David R. O'Hallaran's <em>\"Computer Systems - A programmer's Persepctive\"</em></p>\n<p>At page 209 we are presented with a table (Operand forms):</p>\n<p><a href=\"https://i.sstatic.net/eN3LA.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/eN3LA.png\"/></a></p>\n<hr/>\n<p>It's then possible to do a little assignment where I have to fill the empty table with values. I tried my best but am stuck as you can see:</p>\n<p><a href=\"https://i.sstatic.net/C3nNb.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/C3nNb.png\"/></a></p>\n<p>9(%rax, %rdx). Is the <em>9</em> the offset? And do you add the two registers here? Not quite sure what to add. I would really appreciate if someone could walk me through the last empty values I need to fill.</p>\n<hr/>\n<p>Below is the solutions:</p>\n<p><a href=\"https://i.sstatic.net/Yb9Hq.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/Yb9Hq.png\"/></a></p>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "601",
    "tags": [
        "assembly",
        "x86-64"
    ],
    "user": "user10829235",
    "time": "Sep 13, 2019 at 6:35",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Welcome to the wonderful world of AT&amp;T assembly! The 9 in <code>9(%rax, %rdx)</code> is commonly called <em>displacement</em> or sometimes <em>base</em>, and you should indeed just add all three values:</p>\n<p>9+rax+rdx = 9+0x100+0x3 = 0x10C</p>\n<p>This address is then dereferenced so the value 0x11 is loaded from the address 0x10C.</p>\n<p>I would recommend reading the Solaris <a href=\"https://docs.oracle.com/cd/E26502_01/html/E28388/ennby.html\" rel=\"nofollow noreferrer\">x86 Assembly Language Reference Manual </a> if you plan to stick with AT&amp;T, or just switch to Intel syntax since it's much more widely used (especially in processor documentation). </p>\n</div>",
            "votes": "4",
            "user": "Igor Skochinsky",
            "time": "Sep 13, 2019 at 9:47",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user10829235",
                    "text": "<span class=\"comment-copy\">Thank you, Igor. Makes sense now!</span>",
                    "time": null
                }
            ]
        }
    ]
}