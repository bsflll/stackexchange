{
    "title": "How can I view the output of printf calls without a console window?",
    "link": "https://reverseengineering.stackexchange.com/questions/27377/how-can-i-view-the-output-of-printf-calls-without-a-console-window",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm using IDA to poke around in an old video game and noticed there are lots of calls to the <code>printf</code> function:</p>\n<p><a href=\"https://i.sstatic.net/EF1eK.png\" rel=\"nofollow noreferrer\"><img alt=\"\" src=\"https://i.sstatic.net/EF1eK.png\"/></a></p>\n<p>I can see in another function that <code>dword_5CE914</code> is a bitmask comprising various startup arguments (e.g. <code>debug</code>, <code>nofullscreen</code>, etc). As you may have guessed, <code>0x4000000</code> is the value that indicates the <code>debug</code> switch was present; despite enabling this, there is no visible debug output.</p>\n<p>As someone new to software programming, I <em>assume</em> that during the game's development the <code>printf</code> calls would have been outputting to a debugger/console window which were disabled for production.</p>\n<p>My question is: how can I view the output now that there is no debugger window?</p>\n<p>My current thought process would be to:</p>\n<ol>\n<li>Create a custom DLL containing a function to output arbitrary text to a .txt file</li>\n<li>Inject the DLL into the game's address space</li>\n<li>Hook into <code>printf</code> and pass the argument into my function which saves the output</li>\n</ol>\n<p>Does that sound like a plausible approach, or can someone recommend a better way?</p>\n</div>",
    "votes": "2",
    "answers": 3,
    "views": "2k",
    "tags": [
        "ida",
        "dll-injection"
    ],
    "user": "user7290573",
    "time": "Apr 1, 2021 at 23:11",
    "comments": [
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">Set the dword @ 5ce914 to 0xffffffff</span>",
            "time": null
        },
        {
            "user": "user7290573",
            "text": "<span class=\"comment-copy\">@blabb I can easily change the dword and view the output with breakpoints, but I'm asking how to save the output to a log file or print to a console window.</span>",
            "time": null
        },
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">oh i see  have you checked using an AttachConsole() to the pid  of the process</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The approach you outlined seems plausible; I'd probably do something similar to that if I were approaching this problem. If <code>printf</code> is being called via function pointer -- say, it's an import from another .DLL -- you could simply overwrite its IAT entry with the one in your DLL. Otherwise, I'd go with hooking <code>printf</code> directly, and passing the arguments onto <code>vfprintf</code> in my DLL.</p>\n</div>",
            "votes": "1",
            "user": "Rolf Rolles",
            "time": "Apr 2, 2021 at 7:38",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user7290573",
                    "text": "<span class=\"comment-copy\">Thank you; I'll give this a try later and see how I get on.</span>",
                    "time": null
                },
                {
                    "user": "user7290573",
                    "text": "<span class=\"comment-copy\"><code>vfprintf</code> works perfectly. Thanks again.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If you convert the program to a console one (e.g. using EDITBIN), you should be able to run it from a console window and see everything it prints.</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Apr 3, 2021 at 15:01",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>ok I was wondering how one could include printf() intact but run without console<br/>\nit seems if one uses WinMain() and compile with /subsystem:windows one can achieve this<br/>\nhere is a sample code</p>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;windows.h&gt;\nint pringlob = 0;\nint a = 9;\nint b = 10;\nint c = 33;\nint WINAPI WinMain(_In_ HINSTANCE,_In_opt_ HINSTANCE,_In_ LPSTR, _In_ int)\n{\n    if ((pringlob &amp; 0x400000) != 0)\n    {\n        printf(\"this is mytest\\n\");\n        if ((pringlob &amp; 0x400000) != 0)\n        {\n            printf(\"this is mytest 1 %d\\n\", a);\n            if ((pringlob &amp; 0x400000) != 0)\n            {\n                printf(\"this is mytest 2 %d\\n\", b);\n                if ((pringlob &amp; 0x400000) != 0)\n                {\n                    printf(\"this is mytest 3 %d\\n\", c);\n                }\n            }\n        }\n    }\n    MessageBoxA(NULL,\"NO CONSOLE TEST\",\"NO CONSOLE USE ATTACHCONSOLE\",MB_OK);\n}\n</code></pre>\n<p>compiling this with in vs 2017 community</p>\n<pre><code>cl /Zi /W4 /analyze /Od /nologo /EHsc foo.cpp /link /release /subsystem:windows  user32.lib  \n</code></pre>\n<p>this runs without console but keeps printf intact which prints to the console that is Created By AttachConsole() on the pid of binary</p>\n<p>open foo.exe in x64dbg run to<br/>\nWinMainCrtStartup or @$exentry aka  PEHeader-&gt;AddressOFEntryPoint<br/>\nso that all dll init are done<br/>\nopen file-&gt;attach and note the pid of foo.exe<br/>\nin the stack use push qword<br/>\nand push pid<br/>\npush return address which is WinmainCRTStartup<br/>\nuse Ctrl+g to go to kernelbase.AllocConsole<br/>\nstep over the function and return to WinMainCRTStartup<br/>\npop the pid using pop qword in stack</p>\n<p>set the global to 0xffffffff<br/>\nf9 to run the exe<br/>\nyou will get all the printfs in  the newly created console<br/>\nsee the attached screenshot<br/>\n<a href=\"https://i.sstatic.net/cNbYr.jpg\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/cNbYr.jpg\"/></a></p>\n<p>edit :</p>\n<p>what igorsk suggested in his answer is a better option adding a test of the same</p>\n<pre><code>:\\&gt;ls -lg\ntotal 2\n-rw-r--r-- 1 197121  91 Apr  3 02:01 complink.bat\n-rw-r--r-- 1 197121 595 Apr  2 23:45 fook.cpp\n\n:\\&gt;complink.bat\n\n:\\&gt;cl /Zi /W4 /Od /EHsc /nologo /analyze fook.cpp /link /release /subsystem:windows user32.lib\nfook.cpp\n\n:\\&gt;dumpbin /headers fook.exe | grep -i subsystem\n            6.00 subsystem version\n               2 subsystem (Windows GUI)\n\n:\\&gt;editbin /subsystem:console fook.exe\nMicrosoft (R) COFF/PE Editor Version 14.16.27045.0\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\n\n:\\&gt;dumpbin /headers fook.exe | grep -i subsystem\n            6.00 subsystem version\n               3 subsystem (Windows CUI)\n\n:\\&gt;cdb -c \"ed fook!pringlob 0xffffffff;g;q\" fook.exe | awk \"/Reading/,/quit/\"\n0:000&gt; cdb: Reading initial command 'ed fook!pringlob 0xffffffff;g;q'\nxxxxxxxxxx\nthis is mytest\nthis is mytest 1 9\nthis is mytest 2 10\nthis is mytest 3 33\nquit:\n</code></pre>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "Apr 3, 2021 at 15:42",
            "is_accepted": false,
            "comments": []
        }
    ]
}