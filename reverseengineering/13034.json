{
    "title": "How to get IDA Pro to understand a virtual function table?",
    "link": "https://reverseengineering.stackexchange.com/questions/13034/how-to-get-ida-pro-to-understand-a-virtual-function-table",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm reversing an old DirectDraw game that uses DirectX 7.</p>\n<p>I have a <code>LPDIRECTDRAWSURFACE7 g_lpDDSBack</code> and <code>g_lpDDSBack-&gt;BltFast</code> is being called but this is how it is decompiled in HexRays:</p>\n<pre><code>(*(int (__stdcall **)(struct IDirectDrawSurface7Vtbl *, int, int, LPDIRECTDRAWSURFACE7, RECT *, MACRO_DDBLTFAST))((int (__stdcall **)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD))g_lpDDSBack-&gt;QueryInterface + 7))(\n                                      g_lpDDSBack,\n                                      x,\n                                      y,\n                                      pgf2-&gt;lpDDSrcSurface,\n                                      &amp;pgf2-&gt;rect,\n                                      DDBLTFAST_SRCCOLORKEY);\n</code></pre>\n<p>For reference, here is the interface:</p>\n<pre><code>DECLARE_INTERFACE_( IDirectDrawSurface7, IUnknown )\n{\n    /*** IUnknown methods ***/\n    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID FAR * ppvObj) PURE; // 0\n    STDMETHOD_(ULONG,AddRef) (THIS)  PURE; // 1\n    STDMETHOD_(ULONG,Release) (THIS) PURE; // 2\n    /*** IDirectDrawSurface methods ***/\n    STDMETHOD(AddAttachedSurface)(THIS_ LPDIRECTDRAWSURFACE7) PURE; // 3\n    STDMETHOD(AddOverlayDirtyRect)(THIS_ LPRECT) PURE; // 4\n    STDMETHOD(Blt)(THIS_ LPRECT,LPDIRECTDRAWSURFACE7, LPRECT,DWORD, LPDDBLTFX) PURE; // 5\n    STDMETHOD(BltBatch)(THIS_ LPDDBLTBATCH, DWORD, DWORD ) PURE; // 6\n    STDMETHOD(BltFast)(THIS_ DWORD,DWORD,LPDIRECTDRAWSURFACE7, LPRECT,DWORD) PURE; // 7\n    // etc ...\n</code></pre>\n<p>So from the HexRays code <code>g_lpDDSBack-&gt;QueryInterface + 7</code>, we can see it's calling <code>g_lpDDSBack-&gt;BltFast</code>. But why doesn't HexRays directly call <code>BltFast</code>?</p>\n</div>",
    "votes": "5",
    "answers": 2,
    "views": "2k",
    "tags": [
        "ida",
        "c",
        "hexrays",
        "vtables",
        "virtual-functions"
    ],
    "user": "user16729",
    "time": "Jul 14, 2016 at 4:34",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>HexRays doesn't call it because it doesn't know what is the value of <code>g_lpDDSBack-&gt;QueryInterface</code> in the common case. </p>\n<p>Generally speaking you can define a structure as a <code>QueryInterface</code> type, where members of this structure are named according to the related function names and than you'll see the call as <code>g_lpDDSBack-&gt;QueryInterface-&gt;BltFast</code> .</p>\n</div>",
            "votes": "2",
            "user": "w s",
            "time": "Jul 14, 2016 at 6:43",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It turned out to be a bug in IDA pro. I can't seem to edit my original question so first, I want to point out an error I made in the original question.</p>\n<hr/>\n<p>When <code>g_lpDDSBack</code> is defined as <code>struct IDirectDrawSurface7Vtbl *g_lpDDSBack;</code>, then this was the output HexRays was showing:</p>\n<pre><code>(*(int (__stdcall **)(struct IDirectDrawSurface7Vtbl *, int, int, LPDIRECTDRAWSURFACE7, RECT *, MACRO_DDBLTFAST))((int (__stdcall **)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD))g_lpDDSBack-&gt;QueryInterface + 7))(\n                                      g_lpDDSBack,\n                                      x,\n                                      y,\n                                      pgf2-&gt;lpDDSrcSurface,\n                                      &amp;pgf2-&gt;rect,\n                                      DDBLTFAST_SRCCOLORKEY);\n</code></pre>\n<hr/>\n<p>When <code>g_lpDDSBack</code> is defined as <code>LPDIRECTDRAWSURFACE7 g_lpDDSBack;</code>, then this was the output HexRays was showing:</p>\n<pre><code>(*((int (__stdcall **)(int, int, int, _DWORD, int, signed int))g_lpDDSBack-&gt;lpVtbl + 7))(\n                       g_lpDDSBack,\n                       x,\n                       y,\n                       pgf2-&gt;lpDDSrcSurface,\n                       &amp;pgf2-&gt;rect,\n                       DDBLTFAST_SRCCOLORKEY);\n</code></pre>\n<p>Alright, now here are the instructions to fixing the bug (<code>g_lpDDSBack</code> is defined as <code>LPDIRECTDRAWSURFACE7 g_lpDDSBack;</code>):</p>\n<ol>\n<li>Select <code>lpVtbl</code> in <code>g_lpDDSBack-&gt;lpVtbl</code>, press y and then copy the contents of the textbox to a notepad. In this case, the contents were <code>struct IDirectDrawSurface7::IDirectDrawSurface7Vtbl *lpVtbl</code>.</li>\n<li>Change the type to <code>int lpVtbl</code> and press OK</li>\n<li>Press y again on <code>lpVtbl</code> and change the type back to its original type stored in notepad. In this case, it is <code>struct IDirectDrawSurface7::IDirectDrawSurface7Vtbl *lpVtbl</code>.</li>\n</ol>\n<p>After doing this, this is how it looks like in HexRays (you might have to press F5 first):</p>\n<pre><code>g_lpDDSBack-&gt;lpVtbl-&gt;BltFast(g_lpDDSBack,\n                                      x,\n                                      y,\n                                      pgf2-&gt;lpDDSrcSurface,\n                                      &amp;pgf2-&gt;rect,\n                                      DDBLTFAST_SRCCOLORKEY);\n</code></pre>\n</div>",
            "votes": "0",
            "user": "user16738",
            "time": "Jul 14, 2016 at 19:44",
            "is_accepted": false,
            "comments": []
        }
    ]
}