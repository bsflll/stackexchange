{
    "title": "How Can I Clean Up After IDA Decompation with IDAPython or other resource",
    "link": "https://reverseengineering.stackexchange.com/questions/21999/how-can-i-clean-up-after-ida-decompation-with-idapython-or-other-resource",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>When I am working on a source code recovery project I am usually left with a lot of code that needs to be manually cleaned up by hand. This can take a lot of time and as projects get larger , I am looking for a way to accomplish this quicker. </p>\n<p><strong>EXAMPLE Code before cleanup</strong></p>\n<pre><code>int __cdecl main(int argc, const char **argv, const char **envp)\n{\n  __int64 v3; // rax\n  __int64 v4; // r8\n  __int64 v5; // rax\n  __int64 v6; // r8\n  __int64 v7; // rax\n  __int64 v8; // r8\n  __int64 v9; // rax\n  __int64 v10; // r8\n  __int64 v11; // rax\n  __int64 v12; // r8\n  __int64 v13; // rax\n  __int64 v14; // r8\n  __int64 v15; // rax\n  __int64 v16; // rax\n  Books books; // [rsp+20h] [rbp-E8h]\n\n  strcpy(books.title, \"Learn C++ Programming\");\n  strcpy(books.author, \"Chand Miyan\");\n  strcpy(books.subject, \"C++ Programming\");\n  LODWORD(books.id) = 6495407;\n  v3 = sub_1400011D0(std::cout, \"Book 1 title : \", envp);\n  v5 = sub_1400011D0(v3, &amp;books, v4);\n  std::basic_ostream&lt;char,std::char_traits&lt;char&gt;&gt;::operator&lt;&lt;(v5, sub_1400013A0);\n  v7 = sub_1400011D0(std::cout, \"Book 1 author : \", v6);\n  v9 = sub_1400011D0(v7, books.author, v8);\n  std::basic_ostream&lt;char,std::char_traits&lt;char&gt;&gt;::operator&lt;&lt;(v9, sub_1400013A0);\n  v11 = sub_1400011D0(std::cout, \"Book 1 subject : \", v10);\n  v13 = sub_1400011D0(v11, books.subject, v12);\n  std::basic_ostream&lt;char,std::char_traits&lt;char&gt;&gt;::operator&lt;&lt;(v13, sub_1400013A0);\n  v15 = sub_1400011D0(std::cout, \"Book 1 id : \", v14);\n  v16 = std::basic_ostream&lt;char,std::char_traits&lt;char&gt;&gt;::operator&lt;&lt;(v15, LODWORD(books.id));\n  std::basic_ostream&lt;char,std::char_traits&lt;char&gt;&gt;::operator&lt;&lt;(v16, sub_1400013A0);\n  return 0;\n}\n</code></pre>\n<p>Looking at the code we can see that std::cout is simply printing the variables . but this code while it makes sense to us humans should be cleaned up more before it becomes useful.</p>\n<p><strong>This is AFTER my clean up. By hand...</strong> </p>\n<pre><code>typedef struct Books {\n    char title[44];\n    char author[56];         \n    char subject[100];       \n    int id;\n\n} books;\n\n\n\nint main(){\n\n    __int64 v3; // rax\n    __int64 v4; // r8\n    __int64 v5; // rax\n\n    Books books; // [rsp+20h] [rbp-E8h]\n\n\n    strcpy(books.title, \"Learn C++ Programming\");\n    strcpy(books.author, \"Chand Miyan\");\n    strcpy(books.subject, \"C++ Programming\");\n    LODWORD(books.id) = 6495407;\n\n\n    std::cout &lt;&lt; \"Book 1 title   : \" &lt;&lt; &amp;books.title &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Book 1 author  : \" &lt;&lt; &amp;books.author &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Book 1 subject : \" &lt;&lt; books.subject &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Book 1 id : \"      &lt;&lt; LODWORD(books.id) &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>\n<p>The answer doesn't have to be through IDAPython, but I think it would be a good place to start.</p>\n<p>So far what I have , is this and I am not sure if these is even the right step to go. </p>\n<pre><code>c=idaapi.decompile(0x0000000140001000 ) //\nfor v in c.lvars:\n  print v.name\n</code></pre>\n<p>This though, just prints off the variable names.</p>\n<p>How can I more automate clean up Ida produced code.\nHere is a similar question to mine , but I don't think this explores the possiblity of other options or using  IDAPython. </p>\n<p><a href=\"https://reverseengineering.stackexchange.com/questions/14455/cleaning-hexrays-output\">Cleaning HexRays Output</a></p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "394",
    "tags": [
        "decompilation",
        "idapython",
        "hexrays"
    ],
    "user": "LUser",
    "time": "Aug 29, 2019 at 12:35",
    "comments": [
        {
            "user": "Biswapriyo",
            "text": "<span class=\"comment-copy\">How did you edit the code to <code>std::cout</code>?</span>",
            "time": null
        },
        {
            "user": "LUser",
            "text": "<span class=\"comment-copy\">By hand as mentioned before. I clean code often by hand.</span>",
            "time": null
        }
    ],
    "answers_data": []
}