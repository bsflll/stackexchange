{
    "title": "Trying to run MIPS ELF with a cross toolchain but sigbus error",
    "link": "https://reverseengineering.stackexchange.com/questions/8707/trying-to-run-mips-elf-with-a-cross-toolchain-but-sigbus-error",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I finally successfuly installed a cross toolchain from this <a href=\"http://www.hs-augsburg.de/~beckmanf/dokuwiki/doku.php?id=mips_cross_compiler\" rel=\"nofollow\">site</a> in order to run and debug a mips elf on my x86-64 . I only have the elf file. I can disassemble it but when i try to run it with :</p>\n<p><code>mipsel-none-elf-run myelf</code> </p>\n<p>i get the following error :</p>\n<pre><code>mips-core: 4 byte read to unmapped address 0x400670 at 0x400670\nprogram stopped with signal 10 (User defined signal 1).\n</code></pre>\n<p>(the adresse 0x400670 points the first instructions of the main function. </p>\n<p>Specifying the endianess to the tool gives me the same error.</p>\n<p>I tried to run it with </p>\n<pre><code>mipsel-none-elf-gdb myelf\n\nGNU gdb (GDB) 7.5.1\nCopyright (C) 2012 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"--host=x86_64-unknown-linux-gnu --target=mipsel-none-elf\".\nFor bug reporting instructions, please see:\n&lt;http://www.gnu.org/software/gdb/bugs/&gt;...\n\nwarning: A handler for the OS ABI \"GNU/Linux\" is not built into this configuration\nof GDB.  Attempting to continue with the default mips:3000 settings.\n\nReading symbols from /home/ashkan/Crack/crackme200...(no debugging symbols found)...done.\n(gdb) target sim\nConnected to the simulator.\n(gdb) load\nLoading section .interp, size 0xd vma 0x400154\nLoading section .note.ABI-tag, size 0x20 vma 0x400164\nLoading section .reginfo, size 0x18 vma 0x400184\nLoading section .note.gnu.build-id, size 0x24 vma 0x40019c\nLoading section .dynamic, size 0xd8 vma 0x4001c0\nLoading section .hash, size 0xa4 vma 0x400298\nLoading section .dynsym, size 0x160 vma 0x40033c\nLoading section .dynstr, size 0xdf vma 0x40049c\nLoading section .gnu.version, size 0x2c vma 0x40057c\nLoading section .gnu.version_r, size 0x30 vma 0x4005a8\nLoading section .init, size 0x90 vma 0x4005d8\nLoading section .text, size 0x490 vma 0x400670\nLoading section .MIPS.stubs, size 0xa0 vma 0x400b00\nLoading section .fini, size 0x4c vma 0x400ba0\nLoading section .rodata, size 0x40 vma 0x400bec\nLoading section .eh_frame, size 0x4 vma 0x400c2c\nLoading section .ctors, size 0xc vma 0x410c30\nLoading section .dtors, size 0x8 vma 0x410c3c\nLoading section .jcr, size 0x4 vma 0x410c44\nLoading section .data, size 0x1b0 vma 0x410c50\nLoading section .rld_map, size 0x4 vma 0x410e00\nLoading section .got, size 0x5c vma 0x410e10\nLoading section .sdata, size 0x4 vma 0x410e6c\n---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---\nStart address 0x400670\nTransfer rate: 26592 bits in &lt;1 sec.\n</code></pre>\n<p>I used target sim and load to configure gdb. But when i want to run the program. I get :</p>\n<p>(gdb) r \nStarting program: /home/ashkan/Crack/crackme200 \nmips-core: 4 byte read to unmapped address 0x400670 at 0x400670</p>\n<p>Program received signal SIGBUS, Bus error.\n0x00400670 in ?? ()\n(gdb) </p>\n<p>So i've read that the error comes from unaligned adresses. Is there a way to fix it ? Here is the link to the elf file: <a href=\"https://bitbucket.org/Nomyo/reverse-engineering/downloads\" rel=\"nofollow\">link</a> If anybody has an idea.. Thanks have a good day.</p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "614",
    "tags": [
        "x86",
        "debugging",
        "elf",
        "mips",
        "error"
    ],
    "user": "creuchmeuch",
    "time": "Apr 16, 2015 at 15:43",
    "comments": [
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">Which toolchain are you using ? How exactly do you run the executable ?By the way it is not because of unaligned address, this address is aligned to 0x10. The problem looks like in loading the executable.</span>",
            "time": null
        },
        {
            "user": "creuchmeuch",
            "text": "<span class=\"comment-copy\">Hey, thanks. I use the toolchain provided by this tuto [hs-augsburg.de/~beckmanf/dokuwiki/â€¦. I use the command : mipsel-none-elf-gdb myelf . Plus gdb if configured as : This GDB was configured as \"--host=x86_64-unknown-linux-gnu --target=mipsel-none-elf\". I'm sorry i have only a few knowledge about cross toolchain, embeded systems .. hope it will help you to understand the problem</span>",
            "time": null
        },
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">Would you please update the question with full sequence of running the executable  and links? I don't see how are you running the emulator.</span>",
            "time": null
        },
        {
            "user": "creuchmeuch",
            "text": "<span class=\"comment-copy\">I reedit the question i hope you have more information. Sorry, i 'm a begginer</span>",
            "time": null
        }
    ],
    "answers_data": []
}