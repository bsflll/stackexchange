{
    "title": "Can I evaluate operand values of an instruction currently at breakpoint (while debugging) in IDA using IDAPython?",
    "link": "https://reverseengineering.stackexchange.com/questions/3274/can-i-evaluate-operand-values-of-an-instruction-currently-at-breakpoint-while-d",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Let's say I have lots of breakpoints at some <code>push</code> instructions.\nI am trying to dereference the operand (if address) - get the actual relevant value for each one in a script, handling immediate, base + index, register, etc. Can I do this in any other way than:</p>\n<ol>\n<li>Read it with ESP after <code>Step Into</code> (executing the instruction at breakpoint) (<code>DbgRead()</code> of <code>IDC</code>, <code>idaapi.dbg_read_memory()</code>)</li>\n<li>Read the operand and manually evaluate it in the script with respective calls to <code>DbgRead()</code>, <code>GetRegValue()</code>, etc.</li>\n</ol>\n<p>This, if possible, I guess would imply a particular <code>idaapi</code> function.</p>\n</div>",
    "votes": "7",
    "answers": 1,
    "views": "803",
    "tags": [
        "ida",
        "idapython",
        "debugging"
    ],
    "user": "algotroll",
    "time": "Dec 24, 2013 at 0:36",
    "comments": [
        {
            "user": "tmr232",
            "text": "<span class=\"comment-copy\">Does the <code>push</code> line have an xref to the data?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>No, you must implement the <code>base + index * scale</code> yourself (if on i386).  On other architectures without this complexity (e.g. ARM) it is a bit easier.</p>\n<p>If it helps any, I have already implemented this functionality in <a href=\"https://github.com/zachriggle/pwndbg\" rel=\"nofollow\"><code>pwndbg</code></a> for exactly the same purpose.</p>\n<p>You can see the implementation here:\n<a href=\"https://github.com/zachriggle/pwndbg/blob/master/pwndbg/disasm/x86.py\" rel=\"nofollow\">https://github.com/zachriggle/pwndbg/blob/master/pwndbg/disasm/x86.py</a></p>\n<p>Note that I am not using IDA's API, but rather pwndbg's internal API which relies on GDB.  You will have to make some small changes to the way in which you fetch register and memory values from that code (e.g. <code>pwndbg.regs.pc</code> gives me the value of EIP or RIP as appropriate).</p>\n</div>",
            "votes": "1",
            "user": "Zach Riggle",
            "time": "Feb 3, 2016 at 16:54",
            "is_accepted": false,
            "comments": [
                {
                    "user": "tmr232",
                    "text": "<span class=\"comment-copy\">Getting the <code>base</code>, <code>index</code>, <code>scale</code> and <code>offset</code> values in IDA can be a bit tricky. You can use Sark to handle it (for x86 and x64). It doesn't do the actual reading of debug values, though.</span>",
                    "time": null
                }
            ]
        }
    ]
}