{
    "title": "Binary diff + patching across versions",
    "link": "https://reverseengineering.stackexchange.com/questions/29504/binary-diff-patching-across-versions",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>What are the current options for <strong>binary patching</strong> which works <strong>across different versions</strong> of the binary?</p>\n<p>E.g. we created a binary patch for a specific version of a binary and want to apply that patch to another version of a binary which is slightly different to the original binary but identical in the 'area' (the function which needs to be patched)?</p>\n<p>Of course this won't work in every case, but a good-enough solution for x64 would be fine.\nAre there any tools, frameworks etc. available?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "471",
    "tags": [
        "binary-analysis",
        "x86",
        "tools",
        "binary",
        "patching"
    ],
    "user": "MRalwasser",
    "time": "Nov 4, 2021 at 8:15",
    "comments": [
        {
            "user": "MRalwasser",
            "text": "<span class=\"comment-copy\">Exactly. Ideally considering architectural/binary specifics in the surrounding \"pattern\" which is likely to change across versions (for example, ignoring any absolute addressing).</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Version tracking in ghidra is exactly what you are looking for. Say you have two binaries with different versions. First, you need to analyze those binaries and save the analysis results (you can manually patch binary before or during this stage). Then click on version tracking symbol and create new version tracking session. Here, you can track and apply changes over from source to destination binary.</p>\n<p><a href=\"https://i.sstatic.net/qLA9o.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/qLA9o.png\"/></a></p>\n<p>Please check their documentation in the help section, as shown in the image.</p>\n<p><a href=\"https://i.sstatic.net/JyYIW.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/JyYIW.png\"/></a></p>\n<p>Please also checkout the complete video tutorial <a href=\"https://www.youtube.com/watch?v=K83T7iVla5s\" rel=\"nofollow noreferrer\">here</a>.</p>\n</div>",
            "votes": "1",
            "user": "R4444",
            "time": "Nov 19, 2021 at 14:08",
            "is_accepted": false,
            "comments": [
                {
                    "user": "MRalwasser",
                    "text": "<span class=\"comment-copy\">the problem is that ghidra's version tracking does not have a \"similar functions\" correlator, just an \"identical functions\" correlator. If the patch needs to be done in such a function (e.g. in a very large function where it is more likely that the function has been changed across versions) , \"version tracking\" does not help.</span>",
                    "time": null
                },
                {
                    "user": "R4444",
                    "text": "<span class=\"comment-copy\">In that case you should definately take a look @ deepbindiff or radare's radiff2 project to get \"similar functions\" and \"different functions\" then apply patch using ghidra or any other tool</span>",
                    "time": null
                }
            ]
        }
    ]
}