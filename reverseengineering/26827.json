{
    "title": "ghidra rename fails",
    "link": "https://reverseengineering.stackexchange.com/questions/26827/ghidra-rename-fails",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>With ghidra 9.2.1 (2020 dec 15) in a decompiled dll, I can rename a variable with L.</p>\n<ul>\n<li><p>Sometimes (can't find a repro), when I rename a second local variable (it does not appear in listing/assembly), the previous rename is cancelled.</p>\n</li>\n<li><p>Sometimes (idem), I can't rename one specific variable at all.</p>\n</li>\n</ul>\n<p>What am I missing ?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ghidra",
        "decompile"
    ],
    "user": "Soleil",
    "time": "Jan 20, 2021 at 4:28",
    "comments": [
        {
            "user": "hairlessbear",
            "text": "<span class=\"comment-copy\">I've encountered similar rename issues multiple times since Ghidra was initially released. I haven't been able to track down a root cause or solution, unfortunately. Point being, I don't think you're missing anything; Ghidra just has rename issues sometimes. Maybe related: <a href=\"https://github.com/NationalSecurityAgency/ghidra/issues/193\" rel=\"nofollow noreferrer\">github.com/NationalSecurityAgency/ghidra/issues/193</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I don't have a <em>real</em> answer but a few hints that might help solving the issue at hand:</p>\n<p>As already stated in the comments, Ghidra still has a few issues, one example being: <a href=\"https://github.com/NationalSecurityAgency/ghidra/issues/193\" rel=\"nofollow noreferrer\">https://github.com/NationalSecurityAgency/ghidra/issues/193</a>. So maybe, you should open up another issue on Github using the most recent Ghidra version and a minimum example to reproduce the issue. In my experience, the developers are very helpful and react to every opened issue.</p>\n<p>After renaming a variable, Ghidra will re-run the analysis of the currently displayed function. In some phase of this analysis it then seems to decide to get rid of the variable you <em>just</em> renamed. And for some reason it <em>then</em> sometimes decides to introduce a new variable doing the exact same thing your renamed (and now removed) variable did before with a new name. This effectively looks as if the rename was canceled.</p>\n<p>In my experience it sometimes help to <strong>Commit Local Names</strong> and/or <strong>Commit Params/Return</strong> (select it from the context menu of the Decompiler view). I realize, this is not a satisfying answer because I myself don't know exactly what's going on there, but from a practical perspective this solved the problem for me multiple times, so it might help you as well.</p>\n</div>",
            "votes": "1",
            "user": "born",
            "time": "Nov 28, 2021 at 14:24",
            "is_accepted": false,
            "comments": []
        }
    ]
}