{
    "title": "IDA Pro: use structs on parameters",
    "link": "https://reverseengineering.stackexchange.com/questions/3061/ida-pro-use-structs-on-parameters",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a small function that is given a <code>struct</code> as parameters. The <code>struct</code> looks to something like this:</p>\n<pre><code>struct my_struct {\n  short a;\n  unsigned int b;\n  unsigned int c;\n};\n</code></pre>\n<p>Taking care of the alignment I build the following <code>struct</code> in IDA:</p>\n<pre><code>field_0 +0x0\nfield_1 +0x4\nfield_2 +0x8\n</code></pre>\n<p>The compiler builds it so that it takes <code>rbp+0x10</code> as the first field in the <code>struct</code>, <code>rbp+0x14</code> as the second and so on. The problem now arises because if I try to apply the pre-defined IDA <code>struct</code> to the instructions, I always get something like <code>[rbp+struct.field_0+0x10]</code>. This get more complicated if there is actually something in my struct at <code>+0x10</code>, because then it just shows <code>[rbp+struct_fieldX]</code> (which is wrong).</p>\n<p>The question is: <em>Is there a way to tell IDA (I'm using 6.3) to apply the <code>struct</code> with an offset of <code>0x10</code>?</em> </p>\n<p>The dirty trick for this simple case is to create a <code>struct</code> that has 2 <code>size_t</code> dummy fields for the <code>RIP</code> and <code>SFP</code>, but that does not seem to be right way to go here.</p>\n</div>",
    "votes": "10",
    "answers": 1,
    "views": "5k",
    "tags": [
        "ida",
        "struct"
    ],
    "user": "sqrtsben",
    "time": "Nov 20, 2013 at 13:36",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Add your struct in the function's stack view:</p>\n<ol>\n<li>With your cursor in the function's disassembly view, press <kbd>Ctrl</kbd>+<kbd>K</kbd> to open the stack view.</li>\n<li>In the stack view, ensure that enough function arguments exist to get to at least <code>+00000010</code> in the stack. Use <kbd>D</kbd> to add more function arguments as necessary.</li>\n<li>Position your cursor on the <code>+00000010</code> line in the stack view and press <kbd>Alt</kbd>+<kbd>Q</kbd> to specify <code>my_struct</code> at that offset.</li>\n</ol>\n</div>",
            "votes": "8",
            "user": "Jason Geffner",
            "time": "Nov 20, 2013 at 14:53",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user1354557",
                    "text": "<span class=\"comment-copy\">Note for emphasis: During step three, you <b>must</b> be on the stack view. If you place your cursor on the corresponding local variable in IDA view and press <code>Alt+Q</code>, IDA will try to interpret <i>the contents of the function</i> as a structure, rather than the variable, which destroys the function.  This is a mistake I see people make pretty often when learning structures in IDA.</span>",
                    "time": null
                }
            ]
        }
    ]
}