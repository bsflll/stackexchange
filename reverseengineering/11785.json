{
    "title": "Reverse Engineering Chinese laser engraver",
    "link": "https://reverseengineering.stackexchange.com/questions/11785/reverse-engineering-chinese-laser-engraver",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I would like to reverse-engineer the software that came with my Chinese-made laser engraver. Unfortunately the hardware does not play at all with other software out there... The original software is horribly buggy, is loaded with malware (specifically the Strictor Trojan), and the vendor is refusing to give support for the program. I would like to get the original code of this program so that I may remove the Trojan, debug the software, and just make the damn thing work. I paid over $400 for the thing and frankly I am quite pissed off at the fact that the software is complete SHIT. (pretty sure it hasn't been updated since win2k...) It acts as if it were written by some highschool kid as a senior project or something... severely limited and severely bugged.</p>\n<p>So looking at the error files this program keeps pumping out, i WAS 100% sure that the main program was made in .net (not sure if VB, VC, VC++, etc). it's stating errors with \"windows.form.button...\", ontop of that, they required .net framework to be installed in order to use it. Which made me think possibly VB? However after trying VBDecompilerLite, it stated that the program was compiled using an unknown compiler... so i'm at a loss here.</p>\n<p>I have tried to extract the code from the exe using DeDe, ResourceHacker, Universal Extractor, 7Zip extraction, etc - all of which produce a 0b file \"[0~]\" which is unreadable, or an error saying could not extract files. </p>\n<p>If anyone has a clue of what I could try next, please let me know. I cannot upload the file for people to test because - as I stated above - it contains malware. I am decompiling the program on a PC that is off the usual network, so no internet / network access there. </p>\n<p>Virus Scan Results:</p>\n<pre><code>Scanner         |   Malware Variant             |   AV updated\n---------------------------------------------------------------\nALYac               Gen:Variant.Strictor.99340      20160115\nAd-Aware            Gen:Variant.Strictor.99340      20160115\nArcabit             Trojan.Strictor.D1840C          20160115\nAvast               Win32:Malware-gen               20160115\nBitDefender         Gen:Variant.Strictor.99340      20160115\nEmsisoft            Gen:Variant.Strictor.99340 (B)  20160115\nF-Secure            Gen:Variant.Strictor.99340      20160115\nGData               Gen:Variant.Strictor.99340      20160115\nMicroWorld-eScan    Gen:Variant.Strictor.99340      20160115\nQihoo-360           QVM19.1.Malware.Gen             20160115\nRising              PE:Malware.RDM.18!5.18 [F]      20160114 \n</code></pre>\n<p>Please help me!</p>\n<p>Here is the original error that the program gave me (if it helps):</p>\n<pre><code>&gt; See the end of this message for details on invoking  just-in-time\n&gt; (JIT) debugging instead of this dialog box.\n&gt; \n&gt; ************** Exception Text ************** System.ArgumentException: Parameter is not valid.    at System.Drawing.Bitmap.LockBits(Rectangle\n&gt; rect, ImageLockMode flags, PixelFormat format, BitmapData bitmapData) \n&gt; at System.Drawing.Bitmap.LockBits(Rectangle rect, ImageLockMode flags,\n&gt; PixelFormat format)    at xj2.Form1.Gray2(Bitmap srcBitmap, Boolean\n&gt; reverse)    at xj2.Form1.button3_Click(Object sender, EventArgs e)   \n&gt; at System.Windows.Forms.Control.OnClick(EventArgs e)    at\n&gt; System.Windows.Forms.Button.OnClick(EventArgs e)    at\n&gt; System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)    at\n&gt; System.Windows.Forms.Control.WmMouseUp(Message&amp; m, MouseButtons\n&gt; button, Int32 clicks)    at\n&gt; System.Windows.Forms.Control.WndProc(Message&amp; m)    at\n&gt; System.Windows.Forms.ButtonBase.WndProc(Message&amp; m)    at\n&gt; System.Windows.Forms.Button.WndProc(Message&amp; m)    at\n&gt; System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message&amp; m)\n&gt; at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message&amp;\n&gt; m)    at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32\n&gt; msg, IntPtr wparam, IntPtr lparam)\n&gt; \n&gt; \n&gt; ************** Loaded Assemblies ************** mscorlib\n&gt;     Assembly Version: 2.0.0.0\n&gt;     Win32 Version: 2.0.50727.3643 (GDR.050727-3600)\n&gt;     CodeBase: file:///C:/windows/Microsoft.NET/Framework/v2.0.50727/mscorlib.dll\n&gt; ---------------------------------------- BoxedAppSDK_AppDomainManager\n&gt;     Assembly Version: 1.0.0.0\n&gt;     Win32 Version: 1.0.0.0\n&gt;     CodeBase: file:///C:/windows/assembly/GAC/BoxedAppSDK_AppDomainManager/1.0.0.0__ef07ce3257ee81c1/BoxedAppSDK_AppDomainManager.dll\n&gt; ---------------------------------------- xj2\n&gt;     Assembly Version: 1.0.0.0\n&gt;     Win32 Version: 1.0.0.0\n&gt;     CodeBase: file:///C:/Documents%20and%20Settings/Owner/デスクトップ/1.exe\n&gt; ---------------------------------------- System.Windows.Forms\n&gt;     Assembly Version: 2.0.0.0\n&gt;     Win32 Version: 2.0.50727.3645 (GDR.050727-3600)\n&gt;     CodeBase: file:///C:/windows/assembly/GAC_MSIL/System.Windows.Forms/2.0.0.0__b77a5c561934e089/System.Windows.Forms.dll\n&gt; ---------------------------------------- System\n&gt;     Assembly Version: 2.0.0.0\n&gt;     Win32 Version: 2.0.50727.3644 (GDR.050727-3600)\n&gt;     CodeBase: file:///C:/windows/assembly/GAC_MSIL/System/2.0.0.0__b77a5c561934e089/System.dll\n&gt; ---------------------------------------- System.Drawing\n&gt;     Assembly Version: 2.0.0.0\n&gt;     Win32 Version: 2.0.50727.3644 (GDR.050727-3600)\n&gt;     CodeBase: file:///C:/windows/assembly/GAC_MSIL/System.Drawing/2.0.0.0__b03f5f7f11d50a3a/System.Drawing.dll\n&gt; ---------------------------------------- Accessibility\n&gt;     Assembly Version: 2.0.0.0\n&gt;     Win32 Version: 2.0.50727.3053 (netfxsp.050727-3000)\n&gt;     CodeBase: file:///C:/windows/assembly/GAC_MSIL/Accessibility/2.0.0.0__b03f5f7f11d50a3a/Accessibility.dll\n&gt; ---------------------------------------- xj2.resources\n&gt;     Assembly Version: 1.0.0.0\n&gt;     Win32 Version: 1.0.0.0\n&gt;     CodeBase: file:///C:/Documents%20and%20Settings/Owner/デスクトップ/en/xj2.resources.DLL\n&gt; ---------------------------------------- System.Configuration\n&gt;     Assembly Version: 2.0.0.0\n&gt;     Win32 Version: 2.0.50727.3053 (netfxsp.050727-3000)\n&gt;     CodeBase: file:///C:/windows/assembly/GAC_MSIL/System.Configuration/2.0.0.0__b03f5f7f11d50a3a/System.Configuration.dll\n&gt; ---------------------------------------- System.Xml\n&gt;     Assembly Version: 2.0.0.0\n&gt;     Win32 Version: 2.0.50727.3082 (QFE.050727-3000)\n&gt;     CodeBase: file:///C:/windows/assembly/GAC_MSIL/System.Xml/2.0.0.0__b77a5c561934e089/System.Xml.dll\n&gt; ----------------------------------------\n&gt; \n&gt; ************** JIT Debugging ************** To enable just-in-time (JIT) debugging, the .config file for this application or computer\n&gt; (machine.config) must have the jitDebugging value set in the\n&gt; system.windows.forms section. The application must also be compiled\n&gt; with debugging enabled.\n&gt; \n&gt; For example:\n&gt; \n&gt; &lt;configuration&gt;\n&gt;     &lt;system.windows.forms jitDebugging=\"true\" /&gt; &lt;/configuration&gt;\n&gt; \n&gt; When JIT debugging is enabled, any unhandled exception will be sent to\n&gt; the JIT debugger registered on the computer rather than be handled by\n&gt; this dialog box.\n</code></pre>\n</div>",
    "votes": "6",
    "answers": 2,
    "views": "934",
    "tags": [
        "malware",
        "executable",
        ".net"
    ],
    "user": "Jason",
    "time": "Jan 21, 2016 at 7:36",
    "comments": [
        {
            "user": "ebux",
            "text": "<span class=\"comment-copy\">It seems to use .NET (CodeBase: file:///C:/windows/Microsoft.NET/Framework/), so try to use .NET Reflector to decompile the code.</span>",
            "time": null
        },
        {
            "user": "Jason",
            "text": "<span class=\"comment-copy\">@ebux Thanks for the advice, i'll try it.  <b>edit: I tried .NET Reflector, however it came back as not being a .NET module...</b></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><a href=\"https://www.vb-decompiler.org/\" rel=\"nofollow noreferrer\">VB Decompiler</a> is for decompiling native programs and P-code programs.</p>\n<p>But as @ebux said, your target appears to be written in .NET, so you'd need to use something like <a href=\"http://ilspy.net/\" rel=\"nofollow noreferrer\">ILSpy</a> or <a href=\"https://www.red-gate.com/products/dotnet-development/reflector/\" rel=\"nofollow noreferrer\">.NET Reflector</a>.</p>\n<p>However, given that your target is packed with <a href=\"http://www.boxedapp.com/boxedapppacker/index.html\" rel=\"nofollow noreferrer\">BoxedApp</a>, you'll first need to unpack it. <a href=\"https://www.google.com/webhp?q=unpack%20boxedapp\" rel=\"nofollow noreferrer\">A quick Google search</a> shows that it's rather easy to unpack the packed files -- all you need is a hex editor.</p>\n<p>Once you've extracted the files from the BoxedApp EXEs, you can then decompile them with ILSpy or .NET Reflector:</p>\n<p><a href=\"https://i.sstatic.net/JJRJs.png\" rel=\"nofollow noreferrer\"><img alt=\"ILSpy\" src=\"https://i.sstatic.net/JJRJs.png\"/></a></p>\n</div>",
            "votes": "3",
            "user": "Jason Geffner",
            "time": "Jan 20, 2016 at 15:16",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\"><i>\"I cannot upload the file for people to test because - as I stated above - it contains malware.\"</i> - Can you save the file in a password-protected ZIP and upload the ZIP somewhere?</span>",
                    "time": null
                },
                {
                    "user": "Jason",
                    "text": "<span class=\"comment-copy\">Yeah, I know the feeling. I can do a password protected zip/rar file in that case, can you suggest a platform to upload to without having to register? password will be \"reverseengineering.stackexchange.com\"</span>",
                    "time": null
                },
                {
                    "user": "Jason",
                    "text": "<span class=\"comment-copy\">For safety, I deleted my previous comment / link (just in case).   I have uploaded the file to a site i found. I had some issues with editing the current zip file to password protect it, so I had to double-archive it (work-around due to the virus scanner constantly deleting the extracted files.... argh!) <a href=\"http://www.filedropper.com/acan-a4\" rel=\"nofollow noreferrer\">http://www.filedropper.com/acan-a4</a> it's a 7zip &amp; RAR archive. <b>PW: reverseengineering.stackexchange.com</b></span>",
                    "time": null
                },
                {
                    "user": "Jason",
                    "text": "<span class=\"comment-copy\">Thank you very much sir, you have saved me and my company quite the headache! We will, of course, use the source code in an ethical way (just fixing the issues &amp; using, no selling). I wish i could add more points for your answer, however i'm limited to just one...</span>",
                    "time": null
                },
                {
                    "user": "SSpoke",
                    "text": "<span class=\"comment-copy\">I was interested in a laser engraver coded in .NET heh, For the future i'll mirror the link as well <a href=\"http://www.mediafire.com/download/kkjpauk5wiejumx/acan-a4.rar\" rel=\"nofollow noreferrer\">mediafire.com/download/kkjpauk5wiejumx/acan-a4.rar</a> <b>PW: reverseengineering.stackexchange.com</b></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>RedGate's NET Reflector can disassemble a whole DLL assembly and generate the .cs files &amp; even .vcxproj files. </p>\n<p>With the VSPro version, you can disassemble &amp; debug code on the fly.</p>\n<p>So, I suggest getting a trial of it.</p>\n<p>However, if the code is ofuscated (or is part native / part managed, ie with C++ CLI) it will not disassemble completely. However, from your stack trace, looks like it is not ofuscated.</p>\n<p>Additionally some ofuscators create a thread that checks in an infinite loop if System.Diagnostics.Debugger.IsAttached property is true and if so kills the whole process, so some extra effort may be required :)</p>\n</div>",
            "votes": "1",
            "user": "Fernando Gonzalez Sanchez",
            "time": "Jan 20, 2016 at 18:03",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Jason",
                    "text": "<span class=\"comment-copy\">Thank you for your suggestion. I will look into those programs for future reference!</span>",
                    "time": null
                }
            ]
        }
    ]
}