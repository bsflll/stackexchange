{
    "title": "Using an existing IDB from IDA command line interface",
    "link": "https://reverseengineering.stackexchange.com/questions/6935/using-an-existing-idb-from-ida-command-line-interface",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Is there any way to use an existing IDB from the IDA command line interface ?</p>\n<p>I went through the list of command line switches <a href=\"https://www.hex-rays.com/products/ida/support/idadoc/417.shtml\" rel=\"nofollow\">here</a> but there isn't any related switches.</p>\n<p>As I am currently scripting IDA to do some processing based on the same file, I realised I could save some time by reusing the existing IDB, instead of repeatedly deleting and creating another new IDB per iteration. ( -c causes this behavior )  </p>\n<p>My current command: <code>idaw.exe -c -A -SC:\\someScript.py</code> </p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "3k",
    "tags": [
        "ida",
        "idapython",
        "automation"
    ],
    "user": "iridescent",
    "time": "Dec 31, 2014 at 9:25",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>My current command: <code>idaw.exe -c -A -SC:\\someScript.py</code></p>\n</blockquote>\n<p>Remove the <code>-c</code> and add the existing IDB file's path:</p>\n<p><code>idaw.exe -A -SC:\\someScript.py C:\\existingIdb.idb</code></p>\n</div>",
            "votes": "2",
            "user": "Jason Geffner",
            "time": "Dec 31, 2014 at 15:26",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>when i need to get some function info on an existing idb i use this see if it helps</p>\n<pre><code>&gt;cat idc\\dumpfun.idc\n#include &lt;idc.idc&gt;\nstatic main () {    \n        auto fun,ref,funname,fullstr,instr,fpi,fpo;\n        Batch(1);\n        fun = MinEA();\n        fpi = fopen(\"input.txt\",\"rb\");\n        instr = readstr(fpi);\n        fclose(fpi);\n        fpo = fopen(\"outtext.txt\",\"wb\");\n        while (fun != -1) {\n                fun = NextFunction(fun);\n                ref = RfirstB(fun);\n                funname = GetFunctionName(fun);\n                if( strstr(instr,funname) != -1) {\n                        fullstr = form(\"%x %x %s\\n\",fun,ref,funname);\n                        writestr(fpo,fullstr);    \n                }\n        }\n        fclose(fpo);\n        Exit(0);    \n}\n&gt;echo VirtualQuery &gt; input.txt    \n&gt;cat input.txt\nVirtualQuery    \n&gt;del outtext.txt    \n&gt;idag   -Sdumpfun.idc idag.idb    \n&gt;cat outtext.txt\n5706b8 567b5f VirtualQuery\nffffffff ffffffff\n</code></pre>\n</div>",
            "votes": "0",
            "user": "blabb",
            "time": "Dec 31, 2014 at 12:16",
            "is_accepted": false,
            "comments": []
        }
    ]
}