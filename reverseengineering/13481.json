{
    "title": "What is the difference between program slicing and taint analysis?",
    "link": "https://reverseengineering.stackexchange.com/questions/13481/what-is-the-difference-between-program-slicing-and-taint-analysis",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm studying program slicing and taint analysis. I know notion of program slicing and taint analysis. </p>\n<p>I think Program slicing and taint analysis are similar notion.\nI don' know difference between program slicing and taint analysis.</p>\n<p>What is the difference between program slicing and taint analysis?</p>\n</div>",
    "votes": "4",
    "answers": 2,
    "views": "1k",
    "tags": [
        "binary-analysis",
        "program-analysis"
    ],
    "user": "Seong-Kyun",
    "time": "Sep 10, 2016 at 8:12",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In my understanding there are two major differences: </p>\n<p><strong>Program Slicing</strong> creates a reduced representant of a program which should still produces the same output for a given input. So you reduce the given program to its core functionality and you throw away all the clumpy/insignificant attachments.</p>\n<p>In contrast a <strong>Taint Analysis</strong> traces the path of an information through an application and observes all the objects which are affected/visited/influenced by the corresponding information. Therefor a specific input is labeled or tagged, so it could be tracked during its execution.</p>\n<p>So you have <em>a reduced representation of a program</em> with consideration of input output behavior VS the <em>trail of a selected input/variable</em> within a program and its dependencies.</p>\n<hr/>\n<p>See also detailed descriptions below:</p>\n<p><strong>Program slicing</strong> tries to reduce a given program <code>P</code> to a minimum form, a so called slice <code>S</code>, which produces the same behavior. More formally taken from these <a href=\"http://web.cs.iastate.edu/~weile/cs513x/5.DependencySlicing.pdf\" rel=\"nofollow\">slides</a>:</p>\n<blockquote>\n<ul>\n<li>produce a slice <code>S</code> from a given program <code>P</code> by deleting statements</li>\n<li>slice must be syntactically correct a given set of variables <code>V</code></li>\n<li>should produce the same output when given to <code>S</code> and <code>P</code></li>\n</ul>\n</blockquote>\n<p><strong>Taint analysis</strong> can be seen as a form of Information Flow Analysis. A more formal definition ripped from <a href=\"http://web.cs.iastate.edu/~weile/cs513x/5.TaintAnalysis1.pdf\" rel=\"nofollow\">here</a>: </p>\n<blockquote>\n<p>Information flows from object x to object y, denoted xâ†’y , whenever\n  Information stored in x is transferred to, object y.</p>\n</blockquote>\n</div>",
            "votes": "3",
            "user": "knx",
            "time": "Sep 10, 2016 at 10:58",
            "is_accepted": false,
            "comments": [
                {
                    "user": "lllllllllllll",
                    "text": "<span class=\"comment-copy\">IMHO, what you are referring is about \"static program slicing\". On the other hand, in terms of \"dynamic slicing\" which is performed on a execution trace, then it cares about a selected input as well (since one trace corresponds to one input).</span>",
                    "time": null
                },
                {
                    "user": "knx",
                    "text": "<span class=\"comment-copy\">Could you provide a reference for static vs dynamic slicing?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'd say they are essentially the same, with slightly different focus:</p>\n<p><em>Program slicing</em> is, strictly, extracting <em>code</em> that operates on specific variables/memory, while omitting all other code;</p>\n<p><em>Taint analysis</em> is tracking which <em>other</em> variables/memory are affected, via that code, by the ones you chose. Also, tainted data is usually stricter defined as \"user-controllable data\", while slicing can be done on any var.</p>\n</div>",
            "votes": "0",
            "user": "Vitaly Osipov",
            "time": "Sep 11, 2016 at 4:59",
            "is_accepted": false,
            "comments": []
        }
    ]
}