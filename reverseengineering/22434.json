{
    "title": "Is it possible to define the adress of a function in assembly?",
    "link": "https://reverseengineering.stackexchange.com/questions/22434/is-it-possible-to-define-the-adress-of-a-function-in-assembly",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am creating a PoC for anti-disassembly techniques, and I would like to know if there were ways to define the address of functions once compiled with gcc.</p>\n<p>Here is the PoC program :</p>\n<pre><code>BITS 32\nEXTERN puts\nSECTION .data\n    chaine      db \"Hello world !\", 0\n\nSECTION .text\n    GLOBAL main\n\n    I_Want_to_control_this_func_addr:\n    ret\n\n    main:\n    push chaine\n    ; xor eax, eax\n   jz beer+1\nbeer:\n   db 0xe8\n    add al, 3\n    add al, 8\n    pop eax\n    ret\n</code></pre>\n<p>I would like the function to have the address <code>0x08040309</code>.</p>\n<p>I am compiling with : <code>nasm -f elf test.asm; gcc -m32 -o test test.o</code></p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "56",
    "tags": [
        "disassembly",
        "anti-debugging",
        "disassemblers",
        "compilers"
    ],
    "user": "Nark",
    "time": "Oct 31, 2019 at 11:55",
    "comments": [],
    "answers_data": []
}