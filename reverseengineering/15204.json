{
    "title": "Why can't gdb read memory if pwntools is used to send input?",
    "link": "https://reverseengineering.stackexchange.com/questions/15204/why-cant-gdb-read-memory-if-pwntools-is-used-to-send-input",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Here is the program which <code>gdb</code> is attached to:</p>\n<p><strong>prog.c</strong></p>\n<pre><code>#include &lt;stdio.h&gt;\n\nvoid dummy(char* s)\n{\n\n}\n\nint main()\n{\n    char buf[512];\n    scanf(\"%s\", buf);\n    printf(\"%s\\n\", buf);\n    dummy(buf);\n    return 0;\n}\n</code></pre>\n<p>It is compiled with:</p>\n<pre><code>gcc prog.c o prog\n</code></pre>\n<p>This is the script which drives the program:</p>\n<pre><code>from pwn import *\n\np = process(\"./prog\")\nraw_input('&gt;&gt;')\np.sendline('A')\n</code></pre>\n<p>Here's the sequence of operation I perform:</p>\n<ol>\n<li>Run the script in one bash tab. It launches <code>prog</code></li>\n<li>In another bash tab: <code>sudo gdb -p `pgrep prog` </code>. <code>gdb</code> attaches itself to the running process</li>\n<li>Set a breakpoint on <code>dummy</code> call in <code>gdb</code>: <code>b dummy</code></li>\n<li>Press <code>c</code> in <code>gdb</code> to continue</li>\n<li>Hit <kbd>Enter</kbd> in the script to continue</li>\n<li><code>gdb</code> gives up by saying: <code>0x000056446a5af764 &lt;dummy+4&gt;:    Cannot access memory at address 0x56446a5af764</code></li>\n</ol>\n<p><a href=\"https://i.sstatic.net/RedOd.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/RedOd.png\"/></a></p>\n<p>If instead of feeding the input programmatically, I launch the program manually, attach gdb and feed the input myself, the breakpoint is correctly hit.</p>\n<p><a href=\"https://i.sstatic.net/rYOEA.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/rYOEA.png\"/></a></p>\n<p>What is the problem in the script?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "gdb"
    ],
    "user": "sherlock",
    "time": "Nov 7, 2021 at 10:03",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The process dies before/while <code>gdb</code> connects to it, as your python script finishes. Use the following line at the end of your script to keep it running.</p>\n<pre><code>p.interactive()\n</code></pre>\n</div>",
            "votes": "5",
            "user": "galoget",
            "time": "Sep 28, 2021 at 8:06",
            "is_accepted": true,
            "comments": []
        }
    ]
}