{
    "title": "Router's serial port only outputs garbage",
    "link": "https://reverseengineering.stackexchange.com/questions/12523/routers-serial-port-only-outputs-garbage",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to reverse engineer a 2Wire ADSL modem/router, mainly for practice. I opened it and found a serial port (with a header conveniently already in place) but I'm not getting any useful data out of it, only gibberish. The device does work (well enough to present its web UI), only this port is giving me trouble.</p>\n<p><a href=\"https://i.sstatic.net/graZe.jpg\" rel=\"nofollow noreferrer\"><img alt=\"Deciphered pinout\" src=\"https://i.sstatic.net/graZe.jpg\"/></a></p>\n<p>Why I'm pretty sure this is the right pinout:</p>\n<ul>\n<li>No other pins/pads anywhere on the board output anything that looks like data</li>\n<li>If I short Tx and Rx, or connect to my terminal and spam spacebar, it fails to boot up (LED stays red)</li>\n<li>The one NC pin looks the same on the oscilliscope as when it's not connected (slight noise instead of a steady 0V or 3V)</li>\n</ul>\n<p>What I've tried:</p>\n<ul>\n<li>Several baud rates: 1200, 1800, 2400, 4800, 9600, 19200, 38400, 57600, 115200, 230400, 460800, 500000, 921600, 960000</li>\n<li>Various combinations of parity and stop-bit settings</li>\n<li>Connecting it to a USB FTDI adapter</li>\n<li>Connecting it to the serial pins of a Raspberry Pi</li>\n<li>Adding pullup and pulldown resistors to Tx</li>\n<li>Inverting the Tx signal in hardware and in software</li>\n<li>Leaving the serial ground unconnected</li>\n</ul>\n<p>No matter what, the data that comes in is gibberish, or nothing at all.</p>\n<p>On my scope it definitely <em>looks</em> like data, jumping around between 0V and +3.3V for ~1/4 second at power on, then going to +3.3V and staying there.</p>\n<p><a href=\"https://i.sstatic.net/XSgxR.png\" rel=\"nofollow noreferrer\"><img alt=\"Signal analysis\" src=\"https://i.sstatic.net/XSgxR.png\"/></a></p>\n<p>But I just can't seem to find any combination of settings and connections that give me any coherent output. Am I missing something?</p>\n<p>(For the record, I do own this modem.)</p>\n</div>",
    "votes": "7",
    "answers": 2,
    "views": "2k",
    "tags": [
        "hardware",
        "serial-communication",
        "protocol"
    ],
    "user": "Rena",
    "time": "Apr 24, 2016 at 23:59",
    "comments": [
        {
            "user": "Cheibriados",
            "text": "<span class=\"comment-copy\">The fact that it's a 14-pin header means it may be a common JTAG interface. What's the model number of the router?</span>",
            "time": null
        },
        {
            "user": "Rena",
            "text": "<span class=\"comment-copy\">Model is 2Wire 2701HG-H.</span>",
            "time": null
        },
        {
            "user": "Cheibriados",
            "text": "<span class=\"comment-copy\">Here's a post about a very similar router: <a href=\"http://whrl.pl/RbpQb0\" rel=\"nofollow noreferrer\">link</a>. It looks like the lines you've labelled as Rx and Tx are two of the I2C lines. Several of the pins are also used for JTAG, which may allow for you to get at the internals of the thing, but I'm going to venture a guess that it's pretty locked down.</span>",
            "time": null
        },
        {
            "user": "Rena",
            "text": "<span class=\"comment-copy\">You're right. I traced those pins back to the serial EEPROM nearby. Not sure how I missed the clock signal there. Can you post that as an answer so I can accept it?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If this is data, then there should be a common clock, with the raising/falling edge signals all on individual ticks of that clock.</p>\n<p>I scaled the bottom half of your scope output by 500% horizontally, and had gimp overlay a grid on it, playing with the width and shift of the grid until i found something that looks like it could be the clock (click the image to see it in full scale):</p>\n<p><a href=\"https://i.sstatic.net/xOIJ9.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/xOIJ9.png\"/></a></p>\n<p>So yes, this is probably serial data. And, if i understand the \"10 us\" display correctly, your white grid dotted lines are 10 us apart, which means my grid lines are 1.6 us apart, which means the bit rate should be somewhere around 1/0.0000016=625000 baud, which is different enough from your bit rates to prevent them from working. If you can, try setting the bit rate to something closer to that.</p>\n<p>Still, i see trouble with that signal even if you use the correct bit rate. The slopes of the raising and falling edges of your signal are, in some cases, way too flat - see the green markers. And there are spikes that look like line noise (red markers). To my eye, this looks like there's too much capacitance on that data line. This could explain the flat slopes - the serial driver isn't able to put out enough current to raise the signal against the capacitance - and it could explain the red markers as well - a short pulse on TX doesn't even manage to raise the voltage to the value it should.</p>\n<p>But, i'm a bit out of my depth here. Maybe the friendly people at <a href=\"https://electronics.stackexchange.com/\">the EE stack exchange</a> can be a bit more helpful fixing this.</p>\n</div>",
            "votes": "4",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:33",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Spektre",
                    "text": "<span class=\"comment-copy\">there is also another reason possible. Some devices do not use DC/DC converters for RS232 voltage conversion like MAX232 instead the power is obtained directly from RX (TX from the host device) so if a bigger gap in receiving signal is present the voltage drops ... and first few bits are distorted.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Your signal is very degraded: your rise and fall times are too slow relative to the bit rate. If the signal really looks as your scope plot shows, and this is not just a measurement issue, then it's no surprise that you cannot get coherent data out of it. Serial port signals should have very clean and well-defined rise and fall times relative to the baud rate.</p>\n<p>To begin with, try getting the cleanest possible scope trace. Zoom in more - at the horizontal timebase that you're using, with those messy pulses, getting a good idea of what's going on is difficult. Then, make sure you're using your scope's 10x mode on the probe, and that any loading features (e.g. 75Î© termination) are off. Make sure your probe's ground is solid, and that there is nothing else on the TX line other than your scope. Then, measure again. What scope are you using?</p>\n<p>Assuming this is a standard asynchronous serial signal, there should be a high-to-low transition marking the start of every byte (the start bit). For continuous transmissions, these should be spaced out evenly. Looking at your top plot, it <em>looks</em> like this might be the case, but I'm having a hard time aligning a grid like that to your bottom plot. Try to improve your signal quality as much as possible, then zoom in to a sparse (mostly-zero) section of the capture and see if you can confirm a pattern like that. If this is ASCII, you should be able to find some space characters, which are 0x20, and should be represented by the bit sequence 0000001001 (or 000000100x1 if parity is enabled, append another 1 or half of it if there are 2 or 1.5 stopbits respectively). If you can't find the evenly spaced out start bit transitions, then this probably isn't a standard UART output.</p>\n<p>Either way, things should be a lot clearer once you solve your signal integrity issues.</p>\n<p>Edit: also make sure your scope probe is properly compensated!</p>\n</div>",
            "votes": "3",
            "user": "marcan",
            "time": "Apr 25, 2016 at 21:57",
            "is_accepted": false,
            "comments": []
        }
    ]
}