{
    "title": "Java Byte Code Debugger",
    "link": "https://reverseengineering.stackexchange.com/questions/31556/java-byte-code-debugger",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to reverse a highly obfuscated program written in java.  None of the deobfuscators seem to work so I have been poking at it in eclipse.  I can attach to a running process and have figured some of the code out but it appears the part im after happens in a synthetic function so I want to be able to step line by line through the byte code and see whats going on.  None of the tools I have found so far seem to have this ability.  I appreciate any suggestions.</p>\n<p>What I've tried\n1.) Eclipse with various plugins (can kind of decompile code but without line numbers its little help debugging)\n2.) Recaf(useful for static analysis but have not found a way to use it in a debug fashion)\n3.) Several deobfuscators with no luck</p>\n</div>",
    "votes": "3",
    "answers": 0,
    "views": "103",
    "tags": [
        "java"
    ],
    "user": "MDK",
    "time": "Feb 15, 2023 at 23:35",
    "comments": [
        {
            "user": "Col-E",
            "text": "<span class=\"comment-copy\">You can pretty easily write a basic transformer to strip the synthetic flag from methods if Eclipse is skipping over those. I've had <i>some</i> success with similar setups but using IntelliJ.</span>",
            "time": null
        }
    ],
    "answers_data": []
}