{
    "title": "Tracing function calls in x64dbg",
    "link": "https://reverseengineering.stackexchange.com/questions/17736/tracing-function-calls-in-x64dbg",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm new with <code>x64dbg</code> and want to know if there is any way to get the trace of a functions inside a module? </p>\n<p>I've used trace over option, but basically it just traces all the insturctions but doesn't \"step in\" into a call statement.</p>\n<p><a href=\"https://reverseengineering.stackexchange.com/questions/12778/can-windbg-trace-function-calls-within-a-module\">Here</a> I found a way to do this using windbg(notice the treeview of functions and return values), but is there any way I can do same using <code>x64dbg</code>? or maybe trace all the api calls of a module. \nthanks.</p>\n</div>",
    "votes": "5",
    "answers": 2,
    "views": "10k",
    "tags": [
        "disassembly",
        "windows",
        "windbg",
        "functions",
        "x64dbg"
    ],
    "user": "Ojs",
    "time": "Mar 19, 2018 at 19:29",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>It is possible using <code>Trace</code>-&gt;<code>Trace into...</code> option. After opening the executable, select this option and specify the message you want to log (in <code>Log text</code> field); for example <code>{a:cip} {i:cip}</code>, which will log the module name, address and the instruction after a space.</p>\n<p>As far as I am concerned, there is unfortunately no support for string comparison in <code>x64dbg</code>, so you cannot write something like <code>{modname@rip}==some_module_name</code> in <code>Log condition</code> field. However, you may use the module entry point as a module identifier, like here:\n<a href=\"https://i.sstatic.net/kJo9I.png\" rel=\"noreferrer\"><img alt=\"x64dbg_log_condition\" src=\"https://i.sstatic.net/kJo9I.png\"/></a></p>\n<p>After clicking <code>OK</code> button, only instructions in the specified module will appear in the log panel and you should see something like this:</p>\n<p><a href=\"https://i.sstatic.net/eYMLM.png\" rel=\"noreferrer\"><img alt=\"x64dbg_log\" src=\"https://i.sstatic.net/eYMLM.png\"/></a></p>\n<p>The only problem that is still to solve is to find the module entry address. I've done it by logging every module name and entry point until I find the relevant one. If I find any better way to do that, I will update my answer.</p>\n</div>",
            "votes": "7",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This is the solution.  Same dialog as before but these values, replace prog1 with the name of your executable:</p>\n<pre><code>break condition: 0\nlog text: {p:cip} {i:cip}\nlog condition: dis.isbranch(cip) &amp;&amp; prog1.EntryPoint == mod.entry(dis.branchdest(cip))\ncommand text: \ncommand condition:\nmaximum trace count: 232323\n</code></pre>\n<p>This will log all the conditionals in the userspace program only, and if you need more trace count just raise the value.  It will take awhile but you end up with a file of je/jne  where you can compare and see what was different between different runs of your program.  Priceless and extremely poorly documented.</p>\n</div>",
            "votes": "0",
            "user": "test",
            "time": "May 9, 2023 at 6:25",
            "is_accepted": false,
            "comments": []
        }
    ]
}