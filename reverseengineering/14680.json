{
    "title": "What is the format of this time?",
    "link": "https://reverseengineering.stackexchange.com/questions/14680/what-is-the-format-of-this-time",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm trying to interpret a bunch of bytes I'm receiving from a GPS tracker.\nThere are 3 sequential bytes that I believe mean hours, minutes and seconds. I recorded timestamps along with the messages I receive and noticed this:</p>\n<pre><code>when hour 0: byte 1 in message is 0x30\nwhen hour 1: byte 1 in message is 0x31\n...\n\nwhen minute 0: byte 2 in message is 0x30\nwhen minute 1: byte 2 in message is 0x31\n...\n</code></pre>\n<p>But some bytes are skipped as follows:</p>\n<p>for hours:</p>\n<pre><code>Hou 10   16          2\n----------------------\n00: 48 - 30 - 00110000\n01: 49 - 31 - 00110001\n02: 50 - 32 - 00110010\n03: 51 - 33 - 00110011\n04: 52 - 34 - 00110100\n05: 53 - 35 - 00110101\n06: 54 - 36 - 00110110\n07: 55 - 37 - 00110111\n08: 56 - 38 - 00111000\n09: 57 - 39 - 00111001 &lt;- jump\n10: 65 - 41 - 01000001\n11: 66 - 42 - 01000010\n12: 67 - 43 - 01000011\n13: 68 - 44 - 01000100\n14: 69 - 45 - 01000101\n15: 70 - 46 - 01000110\n16: 71 - 47 - 01000111\n17: 72 - 48 - 01001000\n18: 73 - 49 - 01001001\n19: 74 - 4a - 01001010\n20: 75 - 4b - 01001011\n21: 76 - 4c - 01001100\n22: 77 - 4d - 01001101\n23: 78 - 4e - 01001110\n</code></pre>\n<p>for minutes and seconds:</p>\n<pre><code>min  10   16          2\n-----------------------\n00:  48 - 30 - 00110000\n01:  49 - 31 - 00110001\n02:  50 - 32 - 00110010\n03:  51 - 33 - 00110011\n04:  52 - 34 - 00110100\n05:  53 - 35 - 00110101\n06:  54 - 36 - 00110110\n07:  55 - 37 - 00110111\n08:  56 - 38 - 00111000\n09:  57 - 39 - 00111001 &lt;- jump\n10:  65 - 41 - 01000001\n11:  66 - 42 - 01000010\n12:  67 - 43 - 01000011\n13:  68 - 44 - 01000100\n14:  69 - 45 - 01000101\n15:  70 - 46 - 01000110\n16:  71 - 47 - 01000111\n17:  72 - 48 - 01001000\n18:  73 - 49 - 01001001\n19:  74 - 4a - 01001010\n20:  75 - 4b - 01001011\n21:  76 - 4c - 01001100\n22:  77 - 4d - 01001101\n23:  78 - 4e - 01001110\n24:  79 - 4f - 01001111\n25:  80 - 50 - 01010000\n26:  81 - 51 - 01010001\n27:  82 - 52 - 01010010\n28:  83 - 53 - 01010011\n29:  84 - 54 - 01010100\n30:  85 - 55 - 01010101\n31:  86 - 56 - 01010110\n32:  87 - 57 - 01010111\n33:  88 - 58 - 01011000\n34:  89 - 59 - 01011001\n35:  90 - 5a - 01011010 &lt;- jump\n36:  97 - 61 - 01100001\n37:  98 - 62 - 01100010\n38:  99 - 63 - 01100011\n39: 100 - 64 - 01100100\n40: 101 - 65 - 01100101\n41: 102 - 66 - 01100110\n42: 103 - 67 - 01100111\n43: 104 - 68 - 01101000\n44: 105 - 69 - 01101001\n45: 106 - 6a - 01101010\n46: 107 - 6b - 01101011\n47: 108 - 6c - 01101100\n48: 109 - 6d - 01101101\n49: 110 - 6e - 01101110\n50: 111 - 6f - 01101111\n51: 112 - 70 - 01110000\n52: 113 - 71 - 01110001\n53: 114 - 72 - 01110010\n54: 115 - 73 - 01110011\n55: 116 - 74 - 01110100\n56: 117 - 75 - 01110101\n57: 118 - 76 - 01110110\n58: 119 - 77 - 01110111\n59: 120 - 78 - 01111000\n</code></pre>\n<p>Do you guys know of any encoding like this? Does it make sense? There would be any reason for encoding this way?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "94",
    "tags": [
        "protocol",
        "binary-diagnosis",
        "gps"
    ],
    "user": "Gustavo",
    "time": "Feb 18, 2017 at 13:13",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Converting the numbers to ASCII, we get:</p>\n<ul>\n<li>0 ~ 9 = <code>0</code> ~ <code>9</code> (0x30 ~ 0x39)</li>\n<li>10 ~ 35 = <code>A</code> ~ <code>Z</code> (0x41 ~ 0x5a)</li>\n<li>36 ~ 61 = <code>a</code> ~ <code>z</code> (0x61 ~ 0x7a)</li>\n</ul>\n<p>It is encoded this way probably to make it human-readable.</p>\n</div>",
            "votes": "2",
            "user": "kennytm",
            "time": "Feb 18, 2017 at 16:31",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Gustavo",
                    "text": "<span class=\"comment-copy\">Crazy way to encode!</span>",
                    "time": null
                }
            ]
        }
    ]
}