{
    "title": "Bresser Water Leakage sensor checksum algorithm",
    "link": "https://reverseengineering.stackexchange.com/questions/32152/bresser-water-leakage-sensor-checksum-algorithm",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to decode the Bresser Water Leakage sensor, the current state of work can be found in <a href=\"https://github.com/matthias-bs/rtl_433/blob/master/src/devices/bresser_leakage.c\" rel=\"nofollow noreferrer\">https://github.com/matthias-bs/rtl_433/blob/master/src/devices/bresser_leakage.c</a></p>\n<p>I have also created an <a href=\"https://github.com/merbanan/rtl_433/issues/2576\" rel=\"nofollow noreferrer\">issue</a> with some background information for integrating the decoder in the rtl_433 project.</p>\n<p>Decoding the payload works fine, but I did not find out how the checksum is calculated. The data layout and samples are provided in <a href=\"https://github.com/matthias-bs/rtl_433/blob/master/src/devices/bresser_leakage.c\" rel=\"nofollow noreferrer\">bresser_leakage.c</a>.</p>\n<p>I have already tried the following:</p>\n<ol>\n<li>Digest calculations used in <a href=\"https://github.com/merbanan/rtl_433\" rel=\"nofollow noreferrer\">rtl_433</a> decoders for other Bresser sensors</li>\n</ol>\n<ul>\n<li>with varying payload lengths)</li>\n<li>with iterating the key in the range 0...0xFFFF</li>\n</ul>\n<ol start=\"4\">\n<li><p><a href=\"https://github.com/triq-org/revdgst\" rel=\"nofollow noreferrer\">revdgst</a> (with varying payload lengths)</p>\n</li>\n<li><p><a href=\"https://sourceforge.net/projects/reveng/\" rel=\"nofollow noreferrer\">reveng</a> (with varying payload lengths) - no meaningful result at all</p>\n</li>\n<li><p>CRC calculators on <a href=\"https://crccalc.com/\" rel=\"nofollow noreferrer\">https://crccalc.com/</a></p>\n</li>\n<li><p>Simple checksum algorithms like ADD, XOR, SUB</p>\n</li>\n</ol>\n<ul>\n<li>on bytes</li>\n<li>on nibbles</li>\n<li>on 16-bit chunks</li>\n</ul>\n<ol start=\"8\">\n<li>Parity</li>\n</ol>\n<ul>\n<li>bits set - byte wise/nibble wise, first/second half of message, ...</li>\n</ul>\n<p>None of these attempts were successful.</p>\n<p>I would be happy if anyone could help.</p>\n<p>Thank you very much in advance!</p>\n<p>Matthias</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "51",
    "tags": [
        "crc",
        "checksum"
    ],
    "user": "Matthias",
    "time": "Aug 9, 2023 at 19:22",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The checksum has been found!\nIt's a CRC16/xmodem covering the 5 bytes following the CRC.</p>\n<p>See <a href=\"https://github.com/merbanan/rtl_433/issues/2576#issuecomment-1751134478\" rel=\"nofollow noreferrer\">https://github.com/merbanan/rtl_433/issues/2576#issuecomment-1751134478</a></p>\n</div>",
            "votes": "1",
            "user": "Matthias",
            "time": "Oct 27, 2023 at 12:17",
            "is_accepted": false,
            "comments": []
        }
    ]
}