{
    "title": "I need a tool to assist decompiling C++",
    "link": "https://reverseengineering.stackexchange.com/questions/11852/i-need-a-tool-to-assist-decompiling-c",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to reverse engineer some C++ code that was made by \"architecture astronaut\", having multiple layers, lots of virtual functions, lots of polymorphism, metaprogramming, inlined stuff, and so on.</p>\n<p>I know that generating C++ from machine code is an almost absurd idea, but what I am looking for is a tool to help me organize information.</p>\n<p>Example of features that I would appreciate: support navigating through code by vtables (ie: after you manually find all relevant vtables, you point them to the program, and clicking on a code that jumps to member \"6\" of the vtable jumps to that function, if this is ambiguous due to various vtables being possible, it asks you what vtable you want).</p>\n<p>Easy editing of nested structures (example: instead of defining a class as a <code>struct myClass { myBase baseClass; int someInt;};</code> you can actually see \"myBase\" contents inside \"myClass\" and even edit it, without having to edit the separate structures.</p>\n<p>Support for STL names (extremely long names, names with &lt;&gt;: , characters in it)</p>\n<p>Being able to tag some code as \"copy and paste\" of another code, at least in a highlight manner, so you can more easily see what is going on (for example for heavily inlined code, templates, metaprogramming abuse, and so on).</p>\n<p>Being able to organize and compare vtables, suppose you have 1 base vtable that is almost entire pure virtual functions, and 2 vtables that override it later, then you can compare all 3, and know what is what (for example you know what functions are overriding the pure virtual functions, and thus if you have debug symbols or something figure the name of the original pure virtual functions).</p>\n<p>Being able to merge structs (suppose you find functions of a class all over the code, and create a struct for each one, eventually you find it is the same class)</p>\n<p>Being able to give \"fake names\" to entries on vtable (suppose you know the correct name of a function in a vtable, also the compiler optmized away this function because it was identical to other unrelated function, this way you can use the original name, instead of seeing <code>A::func1(); A::func2(); B::func47(); A::func4();</code></p>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "238",
    "tags": [
        "tools"
    ],
    "user": "speeder",
    "time": "Jan 26, 2016 at 3:06",
    "comments": [
        {
            "user": "broadway",
            "text": "<span class=\"comment-copy\">I think <a href=\"https://github.com/REhints/HexRaysCodeXplorer\" rel=\"nofollow noreferrer\">HexRays CodeXplorer</a> is probably as good as it currently gets. Maybe you could start from there?</span>",
            "time": null
        },
        {
            "user": "speeder",
            "text": "<span class=\"comment-copy\">People could comment why they are downvoting :(  Also, CodeXplorer don't fix any of the issues I mentioned, at all... AND cause some serious bugs (infinite loops, creating bogus structures while debugging, and several other extremely aberrant behaviour, including making IDA crash a couple times).</span>",
            "time": null
        },
        {
            "user": "43.52.4D.",
            "text": "<span class=\"comment-copy\">@speeder they downvote because they consider you a n00b and consider your question a waste of time. I agree it would be nicer if they gave you constructive criticism rather than just downvoting.</span>",
            "time": null
        },
        {
            "user": "Vitaly Osipov",
            "text": "<span class=\"comment-copy\">@43.52.4D. I, for one, downvote all \"questions\" that equal to \"give me a magic tool/incantation to solve my obscure problems, and don't even ask me to think!\" Nothing constructive can be said when a questioner has already decided on what the solution would be, and demands a tool that will adhere to that spec. If you're asking for how other people manage to wade through piles of assembly originating from C++, ask an appropriate question. There are a few plugins that help a little, but it's mostly experience and personal skill.</span>",
            "time": null
        },
        {
            "user": "speeder",
            "text": "<span class=\"comment-copy\">Vitaly I asked that in multiple locations, multile times, people never reply, or tell me that I am crazy and that reverse engineering C++ is impossible or makes no sense.  This question was an attempt to ask in a different manner and see what would be the result, maybe someone would suggest something useful. (example: the CodeXplorer wasn't a bad suggestion, I am already using it, but it doesn't fix the specific issues I mentioned)</span>",
            "time": null
        }
    ],
    "answers_data": []
}