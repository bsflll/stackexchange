{
    "title": "Encrypting and packing at functional boundaries for obfuscation",
    "link": "https://reverseengineering.stackexchange.com/questions/10689/encrypting-and-packing-at-functional-boundaries-for-obfuscation",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am interested in software obfuscation techniques. I found your excellent summary of obfuscation in order to avoid (as possible) reverse engineering.</p>\n<p>One of the proposed technique you quoted:</p>\n<p><strong>Packing and encrypting code segment</strong></p>\n<p>I will group encryption and packing into the same category. They both serve the same purpose and they both have the same issues. In order to execute the code, the CPU needs to see the plain text. So you have to provide the key in the binary. The only remotely effective way of encrypting and packing code segments is if you encrypt and decrypt them at functional boundaries and only if the decryption happens upon function entry and then re-encryption happens when leaving the function. This will provide a small barrier against dumping your binary as it is running but is must be coupled with strong obfuscation.</p>\n<p>Crypting the code segment is very common for malware writers. I am very intrested on how to encrypt/pack each function separatly: decryption upon function entry and then re-encryption when leaving the function. (These are you words)</p>\n<p>Where I can find documention for this technique ?</p>\n<p>I find this an excellent idea.</p>\n<p>Anyway, thanks !</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "118",
    "tags": [
        "obfuscation"
    ],
    "user": "odysseasg",
    "time": "Aug 22, 2015 at 16:54",
    "comments": [
        {
            "user": "rev",
            "text": "<span class=\"comment-copy\">note: I can put a breakpoint right after your function is decrypted and dump it. the fact that it gets decrypted at <i>any</i> point allows me to dump it</span>",
            "time": null
        },
        {
            "user": "Jason Geffner",
            "text": "<span class=\"comment-copy\"><i>\"In order to execute the code, the CPU needs to see the plain text.\"</i> - Not quite... see <a href=\"http://joye.site88.net/papers/Joy08whitebox.pdf\" rel=\"nofollow noreferrer\">white-box cryptography</a>.</span>",
            "time": null
        },
        {
            "user": "odysseasg",
            "text": "<span class=\"comment-copy\">@AcidShout Yes I know but I am very intrested on how to implement a such idea. I know that it could be bypassed with breakpoints. I've searched on net for a while but didn't find anything..</span>",
            "time": null
        }
    ],
    "answers_data": []
}