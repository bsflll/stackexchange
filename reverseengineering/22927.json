{
    "title": "If flashrom tool don't have support for rom chip what are the ways you can extract data without it?",
    "link": "https://reverseengineering.stackexchange.com/questions/22927/if-flashrom-tool-dont-have-support-for-rom-chip-what-are-the-ways-you-can-extra",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am currently working on a Netgear router having MX25L1606E rom chip, my goal is to extract firmware for reverse engineering but <a href=\"https://flashrom.org/Flashrom\" rel=\"nofollow noreferrer\">flashrom</a> don't have support for it. So question is how someone can read data from rom by making their own program or script. I've tried with buspirate but I don't know what would be specific SPI mode settings to read data out of this chip. </p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "286",
    "tags": [
        "hardware"
    ],
    "user": "cjhackerz",
    "time": "Jan 7, 2020 at 8:42",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Firstly you would like to know if someone has already implemented the required protocol to read that flash memory model. You should try to search on your favorite engine queries like \"'model' dump\" or \"dumping 'model' with buspirate\" , where 'model' IS the name of your chip.</p>\n<p>If you cannot find anything, you Will have to do It by yourself.</p>\n<p>I just searched for \"MX25L1606E datasheet\" and i found, in the first result, all the needed details about your particular chip: <a href=\"https://www.google.es/url?sa=t&amp;source=web&amp;rct=j&amp;url=https://www.macronix.com/Lists/Datasheet/Attachments/7465/MX25L1606E,%25203V,%252016Mb,%2520v1.9.pdf&amp;ved=2ahUKEwikqZ6DwfPmAhUDDewKHbtZBTUQFjAAegQIBRAB&amp;usg=AOvVaw2RuJPF7rRLWzADjhovrUpM\" rel=\"nofollow noreferrer\" title=\"datasheet\">datasheet</a></p>\n<p>There you can find that It uses the SPI protocol, and the supported commands (READ, WRITE, etc) as well as others that may be important.</p>\n<p>Now you need a hardware that can speak that protocol. Bus pirate is great and has documentation. You just need to read the datasheet to discover which SPI Mode is used.</p>\n<p>You could also repurpose an Arduino UNO or Arduino UNO clone board (or any more powerful Arduino version). Arduino UNO can speak SPI. As an example, I did that to read the <a href=\"https://github.com/pedro-javierf/dsaver\" rel=\"nofollow noreferrer\">SPI flash of Nintendo DS cartridges</a> for example. You would like to use the ICSP pins of the Arduino to connect to your memory, send commands and receive data, store it into the arduino memory, and send it to your PC over the serial connection of the Arduino.</p>\n<p>Please note that Arduino (UNO) boards have little memory available, so you need to read the memory in smaller chunks.</p>\n</div>",
            "votes": "0",
            "user": "78dtat78da",
            "time": "Jan 10, 2020 at 17:45",
            "is_accepted": true,
            "comments": [
                {
                    "user": "cjhackerz",
                    "text": "<span class=\"comment-copy\">thanks I will give a try with Arduino</span>",
                    "time": null
                }
            ]
        }
    ]
}