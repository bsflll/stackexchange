{
    "title": "Why are there often many 0-bytes in executables?",
    "link": "https://reverseengineering.stackexchange.com/questions/6648/why-are-there-often-many-0-bytes-in-executables",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I disassembled some OS X apps with Hopper and found that all of them contain a lot of zero bytes in a row. What is the use of that? </p>\n<p>Is this some OS X ABI specific padding I came across here? What is its use?</p>\n<p><img alt=\"enter image description here\" src=\"https://i.sstatic.net/OUe8W.png\"/></p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "507",
    "tags": [
        "disassembly",
        "assembly",
        "osx"
    ],
    "user": "Joseppe",
    "time": "Nov 17, 2014 at 20:02",
    "comments": [
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">Padding of a disk or memory page? At what number do these runs of zeroes end?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Memory is mapped in pages, so if you want data that isn't page-aligned in memory, there'll be a world of either random data (in the case that pages were mapped without zeroing enabled, possible on some platforms) or zeros. From the address I'd say that hopper has identified that your executable has sections that will load at a given address but that the remainder of the page will be zeros. If there is data after it but before the end of the page then it's a buffer, could be used for runtime decryption or anything else in fact.</p>\n</div>",
            "votes": "1",
            "user": "offbyseveral",
            "time": "Nov 24, 2014 at 17:43",
            "is_accepted": false,
            "comments": [
                {
                    "user": "offbyseveral",
                    "text": "<span class=\"comment-copy\">To work it out, look at the virtual memory map for that region, then if it's an executable section look at the size of that section and the base address to see if it's just empty space. Regular compiler wont use that space but nothing to stop you.</span>",
                    "time": null
                }
            ]
        }
    ]
}