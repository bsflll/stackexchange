{
    "title": "Should shell32.dll be in executable search path for winword.exe with WinDBG?",
    "link": "https://reverseengineering.stackexchange.com/questions/31929/should-shell32-dll-be-in-executable-search-path-for-winword-exe-with-windbg",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><a href=\"https://i.sstatic.net/tOL4U.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/tOL4U.png\"/></a>I'm threat hunting and I'm curious if there should be a shell32.dll in the executable search path in windbg for winword.exe.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "85",
    "tags": [
        "windows",
        "debugging",
        "windbg"
    ],
    "user": null,
    "time": "Jun 1, 2023 at 20:52",
    "comments": [
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">What / where are you disassembling / data ? The disassembly looks invalid ins outs etc are dos era instructions and wouldnt be valid in a 64 bit user mode app</span>",
            "time": null
        },
        {
            "user": "user42604",
            "text": "<span class=\"comment-copy\">What does it mean and how did it happen?</span>",
            "time": null
        },
        {
            "user": "Paweł Łukasik",
            "text": "<span class=\"comment-copy\">@InvulnerableImmortal you are in the DOS stub. If you convert the bytes to ascii it reads 'This program cannot be run in DOS mo'...</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Unfortunately you don't state it in your question, but looking at the output I'll go by the assumption you're using Windows 11. No: <code>shell32.dll</code> is a so-called <i>known DLL</i>. Unless loaded with a fully qualified path, the official <code>shell32.dll</code> will be mapped to the process by the loader essentially. There is a \"preloaded\" (by the session manager) global section object available for each of the known DLLs - two sets exist on systems with WOW64 - in <code>\\KnownDlls</code> and <code>\\KnownDlls32</code> respectively. You could see them in WinObj or <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\KnownDLLs</code>.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>As i commented the area you are disassembling does not look like a valid code</p>\n<p>As to how did it happen you should know better you have provided the address for disassembling 0x7ffc6b54000 and that address is probably located in advapi32.dll's resource section in the virtual address space of the process</p>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "Jun 3, 2023 at 14:37",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user42604",
                    "text": "<span class=\"comment-copy\">I just thought that it was something different. I actually don't know anything, I'm new to this.</span>",
                    "time": null
                }
            ]
        }
    ]
}