{
    "title": "Flag 200h open file",
    "link": "https://reverseengineering.stackexchange.com/questions/32730/flag-200h-open-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<pre><code>cseg01:00056938                 mov     edx, offset var_byte_0004DCC8\ncseg01:0005693D                 mov     eax, offset hmi_drv_str\ncseg01:00056942                 call    strcpy_\ncseg01:00056947                 mov     edx, offset aHmidrv_386 ; \"hmidrv.386\"\ncseg01:0005694C                 mov     eax, offset hmi_drv_str\ncseg01:00056951                 call    strcat_\ncseg01:00056956                 push    200h\ncseg01:0005695B                 mov     eax, offset hmi_drv_str\ncseg01:00056960                 push    eax\ncseg01:00056961                 call    open_\n\n</code></pre>\n<pre><code>cseg01:00056966                 add     esp, 8\ncseg01:00056969                 mov     [ebp+var_4], eax\ncseg01:0005696C                 cmp     [ebp+var_4], 0FFFFFFFFh\ncseg01:00056970                 jnz     short loc_5697E\ncseg01:00056972                 mov     [ebp+var_14], 0Fh\ncseg01:00056979                 jmp     on_exit\ncseg01:0005697E ; ---------------------------------------------------------------------------\ncseg01:0005697E\ncseg01:0005697E loc_5697E:                              ; CODE XREF: Unkn_Subroutine_Reg_7+8Dj\ncseg01:0005697E                 mov     ebx, 2Ch ; ','\ncseg01:00056983                 mov     edx, offset unk_C7F78\ncseg01:00056988                 mov     eax, [ebp+var_4]\ncseg01:0005698B                 call    read_\n\n</code></pre>\n<p>This code trying to open file of sound manager for MS- DOS hmidrv.386, but please help understand what means flag 200h?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "90",
    "tags": [
        "c++"
    ],
    "user": "black4joss",
    "time": "Feb 14, 2024 at 11:05",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In DOS/Windows this is the constant value for <code>O_TRUNC</code>, used to erase the file's content and place the cursor (<code>seek</code>) at offset 0.</p>\n<p><code>.386</code> extension is used by DOS and earlier versions of Windows for virtual device drivers.</p>\n<p>Truncating this type of \"file\" has no effect, and of course there is nothing to <code>read()</code> from a file that has just been emptied.</p>\n<p>The most likely explanation for this code sequence is that the program you're looking at expects a <em>device driver</em> to exist by this name and that reading from it returns some data.</p>\n<p>However, this driver may not be available in the particular system.</p>\n<p>Then, if there happens to be a regular file named <code>hmidrv.386</code>, the program will read from it, expecting the driver initial data but get whatever is inside the (regular) file instead, which may yield unexpected results.</p>\n<p><em>Truncate</em> before read ensures that the data read, if any, cannot be a normal file content.</p>\n</div>",
            "votes": "1",
            "user": "Yotamz",
            "time": "Feb 25, 2024 at 10:12",
            "is_accepted": false,
            "comments": [
                {
                    "user": "black4joss",
                    "text": "<span class=\"comment-copy\">I updated code in question, I put more code, in code we can see - next after \"open\" is \"read\". How we can read truncated file? i.e. file opened with O_TRUNC flag? If file is truncated, it has set zero data. What we read- zero data? And moreover this file we open - hmidrv.386 - it is music driver to play sound. It driver plays sound in this app, it is needed to reproduce sound in this app, why need truncate this file?</span>",
                    "time": null
                },
                {
                    "user": "llm",
                    "text": "<span class=\"comment-copy\">use dosbox debugger to step through and test if the file really gets truncated</span>",
                    "time": null
                },
                {
                    "user": "Yotamz",
                    "text": "<span class=\"comment-copy\">Is the implementation of the <code>open_</code> function part of the code? DOS extensions can make virtual devices available as files. Early versions of Windows use *.386 files for this purpose. If this is the case then the truncate flag has no effect, but should there be a regular file by that name it will be truncated. It may have been added by a compiler: calling <code>fopen</code> with \"w\" mode implies <code>O_TRUNC</code> on the underlying <code>open</code> call</span>",
                    "time": null
                }
            ]
        }
    ]
}