{
    "title": "Basic buffer-overflow on a remote program with Python/pwntools",
    "link": "https://reverseengineering.stackexchange.com/questions/30368/basic-buffer-overflow-on-a-remote-program-with-python-pwntools",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I work on a online program in which I should do a buffer Overflow.<br/>\nWhen I run the program, I have to complete a sum of two numbers generated randomly) :</p>\n<pre><code>&gt;&gt;&gt; 451389913 + 1587598959 =\n</code></pre>\n<p>If I put the right result, I get a \"That's okay\". Otherwise the console writes \"Try it again\".</p>\n<p>I decompiled the program with Ghidra and get the following code in the <code>main()</code> function :</p>\n<pre><code>{\n  int iVar1;\n  char local_9 [36];\n  int local_42;\n  uint local_6;\n  uint local_f;\n  \n  local_f = rand();\n  local_6 = rand();\n  local_42 = local_6 + local_f;\n  printf(\"&gt;&gt;&gt; %d + %d = \",(ulong)local_f,(ulong)local_6);\n  fflush(stdout);\n  fgets(local_9,100,stdin);\n  iVar1 = atoi(local_9);\n  if (local_42 == iVar1) {\n    puts(\"That's ok\");\n  }\n  else {\n    puts(\"Try it again\");\n  }\n  return 0;\n}\n</code></pre>\n<p>I notice a <code>fgets</code> function that make me suppose I can do the buffer overflow just before the sum. I also see that the <code>local9</code> variable is composed of 36 characters. So I suppose that at the beginning of the payload, there must be 36 characters.</p>\n<p>I began to write the following snippet with the pwntools Python library :</p>\n<pre><code>import pwn\noffset = 36\npayload = b'A'*offset + b'[.....]'\nc = pwn.remote(\"URL\",Port)\nc.sendline(payload)\nc.interactive()\n</code></pre>\n<p>The thing is I know I have to write something after the <code>b'A'*offset</code> but I don't really see what to add.. My difficulty is to join that sum of random numbers to the payload.<br/>\nIs it possible to do it ?</p>\n<p>Any ideas would be very appreciated, thanks</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "757",
    "tags": [
        "ghidra",
        "elf",
        "python",
        "buffer-overflow",
        "pwntools"
    ],
    "user": "Julien",
    "time": "May 6, 2022 at 7:49",
    "comments": [
        {
            "user": "Dvd848",
            "text": "<span class=\"comment-copy\">What exactly is the purpose of the exercise? If it's just to get \"That's ok\" printed, it can obviously be done without any buffer overflow, by just parsing the output and providing the correct answer. Perhaps the target is to get \"That's ok\" printed regardless of the random numbers, by overflowing <code>local_42</code> to match the input you provide at the beginning of the buffer?</span>",
            "time": null
        },
        {
            "user": "Julien",
            "text": "<span class=\"comment-copy\">Thanks for your answer, yes the target of the exercice is to make an overflow by running that program. I have no other precisions to add. That's why I thought I had to consider the local_42 variable.</span>",
            "time": null
        },
        {
            "user": "Dvd848",
            "text": "<span class=\"comment-copy\">Did you by any chance change the names of the local variables (e.g. <code>local_9</code> was originally named differently by Ghidra?)</span>",
            "time": null
        }
    ],
    "answers_data": []
}