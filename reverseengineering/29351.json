{
    "title": "What is the meaning of SYSTEM_INFO.wProcessorLevel?",
    "link": "https://reverseengineering.stackexchange.com/questions/29351/what-is-the-meaning-of-system-info-wprocessorlevel",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am performing some RE on a malware sample, and they are checking the value of SYSTEM_INFO[32] which is <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/ns-sysinfoapi-system_info\" rel=\"nofollow noreferrer\">SYSTEM_INFO.wProcessorLevel</a>. The description MS provides is not clear to me. The malware checks if this value is 0x0 and exits immediately. Sources online say this is to avoid malware inspection environments - when I read this value on my Windows10 PC (not in a VM, just a basic VS script), it returns 0x6. Can someone shed some light on the meaning of this SYSTEM_INFO offset?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "195",
    "tags": [
        "malware",
        "documentation"
    ],
    "user": "RiskyDiablo",
    "time": "Sep 29, 2021 at 13:55",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>for <strong>intel</strong> wProcessorArchitecture<br/>\nwProcessorLevel indicates if the family is one of</p>\n<pre><code>386---------------&gt;(3) ,   \n486---------------&gt;(4) ,  \npentium-----------&gt;(5) ,   \npentium2&amp;above----&gt;(6)\n</code></pre>\n<p>for other architectures they return different information</p>\n<p>on my current device</p>\n<pre><code>:\\&gt;wmic cpu get Caption,Level,Name\nCaption                                Level  Name\nIntel64 Family 6 Model 142 Stepping 9  6      Intel(R) Core(TM) i3-7020U CPU @ 2.30GHz\n</code></pre>\n<p>or some c snippet</p>\n<pre><code>#include &lt;windows.h&gt;\n#include &lt;stdio.h&gt;\n\nint main(void) {\n    SYSTEM_INFO sysinf ={0};\n    GetSystemInfo(&amp;sysinf);\n    printf(\"%-30s = %x\\n\" , \"wProcessorArchitecture\",sysinf.wProcessorArchitecture ); //9 amd64\n    printf(\"%-30s = %x\\n\" , \"wProcessorLevel\" ,sysinf.wProcessorLevel ); //6 pent2&amp;above (core i3)\n    printf(\"%-30s = %u\\n\" , \"dwProcessorType\" ,sysinf.dwProcessorType ); // 8664 AMD64\n    return 0;\n}\n</code></pre>\n<p>may be the malware runs selectively and infects only specific machine</p>\n<p>or as igorsk commented some emulation environments might be returning 0</p>\n<p>like instead of GeniuneIntel vmware or hyper-v used to return thier names which could be used to detect if running inside vms</p>\n<blockquote>\n<p>On machines running off of Microsoft’s Hyper-V or VMware this string\nwill be “Microsoft HV” or “VMwareVMware”.</p>\n</blockquote>\n</div>",
            "votes": "2",
            "user": "blabb",
            "time": "Sep 30, 2021 at 3:24",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">my guess is that 0 is returned by some lazy emulation environments.</span>",
                    "time": null
                }
            ]
        }
    ]
}