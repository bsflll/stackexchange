{
    "title": "Reversing Pyarmor Discussion",
    "link": "https://reverseengineering.stackexchange.com/questions/25075/reversing-pyarmor-discussion",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Anyone messing around with pyarmor recently? For those of you that are unaware of what pyarmor is, its a protection software that is to help obfuscate and protect your software. Heres an image of what pyarmor looks like. Its infuriating to reverse however I think I might be onto a method for completely reversing pyarmor. Wanted to get some thoughts on this idea. (Sorry for all the screwed up images, im working on getting a hang of the markdown)</p>\n<p><a href=\"https://i.sstatic.net/cKKNv.png\" rel=\"nofollow noreferrer\"><img alt=\"https://i.imgur.com/Q6B8dN8.png\" src=\"https://i.sstatic.net/cKKNv.png\"/></a></p>\n<p>Once you unpack your python executable your left with a ton of unimportant files, however some of these files are interesting. Something that is important for the self unpacking is pytransform. </p>\n<p><a href=\"https://i.sstatic.net/rLGjF.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/rLGjF.png\"/></a></p>\n<p>Part of what I was thinking is that you could call your functions normally from the included pyarmor dll as shown here.</p>\n<p><a href=\"https://i.sstatic.net/nil2A.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/nil2A.png\"/></a></p>\n<p>Now whats interesting is that if you crack it open with something such as IDA you can call some of the readable functions without issue and it will return data.</p>\n<p><a href=\"https://i.sstatic.net/1iEJC.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/1iEJC.png\"/></a></p>\n<p>Our dll entry point is pretty uneventful, its not packed or anything which makes our job a bit easier. It makes a simple computational check and decides whether it should end itself or to decrypt our file. Still playing around with the dll and seeing what each functions does.</p>\n<p><a href=\"https://i.sstatic.net/26XKf.png\" rel=\"nofollow noreferrer\"><img alt=\"https://i.imgur.com/PIGqzKx.png\" src=\"https://i.sstatic.net/26XKf.png\"/></a></p>\n<p>One last final thing I found that for sure is interesting is this:</p>\n<p><a href=\"https://i.sstatic.net/CKh9s.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/CKh9s.png\"/></a></p>\n<p>If we decompile our pytransform.pyc file we are left with some of our keygen source, which I am pretty sure can be found all on the github anyways. However since this is a paid version I still figured cracking it open wouldn't hurt. </p>\n<p>Anyways, thoughts on calling functions from our dll and trying to pass it args? If that doesn't work ill try dumping it at runtime however that gets messy.</p>\n</div>",
    "votes": "4",
    "answers": 0,
    "views": "10k",
    "tags": [
        "decompilation",
        "malware",
        "unpacking",
        "deobfuscation",
        "functions"
    ],
    "user": "Jimmy Hankey",
    "time": "May 20, 2020 at 20:25",
    "comments": [
        {
            "user": "fpena06",
            "text": "<span class=\"comment-copy\">Great research. Have you had any further success?</span>",
            "time": null
        }
    ],
    "answers_data": []
}