{
    "title": "Dumping available XPC interface and methods",
    "link": "https://reverseengineering.stackexchange.com/questions/26337/dumping-available-xpc-interface-and-methods",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm reading <a href=\"https://insinuator.net/2020/11/forklift-lpe/\" rel=\"nofollow noreferrer\">this article</a>, and it says:</p>\n<pre><code>The following functions are exposed over XPC to the caller:\n\n@protocol _TtP4main21ForkLiftHelperProtcol_\n- (void)changePermissions:(NSString *)arg1 permissions:(long long)arg2 reply:(void (^)(NSError *))arg3;\n- (void)changeOwner:(NSString *)arg1 owner:(long long)arg2 group:(long long)arg3 reply:(void (^)(NSError *))arg4;\n...\n</code></pre>\n<p>How can one dump all the protocols and its methods?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "168",
    "tags": [
        "ios"
    ],
    "user": "daisy",
    "time": "Nov 18, 2020 at 2:27",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Found it: <a href=\"https://github.com/nygard/class-dump\" rel=\"nofollow noreferrer\">https://github.com/nygard/class-dump</a></p>\n<blockquote>\n<p>class-dump is a command-line utility for examining the Objective-C\nsegment of Mach-O files. It generates declarations for the classes,\ncategories and protocols. This is the same information provided by\nusing 'otool -ov', but presented as normal Objective-C declarations</p>\n</blockquote>\n<p>It works for PrivilegedHelperTools mostly, but not for normal applications.</p>\n</div>",
            "votes": "0",
            "user": "daisy",
            "time": "Nov 19, 2020 at 6:19",
            "is_accepted": true,
            "comments": []
        }
    ]
}