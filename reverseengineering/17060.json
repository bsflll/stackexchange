{
    "title": "Linux x64 Disassembly: single movzwl operand question",
    "link": "https://reverseengineering.stackexchange.com/questions/17060/linux-x64-disassembly-single-movzwl-operand-question",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>A quick question regarding a <code>movzwl</code> instruction which do not behave as I expected. </p>\n<p>here is the disassembled code:</p>\n<pre><code>movzwl (%rax),%eax\n</code></pre>\n<p>Before the instruction, <code>rax</code> is <code>0x7fffffffe410</code> and point to <code>0x5</code>\nAfter the instruction, I would expect <code>eax</code> to be <code>0x5</code> (which is the case), but I would not expect that the upper bits of <code>rax</code> be cleared too... However, when debugging, <code>rax</code> values <code>0x5</code>...</p>\n<p>I thought that <code>movzwl</code> would only clear the upper bits of <code>eax</code>, but not the <code>rax</code> ones. Could you explain? </p>\n<p>Thank you very very much for your help!</p>\n<p><a href=\"https://i.sstatic.net/hNdeC.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/hNdeC.png\"/></a></p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "2k",
    "tags": [
        "linux",
        "x86-64"
    ],
    "user": "David Labay",
    "time": "Dec 28, 2017 at 11:12",
    "comments": [
        {
            "user": "Jongware",
            "text": "<span class=\"comment-copy\">\"I thought that ..\": Did you check the official Intel documentation?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This is a somewhat tricky part of the x64 instruction set and is not mentioned in descriptions of individual instructions but only as a sidenote in the general introduction section. Here's a good answer on it:</p>\n<p><a href=\"https://stackoverflow.com/questions/11177137/why-do-x64-instructions-zero-the-upper-part-of-a-32-bit-register\">https://stackoverflow.com/questions/11177137/why-do-x64-instructions-zero-the-upper-part-of-a-32-bit-register</a></p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Dec 28, 2017 at 23:13",
            "is_accepted": false,
            "comments": []
        }
    ]
}