{
    "title": "Assembly output too complicated",
    "link": "https://reverseengineering.stackexchange.com/questions/16949/assembly-output-too-complicated",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This is a probably a very basic question, please bear with me.</p>\n<p>I'm starting to get into reverse engineering following this pdf I found online: <a href=\"https://beginners.re/\" rel=\"nofollow noreferrer\">https://beginners.re/</a><br/>\nI am, however, stuck at the very basic steps.</p>\n<p>The relevant part from the PDF: <img alt=\"1]\" src=\"https://i.sstatic.net/yGeqF.png\"/></p>\n<p>When I try to compile my c++ code (which is the same as in the book) with the following command:</p>\n<pre><code>gcc main.cpp -S -O\n</code></pre>\n<p>This is the output I get:</p>\n<p><img alt=\"\" src=\"https://i.sstatic.net/z9FJ6.png\"/><a href=\"https://i.sstatic.net/z9FJ6.png\" rel=\"nofollow noreferrer\">2</a></p>\n<p>Which, as you can see, is very different, and a lot more complicated than the supposed output written in the pdf. I'm unsure what I'm doing wrong, could anyone help me?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "179",
    "tags": [
        "assembly"
    ],
    "user": "Bobobot",
    "time": "Dec 9, 2017 at 19:06",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Both outputs show the same effective assembly code.  In both outputs, there is only a single instruction:</p>\n<pre><code>ret\n</code></pre>\n<p>The second example output is a variation of <code>ret</code> the reason for which is listed in <a href=\"https://stackoverflow.com/questions/20526361/what-does-rep-ret-mean#20526918\">this answer on Stackoverflow</a>.</p>\n<p>The <em>more complicated</em> output has several code organizational assembler directives.  These directives are not instructions.</p>\n</div>",
            "votes": "0",
            "user": "RubberStamp",
            "time": "Dec 9, 2017 at 19:37",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Bobobot",
                    "text": "<span class=\"comment-copy\">Thank you! So if I understand correctly, assembler directives are to assembly what preprocessor directives are to C?  Also, is there a way to generate a simplified output file similar to the one in the pdf (function names remaining, directives removed etc.), or did the author presumably manually clean up the codes himself?</span>",
                    "time": null
                },
                {
                    "user": "Vladislav Ivanov",
                    "text": "<span class=\"comment-copy\">The author probably cleaned up it himself. You can also use <a href=\"https://godbolt.org\" rel=\"nofollow noreferrer\">godbolt.org</a> to quickly view disassembly for a given code</span>",
                    "time": null
                }
            ]
        }
    ]
}