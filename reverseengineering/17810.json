{
    "title": "radare2- Unable to use wopO command",
    "link": "https://reverseengineering.stackexchange.com/questions/17810/radare2-unable-to-use-wopo-command",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am new to radare2. I am trying out radare2 with exercise from <a href=\"https://exploit-exercises.com/protostar/stack0/\" rel=\"nofollow noreferrer\">Protostar stack0</a><br/>\nI generate raw De Bruijn Patterns with below command</p>\n<pre><code>$ ragg2 -P 500 -r\nAAABAACAADAAEAAFAAGAAHAAIAAJAAKAALAAMAANAAOAAPAAQAARAASAATAAUAAVAAWAAXAAYAAZAAaAAbAAcAAdAAeAAfAAgAAhAAiAAjAAkAAlAAmAAnAAoAApAAqAArAAsAAtAAuAAvAAwAAxAAyAAzAA1AA2AA3AA4AA5AA6AA7AA8AA9AA0ABBABCABDABEABFABGABHABIABJABKABLABMABNABOABPABQABRABSABTABUABVABWABXABYABZABaABbABcABdABeABfABgABhABiABjABkABlABmABnABoABpABqABrABsABtABuABvABwABxAByABzAB1AB2AB3AB4AB5AB6AB7AB8AB9AB0ACBACCACDACEACFACGACHACIACJACKACLACMACNACOACPACQACRACSACTACUACVACWACXACYACZACaACbACcACdACeACfACgAChACiACjACkAClACmACnACoACpACqACrACsA\n</code></pre>\n<p>Run the program in debug mode and execute it </p>\n<pre><code>$ r2 -d -A stack0\nProcess with PID 31611 started...\n= attach 31611 31611\nbin.baddr 0x08048000\nUsing 0x8048000\nasm.bits 32\n[x] Analyze all flags starting with sym. and entry0 (aa)\n[x] Analyze len bytes of instructions for references (aar)\n[x] Analyze function calls (aac)\n[x] Use -AA or aaaa to perform additional experimental analysis.\n[x] Constructing a function name for fcn.* and sym.func.* functions (aan)\n= attach 31611 31611\n31611\n -- Buy a mac\n\n[0xf7f72a20]&gt; dc\nAAABAACAADAAEAAFAAGAAHAAIAAJAAKAALAAMAANAAOAAPAAQAARAASAATAAUAAVAAWAAXAAYAAZAAaAAbAAcAAdAAeAAfAAgAAhAAiAAjAAkAAlAAmAAnAAoAApAAqAArAAsAAtAAuAAvAAwAAxAAyAAzAA1AA2AA3AA4AA5AA6AA7AA8AA9AA0ABBABCABDABEABFABGABHABIABJABKABLABMABNABOABPABQABRABSABTABUABVABWABXABYABZABaABbABcABdABeABfABgABhABiABjABkABlABmABnABoABpABqABrABsABtABuABvABwABxAByABzAB1AB2AB3AB4AB5AB6AB7AB8AB9AB0ACBACCACDACEACFACGACHACIACJACKACLACMACNACOACPACQACRACSACTACUACVACWACXACYACZACaACbACcACdACeACfACgAChACiACjACkAClACmACnACoACpACqACrACsA\nYou have changed the modified variable\nchild stopped with signal 11\n[+] SIGNAL 11 errno=0 addr=0x4141583d code=1 ret=0\n\n[0x080484d0]&gt; dr\neax = 0x00000000\nebx = 0x5a414159\necx = 0x41415841\nedx = 0xf7f48870\nesi = 0x00000001\nedi = 0xf7f47000\nesp = 0x4141583d\nebp = 0x41614141\neip = 0x080484d0\neflags = 0x00010282\noeax = 0xffffffff\n\n[0x080484d0]&gt; wopO ebp\nNeed hex value with `0x' prefix e.g. 0x41414142\n[0x080484d0]&gt; wopO esp\nNeed hex value with `0x' prefix e.g. 0x41414142\n[0x080484d0]&gt; wopO eip\nNeed hex value with `0x' prefix e.g. 0x41414142\n</code></pre>\n<p>Below is the C code which I am working on </p>\n<pre><code>  1 #include&lt;stdio.h&gt;\n  2 #include&lt;stdlib.h&gt;\n  3 #include&lt;unistd.h&gt;\n  4\n  5 int main(int argc, char **argv){\n  6\n  7     volatile int modified;\n  8     char buffer[64];\n  9\n 10     modified = 0;\n 11     scanf(\"%s\",buffer);\n 12\n 13     if(modified !=0){\n 14         printf(\"You have changed the modified variable\\n\");\n 15     }else{\n 16         printf(\"Try again\\n\");\n 17     }\n 18     return 0;\n 19 }\n</code></pre>\n<p>Q1)Any reason why eip is not overwritten with the De Bruijn Pattern?</p>\n<p>Q2)Why do I get the message <code>Need hex value with '0x' prefix e.g. 0x41414142</code> </p>\n<p>Kindly let me know. \nThank you.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "391",
    "tags": [
        "radare2"
    ],
    "user": "vanquish",
    "time": "Mar 26, 2018 at 12:06",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Did you notice that you indeed changed the desired variable?</p>\n<blockquote>\n<p>You have changed the modified variable</p>\n</blockquote>\n<p>Anyway, regarding the 2nd question, this is an intended behavior after <a href=\"https://github.com/radare/radare2/pull/9538\" rel=\"nofollow noreferrer\">the following pull-request</a> was merged to radare2.</p>\n<p>Now it is requires that you'll have <code>0x</code> prefixed to the passed value, so you can do something like this:</p>\n<pre><code>wopO `dr ebp`\n</code></pre>\n<p>or something like that:</p>\n<pre><code>wopO `?v ebp`\n</code></pre>\n<p>The backticks are used to execute radare2 command so you basically use the result of the inner command and pass it to <code>wopO</code></p>\n<hr/>\n<p>Regarding the first question, after some amount of chars (i.e long input) you'll get a Segfault, that's mean that your input cause a corruption and you indeed made a \"damage\" to eip. If you want to override <code>eip</code> you should bypass the security mitigation -- ASLR:</p>\n<p>To disable it temporarily, execute:</p>\n<pre><code>echo 0 | sudo tee /proc/sys/kernel/randomize_va_space\n</code></pre>\n<p>And to enable it again, execute:</p>\n<pre><code>echo 2 | sudo tee /proc/sys/kernel/randomize_va_space\n</code></pre>\n<p>If you want to change the value permanently, say if it is an exploitation-dedicated machine, add the following setting to <code>/etc/sysctl.conf</code>, for example:</p>\n<pre><code>echo \"kernel.randomize_va_space = 0\" &gt;&gt; /etc/sysctl.conf\n</code></pre>\n<p>and run the <code>sysctl -p</code> command.</p>\n</div>",
            "votes": "0",
            "user": "Megabeets",
            "time": "Mar 26, 2018 at 12:59",
            "is_accepted": true,
            "comments": [
                {
                    "user": "vanquish",
                    "text": "<span class=\"comment-copy\">Thank you very much for wopO <code>dr ebp</code> &amp; wopO <code>?v ebp</code>.And Yes, I did notice however from the link which I have been following the exercise second part was to get a reverse shell.</span>",
                    "time": null
                }
            ]
        }
    ]
}