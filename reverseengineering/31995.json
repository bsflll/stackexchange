{
    "title": "Snapchat Internal API",
    "link": "https://reverseengineering.stackexchange.com/questions/31995/snapchat-internal-api",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have been trying to find a way to access Snapchats internal API and I have found stuff like:</p>\n<p><a href=\"https://github.com/transitive-bullshit/snapchat\" rel=\"nofollow noreferrer\">https://github.com/transitive-bullshit/snapchat</a> <br/>\n<a href=\"https://github.com/NSExceptional/SnapchatKit\" rel=\"nofollow noreferrer\">https://github.com/NSExceptional/SnapchatKit</a> <br/>\n<a href=\"https://github.com/mgp25/SC-API/\" rel=\"nofollow noreferrer\">https://github.com/mgp25/SC-API/</a> <br/>\n<a href=\"https://gibsonsec.org/snapchat/fulldisclosure/\" rel=\"nofollow noreferrer\">https://gibsonsec.org/snapchat/fulldisclosure/</a> <br/>\n<a href=\"https://github.com/mgp25/SC-API/wiki/API-v2-Research/\" rel=\"nofollow noreferrer\">https://github.com/mgp25/SC-API/wiki/API-v2-Research/</a></p>\n<p>But all this stuff no longer works due to 1. Updates in Snapchats API or 2. due to Casper.io being taken down.</p>\n<p>I have tried other ways including using mitmproxy but snapchat detects that and just refuses to send any requests out. I was also thinking of using WireShark but (from what I understand) all the packets will be encrypted rendering it useless.</p>\n<p>Is there any potential way to expose Snapchats internal API (Just any ideas (cuz I'm out of them)), or is any one aware of anyone that has recently done this with there latest internal API(cuz from what I understand they keep changing it)</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "333",
    "tags": [
        "api",
        "api-reversing"
    ],
    "user": "Titanium",
    "time": "Jun 23, 2023 at 4:20",
    "comments": [
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">It is correct that if the traffic uses HTTPS then Wireshark will be able only to display the encrypted packets. However Wireshark has the ability the decrypt HTTPS if you feed it with the HTTPS session keys. Those keys can be extracted e.g. using Frida. There is e.g. <a href=\"https://github.com/saleemrashid/frida-sslkeylog\" rel=\"nofollow noreferrer\">github.com/saleemrashid/frida-sslkeylog</a> - not sure if it still works.</span>",
            "time": null
        }
    ],
    "answers_data": []
}