{
    "title": "How can a video file cause an iOS device to crash or hang?",
    "link": "https://reverseengineering.stackexchange.com/questions/14027/how-can-a-video-file-cause-an-ios-device-to-crash-or-hang",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There have been reports of a malformed h264 video file causing iOS devices to hang or crash (I've added the link in plaintext to avoid accidental clickthroughs, play at your own risk: <code>http://www.apps4iphone.net/videocrash.html</code>).  I am trying to reverse engineer this file to understand why and how it harms an iOS device.</p>\n<p>There doesn't appear to be anything abnormal with the file looking at it with Mediainfo Mac:</p>\n<pre><code>* * * MediaInfo Mac 0.7.36.0 file analysis report.\n* * * MediaInfo Mac is ©2010 by Diego Massanti - http://mediainfo.massanti.com\n* * * MediaInfoLib by Jerome Martinez - http://mediainfo.sourceforge.net\nCreated on: Nov 22, 2016, 1:55:04 PM EST\nReport for file: IMG_0942.mp4\n\nGeneral / Container Stream #1\n    Total Video Streams for this File.................1\n    Total Audio Streams for this File.................1\n    Video Codecs Used.................................AVC\n    Audio Codecs Used.................................AAC LC\n    File Format.......................................MPEG-4\n    Play Time.........................................5s 6ms\n    Total File Size...................................527 KiB\n    Total Stream BitRate..............................863 Kbps\nVideo Stream #1\n    Codec (Human Name)................................AVC\n    Codec (FourCC)....................................avc1\n    Codec <a class=\"__cf_email__\" data-cfemail=\"82d2f0ede4ebeee7acacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacc0e3f1e7eeebece7c2ceb1acb2\" href=\"/cdn-cgi/l/email-protection\">[email protected]</a>\n    Frame Width.......................................480 pixels\n    Frame Height......................................480 pixels\n    Frame Rate........................................25.000 fps\n    Total Frames......................................126\n    Display Aspect Ratio..............................1.000\n    Scan Type.........................................Progressive\n    Color Space.......................................YUV\n    Codec Settings (Summary)..........................1 Ref Frames\n    QF (like Gordian Knot)............................0.137\n    Codec Settings (CABAC)............................No\n    Codec Settings (Reference Frames).................1\n    Video Stream Length...............................5s 6ms\n    Video Stream BitRate..............................789 Kbps\n    Video Stream BitRate Mode.........................VBR\n    Bit Depth.........................................8 bits\n    Video Stream Size.................................486 KiB (92%)\n    Video Stream Title................................Core Media Video\n    Date of Original Encoding.........................UTC 2016-11-17 20:14:29\nAudio Stream #1\n    Codec.............................................AAC\n    Codec (FourCC)....................................40\n    Audio Stream Length...............................4s 504ms\n    Audio Stream BitRate..............................72.0 Kbps\n    Audio Stream BitRate Mode.........................CBR\n    Number of Audio Channels..........................1\n    Audio Channel's Positions.........................Front: C\n    Sampling Rate.....................................44.1 KHz\n    Audio Stream Size.................................39.2 KiB (7%)\n    Audio Stream Title................................Core Media Audio\n    Date of Original Encoding.........................UTC 2016-11-17 20:14:29\n</code></pre>\n<p>ffprobe output:</p>\n<pre><code>➜  Downloads ffprobe IMG_0942.mp4\nffprobe version 3.2 Copyright (c) 2007-2016 the FFmpeg developers\n  built with Apple LLVM version 8.0.0 (clang-800.0.42.1)\n  configuration: --prefix=/usr/local/Cellar/ffmpeg/3.2 --enable-shared --enable-pthreads --enable-gpl --enable-version3 --enable-hardcoded-tables --enable-avresample --cc=clang --host-cflags= --host-ldflags= --enable-libmp3lame --enable-libx264 --enable-libxvid --enable-opencl --disable-lzma --enable-vda\n  libavutil      55. 34.100 / 55. 34.100\n  libavcodec     57. 64.100 / 57. 64.100\n  libavformat    57. 56.100 / 57. 56.100\n  libavdevice    57.  1.100 / 57.  1.100\n  libavfilter     6. 65.100 /  6. 65.100\n  libavresample   3.  1.  0 /  3.  1.  0\n  libswscale      4.  2.100 /  4.  2.100\n  libswresample   2.  3.100 /  2.  3.100\n  libpostproc    54.  1.100 / 54.  1.100\nInput #0, mov,mp4,m4a,3gp,3g2,mj2, from 'IMG_0942.mp4':\n  Metadata:\n    major_brand     : mp42\n    minor_version   : 1\n    compatible_brands: mp41mp42isom\n    creation_time   : 2016-11-17T20:14:29.000000Z\n  Duration: 00:00:05.01, start: 0.000000, bitrate: 862 kb/s\n    Stream #0:0(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, mono, fltp, 71 kb/s (default)\n    Metadata:\n      creation_time   : 2016-11-17T20:14:29.000000Z\n      handler_name    : Core Media Audio\n    Stream #0:1(und): Video: h264 (Constrained Baseline) (avc1 / 0x31637661), yuv420p, 480x480, 794 kb/s, 25.17 fps, 25 tbr, 12800 tbn, 25600 tbc (default)\n    Metadata:\n      creation_time   : 2016-11-17T20:14:29.000000Z\n      handler_name    : Core Media Video\n</code></pre>\n<p>I'm not sure of the best way to read the video file's header contents on a Mac.  But what would cause this video to hang an iOS device?  Is it a malformed header?  Corrupted metadata or video stream?  Also note that this does not crash Quicktime on Mac or Safari/AVFoundation on the iOS Simulator.</p>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "278",
    "tags": [
        "ios"
    ],
    "user": "JAL",
    "time": "Nov 22, 2016 at 19:11",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've been looking into this same issue and although I have not found exactly what is causing the problem.  I have tried to use ffmpeg to find a little info. When running:</p>\n<pre><code>ffmpeg -v error -i IMG_0942.mp4 -f null - 2&gt; IMG_0942.mp4.log\n</code></pre>\n<p>it yields the following:</p>\n<pre><code>[h264 @ 0x8f4720] top block unavailable for requested intra4x4 mode -1 at 0 0 \n[h264 @ 0x8f4720] error while decoding MB 0 0\n</code></pre>\n<p>Not sure if you know how to read that or what it means (I don't), but it does help to demonstrate a way to find where the issue is.</p>\n<p>Let me know if you make anymore progress on this issue.</p>\n</div>",
            "votes": "2",
            "user": "MikeSchem",
            "time": "Dec 13, 2016 at 19:53",
            "is_accepted": false,
            "comments": [
                {
                    "user": "MikeSchem",
                    "text": "<span class=\"comment-copy\">PS. just checked and IOS 10.2 fixed the issue.</span>",
                    "time": null
                }
            ]
        }
    ]
}