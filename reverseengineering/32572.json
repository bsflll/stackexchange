{
    "title": "How to search a sequence of instructions in Ghidra?",
    "link": "https://reverseengineering.stackexchange.com/questions/32572/how-to-search-a-sequence-of-instructions-in-ghidra",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'd like to identify in Ghidra a specific sequence of instructions, which I get from MSVC Debug in Visual Studio compiling my own function:</p>\n<p><a href=\"https://i.sstatic.net/rMoq1.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/rMoq1.png\"/></a></p>\n<p>What I'm looking for so is (for the same DLL, decompiled in Ghidra) to intercept the sequence <code>movss/movss/movss/movss/lea/lea/lea</code>, in the hoping to intercept the C++ Clamp function I've defined:</p>\n<pre><code>template &lt;typename T&gt;\nT Clamp(const T&amp; min, const T&amp; max, const T&amp; value)\n{\n    if (value &lt; min)\n    {\n        return min;\n    }\n    else if (value &gt; max)\n    {\n        return max;\n    }\n    return value;\n}\n</code></pre>\n<p>What's the correct way to do this in Ghidra?</p>\n<p>If I try <em>Instruction Pattern Search</em> feature in Ghidra, inserting the first 4 movss of the sequence (selecting the instructions show in the VS Debugger, after enabling <em>Show Code Bytes</em>; i.e. in order <code>f3 0f 10/f3 0f 11/f3 0f 10/f3 0f 11</code>):</p>\n<p><a href=\"https://i.sstatic.net/IaKEU.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/IaKEU.png\"/></a></p>\n<p>it doesn't return any hit.</p>\n<p>So, is this a mismatch from VS Code disassembly and the Listing elaborated by Ghidra, or am I searching in a wrong way?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "c++",
        "ghidra",
        "msvc"
    ],
    "user": "markzzz",
    "time": "Dec 16, 2023 at 14:55",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\"><b>Comments have been <a href=\"https://chat.stackexchange.com/rooms/150384/discussion-on-question-by-markzzz-how-to-search-a-sequence-of-instructions-in-gh\">moved to chat</a>; please do not continue the discussion here.</b> Before posting a comment below this one, please review the <a href=\"/help/privileges/comment\">purposes of comments</a>. Comments that do not request clarification or suggest improvements usually belong as an <a href=\"/help/how-to-answer\">answer</a>, on <a href=\"https://reverseengineering.meta.stackexchange.com\">Reverse Engineering Meta</a>, or in <a href=\"https://chat.stackexchange.com\">Reverse Engineering Chat</a>. Comments continuing discussion may be removed.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'll post an answer here with the conclusions we came to in the chat, in case anyone finds it useful in the future.</p>\n<p>There seems to be a limitation of the Instruction Pattern Search tool in that the patterns must contain a fixed amount of bytes. In the screenshot posted in the original post, the second and fourth pattern are looking for <code>movss [addr], xmm</code> instructions (operands encoded in 5 bytes, first operand is <code>00...101</code>), while the instructions that need to be found are <code>movss [reg+offs], xmm</code> (operands encoded in 3 bytes, first operand is <code>01...100</code>). To correct the patterns, one needs to find an appropriate instruction in code or insert the bytes manually into the tool and then unmask the operands (as far as Ghidra allows).</p>\n<p>Alternatively, one can also use the memory search ('S' hotkey or Search -&gt; Memory) and insert a pattern matching the instruction bytes. For this specific question, the pattern would be:</p>\n<blockquote>\n<p>f3 0f 10 ?? ?? ?? ?? ?? f3 0f 11 ?? ?? ?? f3 0f 10 ?? ?? ?? ?? ?? f3 0f 11 ?? ?? ??</p>\n</blockquote>\n<p>Ghidra also allows searching in a more dynamic manner via <a href=\"https://fossies.org/linux/ghidra/Ghidra/Features/Base/src/main/help/help/topics/Search/Regular_Expressions.htm\" rel=\"nofollow noreferrer\">regular expressions</a>. This would allow one to craft a regex pattern that matches against four consecutive movss instructions, regardless of their operands, but may make it more difficult to guard against false positives.</p>\n</div>",
            "votes": "4",
            "user": "ynwarcs",
            "time": "Dec 22, 2023 at 11:24",
            "is_accepted": true,
            "comments": [
                {
                    "user": "markzzz",
                    "text": "<span class=\"comment-copy\">Nice, thanks. For this specific case, can you give an example of regex? Or do you need a new question maybe?</span>",
                    "time": null
                },
                {
                    "user": "Ali Rizvi-Santiago",
                    "text": "<span class=\"comment-copy\">@markzzz, there's two regexes for both instruction types in the chat. Use <code>[DLT\\\\dlt]..</code>  to match the 3-byte operands exactly (the <code>?? ?? ??</code>), or <code>[\\x05\\x0D\\x15\\x1D\\x25\\x2D\\x35]....</code> for the longer ones (the <code>?? ?? ?? ?? ??</code>), or if you don't care about the variations for the SIB byte at all, the pattern given by @ynwarcs could just be <code>\\xF3\\x0F\\x10.....\\xF3\\x0F\\x11...\\xF3\\x0F\\x10.....\\xF3\\x0F\\x11...</code>. (The '<code>.</code>' character in a regular expression matches any byte).</span>",
                    "time": null
                }
            ]
        }
    ]
}