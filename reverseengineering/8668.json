{
    "title": "Scanning memory accessed by a DLL",
    "link": "https://reverseengineering.stackexchange.com/questions/8668/scanning-memory-accessed-by-a-dll",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I would like to scan (or alternatively dump) memory that a DLL accesses while it's running. Scanning the application's (EXE) memory is not feasible (too large), and the DLL needs the application to run.</p>\n<p>Are there any tools like this?</p>\n</div>",
    "votes": "1",
    "answers": 0,
    "views": "240",
    "tags": [
        "dll",
        "memory"
    ],
    "user": "Joona",
    "time": "Apr 9, 2015 at 9:43",
    "comments": [
        {
            "user": "rev",
            "text": "<span class=\"comment-copy\">how big is the executable?</span>",
            "time": null
        },
        {
            "user": "Joona",
            "text": "<span class=\"comment-copy\">@AcidShout The EXE itself is about 14MB, but it uses somewhere around 400-500MB of memory. DLL is 2MB and <i>should</i> use significantly less memory.</span>",
            "time": null
        },
        {
            "user": "rev",
            "text": "<span class=\"comment-copy\">I'm not sure of how much computing power you have, but 500MB is not <i>that</i> much. You should try scanning. If you're on Windows, however, you can set a <code>PAGE_GUARD</code> memory protection, and you'll get a notification (as exception) each time the memory is accesed (execute, read, or write).</span>",
            "time": null
        },
        {
            "user": "Joona",
            "text": "<span class=\"comment-copy\">@AcidShout I have tried with CheatEngine, and it simply freezes after a few scans. If I could only get the memory the DLL uses, I should be able to find what I need pretty quickly, as well.</span>",
            "time": null
        },
        {
            "user": "Joona",
            "text": "<span class=\"comment-copy\">@AcidShout Thanks, I just found out that  I can actually do that in Python too! Sounds like a feasible project.</span>",
            "time": null
        }
    ],
    "answers_data": []
}