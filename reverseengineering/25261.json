{
    "title": "Extracting Assembly line code from an executable in Ghidra",
    "link": "https://reverseengineering.stackexchange.com/questions/25261/extracting-assembly-line-code-from-an-executable-in-ghidra",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm using Ghidra to reverse engineer an EXE file and save its assembly line code only. Does Ghidra have any function or scripts which exports the assembly line code? I don't want to manually copy the code from the Listing window.</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "3k",
    "tags": [
        "assembly",
        "ghidra"
    ],
    "user": "Sajjad Zulphekari",
    "time": "Jun 24, 2020 at 11:49",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Not sure if you ask about one line or the whole program.</p>\n<p>One assembly line can be obtain for example by such script:</p>\n<pre><code>addr = toAddr(&lt;address&gt;)\nprint(currentProgram.getListing().getInstructionAt(addr))\n</code></pre>\n<p>if we are talking about the whole program</p>\n<pre><code>for instr in currentProgram.getListing().getInstructions(True):\n    print(instr)\n</code></pre>\n<p>but I guess the last one can take a while. More information can be found in the docs about <a href=\"https://ghidra.re/ghidra_docs/api/ghidra/program/model/listing/Listing.html\" rel=\"noreferrer\">Listing</a> object.</p>\n</div>",
            "votes": "6",
            "user": "Paweł Łukasik",
            "time": "Jun 10, 2020 at 12:36",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Sajjad Zulphekari",
                    "text": "<span class=\"comment-copy\">Thank you so much, this is exactly what I wanted.  The program has to be analyzed for this to work, I wrote a script which analyzes the program and then extracts the assembly code, but the issue is that the first time i run the script, it can't detect the current Listing window and gets a NoneType error (even though the script was analyzed), but if I run the script again after it has been analyzed once, then the assembly code is displayed.   Is there a way where the script extracts the assembly code the first time the script has been run?</span>",
                    "time": null
                },
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">share a link to this script. I'll have a look</span>",
                    "time": null
                },
                {
                    "user": "Sajjad Zulphekari",
                    "text": "<span class=\"comment-copy\">I fixed it, thank you for your time!</span>",
                    "time": null
                }
            ]
        }
    ]
}