{
    "title": "How do I decode this JavaScript code? [duplicate]",
    "link": "https://reverseengineering.stackexchange.com/questions/18744/how-do-i-decode-this-javascript-code",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>This question already has an answer here</b>:\n                                \n                            </div>\n</div>\n</div>\n</div>\n<div class=\"flex--item mb0 mt4\">\n<a dir=\"ltr\" href=\"/questions/18693/how-decrypt-hexadecimal-javascript-code\">How decrypt hexadecimal javascript code? [closed]</a>\n<span class=\"question-originals-answer-count\">\n                                (1 answer)\n                            </span>\n</div>\n<div class=\"flex--item mb0 mt8\">Closed <span class=\"relativetime\" title=\"2018-07-10 15:04:50Z\">6 years ago</span>.</div>\n</div>\n</aside>\n</div>\n<p>Each file starts with the same function:</p>\n<pre><code>(function(_0x128f83, _0x1ae5b9) {\n    var _0x1b5471 = function(_0x339be5) {\n        while (--_0x339be5) {\n            _0x128f83['push'](_0x128f83['shift']());\n        }\n    };\n    _0x1b5471(++_0x1ae5b9);\n}(_0xf75e, 0xc2));\nvar _0x4e13 = function(_0x24c6e1, _0x3b52a9) {\n    _0x24c6e1 = _0x24c6e1 - 0x0;\n    var _0xc16529 = _0xf75e[_0x24c6e1];\n    return _0xc16529;\n};\n'use strict';\nObject[_0x4e13('0x0')](exports, '__esModule', {\n    'value': !![]\n});\n</code></pre>\n<p>I did some research and have come to the conclusion that the code was obfuscated with a library similar to <a href=\"https://obfuscator.io/\" rel=\"nofollow noreferrer\">obfuscator.io</a>. My question is how do i decode the hexadecimal values, as many of the variables in the file are reliant on them (e.g. <code>const electron_1 = require(_0x4e13('0x1'));</code>). Any feedback would be much appreciated.</p>\n</div>",
    "votes": "-2",
    "answers": 1,
    "views": "19k",
    "tags": [
        "decryption",
        "obfuscation",
        "deobfuscation",
        "javascript",
        "hexadecimal"
    ],
    "user": "solo",
    "time": "6 years ago",
    "comments": [
        {
            "user": "MCCCS",
            "text": "<span class=\"comment-copy\"><a href=\"https://stackoverflow.com/questions/30194953/how-to-decode-this-hex-code-javascript\" title=\"how to decode this hex code javascript\">stackoverflow.com/questions/30194953/…</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can use this tool to partial deobfuscate that code: <a href=\"http://jsnice.org/\" rel=\"nofollow noreferrer\">http://jsnice.org/</a></p>\n<p>In that case I get this:</p>\n<pre><code>'use strict';\n(function(data, i) {\n  /**\n   * @param {number} isLE\n   * @return {undefined}\n   */\n  var write = function(isLE) {\n    for (; --isLE;) {\n      data[\"push\"](data[\"shift\"]());\n    }\n  };\n  write(++i);\n})(_0xf75e, 194);\n/**\n * @param {string} level\n * @param {?} ai_test\n * @return {?}\n */\nvar _0x4e13 = function(level, ai_test) {\n  /** @type {number} */\n  level = level - 0;\n  var rowsOfColumns = _0xf75e[level];\n  return rowsOfColumns;\n};\n\"use strict\";\nObject[_0x4e13(\"0x0\")](exports, \"__esModule\", {\n  \"value\" : !![]\n});\n</code></pre>\n</div>",
            "votes": "2",
            "user": "Álvaro Romero",
            "time": "Jul 10, 2018 at 11:39",
            "is_accepted": false,
            "comments": [
                {
                    "user": "solo",
                    "text": "<span class=\"comment-copy\">Got it. How do I go about decoding the <code>_0x4e13</code>-like values, though?</span>",
                    "time": null
                },
                {
                    "user": "Álvaro Romero",
                    "text": "<span class=\"comment-copy\">I don't have idea, I tried to complete it with zeros until it had 6 characters, but it doesn't work.</span>",
                    "time": null
                },
                {
                    "user": "Jongware",
                    "text": "<span class=\"comment-copy\">@solo: why do you want to? Clearly it's just a random object name (or hashed beyond recall), and there is nothing to decode <i>to</i>.</span>",
                    "time": null
                },
                {
                    "user": "solo",
                    "text": "<span class=\"comment-copy\">I need to read the rest of the source code and it's hard to read when most of the variables are in that format.</span>",
                    "time": null
                },
                {
                    "user": "Jongware",
                    "text": "<span class=\"comment-copy\">@solo: then rename them to whatever you find easier to read.</span>",
                    "time": null
                }
            ]
        }
    ]
}