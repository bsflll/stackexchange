{
    "title": "VMware Tools list of all installed files with it",
    "link": "https://reverseengineering.stackexchange.com/questions/25312/vmware-tools-list-of-all-installed-files-with-it",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm reversing an anti VMware mechanism which detects <code>VGAuthService.exe</code> and <code>vmtoolsd.exe</code> as well as a few registries that I've taken care of and some drivers from <code>C:\\Windows\\System32\\drivers\\vm...</code>. I deleted <code>C:\\Program Files\\VMware</code> folder and those drivers, killed <code>VGAuthService.exe</code>, <code>vmtoolsd.exe</code> and <code>vm3dservice.exe</code> processes but it's still detected, which means I'm missing something. However, when I uninstall VMware Tools, even without rebooting the machine, it's undetected.</p>\n<p>Is there a tool/or way to find which files VMware Tools installation drops on disk, what it modifies, etc.? I remember there was a tool \"Orca\" which was useful for .MSI files, but it's not in this case.</p>\n<p>My VM:</p>\n<pre><code>VMware® Workstation 15 Pro\n15.5.5 build-16285975\n</code></pre>\n</div>",
    "votes": "3",
    "answers": 2,
    "views": "1k",
    "tags": [
        "vmware"
    ],
    "user": "nop",
    "time": "Jun 16, 2020 at 15:12",
    "comments": [
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">For registry changes you can use <a href=\"https://www.nirsoft.net/utils/registry_changes_view.html\" rel=\"nofollow noreferrer\">RegistryChangesView</a>. Just make one snapshot, install VMWare tools and compare the registry afterwards. See also this question for more tools: <a href=\"https://serverfault.com/questions/11829/how-to-make-compare-filesystem-registry-snapshots-in-windows\" title=\"how to make compare filesystem registry snapshots in windows\">serverfault.com/questions/11829/…</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Possibly it's checking for the drivers (e.g. network card, mouse, or display), or for a registered service (even if it's not running). Check the devices and services list before and after uninstalling.</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Jun 16, 2020 at 15:22",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>First step in understanding installer is identifying what product the installer was created with, then look is there any known extract command lines. Tools such as <a href=\"https://github.com/Bioruebe/UniExtract2\" rel=\"nofollow noreferrer\">Universal Extractor 2</a> can also help do this automatically.\nIn this case if you use a tool such as <a href=\"https://live.sysinternals.com/ProcMon.exe\" rel=\"nofollow noreferrer\">ProcMon</a> you can see that VMWare's setup.exe extracts an MSI and executes that.</p>\n<p>We can pass the <a href=\"https://docs.microsoft.com/en-us/windows/win32/msi/administrative-installation\" rel=\"nofollow noreferrer\">admin install</a> command line to setup.exe, which is then passed to Windows Installer msiexec.exe which extracts the MSI. This is also documented by VMWare in <a href=\"https://kb.vmware.com/s/article/2032184#:%7E:text=%20Extracting%20the%20drivers%20from%20VMware%20Tools%20bundled,the%20process%20is%20complete%2C%20click%20Fi...%20More%20\" rel=\"nofollow noreferrer\">Extracting the drivers from VMware Tools bundled with VMware Workstation</a></p>\n<pre><code>setup /A /P C:\\setup\n</code></pre>\n<p>This will output files into C:\\setup along with the MSI.\nYou can then just browse the folder structure to identify files, or use an MSI editing tool such as <a href=\"https://docs.microsoft.com/en-us/windows/win32/msi/orca-exe\" rel=\"nofollow noreferrer\">ORCA</a> open the MSI to view registry tables and custom actions.</p>\n<p>Also be aware there is more low level options then simply looking for files/drivers to detect running in VMWare for example as per <a href=\"https://kb.vmware.com/s/article/1009458#:%7E:text=Detecting%20when%20software%20is%20running%20in%20a%20VMware,hypervisor%20port%20Testing%20the%20CPUID%20hypervisor%20present%20bit\" rel=\"nofollow noreferrer\">Mechanisms to determine if software is running in a VMware virtual machine</a></p>\n<ul>\n<li>Testing the CPUID hypervisor present bit Testing the virtual BIOS</li>\n<li>DMI information and the hypervisor port</li>\n</ul>\n<p>Example using CPU id:</p>\n<pre><code>int cpuid_check() {\n    unsigned int eax, ebx, ecx, edx;\n    char hyper_vendor_id[13];\n    cpuid(0x1, &amp; eax, &amp; ebx, &amp; ecx, &amp; edx;;\n        if (bit 31 of ecx is set) {\n          cpuid(0x40000000, &amp; eax, &amp; ebx, &amp; ecx, &amp; edx;; memcpy(hyper_vendor_id + 0, &amp; ebx, 4); memcpy(hyper_vendor_id + 4, &amp; ecx, 4); memcpy(hyper_vendor_id + 8, &amp; edx, 4); hyper_vendor_id[12] = '\\0';\n              if (!strcmp(hyper_vendor_id, \"VMwareVMware\")) return 1; // Success - running under VMware         } \n</code></pre>\n<p>Using DMI information:</p>\n<pre><code>int dmi_check(void) {\n    char string[10];\n    GET_BIOS_SERIAL(string);\n    if (!memcmp(string, \"VMware-\", 7) || !memcmp(string, \"VMW\", 3)) return 1; // DMI contains VMware specific string.         else                 return 0; }\n</code></pre>\n</div>",
            "votes": "1",
            "user": "chentiangemalc",
            "time": "Nov 18, 2020 at 2:23",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">7-Zip is also nice if you only want to get the files from MSI databases.</span>",
                    "time": null
                }
            ]
        }
    ]
}