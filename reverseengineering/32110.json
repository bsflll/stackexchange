{
    "title": "How to pass an SVD file as an argument to IDA Pro in the command line (batch mode)?",
    "link": "https://reverseengineering.stackexchange.com/questions/32110/how-to-pass-an-svd-file-as-an-argument-to-ida-pro-in-the-command-line-batch-mod",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am trying to disassemble a few Arm Cortex-M3 .elf binaries and run a custom IDAPython script (script.py) from the command line (in batch mode). I have been able to do that with the following command:</p>\n<pre><code>/path_to_idapro/idat -B -parm:ARMv7-M -logfile.log -S\"/path_to_script/script.py arg1\" elf_to_disassemble\n</code></pre>\n<p>However, I need to load an SVD file before running script.py so that my analysis will be complete. In IDA Pro GUI, I do the following:</p>\n<ul>\n<li>Edit &gt; Plugins &gt; SVD file management</li>\n<li>Select the SVD file</li>\n</ul>\n<p>How can I pass the SVD file (e.g., /path_to_SVD/STM32F103.svd) as an argument to my previous command?</p>\n<p>I have already searched the command line switches of IDA Pro <a href=\"https://www.hex-rays.com/products/ida/support/idadoc/417.shtml\" rel=\"nofollow noreferrer\">https://www.hex-rays.com/products/ida/support/idadoc/417.shtml</a>, and to my understanding, there isnâ€™t such an option.</p>\n<p>I am currently using IDA Pro v7.6 in Ubuntu 20.04.3 LTS.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "348",
    "tags": [
        "ida",
        "disassembly",
        "binary-analysis",
        "idapython",
        "arm"
    ],
    "user": "Konstantinos",
    "time": "Jul 30, 2023 at 20:00",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can run plugins from a script as follows:</p>\n<pre class=\"lang-py prettyprint-override\"><code>import ida_loader\n\narg = 0\nida_loader.load_and_run_plugin(\"svdimport\", arg)\n</code></pre>\n<p>Where <code>arg</code> has <code>size_t</code> type. This normally allows you to select plugin modes, but does not allow you to pass strings to your plugin.</p>\n<p>Thus, I think there are two not-so-pleasant options:</p>\n<ul>\n<li>generate idb manually and only then analyse it in batch mode (doesn't make much sense when analysing at scale)</li>\n<li>use a custom SVD Loader Plugin with a hardcoded file value or passed through configuration file (check out <a href=\"https://github.com/h2lab/SVD-Loader\" rel=\"nofollow noreferrer\">this</a> and <a href=\"https://github.com/Accenture/FirmLoader\" rel=\"nofollow noreferrer\">this</a> as an input pointers)</li>\n</ul>\n</div>",
            "votes": "0",
            "user": "y_v",
            "time": "Jul 30, 2023 at 22:41",
            "is_accepted": false,
            "comments": []
        }
    ]
}