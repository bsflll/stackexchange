{
    "title": "Malware in virtual machines",
    "link": "https://reverseengineering.stackexchange.com/questions/2513/malware-in-virtual-machines",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Once I perform static analysis on a malware sample, I next run it in a virtual machine.</p>\n<ul>\n<li>Does this give the malware a chance to spread to the real machine?</li>\n<li>Does this give the malware a chance to spread across networks?</li>\n<li>What steps/tips can I follow to prevent the malware from spreading from the VM?</li>\n</ul>\n<p>I use VMwareW.</p>\n</div>",
    "votes": "13",
    "answers": 5,
    "views": "2k",
    "tags": [
        "malware",
        "virtual-machines"
    ],
    "user": "Higet",
    "time": "Jul 22, 2013 at 17:43",
    "comments": [
        {
            "user": "asheeshr",
            "text": "<span class=\"comment-copy\">I edited your question to clarify the main point. I also attempted to make it less broad than it was before, otherwise it would have been closed. Have a look at the <a href=\"http://reverseengineering.stackexchange.com/help/dont-ask\">questions FAQ</a> for more.</span>",
            "time": null
        },
        {
            "user": "PSS",
            "text": "<span class=\"comment-copy\">possible duplicate of <a href=\"http://reverseengineering.stackexchange.com/questions/23/how-can-i-analyze-a-potentially-harmful-binary-safely\">How can I analyze a potentially harmful binary safely?</a></span>",
            "time": null
        },
        {
            "user": "perror",
            "text": "<span class=\"comment-copy\">Note also that the malware may detect the virtual machine and stop operate as usual. Then, you will need to install it on a real machine (or change your VM).</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The malware can propagate from the VM to the host in several circumstances:</p>\n<ul>\n<li>If there's a bug in the VM software. That's not very common, but it's possible.</li>\n<li>If there's a bug in the host OS. A bug that specifically allows malware to break out of a VM is unlikely but again possible.</li>\n<li>If there's a bug in the processor. That's even more unlikely but still not mathematically impossible.</li>\n<li>If there's a way for the malware to exchange information with the host. This can be over the network; in this respect, there's no difference between using a VM and using a separate physical machine, so you need to firewall the VM appropriately (allow only the bare minimum, don't do anything that might allow the server to hijack the client such as SSH with X forwarding). Another vector is via the VM tools such as file and clipboard sharing: the software running in the VM might read and write shared files, access the host clipboard, etc. So when running malware in a VM you should disable all these convenience tools (disable them in the VM configuration, it's not enough to refrain from installing the guest software since the malware could come with its own).</li>\n</ul>\n<p>For more on that topic, read <a href=\"https://security.stackexchange.com/questions/9011/does-a-virtual-machine-stop-malware-from-doing-harm\">https://security.stackexchange.com/questions/9011/does-a-virtual-machine-stop-malware-from-doing-harm</a> and <a href=\"https://security.stackexchange.com/questions/12546/is-it-safe-to-install-malware-in-a-vm\">https://security.stackexchange.com/questions/12546/is-it-safe-to-install-malware-in-a-vm</a></p>\n<p>All in all, most malware can be analyzed safely in a properly configured virtual machine. Disable all guest features and don't connect to the VM with any protocol that allows the server to influence the client. Firewall the VM as if it was hostile (it is); you should use a host-only network so that you can easily control what goes there.</p>\n<p>There's another reason why you might prefer a physical machine to a virtual machine. There's quite a bit of malware that attempts to detect whether it's being analyzed, and doesn't behave maliciously when it is. Obvious, common things that malware tries to detect is signs that it's running under a debugger: check if it's being ptraced (or the Windows equivalent), check for sudden pauses in the execution, â€¦ And some malware looks for telltale signs of a VM, such as drivers for hardware that common VM software emulates, or CPU oddities that are inexistent or rare outside emulated CPUs. This isn't to say that you cannot analyze malware in a VM: sometimes you can, sometimes you can't, it depends on the malware. If you start in a VM and find nothing you need to be prepared to move to a physical machine.</p>\n<p>Note that there are risks with a physical machine too: malware could attempt to <a href=\"https://security.stackexchange.com/questions/7204/is-making-a-clean-install-enough-to-remove-potential-malware\">plant itself</a> into one of the <a href=\"https://security.stackexchange.com/questions/25473/where-can-a-virus-or-other-malware-hide-on-common-pc-and-mac-hardware\">many pieces of firmware</a> on the motherboard and <a href=\"http://semiaccurate.com/2009/07/31/apple-keyboard-firmware-hack-demonstrated/\" rel=\"nofollow noreferrer\">peripherals</a>. Toolkits for this are beginning to emerge, such as <a href=\"http://www.toucan-system.com/research/blackhat2012_brossard_hardware_backdooring.pdf\" rel=\"nofollow noreferrer\">Rakshasa</a> and <a href=\"https://security.stackexchange.com/questions/7181/does-the-mebromi-bios-flashing-rootkit-mean-apts-for-personal-computers-are-here\">Mebromi</a>. So if you analyze some sophisticated malware on a physical machine, don't trust this physical machine any more, ever.</p>\n</div>",
            "votes": "12",
            "user": "Community",
            "time": "Mar 17, 2017 at 10:46",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Quonux",
                    "text": "<span class=\"comment-copy\">&gt;That's even more unlikely but still not mathematically impossible, it is very real and dangerous, just check out the erretas from intel or AMD, the best bug i found was in a Core2 Series where the memory above 4GB wasn't secured completly</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There were a lot of saying in replays, but I'd like to stress on some answers from the practical point of view:</p>\n<ul>\n<li><strong>network connection</strong> - a while ago I would agree that simply disconnecting the vm from the network will solve the problem of spreading through the network. Today, there are more and more malwares that will work only when the connection to CnC has been established or at least it can ping to the outer world, so I'd suggest that you should think about more serious solution than just disconnecting the cable:\n<ul>\n<li>setup another vm which will function as a gateway, this will also help you to log the traffic</li>\n<li>use network simulation software like iNetSim which can help in some cases when you need to fake the result returned by the CnC</li>\n<li>setup firewall and try not to use network shares or at least make them read only </li>\n</ul></li>\n<li><strong>VM setup</strong> - not installing vm tools is of cause a way to hide vm from the malware but it is really hard to work on such vm. The very least that you should do, is setup the VM in a more stealthy way. I've found a couple of links that may help with this, but there are many more other solutions:\n<ul>\n<li><a href=\"http://www.unibia.com/unibianet/systems-networking/bypassing-virtual-machine-detection-vmware-workstation\" rel=\"nofollow\">Bypassing Virtual Machine Detection on VMWare Workstation</a> - you can find here vmware configuration options for stealthier work and some other stuff.</li>\n<li><a href=\"http://www.simonganiere.ch/2012/11/20/malware-anti-vm-technics/\" rel=\"nofollow\">Malware anti-VM technics</a> - some explanations about what helps the malware to detect vm</li>\n<li>the next step is to develop different proprietary tools that can help you with research and more advanced anti-vm techniques.</li>\n<li>try to setup your environment is such a way, so that the host and the guest are different OSs - host is linux/unix/osx and the guest is windows. This will further minimize the risk of host infection.</li>\n</ul></li>\n<li><strong>physical machines</strong> - from practical point of view the use of physical machines is pretty annoying and consumes time and demands much accuracy especially when dealing with unknown malwares and I'm not event talking about the restore overhead after the machines were infected.</li>\n</ul>\n<p>Hope this will help :)</p>\n</div>",
            "votes": "5",
            "user": "PhoeniX",
            "time": "Jul 27, 2013 at 7:22",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>if youre using VMWare I suggest using a host only connection. Typically when you create a VM it will use NAT or bridged, sharing the host computers IP and/or network adapter. Using Host-Only lets the VM only be locally connected to that particular adapter with no internet connectivity(It's assigned its own local IP and uses its own Gateway)</p>\n<p>Typically when running malware live you want to go with this setup. Your other solutions are using sandboxing software such as cuckoo sandbox or sandboxie. They have the added ability to log what the malware is doing and keeping it sandboxed ( It <em>usually</em> doesnt touch system files or infects the system in any way)</p>\n</div>",
            "votes": "4",
            "user": "gandolf",
            "time": "Jul 22, 2013 at 3:09",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If the VM software has a bug a malware can also spread out of the VM and infect the host computer.</p>\n<p>There is also the possibility that the underlying processor (if you are using hardware virtualization) has a bug which lets the malware escape the VM.</p>\n<p>If you have a network connection it is possible that the malware can spread over the network. So to prevent this you have to choose a setup which may never have a network connection. Even disabling the network in the guest is not enough. The VM has to be setup so that no network connection is possible.</p>\n<p>To prevent the spreading of malware you have to disconnect your testing device (the host) from the network and set it up for every malware newly. Also be aware that malware may use the MBR or the BIOS to nest into your computer.</p>\n</div>",
            "votes": "4",
            "user": "Uwe Plonus",
            "time": "Jul 22, 2013 at 6:12",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Use the latest and greatest version of VMWare. Monitor your real system. :)\nWhy? well I've seen malware that 'breaks' out Vmware. How? Ring -1 exploitation. It's not something you'll commonly seen. But it <strong>can</strong> happen, will it with your sample <em>unlikely</em> but, it might.</p>\n<p>So, monitor your own system (ProcMon). Don't install VMware tools (easier detected by the sample and it might just be dormant). And try a number of VirtualSystems, Qemu, VirtualBox the works. </p>\n<p>Have fun :)</p>\n</div>",
            "votes": "3",
            "user": "Stolas",
            "time": "Jul 22, 2013 at 6:04",
            "is_accepted": false,
            "comments": []
        }
    ]
}