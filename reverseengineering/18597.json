{
    "title": "What does a C++ identifier ending in $_## mean?",
    "link": "https://reverseengineering.stackexchange.com/questions/18597/what-does-a-c-identifier-ending-in-mean",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>In trying to understand a .so from an Android game made with Cocos2d-x, I've come across identifiers like the following (after demangling):</p>\n<p><code>SceneActionMap::updateTalkMode(float)::$_37</code>\n<code>SceneActionMap::onTouchEndedTalk(cocos2d::Touch*, cocos2d::Event*)::$_38</code></p>\n<p>I'm still a little shaky on ELF &amp; the C++ ABI, but these names are found in <code>.rodata</code> and are referred to by some kind of structure in <code>.data.rel.ro</code> that seems RTTI related.</p>\n<p>What kind of entities are $_37 and $_38? Are these anonymous functions generated by the NDK, or are they some kind of metadata about other functions?</p>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "125",
    "tags": [
        "c++",
        "android",
        "elf",
        "shared-object"
    ],
    "user": "Squ",
    "time": "Jun 26, 2018 at 1:19",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>its a lambda function,\nas example stack trace in google <a href=\"https://github.com/Microsoft/vscode-cpptools/issues/2117\" rel=\"nofollow noreferrer\">https://github.com/Microsoft/vscode-cpptools/issues/2117</a></p>\n</div>",
            "votes": "3",
            "user": null,
            "time": "Jun 26, 2018 at 6:59",
            "is_accepted": true,
            "comments": []
        }
    ]
}