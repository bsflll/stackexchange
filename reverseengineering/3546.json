{
    "title": "Extracting dynamically constructed strings in IDA [duplicate]",
    "link": "https://reverseengineering.stackexchange.com/questions/3546/extracting-dynamically-constructed-strings-in-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>This question already has answers here</b>:\n                                \n                            </div>\n</div>\n</div>\n</div>\n<div class=\"flex--item mb0 mt4\">\n<a dir=\"ltr\" href=\"/questions/2977/how-can-i-clean-up-strings-built-at-runtime-stack-strings\">How can I clean up strings built at runtime (stack strings)?</a>\n<span class=\"question-originals-answer-count\">\n                                (3 answers)\n                            </span>\n</div>\n<div class=\"flex--item mb0 mt8\">Closed <span class=\"relativetime\" title=\"2014-01-26 10:40:08Z\">11 years ago</span>.</div>\n</div>\n</aside>\n</div>\n<p>Sometimes strings are dynamically constructed in programs due to compiler optimization or simply to hide the strings (e.g. in malware). For example :</p>\n<p><img alt=\"enter image description here\" src=\"https://i.sstatic.net/Xgo1Q.png\"/></p>\n<p>When displaying the bytes as chars we can see the string <code>'INVALID FILE SIZE'</code>.</p>\n<p><img alt=\"enter image description here\" src=\"https://i.sstatic.net/WC9w5.png\"/></p>\n<p>Does anyone know a script to extract those strings in IDA? I will write one if it does not exist but I figured I would ask first.</p>\n</div>",
    "votes": "7",
    "answers": 2,
    "views": "2k",
    "tags": [
        "ida"
    ],
    "user": "ekse",
    "time": "11 years ago",
    "comments": [
        {
            "user": "ekse",
            "text": "<span class=\"comment-copy\">Sorry for the duplicate question, my google skills failed me this time. Thanks for the answers, the script ASERT does exactly what I was looking for.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Select the block of code you would like to convert and then run the following IDAPython function. Comment out the call to MakeComm if you don't want a comment added.</p>\n<pre><code>def convert_to_char():\n    current = SelStart()\n    end = SelEnd()\n    tmp = ''\n    while current &lt; end:\n        OpChr(current,1)\n        try:\n            tmp += chr(GetOperandValue(current, 1))\n        except:\n            tmp += '_'\n        current = NextHead(current)\n    MakeComm(PrevHead(current), tmp)\n</code></pre>\n<p>Adding some logic to verify the operand might be useful if other instruction are also in the selected region. </p>\n</div>",
            "votes": "4",
            "user": "alexanderh",
            "time": "Jan 25, 2014 at 0:30",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><a href=\"http://www.arbornetworks.com/asert/2013/07/asert-mindshare-finding-byte-strings-using-idapython/\" rel=\"nofollow\">Finding Byte Strings Using IDAPython</a> </p>\n<p>This is exactly what you were looking for from Assert MindshaRE\nEffectively this script will go through instruction by instruction to find moves of ASCII characters into a memory location. It gets fancy and used QT to create an interactive table however you can gut out that part and just have it place a comment at the instruction that gets used.</p>\n</div>",
            "votes": "3",
            "user": "jbh",
            "time": "Jan 25, 2014 at 16:26",
            "is_accepted": false,
            "comments": []
        }
    ]
}