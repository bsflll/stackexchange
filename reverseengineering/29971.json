{
    "title": "What is the point to have 2 different places for structures: Local Types and Structures in IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/29971/what-is-the-point-to-have-2-different-places-for-structures-local-types-and-str",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Why is there 2 places for structures in IDA: Local Types and Structures?</p>\n<p>What are Local Types local to?</p>\n<p>Why do I have to synchronize a type in the Local Types window to the idb in order to edit it? Isn't it already in the database? It is certainly in the .idb database, isn't it?</p>\n<p>When I dump typeinfo to the .idc file(<code>File &gt; Produce File &gt; Dump typeinfo to IDC File...</code>) and then import it in the same or another database, why instead of importing defined Local Types to the Local Types window and defined structures in the Structures window to the Structures, it imports everything to both places?</p>\n</div>",
    "votes": "2",
    "answers": 2,
    "views": "1k",
    "tags": [
        "ida"
    ],
    "user": "KulaGGin",
    "time": "Feb 4, 2022 at 17:04",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Although this is not a complete answer to your question, for some background detail, I once asked Hex-Rays via support email why there were two type systems. I don't think I'm violating any sort of important confidentiality considerations by simply copying and pasting the response here; I apologize in advance to Hex-Rays if I misjudged that:</p>\n<blockquote>\n<p>We will try to combine these two type systems into one. However, it is not a simple task:</p>\n<ul>\n<li>C types can not express everything that asm level types can (e.g. member comments or representation)</li>\n<li>C types in general cannot be used to represent data items in the assembler listing</li>\n<li>It is impossible to refer to a member of a C type by its \"id\"</li>\n<li>asm types are used to represent stack frames; I doubt that C types can do this job nicely</li>\n</ul>\n<p>These are just a few things, there are probably many other obstacles on our way. However, the idea is to combine them, or at least hide the struct/enum types from the user and let him work only with local types.</p>\n</blockquote>\n</div>",
            "votes": "4",
            "user": "Rolf Rolles",
            "time": "Feb 3, 2022 at 1:02",
            "is_accepted": false,
            "comments": [
                {
                    "user": "KulaGGin",
                    "text": "<span class=\"comment-copy\">Thanks, that made it clearer. Still should've used a single type system. For example, the fact that it's impossible to refer to a member of a C type by its id is irrelevant: it's just a problem in their C-type system. There's nothing preventing them to make a single type system that supports both ways: and has the ability to refer to members of a type by id. You already can import C-type to the Structures and edit either of those 2, and the other one will update accordingly.</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@KulaGGin are you sure? I think that not all types (e.g. those available from debugging symbols seem to be included there) are automatically copied over to the Structures view. For some it takes more. I think that's reflected in the \"Sync\" column of the \"Local Types\" view.</span>",
                    "time": null
                },
                {
                    "user": "KulaGGin",
                    "text": "<span class=\"comment-copy\">@0xC0000022L they're not automatically copied. But once you copy from Local Types to Structures, you can edit them either in Local Types or Structures and the other syncs.</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@KulaGGin Got it, I probably misunderstood your meaning.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>Why is there 2 places for structures in IDA: Local Types and Structures?</p>\n</blockquote>\n<p>I randomly stumbled upon an answer in the product's help documentation:\n<a href=\"https://www.hex-rays.com/products/ida/support/idadoc/1042.shtml\" rel=\"nofollow noreferrer\">https://www.hex-rays.com/products/ida/support/idadoc/1042.shtml</a></p>\n<p>Apparently, it's assembly-level and C-level types.</p>\n<blockquote>\n<p>What are Local Types local to?</p>\n</blockquote>\n<p>The local types are types local to the current(local) type info library, which is the main and only type info library for the database, as I understand.</p>\n<blockquote>\n<p>Why do I have to synchronize a type in the Local Types window to the idb in order to edit it?</p>\n</blockquote>\n<p>Well, apparently, I don't have to, and I can edit Local Types if I press right mouse button on the type and choose <code>Edit...</code> option.</p>\n<blockquote>\n<p>Isn't it already in the database? It is certainly in the .idb database, isn't it?</p>\n</blockquote>\n<p>It is.</p>\n<blockquote>\n<p>When I dump typeinfo to the .idc file(<code>File &gt; Produce File &gt; Dump typeinfo to IDC File...</code>) and then import it in the same or another database, why instead of importing defined Local Types to the Local Types window and defined structures in the Structures window to the Structures, it imports everything to both places?</p>\n</blockquote>\n<p>Because it's doing it wrong: it takes Structures and Local Types and creates an .idc script that imports all types as assembly-level structures, instead of doing it properly: port assembly-level structures(Structures) as assembly-level structures and port C-level structures(Local Types) as C-level strutrures.</p>\n</div>",
            "votes": "2",
            "user": "KulaGGin",
            "time": "Feb 4, 2022 at 17:09",
            "is_accepted": true,
            "comments": []
        }
    ]
}