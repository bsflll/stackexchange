{
    "title": "Can we make Ghidra extensions using Kotlin, or at least with something other than Eclipse?",
    "link": "https://reverseengineering.stackexchange.com/questions/33136/can-we-make-ghidra-extensions-using-kotlin-or-at-least-with-something-other-tha",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>About four years ago I played with making some Ghidra extensions. At that time you had to use the Eclipse IDE and write your extension in Java.</p>\n<p>I'd much prefer to use VS Code or, failing that, at least IntelliJ IDEA CE.</p>\n<p>In 2024 are there other ways to make Ghidra addons besides Java + Eclipse?</p>\n<p>I'm using an M1 Mac if that makes a difference.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "62",
    "tags": [
        "ghidra",
        "development",
        "plugin"
    ],
    "user": "hippietrail",
    "time": "Jul 31, 2024 at 7:22",
    "comments": [
        {
            "user": "Robert",
            "text": "<span class=\"comment-copy\">GhidraDev seems to be an Eclipse plugin thus if you don't want to create a plugin from scratch you have to use it at least to create the extension project structure. Afterwards you may be able to migrate the project to a different IDE.</span>",
            "time": null
        },
        {
            "user": "hippietrail",
            "text": "<span class=\"comment-copy\"><a href=\"https://appsec.at/blog/2023/07/31/ghidra-extension-development/\" rel=\"nofollow noreferrer\">I found a blog post from a year ago on a closely related topic.</a></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><a href=\"https://github.com/fmagin/ghidra-kotlin-extension-template\" rel=\"nofollow noreferrer\">This project</a> offers a template for creating a Ghidra extension with Kotlin and IntelliJ, which seems to be what you are looking for.</p>\n<p>More generally, you should be able to create an extension using any language you wish as long as it ultimately compiles to Java bytecode. If you build/download an extension and unzip it you'll see that they are primarily composed of JAR files that are loaded by Ghidra, so any system that can compile to JAR files should work as long as you inherit from the appropriate plugin classes and meet whatever other criteria traditional Java plugins for Ghidra do. Both Clojure and Groovy should be possible, for example, if you spent the time to get classpaths, build settings, and probably other things working.</p>\n</div>",
            "votes": "3",
            "user": "goatshriek",
            "time": "Aug 2, 2024 at 16:44",
            "is_accepted": false,
            "comments": []
        }
    ]
}