{
    "title": "Limitations of capstone's disassembly capabilities compared to IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/11339/limitations-of-capstones-disassembly-capabilities-compared-to-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I was wondering if there are any limitations of capstone's disassembling capabilities when compared to IDA.</p>\n<p>If yes, are those limitations inherent, i.e. a result of the different design/techniques that capstone and ida use? Or are they rather due to \"not yet implemented\" features, e.g. capstone's fewer supported CPUs?</p>\n<p>If there are inherent limitations, could you give an example?</p>\n<p>I am talking about the disassembling only, i.e., I am not interested in things like available APIs, commercial support, license models, plug-in systems, debugging support etc. Just the pure disassembly.</p>\n<p>Capstone is mentioned as one answer to the post <a href=\"https://reverseengineering.stackexchange.com/questions/1817/is-there-any-disassembler-to-rival-ida-pro\">\"Is there any disassembler to rival IDA Pro?\"</a>, but it seems to be a copied/pasted text from the capstone website.</p>\n<p>PS: The working of IDA is explained/discussed <a href=\"https://reverseengineering.stackexchange.com/questions/2347/what-is-the-algorithm-used-in-recursive-traversal-disassembly\">here</a>.</p>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "disassembly",
        "disassemblers",
        "capstone"
    ],
    "user": "langlauf.io",
    "time": "Apr 13, 2017 at 12:49",
    "comments": [
        {
            "user": "0xec",
            "text": "<span class=\"comment-copy\">There is no point in comparing between the two. IDA is more than a disassembler.</span>",
            "time": null
        },
        {
            "user": "langlauf.io",
            "text": "<span class=\"comment-copy\">I would like to compare the disassembly capabilities, not the two tools. I tried to clarify this in my question.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>There is no point in comparing between the two. IDA is more than a disassembler, it is a reversing tool which implements(or could be implemented via plugins) almost every feature you can think of. </p>\n<p>Capstone on the other hand, is a simple disassembler engine. It by alone cannot generate the same quality of output as IDA.</p>\n<p>For instance, IDA has cross-referencing capability. Cross-refs are generated by a dedicated analysis engine which uses input from the disassembly engine. A disassembly engine, <em>by its own</em> can neither find cross-refs, nor can it recursively disassemble like IDA.</p>\n<p>You are comparing a disassembly framework to a tool with a myriad of features. They are not comparable with each other.</p>\n<p>If you are talking about just the textual disassembler output, then there is not much of a difference per se.</p>\n</div>",
            "votes": "4",
            "user": "0xec",
            "time": "Nov 17, 2015 at 9:24",
            "is_accepted": true,
            "comments": [
                {
                    "user": "langlauf.io",
                    "text": "<span class=\"comment-copy\">I see. I mixed up cross-referencing (and probably more stuff  such as stack frame reconstruction etc.) with disassembly capabilities. But nevertheless this is a valuable insight for me that capstone alone is not able to generate the same \"quality output\" which I understand as disassembled instructions + refs + stack frame info + ....</span>",
                    "time": null
                }
            ]
        }
    ]
}