{
    "title": "Python self decryption script, as mean of obfuscation",
    "link": "https://reverseengineering.stackexchange.com/questions/22972/python-self-decryption-script-as-mean-of-obfuscation",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a software with an embedded python interpreter. The software can open upon startup a given <code>.py</code> script and execute it. Let's assume that in my python environment I can't open other files, and I can't use external tools like <code>Cython</code> </p>\n<p>I want to obfuscate the script. My only demand is that the <code>payload</code> part of the file (my custom business logic) could not be opened in a text editor and plain-text read. </p>\n<p>I could imagine the flow of the script will be de-obfuscation/decryption of a payload, that resides within the <code>.py</code> file as the first step and then executing it. </p>\n<p>I can store within the script any encryption key, and I don't care that the decryption part will be visible and that it can be easily reproduced.</p>\n<p>Any ideas how can I make that happen?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "412",
    "tags": [
        "encryption",
        "python",
        "obfuscation"
    ],
    "user": "macro_controller",
    "time": "Jan 12, 2020 at 13:13",
    "comments": [
        {
            "user": "Kennet Celeste",
            "text": "<span class=\"comment-copy\">so basically you are writing a malware and you want people to help you.</span>",
            "time": null
        },
        {
            "user": "macro_controller",
            "text": "<span class=\"comment-copy\">If I wanted to write a malware, I wouldn't write it in python, and I would really care about the chance of it to be decrypted.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I did something similar on the past, here is the idea you need to carry:</p>\n<ol>\n<li><p>You create the python script that you want to execute and obfuscate:</p>\n<pre><code>print('Some string')\n</code></pre></li>\n<li><p>Another script opens the previous script, encrypts the content and <code>base64</code> the encryption, and finally put in a variable like:</p>\n<pre><code>text = \"cHJpbnQoJ1NvbWUgc3RyaW5nJyk=\"\n</code></pre></li>\n<li><p>On another python file, you stick the text variable and a routine for decryption and decode the base64.</p></li>\n<li><p>Use the method <code>eval()</code> for execute the previous decrypted and decoded string.</p></li>\n</ol>\n<p>This is not perfect but at least you have something to play with and explore. </p>\n</div>",
            "votes": "1",
            "user": "perror",
            "time": "Jan 13, 2020 at 17:02",
            "is_accepted": true,
            "comments": []
        }
    ]
}