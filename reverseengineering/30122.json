{
    "title": "Is there a way to install Python 3 modules into IDAPython with pip?",
    "link": "https://reverseengineering.stackexchange.com/questions/30122/is-there-a-way-to-install-python-3-modules-into-idapython-with-pip",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I would like to use regular python packages in my IDAPython scripts, but I can't figure out how to install them into IDA's Python environment. I don't even know where this python environment is, or even where IDA's python.exe is, because <code>sys.executable</code> just prints the <code>ida.exe</code> file path. I can make it work with <em>some</em> packages, like yara and FIDL by installing them with pip, and copying the module's folder from my own python environment's <code>site-packages</code> folder over to <code>&lt;IDA Install Path&gt;\\python\\3\\</code>, but this method doesn't work with more complex modules that have dependencies to other modules, or native DLLs (for example pywin32).</p>\n<p>Is there an easier way to install python packages into IDA so i can just simply import them into my IDAPython scripts?</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "5k",
    "tags": [
        "ida",
        "idapython",
        "python"
    ],
    "user": "L치z치r Zsolt",
    "time": "Mar 7, 2022 at 17:00",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Found the solution. Basically, IDAPython doesn't use my default system Python installation (in <code>C:\\Python10</code>), instead it uses the one in <code>%localappdata%\\Programs\\Python\\Python310\\</code>. So all I had to do was to make sure that I'm calling <code>pip</code> in this python installation directory and not the default one, and now I can import pip packages into IDA.</p>\n</div>",
            "votes": "3",
            "user": "L치z치r Zsolt",
            "time": "Mar 7, 2022 at 17:25",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\"><i>Actually</i> IDAPython uses whatever you tell it to. Inside <code>HKEY_CURRENT_USER\\Software\\Hex-Rays\\IDA</code> find (or create) an <code>REG_SZ</code> value named <code>Python3TargetDLL</code> and point it at whichever Python version you please, e.g. <code>C:\\Program Files\\Python310\\python3.dll</code>. Normally you can use whichever <code>pythonXX.dll</code> you like, but I have issues with <code>python310.dll</code> vs. <code>python3.dll</code> in Wine. On Windows you can use <code>py</code> (Python launcher) to launch the default Python instance or select an alternative one. Don't recall where Python stores which is the default, but the installers offer the option.</span>",
                    "time": null
                }
            ]
        }
    ]
}