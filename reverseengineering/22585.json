{
    "title": "What in this modified PE file causes MsMpEng.exe to consume 4 seconds of CPU?",
    "link": "https://reverseengineering.stackexchange.com/questions/22585/what-in-this-modified-pe-file-causes-msmpeng-exe-to-consume-4-seconds-of-cpu",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The relevant files for this question are here:</p>\n<p><a href=\"https://cubiclesoft.com/Unrelated/32_pe_msmpeng_test.zip\" rel=\"nofollow noreferrer\">https://cubiclesoft.com/Unrelated/32_pe_msmpeng_test.zip</a></p>\n<p>Contains a before and after DLL.  This simple PHP script demonstrates the problem:</p>\n<pre><code>&lt;?php\n    $ts = microtime(true);\n    file_put_contents(\"test.dll\", file_get_contents(\"32_pe_msmpeng_before.dll\"));\n    echo \"Time taken:  \" . sprintf(\"%.02f\", microtime(true) - $ts) . \" sec\\n\";\n    unlink(\"test.dll\");\n\n    $ts = microtime(true);\n    file_put_contents(\"test.dll\", file_get_contents(\"32_pe_msmpeng_after.dll\"));\n    echo \"Time taken:  \" . sprintf(\"%.02f\", microtime(true) - $ts) . \" sec\\n\";\n    unlink(\"test.dll\");\n?&gt;\n</code></pre>\n<p>The output looks like:</p>\n<pre><code>&gt;php test.php\nTime taken:  0.00 sec\nTime taken:  4.14 sec\n</code></pre>\n<p>The only difference between the two DLLs is that the certificate table has been removed and the PE checksum has been updated in the \"after\" DLL.  The 4 second delay is caused by MsMpEng.exe using 100% of one core of a CPU during that time.  MsMpEng.exe is the main Windows Defender realtime scanning engine.  The files are not flagged as malware but the behavior is bizarre in that simply removing the certificate table would trigger a deep scan.</p>\n<p>The original file was modified using my <a href=\"https://github.com/cubiclesoft/php-winpefile\" rel=\"nofollow noreferrer\">Windows PE File Tools for PHP</a> and these commands:</p>\n<pre><code>php pe_tools.php modify clear-certs 32_pe_msmpeng_before.dll 32_pe_msmpeng_after.dll\n\nphp pe_tools.php modify apply-checksum 32_pe_msmpeng_after.dll 32_pe_msmpeng_after.dll\n</code></pre>\n<p>I've checked the \"after\" file in every conceivable way I can think of and it appears to be completely valid to all of the tools I've used.  I've also modified plenty of other PE files without tripping up the realtime scanner.  Just this file causes the time delay and spike in CPU usage and that only happens after the certificate table is removed.  I can make all kinds of other crazy changes to the file that should immediately result in an invalid certificate table (e.g. adding a new PE section, embedding icons, etc) and it won't trip up the realtime scanner either.  But remove the certificate table entirely and that 4 second delay + 100% CPU in MsMpEng.exe appears.  This behavior seems to imply that just <em>having</em> a certificate table possibly bypasses portions or even, um, all of Windows Defender...</p>\n<p>But that's not really the question.  What I'd like to know is what exactly is in the \"after\" DLL that is causing MsMpEng.exe to conduct a deep scan that takes upwards of 4 seconds to complete?</p>\n</div>",
    "votes": "3",
    "answers": 0,
    "views": "173",
    "tags": [
        "pe"
    ],
    "user": "CubicleSoft",
    "time": "Nov 20, 2019 at 15:10",
    "comments": [
        {
            "user": "Remko",
            "text": "<span class=\"comment-copy\">Might be certificate revocation list check that times out (do you have internet access?). Windows Defender is single threaded btw</span>",
            "time": null
        },
        {
            "user": "CubicleSoft",
            "text": "<span class=\"comment-copy\">If there isn't a Certificate Table, there isn't a CRL to check against because there's no certificate.  The 4 second delay happens when there is no Certificate Table not when there is one.  But to answer the question, yes, I have Internet access.</span>",
            "time": null
        },
        {
            "user": "Remko",
            "text": "<span class=\"comment-copy\">As I understood it: with the certificate table it's slow and without it's not? Or did you mean to say it's the other way round?</span>",
            "time": null
        },
        {
            "user": "Avery3R",
            "text": "<span class=\"comment-copy\">Try pausing the windows defender process with a debugger while it's doing the 4 second thing then look at the call stacks in the various threads?</span>",
            "time": null
        }
    ],
    "answers_data": []
}