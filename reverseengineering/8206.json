{
    "title": "Stack frame boundary",
    "link": "https://reverseengineering.stackexchange.com/questions/8206/stack-frame-boundary",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I've disassembled some C/C++ codes and realized the stack boundary is specified at beginning of a procedure, somehow like this :</p>\n<pre><code>1. push ebp\n2. mov ebp , esp\n3. sub esp , &lt;power&gt; ; &lt;power&gt; is specified by mpreferred-stack-boundary=2^power\n</code></pre>\n<p>The above code is used to create stack frames, But What I need to know is why this subtract is used, Cause the stack grows down (by using push for local variables) and such the subtract causes :</p>\n<pre><code>---------------------------- ^\nby sub esp,&lt;power&gt; &lt;---- esp |\n.                            |\n.                            |\n.                            |\n---------------------------- |\nesp &lt;---- esp                |\n---------------------------- |\nret address                  |\n---------------------------- |\n</code></pre>\n<p>The above picture shows that.So when in the rest of code if you have such the following codes:</p>\n<pre><code>push var1\n</code></pre>\n<p>It should be taken at the top of it so it looks like this :</p>\n<pre><code>-----------------------------\nvar1 (4 byte)                \n-----------------------------^\nby sub esp,&lt;power&gt; &lt;---- esp |\n.                            |\n.                            |\n.                            |\n---------------------------- |\nesp &lt;---- esp                |\n---------------------------- |\nret address                  |\n---------------------------- |\n</code></pre>\n<p>So the space between esp and var1 is going to be free without any use ?\nthat's what I want to know.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "618",
    "tags": [
        "memory",
        "stack-variables"
    ],
    "user": "user3679015",
    "time": "Feb 11, 2015 at 19:22",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<blockquote>\n<p>So the space between esp and var1 is going to be free without any use\n  ? that's what I want to know.</p>\n</blockquote>\n<p>That stack space is used for the function's local variables (also known as \"stack variables\").</p>\n<p>Here's a nice animated GIF that shows a function's stack frame being created and used to store local variables:</p>\n<p><img alt=\"GIF\" src=\"https://i.sstatic.net/pvEF3.gif\"/></p>\n</div>",
            "votes": "3",
            "user": "Jason Geffner",
            "time": "Feb 11, 2015 at 19:48",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user3679015",
                    "text": "<span class=\"comment-copy\">So thanks.I've completely forgotten that variables are put in stacks by something like this(for instance): mov [ebp-4] , var1</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">Also arguments for called functions are pushed onto the stack.</span>",
                    "time": null
                }
            ]
        }
    ]
}