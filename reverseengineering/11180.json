{
    "title": "Patching MIPS binary file on IDA fails at build",
    "link": "https://reverseengineering.stackexchange.com/questions/11180/patching-mips-binary-file-on-ida-fails-at-build",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm working on reverse a binary from a MIPS based router. In order to do it I'm emulating the binary with qemu, but the binary executes some routines before stating with the logic that skips the execution if it's not loaded on the router.</p>\n<p>I confirmed that if I skip the execution of those routines by editing some bytes I can run the binary locally and dynamically debug it. For now I'm doing it manually but I want to patch it so I can run it faster.</p>\n<p>My problem comes once I change some bytes and try to export it in IDA I tried the idc script to write the changes, also ida_patcher with a DIF file and the built in function to export the changes (Edit&gt;Patch Program...) but the changes are not applied to the binary and I can't generate a new one.</p>\n<p>I was thinking in edit the binary with an hex editor but I was wondering if I can do it with IDA.</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "389",
    "tags": [
        "ida",
        "firmware",
        "mips",
        "patching"
    ],
    "user": "Nucklear",
    "time": "Oct 27, 2015 at 7:53",
    "comments": [
        {
            "user": "tmr232",
            "text": "<span class=\"comment-copy\">Are you able to perform the changes inside IDA, and only the export is missing?</span>",
            "time": null
        },
        {
            "user": "Nucklear",
            "text": "<span class=\"comment-copy\">Yes, I use the patch option or the hex editor and the problem is while exporting. It shows a message on console that no patches were applied</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can always try and do away with IDAPython:</p>\n<pre><code>import idaapi\nimport idc\n\nPATH_TO_COPY_OF_ORIGINAL_FILE = 'some-path'\n\ndef apply_patches_to_file(target_file):\n    def patch_visitor(ea, fpos, org_val, patch_val):\n        target_file.seek(fpos)\n        target_file.write(chr(patch_val))\n\n    idaapi.visit_patched_bytes(idc.MinEA(), idc.MaxEA(), patch_visitor)\n\nwith open(PATH_TO_COPY_OF_ORIGINAL_FILE, 'r+') as f:\n    apply_patches_to_file(f)\n</code></pre>\n<p>Just create a copy of your original file, set the <code>PATH_TO_COPY_OF_ORIGINAL_FILE</code>, and give the script a go. It iterates all patches made to the IDB and try to apply them to the file.</p>\n<p>That said, not knowing the cause of your issues - this script may fail as well.</p>\n</div>",
            "votes": "1",
            "user": "tmr232",
            "time": "Oct 29, 2015 at 6:53",
            "is_accepted": true,
            "comments": []
        }
    ]
}