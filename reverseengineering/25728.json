{
    "title": "Trying to reverse engineer CmpFindNlsData of winload",
    "link": "https://reverseengineering.stackexchange.com/questions/25728/trying-to-reverse-engineer-cmpfindnlsdata-of-winload",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a basic understanding of assembly language and I'm unable to perfectly define the algorithm of winload!CmpFindNlsData looking at the disassembly. Basically I need to understand how NLS data is loaded when Windows boots up. I have been able to figure out the algorithm to this point.</p>\n<pre><code>CmpFindNlsData\n{\nHvpGetCellPaged();\npush offset winload!CmpControlString\nCmpFindSubkeyByNameWithStatus();\nHvpReleaseCellPaged();\n\nHvpGetCellPaged();\noffset winload!CmpNlsString\nCmpFindSubkeyByNameWithStatus();\nHvpReleaseCellPaged();\n\nHvpGetCellPaged();\noffset winload!CmpCodePageString\nCmpFindSubkeyByNameWithStatus();\nHvpReleaseCellPaged();\n\nHvpGetCellPaged();\noffset winload!CmpAcpString\nCmpFindValueByName();\nHvpReleaseCellPaged();\n\nHvpGetCellPaged();\noffset winload!CmpOemCpString\nCmpFindValueByName();\nHvpReleaseCellPaged();\n\nHvpGetCellPaged();\nCmpValueToData();\nHvpReleaseCellPaged();\n\nHvpGetCellPaged();\nCmpFindValueByName();\nHvpReleaseCellPaged();\n\nHvpGetCellPaged();\nCmpValueToData();\nHvpReleaseCellPaged();\n\nHvpGetCellPaged();\nCmpFindValueByName();\nHvpReleaseCellPaged();\n\nHvpGetCellPaged();\nCmpValueToData();\nHvpReleaseCellPaged();\n\nHvpGetCellPaged();\nCmpFindValueByName();\nHvpReleaseCellPaged();\n\nHvpGetCellPaged();\nCmpValueToData();\nHvpReleaseCellPaged();\n}\n</code></pre>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "159",
    "tags": [
        "disassembly",
        "windows",
        "assembly",
        "windbg"
    ],
    "user": "Bhavya Singh",
    "time": "Aug 23, 2020 at 18:30",
    "comments": [
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">as is the question is vague winload.exe might have changed tremendously from say win7 to win10  you may need to be more specific and what did you use to dump what you dumped  in the query  it doesnt look like either  written code or decompiled pseudocode</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>As i Commented the query is vague\nanyway just took a look and it doesn't seem to be overly complicated</p>\n<p>all this function seem to do is retrieve a few key values from registry</p>\n<p>basically it runs a loop like</p>\n<p>while (string) {\nCreate An Unicode string\nopen regkey-&gt;onfail return false\nget regvalue-&gt;onfail return false\ngot to next string\n}\nreturn true</p>\n<p>these are the strings it accesses in win7 x86</p>\n<pre><code>C:\\&gt;cdb -c \"uf winload!CmpFindNlsData;q\" -z c:\\Windows\\System32\\winload.exe | grep -B 2 RtlInitUnicode\n0046511c b8405c4600      mov     eax,offset winload! ?? ::PBOPGDP::`string' (00465c40)\n00465121 8d4df0          lea     ecx,[ebp-10h]\n00465124 e88d28fcff      call    winload!RtlInitUnicodeString (004279b6)\n--\n00465144 b8b05c4600      mov     eax,offset winload! ?? ::PBOPGDP::`string' (00465cb0)\n00465149 8d4df0          lea     ecx,[ebp-10h]\n0046514c e86528fcff      call    winload!RtlInitUnicodeString (004279b6)\n--\n0046516f b8c05c4600      mov     eax,offset winload! ?? ::PBOPGDP::`string' (00465cc0)\n00465174 8d4df0          lea     ecx,[ebp-10h]\n00465177 e83a28fcff      call    winload!RtlInitUnicodeString (004279b6)\n--\n0046519e b8e05c4600      mov     eax,offset winload! ?? ::PBOPGDP::`string' (00465ce0)\n004651a3 8d4df0          lea     ecx,[ebp-10h]\n004651a6 e80b28fcff      call    winload!RtlInitUnicodeString (004279b6)\n--\n0046526a b8f05c4600      mov     eax,offset winload! ?? ::PBOPGDP::`string' (00465cf0)\n0046526f 8d4df0          lea     ecx,[ebp-10h]\n00465272 e83f27fcff      call    winload!RtlInitUnicodeString (004279b6)\n--\n00465339 b8005d4600      mov     eax,offset winload! ?? ::PBOPGDP::`string' (00465d00)\n0046533e 8d4df0          lea     ecx,[ebp-10h]\n00465341 e87026fcff      call    winload!RtlInitUnicodeString (004279b6)\n--\n0046536b b8205d4600      mov     eax,offset winload! ?? ::PBOPGDP::`string' (00465d20)\n00465370 8d4df0          lea     ecx,[ebp-10h]\n00465373 e83e26fcff      call    winload!RtlInitUnicodeString (004279b6)\n--\n00465438 b8305d4600      mov     eax,offset winload! ?? ::PBOPGDP::`string' (00465d30)\n0046543d 8d4df0          lea     ecx,[ebp-10h]\n00465440 e87125fcff      call    winload!RtlInitUnicodeString (004279b6)\n\nC:\\&gt;cdb -c \"uf winload!CmpFindNlsData;q\" -z c:\\Windows\\System32\\winload.exe | grep -B 2 RtlInitUnicode | grep PBO\n0046511c b8405c4600      mov     eax,offset winload! ?? ::PBOPGDP::`string' (00465c40)\n00465144 b8b05c4600      mov     eax,offset winload! ?? ::PBOPGDP::`string' (00465cb0)\n0046516f b8c05c4600      mov     eax,offset winload! ?? ::PBOPGDP::`string' (00465cc0)\n0046519e b8e05c4600      mov     eax,offset winload! ?? ::PBOPGDP::`string' (00465ce0)\n0046526a b8f05c4600      mov     eax,offset winload! ?? ::PBOPGDP::`string' (00465cf0)\n00465339 b8005d4600      mov     eax,offset winload! ?? ::PBOPGDP::`string' (00465d00)\n0046536b b8205d4600      mov     eax,offset winload! ?? ::PBOPGDP::`string' (00465d20)\n00465438 b8305d4600      mov     eax,offset winload! ?? ::PBOPGDP::`string' (00465d30)\n\n\nC:\\&gt;cdb -c \"du 465c40;du 465cb0;du 465cc0;du 465ce0;du 465cf0;du 465d00;du 465d20;du 465d30;q\" -z c:\\Windows\\System32\\winload.exe | awk \"/Reading/,/quit/\"\n0:000&gt; cdb: Reading initial command 'du 465c40;du 465cb0;du 465cc0;du 465ce0;du 465cf0;du 465d00;du 465d20;du 465d30;q'\n00465c40  \"Control\"\n00465cb0  \"NLS\"\n00465cc0  \"CodePage\"\n00465ce0  \"ACP\"\n00465cf0  \"OEMCP\"\n00465d00  \"Language\"\n00465d20  \"Default\"\n00465d30  \"OEMHAL\"\nquit:\n</code></pre>\n<p>and these keys exist in hklm\\system\\currentcontrolset</p>\n<pre><code>C:\\&gt;reg query hklm\\system\\currentcontrolset\\control\\nls\\codepage /v *cp*\n\nHKEY_LOCAL_MACHINE\\system\\currentcontrolset\\control\\nls\\codepage\n    ACP    REG_SZ    1252\n    OEMCP    REG_SZ    437\n    MACCP    REG_SZ    10000\n\nEnd of search: 3 match(es) found.\n</code></pre>\n<p>after finding these it returns the c_1252.nls, etc filenames in the respective out parameters</p>\n</div>",
            "votes": "1",
            "user": "blabb",
            "time": "Aug 24, 2020 at 20:06",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Bhavya Singh",
                    "text": "<span class=\"comment-copy\">Apologies for missing to mention the windows version, I was actually investigating version 1803 onwards. But, thank you very much for the analysis. I'm a beginner and this is a really valuable source for me to learn from.</span>",
                    "time": null
                },
                {
                    "user": "Bhavya Singh",
                    "text": "<span class=\"comment-copy\">Do you mind outlining the steps broadly, that led you to figure out this</span>",
                    "time": null
                },
                {
                    "user": "Bhavya Singh",
                    "text": "<span class=\"comment-copy\">How did you dump winload.exe?</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">all the commands are already there in the answer  i have not dumped anything it is a function i just disassembled it using cdb (windbg console )  and grepped for some patterns</span>",
                    "time": null
                }
            ]
        }
    ]
}