{
    "title": "Identifying the type of a DB file",
    "link": "https://reverseengineering.stackexchange.com/questions/4083/identifying-the-type-of-a-db-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have an application which I'm sure is malicious. But I'm also sure that\nit's db files are genuine. </p>\n<p>The problem is that I don't want to dig in and debug the disassembly of it. but I want\nto somehow read from these files. </p>\n<p>I know there's a field of reversing of files on it's own, but I haven't gotten much to it.</p>\n<p>And I wanted to know if there's a way to find out how to read the files, other than digging\nthrough the disassembled code </p>\n<p>Thank you</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "246",
    "tags": [
        "file-format"
    ],
    "user": "aclowkay",
    "time": "Apr 16, 2014 at 10:21",
    "comments": [
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">Use linux file utility, it will possibly suggest the type of the file.</span>",
            "time": null
        },
        {
            "user": "aclowkay",
            "text": "<span class=\"comment-copy\">Well, it told me that it's a data. in the MAN page of \"file\" it said that data could mean anything other than text and executable. Kind of useless information</span>",
            "time": null
        },
        {
            "user": "nrz",
            "text": "<span class=\"comment-copy\">Have you checked the file header with a hex editor? The file format may have some magic number or identifier string.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Not enough information.</p>\n<p>It may be a <em>common</em> file type, shared by many applications, and in that case Googling the file extension is sometimes enough. Unfortunately, \".db\" is an extremely generic extension (compare, for example, \".txt\" versus \".wp5\"). In this particular case, you inspect the file with a hex viewer and try to find documentation based on the very first couple of bytes.</p>\n<p>If the data format is known, chances are someone already wrote a converter for it. But before you can try one of these, you must know beyond a shadow of a doubt what kind of file it is; \"oh right, then it's a .db file\" is not enough.</p>\n<p>If it's a <em>private</em> format (or it's so old/new/quaint/rare that you can't find anything useful on the 'net), you will have to write something yourself to (1) read out useful structures, and (2) write out its data in a format useful to <em>you</em>. Recognizing what parts are useful and what's not is something only you can do, as (apparently) you have an inkling of what it should contain.</p>\n</div>",
            "votes": "2",
            "user": "Jongware",
            "time": "Apr 16, 2014 at 22:01",
            "is_accepted": false,
            "comments": [
                {
                    "user": "aclowkay",
                    "text": "<span class=\"comment-copy\">I found that there was a plaintext file. and that the DB types were some sort of an index..which is irrelevant for me. the plaintext did the job :) thank you</span>",
                    "time": null
                }
            ]
        }
    ]
}