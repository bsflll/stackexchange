{
    "title": "\"Proper\" way to recreate undocumented structs / classes given memory layout in C++?",
    "link": "https://reverseengineering.stackexchange.com/questions/15600/proper-way-to-recreate-undocumented-structs-classes-given-memory-layout-in-c",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Firstly I acknowledge that this is very borderline opinionated, but I'd like to emphasize this is more a thing of possibilities given some shortcomings of the default just writing down the offsets of things.</p>\n<p>I do a lot of reverse engineering and then I write C/C++ code to mess with what I've learned. Suppose there is a class like this, representing a monster:</p>\n<pre><code>OFFSET  SIZE    VALUE\n0       8       Pointer to methods\n1280    4       X coordinate\n1284    4       Y coordinate\n128C    4       Z coordinate\n1400    4       Health\n</code></pre>\n<p>where, for example, <code>*(float*)((uint8_t*)obj + 0x1280)</code> would give the X coordinate. The rest of the class is unknown, and the only known method is <code>*(uint32_t*)((uint8_t*)*(uint32_t*)obj + 0xC)</code>, which just sets the health.</p>\n<p>These kinds of classes can be updated very frequently, making it incredibly annoying to just have recorded the offsets of different things. I have seen it suggested to create a padded class with just <code>uint8_t[next off - start]</code>, but even that just feels really awkward.</p>\n<p>Right now the best thing I can think of to do would be to create a bunch of different bytescans (excluding the offsets) for different methods of the object that access its members and automatically determine the offsets, but still.</p>\n<p>My problem is that although I don't actually mind the updating itself, my code looks <em>terrible</em>. I effectively treat these objects as just integers floating around and have a bunch of scattered functions that operate on them like objects, but really they aren't.</p>\n<p>Is there a \"proper\" way to define an object with \"suggested\" offsets, with or without llibraries, and regardless, what would be a decent way to have clean code working with undocumented and mostly unknown objects like these?</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "520",
    "tags": [
        "x86",
        "c++"
    ],
    "user": "Lupe",
    "time": "Jun 19, 2017 at 21:37",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You could create a struct of pointers and initialise them at run time.  In some cases it might also be possible to alias to arrays.</p>\n<p>If using a padded struct, be careful of compiler alignment of the fields.</p>\n</div>",
            "votes": "1",
            "user": "Christopher Horler",
            "time": "Jun 25, 2017 at 9:26",
            "is_accepted": false,
            "comments": []
        }
    ]
}