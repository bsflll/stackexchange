{
    "title": "Strange Message after manipulating an exe file",
    "link": "https://reverseengineering.stackexchange.com/questions/20192/strange-message-after-manipulating-an-exe-file",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>i debugged und reversed an exe file with x64dbg\nI simply changed an assembly command (je) into nop , patched the file and saved it under a different name. (only one line was changed)\nWhen i tried to start this patched exe-file, i got the message:\n\"File corrupted! This program has been manipulated and maybe it's infected by a virus or cracked. This file wont work anymore\".\nIt seems that the original exe file protects itself against changing.\nDoes anyone know, how that works and how to bypass it?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "1k",
    "tags": [
        "disassembly"
    ],
    "user": "general failure",
    "time": "Dec 25, 2018 at 9:56",
    "comments": [
        {
            "user": "ismael_akez",
            "text": "<span class=\"comment-copy\">Why do you need to change an specific byte (JE) without knowing what could happen in both ways? The application might have a CRC Checking to determine if it is modified.</span>",
            "time": null
        },
        {
            "user": "Biswapriyo",
            "text": "<span class=\"comment-copy\">Try to change <code>JE</code> to <code>JNE</code> or vice-versa. And don't change any other bytes.</span>",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "<span class=\"comment-copy\">Something the linkers since VS2008 or 2010 provide is the <a href=\"https://docs.microsoft.com/en-us/cpp/build/reference/integritycheck-require-signature-check\" rel=\"nofollow noreferrer\"><code>/integritycheck</code> switch</a> which turns on a flag in the PE header. In such a case the loader will check the signature and complain if the signed file was tampered with. However, since you give barely any relevant information it's hard to tell whether this is the case here.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Sound's like the program checks for validity.<br/>\nI can think of two ways to solve it (pretty much the same way with a twist):<br/>\n1. find where it calculates the checksum and verify it, you can patch it to always look valid<br/>\n2. find where it calculates the checksum, breakpoint right after the checksum is calculated and place the calculated checksum in the file instead of the original checksum.</p>\n<p>You can patch the binary at run-time, if it doesn't pop a message, it only check the checksum once (as opposed to checking it repeatedly in a different thread).   If it does pop a message, you can find the function pointers passed to <code>CraeteThread</code>, once of the pointers should take you to the functions that verifies the checksum.<br/>\nIf the message doesn't pop, you can find the checksum calculation by looking at x-refs from the start of each segment (the <code>.text</code> segment is likely to get x-refed by this code).  </p>\n<p>If, for some reason, only the checksum of some of the <code>.text</code> segment is calculated and checked, you can simply search for strings \"File corrupted! This program has been manipulated and maybe it's infected by a virus or cracked. This file wont work anymore\", find where it's referenced and check for the validation around that</p>\n</div>",
            "votes": "1",
            "user": null,
            "time": "Dec 25, 2018 at 10:33",
            "is_accepted": false,
            "comments": [
                {
                    "user": "general failure",
                    "text": "<span class=\"comment-copy\">I tried to find the string in the exe file. It seems that the string is generatet in a windows dll and not in the exe file i have changed. So i need to find the place, where the checksum is calculated and the dll is called, but i didnd find yet.</span>",
                    "time": null
                },
                {
                    "user": "user22970",
                    "text": "<span class=\"comment-copy\">unlikely that it's a part of windows. i'd guess it's in one of the dlls in the same folder as your executable</span>",
                    "time": null
                },
                {
                    "user": "general failure",
                    "text": "<span class=\"comment-copy\">yes, i think that too, but unfortunately there are more than 30 dll's in that folder. The other point is, that exactly the same text is known from other software too (i checkted it in google). Thats looks more like a windows dll.</span>",
                    "time": null
                }
            ]
        }
    ]
}