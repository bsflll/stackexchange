{
    "title": "Can Ghidra do backward symbolic execution?",
    "link": "https://reverseengineering.stackexchange.com/questions/21820/can-ghidra-do-backward-symbolic-execution",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am searching for a tool which can do backwards symbolic execution on x86 binaries. More specifically, I would like to give the tool a program state(PC value + registers + memory content) and have it give me a set of inputs to the program that would result in that state. Can Ghidra do this? Or does anyone know if there are any other tools which can?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "893",
    "tags": [
        "ida",
        "disassembly",
        "assembly",
        "x86",
        "ghidra"
    ],
    "user": "Pythonpsycho1337",
    "time": "Aug 7, 2019 at 7:08",
    "comments": [
        {
            "user": "0xec",
            "text": "<span class=\"comment-copy\">I think what you want is rather forward symbolic execution. Angr can do it. You would execute the program from starting state to the goal state while marking the inputs as symbolic. You can add the constraints to the goal state such as the value of this register must be equal to this value.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Looks like you also asked the question over on the <a href=\"https://github.com/NationalSecurityAgency/ghidra/issues/866\" rel=\"nofollow noreferrer\">Ghidra GitHub</a> page and the answer there is the same. </p>\n<p>Essentially, no, Ghidra does not do that. But you should investigate <a href=\"https://github.com/angr/angr\" rel=\"nofollow noreferrer\">Angr</a>, <a href=\"https://klee.github.io/\" rel=\"nofollow noreferrer\">Klee</a>, <a href=\"http://bitblaze.cs.berkeley.edu/\" rel=\"nofollow noreferrer\">Bitblaze</a>, or <a href=\"https://github.com/ksluckow/awesome-symbolic-execution\" rel=\"nofollow noreferrer\">others</a>.</p>\n</div>",
            "votes": "2",
            "user": "Jordan",
            "time": "Aug 6, 2019 at 22:53",
            "is_accepted": false,
            "comments": []
        }
    ]
}