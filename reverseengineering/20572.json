{
    "title": "OTOOL alternative for linux",
    "link": "https://reverseengineering.stackexchange.com/questions/20572/otool-alternative-for-linux",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a reverse engineering set up on a Mac machine. This set up does some reverse engineering on iOS applications(.ipa files). I'm migrating the setup from Mac to a linux machine.</p>\n<p>Currently on Mac, I'm using OTOOL on ipa binary files and using the following commands:</p>\n<ol>\n<li>otool -L /iOS/binary/path</li>\n<li>otool -lv /iOS/binary/path</li>\n<li>otool -hv /iOS/binary/path</li>\n</ol>\n<p>Now, I've to do the same operation, i.e reverse engineer the iOS applications, but now on the linux machine. AFAIK, OTOOL is not available for linux machine. </p>\n<ol>\n<li>I've come across JTOOL which I think is most relevant till now. I can                 use it on linux, and it does something similar to OTOOL, but not exactly same. E.g. while using the -L command on JTOOL, I also need to specify architecture. However, OTOOL gives the shared libraries for all the available architectures.</li>\n<li>I tried ldd, but I'm getting the error - \"not a dynamic executable\".</li>\n<li>I tried objdump, but it asks for the object file.</li>\n</ol>\n<p>I'm not sure which tool can I use. I to figure out the alternate tool which can do same as OTOOL. Or, if not same, then what changes do i need to make to use the alternate tool. </p>\n</div>",
    "votes": "9",
    "answers": 2,
    "views": "15k",
    "tags": [
        "linux",
        "binary",
        "ios",
        "libraries",
        "macos"
    ],
    "user": "Rohit saraf",
    "time": "Feb 12, 2019 at 7:01",
    "comments": [
        {
            "user": "tibar",
            "text": "<span class=\"comment-copy\"><code>ldd</code> should work. what is the output of <code>file</code> on the executable you tried ? Otherwise use <code>nm</code> / <code>objdump</code>. <a href=\"https://gitlab.kitware.com/cmake/community/wikis/doc/cmake/Platform-Dependent-Issues#the-platforms-compilers-table\" rel=\"nofollow noreferrer\">gitlab.kitware.com/cmake/community/wikis/doc/cmake/â€¦</a></span>",
            "time": null
        },
        {
            "user": "Rohit saraf",
            "text": "<span class=\"comment-copy\">@tibar You think this will work for iOS executable binaries on linux? As otools for iOS binaries on Mac?</span>",
            "time": null
        },
        {
            "user": "Bill B",
            "text": "<span class=\"comment-copy\">jtool lets you specify the arch with <code>-arch</code>.  On my machine, testing with a fat binary gives different libs depending on the arch I specify.</span>",
            "time": null
        },
        {
            "user": "user46528",
            "text": "<span class=\"comment-copy\">llvm-13 (and up) contains llvm-otool-13 <code>apt install llvm-13</code></span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I am in a similar position carrying out iOS related work on an Ubuntu host.</p>\n<p>The suggestions to use <code>objdump</code> will not work unless it has been compiled specifically with support of Mach-O binaries which is not normally the case on Linux.</p>\n<p><s><code>jtool2</code> has by far been found to be the best Linux based equivalent for me and the commands you have listed should be avaialble as is as those flags are listed under <code>OTool Compatible Options</code>.</s>  Is it just that you do not want to have to pass the arch as an argument?</p>\n<p>A number of tools are available from <code>llvm</code> on Linux and their <a href=\"https://llvm.org/docs/CommandGuide/llvm-otool.html\" rel=\"nofollow noreferrer\">page</a> does list an <code>otool</code> equivalent.  That doesn't seem to be installed on my OS although a number of other <code>llvm</code> tools are such as <code>llvm-nm</code> and <code>llvm-objdump</code> that both support Mach-O binaries.</p>\n<p>If you prefer a visual representation you could try <a href=\"https://github.com/horsicq/XMachOViewer\" rel=\"nofollow noreferrer\">XMachOViewer</a> or if you are happy to script something yourself specific to your particular needs you could look at the Python <a href=\"https://lief-project.github.io/doc/stable/api/python/index.html\" rel=\"nofollow noreferrer\">lief</a> library.</p>\n<p><strong>Update</strong></p>\n<p>Adding two more options I've used since originally answering as this has recently received upvotes and still seems to be helpful. Both are currently maintained and available for Linux:</p>\n<p><a href=\"https://blacktop.github.io/ipsw/\" rel=\"nofollow noreferrer\">ipsw</a> from <a href=\"https://twitter.com/blacktop__\" rel=\"nofollow noreferrer\">Blacktop</a></p>\n<p>and</p>\n<p><a href=\"https://github.com/cxnder/ktool\" rel=\"nofollow noreferrer\">ktool</a> from <a href=\"https://cynder.me/\" rel=\"nofollow noreferrer\">cynder</a></p>\n<p><strong>Update, September 2024</strong></p>\n<p>jtool is no longer supported, let alone for Linux. ipsw is the most actively developed cross-platform option and with new functionality being added.</p>\n</div>",
            "votes": "6",
            "user": "Jon",
            "time": "Sep 27, 2024 at 13:48",
            "is_accepted": false,
            "comments": [
                {
                    "user": "MarianD",
                    "text": "<span class=\"comment-copy\">Not having enough reputation is not an excuse for using the answer as a comment. It would be better to omit this sentence from your answer.</span>",
                    "time": null
                },
                {
                    "user": "Jon",
                    "text": "<span class=\"comment-copy\">Thank you for the clarification. I have edited my response now, what started out as intending to be only a comment evolved in to an answer anyway as I read more.</span>",
                    "time": null
                },
                {
                    "user": "ericek111",
                    "text": "<span class=\"comment-copy\">I found <i>ipsw</i> to be about 5 times faster than <i>ktool</i> when printing symbols. I couldn't find the Linux version (nor the source code) of <i>jtool2</i> or its successor, <i>disarm</i>.</span>",
                    "time": null
                },
                {
                    "user": "Jon",
                    "text": "<span class=\"comment-copy\">The last few releases of jtool2 were *OS only no linux and the source code was never released sadly. I wasn't aware of disarm though, thanks.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>If you have stripped binaries there's little you can do regardless of the platform you're on.</p>\n<p>To view disassembled code on Linux, as you would with Otool on Mac, you can use objDump:</p>\n<pre><code>objdump --disassemble-all thebinary\n</code></pre>\n</div>",
            "votes": "1",
            "user": "Andy Pieters",
            "time": "Sep 24, 2021 at 16:19",
            "is_accepted": false,
            "comments": []
        }
    ]
}