{
    "title": "Locating function parameters in x32dbg",
    "link": "https://reverseengineering.stackexchange.com/questions/30838/locating-function-parameters-in-x32dbg",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm a bit rusty and trying to analyze a piece of code in x32dbg. As follows:</p>\n<pre><code>0627BF49 | 8B0B                     | mov ecx,dword ptr ds:[ebx]                           |\n0627BF4B | 8B85 CCF5FFFF            | mov eax,dword ptr ss:[ebp-A34]                       |\n0627BF51 | 05 EC040000              | add eax,4EC                                          |\n0627BF56 | 50                       | push eax                                             |\n0627BF57 | 8BB1 E4050000            | mov esi,dword ptr ds:[ecx+5E4]                       |\n0627BF5D | 8BCE                     | mov ecx,esi                                          |\n0627BF5F | FF15 A08C5406            | call dword ptr ds:[6548CA0]                          |\n0627BF65 | 8BCB                     | mov ecx,ebx                                          |\n0627BF67 | FFD6                     | call esi                                             |\n0627BF69 | 8BB5 ACF5FFFF            | mov esi,dword ptr ss:[ebp-A54]                       |\n0627BF6F | 8BCE                     | mov ecx,esi                                          **|\n0627BF71 | FF15 20735406            | call dword ptr ds:[&lt;&amp;?IsEmpty@?$CStringT@XXXXXXXXX   |**\n0627BF77 | 85C0                     | test eax,eax                                         |\n0627BF79 | 75 56                    | jne foo     .627BFD1   \n\n             \n</code></pre>\n<p>dissassembled there a lot of statements like this, point to IsEmpty in BAR.DLL (this is FOO.DLL)</p>\n<pre><code>iVar4 = Bar::CStringT&lt;wchar_t&gt;::IsEmpty(local_84);\n</code></pre>\n<p>Given my understanding, values should be pushed to EAX,ECX,and EDX prior to the call to test if a value is empty. However, if I look in any of these registers, and try to follow in the stack, I don't see anything there. The registers values not ASCII, and it looks like a reference to a CStringT. But I can't find the CStringT, the stack just points to a different DLL. How do I find the values of the CStringT parameter that is passed?</p>\n<p>Thx</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "872",
    "tags": [
        "x86",
        "x64dbg"
    ],
    "user": "throwawayn000b9999",
    "time": "Aug 30, 2022 at 15:22",
    "comments": [
        {
            "user": "dingo_kinznerhook",
            "text": "<span class=\"comment-copy\">Can you show us the instructions surrounding the call? That would help in understanding how the call is being made.</span>",
            "time": null
        },
        {
            "user": "throwawayn000b9999",
            "text": "<span class=\"comment-copy\">@dingo_kinznerhook done, similar call with more context.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The correct answer is:</p>\n<p>This is using thiscall: <a href=\"https://docs.microsoft.com/en-us/cpp/cpp/thiscall?view=msvc-170\" rel=\"nofollow noreferrer\">https://docs.microsoft.com/en-us/cpp/cpp/thiscall?view=msvc-170</a> and a parameter like <code>CStringT&lt;wchar_t&gt; *param_1</code> so unlike in other calls, ECX is not what we want. Instead this gives the value:</p>\n<pre><code>utf16([esi+4]+2)\n</code></pre>\n</div>",
            "votes": "0",
            "user": "throwawayn000b9999",
            "time": "Sep 1, 2022 at 13:36",
            "is_accepted": false,
            "comments": []
        }
    ]
}