{
    "title": "Ghidra Headless Analyzer - Create Functions",
    "link": "https://reverseengineering.stackexchange.com/questions/22880/ghidra-headless-analyzer-create-functions",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm interested in open a binary file (<code>.bin</code>, without arch info), and analyze it with <code>analyzeHeadless.bat</code> (Ghidra version without GUI). </p>\n<p>I know what is the architecture of the file, so I pass it as a flag to the analyzer.</p>\n<p>My command line is:\n<code>analyzeHeadless.bat  &lt;project_location&gt;  &lt;project_name&gt; -import &lt;my_file&gt; -processor &lt;my_known_processor&gt; -postscript &lt;my_script.py&gt; -scriptPath &lt;path&gt;</code></p>\n<p>my_script.py is:</p>\n<pre><code>for block in getMemoryBlocks():\n    current = block.getStart().getOffset()\n    end = block.getEnd().getOffset()\n    addr = currentProgram.getAddressFactory().getAddress(hex(current).replace('L', ''))\n    disassemble(addr)\n    current +=1\n\nfunc = getFirstFunction()\nprint(\"First func is:    \" + str(func))\n</code></pre>\n<p>I try to disassemble every address (looks like Ghigra doesn't do it itself), and after that I want to print the first function.</p>\n<p>The problem is:\n<code>func</code> appears to be <code>None</code>.</p>\n<p>But if after the headless execution I open the project in the GUI <code>Ghidra</code>, and execute:</p>\n<pre><code>func = getFirstFunction()\nprint(\"First func is:    \" + str(func))\n</code></pre>\n<p>It works and gets me the function.</p>\n<p>Any ideas what am I doing wrong? I guess there is some analysis that runs in the background and created the functions. How can I run it in my python script? </p>\n</div>",
    "votes": "4",
    "answers": 1,
    "views": "1k",
    "tags": [
        "python",
        "ghidra"
    ],
    "user": "macro_controller",
    "time": "Dec 31, 2019 at 13:28",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>The solution that I found is:</p>\n<p><code>analyze(currentProgram)</code></p>\n<p>Just after the disassembly. </p>\n</div>",
            "votes": "3",
            "user": "macro_controller",
            "time": "Jan 1, 2020 at 15:27",
            "is_accepted": true,
            "comments": []
        }
    ]
}