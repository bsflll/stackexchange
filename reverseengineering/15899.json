{
    "title": "Loading user specified IDA symbols in GDB",
    "link": "https://reverseengineering.stackexchange.com/questions/15899/loading-user-specified-ida-symbols-in-gdb",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>While reversing a binary, whatever symbols we name inside IDA IDB database, is it possible to load the same in GDB while debugging? e.g. I tried <a href=\"https://github.com/wapiflapi/wsym\" rel=\"nofollow noreferrer\">wsym</a> which attempts to inject those as symbols. However, the project seems to be in too beta to work properly. I want to use <code>pwndbg</code> for debugging, so using IDA's integrated remote debugging support is not really an option.</p>\n</div>",
    "votes": "3",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "gdb"
    ],
    "user": "sherlock",
    "time": "Jul 23, 2017 at 20:19",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "<span class=\"comment-copy\">out of interest, what specifically makes IDA's debugger \"not an option\"?</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>One of this year's Recon talks was on a project which exports data from IDA as DWARF debug info. In theory that can be used in <code>gdb</code> to provide symbols.</p>\n<ul>\n<li><a href=\"https://recon.cx/2017/montreal/resources/slides/RECON-MTL-2017-Exporting-IDA-Debug-Information.pdf\" rel=\"nofollow noreferrer\">Slides</a></li>\n<li><a href=\"http://github.com/alschwalm/dwarfexport\" rel=\"nofollow noreferrer\">Code</a></li>\n</ul>\n<p>P.S. according to <code>pwndbg</code> documentation, it already has some kind of <a href=\"https://github.com/pwndbg/pwndbg/blob/dev/FEATURES.md#ida-pro-integration\" rel=\"nofollow noreferrer\">\"IDA integraton\"</a>, so I'd suggest you to try that and contact the project if you can't get it working.</p>\n</div>",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Jul 23, 2017 at 21:46",
            "is_accepted": true,
            "comments": [
                {
                    "user": "sherlock",
                    "text": "<span class=\"comment-copy\"><code>pwndbg</code> integration works for me, thanks :) However, in the next IDA versions, we'd love to see this feature out of the box, i.e. in principle,IDA can rewrite the ELF binary with symbol integration integrated.</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@Holmes.Sherlock feel free to send feature requests to support.</span>",
                    "time": null
                }
            ]
        }
    ]
}