{
    "title": "What is the relation between binary (executable) instructions and execution instruction [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/6365/what-is-the-relation-between-binary-executable-instructions-and-execution-inst",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<div>\n<aside class=\"s-notice s-notice__info post-notice js-post-notice mb16\" role=\"status\">\n<div class=\"d-flex fd-column fw-nowrap\">\n<div class=\"d-flex fw-nowrap\">\n<div class=\"flex--item wmn0 fl1 lh-lg\">\n<div class=\"flex--item fl1 lh-lg\">\n<div>\n<b>Closed</b>. This question needs <a href=\"/help/closed-questions\">details or clarity</a>. It is not currently accepting answers.\n                                \n                            </div>\n</div>\n</div>\n</div>\n</div>\n<hr class=\"my12 outline-none baw0 bb bc-blue-400\"/>\n<div class=\"fw-nowrap fc-black-500\">\n<div class=\"d-flex fd-column lh-md\">\n<div class=\"mb0 d-flex\">\n<div class=\"flex--item mr8\">\n<svg aria-hidden=\"true\" class=\"svg-icon iconLightbulb\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\"><path d=\"M15 6.38A6.5 6.5 0 0 0 7.78.04h-.02A6.5 6.5 0 0 0 2.05 5.6a6.3 6.3 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.3 6.3 0 0 0 15 6.37M4.03 5.85A4.5 4.5 0 0 1 8 2.02a4.5 4.5 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.3 4.3 0 0 1-1.64-3.94M10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2z\"></path></svg>\n</div>\n<p><b>Want to improve this question?</b> Add details and clarify the problem by <a href=\"/posts/6365/edit\">editing this post</a>.</p>\n</div>\n<div class=\"mb0 mt6 d-flex\">\n<p class=\"ml24 pl2\">Closed <span class=\"relativetime\" title=\"2014-10-03 08:29:20Z\">10 years ago</span>.</p>\n</div>\n<div class=\"ml24 pl2\">\n</div>\n</div>\n</div>\n<div class=\"mt24 d-flex gsx gs8\">\n<a class=\"s-btn s-btn__outlined flex--item js-post-notice-edit-post\" href=\"/posts/6365/edit\">\n                        Improve this question\n                    </a>\n</div>\n</aside>\n</div>\n<p>What I want to know is that is there any similarity or may be difference between a binary instructions and an execution instruction of a binary ? </p>\n<p>In other world, in area of malware analysis a binary can be examined in both static and dynamic analysis. In static its instructions will be extracted without executing it while in dynamic the instructions will be extracted during execution of a binary. </p>\n<p>If I want to clarify my question, I want to examine a binary(every binary even not malware) by comparing outputs of static and dynamic analysis in the fine grained level(instructions). But there are two problem for me! At first is it possible to compare these two outputs and how can I do that(do these two output belong to the same category that make the comparison possible)? As I saw the instructions output of dynamic and static analysis contain lots of instruction(very large output) so I am not sure can I compare them or not? \nand if it possible do I need multipath dynamic analysis to perform precise comparison?</p>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "137",
    "tags": [
        "disassembly",
        "malware",
        "static-analysis",
        "dynamic-analysis"
    ],
    "user": "user2942756",
    "time": "10 years ago",
    "comments": [
        {
            "user": "Ange",
            "text": "<span class=\"comment-copy\">If there is no obfuscation or code generation, then what will be actually dynamically executed was what was statically present in the malware.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Malware executable can be self-modifying or packed. Using dynamic analysis may be a good shortcut to extract really executed code. </p>\n<p>Generally position independent and not specially modified instructions should be exactly the same.\nAddresses of functions can be different because of ASLR or as a result of loader actions.</p>\n</div>",
            "votes": "1",
            "user": "w s",
            "time": "Oct 2, 2014 at 15:30",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user2942756",
                    "text": "<span class=\"comment-copy\">Thanks. So if I assume a malware or a sample binary does not include any packer, obfuscation and so on, how can I compare these two output together and find similarities? Also should I perform multi path analysis for dynamic??</span>",
                    "time": null
                }
            ]
        }
    ]
}