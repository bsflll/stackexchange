{
    "title": "Pin DBI tool - Create executable",
    "link": "https://reverseengineering.stackexchange.com/questions/26845/pin-dbi-tool-create-executable",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I'm starting to learn Intel's Pin framework and I can't figure out if it's possible to create an executable.</p>\n<p>I mean, rather than creating a module and forcing people to download Pin + the module, is it possible to directly create a tool (executable)?</p>\n</div>",
    "votes": "0",
    "answers": 0,
    "views": "122",
    "tags": [
        "dynamic-analysis",
        "instrumentation",
        "pintool",
        "intel"
    ],
    "user": "Reginas",
    "time": "Jan 22, 2021 at 18:23",
    "comments": [
        {
            "user": "R4444",
            "text": "<span class=\"comment-copy\">what do you mean by \"creating an executable\"? Also what do you mean by module? read this manual for more information on how it works - <a href=\"https://software.intel.com/sites/landingpage/pintool/docs/97619/Pin/html/index.html\" rel=\"nofollow noreferrer\">software.intel.com/sites/landingpage/pintool/docs/97619/Pin/â€¦</a></span>",
            "time": null
        },
        {
            "user": "Reginas",
            "text": "<span class=\"comment-copy\">I tried to dev a little program based on ManualExamples. To use it I have to do something like : <code>pin -t ./my_module.so -- ./test</code>. What I'd like to know is if it's possible to compile it as a standalone. Rather than giving my \"my_module.so\" I'd like just create a binary that way people won't have to download Pin and module, only my binary to use it.</span>",
            "time": null
        },
        {
            "user": "R4444",
            "text": "<span class=\"comment-copy\">\"pin\" is a instrumentation framework \"./my_module.so\" is a \"pintool\" which is used to add instrumentation. \"./test\" is a binary under examination. \"pin\" can't work without \"pintool\". If you don't want to add instrumentation, then you can provide a blank \"pintool\" (without any calls to instrumentation routines, just the main function). If you want to remove \"pintool\" then your pin framework will be purposeless.</span>",
            "time": null
        }
    ],
    "answers_data": []
}