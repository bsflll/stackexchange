{
    "title": "How to print from pointers in radare2 in debug session",
    "link": "https://reverseengineering.stackexchange.com/questions/11768/how-to-print-from-pointers-in-radare2-in-debug-session",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>when I am using the radare2 debugger, it happens that I have sometimes to examine variables and memory. Consider the following instruction</p>\n<pre><code>0x08048498      8b4508         mov eax, dword [ebp+arg2]\n</code></pre>\n<p>Assuming that I know that what in eax pointer to array of characters with null termination at the end (I mean string). So, <code>ebp+arg2</code> is pointer to that string.</p>\n<p>when I type <code>ps @eax</code> I get what I expect, a string. But, I can get the same result by accessing <code>[ebp+arg_2]</code>. I tried many things including <code>ps</code> and <code>ps/</code> etc.</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "8k",
    "tags": [
        "debugging",
        "debuggers",
        "radare2"
    ],
    "user": "u185619",
    "time": "Jan 16, 2016 at 15:23",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Check out the <code>afa</code> command (<code>a</code> for analysis, <code>f</code> for function, and the latest <code>a</code> for arguments), you should find the value of the args.</p>\n<p>You can then use <code>pxr</code> (<code>p</code> as in <code>print</code>, <code>x</code> and in hexdump, <code>r</code> as in reference): <code>pxr 1 @ ebp+0x8</code>, <code>1</code> to get the first reference.</p>\n</div>",
            "votes": "6",
            "user": "jvoisin",
            "time": "Jan 16, 2016 at 13:48",
            "is_accepted": true,
            "comments": [
                {
                    "user": "u185619",
                    "text": "<span class=\"comment-copy\">actually it is right except for it should be <code>pxr 4 @ ebp+0x8</code>  to get the first reference</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You should get the same result by <code>pf S @ ebp+arg2</code>.</p>\n<pre><code>pf[?][.nam] [fmt]              print formatted data (pf.name, pf.name $&lt;expr&gt;)\nS       64bit pointer to string (8 bytes)\n</code></pre>\n<p><code>pf S</code> stands for print formatted null terminated string referenced by a 64 bit pointer.</p>\n<p>You might have to use arg2's actually value like 0x8. </p>\n<p>I guess it is a renamed argument so you should look up in the function header what is it's value.</p>\n</div>",
            "votes": "2",
            "user": "NirIzr",
            "time": "Apr 8, 2017 at 22:19",
            "is_accepted": false,
            "comments": []
        }
    ]
}