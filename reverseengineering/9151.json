{
    "title": "Tools for automated deobfuscation",
    "link": "https://reverseengineering.stackexchange.com/questions/9151/tools-for-automated-deobfuscation",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>To evaluate different Java obfuscators, I want also consider if the obfuscators use preventive techniques against common tools used for automated deobfuscation.</p>\n<p>Therefore I plan to obfuscate a test program with different obfuscators and check, if deobfuscators have an impact on the obfuscated programs. </p>\n<p>So I'm searching for common tools for automated deobfuscation to use them in my evaluation. Can you suggest some tools? Thank you!</p>\n</div>",
    "votes": "1",
    "answers": 1,
    "views": "6k",
    "tags": [
        "tools",
        "obfuscation",
        "deobfuscation"
    ],
    "user": "la-ga",
    "time": "Jun 16, 2015 at 15:28",
    "comments": [
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">Obfuscation if what exactly ?</span>",
            "time": null
        },
        {
            "user": "la-ga",
            "text": "<span class=\"comment-copy\">Obfuscation is the process making source code difficult to understand and difficult to analyse for a reverse-engineer. Therefore you transform your program into another one with the same functionality but with a more complex source code: <a href=\"https://en.wikipedia.org/wiki/Obfuscation_%28software%29\" rel=\"nofollow noreferrer\">Wikipedia Article</a> In this special case using preventive transformations to thwart automated deobfuscators and make them to crash.</span>",
            "time": null
        },
        {
            "user": "w s",
            "text": "<span class=\"comment-copy\">Obfuscation of what exactly ? For example there are no automatic deobfuscators for binary executables, especially for not x86 ones. Deobfuscators for PHP, JavScript and Java are very different.</span>",
            "time": null
        },
        {
            "user": "la-ga",
            "text": "<span class=\"comment-copy\">I'm planning to look at C and Java obfuscators. So if there are no automatic deobfuscators for x86 architectures I'll focus on tools for Java code. ;-)</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Take a look at <a href=\"http://www.jakstab.org/\" rel=\"nofollow\">Jakstab</a>. It defeats the most basic obfuscation techniques and should provide a decent start in the way of automated deobfuscation. </p>\n<p>Take its results with a grain of salt though as it is not finished and may have issues with certain binaries.</p>\n</div>",
            "votes": "1",
            "user": "Viktor K",
            "time": "Jun 17, 2015 at 7:53",
            "is_accepted": false,
            "comments": [
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">Jakstab is programmed in Java but deals with x86 executables. I am not sure it is a correct answer to the question.</span>",
                    "time": null
                },
                {
                    "user": "Viktor K",
                    "text": "<span class=\"comment-copy\">According to a previous comment he is interested in automatic x86 deobuscation, so I figured i'd pitch in what i know.</span>",
                    "time": null
                },
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">Ah, the term \"Java obfuscator\" misled me, then... Sorry.</span>",
                    "time": null
                },
                {
                    "user": "Viktor K",
                    "text": "<span class=\"comment-copy\">I agree it was not obvious from the initial post ;) No worries.</span>",
                    "time": null
                }
            ]
        }
    ]
}