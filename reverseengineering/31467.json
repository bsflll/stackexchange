{
    "title": "Can ESP point to a global variable",
    "link": "https://reverseengineering.stackexchange.com/questions/31467/can-esp-point-to-a-global-variable",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This 3 lines of code are used by some encoders to get EIP into ECX register:</p>\n<pre><code>fldz\nfnstenv [esp-C]\npop ecx\n</code></pre>\n<p>The 2 first instructions push some datas on stack and we get one of this into ECX on the last line.</p>\n<p>I have tried this code in a very basic poc. It works fine.</p>\n<p>But in real life (in a Buffer overflow application), ecx contains 0x0000000 and I do not understand why.</p>\n<p>The only thing I know is ESP value has been changed, but points in the middle of a big buffer.</p>\n<p>Are there some rules on ESP ? Can ESP points anywhere (on an allocated memory region of course) ?</p>\n<p>For example if I create a global variable in my program: unsigned char buf[1024]. Can I set ESP to buf+512 and call PUSH, fldz or fnstenv instructions ?</p>\n<p>Thanks</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "58",
    "tags": [
        "x86",
        "stack",
        "shellcode"
    ],
    "user": "Bob5421",
    "time": "Jan 24, 2023 at 21:47",
    "comments": [
        {
            "user": "peter ferrie",
            "text": "<span class=\"comment-copy\">You might require fninit before the fldz, to initialise the FPU state explicitly.</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p><strong>ESP always points to the top of stack.</strong> Do you really understand stack concept? If you overwrite esp with random value, the application can crash.</p>\n<p><strong>fldz</strong> - Push +0.0 onto the <strong>FPU</strong> stack.\n<strong>fnstenv</strong> - Store <strong>FPU</strong> environment in the area which is placed on memory in your case. <strong>[esp-C]</strong> - this is memory pointer.\n<strong>pop ecx</strong> - just pop dword from the top of stack to the ecx</p>\n<p>What do you want to do with this code? Describe your task.</p>\n</div>",
            "votes": "1",
            "user": "strannyi",
            "time": "Jan 25, 2023 at 1:56",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Bob5421",
                    "text": "<span class=\"comment-copy\">I know what is stack and how it works. The os creates a memory space for the stack. My question is will it work if i put an esp value that points on another memory space. I am not talking about a random memory space. I am talking about a buffer i control. I want to know if the cpu will detect this is not the memory space dedicated for stack</span>",
                    "time": null
                },
                {
                    "user": "strannyi",
                    "text": "<span class=\"comment-copy\">You can change ESP, but after that pop/return instruction will work incorrect and call/push will store ret_addr/value outside the stack, because you change stack pointer(a location where data was stored). You can use ESP as general purpose register.</span>",
                    "time": null
                }
            ]
        }
    ]
}