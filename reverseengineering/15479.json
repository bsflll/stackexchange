{
    "title": "Disassembled Java class file differs from Source",
    "link": "https://reverseengineering.stackexchange.com/questions/15479/disassembled-java-class-file-differs-from-source",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>While trying to understand a behavior of TestNG I found my self disassembling the .class files. During that, I accidentally noticed that the official binary differs from the one built manually from source and from the source itself.</p>\n<p>The reason I disassembled the binaries was just to prove that the binary really lacks local variable tables (and for fun), since I was unable inspecting local variables.</p>\n<ul>\n<li>Project: <a href=\"https://github.com/cbeust/testng.git\" rel=\"nofollow noreferrer\">https://github.com/cbeust/testng.git</a></li>\n<li>Artifact Version / Tag: 6.11</li>\n<li>Source File: <a href=\"https://github.com/cbeust/testng/blob/6.11/src/main/java/org/testng/TestNG.java\" rel=\"nofollow noreferrer\"><code>TestNG.java</code></a> (Official Repository)</li>\n<li>Class File: <a href=\"https://repo.maven.apache.org/maven2/org/testng/testng/6.11/testng-6.11.jar\" rel=\"nofollow noreferrer\"><code>TestNG.class</code> in testng-6.11.jar</a> (repo.maven.apache.org)</li>\n<li>Used JDK: OpenJDK 1.8.0 131</li>\n</ul>\n<p>I built the source from the project repository at Tag 6.11. using Gradle.</p>\n<p>In the first place I inspected both using <code>javap -l -p TestNG.class</code>, writing the output into two separate files and diffing the resulting descriptions. So far so good.</p>\n<p>Then, for fun, I disassembled both class files using these commands:</p>\n<pre><code>javap -c -p /tmp/TestNG.mvn.class &gt; /tmp/TestNG.mvn.java\njavap -c -p /tmp/TestNG.mine.class &gt; /tmp/TestNG.mine.java\n</code></pre>\n<p>Then I diffed both and accidently found the private field <code>m_executionListeners</code> to be missing. </p>\n<pre><code>--- /tmp/TestNG.mvn.java      2017-06-03 23:12:16.005211337 +0200\n+++ /tmp/TestNG.mine.java     2017-06-03 23:12:08.245208191 +0200\n@@ -92,6 +92,8 @@\n\n   protected long m_start;\n\n+  private final java.util.Map&lt;java.lang.Class&lt;? extends org.testng.IExecutionListener&gt;, org.testng.IExecutionListener&gt; m_executionListeners;\n+\n</code></pre>\n<p>(No, its declaration did not just move around, it's gone.)</p>\n<p>So I thought it could be some kind of compiler optimization. But it is actually referenced and accessed two times. This is one access:</p>\n<pre><code>public void addListener(ITestNGListener listener) {\n   if (listener == null) {\n     return;\n   }\n   if (listener instanceof ISuiteListener) {\n     ISuiteListener suite = (ISuiteListener) listener;\n     maybeAddListener(m_suiteListeners, suite.getClass(),  suite);\n   }\n   // ...\n   if (listener instanceof IExecutionListener) {\n     IExecutionListener execution = (IExecutionListener) listener;\n     maybeAddListener(m_executionListeners, execution.getClass(), execution);\n   }\n   // ...\n }\n</code></pre>\n<p><a href=\"https://github.com/cbeust/testng/blob/6.11/src/main/java/org/testng/TestNG.java#L723\" rel=\"nofollow noreferrer\">See the source</a></p>\n<p>All other fields that run through the <code>instanceof</code> check, type cast and <code>maybeAddListener()</code> call are still present.</p>\n<p>Am I right, with my conclusion, that the binary has not been built from the (supposed-to-be) related source? Or what it going on here?</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "142",
    "tags": [
        "java",
        "bin-diffing"
    ],
    "user": "try-catch-finally",
    "time": "Jun 4, 2017 at 14:23",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You are correct that the binary does not match the tagged source. It does, however, match the changes made in commit <a href=\"https://github.com/cbeust/testng/commit/6cfc6b4a403f8487d9fa96aa3d42db7848c8755a\" rel=\"noreferrer\">6cfc6b4a403f8487d9fa96aa3d42db7848c8755a</a>, which was made on February 25, one day after the most recent commit tagged 6.11 and before the most recent merge commit in 6.11. </p>\n<p>I can only speculate, but it seems likely that their local version of 6.11 includes an extra commit or two that they accidentally left out of the tag on Github.</p>\n</div>",
            "votes": "4",
            "user": "Antimony",
            "time": "Jun 5, 2017 at 3:23",
            "is_accepted": true,
            "comments": []
        }
    ]
}