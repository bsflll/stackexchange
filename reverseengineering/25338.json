{
    "title": "Defining operand as offset",
    "link": "https://reverseengineering.stackexchange.com/questions/25338/defining-operand-as-offset",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have an idapython script which automatically defines bytes as code by a predefined configuration.<br/>\nThe problem is that when it defines the block of bytes as code (by idc.create_insn) it does not define references automatically.</p>\n<p>For example, this is the outcome of the function:<br/>\n<a href=\"https://i.sstatic.net/DwK6S.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/DwK6S.png\"/></a></p>\n<p>And this is the expected result:<br/>\n<a href=\"https://i.sstatic.net/vTcBz.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.sstatic.net/vTcBz.png\"/></a></p>\n<p>If 0x80004F0 cannot be defined automatically as offset, how can I programatically (with idapython) set it to be so?</p>\n</div>",
    "votes": "1",
    "answers": 2,
    "views": "269",
    "tags": [
        "ida",
        "idapython"
    ],
    "user": "toothpick",
    "time": "Jun 18, 2020 at 15:43",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Red highlight usually means that the address is not valid. You need to create a segment covering the target address range for it to be shown as a label.</p>\n</div>",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Jun 19, 2020 at 12:26",
            "is_accepted": false,
            "comments": [
                {
                    "user": "toothpick",
                    "text": "<span class=\"comment-copy\">This is a code example which exists in the same IDB, which means if in the bottom picture the address is valid then it should have been so in the top picture. my question is why was it highlighed as red?</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">can't say without the idb... the values do seem to match</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I managed to solve the issue by using the following idapython code:</p>\n<pre><code>operand_value = get_operand_value(address, 1)\nfor segment in Segments():\n    if operand_value &gt;= segment and operand_value &lt;= SegEnd(segment):\n        op_hex(address, 1)\n        op_offset(address, 1, idaapi.REF_OFF32, -1, 0, 0)\n</code></pre>\n</div>",
            "votes": "1",
            "user": "toothpick",
            "time": "Jun 20, 2020 at 0:47",
            "is_accepted": true,
            "comments": []
        }
    ]
}