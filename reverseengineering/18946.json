{
    "title": "What's the meaning of dword_XXXX and offset dword_XXXX in IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/18946/whats-the-meaning-of-dword-xxxx-and-offset-dword-xxxx-in-ida",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>Consider the following code:</p>\n<p>In C++:</p>\n<pre><code>SomeClass* globalPointer; // we don't know what it points to, but it's not null a pointer, it's initialized\n\nvoid someFunction()\n{\n  globalPointer-&gt;someVirtualFunction();\n}\n</code></pre>\n<p>In IDA (inside <code>someFunction</code>):</p>\n<pre><code>mov     ecx, dword_XXXX ; ecx = globalPointer\nmov     eax, [ecx] ; eax = vtable\njmp     dword ptr [eax+30h] ; call vtable[0x30]\n</code></pre>\n<p>The meaning of <code>dword_XXXX</code> is just a pointer value. I tried to check it this way:</p>\n<pre><code>printf(\"Address of pointer = %p, pointer's value = %p\\n\", &amp;otherPointer, otherPointer);\n</code></pre>\n<p>And I got:</p>\n<pre><code>push dword_XXXX ; otherPointer\npush offset dword_XXXX ; &amp;otherPointer\npush offset format ; \"Address of pointer = %p, pointer's value = %p\\n\"\n\ncall printf\n</code></pre>\n<p>Thus <code>dword_XXXX</code> seems to be a pointer's value and <code>offset dword_XXXX</code> seems to be an address of the pointer.</p>\n<p>However, I noticed another code (which can be expressed the same as the c++ function I provided above):</p>\n<pre><code>SomeClass2* globalPointer2;\n\nvoid someFunction2()\n{\n  globalPointer2-&gt;someVirtualFunction2();\n}\n</code></pre>\n<p>And IDA surprisingly gave me (inside <code>someFunction2</code>):</p>\n<pre><code>mov eax, dword_XXXX ; eax = globalPointer2\nmov ecx, offset dword_XXXX ; ecx = &amp;globalPointer2\njmp dword ptr [eax+5Ch] ; call [globalPointer2+0x5C] with &amp;globalPointer2 as this?? It should be call vtable[0x5C]\n</code></pre>\n<p>I checked the values and found out that IDA somehow \"changes\" the meaning of <code>dword_XXXX</code>, in this case it actually was:</p>\n<pre><code>mov eax, dword_XXXX ; eax = vtable\nmov ecx, offset dword_XXXX ; ecx = globalPointer2\njmp dword ptr [eax+5Ch] ; call vtable[0x5C]\n</code></pre>\n<p>Why the meaning of <code>dword_XXXX</code> was different in the second case? In the first case it was just <code>pointer</code>, but in the second case it was <code>*pointer</code>.</p>\n<p>And the meaning of <code>offset dword_XXXX</code> in the first case was <code>&amp;pointer</code> and in the second case was <code>pointer</code>.</p>\n<p>I'm sorry if something is unclear, I really tried to simplify that as much as possible.</p>\n</div>",
    "votes": "5",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "x86",
        "nasm"
    ],
    "user": "anx199",
    "time": "Jul 31, 2018 at 18:03",
    "comments": [
        {
            "user": "Avery3R",
            "text": "<span class=\"comment-copy\">Remove your answer from the question and add it as an answer. You can post answers to your own questions</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I think I figured out what's going on.</p>\n<p>The opcodes for the printing were (assuming <code>dword_AAAAAAAA</code> instead of general <code>dword_XXXX</code>):</p>\n<pre><code>FF 35 AA AA AA AA    push dword_AAAAAAAA; otherPointer\n68 AA AA AA AA       push offset dword_AAAAAAAA; &amp;otherPointer\n</code></pre>\n<p>Thanks to <a href=\"https://defuse.ca/online-x86-assembler.htm\" rel=\"nofollow noreferrer\">this</a> site, I know that the above instructions are equal to:</p>\n<pre><code>push [0xAAAAAAAA]; push otherPointer\npush 0xAAAAAAAA;   push &amp;otherPointer\n</code></pre>\n<p>So, in this case, <code>dword_XXXX</code> is equal to value of a pointer. However, in the second case (again assuming <code>dword_AAAAAAAA</code> instead of general <code>dword_XXXX</code>):</p>\n<pre><code>A1 AA AA AA AA    mov eax, dword_AAAAAAAA ; eax = vtable\nB9 AA AA AA AA    mov ecx, offset dword_AAAAAAAA ; ecx = globalPointer2\n</code></pre>\n<p>And it's equal to:</p>\n<pre><code>mov eax, [0xAAAAAAAA] ; eax = vtable\nmov ecx, 0xAAAAAAAA ; ecx = globalPointer2\n</code></pre>\n<p>Thus in this case <code>dword_XXXX</code> is equal to <code>*pointer</code> rather than <code>pointer</code>.</p>\n<p>Therefore I think the answer is: it depends. We need to understand what <code>dword_XXXX</code> means - it can be a pointer, an address of the pointer, or even pointer to pointer to pointer, and so on. But IDA gives us a hint: <code>offset dword_XXXX</code> means a raw value of whatever <code>dword_XXXX</code> is and <code>dword_XXXX</code> gives a dereferenced value of it.</p>\n</div>",
            "votes": "5",
            "user": "anx199",
            "time": "Aug 3, 2018 at 12:41",
            "is_accepted": true,
            "comments": []
        }
    ]
}