{
    "title": "How to find and read specific value in memory of running wine application?",
    "link": "https://reverseengineering.stackexchange.com/questions/27742/how-to-find-and-read-specific-value-in-memory-of-running-wine-application",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>How can I find and read specific values in memory of running WINE application?</p>\n<p>I am experimenting with text editors, writing some string and trying to find it in the heap memory and changing it using a python script.</p>\n<p>I tried using this code for finding and modifying the value in the memory of a native Leafpad (text editor) program running on Linux. and it works (the value in the heap changed).\nHowever, when I try using the script on a WINE application (notepad.exe) it fails finding the value.</p>\n<p>How come there is a difference between the WINE and the native Linux application?</p>\n<p>What do I need to change in order to make the script work with WINE applications?</p>\n<p>This is the script being used for location and modification of a value:</p>\n<pre><code>#!/usr/bin/env python3\n\nfrom sys import argv, exit\n\n\ndef print_usage():\n    \"\"\"Print the usage string if script was used improperly\"\"\"\n    print('Usage: \\\n        \\t$ {} &lt;pid&gt; &lt;string to read&gt; &lt;string to write&gt;'.format(argv[0]))\n    exit(1)\n\n\ndef read_write_heap(pid, read_str, write_str):\n    \"\"\"Find @read_str in the heap of @pid and replace it with @write_str\"\"\"\n    try:\n        maps_file = open(\"/proc/{}/maps\".format(pid), 'r')\n    except IOError as e:\n        print(\"Can't open file /proc/{}/maps: IOError: {}\".format(pid, e))\n        exit(1)\n    heap_info = None\n    for line in maps_file:\n        if 'heap' in line:\n            heap_info = line.split()\n            print(\"HEAP: \", line)\n    maps_file.close()\n    if 'heap' == None:\n        print('No heap found!')\n        exit(1)\n    addr = heap_info[0].split('-')\n    perms = heap_info[1]\n    if 'r' not in perms or 'w' not in perms:\n        print('Heap does not have read and/or write permission')\n        exit(0)\n    try:\n        mem_file = open(\"/proc/{}/mem\".format(pid), 'rb+')\n    except IOError as e:\n        print(\"Can't open file /proc/{}/maps: IOError: {}\".format(pid, e))\n        exit(1)\n    heap_start = int(addr[0], 16)\n    heap_end = int(addr[1], 16)\n    mem_file.seek(heap_start)\n    heap = mem_file.read(heap_end - heap_start)\n\n    str_offset = heap.find(bytes(read_str, \"ASCII\"))\n    if str_offset &lt; 0:\n        print(\"Can't find {} in /proc/{}/mem\".format(read_str, pid))\n        exit(1)\n    mem_file.seek(heap_start + str_offset)\n\n    mem_file.write(bytes(write_str + '\\0', \"ASCII\"))\n\n\nif (len(argv) == 4):\n    pid = argv[1]\n    search_str = argv[2]\n    replace_str = argv[3]\n    read_write_heap(pid, search_str, replace_str)\nelse:\n    print_usage()\n</code></pre>\n</div>",
    "votes": "2",
    "answers": 0,
    "views": "93",
    "tags": [
        "heap",
        "wine"
    ],
    "user": "JustOneMan",
    "time": "May 29, 2021 at 17:49",
    "comments": [],
    "answers_data": []
}