{
    "title": "What is, and why, \"byte[ ] + number\" in this IDA pseudocode?",
    "link": "https://reverseengineering.stackexchange.com/questions/22273/what-is-and-why-byte-number-in-this-ida-pseudocode",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>This is a decompile of an <code>.so</code> file, so it originated from C or C++. Can you kindly try to explain to me what this does?</p>\n<p>How would one rewrite this into readable code? I don't mind any programming language.</p>\n<p>The loop below is strange: I think it is a <code>for</code> loop but it uses a byte during checking... oh no, this is so wrong. There is one thing I am sure, in the function crackMe the <code>*two</code> is actually a byte array.</p>\n<p>And what about the <code>++keep</code>? and <code>(two++)[1]</code>? Can byte minus byte result in <code>(_BYTE *)(two - newByte)</code>?</p>\n<p>This is surely a short code but so much to analyse.</p>\n<pre><code>unsigned __int8 *__fastcall crackMe(unsigned __int8 *i, _BYTE *two)\n{\n  _BYTE *newByte; \n  int flag; \n  int rule; \n  _BYTE *rule2; \n  unsigned __int8 *result; \n  int currentNumCopy; \n  int currentNum; \n  int keep; \n  int forCompare; \n  int isFinal; \n\n  newByte = two + 1;\n  flag = (unsigned __int8)*two;\n  if ( !*two )\n    return i;\n  do\n    rule = (unsigned __int8)(two++)[1];\n  while ( rule );\n  rule2 = (_BYTE *)(two - newByte);\n  while ( 1 )\n  {\n    result = i;\n    currentNum = *i++;\n    currentNumCopy = currentNum;\n    if ( !currentNum )\n      break;\n    if ( currentNumCopy == flag)\n    {\n      if ( !rule2 )\n        return result;\n      keep = 0;\n      while ( 1 )\n      {\n        forCompare = (unsigned __int8)newByte[keep];\n        isFinal = result[keep + 1];\n        if ( !result[keep + 1] || isFinal != forCompare )\n          break;\n        if ( rule2 == (_BYTE *)++keep )\n          return result;\n      }\n      if ( isFinal == forCompare )\n        return result;\n    }\n  }\n  return 0;\n}\n</code></pre>\n<p>My attempt to rewrite it in Java, you can rewrite it in C or C++ or C# or Python or any language you prefer:</p>\n<pre><code>        byte[] newByte;\n        int flag;\n        int rule; \n        byte rule2; \n        int result;\n        int currentNumCopy; \n        int keep; \n        int forCompare; \n        int isFinal; \n\n        newByte = two;\n        newByte[two.length + 1] = 1; //I am confused, did it convert array to integer then add 1 or add 1 to the end of array?\n\n        ByteBuffer wrapped = ByteBuffer.wrap(two); // big-endian by default\n        flag = wrapped.getInt();\n        for (int currentNum = 0; currentNumCopy == flag; currentNum++) {\n        ??? rule = ?\n</code></pre>\n</div>",
    "votes": "0",
    "answers": 1,
    "views": "437",
    "tags": [
        "ida",
        "assembly",
        "decompilation",
        "c++",
        "c"
    ],
    "user": "Gin May",
    "time": "Oct 8, 2019 at 18:22",
    "comments": [
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">decompilation is guesswork and there may be wrong guesses post the relevant assembly too for someone to take a shot</span>",
            "time": null
        },
        {
            "user": "Gin May",
            "text": "<span class=\"comment-copy\">here u go <a href=\"https://i.ibb.co/FXwXFhv/asm.png\" rel=\"nofollow noreferrer\">i.ibb.co/FXwXFhv/asm.png</a> @blabb</span>",
            "time": null
        },
        {
            "user": "Gin May",
            "text": "<span class=\"comment-copy\">it just a function to return a string, correct me if I'm wrong I didn't see it hook any other functions</span>",
            "time": null
        },
        {
            "user": "Gin May",
            "text": "<span class=\"comment-copy\">I guess ida don't know the data type</span>",
            "time": null
        },
        {
            "user": "blabb",
            "text": "<span class=\"comment-copy\">@ Gin May your link says image not found :( post the disassembly as text here yes from a fleet look it appears it checks two string and returns a,b,or 0  (probably a strcmp function  you can also use some emulators like oaksim , visual arm to emulate the code</span>",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I guess <code>newByte[two.length + 1] = 1;</code> look like iterate some value in variable <code>two</code></p>\n</div>",
            "votes": "-1",
            "user": "Febriyanto Nugroho",
            "time": "Jan 1, 2020 at 13:03",
            "is_accepted": false,
            "comments": []
        }
    ]
}