{
    "title": "Generate Mach-O binary from running process",
    "link": "https://reverseengineering.stackexchange.com/questions/6607/generate-mach-o-binary-from-running-process",
    "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>I have a packed executable. To take care of the unpacking, I would like to extract the in-memory version of the process, which would ideally be rolled back into the equivalent Mach-O binary -- such that it can be viewed in a disassembler -- I do not need the unpacked file to be runnable.</p>\n<p>A Windows version of the same program exists, and it is also packed. Utilities such as PE Tool make this task simple: you select the process, then the module, and then you have an unpacked binary.</p>\n<p>I am not able find any applications that can do this on the OS X side. I can imagine two broad approaches with runtime in mind:</p>\n<ul>\n<li><p>the automatic way PE Tool can generate a binary when given a process and a module</p></li>\n<li><p>attempting to roll a generic memory dump into the correct Mach-O file of the program's main module</p></li>\n</ul>\n<p>I would appreciate any advice on either of these points. I have an OS X environment at my disposal though I am not familiar with it.</p>\n<p>Advice relating to solving this problem through static analysis would also be appreciated</p>\n</div>",
    "votes": "2",
    "answers": 1,
    "views": "470",
    "tags": [
        "disassembly",
        "unpacking",
        "osx"
    ],
    "user": "NMRN",
    "time": "Nov 7, 2014 at 12:32",
    "comments": [],
    "answers_data": [
        {
            "content": "<div class=\"s-prose js-post-body\" itemprop=\"text\">\n<p>You can get some ideas from the <a href=\"https://github.com/stefanesser/dumpdecrypted\" rel=\"nofollow\">dumpdecrypted tool</a> by Stefan Esser. It's for iPhone but shouldn't be too difficult to port to OS X.</p>\n</div>",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Nov 10, 2014 at 11:37",
            "is_accepted": false,
            "comments": []
        }
    ]
}