{
    "title": "Understanding bootlog load address",
    "link": "https://reverseengineering.stackexchange.com/questions/13986/understanding-bootlog-load-address",
    "content": "I was looking at the bootlog for the WAG160N found here: https://wiki.openwrt.org/toh/linksys/wag160n and I wanted to clarify how the booting works.\n*Boot Address 0xbfc00000\nTotal memory used by CFE:  0x80401000 - 0x80528800 (1210368)*\nWhy is the boot address not within in total memory used range (0x8040100-0x80528800) of CFE? If I understand correctly 0xbfc00000 is already a virtual memory address.\nThanks!\n",
    "votes": "0",
    "answers": 1,
    "views": "467",
    "tags": [
        "ida",
        "firmware",
        "mips"
    ],
    "user": "HKC",
    "time": "Nov 19, 2016 at 7:02",
    "comments": [],
    "answers_data": [
        {
            "content": "MIPS memory mapping is pretty peculiar. The virtual address <pre><code>0xbfc00000</code></pre> (in <pre><code>kseg1</code></pre>) corresponds to the physical address <pre><code>0x1fc00000</code></pre> and is likely in ROM. I suspect that the range 0x80401000 - 0x80528800  is in RAM (<pre><code>kseg0</code></pre>), so it's natural the addresses don't match. To know more you will probably need to read the processor's datasheet and/or board schematics to figure out where exactly and how much ROM and RAM are present.\n",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Nov 19, 2016 at 9:04",
            "is_accepted": false,
            "comments": []
        }
    ]
}