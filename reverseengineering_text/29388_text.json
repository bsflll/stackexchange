{
    "title": "Translate ASM code x86 32 bits in C",
    "link": "https://reverseengineering.stackexchange.com/questions/29388/translate-asm-code-x86-32-bits-in-c",
    "content": "I have a exercise which i can't resolve it, and i need help. If anyone can help me it would be great. I have the next ASM code in x86 32 bits which i need to translate in C language:\n<pre><code>Dump of assembler code for function main:\n0x0000054d <+0>: lea ecx,[esp+0x4]\n0x00000551 <+4>: and esp,0xfffffff0\n0x00000554 <+7>: push DWORD PTR [ecx-0x4]\n0x00000557 <+10>: push ebp\n0x00000558 <+11>: mov ebp,esp\n0x0000055a <+13>: push ebx\n0x0000055b <+14>: push ecx\n0x0000055c <+15>: sub esp,0x10\n0x0000055f <+18>: call 0x450 <__x86.get_pc_thunk.bx>\n0x00000564 <+23>: add ebx,0x1a9c\n0x0000056a <+29>: mov DWORD PTR [ebp-0x10],0x0\n0x00000571 <+36>: lea eax,[ebx-0x19a0] ; “3jd9cjfk98hnd”\n0x00000577 <+42>: mov DWORD PTR [ebp-0x14],eax\n0x0000057a <+45>: sub esp,0xc\n0x0000057d <+48>: push DWORD PTR [ebp-0x14]\n0x00000580 <+51>: call 0x3e0 <strlen@plt>\n0x00000585 <+56>: add esp,0x10\n0x00000588 <+59>: mov DWORD PTR [ebp-0x18],eax\n0x0000058b <+62>: mov DWORD PTR [ebp-0xc],0x0\n0x00000592 <+69>: jmp 0x5ad <main+96>\n0x00000594 <+71>: mov edx,DWORD PTR [ebp-0xc]\n0x00000597 <+74>: mov eax,DWORD PTR [ebp-0x14]\n0x0000059a <+77>: add eax,edx\n0x0000059c <+79>: movzx eax,BYTE PTR [eax]\n0x0000059f <+82>: movsx eax,al\n0x000005a2 <+85>: imul eax,DWORD PTR [ebp-0x18]\n0x000005a6 <+89>: add DWORD PTR [ebp-0x10],eax\n0x000005a9 <+92>: add DWORD PTR [ebp-0xc],0x1\n0x000005ad <+96>: mov eax,DWORD PTR [ebp-0xc]\n0x000005b0 <+99>: cmp eax,DWORD PTR [ebp-0x18]\n0x000005b3 <+102>: jl 0x594 <main+71>\n0x000005b5 <+104>: sub esp,0x8\n0x000005b8 <+107>: push DWORD PTR [ebp-0x10]\n0x000005bb <+110>: lea eax,[ebx-0x1992] ; “[+] Code generated: %i\n”\n0x000005c1 <+116>: push eax\n0x000005c2 <+117>: call 0x3d0 <printf@plt>\n0x000005c7 <+122>: add esp,0x10\n0x000005ca <+125>: mov eax,0x0\n0x000005cf <+130>: lea esp,[ebp-0x8]\n0x000005d2 <+133>: pop ecx\n0x000005d3 <+134>: pop ebx\n0x000005d4 <+135>: pop ebp\n0x000005d5 <+136>: lea esp,[ecx-0x4]\n0x000005d8 <+139>: ret\nEnd of assembler dump.\n</code></pre>\n\nI need to divide this in basic blocks.\nMake flow chat.\nConvert this code in C.\n\nI know this code is using a loop, cause the line +102 takes again to main+71. Also, i have a bit of idea of this code, but, nothing clear. That's why i'm asking you.\nI appreciate a lot your time helping me guys.\nThank you so much!\n",
    "votes": "0",
    "answers": 1,
    "views": "654",
    "tags": [
        "disassembly",
        "assembly",
        "x86",
        "c"
    ],
    "user": "FAN",
    "time": "Oct 10, 2021 at 13:14",
    "comments": [
        {
            "user": "Edward",
            "text": "Show what work you've done so far.  Have you made a flow chart?\n",
            "time": null
        },
        {
            "user": "blabb",
            "text": ":\\>python -c \"inp='3jd9cjfk98hnd'; print(hex(sum([ord(i)*len(inp) for  i in inp ])))\" 0x3aa7\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "i got the solution.\nThe solution is on internet in the next links:\nhttps://pwnedchile.com/codigo-muerto-asm-x86/\nhttps://jaymonsecurity.com/reversing-programacion-keygen/\nhttps://www.mycompiler.io/new/c?fork=IRYzOqA\nThank Edward for your help!\n",
            "votes": "-1",
            "user": "FAN",
            "time": "Oct 11, 2021 at 21:24",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Community",
                    "text": "<span class=\"comment-copy\">As it’s currently written, your answer is unclear. Please <a href=\"https://reverseengineering.stackexchange.com/posts/29401/edit\">edit</a> to add additional details that will help others understand how this addresses the question asked. You can find more information on how to write good answers <a href=\"/help/how-to-answer\">in the help center</a>.</span>",
                    "time": null
                }
            ]
        }
    ]
}