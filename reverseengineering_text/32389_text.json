{
    "title": "How to convert variable to struct member in IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/32389/how-to-convert-variable-to-struct-member-in-ida",
    "content": "I'm working on a windows program which is walking PEB Ldr list. the related types are as follows:\n<pre><code>struct LDR_DATA_TABLE_ENTRY {\n    LIST_ENTRY InLoadOrderLinks;         // offset = 0, size = 0x10\n    LIST_ENTRY InMemoryOrderLinks;   // offset = 0x10, size = 0x10\n    // ...\n    UNICODE_STRING FullDllName;       // offset = 0x48, size = 0x10\n    UNICODE_STRING BaseDllName;     // offset = 0x58, size = 0x10\n};\n</code></pre>\nthe pseudocode IDA generated is like that:\n<pre><code>i = (LDR_DATA_TABLE_ENTRY *)NtCurrentPeb()->Ldr->InMemoryOrderModuleList.Flink;\nCurDllName = i->FullDllName.Buffer;     // FullDllName should be BaseDllName!\nCurDllNameLength = i->FullDllName.Length;\n</code></pre>\nThe problem is, <pre><code>i->FullDllName</code></pre> should be <pre><code>i->BaseDllName</code></pre>, because <pre><code>i</code></pre> is not <pre><code>LDR_DATA_TABLE_ENTRY *</code></pre> but actually <pre><code>LDR_DATA_TABLE_ENTRY * + 0x10</code></pre> (address of <pre><code>LDR_DATA_TABLE_ENTRY.InMemoryOrderLinks</code></pre>).\nThe correct output should be like that:\n<pre><code>i = NtCurrentPeb()->Ldr->InMemoryOrderModuleList.Flink;\nLDR_DATA_TABLE_ENTRY *Node = CONTAINING_RECORD(i, LDR_DATA_TABLE_ENTRY, InMemoryOrderLinks);\nCurDllName = Node->BaseDllName.Buffer;\nCurDllNameLength = Node->BaseDllName.Length;\n</code></pre>\nIn case <pre><code>i</code></pre> is an offset, Is there any way I can do to change type of <pre><code>i</code></pre> to something correct (like struct members) or just add the variable <pre><code>Node</code></pre> in IDA? The <pre><code>Node</code></pre> pointer I wrote here seems to be optimized out.\nI tried <pre><code>CONTAINING_RECORD</code></pre> but it seems not applicable here.\n",
    "votes": "0",
    "answers": 1,
    "views": "197",
    "tags": [
        "ida",
        "windows",
        "pe"
    ],
    "user": "H3d9",
    "time": "Oct 13, 2023 at 2:39",
    "comments": [],
    "answers_data": [
        {
            "content": "Right-click <pre><code>i</code></pre> and select either:\n\n<pre><code>Create new struct type</code></pre> to create a new type deducted from function-scoped access to the variable\n<pre><code>Convert to struct *</code></pre> to apply an existing type\n\nYou can inspect and manage structure types in <pre><code>Local Types</code></pre> tab (<pre><code>View/Open subviews/Local Types</code></pre>), including the types you already have (found in system APIs and debug symbols).\n",
            "votes": "0",
            "user": "mimak",
            "time": "Oct 13, 2023 at 12:59",
            "is_accepted": true,
            "comments": []
        }
    ]
}