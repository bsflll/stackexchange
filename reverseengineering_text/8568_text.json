{
    "title": "How do you can you disassemble and dump an entire binary?",
    "link": "https://reverseengineering.stackexchange.com/questions/8568/how-do-you-can-you-disassemble-and-dump-an-entire-binary",
    "content": "It's easy to seek to a particular function and dump it's contents as Assembly language. However, I cannot find an obvious way to immediately disassemble and dump an entire binary. I want to use it more like I use IDA and <pre><code>objdump</code></pre> by seeing the entire disassembly at once.\n",
    "votes": "10",
    "answers": 2,
    "views": "14k",
    "tags": [
        "binary-analysis",
        "radare2"
    ],
    "user": "MrSynAckSter",
    "time": "Nov 10, 2018 at 10:25",
    "comments": [
        {
            "user": "MrSynAckSter",
            "text": "Visual mode actually does what I want for the most part. I'm open to other approaches, though.\n",
            "time": null
        },
        {
            "user": "R4444",
            "text": "one trick -  <pre><code>pd $s | less</code></pre>\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "You can use the special \"'$' variables\" <pre><code>$s</code></pre> to get the size of your binary, and pass it as an argument to the <pre><code>pd</code></pre> command to disassemble the whole file:\n<pre><code>[0x004048bf]> pd $s\nDo you want to print 188.0K chars?\n</code></pre>\nFor more information on '$' variables available see <pre><code>?$?</code></pre>.\n",
            "votes": "13",
            "user": "Evan Carroll",
            "time": "Nov 10, 2018 at 10:25",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user",
                    "text": "<span class=\"comment-copy\">I usually use <code>objdump -d binary | less</code> command, is there anything similar can be done using r2. Just output the highlighted disassembly to stdout?</span>",
                    "time": null
                },
                {
                    "user": "jvoisin",
                    "text": "<span class=\"comment-copy\">Why not using the radare2 shell instead? If you really want to disassemble the whole binary to stdout, you can use <code>r2 -c 'pi $s'</code>, but it's much less convenient.</span>",
                    "time": null
                },
                {
                    "user": "user",
                    "text": "<span class=\"comment-copy\">But it does not highlight the syntax, that is one of the reasons I am using radare2 - to get the highlighted syntax.</span>",
                    "time": null
                },
                {
                    "user": "user",
                    "text": "<span class=\"comment-copy\">No, it did not disassemble the whole binary, it just disassembled <code>_start</code> function.</span>",
                    "time": null
                },
                {
                    "user": "jvoisin",
                    "text": "<span class=\"comment-copy\">That's the whole point. Most of the time, you're like to <i>explore</i> the binary, to use r2's analysis capabilities, instead of dumping the whole disassembly. You can of course do that inside the shell with <code>pi $s</code>.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "If you want more like an Ida experience you could try the GUI project for Radare called Bokken. \nhttps://github.com/radare/bokken\nUpdate: it seems to have been superseded by the cutter project.\n",
            "votes": "3",
            "user": "julian",
            "time": "Nov 10, 2018 at 14:47",
            "is_accepted": false,
            "comments": [
                {
                    "user": "jvoisin",
                    "text": "<span class=\"comment-copy\">Bokken is not really production-ready yet; I wouldn't recommend using it.</span>",
                    "time": null
                }
            ]
        }
    ]
}