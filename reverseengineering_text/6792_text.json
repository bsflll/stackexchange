{
    "title": "How to debug a binary with the relative path in argv[0]?",
    "link": "https://reverseengineering.stackexchange.com/questions/6792/how-to-debug-a-binary-with-the-relative-path-in-argv0",
    "content": "I have a binary <pre><code>test</code></pre> that I want to debug with gdb. As you can see <pre><code>pwd</code></pre> is <pre><code>/tmp</code></pre>:\n<pre><code>$ gdb\n(gdb) file test\nReading symbols from /tmp/test...(no debugging symbols found)...done.\n(gdb) pwd\nWorking directory /tmp\n(gdb) run\nStarting program: /tmp/test\n</code></pre>\nor\n<pre><code>$ pwd\n/tmp\n$ gdb test\nReading symbols from /tmp/test...(no debugging symbols found)...done.\nThe target architecture is assumed to be i386\n(gdb) run\nStarting program: /tmp/test\n</code></pre>\nThe problem is that gdb executes the file with the absolut path <pre><code>/tmp/test</code></pre> instead of the realtiv path <pre><code>test</code></pre>. Which means <pre><code>argv[0]=\"/tmp/test\"</code></pre>.\nHow can I make gdb execute the file with the relativ path (<pre><code>argv[0]=\"test\"</code></pre>)?\n",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "linux",
        "gdb"
    ],
    "user": "samuirai",
    "time": "Dec 8, 2014 at 14:48",
    "comments": [],
    "answers_data": [
        {
            "content": "Figured it out myself with a cool trick I didn't know before - <pre><code>set exec-wrapper</code></pre>\n<pre><code>$ cat wrapper.sh\n#!/bin/bash\np=\"test\"\nexec -a \"$p\" \"$@\"\n</code></pre>\nand in gdb\n<pre><code>(gdb) set exec-wrapper ./wrapper.sh\n</code></pre>\nThis way you can set the <pre><code>argv[0]</code></pre> to whatever you want. \nsource: https://sourceware.org/ml/gdb/2013-05/msg00049.html\n",
            "votes": "3",
            "user": "samuirai",
            "time": "Dec 8, 2014 at 15:06",
            "is_accepted": true,
            "comments": []
        }
    ]
}