{
    "title": "What is the following assembly code doing? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/22139/what-is-the-following-assembly-code-doing",
    "content": "Closed. This question is off-topic. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\n Questions asking for help reverse-engineering a specific system are off-topic unless they demonstrate an understanding of the concepts involved and clearly identify a specific problem.\n\n\nClosed 5 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\n<pre><code>str fp,[sp, -4]!\nadd fp, sp, #0\nsub sp, sp, #12\nstr r0, [fp, #-8]\nstr r1 [fp, #-12]\n\nL5:\nldr r3, [fp, #-8]\nldrb r3, [r3]\ncmp r3, #0\nbeq .L2\nldr r3, [fp, #-12]\nldrb r3, [r3]\ncmp r3, #0\nbeq .L2\nldr r3, [fp, #-8]\nldrb r2, [r3]\nldr r3, [fp, #-12]\nldrb r3, [r3]\ncmp r2, [r3]\nbne .L8\nldr r3, [fp, #-8]\nadd r3, r3, #1\nstr r3, [fp, #-8]\nldr r3, [fp, #-12]\nadd r3, r3, #1\nstr r3, [fp, #-12]\nb .L5\n\n.L8\nnop\n\n.L2\nldr r3, [fp, #-8]\ncmp r3, #0\nbne .L6\nldr r3, [fp, #-12]\ncmp r3, #0\nbne .L6\nmov r3, #0\nb .L7\n\n.L6\nldr r3, [fp, #-8]\nldrb r3, [r3]\nmov r3, r3\nldr r3, [fp, #-12]\nldrb r3, [r3]\nsub r3, r2, r3\n\n.L7\nmov r0,r3\nadd sp, fp, #0\nldr fp, [sp], #4\nbx lr\n</code></pre>\n",
    "votes": "-1",
    "answers": 1,
    "views": "879",
    "tags": [
        "disassembly",
        "assembly",
        "c",
        "arm"
    ],
    "user": "Bobby",
    "time": "5 years ago",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "please at least format the code better so it's easier to follow\n",
            "time": null
        },
        {
            "user": "Bobby",
            "text": "Thank you! will keep that in mind. I'm new to RE, could you please help me understand the above code\n",
            "time": null
        },
        {
            "user": "julian",
            "text": "Have you tried stepping through it with a debugger?\n",
            "time": null
        },
        {
            "user": "Bobby",
            "text": "yes, since there isn't any proper structure to the code, debuggers weren't of much help to me. I understand that there is some kind of if/if-else/switch happening but can't really put my finger on it\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "Very low effort question. You should at least provide some context and what you already discovered.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I think this is a <pre><code>strcmp</code></pre> function which was compiled without optimization and is really inefficient.\nHere is why:\n\nThe function only uses <pre><code>r0</code></pre> and <pre><code>r1</code></pre> which are first and the second parameter.\nBoth parameters are pointer because they are dereferenced\nAll memory access are byte long\nRead bytes are compared against '\\0'\nRead bytes are compared using the instruction <pre><code>cmp</code></pre> (subtraction without modifying the destination register)\nWhen the byte differs, the returned value is both bytes subtracted (.L6)\nIf both read byte are equal, pointers are incremented by one and it branches back to the comparison block\nThey are extra copies on the stack, it's useless and typical from non-optimized code\n",
            "votes": "2",
            "user": "wisk",
            "time": "Sep 17, 2019 at 8:52",
            "is_accepted": true,
            "comments": []
        }
    ]
}