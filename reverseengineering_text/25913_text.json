{
    "title": "ASM Debuggers that visualize the stack (beginner friendly)",
    "link": "https://reverseengineering.stackexchange.com/questions/25913/asm-debuggers-that-visualize-the-stack-beginner-friendly",
    "content": "(Cross-posted from Stack Overflow)\nAre there any debuggers that constantly show a visual of the stack and where everything is within it? For example, taking some random image:\n\nI use <pre><code>gdb</code></pre> for most debugging/learning, and while it does show the registers, I have to do something like <pre><code>x/8gx $rbp-32</code></pre> everytime I want to see the stack -- and from that I usually figure out how I want the data to show.\nAre there any debuggers that make this information friendlier and more visual? I am very, very new to asm and the visual does help when debugging the information. (I'm hoping some off-the-shelf product such as Hopper, IDA, x86db, etc.)\n",
    "votes": "0",
    "answers": 2,
    "views": "906",
    "tags": [
        "disassembly",
        "assembly",
        "debuggers",
        "stack",
        "stack-variables"
    ],
    "user": "David542",
    "time": "Sep 16, 2020 at 19:19",
    "comments": [],
    "answers_data": [
        {
            "content": "I assume you are using *nix based systems since you mentioned <pre><code>gdb</code></pre>. If you just want to print the stack/registers when you hit a break point, you can use <pre><code>command</code></pre> to set up some print statements. See here.\nInstalling pwndbg makes it a lot less exhausting as it prints out the stack and registers every time you step, with  labels on the stack identifying <pre><code>rbp</code></pre> and <pre><code>rsp</code></pre>. Additionally there are tools like GEF and PEDA that are similar, but I don't have any firsthand experience with them.\n\nAdditionally, there are a few debuggers with GUIs, if that is what you are looking for:\n\nddd: graphical front end for <pre><code>gdb</code></pre>, but you'll still see the stack as a list of values.\n\nedb: similar to <pre><code>ollydbg</code></pre>, but for Linux.\n\ngdbgui: browser based frontend for <pre><code>gdb</code></pre>.\n",
            "votes": "2",
            "user": "Shane Reilly",
            "time": "Sep 18, 2020 at 12:31",
            "is_accepted": false,
            "comments": [
                {
                    "user": "David542",
                    "text": "<span class=\"comment-copy\">thanks for all these tips. I'm currently using <code>gdbgui</code> but I have to use the print each time I want to see the stack!</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "Borland's Turbo Debugger also has a text-window-based UI, with the stack in its own window and showing which values in which locations.  It doesn't tell you what those values represent, but at least it's always visible.\n",
            "votes": "1",
            "user": "peter ferrie",
            "time": "Sep 19, 2020 at 4:51",
            "is_accepted": false,
            "comments": []
        }
    ]
}