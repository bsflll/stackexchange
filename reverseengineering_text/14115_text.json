{
    "title": "why 'ni' goes into function in Android gdb debugging?",
    "link": "https://reverseengineering.stackexchange.com/questions/14115/why-ni-goes-into-function-in-android-gdb-debugging",
    "content": "I'm debugging android JNI with gdb without source code. I use <pre><code>ni</code></pre> command to step over arm asm instructions. I suppose <pre><code>ni</code></pre> is <pre><code>step over</code></pre>, but it still goes into function like <pre><code>BL xxxx</code></pre>, and I have to use <pre><code>finish</code></pre> to get back.\nI tried <pre><code>ni</code></pre> and <pre><code>si</code></pre>, seems no difference, why?\n",
    "votes": "0",
    "answers": 1,
    "views": "308",
    "tags": [
        "android",
        "gdb"
    ],
    "user": "aj3423",
    "time": "Dec 5, 2016 at 10:14",
    "comments": [],
    "answers_data": [
        {
            "content": "You don't have the source code, so I assume you don't have any debug information with your binary either. This is just a guess, but without them, I suppose your BL is seen as a mere branch, not a subroutine call. For further explanation, see this comment.\n",
            "votes": "1",
            "user": "Community",
            "time": "May 23, 2017 at 12:37",
            "is_accepted": true,
            "comments": []
        }
    ]
}