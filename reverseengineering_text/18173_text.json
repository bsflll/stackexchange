{
    "title": "Compile C# like C++?",
    "link": "https://reverseengineering.stackexchange.com/questions/18173/compile-c-like-c",
    "content": "After reading the ins and outs of compilation differences between <pre><code>C#</code></pre> and <pre><code>C++</code></pre> , my question is, cant we compile the <pre><code>C#</code></pre>application (or dll) with Visual Studio (or with other program), so similarly to <pre><code>C++</code></pre> it stripped out many information during compilation and made an app which will be hard for decompilation like <pre><code>C++</code></pre> file.\n",
    "votes": "4",
    "answers": 1,
    "views": "559",
    "tags": [
        "c++",
        "compilers",
        "c#"
    ],
    "user": "T.Todua",
    "time": "May 5, 2018 at 19:35",
    "comments": [],
    "answers_data": [
        {
            "content": "There are a number of options:\n\nC# code can be compiled to native code (like C++ compilation) using Ngen.exe or .NET Native. Although the IL code and metadata might still be required by the runtime.\nAll kinds of information that is contained in an assembly such as type names, variable names, method names, strings, and constants can be obfuscated. This makes the purpose of a construct difficult to guess just by looking at its name. This makes an assembly more like a native binary that is stripped of debugging information, except that IL code is still much easier to decompile than native code in general. IL instructions cannot be obfuscated as easily.\nObfuscate or encrypt everything \"managed\" including the IL code and modify the native entry point of the assembly so that it calls a native function that will deobfuscate or decrypt (potentially on-demand or as-needed) IL code and metadata. The native function may call an external native library to do the job. This obviously makes decompilation much harder than even decompiling plain native code, but it comes at a run-time performance cost when execute the code. The previous two techniques have basically no performance overhead.\n",
            "votes": "6",
            "user": "Hadi Brais",
            "time": "May 6, 2018 at 2:00",
            "is_accepted": true,
            "comments": [
                {
                    "user": "T.Todua",
                    "text": "<span class=\"comment-copy\">thanks, nice answer. However, if you have given methods (examples) how to do each thing you are describing, should have been excellent answer!</span>",
                    "time": null
                }
            ]
        }
    ]
}