{
    "title": "What are my next options for firmware reversing?",
    "link": "https://reverseengineering.stackexchange.com/questions/33411/what-are-my-next-options-for-firmware-reversing",
    "content": "I have an old action camera (gopro cheap clone) and it still works fine, so I used this hardware to learn reverse engineering.\nFirmware\nflash chip on board is W25Q64BV is 8 MB spi which I dumped with\nch341 moded to 3.3v and capacitor at VCC\n\nHere is the\noriginal dump\nI was able to change wifi password in AsProgrammer by searching for a string\n\"actionCamera\" which is a default access point name. So password was 1234567890. Worked great!\nThen I learned about tool - binwalk :\n<pre><code>binwalk original.bin\n\n------------------------------------------------------------------------------------------------------------------------------\nDECIMAL                            HEXADECIMAL                        DESCRIPTION\n------------------------------------------------------------------------------------------------------------------------------\n1614336                            0x18A200                           JPEG image, total size: 5026 bytes\n1631232                            0x18E400                           JPEG image, total size: 4076 bytes\n1641984                            0x190E00                           JPEG image, total size: 3539 bytes\n1648146                            0x192612                           Copyright text: \"Copyright (c) 1998 Hewlett-Packard \n                                                                      Company\"\n1666560                            0x196E00                           JPEG image, total size: 2641 bytes\n1670144                            0x197C00                           JPEG image, total size: 4126 bytes\n1674752                            0x198E00                           JPEG image, total size: 3539 bytes\n1680914                            0x19A612                           Copyright text: \"Copyright (c) 1998 Hewlett-Packard \n                                                                      Company\"\n1699328                            0x19EE00                           JPEG image, total size: 9078 bytes\n1716530                            0x1A3132                           Copyright text: \"Copyright (c) 1998 Hewlett-Packard     \n                                                                      Company\"\n7364292                            0x705EC4                           Copyright text: \"Copyright 2008\"\n7465807                            0x71EB4F                           Copyright text: \"Copyright (c) 2004-2011, Jouni Malinen \n                                                                      <j@w1.fi> and contributors\"\n7467537                            0x71F211                           Copyright text: \"copyright notice, this list of\n                                                                      conditions and the following disclaimer. 2.\n                                                                      Redistributions in bi\"\n7645020                            0x74A75C                           AES S-Box\n7689144                            0x7553B8                           AES S-Box\n8077704                            0x7B4188                           AES S-Box\n8304960                            0x7EB940                           Copyright text: \"Copyright (c) 1996-2005 Express Logic  \n                                                                      Inc. * ThreadX MIPS32_4Kx/GNU Version G4.0c.4.0 *\"      \n------------------------------------------------------------------------------------------------------------------------------\n</code></pre>\nThen I used binwalk -e option and only one picture opened without error (settings menu background at 0x197C00), so I decided to  change it.\nFrom what I understand it has length 4126 bytes, hovewer I see that the next picture starting only at 0x198E00. There is some zero padding for some reason and I have 4608 bytes for new picture to write.\nSo just to try I am extracting picture using dd (1670144 is decimal 0x197C00):\n<pre><code>dd if=original.bin of=img_mod.jpg bs=1 skip=1670144 count=4126\n</code></pre>\nI filled original firmware with zeros where picture located (not sure if this required)\n<pre><code>dd if=/dev/zero of=modified.bin bs=1 seek=1670144 count=4126 conv=notrunc\n</code></pre>\nPutting it back :\n<pre><code>dd if=img_mod.jpg of=modified.bin bs=1 seek=1670144 conv=notrunc\n</code></pre>\nAfter uploading it worked!\nUART\nOn the board there is a lot of test points\nso I found UART with baud 115200.\noutput on initialization of camera\nI wasn't able to find RX pin on the board at least my bets didn't have any response from the console.\nOther search\n\nThe main chip is SPCA6330A datasheet no pinout unfortunately.\n\nTried OFRAK with angr backend but it always says \"generic binary\"\n\n\n<pre><code>ofrak unpack -x --gui -r --backend angr ./original.bin\n</code></pre>\n\nfolder with files\n\nSo my question where should I go next from here . No doubt there is an operating system of some sort and I want to see it! Maybe modify it??? That would be awesome!\n",
    "votes": "1",
    "answers": 0,
    "views": "61",
    "tags": [
        "firmware-analysis"
    ],
    "user": "Askhento",
    "time": "Mar 23 at 15:18",
    "comments": [],
    "answers_data": []
}