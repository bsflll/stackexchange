{
    "title": "IDA Decompiler generates wrong output on array of structures!",
    "link": "https://reverseengineering.stackexchange.com/questions/31795/ida-decompiler-generates-wrong-output-on-array-of-structures",
    "content": "There is a structure with size of 16-Bytes, and an array of it is defined.\nThe disassembly code for navigation through the array is:\n<pre><code>MOV     i, i,LSL#4\nLDR     R4, =arr_of_struct \nADD     i, i, R4\nLDR     var, [i] \n</code></pre>\nBut the decompiled code is:\n<pre><code>var = arr_of_struct[4 * i];\n</code></pre>\nWhich is wrong and should be:\n<pre><code>var = arr_of_struct[4 * i].field_0;\n</code></pre>\nI think the problem is in first line of disassembly <pre><code>MOV   i, i,LSL#4</code></pre>. Obviously it is multiplying the array index by 16 which is the size of my struct. But IDA translated this line to <pre><code>[4 * i]</code></pre> !!!\nSo the first question is what's the reason of this behavior in IDA?\nAnd the second is how can I fix this?\nEDIT:\nMore information:\n",
    "votes": "3",
    "answers": 1,
    "views": "245",
    "tags": [
        "decompilation",
        "hexrays",
        "struct",
        "array"
    ],
    "user": "E.A",
    "time": "Apr 19, 2023 at 10:25",
    "comments": [
        {
            "user": "Robert",
            "text": "Which version of IDA and decompiler do you use?\n",
            "time": null
        },
        {
            "user": "E.A",
            "text": "IDA version 7.6 SP1, Decompiler ver 7.6.0.210427\n",
            "time": null
        },
        {
            "user": "Rolf Rolles",
            "text": "You'll need to show more of the decompiler output. One line is not sufficient.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I found the solution for this issue, and post it here hope help someone someday...\nI undefined the \"arr_of_struct\" (Ctrl+U), undefined both the array and also the structure variable:\n ====> \nThe output changed to deal with the undefined variable:\n\nDeclare struct variable again (Alt+Q), and define its location as an array (Pressing *), and the output changed to the right and expected shape:\n\nNow I know how to fix it, but the first question is still remains:\nWhat's the reason of this behavior in IDA? Is there a sequence needed to consider while defining array of structures?\n",
            "votes": "1",
            "user": "E.A",
            "time": "Apr 19, 2023 at 12:13",
            "is_accepted": true,
            "comments": []
        }
    ]
}