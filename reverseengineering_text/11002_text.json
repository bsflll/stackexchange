{
    "title": "How To Set Breakpoints On An Assembly Program Not Compiled With Debugging Symbols?",
    "link": "https://reverseengineering.stackexchange.com/questions/11002/how-to-set-breakpoints-on-an-assembly-program-not-compiled-with-debugging-symbol",
    "content": "I have an executable file I put together from an demo powerpc assembly program I whipped together.\nAssemblyProgram.s\n<pre><code>.global _Start\n\n.text\n_Start:\n    addi 3, 0, 0xa\n    addi 4, 0, 0xb\n    addi 5, 0, 0xc\n    b .\n</code></pre>\nAll it does is load hex a, b, c into registers 3, 4, and 5. When I go to step through it in GDB, I am trying now to set a breakpoint on the instruction b . which is located at address 0x1000012 due to the linker script placement of the instructions.\nI can set the breakpoint no problem, but when try to continue I get an error. My example session is shown below:\n<pre><code>(gdb) target sim\nConnected to the simulator.\n(gdb) load assem-ABCRegs-ppceabi-ex.elf \n(gdb) x /4i 0x1000000\n0x1000000 <_Start>: li      r3,10\n0x1000004 <_Start+4>:   li      r4,11\n0x1000008 <_Start+8>:   li      r5,12\n0x100000c <_Start+12>:  b       0x100000c <_Start+12>\n(gdb) b *0x1000000\nBreakpoint 1 at 0x1000000\n(gdb) run\nStarting program: /home/default/PPC-Baremetal-Base/assem-ABCRegs-ppceabi-ex.elf \n\nBreakpoint 1, 0x01000000 in _Start ()\n(gdb) si\n0x01000004 in _Start ()\n(gdb) b *0x1000012\nBreakpoint 2 at 0x1000012\n(gdb) c\nContinuing.\nWarning:\nCannot insert breakpoint 2.\nCannot access memory at address 0x1000012\n\n(gdb) si\nWarning:\nCannot insert breakpoint 2.\nCannot access memory at address 0x1000012\n\n(gdb) d 2\n(gdb) si\n0x01000008 in _Start ()\n(gdb) si\n0x0100000c in _Start ()\n(gdb) \n</code></pre>\nThis is a trivial program, but it is just a learning program. I want to be able to set a breakpoint on a real program and continue (not step) through the execution until my breakpoint is hit if ever. Is this possible if I am not able to recompile?\nEDIT:\nThe above test run tries to set a breakpoint at the wrong locations (in the middle of an instruction. Below is a proper run.\n<pre><code>(gdb) target sim\nConnected to the simulator.\n(gdb) load assem-ABCRegs-ppceabi-ex.elf\n(gdb) b *0x1000008\nBreakpoint 1 at 0x1000008\n(gdb) c\nStarting program: /home/default/PPC-Baremetal-Base/assem-ABCRegs-ppceabi-ex.elf \n\n0x1000000 in _Start ()\n</code></pre>\n",
    "votes": "0",
    "answers": 1,
    "views": "4k",
    "tags": [
        "assembly",
        "gdb"
    ],
    "user": "MrJman006",
    "time": "Oct 1, 2015 at 18:49",
    "comments": [],
    "answers_data": [
        {
            "content": "Yes, you are able to debug programs without sources with <pre><code>gdb</code></pre>. You don;t need to recompile.\nThe potential problem source is in miscalculation of breakpoint address:\naddress of your branch instruction is <pre><code>0x100000c</code></pre> and not <pre><code>0x1000012</code></pre>.\nThis may explain why you can not set a breakpoint: there is no any instruction in a place where you are trying to put a breakpoint.\n",
            "votes": "0",
            "user": "w s",
            "time": "Oct 1, 2015 at 8:09",
            "is_accepted": true,
            "comments": [
                {
                    "user": "MrJman006",
                    "text": "<span class=\"comment-copy\">I see the error in my test I posted here, but I swear I did it on a valid break point address and still got the error. I am going to test and report back.</span>",
                    "time": null
                },
                {
                    "user": "MrJman006",
                    "text": "<span class=\"comment-copy\">Actually I figured out what was happening. You were right it was a mis-calculation on the break. What I get confused by now is, when I do this same process but with remote target instead of sim (i.e. through a QEMU boot up with -S -s options) It throws the error when I am about to leave the bios flash area and start executing kernel assembly instructions. Any idea on why that would be happening?</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">@MrJman006 I'd suggest you to post it as another question.</span>",
                    "time": null
                }
            ]
        }
    ]
}