{
    "title": "Ghidra decompiler does not recognize rsp being subtracted",
    "link": "https://reverseengineering.stackexchange.com/questions/32690/ghidra-decompiler-does-not-recognize-rsp-being-subtracted",
    "content": "while i'm reversing a PE binary, i got some weird decompiler output.\n\n\n\nreturn address is shown on decompiler view. \nI looked up on google, and i thought setting stack depth and editing a stack frame would help. but nothing has changed. \n\n\nis there any way to improve decompiler output?\n",
    "votes": "0",
    "answers": 1,
    "views": "220",
    "tags": [
        "ghidra",
        "decompiler"
    ],
    "user": "msh",
    "time": "Feb 2, 2024 at 9:35",
    "comments": [],
    "answers_data": [
        {
            "content": "I see that you have tried the stack depth and stack frame, but have you tried the \"Edit Function Purge...\" option for the function being called? Adding the size of the return address to this value might clean up that portion of the decompilation output.\nTo see/edit that setting you can right-click on the function name in its definition (for some reason I don't see it when I try from a call site) in the Listing view.\n",
            "votes": "1",
            "user": "goatshriek",
            "time": "Feb 2, 2024 at 10:29",
            "is_accepted": false,
            "comments": [
                {
                    "user": "msh",
                    "text": "<span class=\"comment-copy\">Can you explain it more specifically? I edited the function purge value by 8. but return address of FUN_1400036f0 is still seen on decompiler output. maybe im doing something wrong...</span>",
                    "time": null
                },
                {
                    "user": "goatshriek",
                    "text": "<span class=\"comment-copy\">I believe you would want to add 8 to whatever was there before for 64 bit systems, but there could be something else going on especially if you have made a lot of other tweaks trying to fix it. You could try a fresh load of the PE and just make the change there? It's hard to say without seeing the sample itself.</span>",
                    "time": null
                },
                {
                    "user": "msh",
                    "text": "<span class=\"comment-copy\">Thx. Helped me alot</span>",
                    "time": null
                }
            ]
        }
    ]
}