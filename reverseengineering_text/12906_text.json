{
    "title": "Edit codes in .Net Reflector with Reflexil (Compile Window)",
    "link": "https://reverseengineering.stackexchange.com/questions/12906/edit-codes-in-net-reflector-with-reflexil-compile-window",
    "content": "I'm Using .Net Reflector with Reflexil to edit or view .net Assembly codes.\nI see this picture in reflexil.net:\n\nIt Shows the \"Compile\" window.\nHow can I see this window and edit codes?\n",
    "votes": "4",
    "answers": 3,
    "views": "15k",
    "tags": [
        ".net",
        "decompiler",
        "crackme"
    ],
    "user": "56356356356",
    "time": "Dec 29, 2018 at 20:25",
    "comments": [
        {
            "user": "mrexodia",
            "text": "Try dnSpy, it has far superior decompilation and it properly supports this feature and many others (debugging) without plugins.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Decompile a function with .NET Reflector, and in the Instructions tab of the Reflexil window, right click on an instruction and choose Replace all with code...:\nhttps://www.youtube.com/watch?v=XaWtoCmOGpw#t=1m40s\n",
            "votes": "3",
            "user": "Jason Geffner",
            "time": "Jun 21, 2016 at 20:36",
            "is_accepted": false,
            "comments": [
                {
                    "user": "56356356356",
                    "text": "<span class=\"comment-copy\">Thanks @jason-geffner. Now I can open Compile Window. But I can't find the codes of decompiled program and all events are empty!</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "This blog that I wrote a a few years ago describes all the steps to modify a .net binary with Reflector and Reflexil. Not sure which steps you're missing but I recommended to read&compare.\nHowever, Today I would recommend Telerik's JustDecompile though as it has built in de-obfuscation (de4dot) and has an option to replace a section with code which is much, much, easier than writing replacement code in IL.\n/EDIT: Here's a blog I wrote about using JustDecompile and Reflector to modify a .net binary.\n",
            "votes": "3",
            "user": "Remko",
            "time": "Mar 20, 2017 at 19:24",
            "is_accepted": false,
            "comments": [
                {
                    "user": "L29Ah",
                    "text": "<span class=\"comment-copy\">Your blog link is dead.</span>",
                    "time": null
                },
                {
                    "user": "Remko",
                    "text": "<span class=\"comment-copy\">@L29Ah I checked both links and they seem to be fine, maybe temporary issue or maintenance when you checked?</span>",
                    "time": null
                },
                {
                    "user": "L29Ah",
                    "text": "<span class=\"comment-copy\">Nope, check out this traceroute: <a href=\"http://bpaste.net/show/8f65550128e1\" rel=\"nofollow noreferrer\">bpaste.net/show/8f65550128e1</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "There is a nice tool to play with .NET assemblies (https://www.digitalbodyguard.com/graywolf.html)\nGrayWolf â€“ Is a reverse engineering tool\n(focused on .NET Framework Applications)\nCurrently - is in a late beta stage It is similar to IL-Spy but this has a focue on edit/attack.\nGrayWolf was a tool I created to carry out research. The focus is on editing applications to make change quickly.\nWhat can it do:\nDE-ObfuScatE,Edit IL(Live), Add payloads, Edit attributes(public/privet), Copy strong names signing on EXE/DLL\n",
            "votes": "-1",
            "user": "Soufiane Tahiri",
            "time": "Sep 22, 2016 at 9:10",
            "is_accepted": false,
            "comments": [
                {
                    "user": "56356356356",
                    "text": "<span class=\"comment-copy\">is this program free?</span>",
                    "time": null
                },
                {
                    "user": "Soufiane Tahiri",
                    "text": "<span class=\"comment-copy\">@Ayrese yes it is</span>",
                    "time": null
                },
                {
                    "user": "Martin",
                    "text": "<span class=\"comment-copy\">While GrayWolf was a great tool in its day, I think that there are more modern and better tools for .NET reversing, such as dnSpy. dnSpy offers a nicer UI and a more robust engine (de4dot's) for handling heavily obfuscated binaries, while being able to do everything (as far as I am aware) GrayWolf can - including but not limited to IL editing.</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">This does not answer the question which was specifically about Reflexil</span>",
                    "time": null
                }
            ]
        }
    ]
}