{
    "title": "Reading the process memory yields different results",
    "link": "https://reverseengineering.stackexchange.com/questions/8598/reading-the-process-memory-yields-different-results",
    "content": "I used some code to read the process memory using the MEMORY_BASE_INFORMATION a little while back using the information provided here. However, when I list out the regions in memory, only the pages with RW pages seem to be listed out. More importantly, none of the pages with executable permissions are listed out. How could I rectify this?\nCould it have something to do with the privilege at which the process runs?\nI've attached a screenshot of the process memory in Ollydbg and what is printed out using the source below :-\n<pre><code>int main() {\n    HANDLE process = GetCurrentProcess();\n\n    MEMORY_BASIC_INFORMATION info;\n    unsigned char *p = NULL;\n\n    for ( p = NULL;\n          VirtualQueryEx(process, p, &info, sizeof(info)) == sizeof(info);\n          p += info.RegionSize )\n    {\n        if (info.State == MEM_COMMIT && (info.Type == MEM_MAPPED || info.Type == MEM_PRIVATE))\n               printf(\"%08x %08x %08x\n\", info.BaseAddress, info.RegionSize, info.Protect);\n    }\n}\n</code></pre>\n",
    "votes": "0",
    "answers": 2,
    "views": "823",
    "tags": [
        "windows",
        "ollydbg",
        "process",
        "virtual-memory",
        "pages"
    ],
    "user": null,
    "time": "Mar 30, 2015 at 12:35",
    "comments": [],
    "answers_data": [
        {
            "content": "As far as I remember  MEM_MAPPED and MEM_PRIVATE are masks.\nSo it shouldn't be compared for equivalency, it should be checked as (val & MEM_PRIVATE) != 0.\nSo your code should be corrected as follows:\n<pre><code>  int main() {\n    HANDLE process = GetCurrentProcess();\n\n    MEMORY_BASIC_INFORMATION info;\n    unsigned char *p = NULL;\n\n    for ( p = NULL;\n          VirtualQueryEx(process, p, &info, sizeof(info)) == sizeof(info);\n          p += info.RegionSize )\n    {\n        if ((info.State == MEM_COMMIT) && ((info.Type & MEM_MAPPED) || (info.Type & MEM_PRIVATE)))\n               printf(\"%08x %08x %08x\n\", info.BaseAddress, info.RegionSize, info.Protect);\n    }\n}\n</code></pre>\nHope it helps.\n",
            "votes": "0",
            "user": "w s",
            "time": "Mar 30, 2015 at 14:03",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "OllyDbg shows memory regions of all types, whereas your code doesn't show <pre><code>MEM_IMAGE</code></pre> regions.\nReplace <pre><code>if ((info.State == MEM_COMMIT) && ((info.Type & MEM_MAPPED) || (info.Type & MEM_PRIVATE)))</code></pre> with just <pre><code>if (info.State == MEM_COMMIT)</code></pre>.\n",
            "votes": "1",
            "user": "Jason Geffner",
            "time": "Mar 30, 2015 at 14:07",
            "is_accepted": false,
            "comments": []
        }
    ]
}