{
    "title": "What are these blue indexes in the disasm output? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/6883/what-are-these-blue-indexes-in-the-disasm-output",
    "content": "Closed. This question needs details or clarity. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Add details and clarify the problem by editing this post.\n\n\nClosed 10 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nI'm working on a binary that has a lot of FPU operations, and even though IDA (Hex rays) decompiles properly most of them, there's cases like this:\n\nWhich \"decompile\" to:\n\nIs there any way I can fix that?\nI tried undefining the function (U) and then defining it again (C -> P), but sadly it doesn't work.\nP.S. If I open the executable in another instance of IDA (without my IDB), it decompiles just fine:\n",
    "votes": "1",
    "answers": 0,
    "views": "100",
    "tags": [
        "ida",
        "hexrays",
        "float"
    ],
    "user": "rev",
    "time": "10 years ago",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "Please, when you post screenshots, make sure they refer to the same code, and contain all relevant information. Your assembler listing doesn't seem to contain any float operations, while the first decompiled listing definitely has them, and the second listing has them as well (implicitly). But the two decompiled listings call different functions, so they seem to be from different parts of the object. And since the operands are missing from the assembly, we can't even match the assembly to either of the other two. So how should anybody figure out what's wrong from what you've given us?\n",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "The blue zeroes? Aren't they similar to the next number (obviously, stack pointer depth); something like FPU stack pointer depth? Check somewhere where they are not <pre><code>0</code></pre>. (Does IDA come with a manual?)\n",
            "time": null
        },
        {
            "user": "rev",
            "text": "@GuntramBlohm sorry if it seemed like no, but it's the actual decompiler output. I cannot tell you why, but it's what the decompiler shows me when I press TAB. Jongware: yeah, I supposed it's the FPU stack, but it only appears now and then. I cannot make it always appear, and it only shows up when the decompilation has a lot of __asm and doesn't have to do with the actual disassembled code.\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "hex-rays.com/products/decompiler/manual/fpu.shtml explains it\n",
            "time": null
        }
    ],
    "answers_data": []
}