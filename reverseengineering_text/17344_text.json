{
    "title": "Assuming you know everything about a hardware platform, can you reverse the BLOB that is required for its operation? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/17344/assuming-you-know-everything-about-a-hardware-platform-can-you-reverse-the-blob",
    "content": "Closed. This question needs to be more focused. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Update the question so it focuses on one problem only by editing this post.\n\n\nClosed 7 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nI do not understand, if you know everything there is to be known about your hardware, can't you work your way up and find out what the binary does exactly?\n",
    "votes": "1",
    "answers": 1,
    "views": "56",
    "tags": [
        "hardware",
        "binary"
    ],
    "user": "StdErr",
    "time": "7 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "One problem here is that it might be hard to know all facts about the hardware - a great example are the current Meltdown and Spectre security problems, which rely on side-channel effects not (precisely) documented by the processor vendors.\nSo in general, in cases like these you would have a hard time figuring out what some piece of binary code trying to exploit these properties really does.\nHowever, since you are asking about a BLOB driving a certain piece of hardware, having descriptions of register, timing, interrupt, DMA (etc.)  behavior and, if possible, schematics or HDL descriptions of the hardware components, would at least go a long way in finding out what the binary does exactly.\n",
            "votes": "2",
            "user": null,
            "time": "Jan 31, 2018 at 1:29",
            "is_accepted": false,
            "comments": []
        }
    ]
}