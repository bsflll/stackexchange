{
    "title": "gdb shows wrong instruction",
    "link": "https://reverseengineering.stackexchange.com/questions/13881/gdb-shows-wrong-instruction",
    "content": "I'm debugging <pre><code>android jni</code></pre> with <pre><code>gdb</code></pre>. There's a <pre><code>jni</code></pre> function <pre><code>A()</code></pre>, I need to set <pre><code>breakpoint</code></pre> there and step through. I calculated the address with <pre><code>module_base+offset</code></pre>, which is <pre><code>0x99B62C7A</code></pre>, then I tried to verify if it's the right address, with <pre><code>gdb</code></pre> command:\n<pre><code>display /5i 0x99B62C7A\n</code></pre>\nIt prints some unexpected instructions, which is different from <pre><code>IDA</code></pre>:\n\nAnd if I put a <pre><code>breakpoint</code></pre> there and click on the UI to trigger the <pre><code>breakpoint</code></pre>, the process crashes with <pre><code>SIGSEGV</code></pre>. \nSo why <pre><code>gdb</code></pre> displays different instructions? Is the crash has something to do with the bad instruction?\n",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "android",
        "gdb"
    ],
    "user": "aj3423",
    "time": "Nov 9, 2016 at 8:46",
    "comments": [],
    "answers_data": [
        {
            "content": "Your instructions shown by Ida are Thumb-mode instructions. The easiest way to verify this is by checking the addresses - each instruction has 2 bytes. Gdb doesn't know this however, and assumes 4 byte arm instructions. When an object has a symbol table, gdb can detect the instruction mode from that, but will fallback to a default mode when it can't. You can change this fallback mode; <pre><code>set arm fallback-mode thumb</code></pre> should do the trick.\nThis explains the SIGSEGV as well as breakpoints use different opcodes in arm and thumb mode.\n",
            "votes": "6",
            "user": "Guntram Blohm",
            "time": "Nov 8, 2016 at 10:07",
            "is_accepted": true,
            "comments": []
        }
    ]
}