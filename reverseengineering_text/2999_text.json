{
    "title": "Lossless Rice Compression",
    "link": "https://reverseengineering.stackexchange.com/questions/2999/lossless-rice-compression",
    "content": "I am trying to figure out how the Lossless Rice compression algorithm works on the following file. Here is a DICOM file.\nLooking at the information I can see:\n<pre><code>$ gdcmdump I160 | grep \"Tamar Compression Type\"\n(07a1,1011) CS [LOSSLESS RICE ]                                # 14,1 Tamar Compression Type\n</code></pre>\nI can open the image using TomoVision. The image is 512x512, 16bits (unsigned).\nThe compressed stream:\n<pre><code>$ gdcmraw -t 07a1,100a I160 comp.raw\n</code></pre>\ncontains (hexdump comp.raw):\n<pre><code>1A D5 F8 EB  F2 77 A5 CE  A3 54 D5 2A  C0 5D AA 32...\n</code></pre>\nBut TomoVision seems to output a series of zeroes until byte 0x1DE. I can also use a command line tool: DICOMatic to process the file. However without a proper license, the generated file contains a waterwark. So only the first few bytes looks ok:\n<pre><code>$ gdcmraw /tmp/I160.dcm /tmp/pixeldata.raw\n$ hexdump /tmp/pixeldata.raw |less\n</code></pre>\nSome more encoded files can be found here.\n",
    "votes": "2",
    "answers": 1,
    "views": "758",
    "tags": [
        "decryption"
    ],
    "user": "tibar",
    "time": "Nov 4, 2013 at 11:22",
    "comments": [
        {
            "user": "Ange",
            "text": "this looks related. Also, providing a non-RICE dicom and a non-graphical tool (unlike TomoVision) supporting the RICE-compressed file would help. (5 years old ?)\n",
            "time": null
        },
        {
            "user": "asheeshr",
            "text": "You can edit the question and make changes. If you want to ask about specific aspects, or maybe try out a different approach, you can post another question. The only restriction being that it should be distinct enough to not warrant a close vote.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Not worth any bounty, but it might help, as <pre><code>Tomovision.exe</code></pre> doesn't look obfuscated in any way after a quick look, and contains the algorithm you're looking for:\n\nopen it in your favorite disassembler\ncheck for reference to <pre><code>RICE</code></pre> strings (such as <pre><code>C:\\TomoVision\\Prog\\Prog_Lib\\TomoVision_Convert\\NEMA_Compression_RICE_decode.cpp</code></pre> at address <pre><code>4F59C4</code></pre>)\nstudy the ASM code - a.k.a. do your homework ;)\n",
            "votes": "2",
            "user": "Ange",
            "time": "Nov 4, 2013 at 14:50",
            "is_accepted": true,
            "comments": []
        }
    ]
}