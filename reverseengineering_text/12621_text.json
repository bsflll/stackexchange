{
    "title": "Issue decompiling c# method",
    "link": "https://reverseengineering.stackexchange.com/questions/12621/issue-decompiling-c-method",
    "content": "I'm trying to decompile a c# dll and on a particular method I'm getting this result\n<pre><code>public IEnumerable<Guid> GetDbIdentifiers(int classId)\n{\n    switch ((794999935 == 794999935) ? 1 : 0)\n    {\n    case 0:\n    case 2:\n        IL_1E:\n        break;\n    case 1:\n        goto IL_1F;\n    }\n    goto IL_1E;\n    IL_1F:\n    if (0 == 0)\n    {\n    }\n    if (1 == 0)\n    {\n    }\n    int arg_2E_0 = 0;\n    DatabaseHandler.Class106 @class = new DatabaseHandler.Class106(-2);\n    @class.databaseHandler_0 = this;\n    @class.int_3 = classId;\n    return @class;\n}\n</code></pre>\nIt's calling a inner class Class106 inside DatabaseHandler, but it seems it cannot decompile this inner class.\nI tried dotPeek, ILSpy, JustDecompile and Reflector.\nThe best result I got was with Reflector, it decompiled the class partially. The definition is this:\n<pre><code>[CompilerGenerated]\nprivate sealed class Class106 : IDisposable, IEnumerable<Guid>, IEnumerator<Guid>, IEnumerable, IEnumerator\n</code></pre>\nI read in many forums that Enumerators are decompiled as inner classes and no decompiler can produce usable code. It seems the case, since the Class106 implements IEnumerable and IEnumerator interfaces.\nDoes anyone have any clue on how I could patch this manually?\n",
    "votes": "0",
    "answers": 1,
    "views": "5k",
    "tags": [
        "decompilation",
        "dll",
        "c#"
    ],
    "user": "rbasniak",
    "time": "May 14, 2016 at 21:19",
    "comments": [
        {
            "user": "svick",
            "text": "Is this an obfuscated assembly? If not, the common decompilers should have no problem with that. And I don't understand what are you actually asking: what kind of patch are you talking about? Also, including the \"partially decompiled\" code might be useful.\n",
            "time": null
        },
        {
            "user": "josh",
            "text": "ILSpy is not able to decompile inner classes. You might switch to IL view to see them. Perhaps the following stov posting could help you:reverseengineering.stackexchange.com/questions/9178/â€¦. In case you wish to modify, Reflexil is very worth to look at.\n",
            "time": null
        },
        {
            "user": "kostas1337",
            "text": "![enter image description here](i.sstatic.net/Uq32Z.png) how can i know the Obfuscator for exe?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "You file is obfuscated with ConfuserEX and I know it because of the way the ControlFlow looks. ControlFlow is simply the fact that the method body seems to be confusing / puzzling, with Switch Cases and Gotos.\nIf you dig into Google, and look for \"ConfuserEX Deobfuscator\" you will be able to download a few tools to clean your protected assembly (mainly on tuts4you's forum).\nCheers.\n",
            "votes": "2",
            "user": "XenocodeRCE",
            "time": "May 12, 2016 at 10:19",
            "is_accepted": false,
            "comments": []
        }
    ]
}