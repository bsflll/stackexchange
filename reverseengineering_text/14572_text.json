{
    "title": "How to sniff HTTPS traffic of apps that ignore system proxy setting? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/14572/how-to-sniff-https-traffic-of-apps-that-ignore-system-proxy-setting",
    "content": "Closed. This question needs to be more focused. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Update the question so it focuses on one problem only by editing this post.\n\n\nClosed 8 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nI want to sniff and decrypt HTTPS traffic of apps that ignore system proxy setting on macOS. If I understand correctly, common tools like Charles cannot help. How could I achieve that?\n",
    "votes": "-1",
    "answers": 2,
    "views": "590",
    "tags": [
        "sniffing",
        "https-protocol"
    ],
    "user": "an0",
    "time": "8 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "If you can install an extra CA, it shouldn't be a problem. Mitmproxy has documentation on how to set up transparent intercepting. \nhttp://docs.mitmproxy.org/en/stable/transparent.html\n",
            "votes": "1",
            "user": "Willem",
            "time": "Feb 5, 2017 at 0:40",
            "is_accepted": true,
            "comments": [
                {
                    "user": "an0",
                    "text": "<span class=\"comment-copy\">Sorry, but what is CA?</span>",
                    "time": null
                },
                {
                    "user": "Arminius",
                    "text": "<span class=\"comment-copy\">@an0 <a href=\"https://en.wikipedia.org/wiki/Certificate_authority\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Certificate_authority</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "Get mitmproxy running. Set up that as the proxy for HTTP and HTTPS. Then load a web browser and to go http://mitm.it and download the newly generated certificate. Double click the file you just downloaded. Then within Keychains you'll want to tell the system to trust that cert (\"always trust\"). \nThen what I typically do is set the Router to the IP of the host running mitmproxy. Run mitmproxy with the transparent settings (-T) I believe.\n",
            "votes": "0",
            "user": "justin",
            "time": "Feb 5, 2017 at 22:14",
            "is_accepted": false,
            "comments": []
        }
    ]
}