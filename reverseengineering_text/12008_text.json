{
    "title": "Idapython: How to get the opcode bytes corresponding to an instruction?",
    "link": "https://reverseengineering.stackexchange.com/questions/12008/idapython-how-to-get-the-opcode-bytes-corresponding-to-an-instruction",
    "content": "How do I get the <pre><code>8B 45 FC</code></pre> corresponding to the  <pre><code>mov     eax, [rbp+var_4]</code></pre>\netc. via idapython?\nI did not come up with a better solution than\n\nGetting the instruction via <pre><code>idautils.DecodeInstruction()</code></pre>\nGetting the instruction's size in bytes\nLooping over all bytes of the instruction and fetching the content via <pre><code>idc.Byte()</code></pre>\n\nIs there a better solution, e.g. an api call (which I did not find)?\n",
    "votes": "3",
    "answers": 1,
    "views": "7k",
    "tags": [
        "idapython",
        "idapro-sdk"
    ],
    "user": "langlauf.io",
    "time": "Feb 11, 2016 at 19:23",
    "comments": [],
    "answers_data": [
        {
            "content": "Another solution:\n<pre><code>ea = ScreenEA() # Or whatever you want\nbuf = idc.GetManyBytes(ea, ItemSize(ea))\n</code></pre>\n",
            "votes": "8",
            "user": "joxeankoret",
            "time": "Feb 11, 2016 at 20:52",
            "is_accepted": true,
            "comments": [
                {
                    "user": "langlauf.io",
                    "text": "<span class=\"comment-copy\">Much better than my try. If there is really no particular api function, this may be the best solution.</span>",
                    "time": null
                }
            ]
        }
    ]
}