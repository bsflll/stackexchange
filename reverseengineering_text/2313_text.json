{
    "title": "Attaching GDB to a specific fork",
    "link": "https://reverseengineering.stackexchange.com/questions/2313/attaching-gdb-to-a-specific-fork",
    "content": "I am trying to reverse engineer a Linux binary that makes several <pre><code>fork()</code></pre> calls. I am using GDB 7.5 on Ubuntu. What I am trying to do with GDB is attach to a certain <pre><code>fork()</code></pre> (say the second call). Is the only way to do this to set <pre><code>follow-fork-mode</code></pre> to <pre><code>child</code></pre> and catch all calls to <pre><code>fork</code></pre> and manually switch it each time?\n",
    "votes": "10",
    "answers": 2,
    "views": "3k",
    "tags": [
        "linux",
        "gdb",
        "multi-process"
    ],
    "user": "Compster",
    "time": "Jun 22, 2013 at 1:27",
    "comments": [],
    "answers_data": [
        {
            "content": "You can also use <pre><code>set detach-on-fork off</code></pre>, as said in the documentation:\n\n<pre><code>set detach-on-fork MODE</code></pre>\n       Tells gdb whether to detach one of the processes after a fork, or\n       retain debugger control over them both.\n\nThe documentation says also this:\n\nIf you choose to set <pre><code>detach-on-fork</code></pre> mode off, then GDB will retain\n  control of all forked processes (including nested forks).  You can list\n  the forked processes under the control of GDB by using the\n  <pre><code>info inferiors</code></pre> command, and switch from one fork to another by using\n  the <pre><code>inferior</code></pre> command\nTo quit debugging one of the forked processes, you can either detach\n  from it by using the <pre><code>detach inferiors</code></pre> command (allowing it to run\n  independently), or kill it using the <pre><code>kill inferiors</code></pre> command.\n",
            "votes": "5",
            "user": "jvoisin",
            "time": "Jul 15, 2013 at 10:17",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "What you describe is how I've typically approached this.  Setting a breakpoint on <pre><code>fork</code></pre> itself provides a nice spot to change this mode, if necessary.\nOr, if the child threads / processes are \"stable\", you can switch to them after the fact with the <pre><code>inferior</code></pre> command.\nhttp://sourceware.org/gdb/onlinedocs/gdb/Forks.html\n",
            "votes": "2",
            "user": "Jonathon Reinhart",
            "time": "Jun 28, 2013 at 5:48",
            "is_accepted": false,
            "comments": []
        }
    ]
}