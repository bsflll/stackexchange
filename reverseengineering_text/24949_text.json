{
    "title": "Working with strong obfuscated Java",
    "link": "https://reverseengineering.stackexchange.com/questions/24949/working-with-strong-obfuscated-java",
    "content": "I've got a jar file, that is strong obfuscated.\n\nWhen I tried to put it into decompilers such as bytecode-viewer and luyten I seen many lines of traps and Chinese letters.\nI tried to deobfuscate it using java-debofuscator but unfortunately, the deobfuscator crashes. \n\ndownload jar file\n\nCan someone help me or give me advice on how I can deal with it?\nThanks in advance for any help.\n",
    "votes": "2",
    "answers": 1,
    "views": "661",
    "tags": [
        "disassembly",
        "decompilation",
        "java",
        "deobfuscation"
    ],
    "user": "Vezmoq",
    "time": "May 8, 2020 at 12:12",
    "comments": [],
    "answers_data": [
        {
            "content": "First off, have you tried the Krakatau decompiler? Krakatau is designed specifically for working with obfuscated Java bytecode, although the decompiler doesn't support lambdas and isn't very user friendly.\nThat being said, renamed identifiers is not something any tool will able to help you with. You'll just have to reverse engineer it and change them to more meaningful names yourself.\nIf decompilation fails, you can also try the Krakatau disassembler. The advantage of disassembly is that it always works, no matter how heavily the bytecode has been obfuscated. It lets you see what's really in the bytecode without the risk of things getting messed up by decompilation. The downside is that it's generally a lot harder to read.\n",
            "votes": "1",
            "user": "Antimony",
            "time": "May 8, 2020 at 12:38",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Vezmoq",
                    "text": "<span class=\"comment-copy\">Yes, I tried to use Krakatau, but decompiling process removes all important classes (these with Chinese name).</span>",
                    "time": null
                },
                {
                    "user": "Antimony",
                    "text": "<span class=\"comment-copy\">No it doesn't. They'll just have different filenames than you might expect since Krakatau forces the output source to have ascii filenames in order to avoid shenanigans. Look closely at the files the decompiler outputs. They will be there, just with weird filenames.</span>",
                    "time": null
                },
                {
                    "user": "got trolled too much this week",
                    "text": "<span class=\"comment-copy\">@Vezmoq: recaf can rename classes/methods to ascii. That's usually a good first step, although sometimes doing that breaks code because some obfuscators use reflection from strings (not necessarily encrypted) and that's enough for recaf not be able to deal with the translation correctly.</span>",
                    "time": null
                }
            ]
        }
    ]
}