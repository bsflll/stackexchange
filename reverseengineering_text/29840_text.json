{
    "title": "Will \"Reset decompiler information\"+\"All caches\" invalidate functions marked as decompiled?",
    "link": "https://reverseengineering.stackexchange.com/questions/29840/will-reset-decompiler-informationall-caches-invalidate-functions-marked-as",
    "content": "In his answer to a question, Rolf pointed me to the Edit -> Other -> Reset decompiler information functionality, suggesting that \"All caches\" will force the decompiler to pick up immediately on changes I made to the disassembly.\n\nThis sounds like a sensible idea. However, he cautions that the resetting will also mean that the decompiler has more work to do on subsequent decompilations. Makes sense.\nNow the question I have is: when I use the Mark as decompiled menu item on the pseudo code and only then use the Reset decompiler information functionality, will the functions marked decompiled be exempt from the clearing of caches?\n",
    "votes": "0",
    "answers": 1,
    "views": "401",
    "tags": [
        "hexrays"
    ],
    "user": "0xC0000022L",
    "time": "Jan 10, 2022 at 14:18",
    "comments": [],
    "answers_data": [
        {
            "content": "They are not exempt from the caches being cleared; marking something as decompiled simply changes the color of the function in the <pre><code>func_t</code></pre>, and does not affect the caches in any way. However, this is not a big deal. The \"caches\" referred to by that menu item simply mean the saved <pre><code>cfunc_t</code></pre> and <pre><code>mba_t</code></pre> data structures for that function, which Hex-Rays uses to accelerate subsequent decompilations of functions you've already looked at. You won't lose any annotations (names, comments, types, having marked a function as decompiled, etc.) by clearing the caches. I clear the caches multiple times a day on databases that are important to me; don't worry about losing your work. If you're really paranoid, save your database or create a snapshot first before giving it a try; you'll see that you don't lose any of your work.\nThe only negative effect is the slowdown on re-decompiling unrelated functions that you otherwise have no interest in clearing the cache entries for. If you don't like that slowdown, an IDAPython one-liner <pre><code>ida_hexrays.mark_cfunc_dirty(funcEa)</code></pre> will clear the <pre><code>cfunc_t</code></pre> cache entry for the function at address <pre><code>funcEa</code></pre> (though I'm not sure if it will also purge the <pre><code>mba_t</code></pre> cache entry, which is likely necessary to trigger the changes stemming from the disassembly listing).\n",
            "votes": "2",
            "user": "Rolf Rolles",
            "time": "Jan 10, 2022 at 19:46",
            "is_accepted": true,
            "comments": []
        }
    ]
}