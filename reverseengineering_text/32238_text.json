{
    "title": "Cannot debug native library of Android apk",
    "link": "https://reverseengineering.stackexchange.com/questions/32238/cannot-debug-native-library-of-android-apk",
    "content": "・I am debugging an apk file.\n・The address I want to stop at BreakPoint is in the native library(.so) (no function name).\n・The native library has a \"JNI_OnLoad\" function, so I set BreakPoint.\n　After starting the apk with \"adb shell am start -a ・・・\", I connected with IDA Pro RemoteDebugger.\n　Then I connected with \"jdb -connect com.sun.jdi.SocketAttach...\".\n・However, even though I keep pressing F9, the native library(.so) I want to analyze does not appear.\n　It crashes after going back and forth between libc.so and linker.\n・When I run \"memory module list\" using objection, the native library(.so) I want to analyze appears.\nHow can I solve this problem?\n",
    "votes": "1",
    "answers": 0,
    "views": "98",
    "tags": [
        "apk"
    ],
    "user": "momonga",
    "time": "Aug 30, 2023 at 7:25",
    "comments": [
        {
            "user": "re100io",
            "text": "Have you checked function in init_array section? Maybe there are some anti-debug measures before JNI_ONLOAD was executed such as a infinity loop?\n",
            "time": null
        },
        {
            "user": "momonga",
            "text": "Thanks for the answer. I had not checked the init_array because there were over 400 functions in it. I knew you are taking countermeasures. If you have a better way to identify where the countermeasures are being taken, I'd be glad to know.\n",
            "time": null
        }
    ],
    "answers_data": []
}