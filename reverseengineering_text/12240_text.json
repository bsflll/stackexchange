{
    "title": "Create unprotected executable for program that decrypts itself at run-time dynamically? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/12240/create-unprotected-executable-for-program-that-decrypts-itself-at-run-time-dynam",
    "content": "Closed. This question needs details or clarity. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Add details and clarify the problem by editing this post.\n\n\nClosed 9 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nSay i have Windows executable that looks like normal one, but actually has encrypted segments or blocks of code, and the way it calculates key to decrypt itself at run-time way hard for me. \nI'd like to try create a decrypted version of that program by stripping out \"self-decryptor part\" and exporting program as it was at run-time (under debug). I am not looking for way to find & remove decryption-related code.\nHaving IDA Pro (or  other tools), how can i re-save executable file at run-time (after program decrypted itself), or i am thinking in completely wrong direction and should not try doing it?\nI've read this answer and question but i am wondering if i really cannot just re-save executable at runtime and try to make it \"runnable\"? Is this possible?\n",
    "votes": "0",
    "answers": 1,
    "views": "446",
    "tags": [
        "ida",
        "windows",
        "x86",
        "pe",
        "decryption"
    ],
    "user": "Croll",
    "time": "9 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "If you are dealing with a packed/crypted executable it is not possible to just dump the file from memory and make it \"runnable\". You need to do at least two things:\n\nModify the Entry Point so that you bypass the execution of the code in the unpacking stub.\nFix the import table.\n\nTo do these two things, you need to have some basic understanding about the PE file format. You can find some useful links about the PE file format in this answer.\nIf you know what type of crypter/packer is being used on the file, feel free to upload the sample or tell me so I can maybe give you some guidelines on obtaining the payload. You can check this with a tool like PEid or ExeInfo.\n",
            "votes": "2",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": true,
            "comments": []
        }
    ]
}