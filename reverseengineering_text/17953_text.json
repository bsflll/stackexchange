{
    "title": "How can I export only the mnemonics from objdump (or any other program)?",
    "link": "https://reverseengineering.stackexchange.com/questions/17953/how-can-i-export-only-the-mnemonics-from-objdump-or-any-other-program",
    "content": "I want to do an analysis with the mnemonics. I can export everything to text but I only need the last column. Any idea on how can I solve this?\nIn other words of this output of objdump (objdump -d file) \n\nhow can I only extract: \n<pre><code>lea \nlea\npush\nnop\nnop\nlea\nmov\nlea\n</code></pre>\n",
    "votes": "-2",
    "answers": 2,
    "views": "2k",
    "tags": [
        "disassembly",
        "malware",
        "objdump",
        "assembly"
    ],
    "user": "Stone",
    "time": "Apr 11, 2018 at 8:06",
    "comments": [
        {
            "user": "Megabeets",
            "text": "Looks to me like you copied and pasted the content of another question. This is not how our community work. And next time, pay attention to the sentences you copy, you asked for the \"middle\" column but mentioned you want the mnemonics (lea, push,...) which in the right column\n",
            "time": null
        },
        {
            "user": "Stone",
            "text": "@Megabeets He is absolutely right ... I am working on a project and I need to find out how to do it. where I saw her would not let me ask.\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "@WilberConcepci√≥nLugo I edited the question, but please use your own words next time. Ask a friend to check your English if you're not sure.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "getting start address \n<pre><code>objdump.exe -f calc.exe | grep start\nstart address 0x01012d6c\n</code></pre>\narguments passed to objdump via @File syntax where @File is disopt.txt \ncontaining arguments as below \n<pre><code>C:\\>cat disopt.txt\n-d\n-M intel\n--no-show-raw-insn\n--start-address         0x1012d6c\n--stop-address          0x1012d8f\n</code></pre>\nC:>objdump.exe @disopt.txt c:\\Windows\\System32\\calc.exe | sed 1,7d | awk \"{print $2}\"\n<pre><code>call\npush\npush\ncall\nxor\nmov\nmov\nlea\npush\ncall\n</code></pre>\nsed to remove first 7 lines\nawk to print second column\nactual disassembly without stripping lines and columns\n<pre><code>C:\\>objdump.exe @disopt.txt c:\\Windows\\System32\\calc.exe\n\nc:\\Windows\\System32\\calc.exe:     file format pei-i386\n\n\nDisassembly of section .text:\n\n01012d6c <.text+0x11d6c>:\n 1012d6c:       call   0x1012abc\n 1012d71:       push   0x58\n 1012d73:       push   0x1012ee8\n 1012d78:       call   0x100c768\n 1012d7d:       xor    ebx,ebx\n 1012d7f:       mov    DWORD PTR [ebp-0x1c],ebx\n 1012d82:       mov    DWORD PTR [ebp-0x4],ebx\n 1012d85:       lea    eax,[ebp-0x68]\n 1012d88:       push   eax\n 1012d89:       call   DWORD PTR ds:0x100114c\n</code></pre>\nEdit To answer the comment about two mnemonic (the prefix operands like lock  rep , repz , repnz etc )\n<pre><code>:\\>objdump --no-show-raw-insn -d calc.exe | awk \"{ if($2==\\\"lock\\\") {print $2,$3} }\"\nlock ja\nlock (bad)\nlock add\nlock xadd\n:\\>objdump --no-show-raw-insn -d calc.exe | awk \"{ if($2==\\\"rep\\\") {print $2,$3} }\"\nrep stos\nrep movsl\n</code></pre>\n",
            "votes": "1",
            "user": "blabb",
            "time": "Apr 10, 2018 at 23:34",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Stone",
                    "text": "<span class=\"comment-copy\">ok, but how to know the address of the entry point to start disassembling? --start-address   ??</span>",
                    "time": null
                },
                {
                    "user": "Stone",
                    "text": "<span class=\"comment-copy\">and the opcodes that are two words (lock in) in this way only \"lock\" is extracted?</span>",
                    "time": null
                },
                {
                    "user": "Stone",
                    "text": "<span class=\"comment-copy\">I want to execute the same file yours disopt.txt, but in the argument \"--start-address\" is the address of the entry point ...                       objdump @disopt.txt c:\\Windows\\System32\\calc.exe | awk \"{ if($2==\\\"lock\\\") {print $2,$3} else print $2 }\"    C:\\&gt;cat disopt.txt -d --no-show-raw-insn --start-address         ????</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">objdump -f  bin  shows the entry point use that as i already answered</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "Columns in objdump output are commonly separated by tabs, so something like the following should help:\n<pre><code>objdump -d program | sed  '/[^\\t]*\\t[^\\t]*\\t/!d' | cut -f 3 | sed 's/ .*$//' \n</code></pre>\nThe first sed invocation removes lines not containing at least two tab characters (i.e. labels and other non-code output), cut returns the third tab-separated column of the remaining output and the final sed gets rid of the first space character and the rest of each line, i.e. all text after the opcode.\n(This question might have been better suited for the unix stackexchange community)\n",
            "votes": "1",
            "user": null,
            "time": "Apr 10, 2018 at 16:00",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Stone",
                    "text": "<span class=\"comment-copy\">that command line and it still does not work for me, can you help me? Thanks.</span>",
                    "time": null
                },
                {
                    "user": "user22967",
                    "text": "<span class=\"comment-copy\">Did you get any errors? What OS are you using?</span>",
                    "time": null
                },
                {
                    "user": "Stone",
                    "text": "<span class=\"comment-copy\">There is something wrong in that sequence with the \"sed\". Windows 10.Did it work for you?</span>",
                    "time": null
                },
                {
                    "user": "user22967",
                    "text": "<span class=\"comment-copy\">Yes, however I ran this on Linux (Debian 9 on x64) with GNU objdump (GNU Binutils for Debian) 2.28, sed (GNU sed) 4.4 and cut (GNU coreutils) 8.26. However, I don't think any of these options are exotic. Can you upload the output you get from objdump somewhere?</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">@MichaelEngel just replace the single quote with double quote should work as is in windows</span>",
                    "time": null
                }
            ]
        }
    ]
}