{
    "title": "Disassemble bios code",
    "link": "https://reverseengineering.stackexchange.com/questions/30712/disassemble-bios-code",
    "content": "I have a Gigabyte G41MT-S2PT motherboard with Intel core 2 Pentium processor installed on it for test.I decided to disassemble its bios code.Its bios produced by Award Software International and its version is FA.Despite I have attempted so much to find source code on the Internet,I didn't reach any success.I guess bios is closed source and no source code has been published.So I got a bios backup image using Universal Bios Backup Toolkit to disassemble the code.but it seems not to be the pure hex code belonging to x86 assembly.It seems some extra data or a header is added to.Do somebody know the exact format of file with .rom extension produced by Universal Bios Backup Toolkit? Unfortunately I didn't be successful by looking for it to!\n",
    "votes": "4",
    "answers": 2,
    "views": "2k",
    "tags": [
        "x86",
        "bios"
    ],
    "user": "Farshid",
    "time": "Jul 30, 2022 at 5:30",
    "comments": [
        {
            "user": "raspiduino",
            "text": "Yes, most BIOS is closed-source. I think CPU-Z can also extract the BIOS. You can then load it to IDA to see if it can parse your bios image. There are some tutorials on the Internet about RE bios, try Google it\n",
            "time": null
        },
        {
            "user": "Farshid",
            "text": "No.CPU-Z just generate a text file contain some report.I couldn't find nothing useful.\n",
            "time": null
        },
        {
            "user": "Robert",
            "text": "Possible duplicate of reverseengineering.stackexchange.com/questions/12772/â€¦\n",
            "time": null
        },
        {
            "user": "raspiduino",
            "text": "@Farshid really? There was an option to dump BIOS in the tool list. Have you tried that?\n",
            "time": null
        },
        {
            "user": "Farshid",
            "text": "Of course.I did it today.there is no dump bios option.just there are save bios and bios options,but when I used save bios,it gave me a text file with some hex code in it.unfortunately the code doesn't belong to assembly and it is meaningless.It seems to be a report file.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "The text file produced by CPU-Z is dump of the upper 64K of the run-time memory image. That is just a small part of the code which is contained in the flash ROM. The full image (<pre><code>41mts2p2.fa</code></pre> in the extracted archive) contains multiple modules with compressed (using LZH algorithm) code and data. This is where the name Award Modular BIOS comes from.\nA small non-compressed bootblock at the end of the image is responsible for the minimal hardware initialization, unpacking the first of the modules which performs the Power-On Self Test (POST) and then unpacks and execute the rest of the modules as necessary. You can extract them manually or using a vendor tool (CBROM32 or MODBIN). Here's the list of modules for your BIOS:\n<pre><code>cb32_198.exe V1.98 [08/27/08] (C)Phoenix Technologies 2001-2008\n\n              ********  41mts2p2.fa BIOS component ********\n\n No. Item-Name         Original-Size   Compressed-Size Original-File-Name \n================================================================================  0. System BIOS       20000h(128.00K)1288Dh(74.14K)41mts2p2.BIN\n  1. XGROUP CODE       0DF00h(55.75K)0997Ch(38.37K)awardext.rom\n  2. ACPI table        0447Fh(17.12K)019EEh(6.48K)ACPITBL.BIN\n  3. GROUP ROM[18]     04100h(16.25K)02B7Bh(10.87K)ggroup.bin\n  4. GROUP ROM[20]     04340h(16.81K)02EA8h(11.66K)ffgroup.bin\n  5. TSEG0              04370h(16.86K)024F7h(9.24K)y2group.bin\n  6. YGROUP ROM        0D9F0h(54.48K)08215h(32.52K)awardeyt.rom\n  7. GROUP ROM[22]     0F630h(61.55K)01CBFh(7.19K)tgroup.bin\n  8. GROUP ROM[23]     0F630h(61.55K)022D0h(8.70K)t1group.bin\n  9. GROUP ROM[24]     0F630h(61.55K)00B6Ah(2.85K)t2group.bin\n 10. GROUP ROM[25]     0F630h(61.55K)0015Ch(0.34K)t3group.bin\n 11. GROUP ROM[26]     0F630h(61.55K)0015Ch(0.34K)t4group.bin\n 12. GROUP ROM[ 0]     07790h(29.89K)02B0Fh(10.76K)_EN_CODE.BIN\n 13. MINIT             168C0h(90.19K)168EBh(90.23K)DS3_DDR3.BIN\n 14. VGA ROM[1]        10000h(64.00K)08590h(33.39K)elk_1819.dat\n 15. LOGO1 ROM         00B64h(2.85K)00520h(1.28K)dbios.bmp\n 16. PCI ROM[A]        10000h(64.00K)096C5h(37.69K)RTEGROM.LOM\n 17. GV3                0232Dh(8.79K)00C27h(3.04K)PPMINIT.ROM\n 18. OEM0 CODE         034F6h(13.24K)0265Bh(9.59K)SBF.BIN\n 19. OEM7 CODE         73000h(460.00K)4891Ah(290.28K)EXTBIOS.BIN\n(SP) NCPUCODE          1F801h(126.00K)1F801h(126.00K)NCPUCODE.BIN\n\n  Total compress code space  = E6000h(920.00K)\n  Total compressed code size = C9403h(805.00K)\n  Remain compress code space = 1CC1Dh(115.03K)\n\n              ********  41mts2p2.fa Bootblock component ********\n\n No. Item-Name         Original-Size   Compressed-Size Original-File-Name \n================================================================================\n                          ** Micro Code Information **\nUpdate ID  CPUID  | Update ID  CPUID   | Update ID  CPUID   | Update ID  CPUID  \n------------------+--------------------+--------------------+-------------------\nSLOT1  0A 00000F32| SLOT1  02 00000F37| SLOT1  17 00000F34| PGA423 2C 00000F25\nSLOT1  17 00000F41| SLOT1  05 00000F43| SLOT1  03 00000F49| SLOT1  04 00000F4A\nSLOT1  06 00000F44| SLOT1  03 00000F47| PGA478 07 00000F61| PGA478 0F 00000F62\nSLOT1  04 00000F64| PGA478 0B 00000F65| SLOT1  11 000006F1| SLOT1  26 000006F4\nSLOT1  33 000006F5| SLOT1  33 000006F5| SLOT1  D0 000006F6| PPGA   6A 000006F7\nSLOT1  04 00010660| SLOT1  5D 000006F2| SLOT1  82 000006F9| SLOT1  43 00010661\nSLOT1  BA 000006FB| SLOT1  A4 000006FD| PPGA   BA 000006FB| SLOT1  06 00010671\nSLOT1  04 00010674| SLOT1  0F 00010676| SLOT1  0B 0001067A| PPGA   06 00010671\nPPGA   04 00010674| PPGA   0F 00010676| PPGA   0A 00010677| \n</code></pre>\n",
            "votes": "3",
            "user": "Igor Skochinsky",
            "time": "Jul 31, 2022 at 17:31",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "You can use a ch341a hardware to read the bios chip (need soldering skills, technicians  can do that), the open the bin extracted through the programmer for ch341a on a hex editor. The, dont know what to do afterwards.\n",
            "votes": "2",
            "user": "Sergio Salvador",
            "time": "Apr 18, 2023 at 16:40",
            "is_accepted": false,
            "comments": []
        }
    ]
}