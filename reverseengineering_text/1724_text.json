{
    "title": "How can I use DynamoRIO or something similar in Linux kernel space?",
    "link": "https://reverseengineering.stackexchange.com/questions/1724/how-can-i-use-dynamorio-or-something-similar-in-linux-kernel-space",
    "content": "I've found some universities that are porting DynamoRIO (or something very similar) to Linux kernel space, but the code doesn't seem to be available. Is there a resource I am unaware of?\nHere's an example.\n",
    "votes": "9",
    "answers": 3,
    "views": "1k",
    "tags": [
        "tools",
        "dynamic-analysis",
        "dynamorio"
    ],
    "user": "RobotHumans",
    "time": "Apr 17, 2013 at 4:40",
    "comments": [
        {
            "user": "Brendan Dolan-Gavitt",
            "text": "Could you provide a link to some of the university efforts? It would help to know what kind of functionality you're looking for. E.g. if you just want something that does dynamic binary translation for kernel-mode code, QEMU in whole-system mode technically fits the bill.\n",
            "time": null
        },
        {
            "user": "cb88",
            "text": "static.usenix.org/event/hotdep10/tech/slides/feiner.pdf says they will open source it on slide 16... dunno what happened to it.\n",
            "time": null
        },
        {
            "user": "Brendan Dolan-Gavitt",
            "text": "There is a branch in the DynamoRIO Google Code project called \"DRK\", and commit 1323 has the log message \"DRK: DynamoRIO as a Linux kernel module\". I don't know enough about DynamoRIO to tell if that branch actually contains the kernel version of DynamoRIO though.\n",
            "time": null
        },
        {
            "user": "RobotHumans",
            "text": "@BrendanDolan-Gavitt Awesome, I was in fact looking for DRK.  If you move that to an answer I would be glad to accept it.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Yes, there is DynamoRIO Kernel (DRK), which is a DynamoRIO (DR) port created by Peter Feiner at the University of Toronto (U of T). The current DR source tree; however, does not contain DRK, despite the existence of a branch. DRK has yet to be open sourced, and U of T is actively doing kernel DBT research using DRK and a new DBT framework.\nIf you are thinking of porting it yourself, the two main challenges are:\n\nInterrupts and how they interact with the code cache. DRK took the \"direct port\" approach. For example, where DR uses thread-private code caches, DRK uses CPU-private code caches. This results in a lot of annoyances w.r.t. transparency and interrupts.\nWhat level of transparency you want. DR was designed with a lot of transparency in mind, and DRK kept that promise. My experience with kernel instrumentation so far has been that it is remarkably well-behaved (unless you care about a small portion of device drivers). Transparency on several fronts can be sacrificed, but this is more challenging within the general DR framework.\n",
            "votes": "8",
            "user": "Peter Goodman",
            "time": "Apr 27, 2013 at 21:41",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "There is a branch in the DynamoRIO Google Code project called \"DRK\", and commit 1323 has the log message \"DRK: DynamoRIO as a Linux kernel module\". That should contain the code you're looking for, though since I haven't used DynamoRIO before I can't guarantee it.\n",
            "votes": "6",
            "user": "0xC0000022L",
            "time": "Apr 17, 2013 at 4:40",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "Recently, two new kernel instrumentation systems have been released, of which I am the creator of one:\n\nGranary, which is primarily focused on module instrumentation. This is the instrumentation created by me. Granary internally uses parts of DynamoRIO, but works rather differently. The goal of Granary is to make it easy to develop debugging and analysis tools. There will be a paper in HotDep'13 about one of the major memory debugging tools built on top of Granary.\nbtkernel, a recently released full kernel instrumentation system. You can find a paper about btkernel in SOSP'13.\n",
            "votes": "5",
            "user": "Peter Goodman",
            "time": "Oct 2, 2013 at 22:06",
            "is_accepted": false,
            "comments": [
                {
                    "user": "RobotHumans",
                    "text": "<span class=\"comment-copy\">I haven't tried it yet, but it seems legit.  I understand your goals, so +1</span>",
                    "time": null
                }
            ]
        }
    ]
}