{
    "title": "Run to user code in IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/14649/run-to-user-code-in-ida",
    "content": "Is there a way, as ollydbg provides, to run untill user code (programmer code) with IDA PRO ?\nYou can do that in several ways in olly, like setting a breakpoint on the .text section of main module.\n",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida"
    ],
    "user": "user",
    "time": "Feb 13, 2017 at 23:46",
    "comments": [
        {
            "user": "w s",
            "text": "What do you mean by user code ?\n",
            "time": null
        },
        {
            "user": "Nordwald",
            "text": "@ws I guess OP means non-standard-library-code\n",
            "time": null
        },
        {
            "user": "w s",
            "text": "@Nordwald There are different users(programmers), some of them are writing standard libraries :)\n",
            "time": null
        },
        {
            "user": "Nordwald",
            "text": "@ws This is just the way ollydbg implements this function. Every code in the mapped executable is considered 'user code'\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "The answer to this question is that IDA provides the exact same option :\nOpen the segment view subwindow and set a breakpoint on a memory region.\nWhenever non-library code (thanks to a comment on question for rephrasing with more accuracy what i meant) is hit, the debugger will break. Very usefull for instance for resuming after user input or IPC WM_COPYDATA procedure calls.\n",
            "votes": "2",
            "user": "user",
            "time": "Feb 14, 2017 at 13:36",
            "is_accepted": true,
            "comments": []
        }
    ]
}