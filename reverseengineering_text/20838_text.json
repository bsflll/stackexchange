{
    "title": "How the CMP instruction uses condition flags?",
    "link": "https://reverseengineering.stackexchange.com/questions/20838/how-the-cmp-instruction-uses-condition-flags",
    "content": "I am trying to figure out the behavior of conditional jumps (JE/JNE, JZ/JNZ) in the x86 instruction set familly. \nWhich condition flags <pre><code>CMP</code></pre> instruction sets and how, if the result is equal and if it is not? For example:\n\n<pre><code>CMP eax, 0</code></pre> (true)\n<pre><code>CMP eax, 0</code></pre> (false)\n",
    "votes": "7",
    "answers": 2,
    "views": "22k",
    "tags": [
        "assembly",
        "x86"
    ],
    "user": "PaHa",
    "time": "Mar 10, 2019 at 9:47",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "You could get that information from the first results from DuckDuckGo (or Google (or Bing)). Did you tried that?\n",
            "time": null
        },
        {
            "user": "PaHa",
            "text": "Yes I did. (Google). Found a lot, what jumps read, but not exactly what CMP sets.\n",
            "time": null
        },
        {
            "user": "Paweł Łukasik",
            "text": "<pre><code>CMP</code></pre> sets all the flags based on the intermediate results of <pre><code>SUB</code></pre> that it performs. read here: godevtool.com/GoasmHelp/usflags.htm\n",
            "time": null
        },
        {
            "user": "PaHa",
            "text": "(CMP EAX,EDX;set zero flag if eax=edx.) So only the zero flag and if true 1 and false 0. Tanks.\n",
            "time": null
        },
        {
            "user": "phuclv",
            "text": "read <pre><code>cmp</code></pre> documentation first: The comparison is performed by subtracting the second operand from the first operand and then setting the status flags in the same manner as the <pre><code>SUB</code></pre> instruction.. But that's not a good way to check whether a register is zero or not\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Furthermore, with the CMP instruction, the destination operand doesn't change. Just the flags. \nLet me illustrate. Let's say <pre><code>EAX = 00000005</code></pre> and <pre><code>EBX = 00000005</code></pre>. If we do this arithmetic operation:\n<pre><code>CMP EAX, EBX</code></pre>\nWhat's happening, is in effect this:\n<pre><code>EAX - EBX</code></pre> ---->\n<pre><code>00000005 - 00000005</code></pre>\nSince the result would be <pre><code>0</code></pre>, but we don't change the destination operand in a CMP instruction, the zero flag is set to <pre><code>1</code></pre> (since it's true).\nSo, as we saw, depending on the result of the previous arithmetic operation, flags can be set accordingly:\n",
            "votes": "10",
            "user": "she_roar",
            "time": "Mar 23, 2019 at 18:42",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Jim Driscoll",
                    "text": "<span class=\"comment-copy\">Presumably, where values are signed and of opposite signs (because the CPU doesn't have a way to distinguish signed from unsigned) that use of the C flag isn't true  - so 0xff &gt; 0x01 makes it also look like -1 &gt; 1. I expect in that case you'd check the S flag which is true if the result would be negative.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "The <pre><code>CMP</code></pre> instruction does internally a <pre><code>SUB</code></pre> and sets the flags accordingly.\nSo all flags that are set by a <pre><code>SUB</code></pre> are also set by <pre><code>CMP</code></pre>.\nNamely the flags <pre><code>SF</code></pre>, <pre><code>ZF</code></pre>, <pre><code>AF</code></pre>, <pre><code>PF</code></pre>, and <pre><code>CF</code></pre> are set.\nThis information is taken from the Intel manual for the processors (https://software.intel.com/en-us/articles/intel-sdm).\n",
            "votes": "5",
            "user": "Uwe Plonus",
            "time": "Mar 10, 2019 at 9:57",
            "is_accepted": false,
            "comments": []
        }
    ]
}