{
    "title": "How to get a shell on a remote server?",
    "link": "https://reverseengineering.stackexchange.com/questions/10685/how-to-get-a-shell-on-a-remote-server",
    "content": "Hello guys, I explain my problem, i recently learn about socket programming and i want to do a simple \"exploit\" maybe the easiest shellcode exercise. In order to be precise i'll put below the source code of the vulnerable program running on the remote server, on a specific port.\n<pre><code>#include <unistd.h>\n#include <stdio.h>\n\ntypedef void (*func)(void);\n\nint main(void)\n{\n    char input[4096];\n    char* output = \"My favorite shell is /bin/sh\";\n\n    puts(output);\n    printf(\"[DEBUG] foobar: execve=%p input=%p output=%p\n\",\n        execve, input, output);\n\n    read(0, input, 4096);\n    ((func)&input)();\n\n    return 0;\n}\n</code></pre>\nIt's a school's ctf exercise the goal is to get a flag. As i'm new in that kind of exercise, first i tried to exploit the program locally. I succeeded with a techniques i just learned (port binding 1337). Here are the steps:\n<pre><code># ./shellcode.sh | ./program \nMy favorite shell is /bin/sh\n[DEBUG] foobar: execve=0x80483c0 input=0xff8aed4c output=0x80485d0\n</code></pre>\non a different shell i can then do:\n<pre><code># nc localhost 1337\nid\nuid=0(root) gid=0(root) groups=0(root)\n</code></pre>\nI got a shell, yeah that's cool but there is no flag here ! Now i to get a shell on the server.\nIf i understood well the source code, the vulnerable program executed what you put as input. I disassembled the main:\n<pre><code>(gdb) disas main\nDump of assembler code for function main:\n   0x080484bc <+0>: push   %ebp\n   0x080484bd <+1>: mov    %esp,%ebp\n   0x080484bf <+3>: and    $0xfffffff0,%esp\n   0x080484c2 <+6>: sub    $0x1020,%esp\n   0x080484c8 <+12>:    movl   $0x80485d0,0x101c(%esp)\n   0x080484d3 <+23>:    mov    0x101c(%esp),%eax\n   0x080484da <+30>:    mov    %eax,(%esp)\n   0x080484dd <+33>:    call   0x8048390 <puts@plt>\n   0x080484e2 <+38>:    mov    0x101c(%esp),%eax\n   0x080484e9 <+45>:    mov    %eax,0xc(%esp)\n   0x080484ed <+49>:    lea    0x1c(%esp),%eax\n   0x080484f1 <+53>:    mov    %eax,0x8(%esp)\n   0x080484f5 <+57>:    movl   $0x80483c0,0x4(%esp)\n   0x080484fd <+65>:    movl   $0x80485f0,(%esp)\n   0x08048504 <+72>:    call   0x8048380 <printf@plt>\n   0x08048509 <+77>:    movl   $0x1000,0x8(%esp)\n   0x08048511 <+85>:    lea    0x1c(%esp),%eax\n   0x08048515 <+89>:    mov    %eax,0x4(%esp)\n   0x08048519 <+93>:    movl   $0x0,(%esp)\n   0x08048520 <+100>:   call   0x8048370 <read@plt>\n   0x08048525 <+105>:   lea    0x1c(%esp),%eax\n   0x08048529 <+109>:   call   *%eax\n   0x0804852b <+111>:   mov    $0x0,%eax\n   0x08048530 <+116>:   leave  \n   0x08048531 <+117>:   ret  \n</code></pre>\nFor the instruction call *%eax, eax points to the input. Am i right to guess if you just put a shellcode as input, it will execute it ? \nBut the port binding shellcode seems to not work with the remote server ( maybe it is secured ?) \nThen i used simples shellcodes (execve(bin/sh)) already written by people that way:\n<pre><code># echo -ne \"shellcode\" | nc server port\n</code></pre>\nNo one worked that way so i thought that my whole logic is wrong. What is wrong in the process ? To get a shell on a remote server, what are the way ? If someone can help me i would be grateful. Thank you all.\n",
    "votes": "0",
    "answers": 0,
    "views": "615",
    "tags": [
        "vulnerability-analysis",
        "shellcode",
        "remote"
    ],
    "user": "creuchmeuch",
    "time": "Aug 21, 2015 at 23:53",
    "comments": [
        {
            "user": "LUser",
            "text": "I am struggling to understand what you're asking.\n",
            "time": null
        },
        {
            "user": "LUser",
            "text": "this should be enough for you to understand the process adn if this is too much then you need to go back to basics.\n",
            "time": null
        },
        {
            "user": "LUser",
            "text": "shell-storm.org/shellcode/files/shellcode-883.php\n",
            "time": null
        },
        {
            "user": "LUser",
            "text": "keep in mind , that cracking and malicious actions are widely disliked and merit little respect with them. Instead , learn to reverse engineer and do some malware analysis. Learn to code in assembly and understand how and why this may or might not work.\n",
            "time": null
        },
        {
            "user": "creuchmeuch",
            "text": "Ok thank you. I understand your point but i do the exercise only in order to learn new things. Have a good day.\n",
            "time": null
        }
    ],
    "answers_data": []
}