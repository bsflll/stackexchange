{
    "title": "Using QEMU to boot arm uImage kernel",
    "link": "https://reverseengineering.stackexchange.com/questions/15132/using-qemu-to-boot-arm-uimage-kernel",
    "content": "I'm currently trying to reverse engineer the firmware for the Swann DVR16-4500 security camera system. I successfully extracted the cramfs filesystem and now I have the following files inside the cramfs-root directory:\n<pre><code>-rw-r--r-- 1 root root 2289232 Dec 31  1969 gui_res.tar.lzma\n-rwxr-xr-x 1 root root     744 Dec 31  1969 new_10.bin\ndrwxr-xr-x 2 root root    4096 Dec 15  2015 Player_ml\n-rwxr-xr-x 1 root root  824944 Dec 31  1969 player.zip\n-rwxr-xr-x 1 root root    2936 Dec 31  1969 start.sh\n-rw-r--r-- 1 root root 6213824 Dec 31  1969 sys_app.tar.lzma\n-rwxr-xr-x 1 root root 3585544 Dec 31  1969 uImage\n-rwxr-xr-x 1 root root 1881320 Dec 31  1969 WebComponents.exe\n-rwxr-xr-x 1 root root  689296 Dec 31  1969 webs.tar.lzma\n</code></pre>\nI tried using unlzma and tar --lzma -xvf to extract the *.tar.lzma files, but I had no luck. I came across this post which suggested running the kernel in an emulator in the hopes of finding the necessary extraction tools there. I've been tearing through QEMU documentation and online videos but I can't figure out exactly what I need to do to get QEMU to run the uImage kernel using qemu-system-arm. What do I need to do in order to get the kernel to run?\n",
    "votes": "2",
    "answers": 0,
    "views": "2k",
    "tags": [
        "qemu",
        "kernel"
    ],
    "user": "Adam Nichols",
    "time": "Apr 9, 2017 at 23:49",
    "comments": [
        {
            "user": "julian",
            "text": "what happened when you ran <pre><code>tar --lzma xvf <file></code></pre>? Were there error messages? What was the output? Did you run the <pre><code>file</code></pre> command against the <pre><code>*.tar.lzma</code></pre> files? If so, what were the results, and were the results manually verified?  Did you inspect a hex dump of any of the <pre><code>*.tar.lzma</code></pre> files? If so what were the results?\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "what does <pre><code>file</code></pre> say  on <pre><code>uImage</code></pre>?\n",
            "time": null
        },
        {
            "user": "Adam Nichols",
            "text": "When I run <pre><code>tar --lzma xvf </code></pre> I get the following response: <pre><code>xz: (stdin): File format not recognized tar: Child returned status 1 tar: Error is not recoverable: exiting now</code></pre> the file command just says all of the files are \"data\". When I run lzmainfo the command is satisfied that it is an lzma file, but it says that the file will be over a petabyte when it's uncompressed, similar to the post I referenced above.  `\n",
            "time": null
        },
        {
            "user": "Adam Nichols",
            "text": "When I run file on the uImage file I get the following response:  `uImage: u-boot legacy uImage, Linux-3.10.0, Linux/ARM, OS Kernel Image (Not compressed), 3585480 bytes, Thu Mar 10 11:17:03 2016, Load Address: 0x40008000, Entry Point: 0x40008000, Header CRC: 0x253B9638, Data CRC: 0x5C656DD5\n",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "Sorry, just speculating here. But IIRC there's a difference between <pre><code>.tar.xz</code></pre> and <pre><code>.tar.lzma</code></pre> ... and in fact the man page strongly suggests that the resulting archive is filtered through <pre><code>xz</code></pre> or <pre><code>lzma</code></pre> respectively, although both use LZMA as the compression algorithm. Also, do you have <pre><code>xz</code></pre> installed? <pre><code>xzdec</code></pre> or <pre><code>xz-utils</code></pre> on Debian/Ubuntu.\n",
            "time": null
        }
    ],
    "answers_data": []
}