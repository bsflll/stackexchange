{
    "title": "Dumpout Process Memory Layout During Loading Time",
    "link": "https://reverseengineering.stackexchange.com/questions/15971/dumpout-process-memory-layout-during-loading-time",
    "content": "I am working on a project where I need to use <pre><code>LD_PRELOAD</code></pre> to load some libraries into the memory space.\nIt's like:\n<pre><code> LD_PRELOAD=\"./libapp.so\" ./my_app\n</code></pre>\nDue to certain reasons (I am actually working on some binary hacking), I must know the memory address (not a symbol) of certain functions (let's say, <pre><code>foo</code></pre>) in <pre><code>libapp.so</code></pre> and instrument the binary code of <pre><code>my_app</code></pre> before execution.\nHowever, due to <pre><code>ASLR</code></pre> (Address Space Layout Randomization), each time <pre><code>libapp.so</code></pre> would be loaded into different memory address, and I am unable to know the memory address of <pre><code>foo</code></pre> before execution.\nI am thinking to somehow intercept the loading time, readout the memory address of <pre><code>libapp.so</code></pre>, perform some instrumentation on <pre><code>my_app</code></pre> with the memory address of <pre><code>foo</code></pre>, and then load <pre><code>my_app</code></pre> into the memory space.\nSo here is my question: how to intercept the loading process and acquire the memory address of <pre><code>libapp.so</code></pre>?\n",
    "votes": "3",
    "answers": 1,
    "views": "140",
    "tags": [
        "instrumentation",
        "binary-editing"
    ],
    "user": "lllllllllllll",
    "time": "Aug 1, 2017 at 2:22",
    "comments": [
        {
            "user": "blabb",
            "text": "gdb does have pending bps , solib events break etc does none of them work. bp xxx pending on , set solibevents x,y etc  or do you mean you want to do it standalone  if you are using ptrace apis u should be able to intercept loading events too ala gdb\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I think that one option could be to use <pre><code>ptrace</code></pre>, for example you can use <pre><code>_dl_open()</code></pre> instead of <pre><code>LD_PRELOAD</code></pre>. Look at this example:\n\nhttp://www.ars-informatica.com/Root/Code/2010_04_18/LinuxPTrace.aspx\n\nAnother option could be to use <pre><code>gdb</code></pre> for do that, for example you have the possibility to set a pending breakpoint to foo and then run the program.\nAnother option could be turn off the ASLR, you can do it using the <pre><code>/proc/sys/kernel/randomize_va_space</code></pre>\nTo disable it you can run:\n<pre><code>echo 0 | sudo tee /proc/sys/kernel/randomize_va_space\n</code></pre>\n",
            "votes": "1",
            "user": "0xC0000022L",
            "time": "May 28, 2018 at 14:25",
            "is_accepted": true,
            "comments": []
        }
    ]
}