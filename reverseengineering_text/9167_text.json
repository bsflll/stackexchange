{
    "title": "IDA Plugin/Script Output File Character Limit?",
    "link": "https://reverseengineering.stackexchange.com/questions/9167/ida-plugin-script-output-file-character-limit",
    "content": "I am currently working on both a plugin and an ida-python script that export fairly big JSON files.\nI just noticed, that both will at times cut off the output files with no error message. Sometimes they will cut off at 8192 Characters and sometimes at roughly 220000 Characters. What is of particular interest to me is the fact that the files are constructed differently.\nIn the C++ Plugin I open a filepointer and construct the JSON-Data while cycling through my sample like this:\n<pre><code>FILE *fp;\nfp = qfopen(\"C:\\\\output.json\" ,\"w\");\nqfprintf(fp,\"{\\\"filename\\\": \\\"%s\\\", \\\"functions\\\":[ \", filename);\n</code></pre>\nIn the Python Script I construct a (big) dictionary and use \n<pre><code>fn=GetInputFile()+'.json'\nf=open(fn,'w')\nf.write(json.dumps(jsonfunc))\n</code></pre>\nOf course I will need my output file intact, but I can't find any help googling. Still I feel like I'm missing something really trivial.\nBest regards\nEdit: Fixed by using \n<pre><code>qflush(fp) //<-within the workloop\nqfclose(fp)\n</code></pre>\nand for the python script respectively:\n<pre><code>f.close()\n</code></pre>\n",
    "votes": "2",
    "answers": 1,
    "views": "620",
    "tags": [
        "ida",
        "idapython",
        "ida-plugin"
    ],
    "user": "Viktor K",
    "time": "Jun 18, 2015 at 7:20",
    "comments": [
        {
            "user": "ebux",
            "text": "Is your Python script executed without exception? Do you close the file with f.close()?\n",
            "time": null
        },
        {
            "user": "DOD",
            "text": "> In the Python Script I construct a (big) dictionary and use   ... mb a problem in that you don't have enough memory?\n",
            "time": null
        },
        {
            "user": "Viktor K",
            "text": "Hey, great point about the f.close() that fixed it for the Python Script. I also looked up similar function for my Plugin and using qflush(fp) & qfclose(fp) did the trick.\n",
            "time": null
        },
        {
            "user": "tmr232",
            "text": "Maybe answer your own question so that the solution is easier to find?\n",
            "time": null
        },
        {
            "user": "Viktor K",
            "text": "Sorry, was not aware that this was possible. I edited had edited the original Question to reflect my solution. Thanks for the heads-up.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Fixed in the Plugin by using\n<pre><code>qflush(fp) //<-within the workloop\nqfclose(fp)\n</code></pre>\nand for the Python script respectively:\n<pre><code>f.close()\n</code></pre>\n",
            "votes": "0",
            "user": "Viktor K",
            "time": "Jul 21, 2015 at 9:50",
            "is_accepted": true,
            "comments": []
        }
    ]
}