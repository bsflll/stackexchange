{
    "title": "Find out all valid parameters which you can pass to a executable? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/18442/find-out-all-valid-parameters-which-you-can-pass-to-a-executable",
    "content": "Closed. This question needs to be more focused. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Update the question so it focuses on one problem only by editing this post.\n\n\nClosed 6 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nIs there a way to find out all parameters which you can pass to a executable file, e.g. a .exe file?\nExample: The game GTA V offers the parameter <pre><code>-verify</code></pre> which you can pass to the shortcut of the .exe so that it verifies the game files before the game starts.\n\nIs there a way to find out if there are more params by analyzing the executable, e.g. by reverse engineer it with ollydbg or some other program?\n",
    "votes": "0",
    "answers": 2,
    "views": "2k",
    "tags": [
        "executable"
    ],
    "user": "Black",
    "time": "6 years ago",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "Yes and no. If all of the parameters are stored in a straightforward fashion you may be in luck. But there's a myriad of ways to hide and obfuscate facts. So while - in principle - what you're asking is possible, it's going to be tough to be certain that you caught all of the possible parameters. Specifically because on Windows there exist a multitude of ways to fetch the command line arguments at any time. So this is a bit of a broad question.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "The first answer that comes to mind would be to check the code that handles those and find out what is supported.\nThe other is just to check the <pre><code>strings</code></pre> output and try to see if there's anything that might be used as an argument. But with this approach, you might now know what each parameter does as the results might not be so obvious.\n",
            "votes": "2",
            "user": "Paweł Łukasik",
            "time": "Jun 4, 2018 at 7:38",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "you may need to reverse engineer the argument handling part  of the binary in question \nyou could possibly enter bogus arguments and set a hardware break point on access to these bogus arguments  to narrow the code region that uses or compares these argumets \nsome times the arguments could be hashed and hash compared as shown in the answer below  \nthere isn't a generic magic you need to handle these on case to case basis\ni answered a similar question here\n",
            "votes": "2",
            "user": "blabb",
            "time": "Jun 4, 2018 at 10:00",
            "is_accepted": false,
            "comments": []
        }
    ]
}