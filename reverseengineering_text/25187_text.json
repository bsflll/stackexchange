{
    "title": "How do I implement register pages in Sleigh?",
    "link": "https://reverseengineering.stackexchange.com/questions/25187/how-do-i-implement-register-pages-in-sleigh",
    "content": "I'm working on creating a processor definition for the  Motorola / NXP HC11 using the Sleigh language for Ghidra. A definition for the HC12 already exists, so I'm working off of that.\nThe HC12 organizes its instructions into two pages: Page 1 with no prefix, and Page 2 with a prefix of 0x18:\n\nThe HC11, on the other hand, has two more pages of registers:\n\nThe HC12 processor definition uses a context variable and a recursive constructor to determine if an instruction resides on page 2:\n<pre><code>define context contextreg\n    Prefix18       = (0,0)    # 1 if 0x18 is the first byte\n    PrefixHCS12X   = (0,0)    # 1 if first byte is 0x18 so that HCS12X to use GPAGE for memory access\n    UseGPAGE       = (1,1)    # 1 if should use GPAGE concatenated to lower 16-bit EA\n    XGATE          = (2,2)    # 1 if in xgate instruction decode mode\n;\n</code></pre>\n-\n<pre><code>:^instruction  is XGATE=0 & op8=0x18; instruction  [ Prefix18=1; ] {}\n</code></pre>\n-\n<pre><code>:ABA                     is XGATE=0 & (Prefix18=1 & op8=0x06)\n{\n    result:1 = A + B;\n    addition_flags1(A, B, result);\n    A = result;\n}\n</code></pre>\nAnother user, also defining an HC11 processor, just used 16-bit instructions instead:\n<pre><code>define token withprebyte(16)\n  pre   = (0,16);\ndefine token byte(8)\n  op8   = (0,7);\n\nOFF: op8    is op8 { export *[const]:2 op8; }\nIMM8: op8 is op8 { export *[const]:1 op8; }\n\n:bsetY OFF,IMM8 is pre=0x181C; OFF; IMM8\n{\n  local temp = *:1 (Y+OFF);\n  temp = temp | (IMM8);\n  *:1 (Y+OFF) = temp;\n}\n:bclrY OFF,IMM8 is pre=0x181D; OFF; IMM8\n{\n  local temp = *:1 (Y+OFF);\n  temp = temp & (~IMM8);\n  *:1 (Y+OFF) = temp;\n}\n</code></pre>\nThe approach used on the HC12 seems bizarre and complicated to me. I also don't see how it will work for more than one page. Is there a reason I shouldn't just use 16-bit tokens for those instructions which reside on other pages? Is using the context variable, as the HC12 implementation does, more elegant in some way that I'm not seeing?\n",
    "votes": "2",
    "answers": 0,
    "views": "307",
    "tags": [
        "ghidra"
    ],
    "user": "watkipet",
    "time": "Jun 1, 2020 at 15:49",
    "comments": [],
    "answers_data": []
}