{
    "title": "Decrypt iOS standard encryption without device",
    "link": "https://reverseengineering.stackexchange.com/questions/8528/decrypt-ios-standard-encryption-without-device",
    "content": "In order to remove the encryption from an iOS binary on the App Store, it first has to be executed on a ARM capable device. Is there a way to do this without access to a device?\n",
    "votes": "4",
    "answers": 2,
    "views": "7k",
    "tags": [
        "ios"
    ],
    "user": "Nederealm",
    "time": "Mar 23, 2015 at 17:03",
    "comments": [
        {
            "user": "Nederealm",
            "text": "Yes, that's correct\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "In order to remove the iOS app encryption (called FairPlay), you'd need to do one of the following:\n\nRun the app on a physical ARM device and dynamically decrypt it.\nRun the app on a virtual ARM device and dynamically decrypt it.\nStatically decrypt the app.\n\nNumber 1 is the most common approach used, but it's out of the question since you're asking how to decrypt the app without access to a physical device.\nNumber 2 seems to currently be out of the question since the only emulator I was able to find that supposedly \"supported\" iOS is iEmu, which is now defunct.\nNumber 3 is theoretically possible, but based on my Googling, nobody has yet written a static decrypter for FairPlay.\n​\nN.B. iOS-based reverse engineering is definitely not my area of expertise, so perhaps someone can provide a better answer and/or correct any incorrect assumptions I've made above.\n",
            "votes": "5",
            "user": "Jason Geffner",
            "time": "Mar 25, 2015 at 20:47",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Nederealm",
                    "text": "<span class=\"comment-copy\">IDAPRO has an ARM emulator called QEMU. Will it sucessfully load the app to the point it can be decrypted? Note: I haven't yet purchase the latest IDAPro, so no chance to try it out</span>",
                    "time": null
                },
                {
                    "user": "Peter Andersson",
                    "text": "<span class=\"comment-copy\">To answer this you need to have detailed knowledge of fairplay on apps. I think the research available publicly all let the iOS loader decrypt the encrypted sections and dump them from memory once decrypted. This accomplishes what 99.9% of researchers need. Few people have exploring the DRM itself as a goal. Perhaps they rely on the UID key? A quick check would be to diff the same apps encrypted sections on two different devices of the same model. It would mean Apple would need to dynamically sign apps per device though and store UID keys, which they've said they don't do. Maybe GID? Hmm...</span>",
                    "time": null
                },
                {
                    "user": "MarSoft",
                    "text": "<span class=\"comment-copy\">I have just done a similar check - took an IPA extracted from the different iOS device. It installed to my device without a problem, but when I tried to run it I was asked to enter iTunes password (did not do that), and there was interesting line in syslog: <code>kernel[0] &lt;Notice&gt;: AppleFairplayTextCrypterSession::fairplayOpen() failed, error -42004</code> <code>com.apple.xpc.launchd[1] (UIKitApplication:THE_APP_PACKAGE_NAME[0xdc32][203]) &lt;Warning&gt;: FairPlay decryption failed on binary.</code> So I think we can confirm that applications are re-encrypted for each user.</span>",
                    "time": null
                },
                {
                    "user": "MarSoft",
                    "text": "<span class=\"comment-copy\">Looks like app encryption is linked to iTunes account, not to specific device. Details here: <a href=\"http://www.roughlydrafted.com/RD/RDM.Tech.Q1.07/2A351C60-A4E5-4764-A083-FF8610E66A46.html\" rel=\"nofollow noreferrer\">roughlydrafted.com/RD/RDM.Tech.Q1.07/…</a> (they seemingly use the same FairPlay encryption for songs and for apps)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<pre><code>My answer</code></pre> What you can actually do is to look for \"cracked IPA apps\", which basically mean they are decrypted (FairPlay encryption removed). There are many sites like this one (AppAddict).\n<pre><code>Note</code></pre> \nI had to do that since I upgraded my jailbroken device to iOS 8.4 (Pangu jailbreak). The iOS8.4 jailbreak disabled debugger tools like Clutch, which I used to decrypt binaries. Maybe the iOS 9.0 jailbreak allows them to work again.\nI couldn't even get to decrypt some older versions of Facebook or Tinder. That's when you really rely on the community to have uploaded their cracked binaries.\nPlease note that I am not supporting piracy. Linking cracked IPA resources is meant for reverse engineering and research purpose. In this point of view I find it helpful to provide decrypted (\"cracked\") binaries of free apps to the community (via AppAddict for instance).\n",
            "votes": "3",
            "user": "Jeffrey Mvutu Mabilama",
            "time": "Oct 31, 2015 at 9:33",
            "is_accepted": false,
            "comments": []
        }
    ]
}