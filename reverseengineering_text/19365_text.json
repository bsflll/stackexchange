{
    "title": "Killing thread/process from Frida trace",
    "link": "https://reverseengineering.stackexchange.com/questions/19365/killing-thread-process-from-frida-trace",
    "content": "Is there a way to kill/abort the thread/process from a hook (let's say the <pre><code>onLeave</code></pre> hook) in frida-trace?\nIf \"yes\", how?\n",
    "votes": "1",
    "answers": 1,
    "views": "983",
    "tags": [
        "frida"
    ],
    "user": "alexandernst",
    "time": "Sep 16, 2018 at 21:12",
    "comments": [],
    "answers_data": [
        {
            "content": "One (rather ugly) solution to this is simply to crash the program by setting the thread's context's instruction pointer to unmapped memory or kernel memory. You can accomplish that with Frida's interceptor by using <pre><code>this.context</code></pre>:\n<pre><code>onLeave: function (result) {\n    this.context.pc = 0\n}\n</code></pre>\n",
            "votes": "2",
            "user": "user464014",
            "time": "Sep 24, 2018 at 16:55",
            "is_accepted": true,
            "comments": [
                {
                    "user": "alexandernst",
                    "text": "<span class=\"comment-copy\">Hmm... Well, yes, I guess I could do that. But then I'll end up with orphan memory that the OS won't be able to reclaim, right?</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@alexandernst: usually all memory is freed by the OS after process termination</span>",
                    "time": null
                }
            ]
        }
    ]
}