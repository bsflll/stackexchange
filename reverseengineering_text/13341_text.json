{
    "title": "Restore function key",
    "link": "https://reverseengineering.stackexchange.com/questions/13341/restore-function-key",
    "content": "I have a simple function which looks like that:\n<pre><code>keyAlphabet = [-1, 16, 32, 127, 61, -32, -31, 43, 0, 88, 2, 5, 7, 112, 64, 69, 96]\nkey = ??? # only keyAlphabet values\np = 0x1337\nfor i in key:\n...p*=i\n...p+=0x31337\n</code></pre>\nFinally <pre><code>p</code></pre> should be <pre><code>0xfd0970e7</code></pre>.\nI've tried to subtract <pre><code>0x31337</code></pre> from the final result and search dividers of that value from the <pre><code>keyAlphabet</code></pre> (I've done that operation 8 times and after that multiple dividers came out, <pre><code>0x12ef1e</code></pre> can be divided with <pre><code>2,7</code></pre> and <pre><code>61</code></pre>), but because of negative values (specially <pre><code>-1</code></pre>) I'm not sure where should I change the sign. As a result I'm not able to find the key which will proceed values from <pre><code>0x1337</code></pre> into <pre><code>0xfd0970e7</code></pre>.\n",
    "votes": "2",
    "answers": 0,
    "views": "159",
    "tags": [
        "python",
        "functions",
        "hex"
    ],
    "user": "desu",
    "time": "Aug 22, 2016 at 18:06",
    "comments": [
        {
            "user": "NirIzr",
            "text": "I assume original code is in assembly. Care to share that? Nuances might be lost in translation\n",
            "time": null
        },
        {
            "user": "desu",
            "text": "@NirIzr here's the binary I've disassembled github.com/wapiflapi/exrs/blob/master/reverse/r9\n",
            "time": null
        },
        {
            "user": "desu",
            "text": "@NirIzr and here's pseudo-code pastebin.com/3NkB3h6S. I runned this binary with chars possible to pass as argument and received this key alphabet\n",
            "time": null
        },
        {
            "user": "NirIzr",
            "text": "pseudocode shows every iteration in the last loop (the one you pasted python code for) has a different <pre><code>key</code></pre>. it iterates all possible values. i think that if <pre><code>keyAlphabet</code></pre> is actually <pre><code>var_18</code></pre>, you should have something like <pre><code>keyAlphabet.reverse() ; for key in keyAlphabet:</code></pre>\n",
            "time": null
        },
        {
            "user": "NirIzr",
            "text": "@mayahustle unless random() is seeded with the same seed on every execution ;)\n",
            "time": null
        }
    ],
    "answers_data": []
}