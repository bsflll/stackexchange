{
    "title": "Question regarding ASLR",
    "link": "https://reverseengineering.stackexchange.com/questions/20063/question-regarding-aslr",
    "content": "If I have a binary file which does not have ASLR enabled. However, the libc file it uses has ASLR enabled, then will the address of system() in libc file be randomized every time?\nOr the address will be the same every time because the binary itself does not have ASLR enabled?\n",
    "votes": "1",
    "answers": 1,
    "views": "314",
    "tags": [
        "linux",
        "exploit"
    ],
    "user": "Neon Flash",
    "time": "Dec 6, 2018 at 4:10",
    "comments": [],
    "answers_data": [
        {
            "content": "When the process is created it is the job of the loader to parse the ELF and allocate/map memory segments, resolve and load libraries. The base offset for any shared object is decided by the loader at load time. But this depends on the ASLR setting of the operating system, not the binary.\n<pre><code>$ gcc -m32 -no-pie -fno-pic -zexecstack untitled.c -o untitled\n$ ldd ./untitled\n    linux-gate.so.1 (0xf7f66000)\n    libc.so.6 => /lib/i386-linux-gnu/libc.so.6 (0xf7d4b000)\n    /lib/ld-linux.so.2 (0xf7f68000)\n$ ldd ./untitled\n    linux-gate.so.1 (0xf7fd1000)\n    libc.so.6 => /lib/i386-linux-gnu/libc.so.6 (0xf7db6000)\n    /lib/ld-linux.so.2 (0xf7fd3000)\n$ ldd ./untitled\n    linux-gate.so.1 (0xf7f8f000)\n    libc.so.6 => /lib/i386-linux-gnu/libc.so.6 (0xf7d74000)\n    /lib/ld-linux.so.2 (0xf7f91000)\n</code></pre>\nHowever once system wide ASLR is disabled\n<pre><code>$ echo 0 | sudo tee /proc/sys/kernel/randomize_va_space\n0\n$ ldd `which cat`\n    linux-vdso.so.1 (0x00007ffff7ffa000)\n    libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007ffff7831000)\n    /lib64/ld-linux-x86-64.so.2 (0x00007ffff7dd9000)\n$ ldd `which cat`\n    linux-vdso.so.1 (0x00007ffff7ffa000)\n    libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007ffff7831000)\n    /lib64/ld-linux-x86-64.so.2 (0x00007ffff7dd9000)\n$ ldd `which cat`\n    linux-vdso.so.1 (0x00007ffff7ffa000)\n    libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007ffff7831000)\n    /lib64/ld-linux-x86-64.so.2 (0x00007ffff7dd9000)\n</code></pre>\nOffset of system with respect to libc base should remain constant in a libc.\n",
            "votes": "2",
            "user": "sudhackar",
            "time": "Dec 6, 2018 at 4:54",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Neon Flash",
                    "text": "<span class=\"comment-copy\">So are you saying that ASLR for the main binary does not matter? And only OS level ASLR setting matters?</span>",
                    "time": null
                },
                {
                    "user": "sudhackar",
                    "text": "<span class=\"comment-copy\">How do you disable ASLR for any binary?</span>",
                    "time": null
                },
                {
                    "user": "Neon Flash",
                    "text": "<span class=\"comment-copy\">My question is specifically related to address of system() function in libc. Since, libc has PIE enabled, so I understand that if OS has ASLR enabled then it will randomize the addresses in libc? Will the address of system() function be randomized as well?</span>",
                    "time": null
                },
                {
                    "user": "Neon Flash",
                    "text": "<span class=\"comment-copy\">Should I create a new question for finding \"system\" and \"/bin/sh\" address from a given libc file?</span>",
                    "time": null
                },
                {
                    "user": "Neon Flash",
                    "text": "<span class=\"comment-copy\">I'll mark this one as resolved.</span>",
                    "time": null
                }
            ]
        }
    ]
}