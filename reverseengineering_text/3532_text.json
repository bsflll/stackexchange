{
    "title": "Get jar back from wrapped(into exe) jar",
    "link": "https://reverseengineering.stackexchange.com/questions/3532/get-jar-back-from-wrappedinto-exe-jar",
    "content": "Is there any way to get a jar file from a jar wrapped using a exe wrapper.\nI have an exe file and I know that it was wrapper using exe wrapper (launch4j to be precise).\nHow do I unwrap this jar to get back the jar.\nI have seen that I can unwrap it in Linux using fileroller, how do I do it in windows\n<pre><code>ADD : How is it different if it wrapped using wrappers other than launch4j\n</code></pre>\n",
    "votes": "9",
    "answers": 3,
    "views": "23k",
    "tags": [
        "decompilation",
        "executable",
        "jar"
    ],
    "user": "meain",
    "time": "Jan 27, 2014 at 13:04",
    "comments": [
        {
            "user": "Dominik Antal",
            "text": "Related\n",
            "time": null
        },
        {
            "user": "ekse",
            "text": "Your question is unclear, I assume you want to get back the JAR file from the EXE generated by launch4j?\n",
            "time": null
        },
        {
            "user": "meain",
            "text": "oops i am sorry, my bad.. It was meant to get back the jar\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I assume you want to extract a JAR file wrapped inside a .exe generated by launch4j. Launch4j places the jar file in the overlay of the executable, that is after the PE file. To extract it you can search for the string 'PK' from the bottom of the file to find the JAR archive, you should see something like this :\n\nOnce you found it, remove all the content before it and save it to a new file with \".jar\" extension. \nThere is actually a faster way to do it using 7zip. If you open the file with 7zip it will open the JAR file directly (a JAR is just a ZIP file), you can then extract the files and recreate the ZIP archive if needed.\n",
            "votes": "13",
            "user": "ekse",
            "time": "Jan 24, 2014 at 15:47",
            "is_accepted": false,
            "comments": [
                {
                    "user": "meain",
                    "text": "<span class=\"comment-copy\">How is it different if it wrapped using wrappers other than launch4j</span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@MEAIN: a very theoretical question. Depends how it gets packaged. If the JAR gets simply put into the file, the process will be very similar.</span>",
                    "time": null
                },
                {
                    "user": "Tom치코 Zato",
                    "text": "<span class=\"comment-copy\">Man, this 7zip trick is really cool.</span>",
                    "time": null
                },
                {
                    "user": "ekse",
                    "text": "<span class=\"comment-copy\">@Tom치코Zato glad you found it useful!</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "I was really checking on it and it seems there is a really easy way to do this.\nPROGRAM USED : jd-gui\n\nSTEPS\n\nExtract the exe file using any archive manager (eg:WinRar)\nNow use this program (jd-gui) to decompile it.\n\nYou are done and now you have the code in native java form\n",
            "votes": "5",
            "user": "perror",
            "time": "Mar 19, 2014 at 8:28",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "Since we're talking windows (and 5 years later) how about this: intall the program, go to the install dir and get the jar(s) from there. Now you can decompile the jar directly.\n",
            "votes": "0",
            "user": "Juan Carlos",
            "time": "Jan 19, 2020 at 18:24",
            "is_accepted": false,
            "comments": []
        }
    ]
}