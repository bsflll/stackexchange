{
    "title": "Accessing Data Marked as Alignment Bytes in IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/2415/accessing-data-marked-as-alignment-bytes-in-ida",
    "content": "Some compilers will add useless bytes in functions or in between functions. In the below block of code at 0040117C we can see the \"align\" keyword that was inserted by IDA.   \n<pre><code>.text:00401176                 mov     eax, [edx+4]\n.text:00401179                 call    eax\n.text:0040117B\n.text:0040117B locret_40117B:                          ; CODE XREF: sub_401160+Dj\n.text:0040117B                 retn\n.text:0040117B sub_401160      endp\n.text:0040117B\n.text:0040117B ; ---------------------------------------------------------------------------\n.text:0040117C                 align 10h\n.text:00401180\n.text:00401180 ; =============== S U B R O U T I N E =======================================\n.text:00401180\n.text:00401180 ; Attributes: bp-based frame\n.text:00401180\n.text:00401180 ; int __stdcall sub_401180(void *Src)\n</code></pre>\nIf we were to view this in hex mode in this example we would see \"<pre><code>CC CC ..</code></pre>\". With other compilers we might see \"<pre><code>90 90 ..</code></pre>\". The obvious hint of what this is being used for is the \"align\" keyword. \nQuestion: how can I tell if a specific byte at an address is marked as <pre><code>align</code></pre> in IDAPython? Example code would be appreciated. \nI have found a couple of functions and data types such as <pre><code>FF_ALIGN</code></pre> and <pre><code>idaapi.is_align_insn(ea</code></pre> that looked positive but I have yet to figure out a working example or results that confirm yes or no. I would prefer to rely on IDA types or functions rather than use string parsing for the keyword \"align\".\n",
    "votes": "7",
    "answers": 2,
    "views": "2k",
    "tags": [
        "ida",
        "compilers",
        "idapython"
    ],
    "user": "alexanderh",
    "time": "Jul 7, 2013 at 16:59",
    "comments": [
        {
            "user": "DCoder",
            "text": "How about <pre><code>isAlign(idaapi.getFlags(ScreenEA()))</code></pre> ?\n",
            "time": null
        },
        {
            "user": "alexanderh",
            "text": "@DCoder quick note, it works perfect for the first byte of the align but not the second byte or later bytes. Kind of strange. Well at least I know what the first char value is. Cheers.\n",
            "time": null
        },
        {
            "user": "DCoder",
            "text": "Look into <pre><code>isHead</code></pre> and <pre><code>prevHead</code></pre>, those functions might help you find the \"head\" of the align directive (I haven't tested this, it's just a thought).\n",
            "time": null
        },
        {
            "user": "Rolf Rolles",
            "text": "Should probably post that as an answer so the question isn't permanently marked as being open.\n",
            "time": null
        },
        {
            "user": "asheeshr",
            "text": "It appears your self-answer covers the solution to the question.  You can mark it as accepted by clicking on the check mark next to it.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Answering my own question so it's not marked as being opened. @DCoder's comment of using <pre><code>isAlign(idaapi.getFlags(ScreenEA()))</code></pre> is correct. \n<pre><code>.text:0040117B\n.text:0040117B locret_40117B:                          ; CODE XREF: sub_401160+Dj\n.text:0040117B                 retn\n.text:0040117B sub_401160      endp\n.text:0040117B\n.text:0040117B ; ---------------------------------------------------------------------------\n.text:0040117C                 align 10h\n.text:00401180\n.text:00401180 ; =============== S U B R O U T I N E =======================================\n.text:00401180\n.text:00401180 ; Attributes: bp-based frame\n.text:00401180\n.text:00401180 ; int __stdcall sub_401180(void *Src)\n</code></pre>\nIf we execute the following command. \n<pre><code>Python>isAlign(idaapi.getFlags(0x0040117C))\nTrue\n</code></pre>\nWe would get a value of True. Note: This only works for the first byte that is marked as align. All further align bytes will return false. Thanks DCoder for the answer.\n",
            "votes": "7",
            "user": "alexanderh",
            "time": "Jul 6, 2013 at 15:29",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "For IDA v7.0 you can use: \n<pre><code>ida_idp.is_align_insn(ScreenEA())\n</code></pre>\n",
            "votes": "1",
            "user": "Tal",
            "time": "Mar 13, 2018 at 12:40",
            "is_accepted": false,
            "comments": []
        }
    ]
}