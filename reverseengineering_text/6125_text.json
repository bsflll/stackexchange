{
    "title": "Finding how IMDB creates its image codes",
    "link": "https://reverseengineering.stackexchange.com/questions/6125/finding-how-imdb-creates-its-image-codes",
    "content": "When you look at any IMDB image page, the movie poster image has a url of this form:\n<pre><code>http://ia.media-imdb.com/images/M/MV5BMTIxOTY1NjUyN15BMl5BanBnXkFtZTcwMjMxMDk1MQ@@._V1_SX214_AL_.jpg</code></pre>\nor more generally:\n<pre><code>http://ia.media-imdb.com/images/M/<alphaNumeric>@@.\\_V1\\_SX214\\_AL_.jpg</code></pre>\nI want to know how that alphaNumeric is generated, most likely from either the title of the movie or from the IMDB code.\nTwo examples (though many more can be found by browsing IMDB) are for Kung Fu Panda:\n\nTitle: Kung Fu Panda\nIMDB ID: tt0441773\nImage URL: http://ia.media-imdb.com/images/M/MV5BMTIxOTY1NjUyN15BMl5BanBnXkFtZTcwMjMxMDk1MQ@@._V1_SX214_AL_.jpg\nAlphaNumeric: MV5BMTIxOTY1NjUyN15BMl5BanBnXkFtZTcwMjMxMDk1MQ\nTitle: Kung Fu Panda 2\nIMDB ID: tt1302011\nImage URL: http://ia.media-imdb.com/images/M/MV5BMTg4MTQ3NTI3Nl5BMl5BanBnXkFtZTcwNzEzODQ2NA@@._V1_SX214_AL_.jpg\nAlphaNumeric: MV5BMTg4MTQ3NTI3Nl5BMl5BanBnXkFtZTcwNzEzODQ2NA\n\nI've made some progress, seeing as the AlphaNumeric is Base64 encoded (the first one becomes 1^A1219656527^A2^Ajpg^Ame702310951), or at least I'm pretty sure based off of the 'jpg' text.  However, I'm not sure how the numbers after the first ^A and the last ^Ame are generated.  If anyone can find a relationship between the movies or their IMDB codes and those numbers, that would be fantastic!\n",
    "votes": "5",
    "answers": 1,
    "views": "984",
    "tags": [
        "api"
    ],
    "user": "Alex Beals",
    "time": "Aug 26, 2014 at 3:52",
    "comments": [
        {
            "user": "Celelibi",
            "text": "<pre><code>1219656527</code></pre> looks like a unix timestamp for the date <pre><code>2008-08-25 11:28:47</code></pre>. No idea for the rest.\n",
            "time": null
        },
        {
            "user": "Alex Beals",
            "text": "@Celelibi unfortunately, if you do the same process for the second, you get the date <pre><code>2029-08-15 8:01:16</code></pre>.  Which doesn't seems as likely.\n",
            "time": null
        },
        {
            "user": "Celelibi",
            "text": "indeed, 2029 is a bit far away. No idea then.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I tried to decode the \"AlphaNumeric\" string for each movie in the Top 250 Chart. \nLooks like they replaced the padding symbol (they use '@' instead of '=') but, once I restored the padding, every decoded string had the same format you reported before (I will use commas, instead of '^A', as field separators): \n<pre><code>1, [numeric value], 2, jpg, me + [numeric value]\n</code></pre>\nI failed to identify any relationships between those numeric fields and the movie IDs, but here is some code for those willing to try:\n<pre><code>import requests\nimport re\nfrom lxml.etree import HTML\nfrom matplotlib import pyplot as plt\nimport numpy\n\nrequest = requests.get('http://www.imdb.com/chart/top?ref_=nv_ch_250_4')\ntree = HTML(request.text)\npath = './/*[@id=\"main\"]/div/div[2]/table/tbody/tr/td[@class=\"posterColumn\"]/a'\ndata = numpy.zeros(shape=(250, 3))\nrow = 0\nfor td in tree.findall(path):\n    movie_id = re.findall('tt(\\d*)/', td.attrib['href'])\n    img = re.findall('M/(.*)\\._V', td.find('./img').attrib['src'])\n    img_decoded = img.pop().replace('@', '=').decode('base64')\n    img_field_1 = re.findall('\\^A(\\d*)\\^A', img_decoded)\n    img_field_2 = re.findall('me(\\d*)', img_decoded)\n    data[row] = movie_id.pop(), img_field_1.pop(), img_field_2.pop()\n    row += 1\n\nfig, (ax1, ax2) = plt.subplots(2, 1, sharex=True)\nax1.scatter(data[:, 0], data[:, 1])  # movie_id vs. img_field_1\nax2.scatter(data[:, 0], data[:, 2])  # movie_id vs. img_field_2\nax1.xaxis.get_major_formatter().set_powerlimits((0, 1))\n</code></pre>\nHere is a small plot showing both decoded fields vs. movie IDs:\n",
            "votes": "3",
            "user": "Maurice",
            "time": "Jul 1, 2015 at 4:38",
            "is_accepted": false,
            "comments": []
        }
    ]
}