{
    "title": "In x64dbg, how to set software breakpoint on specific memory address?",
    "link": "https://reverseengineering.stackexchange.com/questions/27177/in-x64dbg-how-to-set-software-breakpoint-on-specific-memory-address",
    "content": "This is something I know how to do in Olly Debugger, and can't figure out how to do in x64dbg.\nIn Olly Debugger, it's possible to set a hardware or software breakpoint, either on access or on write, to a memory address.\nTo be clear: I am referring here to memory breakpoints, which are set by right clicking an address in the dump window. I am not referring to execution breakpoints, like the INT3 breakpoints you can set in the CPU window when you hit F2.\nIn Olly Debugger, the only practical differences between hardware and software breakpoints is that you're limited to four hardware breakpoints, and with hardware breakpoints, EIP points to the next instruction so you can't see the state of registers or memory before hitting the breakpoint.\nIn x64dbg, it is also possible to set both hardware or software breakpoints on memory. However, in x64dbg the software memory breakpoints always apply to the entire section in which the memory address resides, which makes software memory breakpoints close to useless (I assume it is just using VirtualProtect to guard the whole section, then breaking on any and all access to the section.) In Olly it was possible to set an unlimited number of software, not hardware, memory breakpoints for an individual byte of memory in the dump window.\nAm I just dumb? Is x64dbg really missing this feature?\n",
    "votes": "0",
    "answers": 1,
    "views": "6k",
    "tags": [
        "memory",
        "x64dbg",
        "dynamic-analysis",
        "breakpoint"
    ],
    "user": "tomysshadow",
    "time": "Mar 9, 2021 at 3:56",
    "comments": [
        {
            "user": "morsisko",
            "text": "It's not possible, the \"software\" breakpoints on memory in olly are also just memory breakpoints in x64dbg, just a different name, they also work a bit different in x64dbg.\n",
            "time": null
        },
        {
            "user": "tomysshadow",
            "text": "I suspected that, but it's a shame. I find software breakpoints more intuitive and in Olly I only ever used hardware breakpoints as an alternative if anti-debugging code no longer made my software breakpoints useful. Everything else about x64dbg is an upgrade, but from unlimited breakpoints to four useful ones is an objective downgrade...\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Yes, it is explicitly not supported on the issues page, however, if you are very serious about using x64dbg, it does support writing plugins that create breakpoints and react to debugger events such as breakpoints being hit... so you could write your own plugin that does what you want.\n",
            "votes": "1",
            "user": "P. Private",
            "time": "Mar 9, 2021 at 6:14",
            "is_accepted": true,
            "comments": [
                {
                    "user": "tomysshadow",
                    "text": "<span class=\"comment-copy\">I'm not sure how it's implemented in Ollydbg, but I'm tempted to try and hack it in. It's the one feature I find myself missing the most.</span>",
                    "time": null
                }
            ]
        }
    ]
}