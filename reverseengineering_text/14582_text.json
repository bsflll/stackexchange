{
    "title": "IDA python : reading n bytes from an offset",
    "link": "https://reverseengineering.stackexchange.com/questions/14582/ida-python-reading-n-bytes-from-an-offset",
    "content": "Using python in IDA, I would like tu create a partial file dump.\nFor exemple I would like to dump the data from offset X for a size of Y.\nI believe I could do it by using the <pre><code>idc.Dword</code></pre> function :\n<pre><code>offset = X\nres = []\nwhile offset < offset + Y:\n    res.append(idc.Dword(offset))\n    offset += 4\nreturn res\n</code></pre>\nIs there a way of achieving that without reading manually each address?\n",
    "votes": "1",
    "answers": 1,
    "views": "14k",
    "tags": [
        "ida",
        "python"
    ],
    "user": "user3714670",
    "time": "Feb 6, 2017 at 14:14",
    "comments": [
        {
            "user": "b27etula",
            "text": "See idc.get_bytes: def get_bytes(ea, size, use_dbg = False)\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<pre><code>idaapi.get_many_bytes</code></pre> did the trick :\nhttps://www.hex-rays.com/products/ida/support/idapython_docs/ida_bytes-module.html#get_many_bytes\nUpdate for newer versions :\n<pre><code>Python>get_bytes.__doc__\nReturn the specified number of bytes of the program\n    @param ea: linear address\n    @param size: size of buffer in normal 8-bit bytes\n    @param use_dbg: if True, use debugger memory, otherwise just the database\n    @return: None on failure\n             otherwise a string containing the read bytes  \n</code></pre>\nhttps://www.hex-rays.com/products/ida/support/idapython_docs/ida_bytes-module.html#get_bytes\n",
            "votes": "2",
            "user": "sudhackar",
            "time": "Jul 21, 2020 at 18:01",
            "is_accepted": false,
            "comments": []
        }
    ]
}