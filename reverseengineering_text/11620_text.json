{
    "title": "How to test if register value is unavailable in gdb?",
    "link": "https://reverseengineering.stackexchange.com/questions/11620/how-to-test-if-register-value-is-unavailable-in-gdb",
    "content": "I'm using a .gdbinit file that is supposed to print the values of all registers at every hook_stop, followed by the stack and data frames.  However, when running many programs, there are often segment registers that are unavailable, which is causing me problems. The script aborts when it encounters such a register.  I get the error message: <pre><code>Error while running hook_stop: value is not available</code></pre>.  Because of the error, none of the remaining segment registers are printed, nor are the stack and data frames.\nI want to know if there is a way to handle the error in the gdb scripting language, or better yet, just test if a register is available, and only print it if it is.  I've tried:\n<pre><code>if $ds\n    printf \" %04X  \", $ds\nelse\n    printf \" ----  \"\nend\n</code></pre>\nbut that's still giving me the error.  I read through the docs for hours and couldn't find anything that worked.  Any ideas?\n",
    "votes": "3",
    "answers": 1,
    "views": "1k",
    "tags": [
        "gdb"
    ],
    "user": "camercu",
    "time": "Dec 24, 2015 at 7:49",
    "comments": [],
    "answers_data": [
        {
            "content": "I've figure it out. You can figure out if a value is available by inspecting it via python:\nI've create a convenience function which you can call from your <pre><code>.gdbinit</code></pre> to easily check if the value is available.\nSave this in a python file and source it in your <pre><code>.gdbinit</code></pre>:\n<pre><code>class IsValid (gdb.Function):\n    def __init__ (self):\n        super (IsValid, self).__init__(\"isvalid\")\n\n    def invoke (self, var):\n        if var.__str__() == \"<unavailable>\":\n            return 0\n        else:\n            return 1\n\nIsValid ()\n</code></pre>\nBy calling this convenience function, you can branch to handle the error:\n<pre><code>if ($isvalid($ds))\n    printf \" %04X  \", $ds\nelse\n    printf \" ----  \"\nend\n</code></pre>\n",
            "votes": "2",
            "user": "Leandros",
            "time": "Aug 19, 2016 at 15:32",
            "is_accepted": true,
            "comments": []
        }
    ]
}