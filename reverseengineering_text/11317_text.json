{
    "title": "Ollydbg v 1.10 plugin writing",
    "link": "https://reverseengineering.stackexchange.com/questions/11317/ollydbg-v-1-10-plugin-writing",
    "content": "I am trying to write a plugin which, beside other things, would need to write assembly of some code segments into a file. Since the documentation is somewhat lacking I'm lost on some things and not sure how to use functions for disassembly. I'm reading commands with Readcommand function and then using Disasm function to get the assembly code but all I am getting is some gibberish. Also, in a help file it says that Readcommand function should return the actual size of instruction read, but it always returns maximum size. Any help on what I'm doing wrong or how to proceed to get the assembly code would be appreciated. Code with which I'm trying to get disassembly is located below.\n\ncode_length = Readcommand(reg->ip, cmd);\n  instruction_length =\n  Disasm(cmd, code_length, reg->ip, dest, disasm, DISASM_ALL,thread_id);\n",
    "votes": "1",
    "answers": 2,
    "views": "191",
    "tags": [
        "ollydbg",
        "plugin"
    ],
    "user": "newbie",
    "time": "Nov 12, 2015 at 8:34",
    "comments": [],
    "answers_data": [
        {
            "content": "ReadCommand() Returns bytes from internally cached buffer and returns atmost MAXCMDSIZE Bytes\nthe below snippet will take an address (HEX ONLY) \nread the command print the bytes and disassembly pertaining that address to log window \ntake a look\n<pre><code>void disasm( void) {\n  ULONG data = 0;\n  if((Getlong(\"enter address to disassemble\",&data,4,0,DIA_HEXONLY)) != -1) {\n    Addtolist(data,1,\"eip provided is %x\n\",data);\n    char buff[MAXCMDSIZE+10] = {0};\n    ULONG srcsize = 0;\n    t_disasm mydisasm = {0};\n  if((srcsize = Readcommand(data,buff)) !=0) {\n    char pbuff[50] = {0};\n    for (ulong i = 0;i<srcsize; i++){\n      sprintf_s((char *)(pbuff+(i*2)),50,\"%02x\",*(char *)(buff+i));     \n    }\n    Addtolist(data,1,\"command read %s size %x\n\",pbuff,srcsize);\n    Disasm((uchar *)buff,srcsize,data,NULL,&mydisasm,DISASM_ALL,NULL);\n    Addtolist(data,1,\"%s\n\",mydisasm.result);\n    }    \n  }  \n}\n</code></pre>\n",
            "votes": "4",
            "user": "blabb",
            "time": "Nov 12, 2015 at 12:03",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "I've solved it. If anyone else will have same or similar problem, proper way to call Disasm function is (with cmd variable defined as in the question):\n\nDisasm(cmd, code_length, reg->ip, DEC_UNKNOWN, DISASM_ALL, thread_id);\n",
            "votes": "0",
            "user": "newbie",
            "time": "Nov 12, 2015 at 11:26",
            "is_accepted": false,
            "comments": []
        }
    ]
}