{
    "title": "what is metaData of assemblies and what is used for",
    "link": "https://reverseengineering.stackexchange.com/questions/29860/what-is-metadata-of-assemblies-and-what-is-used-for",
    "content": "hi there I hope you doing well\nlately, I have searched about ildasm and how to protect my DLLs from reverse engineering,\nso I found some great open source projects (ConfuseEx..), it works when I tried the reverse engineering my dll with ILSpy it didn't show my code and because of my curiosity I start searching how that happened,\nI found the reverse engineering depends on the metaData of the DLL to show Extract the code with ildasm.exe so this lead me to ask some questions I didn't find answers to them,\ndid the ConfuseEx corrupt metaData of the assemblies to protect them from reverse Engineering?\nis metaData used to define the functions of the assembly to other assemblies to use them? (without defined functions in metaData we cant access the DLL function)\ncan I protect my function content by corrupting metaData variable definitions and all these defined functions?\n",
    "votes": "1",
    "answers": 1,
    "views": "231",
    "tags": [
        "assembly",
        ".net",
        "c#"
    ],
    "user": "makri aymen abderraouf",
    "time": "Jan 12, 2022 at 22:26",
    "comments": [],
    "answers_data": [
        {
            "content": "Type typical use of meta data in .NET assemblies is documented here\nMetadata describes every type and member defined in your code in a language-neutral manner. Metadata stores the following information:\n\nDescription of the assembly.\nIdentity (name, version, culture, public key)\nThe types that are exported.\nOther assemblies that this assembly depends on\nSecurity permissions needed to run.\nDescription of types.\nName, visibility, base class, and interfaces implemented.\nMembers (methods, fields, properties, events, nested types).\nAttributes\nAdditional descriptive elements that modify types and members.\n\nIt is common for .NET obfuscators to modify this metadata to increase the complexity of reverse engineering.\nConfuserEx uses many different techniques for .NET obfsucation. The most basic for preventing opening with IlDasm is applying an attribute \"SuppressIldasmAttribute\" to the assembly. However nearly all modern decompilers will ignore this attribute, it doesn't add meaningful protection on its own.\nIn relation to metadata ConfuserEx also uses \"Invalid Metadata Protection\" where invalid data is added to the meta data, which can prevent older decompilers opening the assembly but modern decompilers already work around this protection.\nFull list of protections ConfuserEx uses is documented here\n",
            "votes": "1",
            "user": "chentiangemalc",
            "time": "Jan 12, 2022 at 23:24",
            "is_accepted": true,
            "comments": []
        }
    ]
}