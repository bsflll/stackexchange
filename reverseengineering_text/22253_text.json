{
    "title": "How to Calculate ds Pointer",
    "link": "https://reverseengineering.stackexchange.com/questions/22253/how-to-calculate-ds-pointer",
    "content": "How do I calculate the location of the string in this sample located at offset <pre><code>0x1CAD8</code></pre>?\nThe instruction at <pre><code>0x140001A97</code></pre> in the sample is:\n<pre><code>0x140001A97   F2 0F1005 39C60100   movsd xmm0, qword [rip + str..exe]\n</code></pre>\nThe opcode has <pre><code>0x39C60100</code></pre> which is <pre><code>0x1C639</code></pre>. If I add that to <pre><code>rip</code></pre>, I don't land on the address of the string:\n<pre><code>0x140001A97 -> offset = 0xE97\n</code></pre>\n<pre><code>0xE97 + 0x8 + 0x1C639 = 0x1D4D8\n</code></pre>\nThe string's offset is <pre><code>0x1CAD8</code></pre> not <pre><code>0x1D4D8</code></pre>\nWhat am I missing?\nThe sample is Ryuk:\n<pre><code>18faf22d7b96bfdb5fd806d4fe6fd9124b665b571d89cb53975bc3e23dd75ff1</code></pre>\nIf you need a copy of the sample, a base64 encoded passworded zip archive with the sample is located here:\nhttps://pastebin.com/aKskMXY7\nThe password for that zip file is <pre><code>reseinfected</code></pre>. If you need something to decode base64 quickly, use this cyberchef recipe:\n<pre><code>From_Base64('A-Za-z0-9+/=',true)\n</code></pre>\n",
    "votes": "0",
    "answers": 2,
    "views": "106",
    "tags": [
        "disassembly",
        "assembly",
        "malware"
    ],
    "user": "Utkonos",
    "time": "Oct 5, 2019 at 16:00",
    "comments": [],
    "answers_data": [
        {
            "content": "I think you are confusing yourself somehow and mixing up file offsets with virtual offsets  \nlets try a simple example  \nopen a random exe in windbg\npatch the bytes in the current instruction Pointer\ndisassemble\nsubtract and look \nexplanation for commands below\ncdb is console equivalent for windbg\n-c is the command line to be passed to the debugger\neb . is enter bytes at the current instruction pointer (. (dot denotes current ip))\nit is followed by bytes from your post\nthen I disassemble one single instruction at current ip using u . l1\nI query what the current ip isby ? $ip\nand quit \ntake the results and do the subtraction with python    \n<pre><code>C:\\>cdb -c \"eb . F2 0F 10 05 39 C6 01 00;u . l1;? $ip;q\" cdb | f:\\git\\usr\\bin\\awk \"/Reading/,/quit/\"\n0:000> cdb: Reading initial command 'eb . F2 0F 10 05 39 C6 01 00;u . l1;? $ip;q'\nntdll!LdrpDoDebuggerBreak+0x30:\n00007ffc`69ad2dbc f20f100539c60100 movsd   xmm0,mmword ptr [xxx (00007ffc`69aef3fd)]\nEvaluate expression: 140722081443260 = 00007ffc`69ad2dbc\nquit:\n\nC:\\>python -c \"print (hex(0x7ffc69aef3fd-(0x7ffc69ad2dbc+8)))\"\n0x1c639\n</code></pre>\nrereading your posts it appears you have indeed mixed up raw offsets with virtual offsets\nuse 0x1a97 instead of 0xe97 (0xc00 bytes accounted for)\nlocate in which section your string is in\nand add the difference between section Va and Section Pointer to RawData\nI believe it would account for the remaining 0xa00 bytes\n",
            "votes": "1",
            "user": "blabb",
            "time": "Oct 6, 2019 at 5:32",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<pre><code>(14001E0D8-140001A97)-8 = 1C639, VA 14001E0D8 is offset 0001CAD8</code></pre>\nThis is the answer. Thanks to an individual on one of the lists I'm on.\n",
            "votes": "0",
            "user": "Utkonos",
            "time": "Oct 6, 2019 at 21:23",
            "is_accepted": true,
            "comments": []
        }
    ]
}