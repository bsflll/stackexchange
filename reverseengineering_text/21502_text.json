{
    "title": "Reverse engineering non-standard LIN protocol",
    "link": "https://reverseengineering.stackexchange.com/questions/21502/reverse-engineering-non-standard-lin-protocol",
    "content": "I'm trying to reverse engineer an ECU / GSU protocol from a model airplane jet turbine, in order to make a telemetry adapter.\nI have decoded several other protocols in the past with good success but this one is especially tough, so I thought I would ask for assistance.\nI have an Arduino Nano as the GSU emulator, with a LIN transceiver and verifying communication on a Saleae logic analyser.\nThe ECU uses a LIN interface but on a proprietary protocol unknown to me. In order to read it I am using an Arduino with a level shifter, and I verified that the incoming data is correct.\nWhen ECU is stand alone, it sends several strings which appear to be interrogations for bus nodes, but nobody is replying obviously.\n<pre><code>0x0A 0x00 0x00 0x00 0x00 0x0A\n0x14 0x00 0x00 0x00 0x00 0x14\n0x1E 0x00 0x00 0x00 0x00 0x1E\n0x28 0x00 0x00 0x00 0x00 0x28\n</code></pre>\nWhen the GSU is connected to the ECU, it responds immediately (<pre><code>0.2</code></pre>ms) after the first string (<pre><code>0x0A 0x00 0x00 0x00 0x00 0x0A</code></pre>), with a <pre><code>6</code></pre> byte reply. Each time it is a slightly different reply.\nSuch a reply is followed by the ECU sending a stream of data, which is the data I need to read.\nI tried emulating some of these GSU replies with Arduino, but the ECU never sends the stream of data back on the bus if the arduino is interrogating it; it just ignores it and continues interrogating as if nothing happened. With the GSU interrogating, the ECU replies.\nI have attached an Excel table that shows some of the replies and a bit of data processing I played with. It appears that the reply is a <pre><code>6</code></pre> byte stream, where the MSB (most significant BIT) of each byte is either <pre><code>0</code></pre> or <pre><code>1</code></pre>. I'm not sure about the rules here and why it's changing.\nDoes this make sense to anyone? \nAny reverse engineering experts can share some ideas?\nSo far haven't been able to get the ECU to answer to Arduino.\nThanks for your help.\n",
    "votes": "3",
    "answers": 0,
    "views": "163",
    "tags": [
        "protocol"
    ],
    "user": "i3dm",
    "time": "Jun 18, 2019 at 10:24",
    "comments": [
        {
            "user": "Johann Aydinbas",
            "text": "This is unfamiliar territory for me but it would be good to have pairings of data the ECU sends and what the GSU responds immediately after. My guess is it's either a challenge-response scheme, or the ECU is possibly broadcasting a key of some sorts which is in turn used immediately by the GSU to encrypt its replies. If you have such pairings one could spot a pattern. Also, the fact that just replaying data the GSU sent before isn't working supports that theory (crypto, challenge-response).\n",
            "time": null
        }
    ],
    "answers_data": []
}