{
    "title": "Reverse Engineering Wifi Chip-set Firmware [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/13880/reverse-engineering-wifi-chip-set-firmware",
    "content": "Closed. This question needs to be more focused. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Update the question so it focuses on one problem only by editing this post.\n\n\nClosed 8 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nI have Sparrow Wireless Adapter which from Qualcomm originally Wilocity that supports Wifi over 60 GHz (802.11ad or WiGiG). I have the firmware files of the wireless chipset (wil6210.fw and wil6210.brd). I would like to know the following:\n\nDid anyone manage to reverse engineer the firmware and and get an insight regarding the implementation?\nHow would it be possible to know if the firmware is protected/encrypted or not?\nWhat is the best tool to dissemble the firmware file and extract useful information out of it and allow to build new firmware?\n",
    "votes": "1",
    "answers": 0,
    "views": "783",
    "tags": [
        "disassembly",
        "linux",
        "firmware"
    ],
    "user": "IoT",
    "time": "8 years ago",
    "comments": [
        {
            "user": "Konrad Eisele",
            "text": "Does anybody know which BB processor wilocity is using: Mips or Arm?\n",
            "time": null
        },
        {
            "user": "Konrad Eisele",
            "text": "It seems to be an ARC from Synopsys. IDA's ARCompact disassembly of the Wilocity target memory indicated that.\n",
            "time": null
        }
    ],
    "answers_data": []
}