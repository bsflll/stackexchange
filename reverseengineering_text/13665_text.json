{
    "title": "Trouble deparsing Perl encrypted with Filter::Crypto::Encrypt",
    "link": "https://reverseengineering.stackexchange.com/questions/13665/trouble-deparsing-perl-encrypted-with-filtercryptoencrypt",
    "content": "I am trying to use <pre><code>perl -MO=Deparse</code></pre> to get readable source code from encrypted Perl files.\nThe Perl script I'm trying to deparse starts with <pre><code>use Filter::Crypto::Decrypt;</code></pre>.  \nThe error I'm getting is:\n<pre><code>Can't run with Perl compiler backend at /System/Library/Perl/5.18/XSLoader.pm line 95. \nBEGIN failed--compilation aborted at /Library/Perl/5.18/darwin-thread-multi-2level/Filter/Crypto/Decrypt.pm line 37.\n</code></pre>\nWhen reading this webpage, it says:\n\nCan't run with Perl compiler backend\n  (F) The encrypted Perl file is being run by a perl with the Perl compiler backend enabled, e.g. perl -MO=Deparse file. This is not allowed since it may assist in retrieving the original unencrypted source code.\n\nIf I understand this correctly, then this is a security measure to prevent people from doing exactly what I'm trying to do. Correct? Is there any way to override this?\n",
    "votes": "3",
    "answers": 1,
    "views": "1k",
    "tags": [
        "decryption"
    ],
    "user": "TeddyBones",
    "time": "Oct 8, 2016 at 7:49",
    "comments": [
        {
            "user": "kennytm",
            "text": "I think you could decrypt it first before running Deparse.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Since this is an intended prevention and there's no technical limitation behind this error message, it should be easy enough to just patch out the explicit check in the <pre><code>perl</code></pre> executable. You could then have your own version of perl that allows the decryption of the perl program and exposes the original source code.\n",
            "votes": "2",
            "user": "NirIzr",
            "time": "Oct 20, 2016 at 4:32",
            "is_accepted": true,
            "comments": []
        }
    ]
}