{
    "title": "In angr, how to Load and Analyze a binary file that only contain a function instructions",
    "link": "https://reverseengineering.stackexchange.com/questions/14641/in-angr-how-to-load-and-analyze-a-binary-file-that-only-contain-a-function-inst",
    "content": "I have some binary files, each of them contain instructions of a function, (may be a little more in the end). The begining of the file also is the start point of the function. \nThis files were extracted from a ELF file.The platform is arm64.\nSo, how to load and analyze this file using angr?\nI upload a sample file here: xfrank.pythonanywhere.com/bin\n\nThe original target:\nEvery function has a \"switch case statement\", the target is to get all intergers of the case expression.\nExample(C code):\n<pre><code>void func1(int cmd){\n    switch (cmd) {\n    case 1:\n        xxxx\n        break;\n    case 10:\n        yyyy;\n        break;\n    }\n}\n</code></pre>\nResult: 1,10\n",
    "votes": "2",
    "answers": 1,
    "views": "997",
    "tags": [
        "binary"
    ],
    "user": "Swing",
    "time": "Feb 18, 2017 at 8:39",
    "comments": [
        {
            "user": "julian",
            "text": "Can you share some of these binary files with us?\n",
            "time": null
        },
        {
            "user": "Swing",
            "text": "I upload a sample file here: xfrank.pythonanywhere.com/bin\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Here are the steps I would normally do:\n\nLoad the binary in angr.\nBuild a CFG.\nFor each function you care about, first, get a reference of the function (<pre><code>func = cfg.functions[addr]</code></pre> or <pre><code>func = cfg.functions.function(name=the_name)</code></pre>), and then traverse the graph (<pre><code>func.graph</code></pre> or <pre><code>func.transition_graph</code></pre>).\n",
            "votes": "3",
            "user": "Fish",
            "time": "Aug 16, 2017 at 20:31",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Swing",
                    "text": "<span class=\"comment-copy\">How to load the binary in angr without any 'head' info?</span>",
                    "time": null
                },
                {
                    "user": "Fish",
                    "text": "<span class=\"comment-copy\">What's head info? Are you talking about loading binary blobs directly? You can manually specify format facts when loading, like architecture, loading offsets, etc. This is not well-documented currently in angr-docs, but it is documented in the doc-strings of <code>angr.Project()</code> and <code>cle.Loader</code>.</span>",
                    "time": null
                }
            ]
        }
    ]
}