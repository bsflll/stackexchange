{
    "title": "Why some anti-debugging/malware does `wmiadap.exe /f /t /r`?",
    "link": "https://reverseengineering.stackexchange.com/questions/33045/why-some-anti-debugging-malware-does-wmiadap-exe-f-t-r",
    "content": "It seems some possibly legit software, but also malware does <pre><code>wmiadap.exe /f /t /r</code></pre>. Apparently it's part of their anti-debugging attempts. (On Linux some such software I've seen drops a <pre><code>coredump_filter</code></pre> instead, in <pre><code>/proc</code></pre>.)\nI've looked at the Win docs for <pre><code>wmiadap</code></pre> but I don't quite understand the point:\n\nThe WmiPerfClass provider updates WMI Performance Counter Classes only when a new performance object is added. You still can run Wmiadap with the /r switch to parse the Windows Driver Model drivers to create performance objects. The /f switch still forces an update of the WMI classes from the performance libraries.\n\nThe <pre><code>/t</code></pre> flag is not documented (there, by MS).\nHow does that <pre><code>wmiadap.exe /f /t /r</code></pre> help with anti-debugging?\n",
    "votes": "1",
    "answers": 0,
    "views": "200",
    "tags": [
        "windows",
        "anti-debugging"
    ],
    "user": "got trolled too much this week",
    "time": "Jun 24, 2024 at 0:47",
    "comments": [
        {
            "user": "got trolled too much this week",
            "text": "I suspect it's because ProcMon (rather than a typical debugger) uses a filter driver. medium.com/@demonia/â€¦ I'm not sure how effective the method is though. Remains to be tested.\n",
            "time": null
        }
    ],
    "answers_data": []
}