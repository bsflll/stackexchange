{
    "title": "Difference between Main and Entry",
    "link": "https://reverseengineering.stackexchange.com/questions/25827/difference-between-main-and-entry",
    "content": "Sometimes, I see while disassembling a binary that there is the <pre><code>main</code></pre> function. but sometimes, instead of <pre><code>main</code></pre>, there is <pre><code>entry</code></pre> function.\nI want to know what is the difference between <pre><code>entry</code></pre> and <pre><code>main</code></pre>.\n",
    "votes": "5",
    "answers": 2,
    "views": "2k",
    "tags": [
        "disassembly",
        "binary-analysis",
        "c"
    ],
    "user": "lucky thandel",
    "time": "Sep 7, 2020 at 6:50",
    "comments": [],
    "answers_data": [
        {
            "content": "<pre><code>Main</code></pre> is usually a programmer-defined entry point, while <pre><code>entry</code></pre> is defined by the compiler, it's doing many other operations such as <pre><code>libc</code></pre> initializations, heap allocation, and so on, and eventually, call the user-defined <pre><code>main</code></pre> entry point. You can see <pre><code>main</code></pre> as a callback function that defined by the user and eventually called by <pre><code>entry</code></pre>.\n",
            "votes": "16",
            "user": "macro_controller",
            "time": "Sep 7, 2020 at 7:18",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "The entry function you mentioned is the function where the entry point of the program is located. This entry function contains the first instructions of the program executed when you run the program.\nThe main function recognized by disassemblers is the the function where the main function of the program which code is compiled directly from the the developer's main function code.\n",
            "votes": "1",
            "user": "Minh-Triet Pham Tran",
            "time": "Sep 8, 2020 at 3:33",
            "is_accepted": false,
            "comments": []
        }
    ]
}