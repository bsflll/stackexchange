{
    "title": "Automating a custom QGraphicsObject control in an external QT based process",
    "link": "https://reverseengineering.stackexchange.com/questions/9353/automating-a-custom-qgraphicsobject-control-in-an-external-qt-based-process",
    "content": "I have injected a DLL into an external application that is based on the QT framework. I, then, use the method <pre><code>QApplication::allWidgets()</code></pre> and iterate through the list of widgets to find a <pre><code>QGraphicsView</code></pre> that represents the window I want to interact with. \nThe buttons and other controls in the scene are all derived from <pre><code>QGraphicsObject</code></pre>. But, I don't have the source. So, I can only cast to <pre><code>QGraphicsObject</code></pre> and not to the actual type. \nThe list of methods from the meta-object is incomplete, which is to be expected, because I cast to a <pre><code>QGraphicsObject</code></pre>. I can find the method names using IDA though. \nIs it possible to call a particular method, and how would you do it?\n",
    "votes": "3",
    "answers": 0,
    "views": "129",
    "tags": [
        "automation",
        "injection",
        "qt"
    ],
    "user": "pokerguy",
    "time": "Jul 15, 2015 at 7:51",
    "comments": [
        {
            "user": "fileoffset",
            "text": "I would probably try and walk the objects vtable (don't cast it to QGraphicsObject).\n",
            "time": null
        },
        {
            "user": "Jason Geffner",
            "text": "As an aside, are you sure the functions you're calling are thread-safe?\n",
            "time": null
        },
        {
            "user": "pokerguy",
            "text": "@fileoffset I will try this, but I am not familiar with how to find the method in the vtable. I will do some research, but if you have a link to a relevant article, please post it.\n",
            "time": null
        },
        {
            "user": "pokerguy",
            "text": "@JasonGeffner I am not sure if it is. Is there anyway to determine this without having the source?\n",
            "time": null
        },
        {
            "user": "fileoffset",
            "text": "Unfortunately there is no standard for vtables, each compiler can implement it how it likes. Can you determine which compiler&version was used to create the binary? If it was MSVS, what you can do is install that version of MSVS, and then write a small test program with a basic class that inherits from QGraphicsObject. Then you can compile it with some special flags (see answer #2 here: stackoverflow.com/questions/302446/â€¦) and MSVS will output the format of the object, including the vtable.\n",
            "time": null
        }
    ],
    "answers_data": []
}