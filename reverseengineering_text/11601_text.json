{
    "title": "How can I step through instructions in IDA and know the current EIP?",
    "link": "https://reverseengineering.stackexchange.com/questions/11601/how-can-i-step-through-instructions-in-ida-and-know-the-current-eip",
    "content": "<pre><code>import idaapi\nx=0\nwhile x<10:\n    idaapi.step_into()\n    rv = idaapi.regval_t()\n    idaapi.get_reg_val('EIP',rv)\n    ea = rv.ival\n    print hex(ea)\n    x+=1\n</code></pre>\nHi. Here is a script to step-into 10 times.\nI want to have an updated version of EIP value with idaapi.get_reg_val() API\nIf i run this code here is what i get.\n<pre><code>0xffffffffffffffffL\n0xffffffffffffffffL\n0xffffffffffffffffL\n0xffffffffffffffffL\n0xffffffffffffffffL\n0xffffffffffffffffL\n0xffffffffffffffffL\n0xffffffffffffffffL\n0xffffffffffffffffL\n0xffffffffffffffffL\n</code></pre>\nAlthough the actual EIP value is valid all the time\nI've also tried other path \n<pre><code>while ea !=0x0040af75:\n    idaapi.step_into()\n    eip = GetRegValue('EIP')\n    print eip\n</code></pre>\nBut then I just get pure error, the meaning of which is misterious to me\n<pre><code>Traceback (most recent call last):\n  File \"<string>\", line 3, in <module>\n  File \"C:\\Program Files (x86)\\IDA 6.8\\python\\idc.py\", line 7889, in GetRegValue\n    assert res, \"get_reg_val() failed, bogus register name ('%s') perhaps?\" % name\nAssertionError: get_reg_val() failed, bogus register name ('EIP') perhaps?\n</code></pre>\nSo it looks like either way it calls this low-level func - get_reg_val but can't use the string argument normaly.\nBoth theese functions get_reg_val and GetRegValue() work fine if not within a loop.\nHelp me\n",
    "votes": "1",
    "answers": 2,
    "views": "7k",
    "tags": [
        "ida",
        "idapython",
        "register"
    ],
    "user": "Antiusninja",
    "time": "Dec 20, 2015 at 11:34",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "Since your output shows 64 bit values, maybe you're debugging a 64 bit program and should use <pre><code>RIP</code></pre> instead of <pre><code>EIP</code></pre> ?\n",
            "time": null
        },
        {
            "user": "Antiusninja",
            "text": "Ok. I'll try that. But why does it work without a loop and also why I've got 32bit registers show in the window while I'm debugging the app in the regular mode? It doesn't make sence\n",
            "time": null
        },
        {
            "user": "Antiusninja",
            "text": "Didn't help and the program is actually 32 bit\n",
            "time": null
        },
        {
            "user": "Igor R.",
            "text": "Just a wild guess: maybe in 'EIP' string some symbol happens to be non-ascii (e.g. due to an accidental keyboard layout change)?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "The valid answer to this problem is in the fact that python script and the debugger execution flows perform asynchornously. So each time we ask the debugger to do a step_into(), we also need to wait for this process to end.\nThis can be done by inserting GetDebuggerEvent(WFNE_SUSP, -1) after step_into\n<pre><code>import idaapi\n\nx=0\nwhile x<10:\n    idaapi.step_into()\n    GetDebuggerEvent(WFNE_SUSP, -1)      \n    rv = idaapi.regval_t()\n    print idaapi.get_reg_val('EIP',rv)\n    ea = rv.ival\n    print hex(ea)\n    x+=1\n</code></pre>\n",
            "votes": "5",
            "user": "Antiusninja",
            "time": "Dec 21, 2015 at 11:04",
            "is_accepted": false,
            "comments": [
                {
                    "user": "newgre",
                    "text": "<span class=\"comment-copy\">btw, idautils has a nice helper class that is more readable: cpu.Eip</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "Have got the same error as in your other path, but with ESP register:\n<pre><code>Python> GetRegValue('ESP')\n\nFile \"C:\\Program Files (x86)\\IDA 6.8\\python\\idc.py\", line 7889, in GetRegValue\n    assert res, \"get_reg_val() failed, bogus register name ('%s') perhaps?\" % name\nAssertionError: get_reg_val() failed, bogus register name ('ESP') perhaps?\n</code></pre>\nIn my case the reason of this was running Static Analysis session. Just started Debugging, then Suspend manually or by BP, and GetRegVal() works fine.\n<pre><code>Python> GetRegValue('ESP')\n1232116\n</code></pre>\n",
            "votes": "1",
            "user": "орион орионВи",
            "time": "Dec 10, 2018 at 11:02",
            "is_accepted": false,
            "comments": []
        }
    ]
}