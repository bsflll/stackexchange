{
    "title": "IDA: Demangled name simplification in idapython",
    "link": "https://reverseengineering.stackexchange.com/questions/32056/ida-demangled-name-simplification-in-idapython",
    "content": "With idapython I would like to get demangled names with the name simplification (bottom of page) applied to them.\nFor example, the following function:\n<pre><code>Python> ida_name.demangle_name(idc.get_func_name(0x123456), 0)\n\nstd::vector<std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::allocator<std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>>>::vector(void)'\n</code></pre>\nAs you can see, the function name is very long with all the templates. IDA applies some rules from <pre><code>goodname.cfg</code></pre> to simplify this name. In its GUI the following is displayed:\n<pre><code>std::vector<std::string>::vector(void)\n</code></pre>\nMuch better. Is there any way to achieve the same result in idapython? Other than copying and applying all the rules from <pre><code>goodname.cfg</code></pre> inside my script...\n",
    "votes": "2",
    "answers": 1,
    "views": "530",
    "tags": [
        "ida",
        "c++",
        "idapython",
        "idapro-sdk"
    ],
    "user": "Blub",
    "time": "Jul 14, 2023 at 15:18",
    "comments": [
        {
            "user": "ynwarcs",
            "text": "I don't think you can do much better than re-implementing IDA's filtering. Mangled symbol names as output by compilers always contain full specifications of the symbols, which ignore any typedef or using declarations that make them nice and compact in source code.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<pre><code>idaapi.get_ea_name(ea, idaapi.GN_SHORT|idaapi.GN_DEMANGLED)</code></pre> seems to return the filtered demangled name.\n",
            "votes": "5",
            "user": "Igor Skochinsky",
            "time": "Jul 17, 2023 at 19:49",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Blub",
                    "text": "<span class=\"comment-copy\">Oh shit, you are a life saver. Thank you!   edit: <code>idaapi.get_long_name(ea)</code> seems to work as well. guess I should have tried all the functions in the idaapi module. lesson learned, thanks</span>",
                    "time": null
                }
            ]
        }
    ]
}