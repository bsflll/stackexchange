{
    "title": "Understanding Hex-Rays pseudo code",
    "link": "https://reverseengineering.stackexchange.com/questions/20353/understanding-hex-rays-pseudo-code",
    "content": "What is the meaning of the following pseudo-code?:\n\n<pre><code>BYTE1(v2)</code></pre> or <pre><code>BYTE1(v2)</code></pre>\n<pre><code>HIBYTE(v2)</code></pre>\n\nIs there any explanation for those macros? How can I implement those macros in C code?\n",
    "votes": "1",
    "answers": 3,
    "views": "4k",
    "tags": [
        "hexrays"
    ],
    "user": "psudoCode",
    "time": "Jan 14, 2019 at 9:46",
    "comments": [],
    "answers_data": [
        {
            "content": "<pre><code>BYTE1(v2)</code></pre> is the second byte of value v2. according to the reference it's Zero-Indexed. defined as:\n<pre><code>#define BYTEn(x, n)   (*((_BYTE*)&(x)+n))\n#define BYTE1(x)   BYTEn(x,  1)         // byte 1 (counting from 0)\n</code></pre>\nfor example <pre><code>BYTE1(0x1213141516)</code></pre> is 0x15. (according to Little Endian Byte Order)\n<pre><code>HIBYTE(v2)</code></pre> is the higher byte of value v2. defined as:\n<pre><code>#define HIBYTE(x)   (*((_BYTE*)&(x)+1))\n</code></pre>\nfor example <pre><code>HIBYTE(0x1213)</code></pre> is 0x12. (according to Little Endian Byte Order)\n",
            "votes": "4",
            "user": "arman",
            "time": "Jan 13, 2019 at 12:31",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Orwellophile",
                    "text": "<span class=\"comment-copy\">Note: HIBYTE <b>used</b> to mean that, but it has changed (contrary to IDA 7.0 defs.h and minwindef.h) to mean <i>the highest byte</i>, e.g., BYTE7 in an __int64.  Not sure when this happened, but somewhere between 7.1 and 7.5.  Not cool IDA.  After C++ conversion, it now looks like this: <code>*(reinterpret_cast&lt;uint8*&gt;(&amp;x)+(sizeof x/sizeof(uint8) - 1))</code></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "Open your IDA installation folder open plugins\\defs.h, this file contains all of the macros used by the hexrays decompiler. It can also be found at the github in arman's answer.\n",
            "votes": "1",
            "user": "Zman37",
            "time": "Jan 14, 2019 at 22:38",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "Important -- this definition has changed in recent versions of IDA, both in <pre><code>defs.h</code></pre> and in the decompiler output.\nAs of (some version of IDA between 7.1 and 7.5) the meaning of HIBYTE means something different, I guess you would call it the most significant byte, or highest byte, or last byte.\ne.g., in an <pre><code>__int32</code></pre> it now means <pre><code>BYTE3</code></pre>, in an <pre><code>__int64</code></pre> it would mean <pre><code>BYTE7</code></pre>.\nThis is contrary to the default windows definition and older versions of IDA.\n<pre><code>    // minwindef.h\n    auto result_win = static_cast<BYTE>(static_cast<uintptr_t>(x) >> 8 & 0xff);\n\n    // ida_defs_70.h\n    auto result_ida70 = *(reinterpret_cast<uint8*>(&x)+1);\n\n    // ida_defs_75.h\n    auto result_ida75 = *(reinterpret_cast<uint8*>(&x)+(sizeof x/sizeof(uint8) - 1));\n</code></pre>\nMake sure that you are using the definition that applies to your version of IDA, which can be found in <pre><code>defs.h</code></pre> in your IDA executable's path under <pre><code>plugins/</code></pre>\n",
            "votes": "1",
            "user": "Orwellophile",
            "time": "Jan 15, 2021 at 20:33",
            "is_accepted": false,
            "comments": []
        }
    ]
}