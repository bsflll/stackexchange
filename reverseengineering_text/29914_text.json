{
    "title": "How to type data as a relative address in Ghidra?",
    "link": "https://reverseengineering.stackexchange.com/questions/29914/how-to-type-data-as-a-relative-address-in-ghidra",
    "content": "A jump table I am reversing uses relative offsets to both data and functions. These relative offsets are 32-bit integers added to the address that the value is stored at. Does Ghidra support typing these as relative addresses for generating references (like how you can type a value as an absolute address by pressing P)?\nFor example:\n<pre><code>                                 INT_00010f00                                            \n           00010f00 49 ff ff ff       int          FFFFFF49h\n</code></pre>\nIs actually a reference to <pre><code>0x00010f00 + 0xffffff49 = 0x00010e49</code></pre>\n",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ghidra"
    ],
    "user": "Delya Erricson",
    "time": "Jan 25, 2022 at 20:58",
    "comments": [],
    "answers_data": [
        {
            "content": "You can always set it manually to the specific address from the reference dialog (available under R). There you can providing the correct address calculated by adding <pre><code>base address</code></pre> and an <pre><code>offset</code></pre>. If you have more than one, you can automate it via <pre><code>python</code></pre> script.\nI've recorded a video detailing such situation in action https://www.youtube.com/watch?v=FvH7b_qLmbU\n",
            "votes": "1",
            "user": "Paweł Łukasik",
            "time": "Jan 24, 2022 at 17:13",
            "is_accepted": true,
            "comments": []
        }
    ]
}