{
    "title": "Looking for some help for decoding a signal from IR remote",
    "link": "https://reverseengineering.stackexchange.com/questions/31298/looking-for-some-help-for-decoding-a-signal-from-ir-remote",
    "content": "The following signal has been captured from a remote that I suspect code for at least 3 things: the ID: 107, the item: 1, and the color. I didn't change the ID and item here (although I could do so and send the results), I only changed the color for each result:\nResult (color 01): 3  1  2  1  1  5  1  5  2  1  1  1  3  4  4  1  1  3  3  4  1\nResult (color 02): 3  1  2  1  1  4  1  6  2  1  1  1  3  4  3  1  5  1  2  1  1  1  1  2  1\nResult (Color 03): 3  1  2  1  1  4  2  5  2  1  1  1  3  4  3  2  2  1  3  1  1  3  1  1  1\nResult (Color 04): 3  1  2  1  1  3  1  7  2  1  1  1  3  4  5  1  2  3  4  2  2\nResult (Color 05): 3  1  2  1  1  3  1  1  1  5  2  1  1  1  3  4  4  2  1  2  1  4  5\nResult (Color 06): 3  1  2  1  1  3  2  6  2  1  1  1  3  4  3  1  1  2  2  4  2  2  1\nResult (Color 08): 3  1  2  1  1  2  1  8  2  1  1  1  3  4  4  3  1  1  2  1  1  3  3\nResult (Color 09): 3  1  2  1  1  2  1  2  1  5  2  1  1  1  3  4  5  5  2  1  1  1  1  1  2\nResult (Color 0A): 3  1  2  1  1  2  1  1  1  6  2  1  1  1  3  4  3  3  6  4  2\n31211 is obviously just here to tell us this is the start of the message.\nthe 2 following numbers tells us the color, (although something else is needed to distinguish some colors)\n All the information (including some kind of checksum to make sure the message is consistent) seems encoded, and numbers seem to always fit into one bit (values all between 1 and 8). My guess is that we can start to remove 1 to all the values, but then I am stuck ;-(\nAny help from the geniuses I see here solving much harder problems is welcome!!\n",
    "votes": "2",
    "answers": 0,
    "views": "46",
    "tags": [
        "encryption"
    ],
    "user": "Vincent",
    "time": "Dec 24, 2022 at 11:50",
    "comments": [
        {
            "user": "Vincent",
            "text": "Original data ex: 700 \t250 \t500 \t250 \t250 \t1250 \t250 \t1200 \t500 \t250 \t250 \t250 \t750 \t1000 \t950 \t250 \t250 \t750 \t750 \t1000 \t250. all multiples of 250, so instead or writing \"500ms\", I wrote \"2\". Consistent data +/- 50ms. The problem is, it's not exactly 1 number = 1 information, it is encoded. The numbers correspond to octals, you can -1 and change to binary,.  I think some HASH/decoding method (eg: numbers have to be read in reverse from right to left) +some additions should be able to give us the numbers of the checksum (I guess some of the last numbers of this series.)\n",
            "time": null
        },
        {
            "user": "Vincent",
            "text": "I think in the past I was successful to decode similar equipment code from another manufacturer by applying some kind of a xor encryption and reverse the bits.\n",
            "time": null
        },
        {
            "user": "Vincent",
            "text": "1- The signal is correct, if I use as IR output, it works. 2- Every 250ms per value seems clear. 3- If we remove 1 from all the values first, it gives us octets, 4- Let's rephrase: Original data like WWXXYYYYZZZZZ, where WW = color, XX = 1, 2 or 3, YYYY = ID number, ZZZZ = additional info; A checksum (AA) is added (at the end?) eg: WWXXYYYYZZZZZAA, then a transformation (checksum as key?) changes the values WW...ZZZ, number 20100 is added in front as packet start signal. +1 *250ms when sending IR. Once decoded: all WWXXYYYYZZZZZ where only WW is different.\n",
            "time": null
        }
    ],
    "answers_data": []
}