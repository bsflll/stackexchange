{
    "title": "Why does Hex-rays thinks that 32bit PE is 16bit?",
    "link": "https://reverseengineering.stackexchange.com/questions/2840/why-does-hex-rays-thinks-that-32bit-pe-is-16bit",
    "content": "I'm using IDA 6.1 32-bit version.\nI'm pretty new to IDA and Hex-rays decompiling. My goal is to generate some C source from a 32-bit PE executable. I know this file is 32-bit PE executable. I've looked at the header struct in a hex editor and confirmed that it has the PE header segment. When I dissassemble the file in IDA Pro, it recognizes that it is an x86 PE executable file.\nFurther, IDA produces the following output after analyzing the header segment:\n<pre><code>; Format      : Portable executable for 80386 (PE)\n; Imagebase   : 400000\n; Section 1. (virtual address 00001000)\n; Virtual size                  : 011DAC9D (18721949.)\n; Section size in file          : 011DB000 (18722816.)\n; Offset to raw data for section: 00001000\n; Flags 60000020: Text Executable Readable\n; Alignment     : default\n; OS type         :  MS Windows\n; Application type:  Executable 32bit\n</code></pre>\nHowever, when I select a function and attempt F5 to open the Pseudocode window, I am greeted with the unhelpful message:\n\nDecompilation failure: FFFFFFFF: 16bit functions are not supported\nPlease refer to the manual to find appropriate actions\n\nSo, I referred to the manual, which is also unhelpful:\n\nThe message text says it all. While the decompiler itself can be fine\n  tuned to decompile 16-bit code, this is not a priority for now. May be\n  in the future it will support 16-bit code.\n\nThe thing is that this isn't 16-bit code. What am I doing wrong?\n\nPS If I need to provide more information to help in answering this question, please let me know. I'm very new to IDA/Hex-rays and I'm not sure what else would be useful here.\n",
    "votes": "6",
    "answers": 0,
    "views": "2k",
    "tags": [
        "ida",
        "decompilation"
    ],
    "user": "crush",
    "time": "Nov 3, 2013 at 14:09",
    "comments": [
        {
            "user": "peter ferrie",
            "text": "A link to a copy of the actual file would help (and have you verified that the file is not corrupted?)\n",
            "time": null
        },
        {
            "user": "crush",
            "text": "I can run the file so it's not corrupted. I don't have permission to paste a copy of the file. I might be able to paste bits and pieces of information if you steer me in the direction to what you are looking for. I'm mainly interested in understanding why Hex-rays thinks this is a 16bit application, when it is clearly 32bit.\n",
            "time": null
        },
        {
            "user": "Simeon Pilgrim",
            "text": "When you view the segment in the Segment View (Shift+F7) does the AD field show 16 or 32?\n",
            "time": null
        },
        {
            "user": "SSpoke",
            "text": "I found a application which does this exactly, every function (30000 of them) is <pre><code>FFFFFFFF: decompilng 16bit functions are not supported</code></pre> seems to be some obfuscator that tricks IDA?\n",
            "time": null
        },
        {
            "user": "SamB",
            "text": "It would probably be a lot easier to figure out what's going on given excerpts from the disassembly, such as an affected function or the beginning of the segment ...\n",
            "time": null
        }
    ],
    "answers_data": []
}