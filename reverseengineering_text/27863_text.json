{
    "title": "How can I get the correct offset from that instruction?",
    "link": "https://reverseengineering.stackexchange.com/questions/27863/how-can-i-get-the-correct-offset-from-that-instruction",
    "content": "I have the following instructions:\n\nThe registers' values in the First instruction are:\n\nRAX=0000000033307EE0\nRCX=0000000000000000\n\nThe registers' values  in the Second instruction are:\n\nRAX=0000000033307EE0\nRCX=00000000377F1FD0\n\nWhat I did is:\nThe first instruction offset is <pre><code>[rax + rcx*8] = RCX(00000000) * 8 =  8</code></pre>\nSo, the final result is <pre><code>Address(33307EE0) + Offset(8)</code></pre>.\nAnd the second instruction offset is <pre><code>[rax + rcx*8] = RCX(377F1FD0) * 8 = BBF8FE80</code></pre>\nSo, the final result is <pre><code>Address(33307EE0) + Offset(BBF8FE80)</code></pre>.\nAre those results true? because I found the address is correct but the offset is still wrong.\n",
    "votes": "0",
    "answers": 1,
    "views": "678",
    "tags": [
        "memory",
        "game-hacking",
        "cheat-engine"
    ],
    "user": "Lion King",
    "time": "Jun 18, 2021 at 21:06",
    "comments": [],
    "answers_data": [
        {
            "content": "[RAX=0x33307EE0 + RCX=0x0 * 0x8] == [0x33307EE0+0x0] = <pre><code>0x33307EE0</code></pre>\ncompare whatever is at Address  <pre><code>0x33307EE0</code></pre> with r9 register\n[RAX=0x33307EE0 + RCX=0x377F1FD0 * 0x8] == [ 0x33307EE0 + 0x1bbf8fe80] = <pre><code>0x1ef297d60</code></pre>\nmov into rcx whatever is there at <pre><code>0x1ef297d60</code></pre>\nyou really need to find some reading/viewing material on assembly\nit is always better to read a book on subject matter instead of getting random tidbit advice from unknown strangers on a web service if you need to grasp the basics\n",
            "votes": "1",
            "user": "blabb",
            "time": "Jun 18, 2021 at 21:34",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Lion King",
                    "text": "<span class=\"comment-copy\">At present, I read several books about assembly, although I have seen that form before <code>[eax+ecx*5]</code>, etc, but I didn't understand it but after your answer, I understood what it means.</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">without you understanding the basics it will be difficult to tell basically you save everything prehand before destroying write new code at same place which does what you want and also what you destroyed and return back to flow it is like joining a tee at two places in a pipe to cut out the leaking part in laymans term</span>",
                    "time": null
                }
            ]
        }
    ]
}