{
    "title": "windbg conditional breakpoint equal always get 0",
    "link": "https://reverseengineering.stackexchange.com/questions/32367/windbg-conditional-breakpoint-equal-always-get-0",
    "content": "I want to set a conditional breakpoint on function argument at the entry of a function. Here is the value I want which is c0 a8 89 01. I want to break the function when that register holds this specific value\n<pre><code>2: kd> db @rdx\nffffae86`ee4ec024  c0 a8 89 01 c0 a8 89 b4-00 35 e6 d2 00 3a 51 ae  .........5...:Q.\nffffae86`ee4ec034  d1 c9 81 83 00 01 00 00-00 00 00 00 05 5f 6c 64  ............._ld\nffffae86`ee4ec044  61 70 04 5f 74 63 70 03-70 64 63 06 5f 6d 73 64  ap._tcp.pdc._msd\nffffae86`ee4ec054  63 73 04 74 65 73 74 05-6c 6f 63 61 6c 00 00 06  cs.test.local...\nffffae86`ee4ec064  00 01 87 e4 5c 15 80 e4-22 d2 1e 15 d3 b6 13 67  ....\\...\"......g\nffffae86`ee4ec074  ed b1 02 ec 38 78 8f 7e-26 3e 34 d0 e6 db 55 20  ....8x.~&>4...U \nffffae86`ee4ec084  14 fe a2 e2 1e a9 d5 25-6f 47 cd 17 a3 41 08 11  .......%oG...A..\nffffae86`ee4ec094  be b3 c7 20 ed e1 80 26-49 3e f7 90 43 0d 75 db  ... ...&I>..C.u.\n</code></pre>\nThe command I use is\n<pre><code>bp module!function \".if(poi(@rdx)&0x0`ffffffff==0x0189a8c0){.echo target hash triggered;r rcx} .else{gc} \"\n</code></pre>\nBut I found out that this bp is never triggered so I took a deep look\n<pre><code>2: kd> ? poi(@rdx)&0x0`ffffffff\nEvaluate expression: 25798848 = 00000000`0189a8c0\n\n2: kd> ? poi(@rdx)&0x0`ffffffff==0x0189a8c0\nEvaluate expression: 0 = 00000000`00000000\n</code></pre>\nwhy is the condition 0? I know the condition is in MASM but I don't understand why this happened.\n",
    "votes": "1",
    "answers": 1,
    "views": "56",
    "tags": [
        "windbg",
        "breakpoint"
    ],
    "user": "anonymous bear",
    "time": "Oct 6, 2023 at 6:10",
    "comments": [],
    "answers_data": [
        {
            "content": "operator precdence 0xffffffff==somevalue will naturally be false or 0\n<pre><code>0:000> ? poi(@rbx)\nEvaluate expression: 8388357042652472396 = 74696e49`7072644c\n0:000> ? poi(@rbx) & 0`ffffffff\nEvaluate expression: 1886544972 = 00000000`7072644c\n0:000> ? poi(@rbx) & 0`ffffffff == 7072644c\nEvaluate expression: 0 = 00000000`00000000\n0:000> ? (poi(@rbx) & 0`ffffffff) == 7072644c\nEvaluate expression: 1 = 00000000`00000001\n0:000>\n</code></pre>\n",
            "votes": "2",
            "user": "blabb",
            "time": "Oct 6, 2023 at 12:27",
            "is_accepted": true,
            "comments": []
        }
    ]
}