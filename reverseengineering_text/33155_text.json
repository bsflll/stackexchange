{
    "title": "Firmware analysis output",
    "link": "https://reverseengineering.stackexchange.com/questions/33155/firmware-analysis-output",
    "content": "I have a ZTE router \"ZTE_ZXHN_H168N\" and want to learn more about firmware reverse engineering. I managed to do the following so far:\n\nDump the firmware from the SPI flash.\n\nRunning strings on the bin file gave the default AP name and its PSK, and a potential boot password.\n\nRunning binwalk on the file gave the below output, and this is where I am stuck. I was expecting something like uboot header or squashfs, but I am puzzled by what I am getting.\n\n\nExtracting the components with binwalk -Me gave the below result.\n\n\n\n\nI made more trials and ran <pre><code>binwalk -Me</code></pre> and <pre><code>strings</code></pre> on all files and dumped the output to a text file \"fw_contents.txt\"fw_contents\n\nRunning <pre><code>binwalk -Me</code></pre> on file \"80100.7z\" gave what looks like c-source files but I failed to extract any of those files.\n\n\n\nUpdates:\nI tried to extract the firmware parts manually following the memory map found in the bootlog file, and compare the extracted components to what <pre><code>binwalk</code></pre> extracted. The only part that matches was the <pre><code>rootfs1</code></pre> and <pre><code>80100.7z</code></pre>\nI tried also exporting the config file from the router homepage, then I changed a single character in the default SSID name, then exported the config file again for comparison. The files were completely different. So, I guess the config file is also encrypted.\nI tried using \"unlzma\" and \"7za\" to extract the 10000.7z and 80100.7z but the files were unrecognized.\nI do not know what I am looking at here, and would really appreciate it if you could provide some guidance.\nI am happy to share the firmware firmware.bin and the bootlog Normalboot.log , Testmodelog.log files if someone is interested.\nThanks\n",
    "votes": "1",
    "answers": 0,
    "views": "101",
    "tags": [
        "firmware-analysis",
        "binwalk",
        "flash",
        "router"
    ],
    "user": "snabil",
    "time": "Aug 20, 2024 at 21:51",
    "comments": [
        {
            "user": "julian",
            "text": "Please post the full command used to extract the firmware and the version of binwalk being used. Typically the -M argument is specified together with -e, in order to extract everything in one shot. You may also wish to try unblob. Note that the ReFirmLabs binwalk repo is no longer maintained, there is a community-maintained fork here: OSPG/binwalk\n",
            "time": null
        },
        {
            "user": "snabil",
            "text": "@Julian, My binwalk version is V2.4.2+3dd13v7  The complete command I used is: binwalk -e firmware.bin\n",
            "time": null
        },
        {
            "user": "julian",
            "text": "Please edit your post to include this info. Consider re-running the extraction with the -M option specified in addition to -e, as I mentioned -> <pre><code>binwalk -Me firmware.bin</code></pre>\n",
            "time": null
        },
        {
            "user": "julian",
            "text": "There's no need to run binwalk again on 80100.7z, it has already been extracted to <pre><code>/home/kali/Downloads/Etisalat_FW/_etis_01.bin.extracted/80100</code></pre>. I'll take a look at the firmware and bootlog files if you share them.\n",
            "time": null
        },
        {
            "user": "snabil",
            "text": "@julian firmware and boot logs were uploaded. Thanks\n",
            "time": null
        }
    ],
    "answers_data": []
}