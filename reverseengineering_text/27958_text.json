{
    "title": "Adding signatures to Ghidra",
    "link": "https://reverseengineering.stackexchange.com/questions/27958/adding-signatures-to-ghidra",
    "content": "I have a couple of questions about the Ghidra\n\nI am analyzing a binary file and in the binary it uses a functions from libstdc++. What is the best way to add the signatures of functions from \"libstdc++\" into my binary file ?\n\nI see in the \"External program\" window multiple so files, from where Ghidra takes this so files ?\n",
    "votes": "0",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "ghidra"
    ],
    "user": "prtqwsq",
    "time": "Jul 6, 2021 at 8:10",
    "comments": [],
    "answers_data": [
        {
            "content": "The easiest way is to get a build of libstdc++ with DWARF debug symbols e.g. by downloading it from the Debian repositories https://packages.debian.org/buster/libstdc++6-7-dbg.\nIn general you can also compile it yourself, but for common libraries Debian tends to have a version built with debug symbols already. You can then auto analyse it (or run only the DWARF debug analyses), and export a GDT archive via \"Capture Function Signatures\", either as a file archive or project archive, and then load this in your desired binary and apply it.\n\nGhidra searches some folders for libraries when a binary is imported, I already described the details in this answer (with screenshots)\n",
            "votes": "1",
            "user": "Florian Magin",
            "time": "Jul 6, 2021 at 12:37",
            "is_accepted": false,
            "comments": []
        }
    ]
}