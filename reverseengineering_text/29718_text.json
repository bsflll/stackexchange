{
    "title": "Using rbreak without import functions",
    "link": "https://reverseengineering.stackexchange.com/questions/29718/using-rbreak-without-import-functions",
    "content": "While debugging  with GDB I want to break for each function and print the PC register.\n<pre><code>rbreak .\ndefine hook-stop\n   i r $PC\n   c\nend\n</code></pre>\nThe problem is that is stop on functions that imported like <pre><code>printf</code></pre> and <pre><code>memcpy</code></pre> .\nHow can I stop only on functions in my binary that not imported?\n",
    "votes": "1",
    "answers": 0,
    "views": "35",
    "tags": [
        "debugging",
        "linux",
        "gdb",
        "breakpoint"
    ],
    "user": "yfr24493AzzrggAcom",
    "time": "Dec 13, 2021 at 22:00",
    "comments": [
        {
            "user": "lockcmpxchg8b",
            "text": "What definition of 'function' are you using?  Does it need to be something you're exporting?  if you use <pre><code>readelf -s <target></code></pre> does the symbol table contain the functions you want to find, or are you just looking for anything reached by a 'call' instruction during execution?  (I ask because the optimizer can do funny things to functions, including merging the tail of several similar functions into a single set of instructions shared by all.)\n",
            "time": null
        },
        {
            "user": "yfr24493AzzrggAcom",
            "text": "@lockcmpxchg8b I looking for all the function that implement in my binary.\n",
            "time": null
        }
    ],
    "answers_data": []
}