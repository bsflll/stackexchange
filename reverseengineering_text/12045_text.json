{
    "title": "rasm2 output differs from radare2",
    "link": "https://reverseengineering.stackexchange.com/questions/12045/rasm2-output-differs-from-radare2",
    "content": "<pre><code>radare2</code></pre> disassembles an instruction in the following way (binary here):\n<pre><code>0x0040425f 0f847b020000   je 0x4044e0\n</code></pre>\nWhy is giving <pre><code>rasm2</code></pre> different result?\n<pre><code>rasm2 -a x86 -b 64 -d '0f847b020000'\nje 0x281\n</code></pre>\n",
    "votes": "-1",
    "answers": 2,
    "views": "219",
    "tags": [
        "radare2"
    ],
    "user": "robert",
    "time": "Feb 15, 2016 at 21:37",
    "comments": [
        {
            "user": "robert",
            "text": "Please give some reasons why you downvoted my question.\n",
            "time": null
        },
        {
            "user": "robert",
            "text": "I am just curious. Why was this downvoted?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<pre><code>rasm2 -d -o 0x40425f 0f847b020000\nje 0x4044e0\n</code></pre>\n",
            "votes": "5",
            "user": "blabb",
            "time": "Feb 16, 2016 at 4:51",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "I don't think it is a different result, only a different representation.\nThe <pre><code>radare2</code></pre> output tells you at which absolute address will the jump take you (in this case <pre><code>0x004044e0</code></pre>), while the <pre><code>rasm2</code></pre> output tells you how far from the current address (in this case <pre><code>0x0040425f</code></pre>) will the jump take you.\nTo make it more clear: Your current instruction starts at address <pre><code>0x0040425f</code></pre>, while your destination address is <pre><code>0x004044e0</code></pre>. If you substitute the two addresses you get: <pre><code>0x004044e0 - 0x0040425f = 0x00000281</code></pre>, which is the parameter to the jump in the <pre><code>rasm2</code></pre> tool.\nAlso, the opcode <pre><code>0x0F 0x84</code></pre> stands for <pre><code>JE rel16/rel32</code></pre> and since you haven't specified at which address your instruction <pre><code>0f847b020000</code></pre> resides the <pre><code>rasm2</code></pre> tool is correctly telling you that it is <pre><code>0x281</code></pre> bytes from wherever the instruction is: <pre><code>parameter_value(0x0000027b) + instruction_length(0x06) = 0x00000281</code></pre>\n",
            "votes": "3",
            "user": "ubnix",
            "time": "Feb 15, 2016 at 22:28",
            "is_accepted": false,
            "comments": []
        }
    ]
}