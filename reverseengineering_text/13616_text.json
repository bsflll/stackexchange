{
    "title": "Simple carving of zip file using binwalk",
    "link": "https://reverseengineering.stackexchange.com/questions/13616/simple-carving-of-zip-file-using-binwalk",
    "content": "I have been trying to use binwalk on a very large dump file without much success so far. Everytime I tried to use it, it produces very large zip file that fill the disk until I reach a disk full error (using Linux).\nI am trying to understand what I did wrong, so here is a simple scenario hopefully to understand what I am doing wrong.\nSteps:\n<pre><code>$ dd if=/dev/zero of=head bs=1 count=512\n$ dd if=/dev/zero of=tail bs=1 count=512\n$ wget https://github.com/devttys0/binwalk/archive/master.zip\n$ cat head binwalk-master.zip tail > full\n$ binwalk -z -C demo -D 'zip archive:zip:unzip %e' full\n</code></pre>\nCould someone please let me know why I am seeing the following:\n<pre><code>$ find demo\ndemo\ndemo/_full.extracted\ndemo/_full.extracted/483BD.zip\ndemo/_full.extracted/200.zip\n</code></pre>\nWhere is this file coming from ? Is there any reason to keep it around ?\n<pre><code>$ unzip -l demo/_full.extracted/483BD.zip \nArchive:  demo/_full.extracted/483BD.zip\n5be61ad220a42e7b2c7e912024fda5edd84b4843\nerror [demo/_full.extracted/483BD.zip]:  missing 295357 bytes in zipfile\n  (attempting to process anyway)\nerror [demo/_full.extracted/483BD.zip]:  attempt to seek before beginning of zipfile\n  (please check that you have transferred or created the zipfile in the\n  appropriate BINARY mode and that you have compiled UnZip properly)\n</code></pre>\nBonus question: is there a way to really extract only the zip file (removing the <pre><code>tail</code></pre> stuff):\n<pre><code>$ crc32 binwalk-master.zip demo/_full.extracted/200.zip \n8ce4d36c    binwalk-master.zip\n81923fef    demo/_full.extracted/200.zip\n$ ls -al binwalk-master.zip demo/_full.extracted/200.zip \n-rw-r--r-- 1 user user 295419 Sep 29 08:54 binwalk-master.zip\n-rw-r--r-- 1 user user 295931 Sep 29 09:02 demo/_full.extracted/200.zip\n</code></pre>\n",
    "votes": "1",
    "answers": 1,
    "views": "5k",
    "tags": [
        "binary-analysis",
        "file-format"
    ],
    "user": "tibar",
    "time": "Sep 29, 2016 at 7:07",
    "comments": [],
    "answers_data": [
        {
            "content": "Binwalk produces multiple large files, because the zlib header does not contain any information about the size of the compressed data.\nThe following steps should be performed to extract the zip files:\n\nIdentify headers (found at <pre><code>0x200</code></pre> and <pre><code>0x483BD</code></pre>)\nSave the zip file to a file. But, because there is not any information in the header about the size, the worst case should be used and the whole remaining file should be written out.\n\nBecause the header identification cannot be perfect and false positives are possible, you cannot assume that the second header means the end of the first zip.\nIf you want to extract the zip files without tail, you can do the followings:\n\nReverse the structure of the binary file. Generally every image part starts with a header with exact size information. You have to identify the header and size or offset values in it.\nIf you works with a flash image, then you can perform entropy analysis, which helps to split the whole image into smaller parts.\nIn a flash image, the parts are generally separated with several <pre><code>0xFF</code></pre> bytes from each others. You can also use this information to extract the image parts.\n",
            "votes": "7",
            "user": "ebux",
            "time": "Sep 29, 2016 at 7:30",
            "is_accepted": true,
            "comments": [
                {
                    "user": "tibar",
                    "text": "<span class=\"comment-copy\">I now see this is known <a href=\"https://github.com/devttys0/binwalk/issues/153\" rel=\"nofollow noreferrer\">issue</a>. I feel like writing my own carving utility :(</span>",
                    "time": null
                }
            ]
        }
    ]
}