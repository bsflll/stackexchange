{
    "title": "radare2 memory changing in debug mode",
    "link": "https://reverseengineering.stackexchange.com/questions/22084/radare2-memory-changing-in-debug-mode",
    "content": "I have tiny program:\n<pre><code>        0x08048080      66a1a0900408   mov ax, word loc.name       \n        0x08048086      66bbafbe       mov bx, 0xbeaf\n        0x0804808a      66891da09004.  mov word loc.name, bx    ; [0x80490a0:2]=0xdead\n\n        0x08048091      31c0           xor eax, eax\n        0x08048093      66a1a0900408   mov ax, word loc.name       \n        0x08048099      b801000000     mov eax, 1\n        0x0804809e      cd80           int 0x80\n        0x080480a0      ad             lodsd eax, dword [esi]\n        0x080480a1      de00           fiadd word [eax]\n</code></pre>\nwhen program changing memory:\n0x0804808a      66891da09004  mov word loc.name, bx   ; [0x80490a0:2]=0xdead\nmemory dump (with px @ 0x80490a0) not changed\nis there possible to view memory change in real time when debugging?\nthanks!\n",
    "votes": "2",
    "answers": 1,
    "views": "233",
    "tags": [
        "radare2"
    ],
    "user": "buhaz",
    "time": "Sep 9, 2019 at 9:27",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "did you open your file in write mode or did you switch to one?\n",
            "time": null
        },
        {
            "user": "buhaz",
            "text": "i did open in debug mode, but openning in write and debug mode does not work too\n",
            "time": null
        },
        {
            "user": "Paweł Łukasik",
            "text": "I understand your question better now, but running shows correct behavior - see my answer.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I've run the following on the latest r2 from git:\n\nr2 -d ./example\n\nafter setting the breakpoint on main and running to it I'm getting the following disassembly:\n<pre><code>0x004004a6 b    668b04252810.  mov ax, word [loc.name]     ; [0x601028:2]=0xdead\n0x004004ae      66bbafbe       mov bx, 0xbeaf\n0x004004b2      66891c252810.  mov word [loc.name], bx     ; [0x601028:2]=0xdead\n0x004004ba      31c0           xor eax, eax\n0x004004bc      668b04252810.  mov ax, word [loc.name]     ; [0x601028:2]=0xdead\n0x004004c4      b801000000     mov eax, 1\n0x004004c9      cd80           int 0x80\n</code></pre>\nThe memory location shows, <pre><code>0xdead @ 0x601028</code></pre>.\nAfter executing 3 step instructions. This is what I get when running <pre><code>px @ 0x601028</code></pre>\n<pre><code>:> px@0x601028\n- offset -   0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0 1  0123456789ABCDEF01\n0x00601028  afbe 0000 0000 0000 0000 0000 0000 0000 0000  ..................\n</code></pre>\nSo the change is reflected in memory but also when I check the disassembly\n<pre><code> 0x004004a6 b    668b04252810.  mov ax, word [loc.name]     ; [0x601028:2]=0xbeaf rbx\n 0x004004ae      66bbafbe       mov bx, 0xbeaf              ; rbx\n 0x004004b2      66891c252810.  mov word [loc.name], bx     ; [0x601028:2]=0xbeaf rbx\n ;-- rip:\n 0x004004ba      31c0           xor eax, eax\n 0x004004bc      668b04252810.  mov ax, word [loc.name]     ; [0x601028:2]=0xbeaf rbx\n 0x004004c4      b801000000     mov eax, 1\n 0x004004c9      cd80           int 0x80\n</code></pre>\nNow there's <pre><code>0xbeaf @ 0x601028</code></pre>.\n",
            "votes": "1",
            "user": "Paweł Łukasik",
            "time": "Sep 11, 2019 at 17:25",
            "is_accepted": false,
            "comments": []
        }
    ]
}