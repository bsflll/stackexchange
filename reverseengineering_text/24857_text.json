{
    "title": "Ghidra scripting get information from decompile window",
    "link": "https://reverseengineering.stackexchange.com/questions/24857/ghidra-scripting-get-information-from-decompile-window",
    "content": "I am using Ghidra and when clicking for example in the decompile window on a specific raw, it change the cursor in the assembly window to the exact location in the assembly. Is there any option to do this using Ghidra scripting ? \nThanks\n",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "assembly",
        "c",
        "ghidra"
    ],
    "user": "Logan",
    "time": "Apr 28, 2020 at 16:38",
    "comments": [
        {
            "user": "Logan",
            "text": "Can you give an example for what you mean ? I need to decompile the code using \"getDecompiledFunction\" and then i can use this function \"getReferencesFrom\" ?\n",
            "time": null
        },
        {
            "user": "Logan",
            "text": "@R4444 - forgot to tag you\n",
            "time": null
        },
        {
            "user": "genghiskhan",
            "text": "Do you mean you have a list of addresses that you want to change the location in the assembly (listing) window to? If so, you can just use the GhidraScript method <pre><code>setCurrentLocation</code></pre>\n",
            "time": null
        },
        {
            "user": "auspicious99",
            "text": "@DanielDan You could write a comment under the specific answer (R4444's one, in this case), to ask follow up questions on it.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "If you want instruction access references to a particular variable, then first define the reference manager:\n<pre><code>refmanager = program.referenceManager\n</code></pre>\nThen lets say you get all the local variables of a particular function - using -\n<pre><code>vars = function.getLocalVariables()\n</code></pre>\nYou can get references to a particular variable:\n<pre><code>for var in vars:\n    for ref in refmanager.getReferencesTo(var):\n        print(ref)\n</code></pre>\nIn this case <pre><code>ref</code></pre> will be of type <pre><code>Reference</code></pre>. The you can get particular references using this api. Also check this for other options.\n",
            "votes": "2",
            "user": "R4444",
            "time": "Apr 28, 2020 at 22:11",
            "is_accepted": false,
            "comments": []
        }
    ]
}