{
    "title": "Change instruction test eax, eax to text eax, 1",
    "link": "https://reverseengineering.stackexchange.com/questions/21733/change-instruction-test-eax-eax-to-text-eax-1",
    "content": "I'm trying to change an instruction in assembly. Try with <pre><code>test eax, eax</code></pre> to <pre><code>test eax, 1</code></pre>. I try modify the opcodes. \nFor example opcode of <pre><code>test eax, eax</code></pre>: <pre><code>85c0</code></pre>\n\nTry to understand why is 85c0 with this table:\n\n<pre><code>85</code></pre> comes from 'test', ok. But <pre><code>c0</code></pre> from <pre><code>EB lb</code></pre>? I'm a little confused how to create that opcode and how to modify and get <pre><code>test eax, 1</code></pre>.\nThanks, appreciate any help!\n",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "disassembly",
        "assembly",
        "radare2",
        "patch-reversing"
    ],
    "user": "felix89",
    "time": "Jul 22, 2019 at 6:56",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "This table shows only the first byte. There has to be more on that page that allows to  say what are the next bytes.\n",
            "time": null
        },
        {
            "user": "felix89",
            "text": "Thanks for the answer. Great explanation @bart1e algo the page, it helps a lot!:)\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "The opcode you are interested in is <pre><code>a9 01 00 00 00</code></pre> standing for <pre><code>test eax, 1</code></pre>.\nThe easiest way to get the opcode of assembly instruction is just to compile  it and disassemble the result (for example using nasm and then objdump or simply this site) - this way you don't have to remember anything about the opcodes which are sometimes weird.\nHowever, you want to patch 2 bytes instruction and the opcode I gave is 5 bytes. As a workaround, you can do <pre><code>test al, 1</code></pre> (<pre><code>a8 01</code></pre>), which will do the same (will do <pre><code>test</code></pre> only on the least significant byte of <pre><code>eax</code></pre>).\n",
            "votes": "5",
            "user": "bart1e",
            "time": "Jul 22, 2019 at 6:03",
            "is_accepted": true,
            "comments": []
        }
    ]
}