{
    "title": "How can I compare different execution traces of the same exe, but ran with different parameters?",
    "link": "https://reverseengineering.stackexchange.com/questions/33334/how-can-i-compare-different-execution-traces-of-the-same-exe-but-ran-with-diffe",
    "content": "Context\nI'm working on analyzing how a software's behavior changes when run with different parameters.\nMy goal is to compare the execution traces (e.g., function calls, memory accesses, or instruction flows) to identify differences caused by the input parameters.\nQuestion\nI want to capture the execution trace for two runs: one with <pre><code>param1</code></pre> and another with <pre><code>param2</code></pre>. So, for example:\n\n<pre><code>sofware.exe --param1</code></pre>\nVS\n\n<pre><code>software.exe --param2</code></pre>\n\n\nIdeally, I'd like to see which functions, code paths, or memory regions are accessed differently between the two runs.\nI'm looking for effective techniques to:\n\nCompare traces to identify key differences in execution paths\nAnalyze patterns in how parameter changes affect program flow\n\nHow can I compare different execution flows?\nWhat I tried\nI tried to use x64Dbg's tracing feature. However, you cant really compare two different executions.\nI also explored lighthouse for IDA/Binary Ninja:\n\nHowever, it seems like it doesnt seem to do what I want.\n",
    "votes": "0",
    "answers": 1,
    "views": "134",
    "tags": [
        "ida",
        "debugging",
        "x64dbg",
        "debuggers"
    ],
    "user": "MendelG",
    "time": "Dec 8, 2024 at 20:45",
    "comments": [
        {
            "user": "Ali Rizvi-Santiago",
            "text": "There's also tenet from the same author of lighthouse. It's not a direct comparison of traces, but might be closer to what you're trying to analyze.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I have never done this or needed to do this, however my first instinct is to diff the two trace files, however I know it is special format so I did a search and found this issue: https://github.com/x64dbg/x64dbg/issues/3042 in which someone wanted to compare traces, and the creator of x64dbg suggested 2 options, I would be inclined to use the 2nd option (because I am unsure the 1st option will compare): https://github.com/mrexodia/dumpulator/blob/main/tests/x64dbg-tracedump.py and dump the files and then use diff or some comparison tool.\nI think you may prefer a more visual tool for this, for obvious reasons, but it may have similar effect using compare 2 files in an editor\nI found this question interesting so I wanted to offer a possibility you may not have considered.\n",
            "votes": "0",
            "user": "jonk",
            "time": "Dec 16, 2024 at 23:36",
            "is_accepted": false,
            "comments": []
        }
    ]
}