{
    "title": "Compare two traces from ollydbg",
    "link": "https://reverseengineering.stackexchange.com/questions/20626/compare-two-traces-from-ollydbg",
    "content": "I have a program that executes differently depending on what files are present on my computer. I'd like to run a trace in two scenarios (with the default file and with an edited version of the file) and then compare the traces to see where things differ.\nIs there an in built method to do this in ollydbg? I'm by no means an expect with ollydbg, but I'm willing to put in any amount of time and effort to figure this out - I just need a little direction.\nThanks!\n",
    "votes": "1",
    "answers": 1,
    "views": "754",
    "tags": [
        "ollydbg",
        "tracing",
        "compare"
    ],
    "user": "user6916458",
    "time": "Feb 15, 2019 at 23:31",
    "comments": [],
    "answers_data": [
        {
            "content": "version used: ollydbg v2 but method is similar for v1 too   \nollydbg allows you to log the trace i have done some crude diffs in the past as below \nyou can try improvise   \nhere is the source code that's used for demo\nkeep in mind i had the source so i compiled it and linked with with /FIXED linker switch to vs 2017 linker so that ASLR doesn't get into play and make life harder\nif you have a prebuilt binary  and cant force load it in same address each time \ntext diffing will be tedious \nfor example push 402080 will be push f02080  which shouldn't matter \nbut text diff will show it a a difference and it is pure noise \n<pre><code>#include <stdio.h>\n#include <stdlib.h>\nvoid main (int argc , char *argv[]) \n{\n    if (argc !=2 ) \n    {\n        printf(\"usage %s password\n\" , argv[0]);\n        exit(-1);\n    }\n    int password = atoi(argv[1]);\n    if(password == 1337) \n    {\n        printf(\"good\n\");\n        exit(1);\n    }\n    else\n    {\n        printf(\"Try again\n\");\n        exit(0);\n    }\n}\n</code></pre>\nopen a blank ollydbg and set trace options like this and close it \n\nopen a command prompt and run the executable wit a wrong pass\n<pre><code>ollydbg.exe diffway.exe 4567  \n</code></pre>\nwhen ollydbg stops on initial breakpoint open the trace window \n1) view run trace or ... icon\n2) right click\n3) log to file -> file name (say wrongpass.txt)-> ok\n4) ctrl+f11 to trace in this will end in a termination\n5) trace window-> right click -> stop Logging -> close ollydbg\nrepeat the procedure with right pass and rightpass.txt as file name \nyou will now have two text files of two executions \nsed grep awk diff are your friends now  \nrip the modified registers column we are not interested in registers \n<pre><code>sed s/\"...=.*\"//g wrongpass..txt >> ripwrongpass.txt\nsed s/\"...=.*\"//g rightpass..txt >> riprightpass.txt\ndiff -w riprightpass.txt ripwrongpass.txt\n</code></pre>\nwe got the first divergence between executions here\n\n\n    :\\>diff -w riprightpass..txt ripwrongpass..txt\n    170028,170029c170028,170029\n     main  00401050  PUSH    0043E1B4\n     main  00401055  CALL    004010C0\n    ---\n     main  00401066  PUSH    0043E1BC\n     main  0040106B  CALL    004010C0\n    170477a170478,171087\n    > main  00410D40  MOVZX   EAX, BYTE PTR DS:[ECX*8+EAX+43EF78];\n    > main  00410D48  SHR     EAX, 4\n",
            "votes": "1",
            "user": "blabb",
            "time": "Feb 16, 2019 at 5:52",
            "is_accepted": false,
            "comments": []
        }
    ]
}