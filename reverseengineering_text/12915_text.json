{
    "title": "How to break on a clipboard operation in cmd.exe with IDA / WinDbg?",
    "link": "https://reverseengineering.stackexchange.com/questions/12915/how-to-break-on-a-clipboard-operation-in-cmd-exe-with-ida-windbg",
    "content": "My goal is to see what's going on \"under the hood\" in the Windows command prompt when a user pastes text into it. So I loaded <pre><code>cmd.exe</code></pre> into IDA Pro that is set up in conjunction with the WinDbg debugger.\nMy initial guess was to put a breakpoint on OpenClipboard API which must be used to access clipboard, but it seems like cmd.exe doesn't even have a dependency on <pre><code>User32.dll</code></pre> (where OpenClipboard comes from):\n\nSo am I reading it correctly?\nPS. I'm doing this on Windows 10.\nEDIT: You know, there's something other than deferred loading. I let the <pre><code>cmd.exe</code></pre> initialize and begin running, after which I suspended it. The loaded modules list still didn't have <pre><code>user32.dll</code></pre>:\n\nand my deferred breakpoint didn't trigger upon clipboard operation either:\n\nCould there be some other process that does all the \"command line\" logic?\nEDIT 2: Just tried to attach to a running <pre><code>conhost.exe</code></pre>:\n\nwhile IDA Pro was running as administrator and got this error:\n\nEDIT 3: Just tried to attach to <pre><code>conhost.exe</code></pre> via just WinDbg itself and got this error. I'm not sure how <pre><code>NTSTATUS 0xC00000BB</code></pre> applies here:\n",
    "votes": "4",
    "answers": 2,
    "views": "572",
    "tags": [
        "ida",
        "windows",
        "debugging",
        "windbg"
    ],
    "user": "c00000fd",
    "time": "Jul 1, 2016 at 6:07",
    "comments": [
        {
            "user": "Lieven Keersmaekers",
            "text": "Using <pre><code>depends.exe</code></pre> on <pre><code>cmd.exe</code></pre> in syswow64 shows <pre><code>user32.dll</code></pre> as a delayed loaded module. I assume your screenshot only shows the currently loaded modules thus the discrepency.\n",
            "time": null
        },
        {
            "user": "c00000fd",
            "text": "@LievenKeersmaekers: Sorry for the delay. I updated my original question with additional info. And delayed loading doesn't seem to be the case here.\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "looks like you're using x86 windbg to attach to an x64 process :) This is not going to work.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "well if you cant attach with windbg then you have some other problem\n<pre><code>uac / clamped down / policy / whatever //</code></pre> conhost.exe is attachable\n(check if you are attaching to the correct conhost.exe there may be several some of them spawned by <pre><code>system user</code></pre> \nscreenshot showing windbg being attached to conhost and broke on OpenClipBoard with Hwnd (HANDLE of consoleWindowClass)\n\non the paste operation \n<pre><code>0:001> kb2\n # ChildEBP RetAddr  Args to Child              \n00 020afc28 00adf554 020afd34 00000111 00000000 conhost!DoPaste+0x3d\n01 020afcb8 773ec4e7 00080260 00000111 0000fff1 conhost!ConsoleWindowProc+0x847\n0:001> ub eip l1\nconhost!DoPaste+0x37:\n00ae2d05 ff155411ad00    call    dword ptr [conhost!_imp__GetClipboardData (00ad1154)]\n0:001> ? @$retreg\nEvaluate expression: 10616892 = 00a2003c\n0:001> du poi(@$retreg)\n00172fa0  \"2580 windbg.exe        Pid 3424 \"\n00172fe0  \"- WinDbg:10.0.10586.567 X86\"\n0:001> g\n</code></pre>\nas to comment yes maybe i dont know\na cursory glance over google says conhost is now a child of cmd in windows 10\nthe conhost enhancements technical preview article by some ms devs don't mention anything about conhost being <pre><code>protected super proteccted or ultra protected process</code></pre>\nand i dont have a win10 handy so i can answer your comment only when i spleunk under winX till then happy hunting\nwell it appears i can attach in winX too\n(winx is running in vmware player  (test mode ) ) \nwindbg screen shotted is runnning inside target os\n",
            "votes": "1",
            "user": "blabb",
            "time": "Jul 1, 2016 at 10:29",
            "is_accepted": true,
            "comments": [
                {
                    "user": "c00000fd",
                    "text": "<span class=\"comment-copy\">Thanks. Yeah, that's the right process. I checked. It was spawned right when cmd.exe was started. I updated my original post with the error message I got in WinDbg. BTW. I'm doing it on Win10. You're using Win7. Could that be the difference?</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">no dont see any logic difference between vii and x  apart from some new dlls / functions //control flow   from console to core APIS</span>",
                    "time": null
                },
                {
                    "user": "c00000fd",
                    "text": "<span class=\"comment-copy\">OK. I got it solved... somewhat. I was using IDA Pro to start the process and then WinDbg thru it. It turns out that IDA Pro cannot attach to a 64-bit process so it was using a 32-bit version of WinDbg implicitly. Thus I was getting that strange error. I also discovered that I was using an old version of WinDbg. And lastly, even though I was originally starting a 32-bit version of <code>cmd.exe</code> it was implicitly connecting to a 64-bit version of <code>conhost.exe</code>. So eventually I had to ditch IDA and go with bare WinDbg which is somewhat hard to use... but it did the job. So thank you!</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "The actual console window is drawn and managed by conhost.exe, not cmd.exe.\n",
            "votes": "3",
            "user": "Igor Skochinsky",
            "time": "Jun 29, 2016 at 8:52",
            "is_accepted": false,
            "comments": [
                {
                    "user": "c00000fd",
                    "text": "<span class=\"comment-copy\">Sorry, I'm somewhat new to this. Can you give more details on how you set that breakpoint?</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">attach to <code>conhost.exe</code>, pause, switch to asm (Alt-8), enter <code>user32.dll!OpenClipboard</code> in the address field, add breakpoint from asm listing. But VS is not very good debugger when you don't have source, I recommend you to use Windbg or IDA.</span>",
                    "time": null
                },
                {
                    "user": "c00000fd",
                    "text": "<span class=\"comment-copy\">Thanks. Tried to attach to <code>conhost.exe</code> and got access denied error. I updated my question w/details. Any idea why am I getting that error?</span>",
                    "time": null
                }
            ]
        }
    ]
}