{
    "title": "reverse a RF rolling code",
    "link": "https://reverseengineering.stackexchange.com/questions/26759/reverse-a-rf-rolling-code",
    "content": "I have the following codes from a rolling code RF garage fob I want to duplicate.\nThere is a duplicator remote that able to get one code and learn the sequrence from it:\nhttps://www.ebay.com/itm/V2-Remote-Control-V2-Phox-2-or-4-TRC-4-TXC-2-TXC-4-Handy-2-Handy-4/174325345483?hash=item289699accb:g:vSMAAOSw--Ne8IHi\nBut I need to understand how to produce the sequence myself to operate it from my smart-house hub\nI can produce more if necessary but this is a sample from the series:\nBytes 0-8 are constants\nByte 10 changes every 4th click\n<pre><code>_____________\nff641a07f72f9\nff641a07fd2c7\nff641a07f3266\nff641a07f9258\nff641a07f4de9\nff641a07fedd7\nff641a07f0d76\nff641a07fad48\nff641a07ff0f5\nff641a07f50cb\nff641a07fb06a\nff641a07f1054\nff641a07fcfe5\nff641a07f6fdb\nff641a07f8f7a\nff641a07f2f44\nff641a07f8efd\nff641a07f2ec3\nff641a07fce62\nff641a07f6e5c\nff641a07fb1ed\nff641a07f11d3\nff641a07ff172\nff641a07f514c\n</code></pre>\nEdit:\nSome more samples:\nhttps://pastebin.com/qXgFqKZa (note that it was a long capture and some codes may have been missed)\nand one sample captured with inspectrum\n",
    "votes": "2",
    "answers": 1,
    "views": "619",
    "tags": [
        "crc",
        "remote",
        "unknown-data"
    ],
    "user": "user35420",
    "time": "Jan 14, 2021 at 11:56",
    "comments": [
        {
            "user": "pythonpython",
            "text": "Each message has 13 characters...  are these meant to be 13 \"bytes\" ? or ~7 hex bytes missing something at the start or finish?\n",
            "time": null
        },
        {
            "user": "pythonpython",
            "text": "What's the model of the garage door device? Can you produce a couple hundred or more messages? Pastebin the hex.\n",
            "time": null
        },
        {
            "user": "user35420",
            "text": "yes, i can produce many more. there are only 13 bytes + preamble I'll upload an image of one sample with inspecturm\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Partial Answer:\nLooking only at the last 2bytes in binary shows some patterns where groups of bits are being flipped between groups of 4 messages ( Not2, Not3), or between groups of 8 (Not4). The unboxed bits influence the value of Not2 in some way.\n",
            "votes": "2",
            "user": "pythonpython",
            "time": "Jan 14, 2021 at 6:45",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user35420",
                    "text": "<span class=\"comment-copy\">found some more info on FCC site. just approving the 52 bits with 16 bits rolling code at the end(page 28): <a href=\"https://fccid.io/RSK-V2-TSC-4/Test-Report/Test-Report-396476.pdf\" rel=\"nofollow noreferrer\">fccLink</a></span>",
                    "time": null
                },
                {
                    "user": "user35420",
                    "text": "<span class=\"comment-copy\">Looking again in your analysis, instead of block of constant, not4 not8. It is simply bit reordering. But after some occasion there is a “not” operation</span>",
                    "time": null
                }
            ]
        }
    ]
}