{
    "title": "Frida manipulating arguments - Android",
    "link": "https://reverseengineering.stackexchange.com/questions/13814/frida-manipulating-arguments-android",
    "content": "I've attempting to learn how to use Frida to instrument android app, just for person interest. \nSo far I've managed to get my environment set up with a physical android tablet and I can successfully run the example on Frida's website. In addition to changing variables in the method I want to change the arugment passed to the method. I know how to do this with Xposed but I'm not sure with Frida. \nGeneric Question: How can the arugments passed to method be maniputed with Frida and what is good souce of documentation and examples for Frida?\n\nMore specific question:\nI wanted something that was more of a challenge so I moved onto Snapchat. My aim is to emulate the speed spoofing feature of the SnapPrefs Xposed module as this seemed fairly simple to do and its effect can be easily seen in the app. I looked through the SnapPrefs souce and found that I need to hook the \"adL\" class and change the argument passed to the \"a\" method. \nThe code for the method in the APK is:\n<pre><code>public final void a(float paramFloat)\n  {\n      ....\n  }</code></pre>\nI'm using this JavaScript code in order to print \"Speed showing\" to the screen whenever the method is active. \n<pre><code>Java.perform(function () {\n// Function to hook is defined here\nvar SpeedometerView = Java.use('adL');\n\n// Whenever button is clicked\nSpeedometerView.a.overload('float').implementation = function (v) {\n    // Show a message to know that the function got called\n    send('Speed showing');\n\n    // Call the original onClick handler\n    this.a.overload('float');\n};\n});\n</code></pre>\nSo from this: What would be the easiest way to manipulate the paramFloat argument?\n",
    "votes": "2",
    "answers": 1,
    "views": "9k",
    "tags": [
        "android",
        "java",
        "javascript",
        "apk"
    ],
    "user": "Xylynx",
    "time": "Oct 25, 2016 at 14:49",
    "comments": [],
    "answers_data": [
        {
            "content": "If I understand your question correctly, you want to change the parameter, <pre><code>v</code></pre>, inside the inner function. Right? \nIf that's the case, you would already have access to the <pre><code>v</code></pre> argument inside your inner function. So what you can do is something like this:\n<pre><code>Java.perform(function () {\n// Function to hook is defined here\nvar SpeedometerView = Java.use('adL');\n\n// Whenever button is clicked\nSpeedometerView.a.overload('float').implementation = function (v) {\n    // Show a message to know that the function got called\n    send('Speed showing');\n    old_param_value = v;\n    new_param_value = 100.00;\n    // Call the original onClick handler\n    x = this.a(new_param_value);\n};\n});\n</code></pre>\nalso, assuming you wanted to change the value of the param from whatever exiting to 100.00\nreturn x if needed.\nHowever, if you are looking to do this dynamically, like say based on user input etc., at run time, I do not know how to do it. In fact, I would be keeping an eye out for it if someone answers that ! \nIn fact I tried things like this:\n<pre><code>s4.js</code></pre>\n<pre><code>Java.perform(\n function()\n {\n   var item = Java.use(\"java.util.Random\");\n   console.log(\"Found random loaded\");\n   item.nextInt.overload(\"int\").implementation = function(a)\n   {\n     var ret = this.nextInt(a);\n     send(\"[*] The random no \" + ret.toString());\n     recv(function (received_json_object) {\n           cheat_num = received_json_object.my_data\n           console.log(\"[*] Cheated bot number received \" + cheat_num);            \n       }).wait();\n     return cheat_num;\n   }\n }\n);\n</code></pre>\n<pre><code>not_working.py</code></pre>\n<pre><code>import time\nimport frida\n\ndef my_message_handler(message, payload):\n   print message.get('payload')\n\n   if message[\"type\"] == \"send\":\n       print \"in here\"      \n       place_bot_chic_at = raw_input(\"Give the index where bot chicken should be placed \")\n       print \"bot chick will be placed at \" + str(place_bot_chic_at)\n       # script.post({\"my_data\": 7331}) # This works perfectly fine.\n       script.post({\"my_data\": place_bot_chic_at}) # This gives error as :\n       print \"Bot chick position sent\"\n\ndevice = frida.get_device_manager().enumerate_devices()[-1]\npid = device.spawn([\"chicken.wars.main\"])\ndevice.resume(pid)\ntime.sleep(1)  \nsession = device.attach(pid)\nwith open(\"s4.js\") as f:\n   jss = f.read()\n   script = session.create_script(jss)\n\nscript.on(\"message\", my_message_handler) #register the message handler\nscript.load()\nraw_input()\n</code></pre>\nBut when I run that python, I get the following error:\n<pre><code>lib/python2.7/site-packages/frida/core.py\", line 298, in _on_message\n  callback(message, data)\nFile \"not_working.py\", line 12, in my_message_handler\n  script.post({\"my_data\": place_bot_chic_at}) # This gives error as :\nAttributeError: 'NoneType' object has no attribute 'post'\n</code></pre>\nAlso, strangely, the moment after the <pre><code>in here</code></pre> string gets printed, I was expecting the user input line to be executed next. But that does not happen unless I press an enter. As soon as I press enter, the user input line <pre><code>place_bot_chic_at = raw_input(\"Give the index where bot chicken should be placed \")</code></pre> gets executed. I give a value and enter and that's when the above error occurs. \nI have no idea what is going wrong. If someone does, please help understand where am I going wrong.\n",
            "votes": "2",
            "user": "qre0ct",
            "time": "Sep 30, 2018 at 16:38",
            "is_accepted": false,
            "comments": []
        }
    ]
}