{
    "title": "What does ds mean?",
    "link": "https://reverseengineering.stackexchange.com/questions/21368/what-does-ds-mean",
    "content": "When debugging with x64dbg I sometimes see <pre><code>mov ss:[address] 0xAA</code></pre>, I know that this means: move 0xAA into memory at specified address.\nBut what does\n<pre><code>mov ds:[address] 0xAA\n</code></pre>\nmean?\n",
    "votes": "0",
    "answers": 1,
    "views": "1k",
    "tags": [
        "disassembly",
        "assembly",
        "x64dbg"
    ],
    "user": "Sam",
    "time": "May 26, 2019 at 18:53",
    "comments": [],
    "answers_data": [
        {
            "content": "The <pre><code>ds</code></pre> means \"data segment\" register in x86 architecture, while <pre><code>ss</code></pre> states for \"stack segment\" register. You would probably want to read link for more comprehensive description. When you see\n<pre><code>mov ds:[address], 0xAA,\n</code></pre>\nit means \"move <pre><code>0xAA</code></pre> to address <pre><code>address</code></pre> in data segment\", that is segment pointed by the current value of <pre><code>ds</code></pre> register. Similarly with every other segment register.\nIn x64 architecture segment registers are ignored.\n",
            "votes": "4",
            "user": "bart1e",
            "time": "May 26, 2019 at 19:10",
            "is_accepted": true,
            "comments": []
        }
    ]
}