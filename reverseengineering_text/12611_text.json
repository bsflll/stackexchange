{
    "title": "ollydbg ASLR and DEP bypass without mona",
    "link": "https://reverseengineering.stackexchange.com/questions/12611/ollydbg-aslr-and-dep-bypass-without-mona",
    "content": "In case Immunity Debugger (and hence mona) doesn't work for me, is there a quick way for me to check loaded image for DEP, SafeSEH and ASLR using OllyDbg alone? Manual inspection is acceptable too.\nI'm thinking that ASLR can be manually verify by restarting the application a few times and see if the base address changes. Am I correct? How about SafeSEH and DEP?\n",
    "votes": "2",
    "answers": 2,
    "views": "4k",
    "tags": [
        "ollydbg",
        "immunity-debugger"
    ],
    "user": "xyz",
    "time": "May 8, 2016 at 23:58",
    "comments": [
        {
            "user": "xyz",
            "text": "Found out that one can use dumpbin.exe /headers in Windows to check if \"NX compatible\" flag is turned on. I suppose that is how we can check for DEP in file on disk.\n",
            "time": null
        },
        {
            "user": "xyz",
            "text": "Similarly, \"Dynamic base\" flag shows that it is ASLR compatible.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "After figuring out that ASLR (Dynamic base) and DEP (NX compatible) flags in PE header can be inspect using dumpbin.exe /headers, I found out that the same PE header mapping is available in Ollydbg.  (I am using Ollydbg 2).\nJust open the Memory Map window in Ollydbg, find the image (under Owner column) you want, look for the row with \"PE header\" (under Contains column) and double click the base address (under Address column).\nThis will bring up the PE header mapping.  Look for the role that says \"DLLCharacteristics\" (a few rows after the IMAGE_NT_OPTIONAL_HDR32_MAGIC row).\n",
            "votes": "4",
            "user": "xyz",
            "time": "May 9, 2016 at 0:50",
            "is_accepted": false,
            "comments": [
                {
                    "user": "xyz",
                    "text": "<span class=\"comment-copy\">The meaning of the flags is described here <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms680339(v=vs.85).aspx\" rel=\"nofollow noreferrer\">msdn.microsoft.com/en-us/library/windows/desktop/…</a></span>",
                    "time": null
                },
                {
                    "user": "SYANiDE",
                    "text": "<span class=\"comment-copy\">This should be the accepted answer!  Especially in regards to native analysis capabilities sans plugins.  Although, \"IMAGE_NT_OPTION_HDR32_MAGIC\" isn't a present \"role\" in the output (testing on Vista), and Wei's link together make this quite feasible.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "you can use <pre><code>[OllySEH plugin][1]</code></pre> by Zer0Flag, <pre><code>OllySEH</code></pre> is a little plugin for OllyDbg 2.01 which should help exploit developers to find Modules which they can use to bypass different anti-bof techniques.\n    [+] display state for DEP\n    [+] display state for ALSR\n    [+] display state for SEH\n",
            "votes": "1",
            "user": "adrián",
            "time": "Sep 23, 2016 at 0:19",
            "is_accepted": false,
            "comments": []
        }
    ]
}