{
    "title": "Checking if an .exe is actually a .jar wrapped in an .exe",
    "link": "https://reverseengineering.stackexchange.com/questions/34/checking-if-an-exe-is-actually-a-jar-wrapped-in-an-exe",
    "content": "Let's say I have a .jar file and wrap it into a .exe using any number of free utilities out there, like JSmooth.\nWould it be possible to tell, given just the .exe, if it was generated using one such utility from a .jar file?\n",
    "votes": "19",
    "answers": 4,
    "views": "15k",
    "tags": [
        "decompilation",
        "java",
        "jar",
        "pe"
    ],
    "user": "APerson",
    "time": "Apr 2, 2013 at 21:18",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "Your title says one thing and the question body another. Could you please clarify which one is the real question?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I did a quick test with JSmooth and it simply places the whole .jar file in a resource. You can easily see this by opening a JSmooth executable with Resource Hacker as the following screen shot shows (I used sun's deploy.jar from the java lib folder):\n\nFor other utilities it might be different but you could use a tool like binwalk to look for the jar/zip signature inside the exe.\n",
            "votes": "25",
            "user": "Remko",
            "time": "Mar 20, 2013 at 12:26",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Jordan",
                    "text": "<span class=\"comment-copy\">Good answer, though of course other tools might not use the same approach. The question was a bit vague anyway though, so I think answering that specific implementation is the right way to go.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "If the executable itself isn't packed or obfuscated you can often find the jar or class files by simply opening it in decompression utilty such as 7-zip.\n",
            "votes": "8",
            "user": "Henry Heikkinen",
            "time": "Mar 27, 2013 at 7:34",
            "is_accepted": false,
            "comments": [
                {
                    "user": "amccormack",
                    "text": "<span class=\"comment-copy\">You can decompress a jar file using something like 7-zip, but the question was clarified to extracting a jar from an exe, not an exe from a jar.</span>",
                    "time": null
                },
                {
                    "user": "Henry Heikkinen",
                    "text": "<span class=\"comment-copy\">I understood the question. You <i>can</i> open the exe in 7-zip to find jar/class files.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "The exe is probably just a small add-on that will execute the java interpreter on a set of packed classes. I don't know more details about how they go about their job, but there's big chance that the jar file sits unmodified inside the generated exe\nYou could take a look at the generated files with a hex viewer and there's a high chance you'll find a jar signature (to find out create a small jar file, look at it with a hex viewer, pack it and search for specific content from the original jar in the packed file)\n",
            "votes": "5",
            "user": "rslite",
            "time": "Mar 20, 2013 at 2:38",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "You can simply grep the file for \"<pre><code>javaw.exe</code></pre>\" or <pre><code>java.exe</code></pre>... This will usually be a pretty good indicator whether or not the program is a Java wrapper or not.\n<pre><code>archenoth@Hathor ~/apps/Minecraft $ grep javaw.exe /host/Windows/notepad.exe \narchenoth@Hathor ~/apps/Minecraft $ grep javaw.exe ./Minecraft.exe \nBinary file ./Minecraft.exe matches\narchenoth@Hathor ~/apps/Minecraft $ \n</code></pre>\nThis is because wrappers usually contain the following:\n",
            "votes": "5",
            "user": "Archenoth",
            "time": "Apr 2, 2013 at 23:21",
            "is_accepted": false,
            "comments": []
        }
    ]
}