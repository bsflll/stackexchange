{
    "title": "Using __kernel_vsyscall on x64 linux machine [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/14423/using-kernel-vsyscall-on-x64-linux-machine",
    "content": "Closed. This question is off-topic. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\n Questions on software development are off-topic here, but can be asked on Stack Overflow.\n\n\nClosed 8 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nI am trying to use <pre><code>__kernel_vsyscall</code></pre> instead of <pre><code>syscall</code></pre>/<pre><code>int 80</code></pre> on linux x64.\nI have read that it can be done on Intel chips (I have one), but i can't find how can one do it. I have x32 version:\n<pre><code>int main() {\n    __asm__(\n    \"               movl $1, %eax  \n\"\n    \"               movl $42, %ebx \n\"\n    \"               call *%gs:0x10 \n\"\n    );\n}\n</code></pre>\nOne can compile & run it this way:\n<pre><code>\n% cc -m32 exit42.c -o x\n% ./x; echo $?\n42</code></pre>\nSo, how can i call vdso syscalls on x64 without <pre><code>syscall</code></pre> and <pre><code>int 80</code></pre>?\n",
    "votes": "2",
    "answers": 0,
    "views": "469",
    "tags": [
        "assembly",
        "linux",
        "elf",
        "x86-64"
    ],
    "user": "re_adept",
    "time": "8 years ago",
    "comments": [
        {
            "user": "re_adept",
            "text": "It looks like it can't be done\n",
            "time": null
        },
        {
            "user": "re_adept",
            "text": "man7.org/linux/man-pages/man7/vdso.7.html\n",
            "time": null
        }
    ],
    "answers_data": []
}