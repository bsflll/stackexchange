{
    "title": "How the 'Secure Application ROM (SAROM)' works ? and how can be decrypted?",
    "link": "https://reverseengineering.stackexchange.com/questions/33172/how-the-secure-application-rom-sarom-works-and-how-can-be-decrypted",
    "content": "There is a protection product that i'm interested in analyzing and breaking it called SAROM that encrypts sensitive information that stored in the client-side such as API Keys/hardcoded stuff. I tried to understand it from an example that uses SAROM, which is an iOS app using SAROM as a data protection and IOSSecuritySuite as an anti-(jb/reversing/debugging/etc..) protection, but I couldn't. There are two mach-o binaries inside the example, the core which is a framework binary has the SAROM implementation, and the bundle that calling the SAROM call which is <pre><code>+[NSData dataFromSecureAppROMItem:]</code></pre> (located in core mach-o binary file). Now where are the encrypted data ? They are located in the 5341524f4d folder in the example. i uploaded it here, the <pre><code>+[NSData dataFromSecureAppROMItem:]</code></pre> method is the call that responsible of decrypting it.\nP.S: i tried calling it using frida <pre><code>ObjC.classes.NSData.dataFromSecureAppROMItem_(ObjC.classes.NSString)</code></pre> but didn't work, probably because of how <pre><code>+[NSData dataFromSecureAppROMItem:]</code></pre> it works (the argument is the NSString's <pre><code>self</code></pre>: so probably the passed data has been accessed in an unusual way such as accessing it from an outside-the-method pointer) + IOSSecuritySuite making it more harder dynamically but the main thing is how SAROM works and it will be very helpful for understanding to write a script decrypting the data\n",
    "votes": "0",
    "answers": 0,
    "views": "49",
    "tags": [
        "static-analysis",
        "encryption",
        "ios",
        "encodings",
        "mach-o"
    ],
    "user": "IVs",
    "time": "Aug 20, 2024 at 15:53",
    "comments": [],
    "answers_data": []
}