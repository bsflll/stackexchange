{
    "title": "Structure Definitions for PEB in IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/2610/structure-definitions-for-peb-in-ida",
    "content": "When reversing shellcode, we see the PEB walk fairly often at various stages. I am curious however, if there is any pre-defined standard structure for this in IDA? If so, what is it called? After looking and googling around I haven't been able to find anything. I would also be very interested in definitions for PEB_LDR_DATA and RTL_USER_PROCESS_PARAMETERS.\nI could create them myself and export them somehow (would have to figure out how). But before doing that I am really curious if there is just something I am missing amongst the standard structure definitions in IDA.\n",
    "votes": "8",
    "answers": 2,
    "views": "6k",
    "tags": [
        "ida",
        "shellcode"
    ],
    "user": "Elias51",
    "time": "Aug 10, 2013 at 17:11",
    "comments": [],
    "answers_data": [
        {
            "content": "The structures for the PEB are _PEB and PEB_LDR_DATA. You need to have the ntapi type library loaded, you can add it by going in the Type Libraries view (Shift+F11) and then press Ins.\n",
            "votes": "9",
            "user": "0xC0000022L",
            "time": "Aug 10, 2013 at 16:50",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "if you are using <pre><code>IDA FREE</code></pre> then this and several other type libraries are not available \nand if you intend to \n<pre><code>create them yourself and export them somehow (would have to figure out how). \n</code></pre>\nthis walk through provides few hints on how to accomplish it\nos winxp sp3 vm \n<pre><code>(all opaque structures like EPROCESS can vary from os to os / hotfix to hotfix patch tuesday to patch tuesday )\n</code></pre>\nsupposing you are reversing PsGetProcessId() in ntkrnlpa.exe \n<pre><code>                  ; Exported entry 872. PsGetProcessId    \n                  ; Attributes: bp-based frame    \n                  ; __stdcall PsGetProcessId(x)\n                  public _PsGetProcessId@4\n                  _PsGetProcessId@4 proc near\n8B FF             mov     edi, edi\n55                push    ebp\n8B EC             mov     ebp, esp\n8B 45 08          mov     eax, [ebp+8]\n8B 80 84 00 00 00 mov     eax, [eax+84h] <-----\n5D                pop     ebp\nC2 04 00          retn    4\n                  _PsGetProcessId@4 endp\n</code></pre>\nand you find out 84 is EPROCESS->Pid and want to impart this information to the disassembly\nmake a text file named <pre><code>EPROCESS.h</code></pre> \ntype the following in the text file and save it for accessing it later\n<pre><code>typedef struct EPROCESS \n{\n  BYTE unknown[0x84];\n  DWORD Pid;\n} EPROCESS, *EPROCESS;\n</code></pre>\ngo to <pre><code>ida free ->File->Load File->Parse Header File</code></pre> or shortcut <pre><code>ctrl+f9</code></pre>\nbrowse to the <pre><code>EPROCESS.h</code></pre> \nyou should see this is <pre><code>ida information window</code></pre> on being successful\n<pre><code>The initial autoanalysis has been finished.\nC:\\Documents and Settings\\Admin\\Desktop\\EPROCESS.h: `successfully compiled`\n</code></pre>\nview-><pre><code>open subviews->structures</code></pre> or shortcut <pre><code>shift+f9</code></pre>\npress <pre><code>insert</code></pre> key click <pre><code>add standard structure</code></pre> start typing <pre><code>peb</code></pre> and you should see the window scrolling and showing you the  structure you just added\n<pre><code>00000000 EPROCESS        struc ; (sizeof=0x88, standard type)\n00000000 unknown         db 132 dup(?)\n00000084 Pid             dd ?\n00000088 EPROCESS        ends\n</code></pre>\ngo to idaview select <pre><code>84h</code></pre> / <pre><code>right click->select structure offset</code></pre>\nand apply the <pre><code>Eprocess.Pid</code></pre> \ndisassembly will become a bit more readable\n<pre><code>8B 80 84 00 00 00 mov     eax, [eax+EPROCESS.Pid]\n</code></pre>\nstart adding other discovered offset to this eprocess.h and load it again for updated \nstructure definitions\nmany of the structures definitions can be viewed via windbg\nfor example peb and peb_ldr_data can be viewed like this\n<pre><code>dt nt!_PEB\ndt nt!_PEB_LDR_DATA\n</code></pre>\nAdditional Details\nif you modify the .h file to add another structure member like this\n<pre><code>typedef struct EPROCESS \n{\n  BYTE unknown[0x84];\n  DWORD Pid;\n  BYTE unk2[0xbc-0x88];\n  DWORD DebugPort;\n  BYTE unknown1[0x174-0xc0];\n  BYTE ImageFileName[16];\n} EPROCESS, *PEPROCESS;\n</code></pre>\nBe Aware you would need to delete the earlier definitions before parsing the header file again and this implies all your earlier work will be lost on reloading \nso save your work\n",
            "votes": "6",
            "user": "blabb",
            "time": "Aug 11, 2013 at 10:53",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Elias51",
                    "text": "<span class=\"comment-copy\">Thanks for this! I was using IDA Pro, but this information is helpful in situations where the definition I am looking for is indeed absent.</span>",
                    "time": null
                }
            ]
        }
    ]
}