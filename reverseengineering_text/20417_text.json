{
    "title": "WebSocket debugging in Javascript app gives \"401 Unauthorized\" [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/20417/websocket-debugging-in-javascript-app-gives-401-unauthorized",
    "content": "Closed. This question needs details or clarity. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Add details and clarify the problem by editing this post.\n\n\nClosed 6 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nI'm attempting to reverse engineer a private API used by an Android app that makes use of WebSockets. These requests are made from JavaScript inside a WebView.\nI use Charles to intercept both HTTP and WebSocket requests, with it I'm able to see how the app successfully connects and speaks to the API with WebSockets.\nThe API uses cookies to authorize connections, the cookies responsible for it are \"ts.default\" and \"ts.default.sig\".\nThis is how the request looks in Charles:\n\nMy goal is to be able to speak with the API from a Python script. However, when making the same Upgrade request, making sure to keep all relevant headers, I get a 401 Unauthorized status code:\n\nI've uploaded the relevant JavaScript code responsible for such requests here.\nI'm not very proficient with WebSockets and seeing how I've been stuck here for the past few hours I thought maybe someone here could be able to spot what I'm missing.\n",
    "votes": "1",
    "answers": 1,
    "views": "521",
    "tags": [
        "android",
        "javascript",
        "api",
        "https-protocol"
    ],
    "user": "FailedShack",
    "time": "6 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "Ok, I figured it out. The websocket-client library I use for python writes its own Origin header by default and I was ending up with two Origin headers, which may have been tipping off the server.\nI found out you can disable it by adding <pre><code>supress_origin=True</code></pre> when calling connect on the WebSocket.\n",
            "votes": "1",
            "user": "FailedShack",
            "time": "Jan 19, 2019 at 17:57",
            "is_accepted": false,
            "comments": []
        }
    ]
}