{
    "title": "In IDA what does db and dd offset means in data section?",
    "link": "https://reverseengineering.stackexchange.com/questions/29733/in-ida-what-does-db-and-dd-offset-means-in-data-section",
    "content": "So, in <pre><code>.data</code></pre> section there is some variable, and after it there is <pre><code>db</code></pre> or <pre><code>dd</code></pre> (<pre><code>offset</code></pre>). What exactly does this mean? And what does “align” means? Is there any Wiki or something like that that tells all this in detail?\n<pre><code>    .data:0048A374                 db    0\n    .data:0048A375                 db    0\n    .data:0048A376                 db    0\n    .data:0048A377                 db    0\n    .data:0048A378 off_48A378      dd offset unk_48A000    ; DATA XREF: start+41↑o\n    .data:0048A37C                 dd offset unk_48A1CE\n    .data:0048A380                 dd offset unk_48A1CE\n    .data:0048A384                 dd offset unk_48A33C\n    .data:0048A388 byte_48A388     db 1                    ; DATA XREF: __InitVCL+3↑r\n    .data:0048A389                 align 10h\n    .data:0048A390                 dd offset WinMain\n    .data:0048A394                 dd offset __matherr\n    .data:0048A398                 dd offset __matherrl\n    .data:0048A39C                 align 10h\n    .data:0048A3A0                 dd offset unk_48F66C\n    .data:0048A3A4                 dd offset off_490784\n    .data:0048A3A8                 dd offset off_490788\n    .data:0048A3AC                 dd offset __handle_setargv\n    .data:0048A3B0                 dd offset __handle_exitargv\n    .data:0048A3B4                 dd offset __handle_wsetargv\n    .data:0048A3B8                 dd offset __handle_wexitargv\n    .data:0048A3BC                 dd offset dword_48F0EC\n    .data:0048A3C0 byte_48A3C0     db 0                    ; DATA XREF: ___CRTL_VCL_Init_2+2↑r\n    .data:0048A3C0                                         ; __InitVCL+17↑r\n    .data:0048A3C1 byte_48A3C1     db 0                    ; DATA XREF: .text:00401060↑r\n    .data:0048A3C1                                         ; ___CRTL_VCL_Init_2+B↑r ...\n    .data:0048A3C2                 dd offset unk_4906E4\n    .data:0048A3C6                 dd offset unk_4907AC\n    .data:0048A3CA                 dd offset unk_4904F0\n    .data:0048A3CE                 db    0\n    .data:0048A3CF ; DWORD dwTlsIndex\n    .data:0048A3CF dwTlsIndex      dd 0                    ; DATA XREF: start:loc_401012↑r\n    .data:0048A3CF                                         ; .text:00401082↑r ...\n    .data:0048A3D3 dword_48A3D3    dd 0                    ; DATA XREF: start+1A↑w\n    .data:0048A3D7 dword_48A3D7    dd 0                    ; DATA XREF: start+4D↑w\n    .data:0048A3D7                                         ; .text:__getHInstance↑r ...\n    .data:0048A3DB                 db  90h ; ђ\n    .data:0048A3DC ; Exported entry 156. ___CPPdebugHook\n    .data:0048A3DC                 public ___CPPdebugHook\n    .data:0048A3DC ___CPPdebugHook db    0                 ; DATA XREF: start+E↑o\n    .data:0048A3DC                                         ; sub_46AF30+20↑o ...\n    .data:0048A3DD                 db    0\n    .data:0048A3DE                 db    0\n    .data:0048A3DF                 db    0\n</code></pre>\n",
    "votes": "2",
    "answers": 1,
    "views": "3k",
    "tags": [
        "ida"
    ],
    "user": "ScienceDiscoverer",
    "time": "Dec 20, 2021 at 10:32",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "define: b - byte, d - dword\n",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "Hi and welcome to RE.SE. While your question is certainly valid, it's also trivial and the answer can be found in the first pages of books about x86 assembly language. E.g. here or here ... aside from that it's be best to paste text as text and not a screenshot. Because: search engines.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<pre><code>db</code></pre> means “define byte”, i.e. a reservation of 1 byte of memory,\n<pre><code>dw</code></pre> means “define word” (2 bytes of memory),\n<pre><code>dd</code></pre> means “define double-word” (4 bytes of memory).\n\nThe <pre><code>offset</code></pre> prefix means to fill the reserved byte(s) not with the mentioned data itself (i.e., not with the content), but only with the offset to it (i.e., with the position of data in memory, expressed as the number of bytes from the beginning of the segment).\nThe <pre><code>align</code></pre> directive means “If this address is not a multiple of the given number, skip the necessary number of bytes to fulfill this address requirement for the next data”.\n\nYou may see it in your listing:\n\n<pre><code>db 1</code></pre>  is at address <pre><code>0048a388</code></pre>, it occupies only 1 byte (<pre><code>db</code></pre> – define byte, i.e., 1 byte) and fills  it with the given value (<pre><code>1</code></pre>). So the next address is <pre><code>0048a389</code></pre>.\n\nAt this next address (<pre><code>0048a389</code></pre>) is the <pre><code>align 10h</code></pre> directive, so the byte at this address and the subsequent 6 bytes at addresses\n\n<pre><code>0048a38a</code></pre>, <pre><code>0048a388b</code></pre>, <pre><code>0048a38c</code></pre>, <pre><code>0048a38d</code></pre>, <pre><code>0048a38e</code></pre>, and <pre><code>0048a38f</code></pre>\n\nare skipped, because they don't fulfill the request “a multiple of 10h” (i.e., their last digit in hexadecimal notation is not <pre><code>0</code></pre>).\n\nAt the next address <pre><code>0048a390</code></pre> (which finally fulfills the <pre><code>align 10h</code></pre> requirement) is the directive\n\n<pre><code>dd offset WinMain</code></pre>,\n\nwhich reserves 4 bytes of memory (<pre><code>dd</code></pre> – define double word), and fills them with the offset of the (start of) <pre><code>WinMain</code></pre> function (<pre><code>offset WinMain</code></pre>).\n",
            "votes": "6",
            "user": "MarianD",
            "time": "Dec 21, 2021 at 8:40",
            "is_accepted": true,
            "comments": []
        }
    ]
}