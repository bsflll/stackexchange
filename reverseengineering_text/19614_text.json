{
    "title": "How to see all of my changes in idb?",
    "link": "https://reverseengineering.stackexchange.com/questions/19614/how-to-see-all-of-my-changes-in-idb",
    "content": "Is there ant way to see all of my changes in idb file ?\nAll of variable in psudo code that I changed here name, all the funxtion I rename.\nI want to see all of this\n",
    "votes": "0",
    "answers": 1,
    "views": "409",
    "tags": [
        "ida",
        "windows"
    ],
    "user": "Keystone",
    "time": "Oct 13, 2018 at 17:20",
    "comments": [
        {
            "user": "Biswapriyo",
            "text": "AFAIK, IDA only shows the bytes are patched relative to the actual loaded binary.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "As far as I know there is no easy way to do that, but with some IDAPython or IDC scripting it is achievable. \n\nRegarding renamed and re-typed global items (functions, global variables, label names, almost everything not related to the decompiled functions content): you can just export all this data as idc script (File-->Produce file-->Dump database to IDC file) and filter it. \nIf you need only renamed items, you can see all the data in the Names window (View-->Open subview-->Names window or Shift-F4). You can also iterate these names with IdaPython function <pre><code>idautils.Names()</code></pre> and use <pre><code>idc.GetType</code></pre> or one of its alternatives to get the corresponding data type.\nRegarding types you created: you can use File-->Produce file-->Create C header file \nRegarding decompiler related changes: you can extend one of the decompiler IDApython samples to show what you need: this sample dumps all user changes in the function at your cursor location, changing it to run over all functions should be trivial. \n\nThese actions should cover the most of what you probably need.\n",
            "votes": "1",
            "user": "w s",
            "time": "Oct 16, 2018 at 12:07",
            "is_accepted": false,
            "comments": []
        }
    ]
}