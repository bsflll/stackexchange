{
    "title": "index of array in assembly? [duplicate]",
    "link": "https://reverseengineering.stackexchange.com/questions/18710/index-of-array-in-assembly",
    "content": "This question already has an answer here:\n                                \n                            \n\n\n\n\nHow does array indexing works at the assembly level?\n\n                                (1 answer)\n                            \n\nClosed 6 years ago.\n\n\n\nIn the following picture the line i want to mention is:\n<pre><code>mov [esp+eax*4+0Ch], edx\n</code></pre>\nHere <pre><code>eax</code></pre> is the index in the array. But, where is the address of the array to access?\nwhat does mean this line of code ? (<pre><code>0Ch</code></pre>)\n",
    "votes": "0",
    "answers": 1,
    "views": "6k",
    "tags": [
        "disassembly",
        "assembly"
    ],
    "user": "ReverserT",
    "time": "6 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "Usually, when running through an array, we can find the following lines of assembly code:\n<pre><code>mov [base_address_of_array + array_index * size_of_an_item_in_array], edx\n</code></pre>\nIn your case, my guess would be that the array is on the stack (that is why you find <pre><code>esp</code></pre> as part of the base address of the array. Then, you also have an offset to <pre><code>esp</code></pre> which is <pre><code>0Ch</code></pre> (which is 12 in decimal). So, the array is located at <pre><code>esp + 0Ch</code></pre>. Then, <pre><code>eax</code></pre> is the index and <pre><code>4</code></pre> is the size of an item in the array (probably an integer of 4 bytes).\nIf we look at the whole CFG, I would translate it back to C in something like this:\n<pre><code>int array[4];\n\nfor (int i = 0; i < 4; ++i)\n  array[i] = i;\n</code></pre>\nNote: I supposed that the blue arc in the CFG is getting back to <pre><code>loc_401381</code></pre>.\n",
            "votes": "4",
            "user": "perror",
            "time": "Jul 6, 2018 at 16:33",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Biswapriyo",
                    "text": "<span class=\"comment-copy\">The assembly code looks like pointer arithmetic with arrays. Isn't it?</span>",
                    "time": null
                }
            ]
        }
    ]
}