{
    "title": "IDA Pro List of Functions with Instruction",
    "link": "https://reverseengineering.stackexchange.com/questions/2493/ida-pro-list-of-functions-with-instruction",
    "content": "I have a DLL with a large number of functions in IDA Pro. I would like to make a script that can scan the instructions within each of the functions looking for a specific instruction. For my specific case right now, I am looking for functions that shift left (shl). I am not sure which register is being shifted so I would like to keep it versatile. I do know that it is only shifting one place in this specific case.\nI know python on a very basic level, and I know IDA-Python on a non-existent level. Please help me with suggestions on how to access this data inside IDA.\nEdit:\nI have read through this question and it says that there is no direct access to the list of functions that have been discovered by IDA.  You have to specify a starting function address.  Is there any better way to list functions?\n",
    "votes": "8",
    "answers": 2,
    "views": "15k",
    "tags": [
        "ida",
        "idapython"
    ],
    "user": "WMIF",
    "time": "May 23, 2017 at 12:37",
    "comments": [],
    "answers_data": [
        {
            "content": "While in the Text View of the disassembly window, press Alt + T. In the Text Search window, search for <pre><code>shl</code></pre> and check <pre><code>Find all occurrences</code></pre>:\n\nPress <pre><code>OK</code></pre> and you will get a list of all functions that contain <pre><code>shl</code></pre>:\n",
            "votes": "9",
            "user": "Jason Geffner",
            "time": "Jul 17, 2013 at 13:59",
            "is_accepted": true,
            "comments": [
                {
                    "user": "0xea",
                    "text": "<span class=\"comment-copy\"><i>facepalm</i> that didn't occur to me ...</span>",
                    "time": null
                },
                {
                    "user": "WMIF",
                    "text": "<span class=\"comment-copy\">So simple, yet it worked perfectly for me.  It also allows use of the simple filter ctrl+F to restrict the list by function name prefix. Thanks!</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "Your best bet is to use IDAPython API to do this.\nTo iterate trough all functions you could do something like \n<pre><code>from idautils import *\nfrom idaapi import *\n\nea = BeginEA()\nfor funcea in Functions(SegStart(ea), SegEnd(ea)):\n    functionName = GetFunctionName(funcea)\n    functionStart = \"0x%08x\"%funcea\n    functionEnd = \"0x%08x\"%FindFuncEnd(funcea)\n    # ...\n</code></pre>\nWhen you have the start and the end of the function, you can iterate over all effective addresses inbetween and use GetMnem() to get the instruction on that address. Of course, you'd need to handle some specific cases, instruction size and all, but that's the general idea.\n",
            "votes": "6",
            "user": "evandrix",
            "time": "Jul 9, 2017 at 7:15",
            "is_accepted": false,
            "comments": [
                {
                    "user": "WMIF",
                    "text": "<span class=\"comment-copy\">There is possibility for function chunks to exists outside of the address range between the start and end addresses, and in fact this is the case in my project.  Does IDA account for this when doing the procedure that you are suggesting?</span>",
                    "time": null
                },
                {
                    "user": "0xea",
                    "text": "<span class=\"comment-copy\">yes , i am aware of that, that's why i said you'd need to handle specific cases, just gave a short example on ida python ... really not sure how it would handle the problem you are suggesting</span>",
                    "time": null
                },
                {
                    "user": "Milhous",
                    "text": "<span class=\"comment-copy\">You can iterate through all the code in the text segment but there can be errors when data is placed inside the code.</span>",
                    "time": null
                }
            ]
        }
    ]
}