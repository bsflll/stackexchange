{
    "title": "Any Disassembler for iOS?",
    "link": "https://reverseengineering.stackexchange.com/questions/12773/any-disassembler-for-ios",
    "content": "Is there any iOS app for arm Disassembling?\nI mean one that can run on iPhone. \nNor IDA or Hopper have any iOS version\n",
    "votes": "3",
    "answers": 3,
    "views": "3k",
    "tags": [
        "arm",
        "disassemblers",
        "ios"
    ],
    "user": "DineroM34",
    "time": "Jun 1, 2016 at 6:49",
    "comments": [
        {
            "user": "broadway",
            "text": "r2 can run on a (jailbroken) iphone. see github.com/radare/radare2/blob/master/doc/iphone.md\n",
            "time": null
        },
        {
            "user": "Jongware",
            "text": "Isn't the basic idea of iOS that every application runs in its own sandbox? So that means you'd have to load external data into it â€“ other than on a desktop system, you can't go and run it on anything you have installed.\n",
            "time": null
        },
        {
            "user": "Starwarsfan2099",
            "text": "Actualy, IDA has been ported to iOS (Jailbroken)  letsunlockiphone.guru/ida-pro-disassembler-ported-iphone It really can run, I have used it before. I do prefer radare2 though. (See jvoisins answer)\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "If your iPhone is jailbroken, you can use radare2 on it. You can follow the process to cross-compile it here, or simply grab the latest release from Cydia.\nA neat feature of radare2 is that you can run it on your iPhone, and debug/analyse your application remotely, since radare2 instances can communicate, either by spawning the web interface, or with the rap protocol, documented here.\nIf your iPhone isn't jailbroken, then there is no way an application could be used to analyse another one, since each of them is running in a separate sandbox.\n",
            "votes": "4",
            "user": "jvoisin",
            "time": "Jun 5, 2016 at 22:31",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "I think you might try the otool command line tool its very basic but it do some disassembling, it just show function names and instructions no fancy links \"showing where code will jump\" it shows only dresses\nBut definitely you need to be Jailbroken\n",
            "votes": "0",
            "user": "Karim H",
            "time": "Jun 2, 2016 at 23:24",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "For a long time, I was using gdb from Cydia on my iPad 2 (it should still work on any 32-bit device).  You can dump memory by attaching gdb to the running application's pid: <pre><code>ps ax | grep [app name]</code></pre> and <pre><code>gdb -p -q [pid]</code></pre>.\nIf you wanted to add a breakpoint at a symbol or selector, you first needed to extract the headers from the application.  Using any variant of Class Dump (I used class-dump-z), I could break at any symbol dumped from the generated interfaces.  After hitting the breakpoint, just run the <pre><code>disassemble</code></pre> command.\n\n\nImage source\n",
            "votes": "0",
            "user": "JAL",
            "time": "Nov 18, 2016 at 4:03",
            "is_accepted": false,
            "comments": []
        }
    ]
}