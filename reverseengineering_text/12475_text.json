{
    "title": "IDApython and IDA-decompiler commenting",
    "link": "https://reverseengineering.stackexchange.com/questions/12475/idapython-and-ida-decompiler-commenting",
    "content": "Looking at the functions exposed by <pre><code>idaapi</code></pre> I see that functions like the following are exposed.\n<pre><code>get_user_cmt\nset_user_cmt\nsave_user_cmts\n</code></pre>\nAs these functions are exposed I'm hoping that I have a way to add comments onto the hex-rays decompiler using a script. I looked around a bit and could not find examples using these functions. \n[EDIT]\nset_user_cmt seems to take 2 arguments, of which the second is the comment and the first is an instance of <pre><code>treeloc_t</code></pre>. However, I'm not too sure how to use it. Using the following leads to an orphan comment.\n<pre><code>idaapi.set_user_cmt(idaapi.treeloc_t(5), \"asdf\")\n</code></pre>\n",
    "votes": "5",
    "answers": 3,
    "views": "6k",
    "tags": [
        "ida",
        "idapython",
        "ida-plugin",
        "hexrays",
        "idapro-sdk"
    ],
    "user": null,
    "time": "Apr 18, 2016 at 20:25",
    "comments": [
        {
            "user": "Vitaly Osipov",
            "text": "Ask their support for examples?\n",
            "time": null
        },
        {
            "user": "w s",
            "text": "I'm not pretty sure that it answers your question, but probably it will give you some direction : github.com/idapython/src/blob/master/examples/vds4.py\n",
            "time": null
        },
        {
            "user": "w s",
            "text": "Just for reference : you will probably find more information on treeloc_t here, in hexrays.hpp file : hex-rays.com/products/decompiler/manual/sdk/â€¦ . I'd be glad to provide more complete solution but unfortunately I don't have working hex-rays now.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "The <pre><code>treeloc_t</code></pre> constructor does not accept an EA, and you need to specify the comment preciser:\n<pre><code>ea = idaapi.get_screen_ea()\ncfunc = idaapi.decompile(ea)\ntl = idaapi.treeloc_t()\ntl.ea = ea\ntl.itp = idaapi.ITP_SEMI\ncfunc.set_user_cmt(tl, \"Test comment\")\ncfunc.save_user_cmts()\n</code></pre>\nYou can find more info about the precisers in hexrays.hpp. Not all precisers work everywhere. For example, the above code uses <pre><code>ITP_SEMI</code></pre>, which comments after a semicolon: it will result in an orphan comment if you use it on an <pre><code>if</code></pre>.\n",
            "votes": "2",
            "user": "Andrea Biondo",
            "time": "Jun 19, 2016 at 20:14",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "I am trying to achieve a similar thing with ida-batch_decompile. The basic idea is to annotate and decompile the target from commandline (but it also comes with a menu entry; acting as a plugin or idascript)\nIt currently annotates functions with a textual description of guessed stack variable sizes and xrefs. To do so it adds a function comment block with <pre><code>SetFunctionCmt(addr, txtcomment, 0)</code></pre> (see code) and once all functions are annotated it decompiles the target binary to pseudocode (optionally also decompiles resolvable imports). Note that atm it is not capable of annotating decompiled lines but I am looking into having that in the future.\nHere's an example for <pre><code>dbghelp.c</code></pre>\n<pre><code>//----- (03052800) --------------------------------------------------------\n// **** Variables ****\n// * stack size: 20\n// {\"diff_size\": 4, \"offset_text\": \"[bp+0h]\", \"size\": 4, \"name\": \" s\", \"offset\": 0}\n// {\"diff_size\": 4, \"offset_text\": \"[bp+4h]\", \"size\": 4, \"name\": \" r\", \"offset\": 4}\n// {\"diff_size\": 4, \"offset_text\": \"[bp+8h]\", \"size\": 4, \"name\": \"arg_0\", \"offset\": 8}\n// {\"diff_size\": 4, \"offset_text\": \"[bp+Ch]\", \"size\": 4, \"name\": \"dwBytes\", \"offset\": 12}\n// {\"diff_size\": 4, \"offset_text\": \"[bp+10h]\", \"size\": 4, \"name\": \"arg_8\", \"offset\": 16}\n// *******************\n// ***** XREFS *****\n// * # 1\n// sub_30733D0+30\n// *******************\nint __stdcall sub_3052800(int a1, SIZE_T dwBytes, int a3)\n{\n  int result; // eax@17\n  HANDLE v4; // eax@21\n...\n</code></pre>\n",
            "votes": "0",
            "user": "tintin",
            "time": "Sep 30, 2016 at 9:12",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "You can use idc.MakeComm or idc.MakeRptCmt functions. For example:\n<pre><code>MakeComm(address, 'My comment')\n</code></pre>\n",
            "votes": "-2",
            "user": "ebux",
            "time": "Apr 19, 2016 at 7:31",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">I don't believe that can be used to apply comments on Hex-Rays decompilations.</span>",
                    "time": null
                }
            ]
        }
    ]
}