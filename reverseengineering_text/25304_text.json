{
    "title": "Garage door rolling code: identifying the implementation",
    "link": "https://reverseengineering.stackexchange.com/questions/25304/garage-door-rolling-code-identifying-the-implementation",
    "content": "I'm trying to reverse engineer my garage door remote (we're having robbery problems here, so I check if it's a weak point), here's what I found, listening on 868MHz:\nThere's a \"preamble\" composed of an alternance of ones and zeros.\nThen, data bits are transmitted using 3 bits, using the form \"10x\", I mean, a one, followed by a zero, following by a data bit, I do not recognize this encoding.\nIt looks to transmit 52 or 53 bits per button press (the last bit is always 0 so I don't really know if I have to count it or not).\nHere's what I identified, I labelled the columns as far as I understand them, there's 4 lines for 4 distinct records (4 button press):\n<pre><code>Constant     Remote specific  b    ?    rolling code ?   \n000011110100 1010101000000100 1000 0000 0011101001011011 0\n000011110100 1010101000000100 0100 0000 1111010101001100 0\n000011110100 1010101000000100 0010 0000 1011000111001010 0\n000011110100 1010101000000100 0001 0000 1000010111011001 0\n</code></pre>\nwith:\n\nConstant: ... a 12 bits constant, not identified, could be the door id, the vendor ID, a protocol constant, don't know.\nRemote specific: a 16 bits value, it change when I test another remote so it may be something like the serial number of my remote.\nb is 4 bits showing the pressed buttons, one bit per button, (4 buttons == 4 bitS), here I pressed successively button 1, 2, 3 and 4 to demo it.\nthe 2nd 4-bits column is always filled of zeros\n16 bits of maybe a rolling code\nlast bit is always 0, as far as I measured (like 25 records).\n\nA long press emits the same message in a loop (the \"rolling code\" does not change\"), but a release followed by another press make the rolling code change.\nThe remote is a \"v2 phoenix\", which looks compatible with the \"v2 phox\".\nDo you have any idea about which protocol it is? (if it's named a \"protocol\")\n",
    "votes": "3",
    "answers": 0,
    "views": "512",
    "tags": [
        "remote"
    ],
    "user": "Julien Palard",
    "time": "Jun 28, 2020 at 13:12",
    "comments": [
        {
            "user": "Jim",
            "text": "While this is radio related, it is not amateur radio related. Most garage doors use the KeeLoq protocol which is 66 bytes of data, 28 byte serial number, 4 bytes of button information, 2 bytes status, and 32 bytes of actual rolling code.\n",
            "time": null
        },
        {
            "user": "Marcus Müller",
            "text": "by the way, no need to reverse engineer anything here: if the garage door opens no matter how many wrong attempts you've made before (which it probably does), then these are ridiculously only 16 bits of things you need to try out, so 2¹⁶ possibilites. You should be through trying every possibility in a minute or two, over the air. So, if you are wondering whether this is a safe system against someone who has an SDR: no, it's not. No further investigation needed. Is that really relevant as a threat model? Probably not. How many robbers are technologically more advanced than a crowbar?\n",
            "time": null
        },
        {
            "user": "user35420",
            "text": "I've the same remote in my possession. Trying to understand and adding more data: using this command with RTL usb dongle and rtl_433 : rtl_433 -f 433936000 -X 'n=name,m=OOK_PWM,s=448,l=884,r=3000,g=0,t=0,y=2000' Gets me the 52 bits code new samples: ff641a07f6edf ff641a07f8e7e ff641a07f2fc7\n",
            "time": null
        },
        {
            "user": "carlos gonzalez",
            "text": "Did you manage to get the sequence, I'm studying it but I can't see how they encode the counter\n",
            "time": null
        },
        {
            "user": "sudhackar",
            "text": "Hello and welcome to RE.SE! This section is specifically for answers. if you have another question - you can make a new post and cite this. Thanks\n",
            "time": null
        }
    ],
    "answers_data": []
}