{
    "title": "Is it not just simple to view private source code of an OS by disassembling it? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/2839/is-it-not-just-simple-to-view-private-source-code-of-an-os-by-disassembling-it",
    "content": "Closed. This question needs details or clarity. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Add details and clarify the problem by editing this post.\n\n\nClosed 11 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nI know OSes like Mac OS X and Windows hide their source code from their users, although I've just wondered that would it not be possible to still find a way to alter a Window or Mac OS X through disassembling the computer and then finding the necessary part which has the OS, and working on that part.\nAt the end of the day, they are just electrical signals, so surely they are decipherable (very hard, but feasible)? Through this would it then be possible to actually change the source code to your own liking?\n",
    "votes": "-2",
    "answers": 2,
    "views": "182",
    "tags": [
        "hardware",
        "operating-systems"
    ],
    "user": "83457",
    "time": "11 years ago",
    "comments": [
        {
            "user": "perror",
            "text": "Well, an operating system is stored on the hard-drive. So, it would be much simpler to edit the files and change it. But, your question is really unclear... what would be the goal of such modification ? Maybe, try to be more focused when asking question.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "You seem to have a misunderstanding of the relationship between the hardware of a computer and the operating system. I suggest you start reading http://en.wikipedia.org/wiki/Operating_system \nThe operating system lives on top of the hardware. There's no need to look at any electrical signals to alter OSX or Windows, you can do this on a far higher level from inside the operating system itself.\n",
            "votes": "3",
            "user": "ixje",
            "time": "Sep 26, 2013 at 19:30",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Peter Andersson",
                    "text": "<span class=\"comment-copy\">I think you're right about there being too much confusion in this question. I'll put it on hold until there's some clarification.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "Yes it's very possible to understand the workings of systems without access to the source code. One of the problems is that the transformation of source code to the binaries which run on the platform is rarely without information loss. This means that it's usually impossible to reconstruct the source code from the binaries. Also you can't really redistribute your changed OS due to copyright which is what free software is all about. What is normally done is that people reverse engineer the internals of closed source operating systems and then document how these systems work internally. Someone else then takes this specification and creates a re-implementation of the described system. This is called the Chinese wall or clean room implementation. This is done due to copyright issues so that the person who has seen the code doesn't deliberately or accidentally create code with large similarities to the original code.\nA good example of this process is ReactOS and Wine. Both projects collaborate quite extensively and aim to create a free compatible implementation of the inner workings of Windows.\nSome systems are deliberately protected from being modified by use of cryptographic signatures. The iPhone and iOS is one such platform. The way the software is usually protected is by establishing a secure boot chain with a ROM which validates the integrity of the next boot step and each subsequent step then validates the signatures of each following step. This creates a chain of software which can't be changed in ways the manufacturer doesn't intend. It's a common way of fighting piracy on closed platforms. In fact it's a common way of making use of free software while avoiding the problem of having people able to run arbitrary code on their hardware. This is generally referred to as Tivoization after the locked down TiVo system which makes extensive use of GPL software yet can't run user created code without bypassing the security mechanisms of the system.\n",
            "votes": "2",
            "user": "Peter Andersson",
            "time": "Sep 26, 2013 at 17:36",
            "is_accepted": false,
            "comments": []
        }
    ]
}