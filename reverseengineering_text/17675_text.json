{
    "title": "IDA pro obfuscation instance",
    "link": "https://reverseengineering.stackexchange.com/questions/17675/ida-pro-obfuscation-instance",
    "content": "I have tried all the I have learned so far to figure out how to deal with this instance of obfuscation.\n\nSo far I understand that an opaque predicate is present, causing an unconditional jump to one byte into L0. \nWhat I don't understand is how to deal with this issue in IDA. If the jump is made to L0+1 how can I mark the byte E8 as data, or deal with this otherwise. \nAny help would be appreciated. Thanks.\n",
    "votes": "3",
    "answers": 1,
    "views": "882",
    "tags": [
        "disassembly",
        "obfuscation"
    ],
    "user": "vsA_",
    "time": "Mar 12, 2018 at 23:39",
    "comments": [],
    "answers_data": [
        {
            "content": "IDA is good at recognising such tricks, but if it didn't\nyou can press D having the <pre><code>call</code></pre> instruction selected. \nThis will convert the opcode to a data, displaying just bunch of <pre><code>db</code></pre>s. After that, select the byte that has <pre><code>db 58</code></pre> (so one after <pre><code>E8</code></pre>) and press C to convert it to code again without the first byte. \nResult after the changes.\n\nI don't know if this could be automated - probably with some script that IDA supports it could be.\n",
            "votes": "3",
            "user": "Paweł Łukasik",
            "time": "Mar 13, 2018 at 7:15",
            "is_accepted": true,
            "comments": []
        }
    ]
}