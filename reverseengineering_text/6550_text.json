{
    "title": "Is it possible to get back to a compilable form of source code using IDA pro [duplicate]",
    "link": "https://reverseengineering.stackexchange.com/questions/6550/is-it-possible-to-get-back-to-a-compilable-form-of-source-code-using-ida-pro",
    "content": "This question already has answers here:\n                                \n                            \n\n\n\n\nWhy there are not any disassemblers that can generate re-assemblable asm code?\n\n                                (5 answers)\n                            \n\nClosed 10 years ago.\n\n\n\nI am familiar with debuggers and sorts. I was going through a program and noticed that IDA does make some mistakes on what it decides what on its pseudo code will be.\nIs there a list of common mistakes by IDA and do you think that it would be possible to get something to a compilable source?\nI thought I would test it out on some programs and one thing weird I noticed is that it will do:\n<pre><code>v1 = thiscall();\n</code></pre>\nWhere as in source I just have the <pre><code>thiscall();</code></pre>.\nI also noticed that it bloats a lot of things which is from the assembly itself.\nSo my questions are:\n\nIs there a list of common IDA mistakes ?\nCan once I have worked back fairly close to source will IDA produce a header file ?\nIs it possible to get back to a source that I could at least compile code from?\n\nIts looking like I might be able to providing if I knew the libraries and outline of the program well. Let me know what your thoughts and experiences from using IDA on this subject.\nEdit:\nI found a project that actually did this. All functions are byte for byte in 100% accuracy. So yes my past self, it is indeed possible.\nhttps://github.com/diasurgical/devilution\n",
    "votes": "0",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "disassembly",
        "c++"
    ],
    "user": "LUser",
    "time": "10 years ago",
    "comments": [
        {
            "user": "Rolf Rolles",
            "text": "Regarding your edit, it is possible, but theoretical results show that it's not possible to write an automated tool that does it in all cases. I touched on why in my answer here: reverseengineering.stackexchange.com/questions/311/â€¦\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "You can't get anything back that compiles, or even assembles, without massive manual intervention, and, given the ambiguities in object code, it's very unlikely this situation will ever change.\nSee Why there are not any disassemblers that can generate re-assemblable asm code? for a more detailed answer.\n",
            "votes": "2",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": true,
            "comments": []
        }
    ]
}