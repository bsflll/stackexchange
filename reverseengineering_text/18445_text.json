{
    "title": "help me to understand array?",
    "link": "https://reverseengineering.stackexchange.com/questions/18445/help-me-to-understand-array",
    "content": "Question #1 is the <pre><code>lea edx, [esp+24]</code></pre> start of array  ? and <pre><code>eax, [esp+140]</code></pre> index?\nthen whats <pre><code>add eax, edx</code></pre>  doing here and this source code mean ? can you please explain? \nI am confused about array and indexing an array in assembly. \nhere are few screen shot. Please help me understand how this  array works ? \nhow it indexed and so on.\n",
    "votes": "1",
    "answers": 1,
    "views": "238",
    "tags": [
        "disassembly",
        "assembly"
    ],
    "user": "ReverserT",
    "time": "Jun 6, 2018 at 10:06",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "please spend some time editing this post so it's a bit more polished. Not sure if this link with number 4 at the end of the post is valid or a mistake.\n",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "I'm with Paweł. Please make sure specifically not to include purely screenshots. The first and second screenshot could easily be replaced by a code block, which would aid search engines trying to index our site. The reason I ask you to do it, is because you only have to copy & paste. However, I or anyone else would have to sit down and type down what's seen on the screenshots.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "the first screen shot shows\n<pre><code>cmp al,59h \n</code></pre>\n59h is ==\n<pre><code>C:\\\\>python -c \"print '%c' % 0x59\"\nY\n</code></pre>\nso it should correspond to your if clause (if ch[i] == 'Y')\nthen that means \nthe previous line in your source code is a for loop whose counter variable i is represented by  mov eax , [esp+140] \nit should have been initialized to 0 some where earlier in the block \nedx is the start of the the array (possibly 8 bit size) ch\nit is a pointer   an address like 0x401234 in this line\nassuming 0x401234\nthen the array would be accessd by\n0x401234+0 , +1 , +2 , +3 , +4 ,+5 ..... until the maximum value g (not shown in your screen shot )\nthe movzx line in your screen shot access the underlying variable ch[i] \nor *(byte / char / type *) (0x401234 , ..5 , ..6 ,..7 , --so on until 0x401234+g )\nso the array would be accessed like this (esp+140) would be incremented at the \nend of for loop iteration each time \n<pre><code>0x401234 = 'Y' (edx = 401234 + ( eax = [esp+140] == 0 )) = *(char *)0x401234\n0x401235 = 'Y' (edx = 401234 + ( eax = [esp+140] == 1 )) = *(char *)0x401235\n0x401236 = 'Y' (edx = 401234 + ( eax = [esp+140] == 2 )) = *(char *)0x401236\n..... until 0x401234+g\n</code></pre>\n",
            "votes": "2",
            "user": "blabb",
            "time": "Jun 4, 2018 at 11:50",
            "is_accepted": true,
            "comments": []
        }
    ]
}