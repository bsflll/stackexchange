{
    "title": "Cant hook into native lib with script?",
    "link": "https://reverseengineering.stackexchange.com/questions/27654/cant-hook-into-native-lib-with-script",
    "content": "im doing some practice stuff about hooking android native lib. I wrote this script:\n<pre><code> function processJniOnLoad(libraryName) {\n    const funcSym = \"Java_com_mobisec_gonative_FlagChecker_helloFromTheOtherSide\";\n    const funcPtr = Module.findExportByName(libraryName, funcSym);\n\n    const membase = Module.findBaseAddress(libraryName);\n    console.log(\"Base address is \" + membase);\n    \n    console.log(\"[+] Hooking \" + funcSym + \"() @ \" + funcPtr + \"...\");\n\n    Module.enumerateExports(libraryName, { onMatch: function(e) { console.log(\"type \" + e.type + \" name of function = \" + e.name + \" \" + e.address); }, onComplete: function() { } });\n}\n\nfunction waitForLibLoading(libraryName) {\n    console.log(\"loaded !!\");\n    var isLibLoaded = false;\n\n    Interceptor.attach(Module.findExportByName(null, \"open\"), {\n        onEnter: function (args) {\n            var libraryPath = Memory.readCString(args[0]);\n            console.log(libraryPath);\n            if (libraryPath.includes(libraryName)) {\n                console.log(\"[+] Loading library \" + libraryPath + \"...\");\n                isLibLoaded = true;\n            }\n        },\n        onLeave: function (args) {\n            if (isLibLoaded) {\n                processJniOnLoad(libraryName);\n                isLibLoaded = false;\n            }\n        }\n    });\n}\nwaitForLibLoading(\"libnative-lib.so\");\n</code></pre>\nBut it cant work (base address is null,...), here is the result:\n<pre><code>loaded !!\n/proc/self/cmdline\n/data/app/com.mobisec.gonative-U8SZLMGh96sgK6qTGxmRqQ==/base.apk\n/data/app/com.mobisec.gonative-U8SZLMGh96sgK6qTGxmRqQ==/lib/x86/libnative-lib.so\n[+] Loading library /data/app/com.mobisec.gonative-U8SZLMGh96sgK6qTGxmRqQ==/lib/x86/libnative-lib.so...\nBase address is null\n[+] Hooking Java_com_mobisec_gonative_FlagChecker_helloFromTheOtherSide() @ null...\n</code></pre>\nBut when i do that manually by typing all the command, its work:\n<pre><code>[Google Pixel::com.mobisec.gonative]-> const membase = Module.findBaseAddress(\"libnative-lib.so\");\n[Google Pixel::com.mobisec.gonative]-> console.log(\"Base address is \" + membase);\nBase address is 0xc935a000\n[Google Pixel::com.mobisec.gonative]-> Module.findExportByName(\"libnative-lib.so\",\"Java_com_mobisec_gonative_FlagChecke r_helloFromTheOtherSide\")\n\"0xc935a630\"\n[Google Pixel::com.mobisec.gonative]->\n</code></pre>\nSo Why does my script failed ??\n",
    "votes": "2",
    "answers": 0,
    "views": "122",
    "tags": [
        "android",
        "function-hooking",
        "frida"
    ],
    "user": "Brian MJ",
    "time": "May 12, 2021 at 2:44",
    "comments": [
        {
            "user": "Robert",
            "text": "Please do not add console output as screen-shot. Instead please edit your question and add the console output as preformatted/code.\n",
            "time": null
        },
        {
            "user": "Robert",
            "text": "If I remember correctly <pre><code>open</code></pre> just opens the file as a file stream, therefore in <pre><code>onLeave</code></pre> the library is accessible via it's file-handle but not yet fully loaded in a way that it's loaded and binded. Is it possible that you have mixed up the function <pre><code>open</code></pre> and <pre><code>dlopen</code></pre>?\n",
            "time": null
        },
        {
            "user": "Brian MJ",
            "text": "@Robert I tried dlopen but still cant.\n",
            "time": null
        },
        {
            "user": "Robert",
            "text": "I would try to enumerate the modules just to make sure the loaded library has not a different internal name: github.com/poxyran/misc/blob/master/frida-enumerate-modules.py\n",
            "time": null
        }
    ],
    "answers_data": []
}