{
    "title": "(CTF) Speed up assembly by hooking to an static function",
    "link": "https://reverseengineering.stackexchange.com/questions/20689/ctf-speed-up-assembly-by-hooking-to-an-static-function",
    "content": "For a CTF I have a fairly slow recursive function. I just need to cached the previous results in a dictionary and get them instead. I did it but had to reverse engineer the code. I was wondering if there is a better solution.\nLD_PRELOAD won't work as it is a static binary. If I could copy the assembly and call the function in a C program with asm I could get it done but is there a better solution or a way to patch the binary and create a function that caches the slow one? We could path the binary or use somethings to hook the function call.\n",
    "votes": "1",
    "answers": 1,
    "views": "282",
    "tags": [
        "disassembly",
        "assembly",
        "c"
    ],
    "user": "letFunny",
    "time": "Feb 22, 2019 at 18:06",
    "comments": [],
    "answers_data": [
        {
            "content": "You can definitely edit the binary and implement a new function that handles caching and calls the original function as needed. Then just replace any call to your new cache-implementing function instead. You'll need to be careful when implementing the cache for a recursive function and decide if you wanna cache all intermediate results or only final results.\nIf you're looking for a fast solution, though, you may want to consider using an emulator as a way of running that function's code inside your program. Either using Unicorn, any other emulator or even IDAs app call for function execution.\n",
            "votes": "2",
            "user": "NirIzr",
            "time": "Feb 25, 2019 at 7:04",
            "is_accepted": true,
            "comments": [
                {
                    "user": "letFunny",
                    "text": "<span class=\"comment-copy\">Thank you very much you got me on the right track. The easiest solution was to use Unicorn. I tried a lot and the other reasonable one was frida but I have yet to manage to get it working. This link helped me a lot: <a href=\"http://eternal.red/2018/unicorn-engine-tutorial/\" rel=\"nofollow noreferrer\">http://eternal.red/2018/unicorn-engine-tutorial/</a></span>",
                    "time": null
                },
                {
                    "user": "NirIzr",
                    "text": "<span class=\"comment-copy\">Glad I could help :)</span>",
                    "time": null
                }
            ]
        }
    ]
}