{
    "title": "What is the relation between binary (executable) instructions and execution instruction [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/6365/what-is-the-relation-between-binary-executable-instructions-and-execution-inst",
    "content": "Closed. This question needs details or clarity. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Add details and clarify the problem by editing this post.\n\n\nClosed 10 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nWhat I want to know is that is there any similarity or may be difference between a binary instructions and an execution instruction of a binary ? \nIn other world, in area of malware analysis a binary can be examined in both static and dynamic analysis. In static its instructions will be extracted without executing it while in dynamic the instructions will be extracted during execution of a binary. \nIf I want to clarify my question, I want to examine a binary(every binary even not malware) by comparing outputs of static and dynamic analysis in the fine grained level(instructions). But there are two problem for me! At first is it possible to compare these two outputs and how can I do that(do these two output belong to the same category that make the comparison possible)? As I saw the instructions output of dynamic and static analysis contain lots of instruction(very large output) so I am not sure can I compare them or not? \nand if it possible do I need multipath dynamic analysis to perform precise comparison?\n",
    "votes": "0",
    "answers": 1,
    "views": "137",
    "tags": [
        "disassembly",
        "malware",
        "static-analysis",
        "dynamic-analysis"
    ],
    "user": "user2942756",
    "time": "10 years ago",
    "comments": [
        {
            "user": "Ange",
            "text": "If there is no obfuscation or code generation, then what will be actually dynamically executed was what was statically present in the malware.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Malware executable can be self-modifying or packed. Using dynamic analysis may be a good shortcut to extract really executed code. \nGenerally position independent and not specially modified instructions should be exactly the same.\nAddresses of functions can be different because of ASLR or as a result of loader actions.\n",
            "votes": "1",
            "user": "w s",
            "time": "Oct 2, 2014 at 15:30",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user2942756",
                    "text": "<span class=\"comment-copy\">Thanks. So if I assume a malware or a sample binary does not include any packer, obfuscation and so on, how can I compare these two output together and find similarities? Also should I perform multi path analysis for dynamic??</span>",
                    "time": null
                }
            ]
        }
    ]
}