{
    "title": "Check if binary was compiled with security checks (/GS)",
    "link": "https://reverseengineering.stackexchange.com/questions/6708/check-if-binary-was-compiled-with-security-checks-gs",
    "content": "I have to check massive amount of binaries whether they were compiled with the <pre><code>/GS</code></pre> option. I assume a good indicator would be to check if they have stack cookie or not. Do you know any tool that can do this, or any tool that I could build into a script, so I don't have to do it manually?\nEdit\nFound Binscope, I'll check if it's capable to check more binaries at the same time or it's scriptable.\nEdit2\nIt requires debug symbols, so this is not a solution.\nEdit3\nhttps://github.com/NetSPI/PEchecker\n",
    "votes": "3",
    "answers": 1,
    "views": "3k",
    "tags": [
        "windows",
        "tools",
        "binary-analysis",
        "software-security",
        "stack-variables"
    ],
    "user": "Dominik Antal",
    "time": "Apr 23, 2015 at 15:31",
    "comments": [
        {
            "user": "Jason Geffner",
            "text": "Do you have the private debug symbols (.pdb) for the binaries? If not, BinScope won't help.\n",
            "time": null
        },
        {
            "user": "Dominik Antal",
            "text": "I noticed it. I just checked it and it fails.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "you can check the <pre><code>IMAGE_LOAD_CONFIG_DIRECTORY</code></pre> structure, it has a field for the pointer to <pre><code>SecurityCookie</code></pre>'s value in the image.\nIn very old binaries, this structure might be not used, or <pre><code>SecurityCookie</code></pre> RVA is 0 even though the binary may be using <pre><code>/GS</code></pre>. In such case you can scan for the characteristic code signature of the <pre><code>@__security_check_cookie@4</code></pre> function:\n<pre><code>3B0D........7501C3E9 (VC7)  \n3B0D........0F85........C3 (VC7?)  \n3B0D........7502F3C3E9 (VC8+)\n</code></pre>\nyou can also scan for the initial cookie value (<pre><code>BB40E64E</code></pre>) in the binary. Though I guess this might produce some false positives.\n",
            "votes": "5",
            "user": "perror",
            "time": "Nov 24, 2014 at 22:11",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">You can also search for byte string <code>68 09 04 00 C0</code>, which is <code>push 0xC0000409</code> (<code>push STATUS_STACK_BUFFER_OVERRUN</code>), used by library function <code>__report_gsfailure</code>. However, as with @igor-skochinsky's third suggestion above, this may cause FPs, so best to use in conjunction with @igor-skochinsky's other suggestions too.</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@JasonGeffner: an old VC7 binary I have here doesn't have that byte sequence - it doesn't raise the exception but only shows a fatal messagebox.</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">OK, my comment above may cause FPs <i>and</i> FNs ;)</span>",
                    "time": null
                }
            ]
        }
    ]
}