{
    "title": "How to find status and path of the specific module with C in the windows? [duplicate]",
    "link": "https://reverseengineering.stackexchange.com/questions/8826/how-to-find-status-and-path-of-the-specific-module-with-c-in-the-windows",
    "content": "This question already has an answer here:\n                                \n                            \n\n\n\n\n/proc/self/maps equivalent on windows\n\n                                (1 answer)\n                            \n\nClosed 9 years ago.\n\n\n\nHow to find status and path of the specific module with C in the windows?\nsuch as windbg lm (list loaded module)\n<pre><code>kd> lm m cdd\nstart    end       module   name\n93ae0000 93afe000  cdd          (deferred)\n</code></pre>\nI need start of module(.sys) but on C code\nthanks\n",
    "votes": "1",
    "answers": 1,
    "views": "581",
    "tags": [
        "debugging",
        "c",
        "windbg",
        "kernel-mode",
        "driver"
    ],
    "user": "forbiddenhi",
    "time": "9 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "<pre><code>VirtualQueryEx()</code></pre> is the way to go if you want a memory map of a target process.\nHowever, if you want information about modules only, you can extract it from the PEB of the target process.\nGet the PEB address using <pre><code>NtQueryInformationProcess</code></pre>, using <pre><code>ProcessBasicInformation</code></pre> for the <pre><code>ProcessInformationClass</code></pre>, so it writes a <pre><code>PROCESS_BASIC_INFORMATION</code></pre>. This structure has a <pre><code>PebBaseAddress</code></pre> field that gives you the PEB address.\nUsing this PEB address, access to the <pre><code>PPEB_LDR_DATA Ldr</code></pre> field, it contains a list named <pre><code>InMemoryOrderModuleList</code></pre> that you can use to iterate through all the modules of the process.\nHere is a demonstration of that technique.\nOutput :\n<pre><code>modules.exe    : 0x00400000 -> 0x00422fff (C:\\Users\\Spl3en\\Desktop\\modules.exe)\nntdll.dll      : 0x81d20000 -> 0x81ec8fff (C:\\Windows\\SYSTEM32\ntdll.dll)\nKERNEL32.DLL   : 0x7f660000 -> 0x7f798fff (C:\\Windows\\system32\\KERNEL32.DLL)\nKERNELBASE.dll : 0x7f450000 -> 0x7f55dfff (C:\\Windows\\system32\\KERNELBASE.dll)\nmsvcrt.dll     : 0x7f970000 -> 0x7fa16fff (C:\\Windows\\system32\\msvcrt.dll)\n</code></pre>\n",
            "votes": "5",
            "user": "Spl3en",
            "time": "May 9, 2015 at 10:10",
            "is_accepted": false,
            "comments": [
                {
                    "user": "forbiddenhi",
                    "text": "<span class=\"comment-copy\">I need this information for .sys file</span>",
                    "time": null
                },
                {
                    "user": "Spl3en",
                    "text": "<span class=\"comment-copy\">@forbiddenhi that's almost the same, even simplier ! Use <code>SystemModuleInformation</code> in <code>ZwQuerySystemInformation</code>. Take a look here if you want an implementation : <a href=\"https://github.com/zer0box/zer0m0n/blob/master/src/driver/module.c#L89\" rel=\"nofollow noreferrer\">github.com/zer0box/zer0m0n/blob/master/src/driver/module.c#L89</a></span>",
                    "time": null
                }
            ]
        }
    ]
}