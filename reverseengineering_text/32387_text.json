{
    "title": "How to get the byte offset of a type casted pointer in IDA PRO",
    "link": "https://reverseengineering.stackexchange.com/questions/32387/how-to-get-the-byte-offset-of-a-type-casted-pointer-in-ida-pro",
    "content": "<pre><code>  v6 = v5 + 0x3E;\n  if ( v5 + 0x1F >= 0 )\n    v6 = v5 + 0x1F;\n  v7 = abs32(*(_DWORD *)(buf_14 + 8)) * 4 * (v6 >> 5);\n</code></pre>\nI want to get the byte offset pointer pointing at.\nIs there any way to get following result?\n<pre><code>v7 = abs32(*(_DWORD *)((int64_t)buf_14+32)) * 4 * (v6 >> 5);\n</code></pre>\n",
    "votes": "0",
    "answers": 0,
    "views": "58",
    "tags": [
        "ida",
        "hexrays"
    ],
    "user": "msh",
    "time": "Oct 12, 2023 at 17:17",
    "comments": [
        {
            "user": "Ali Rizvi-Santiago",
            "text": "In what context? Are you asking about how to script extracting the same expression across multiple functions that have been decompiled? Or are you literally wanting the evaluated result of that expression using information discerned during runtime?\n",
            "time": null
        },
        {
            "user": "msh",
            "text": "Both of them. I want to know any ways to get the offset of a structure in a decompiled.\n",
            "time": null
        },
        {
            "user": "Ali Rizvi-Santiago",
            "text": "Heh. So, both.. but, any? Well, the easiest way would be combination of disassembler and debugger. Use the disassembler to find the instruction that assigns the result to \"v7\", open up a debugger, set a breakpoint on that instruction, and then execute until the breakpoint and view its value. That should give you the evaluated result of that expression using information discerned during runtime. You can also hover over \"v7\" to distinguish whether \"v7\" is being stored in a register or a region. Subtract that value from the address of \"buf_14\" if you want an \"offset\" relative to \"buf_14\"...\n",
            "time": null
        },
        {
            "user": "msh",
            "text": "Thank you. It helped me a lot\n",
            "time": null
        }
    ],
    "answers_data": []
}