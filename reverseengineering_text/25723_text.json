{
    "title": "what means \"ilegal use of registers\"?",
    "link": "https://reverseengineering.stackexchange.com/questions/25723/what-means-ilegal-use-of-registers",
    "content": "I read pe program using a Pe Reader to view all sections, the .text section starts is \"<pre><code>0x0001000</code></pre>\":\nWhat is in the pe program reader:\n\nAnd is this what i see on the debugguer :\n",
    "votes": "0",
    "answers": 1,
    "views": "174",
    "tags": [
        "assembly",
        "ollydbg",
        "disassemblers",
        "decompile",
        "immunity-debugger"
    ],
    "user": "Loliconaoquadrado",
    "time": "Aug 22, 2020 at 16:37",
    "comments": [],
    "answers_data": [
        {
            "content": "As you can see here, <pre><code>0xFF</code></pre> is a “jump far indirect” opcode and this version of jump requires operand to be a memory address.\nWhile using this type of jump, you cannot use register as an operand and hence the error message you see.\nAnd I don’t think the snippet you provided contains the actual code - it rather looks like data, though OllyDbg still tries to disassemble it.\nYou will find the code at offset <pre><code>0x1000</code></pre> relative to the image base which will likely be <pre><code>0x400000</code></pre> in case of exe and <pre><code>0x10000000</code></pre> in case of dll.\n",
            "votes": "1",
            "user": "bart1e",
            "time": "Aug 22, 2020 at 21:59",
            "is_accepted": true,
            "comments": []
        }
    ]
}