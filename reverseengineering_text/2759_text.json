{
    "title": "Decompile \"Internal Call\"",
    "link": "https://reverseengineering.stackexchange.com/questions/2759/decompile-internal-call",
    "content": "I have a .NET method which is marked as an \"Internal Call\", meaning that it is implemented within the CLR itself. Is there any way to locate the code for and/or decompile such a method?\n",
    "votes": "9",
    "answers": 1,
    "views": "976",
    "tags": [
        "decompilation",
        ".net"
    ],
    "user": "Levi Botelho",
    "time": "Sep 6, 2013 at 15:15",
    "comments": [
        {
            "user": "Stolas",
            "text": "You can just read the CLR, it is almost the same as Assembly. But you can give ILSpy a try. Not sure if it will work but give it a go.\n",
            "time": null
        },
        {
            "user": "wilson0x4d",
            "text": "ILSpy will not work on internal calls, they are native methods.\n",
            "time": null
        },
        {
            "user": "Dominik Antal",
            "text": "I might have misinterpreted your question, but you can browse trough the source of .NET, search on Stackoverflow. (also dotnetframework.org)\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "If you use the windbg sos extension you can step into the internal calls - which are unmanaged code. The documentation for using sos is a bit tricky to sort out IMO. This link is helpful for learning the sos commands: http://msdn.microsoft.com/en-us/library/bb190764(v=vs.110).aspx. To load SOS I use:\n<pre><code>.loadby sos clr ; for .NET 4 and higher\n.loadby sos mscorwks ; for .NET 2\n</code></pre>\nHowever you have to wait until the .NET DLLs have been loaded before those commands work, so you either have to set a breakpoint or make sure the managed code has some kind of wait (for input or something else) to allow the process to load the .NET DLLs.\n",
            "votes": "3",
            "user": "user2460798",
            "time": "Jan 3, 2014 at 8:47",
            "is_accepted": true,
            "comments": []
        }
    ]
}