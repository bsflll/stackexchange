{
    "title": "Intercepting arguments exchanged (iOS / Objective-C)",
    "link": "https://reverseengineering.stackexchange.com/questions/29868/intercepting-arguments-exchanged-ios-objective-c",
    "content": "Just getting started learning reverse engineering and Frida\nPoking around with AirDrop (sharingd daemon)\nI have managed to find out from hooking onto the sharingd daemon, that the class SDAirDropController is \"in charge\" of the AirDrop settings, eg. when you turn \"No One\" to \"Everyone\" or \"Contacts Only\" in the AirDrop menu, SDAirDropController's methods get invoked\n(I also manage to backtrace that SDNetworkOperation setProperty, SharingDaemon handleOperationMessage, SharingDaemon handleNewConnection etc calls/invoke SDAirDropController's setProperty method)\nQuestion:\nHow do I hook and intercept the methods being called or invokve to view the variable/arguments exchanged?\nI manage to hook the SDAirDropController class with the following Frida script, and throwing the class and method to see if I can intercept:\n<pre><code>function show_modify_function_return_value(className_arg, funcName_arg) {\n    var className = className_arg;\n    var funcName = funcName_arg;\n    var hook = eval('ObjC.classes.' + className + '[\"' + funcName + '\"]');\n    Interceptor.attach(hook.implementation, {\n        onLeave: function(retval) {\n            console.log(\"\n[*] Class Name: \" + className);\n            console.log(\"[*] Method Name: \" + funcName);\n            console.log(\"\\t[-] Type of return value: \" + typeof retval);\n            console.log(\"\\t[-] Return Value: \" + retval);\n            console.log(\"\\t[-] True Value: \" + retval.value);\n        }\n    });\n}\n</code></pre>\nCHANGES AIRDROP SETTINGS TO \"EVERYONE\"\n<pre><code>[*] Class Name: SDAirDropController\n[*] Method Name: - configureSettingsForAirDrop\n    [-] Type of return value: object\n    [-] Return Value: 0x125f5a480\n    [-] True Value: undefined\n\n[*] Class Name: SDAirDropController\n[*] Method Name: - setStatusAndNotify\n    [-] Type of return value: object\n    [-] Return Value: 0x1ce5e9f40\n    [-] True Value: undefined\n\n[*] Class Name: SDAirDropController\n[*] Method Name: - somethingChanged:\n    [-] Type of return value: object\n    [-] Return Value: 0x1ce5e9f40\n    [-] True Value: undefined\n\n[*] Class Name: SDAirDropController\n[*] Method Name: - setProperty:forKey:\n    [-] Type of return value: object\n    [-] Return Value: 0x125db7100\n    [-] True Value: undefined\n</code></pre>\nI see the return values are pointers, is there a way I can get them to print out arguments/variables exchanged instead?\nI'm currently using Frida, do let me know if there are other tools that allows me to arguments/variables exchanged too\nThanks in advance!\n",
    "votes": "3",
    "answers": 0,
    "views": "766",
    "tags": [
        "frida"
    ],
    "user": "encodeShoe",
    "time": "Jan 13, 2022 at 15:25",
    "comments": [
        {
            "user": "Robert",
            "text": "If the return value is an ObjC type you can cast it <pre><code>new ObjC(retval)</code></pre>.\n",
            "time": null
        },
        {
            "user": "encodeShoe",
            "text": "Do I do something like var newClassObject = new ObjC(retval); console.log(newClassObject ); but I got: TypeError: not a constructor; ps am very new to this\n",
            "time": null
        },
        {
            "user": "Robert",
            "text": "First you need one individual hook per method, not one Universal hook for all. Then check the documentation of each method what they return and if it is an ObjC class at all.\n",
            "time": null
        }
    ],
    "answers_data": []
}