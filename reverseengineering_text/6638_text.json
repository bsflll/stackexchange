{
    "title": "Disassemble the Decompression method (PowerPC ASM)",
    "link": "https://reverseengineering.stackexchange.com/questions/6638/disassemble-the-decompression-method-powerpc-asm",
    "content": "Continues from Unknown game data compression method (Gamecube)\nI have compression data which was start with: [ * SK_ASC* ] and unknown compression method.The list below compression method that I tested, but doesn't match:\n\nLZ10\nLZ11\nLZ77\nLZO1x-1\nLZO1x-999\nLZSS\nLZW\nLZMA\nHUFF blocksize 4 & 8 byte\nRLE\nZLIB\n\nResearching for 2 weeks, I knew that compression algorithms is slightly modified, better than zlib/gzip.\nIt maybe xored or encrypted so it doesn't match with regular one.\nFinally, I've found decompression subroutine from main executive file via IDA Pro.\nSubroutine & example uploaded here: http://goo.gl/2bQNfj (PowerPC Architecture Assembly skill required)\nI have no idea what It mean because I'm not well in PPC disassemble.\nCould anyone help found out what the code mean? Could you describe it as C Language or other readable language?\n\nP.S. I already posted several forum to help. \n\nhttp:// zenhax.com/viewtopic.php?f=9&t=313&sid=3172c154c5da95476795ac742501fec1\nhttp:// encode.ru/threads/2074-Identifying-compression-method\n",
    "votes": "2",
    "answers": 2,
    "views": "1k",
    "tags": [
        "disassembly",
        "decompress",
        "powerpc"
    ],
    "user": "NGC_KOR",
    "time": "Nov 15, 2014 at 7:17",
    "comments": [],
    "answers_data": [
        {
            "content": "You can try to use retargetable decompiler with your code.\n",
            "votes": "1",
            "user": "w s",
            "time": "Nov 15, 2014 at 8:58",
            "is_accepted": true,
            "comments": [
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">I tried to do that, but full decompilation takes more than allowed 5 minutes. You have 2 options: 1 - register on the site, it will give you 10 minutes instead of 5 for decompilation 2 - you can follow instructions from Guntram Blohm's answer.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "Based on w s 's answer, do the following:\nExtract the decompression function from the binary. (On Linux, use <pre><code>dd if=Start.dol bs=1 skip=1292664 count=7364 of=decomp.ppc</code></pre>).\nSet the retargetable decompiler to raw machine code, <pre><code>decomp.ppc</code></pre>, file format doesn't matter, power pc, big endian, section address and entry point addess = <pre><code>0x8013FC58</code></pre>.\nWith these parameters, you'll get your code decompiled. The result isn't exactly what i'd call readable, though.\nYou'll still have the problem that the code calls some more functions that aren't in the snipped file, but you can probably handle them in the same way.\n",
            "votes": "2",
            "user": "Guntram Blohm",
            "time": "Nov 16, 2014 at 8:04",
            "is_accepted": false,
            "comments": []
        }
    ]
}