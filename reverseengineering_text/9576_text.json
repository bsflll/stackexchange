{
    "title": "How to dump PHP backtrace on live running script in lldb?",
    "link": "https://reverseengineering.stackexchange.com/questions/9576/how-to-dump-php-backtrace-on-live-running-script-in-lldb",
    "content": "I'm trying to print PHP backtrace of the live running script using the following 2 simple steps:\n\nRun PHP script as:\n<pre><code>php -r \"sleep(1000);\"\n</code></pre>\nOn another console, I've called directly <pre><code>zif_debug_backtrace()</code></pre> from <pre><code>lldb</code></pre>:\n<pre><code>echo 'call (void)zif_debug_backtrace()' | lldb -p $(pgrep -fn php)\n</code></pre>\n\nAbove worked, however the process stopped with the following warning:\n<pre><code>Warning: sleep() expects at most 2 parameters, 1606408648 given in Command line code on line 1\nCall Stack:\n    0.0016     235152   1. {main}() Command line code:0\n    0.0021     235248   2. sleep(1000) Command line code:1\n</code></pre>\nWhy the script stopped and how to prevent that? Is it possible to print PHP backtrace during live run without affecting the script?\nIs it because I should specify some return address? If so, which one?\nBtw. The same happening when calling <pre><code>zif_debug_print_backtrace()</code></pre> and when calling <pre><code>custom_backtrace()</code></pre> it is showing: <pre><code>Backtrace null function called</code></pre>. I'm using <pre><code>xdebug</code></pre> if that change anything.\nMaybe I need to call a different function like <pre><code>zend_fetch_debug_backtrace</code></pre> (see: <pre><code>image dump symtab</code></pre>)? Or use the right arguments, if so, which one?\nI'm interested either in <pre><code>lldb</code></pre> or <pre><code>gdb</code></pre> solutions.\n",
    "votes": "1",
    "answers": 0,
    "views": "218",
    "tags": [
        "debugging",
        "gdb",
        "callstack",
        "lldb",
        "php"
    ],
    "user": "kenorb",
    "time": "Aug 7, 2015 at 19:36",
    "comments": [],
    "answers_data": []
}