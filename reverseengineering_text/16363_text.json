{
    "title": "What does adding 4.294967296e9 to a double do?",
    "link": "https://reverseengineering.stackexchange.com/questions/16363/what-does-adding-4-294967296e9-to-a-double-do",
    "content": "I'm reverse engineering an application which commonly adds <pre><code>4.294967296e9</code></pre> to a double if the number is negative. Part of the disassembly:\n<pre><code>mov     eax, label_to_memory\nfild    label_to_memory\ntest    eax, eax\njge     short some_label\nfadd    ds:some_double_value\nsome_label:\n</code></pre>\nIf I'm correct, it takes the jump if the highest bit isn't set, i.e. its a positive number. <pre><code>some_double_value</code></pre> points to the constant <pre><code>4.294967296e9</code></pre>.\nTo understand what the piece of code is doing I need to know why it adds this specific number, the only piece of Information I found was a line of code in http://web.mit.edu/~mkgray/afs/bar/afs/net/project/attic/quipu/isode-8.0/others/ntp/ntpsubs.c which says \n<pre><code>#ifdef  VAX_COMPILER_FLT_BUG\n    if (b < 0.0) b += 4.294967296e9;\n#endif\n</code></pre>\nSo, what is the significance of that number?\nAdditional Info: The number can not be negative, so this can actually never happen.\n",
    "votes": "4",
    "answers": 1,
    "views": "626",
    "tags": [
        "disassembly",
        "float"
    ],
    "user": "tkausl",
    "time": "Sep 17, 2017 at 22:21",
    "comments": [],
    "answers_data": [
        {
            "content": "I actually found the answer while writing this question!\nThis number is exactly <pre><code>UINT_MAX + 1</code></pre>, stored as a double. So it seems this code converts a unsigned integer to a double. The <pre><code>fild</code></pre> instruction loads the 32 bit value as signed value, after adding the max possible unsigned value + 1, the double contains the same value as the unsigned integer.\nSo the compiler produced this probably automatically from something like this:\n<pre><code>unsigned int num; // some arbitrary 32 bit unsigned number\ndouble d = num;\n</code></pre>\nSince it took me some time to figure it out, I thought it may help someone else find the solution faster than me.\n",
            "votes": "10",
            "user": "tkausl",
            "time": "Sep 17, 2017 at 22:20",
            "is_accepted": false,
            "comments": []
        }
    ]
}