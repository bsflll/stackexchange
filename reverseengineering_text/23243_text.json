{
    "title": "Can a secondary UART be used to access the MCU?",
    "link": "https://reverseengineering.stackexchange.com/questions/23243/can-a-secondary-uart-be-used-to-access-the-mcu",
    "content": "I have a gamepad with a Chinese ShanWan BM-729 SWQP179 22 MCU which is most likely a clone but i didn't manage to find any info on it.\nThe board is also lacking information like serial pins and the only, i've also tried the EEPROM which returned random characters (translated from chinese characters).\nI've ran through the PCB and was not able to find any decent pins i could use to access the MCU other than a UART connection between the MCU and the bluetooth chip, so i was wondering if it would be possible to get info from the MCU through this serial pins?\nI'm posting the picture for perspective\n",
    "votes": "1",
    "answers": 2,
    "views": "1k",
    "tags": [
        "firmware",
        "hardware",
        "embedded",
        "serial-communication"
    ],
    "user": "Terramoto",
    "time": "Feb 13, 2020 at 18:51",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "does the device list an FCC ID?\n",
            "time": null
        },
        {
            "user": "Terramoto",
            "text": "@IgorSkochinsky i'm afraid not, i found similar ones but i believe the MCU will be different.\n",
            "time": null
        },
        {
            "user": "yojan",
            "text": "hiiiiii, helppppp, can you get my the drivers of that controller??, like \"backup drivers\" from \"Driver Easy Program\" plsssss, i have a problem with the drivers of a chinese controller, and need exactly drivers of that thing (BM-829 (5028B) VER1.2\") plsss pls plssss, can you DM me on twitter (\"@twitter.com/johanestaenuso\") or facebook (\"JohanEsta EnUso\") or here, pls pls pls, really need it :(((\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I see the following possibilities:\n\nintercept Bluetooth communication and inject bogus packets to crash the CPU firmware and hopefully achieve code execution. This is very difficult to do blindly though since you have only this UART and no other means of observation what happens inside. \nthere may be a strap pin that forces the chip to go into bootloader mode on startup which then may support commands for reading the flash or uploading code into RAM. Again, this is difficult without any documentation. \nthere may be JTAG pins or another diagnostic UART. Itâ€™s quite unlikely IMO that the board has no diagnostic options at all  so try to trace where every pin of the CPU goes and see if you can discover a group of test pads.\n",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Feb 15, 2020 at 12:12",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "When you mention trying the EEPROM, is that IC5? It looks very much like a SPI flash IC. I would see about dumping the flash contents from it if that is not what you meant. Test which pins are VDD and VSS with a DMM, then see if you can find some datasheets for SOIC8 flash ICs that have the same power and ground pins. A Raspberry Pi is great for dumping spi flash content.\nCan you link to the EEPROM Dump?\n",
            "votes": "0",
            "user": "AltxF4",
            "time": "Jun 4, 2021 at 6:15",
            "is_accepted": false,
            "comments": []
        }
    ]
}