{
    "title": "IDA Pro .til files backward compatibility",
    "link": "https://reverseengineering.stackexchange.com/questions/13001/ida-pro-til-files-backward-compatibility",
    "content": "I read in the IDA Pro Book that \n\nyou may use <pre><code>till.exe</code></pre> to parse header files and create standalone <pre><code>.til</code></pre>\n  files which can be made globally available by copying them into\n  <pre><code><IDADIR>/til</code></pre>.\n  This is all well and good when you happen to have access to source code that you then allow IDA (or <pre><code>till.exe</code></pre>) to parse.\n\nNow I was wondering what would happen if the header file is from a library version older than the one used by the target binary (or vice versa). The closest I could find was this SO answer:\n\nIf the ABI in the exported functions don't change you should be able\n  to get away with using an older DLL with a program linked against a\n  newer .lib, as long as the program isn't using a new export that are\n  in the new .lib but not in the older DLL.\nThings which affect the ABI (I'm not claiming this is a comprehensive\n  list):\n\ncalling convention\nexport name\nparameter list (including types)\n\n\nDoes anyone have experience with using <pre><code>.til</code></pre> files although the version does not exactly match? In the best case, I guess, the <pre><code>.til</code></pre> file should work fine. But what could happen in the worst case, i.e. if any of the above mentioned three things change?\nIs there any chance I can detect when the application of a slightly wrong <pre><code>.til</code></pre> file causes problems?\n",
    "votes": "2",
    "answers": 0,
    "views": "425",
    "tags": [
        "ida",
        "c",
        "calling-conventions",
        "interoperability"
    ],
    "user": "langlauf.io",
    "time": "May 23, 2017 at 12:37",
    "comments": [],
    "answers_data": []
}