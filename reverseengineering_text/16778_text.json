{
    "title": "How to change the strings in rdata section of a executable file?",
    "link": "https://reverseengineering.stackexchange.com/questions/16778/how-to-change-the-strings-in-rdata-section-of-a-executable-file",
    "content": "I'm a programmer and have an application (an executable file that maybe compiled from a c++ source). \nIt has an <pre><code>rdata</code></pre> section (read-only data section) that include many (several thousand) strings of the user interface of the application and I want change these strings so that after the changes, the corresponding executable file can be executed without any errors (the source is not available).\n\nThe app has 32 and 64 bit versions.\nI have to change strings in the <pre><code>rdata</code></pre> section without damaging the executable file.\nFor example changing the highlighted section:\n\n\nIs it possible?\nWhat are the correct steps and best tools too change these strings and make a new <pre><code>exe</code></pre> file?\n\nPlease guid my with tools and additional links to tutorials if it is possible in your answer and comments.\n\nUpdate: \nNew strings are in a different language and have different lengths with the length of the main strings and i should change many string in the <pre><code>rdata</code></pre>.\nPlatform: Windows 8.1\n",
    "votes": "3",
    "answers": 1,
    "views": "3k",
    "tags": [
        "windows",
        "unpacking",
        "executable",
        "exe"
    ],
    "user": "Ramin Bateni",
    "time": "Nov 18, 2017 at 22:48",
    "comments": [
        {
            "user": "blabb",
            "text": "if they are resources try reshacker by angus johnson\n",
            "time": null
        },
        {
            "user": "Ramin Bateni",
            "text": "@blabb, I'm familiar with changing the resources of executable files but as I said these strings are not resource and some application like resource hacker dose not show them. They are inside the <pre><code>rdata</code></pre> section and I have to change <pre><code>rdata</code></pre> without damaging the executable file. I'm finding correct steps and useful tools to do it.\n",
            "time": null
        },
        {
            "user": "sudhackar",
            "text": "For same length strings you can directly patch from a hex editor such as ghex in Ubuntu. For shorter strings pad with \\x00 to the same length.\n",
            "time": null
        },
        {
            "user": "Ramin Bateni",
            "text": "@blabb, I updated the question with some images and... Please read it.\n",
            "time": null
        },
        {
            "user": "Ramin Bateni",
            "text": "@sudhackar, Thank you for your reply. My platform is <pre><code>Windows</code></pre> and the new strings are in a different language with different length.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "it is a tough and tedious task and completely error prone \nassuming you have this code compiled and executed the first string will have a 68 push opcode and the second string will have a FF35 push opcode and the strings would be in .rdata section\n<pre><code>#include <windows.h>\nconst char mystr1[] = \"mystr1\";\nconst char *mystr2 = \"mystr2\";\nvoid main(void) {\n    MessageBoxA(0,mystr2,mystr1,0);\n}\n</code></pre>\nas seen below \n<pre><code>|           0x00401000      6a00           push 0 \n|           0x00401002      6810204000     push str.mystr1  \n|           0x00401007      ff3500304000   push dword [0x403000]\n|           0x0040100d      6a00           push 0\n|           0x0040100f      ff1500204000   call dword [sym.imp.USER32.dll_MessageBoxA]\n|           0x00401015      33c0           xor eax, eax\n\\           0x00401017      c3             ret\n</code></pre>\nchecking the strings \n<pre><code>[0x00401000]> ps @0x402010\nmystr1\n[0x00401000]> pv @0x403000\n0x00402018\n[0x00401000]> ps @0x402018\nmystr2\n</code></pre>\nyou can use some tools like CFF_Explorer iidking etc to add a section \nradare2 also adds a section but i couldn't coax it to write back the section\ndetails back to pe header  \n<pre><code>Comparing files rdata.exe and RDATA1.EXE\n000000C6: 04 05\n00000111: 50 60\n000001C0: 1E 00\n000001C1: 00 10\n000001E8: C2 00\n000001E9: 01 10\n00000210: 04 00\n00000211: 00 10\n00000238: 1C 00\n00000239: 00 10\n00000258: 00 2E\n00000259: 00 6A\n0000025A: 00 73\n0000025B: 00 74\n00000260: 00 80\n00000265: 00 50\n00000269: 00 02\n0000026D: 00 0C\n0000027F: 00 40\n00000800: 18 00\n00000801: 20 50\nFC: RDATA1.EXE longer than rdata.exe\n</code></pre>\nthe new string at the new section as follows\n<pre><code>:\\>xxd -s 0xc00 -l 0x60 rdata1.exe\n0000c00: 8341 838a 8347 838b 82f0 8e67 82c1 82c4  .A...G.....g....\n0000c10: 8376 838d 8379 838d 82c9 82e6 82c1 82c4  .v...y..........\n0000c20: 9755 9866 82b3 82ea 82bd 9792 82cd 8141  .U.f...........A\n0000c30: 837e 8389 8393 835f 82aa 88a4 82f0 91cc  .~....._........\n0000c40: 8cb1 82c5 82ab 82e9 82e6 82a4 82c9 82b7  ................\n0000c50: 82e9 0000 0000 0000 0000 0000 0000 0000  ................\n</code></pre>\nthe modification at 0x800 , 0x801 in diff above is redirection to this string \nnow if you execute this you will get gibberish \nyou may either need to set the System Locale or need the now discontinued app like applocale.applet with appcompat shim database to hook and hack the Unicode characters \ndo it if it is your cup of tea :) (try translating the messagebox message for a refresher )\n",
            "votes": "3",
            "user": "blabb",
            "time": "Nov 20, 2017 at 22:23",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Abr001am",
                    "text": "<span class=\"comment-copy\">did you use nul character in string ? and have you checked out it's ascii coded ?</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">@idle sorry i am not able to understand your comment</span>",
                    "time": null
                },
                {
                    "user": "Abr001am",
                    "text": "<span class=\"comment-copy\">It's because the string formatting doesn't look ascii at all, more like UTF-16.</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">@idle i have never mentioned ascii in my demo i say unicode  or rather a wide char array of letters in a non english language</span>",
                    "time": null
                }
            ]
        }
    ]
}