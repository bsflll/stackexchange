{
    "title": "Need help with this .tbl file",
    "link": "https://reverseengineering.stackexchange.com/questions/30212/need-help-with-this-tbl-file",
    "content": "I don't know if it's encrypted, but I tried changing encoding to latin1, but no avail, some text are still not clear, file looks to be like a csv table. Plus, it has a FTABLE as a header, I don't know what that means. Any insight will be very much appreciated.\nThe file starts with <pre><code>FTABLE</code></pre>, several null bytes and then:\n<pre><code>46 54 41 42 4C 45 00 00 00 00 10 00 4A 02 00 00\n08 00 00 00 20 02 00 00 48 0B 00 00 51 0B 00 00\n22 00 00 00 25 59 00 00 00 00 00 00 43 52 45 41\n</code></pre>\n... <pre><code>CREA</code></pre> (43 52 45 41) which in text form continues to form the <pre><code>CREATE TABLE</code></pre> statement:\n<pre><code>CREATE TABLE `c_animationdata` (\n  `anim_id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `anim_name` varchar(45) NOT NULL,\n  `loop` int(10) NOT NULL DEFAULT '0',\n  `weapon_state` int(10) unsigned NOT NULL,\n  `freeze_start_time` int(10) NOT NULL DEFAULT '0',\n  `blend_time` int(10) unsigned NOT NULL DEFAULT '150',\n  `play_speed` float NOT NULL DEFAULT '100',\n  `combination` int(10) unsigned NOT NULL DEFAULT '1',\n  PRIMARY KEY (`anim_id`)\n) ENGINE=InnoDB AUTO_INCREMENT=827 DEFAULT CHARSET=latin1\n</code></pre>\nThe full file Base64-encoded (uncompress using <pre><code>xz</code></pre> after decoding it):\n<pre><code>begin-base64 644 c_animationdata.tbl.xz\n/Td6WFoAAATm1rRGAgAhARwAAAAQz1jM4IYuFIZdACMVBCRqxP7AP7DYMNKv\n+priYvrUF0RJFIEKTSgETLqh8twrgPNFTD2VV9vWu46bHLZGQ0DRzVwnP1Yv\nzmroSotmvQ3MFfRAVOEcVEZKHG8+vjTOB4KyVTqDZEuaxHM4xJ9rWYr1mtvt\npB8f72ZKf4EAnRheyqWPReE0fBgT6pZINx0JVToAEYM/YNQD6vFL52GJzdFe\nu2Iq9UXHqDRbxnt9X7CM3h9njEB6CLTd6Fx46fAAlRa89gKUuOPZIZ1Roz7C\nHPZkAWz2NCR8Oil3L1D+iFOXEUeSpJxCcsucFpmOmt22yNEOXiPFjL7J6Uod\n818njAnOnDrzh0ID7H7JR0rhDpUZvXvrHTllfo7u4wubrnr8RkYPIVi5hNqL\nDNO1itLM2u3OZiGMb+5tuxy7BqgwjgtGVMh71L0JKp9/Ppezyt5XW4mAiTTz\nBvoZKLjIxfEg/nqDkBuDr3iHDpl5BLaP/mYXYWelialaydl4kQC5g3QHFkxd\n5pw/ufhT2Z7tMpwZLTfQBpgTuoygVqs3ZY4MlMYKeGDjV2VOjZsBXaYWWgGC\nFXeEEkMk5YWuzp8d/o48nOHuVuLau35iZAYDol+W7QnObl9S6+pghFC95+U1\np/HZtYHCi0vb+ahM9AYKy8/PRdQqpnEYLQWmx9K3o+G3YsgNTo4qextAremQ\nMXhWF8RBHSJwLHoT5E8gWySWgGF4SiVzODjRysymFILLMvDWL0LbzcLAZ+KU\nEsReFZIVJCwwkmgdOjNBmKsYwas9D+cs5TH3P73DtAFJWp8knCiVzXHP9khr\nAY5Gy/05yr9y3pv6vWFDL+EkW4kFasS+ejrGDQSsWd+kISiFwY5bQweeMLnm\nAdi2HTwgBL6gykRJGfhyeElHWhRQn+aYXKfJeZKyg6WxomDAYyI9uaCPIdPh\n5QSTz5aOrBD3swC+5cj40OW7w2H6DLs1p1O6E6P5hXyTbha0J+wO3dS47G3U\nYlwPpI4mq3fiqJ1H7hO2bOZbsD9QbdK+ne9GE8Bz5/f7Yt2/UF8VzhfQHWYp\nvtyg1i7DxzWZXfjgyj6nxqB7GooaRM8sUHwhoOoRpdchA02kCg3tz7UlRkDA\nDPPYC17+8HAuB60K2LX8dfRMM7HVuPbFtWp6a0tKae11Azp/Sl4QpEVetbSt\nLvv23YQ33bgYbH3iasgowTqx2Z4Iy+d444Do2+T8+YMJsXzI8tXkvwU8RxQD\n+bTRa7pNbLqgeG7LS0QPiAhMkYrh34X0l/aeeGQYQ7X9YvWBWfbq0I0BSmNF\n8+Oes1kpxBNT6Pn5t9ywjounZpop1sf4AgaEM7jUhvZ9oeVD3h9BxMK8LgJZ\neHNu2GmOADQpkIDmYnOr2eRtVDh3szj2iJIpDMNwjc/V+Xh+sh2+QvRr5yLB\nTBXBhFbKR02vnNDjWqObNXk1PjTb2xLQ7E7e0URVV4Zo2AlR6l1NTnuq1i+8\nKYpjm2fuozZXcMoFYmQ5aIj79Oqi4tDpREyRXKKMforAEWVBukk2FgVPzyVI\no8TRKAQVi8WgCx7fBwFfgDdWhN3jOomAi/RzLb3cuOceFg4XVsXt6+Z79QAq\nqfA2QQY/GnrAfrDBdzrh1sQBnIPnhTyYHf++8W7RjwrfmbbdWsvivbHFGSvn\n26vTAe+8i6488q3ag/bUS0K6HzISU4/PNauaxi+0ne7ymNGgM9/hOsYWDZ8a\noqvzve67yFCl1As1Q+jVaP/FwDBAlXaWx7gWbZs5skpRf3S5lvxZc8EWdu4h\nUBesHtBQOMukviAYus/RGr/lIbdx28rZzIbrtjpHRCS6xYR84RGusqwcgntX\npZbWTg7/MmUGbjidHCDisShWygNwnGZ01TTfhXlWyq1tX8kzz5+Eh8wU+w/f\npjkE7fam5G8gzD5G/vOo/xMvxZNgLr+8vKC0wfpIaubWTm0jfWlq3uWJTqkW\nhW45KIqrKYPTqEk+cyUX1p+XEo7YQ0/LezTxkMvs0kQWcjep0TfNntBJ8DlO\nBkdkFwy4cJ2LwkoOLDdELu5uiirYYMeesqAyICGvO4Yqozu5UkbKEsjRxxt4\nnKaPVBcAruZQu489PKIHt7DVL/8Ai+5Ja56RoHdLAovUScRXJJwKVZUYRM+Q\ne0fSGjLwpCoRDWxtgP49qgac8KjokpjzMEN4qySikJkyyY04AWuBFC3ctAVY\n4KMsAGvk4dreVumAAX4pm3e0FWgzhadX1N3b4s8F5POGzGUw2zdpbpBdUK5b\nM8ZRQdvmPZYGI0SEzKJ35prfnywVkijnyc3Aeslsyp6qwnEdeqrc1MMxP7D8\n0WOJNvwckcVaBpKkD4z27L6E0IIbw+O4fNGYmRIME6Ws75HpUZj8I50pEurZ\nkOAGlkGdzIfCxxOkGePvnbJs6zpM7GacZhDl2FJSSGeOeUp4f+UqdQ8pekuj\nAaRkBkn3bzhNTjUkncWLcmSxg0QiXjtoXndD/qMqoh+zspsc9+FowmVzYt5w\nqVZTU7MXnWTCSXL8v5Tv45/5BMYVQ6qZaT93A+ywDUiAnwnrsyMxmoKlzWbd\nYCSH9Tlft/I8NEw7e3U/f3nQ7ZsY5nNY9DGFo5zmRvKxhwhS8/Vt1DjXLsTo\n6sZc0FJ7iNSddbOnSn0t4ueQ07pLo9GuFuCuE+Wf8RVeLG2uzjUSD1AyJITY\nWUYVdDP9N1dALXu5W5pE7s/6lOnfVfTH+UQk6HevXuBBHBJM15Ec50JVQsdN\n5nDOvi+MYNL82s1JJFk2lnSFGpLctk/V8TzPmE4iS42ZxGz4/GLH+zldsDpE\nLcTgStUa5N6oGF/daGlDBHXFlc2hVJEqdfguRqvPFXSc5bppW+qV+2y3at2H\nx0LaEdQTzRML0VpjlKxzJxaiGGhZyIy60JMmSmW9He5MrJwcGjyAsUeYyGlM\nVbSbULDz/NEIZqip8OQmlnqyNWhZl1wxk79uCHfUxLLNSnp/HwdrJQvU1Ojr\nxq48X+eOFEn3oEdVADDuGSK1E0ZLE2ndVHYu2+QOFyawEnHB5b3UGFXHOAuo\nd/ld6rAgZB+F8RjNbJKRreqfwHoIqhMDX54JM9v8I+vXEy69KCsfzfirLhb2\nDDE2inXw4ltKy7L8Zgd3uUWm0a1ViVTmjCojk1Jap0rJyTojcVU7OJeZ5QAF\nv0XagJdRAc4ZK3y7Mqd4qaOC+mPDI/KL2xxl8bX5A3136TaGo1jBbBSWF5dc\nWVskaAiijYvr9uVSQSyFdQwsYWGMfKLZDMaWY4/VKSnAhvgPDIo5eibKMa7E\nPfWfS2DwW3+bjq722WV6z10DyXtu9JXpOI5iC4FptQdTgTNJ9QR7+BrfkKQo\nVKXMHuGF9Dx02iTPYO04XPWmr18hengwEUOzQtBowqMIhVG4eImMEAsq0uGv\nYgQOnrd8xuJO5/cg8joFuVcl4g634Y1iXcdplMwHs5MIHNfLyA7whcBgfD+R\n/Z152sFlbXiOKNks6eGMYzZSQGh99yVf9qfdCIiA+q1rLK0SVFniH5Jk+eux\nGUAzdwPb3Ni1FyP9GvSwnQdYUVMVLeNMWmftwpHu8jTeXtE/CgO2BKJNVxGa\nH7Bvn+dcQoZlzxB1+xTP4RQsOafliSHBuZ8R5CZXZ3OFDF2CQ9bt0kZTBouq\nwXuaZnU0RY8ZKIhUFHF3PbF+cXzT2elQHfyZSABs66H6LfuXNxRl7YK1WUFj\nsJvEh5Mvs0xewRgxIma43tObmOOoS7Woe/f2Xbe67DuyEQctprBsoIE826+Z\nKzy6rQfOCiFVRFE4h/P1l6PxytRqfFoWXi6YJQWHLCJu+hOwotNC8ZNeai0P\nr3TB7lHTYNrfwXxzIvFVmQmtZm2T07xsGCMmK5iAAt6Xj3zfQLwQuCEFHX/Q\nwJl+fTk7fPZ3nhAlnueoDV3KVcGTfXd3upaxJirFJa6jpH62ESA9A/Yv4RfS\n8BILH0dE7JzwlbTWs0H8ToBD9ytbAAvAhTscnc8EDaYWg4yN8bstbnYKIenC\n5XamzeKco2WW/Gez8XFxAR8Nv+MKWb/57i1DGTFP5EoofKqOxI8obI4/gl4P\nXfz2OhsrQUl5kZN6b0Q5LC3RVBJ8GjG0aggfH1xvES+Tk14T2zhBRT8/PLfZ\nKyf+aD6V8CHsxBLrCyjPPc9th4wHcLqDJLg544zc43xS2AanMQsdYpg+RDKp\nGJIoFT2OzJpSRJ+BxESBW5UPvYnNeITEyPGnmUKT6pSozEfSICdXSTRL1dQs\nKd/kqH9NLOzdOkyuWCQPZHMOYRypMKPEDbyjrQH1JN5MKLnxBKCemFu+/jcM\nxgVfPRMOuzKehZS5zM2JipcbiY4mxDhKwLeC6NHROOLlinEUDRBtYsqAxpnW\n9x0PNVPsrwhSRFIBYRmDc5DtOm6CKIc5ucvXDfFYNwuQmtNJcyyjo+k5hd5R\nlb3Fg/93KlWiHSoOGvkvarwhjkcY4Dqf93TJRSAFiyj69DgiSss62J8xxq6y\nBkmwXps3UI00EICuKY+5I4NZbjVxr9cv3PmkR60OxTvRvIPhz1K2KA61GWg5\nKQNRb2x/371mIis49MJFwwm+DGcRNgruLiIWGvA0Az5rmo2hswaPLe2OPW5+\nkKviWQjaEK7W+IZ7cx0XkguPjwvxzKaXaAM1Fo914G+gcH9vi8p6wH6lUknT\ncnYMfEomp/EPy8kAkkCJjffDnkYu3+eLqegMtSbNKJSQ2YJXHLsETazjG5UM\nP45+4qMkF834HWxsiib9NOigbQpxT4YTeLtkveNGC+odiPgiC6DNaqFYF5NQ\nIvmk8fjOF/+Yz2dyaFUX+OZeRPSxCghCTVqoEgKKgH0+PXziTghzjw+NfFzg\nmMaV1djWt5vSO186NTJcmUTRmLIRY6hA+NxpEFJg9Bf0eKmsai/5IGKubpvq\nYtbg0EadzNt/LVp1Sn90949wFKgApUpzzWpanWM02rsr5fWlr9UgD1m2zgDc\n32CxlwytDPvPVmmYHZZ70PKftbMVRP1+1ccGbHkd+kznQvnRXQSHQJDrovOs\nLSwRHGdSrB8O0SWrebUGS50d8TGE358RYyrQ5VZ7IoKiRADq6XgMbZnE25sM\naOrFDsdOBm9E7lc2t2mKz+RuUt8c5YGqndV/sY25yLW9PyyKTkrsVEDIzR5c\n4ie0KtST8PwCKhNXePA4PqCL53hm1CZq1zbRCdjyle/CkN7kNwUkWIxM813O\n3mS9SMm0FAse4IV2yl5wQTBLJnOChd9+NAymci2RcIX3XeexaPdV5gGnRWO/\n1wMk7vPKZCPMOC04zypRVJ7zRmzmX7jWLy2umgRZJCmP4QTvIy7CCV/4OkEq\nBGnQfxt62s2ZYVC3wtz6huUovWKVE0YgWqVhjrwxK8ugmkXYp/zYHG5MAvkM\natFj+PWMZkx14tfYKVjl134H4KAwLvLPMXU+td1Bt+ClbwATjy68mA3zrsD2\nVZ6mpU9S82mBro30z3Ea4Uclx2ypn9iIMLUswbxiOR0rWL5M9oW0h/r0UhJ3\ngfSvjNJ0gw7For9EQMGuNjdp+DBDuy9q6AhATcgpQjhVRU3iDivHU1rdF/hN\nmcFaz7fIBUX1o4QmsP9T3m8MjKx8yCfDWECdkPX3PlsTE179kQSvFucQVL0S\nZEPZxIiLmKD4syfaEpCtLrqNik/eKPtBwwiSYCd6l8CPcZewmI3e7sCBMjw5\n93x6xoc9B+TbbOTWncJJSUdTpJXfdcfVsXWHG2bgngEpCR0WXt2SnDZmVS1V\nVafpdUOmzqAbw4xM13p3wSEusssiydlMBn/xY20b96brI2ZodQaSSvbJddQR\na8FXUb3OChb66I0NFEatjaGYKnKV/4oEx8v6BNLLgRUcaTzzrsO5YcSVKWGP\n2dVGjpm5lW/iRuhKijD4GbxM/ThnEZzIQT8Da8ppdcK2Nh63DKdo0duthG8H\nnqbnyM7BYl9OPpvK9M8DsC1oAGpNzcMJmuZwPcxjFadwinn9JvJ2tprH39zW\nJjUnruAt2e/DXtwBFnVzU0qUc4yHomW7kbzJeuZQKGsH6aRhy8d+xCnEgbp+\n8M1idatjhz7RPvflexWAcI65UAgPNDghhYCGebiGcGte5GoOdYfWY5wMFM9o\n6/BywKaAIAtaQO+HA6DoRSfCy9jiXabfT8SqGPUTqSbfJsMb26rThTxwmdlW\nKWWl6uOGLpc6dgvC0SRg0qC8oGfZZ2gSG0g56HJjBmGaEi9V8dq1ks0CrYQW\nhiQkVokNGwrLKT451NbX/TP/RMKwHW3mN4Sq35ZuRZNNIqNMd5PNiGkh/Ygx\nn1UC8eGrn/SdIQx0Vd91qEpd56aFGRnGRnWnVPg+U34f+qT+MESJt97L4VOj\novEEP6ThM5dXCKYiPbrk6zkSKMuT3kLc7RUDQksxumJWhM9HZr1TV+mSYg5j\nGYKNSh/FfBfGbbxphwh+c9pCjfOPXtWdn3IsoVhgS49DEGVohaO9XppJ7Q0c\nghray9ONmV+Gz3qrSffG3jhiGY6hA8xpw0MOyYHQlRWFKzCs9QGjcgN89VnD\n/yDSg7mpb/AmE3dYS2w6sWU1Prxbw9cUyEbEIKXaL5vb4uRZojALQ0IkAnbZ\nNpABiEbbTdDtWD7JOOkaIV9Je6w7e4SLAipG5gZ4KPi9DXhnjZgvHYVwzWa/\nR3UUv0Sq6ddjzfMsqmlvPGe0cPvQiEZiLof0bjG9DsX3oCo0BBBcMOXpy0s6\nIhZTARe4qUvZfVIDo3QPEZHHCVCKHW+NNWPspxd+Agv6Y009wo/E466s9YRu\nB+RDZQKmauiuuG2TVAy0iEx17nQdLwA18rR5AdQRRoFy9169zVOYviBVrSYG\n/Pn9vQ08kUV12QimJMh4t+Bf2umXjx1IgktLPpKejN0B0nkxrJlaMZZIPO0q\ndvLdjRlGKmMr89K7X+s8uasmkKKCVg3nonnuB9jy8UEusX/cLPQ8jZZ+Rdby\nrC8OIY6wkrLwaJOV3vfLrcEZ/JMxs2QOQK0bG4vVO2FlNDPV585pauun+EBT\nZFRnRSiTw2yVqOO0HpbAJ9tpw9kAAABPoPIc70MISQABoimvjAIAeKBBlLHE\nZ/sCAAAAAARZWg==\n====\n</code></pre>\n",
    "votes": "0",
    "answers": 1,
    "views": "154",
    "tags": [
        "binary",
        "strings"
    ],
    "user": "For Chaos",
    "time": "Apr 5, 2022 at 7:31",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "Hi and welcome to RE.SE. The uploaded file isn't even available anymore. So the question lacks not only context but also the crucial piece of data that could be used to get some context. Please vote to reopen your own question once you provide the context or at least that file.\n",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "Given the <pre><code>CREATE TABLE</code></pre> statement this is in all likelihood a single table from some database in binary form. Very often a DBMS will keep a record of the statement that created a given table. In this case the <pre><code>InnoDB</code></pre> suggests that this is either taken from MariaDB or MySQL. It does not seem to be a CSV file.\n",
            "time": null
        },
        {
            "user": "For Chaos",
            "text": "@0xC0000022L someone had shown me this, but I don't know how they were able to create this, probably their custom decompiler. You can probably make something out of it more than me. i.imgur.com/0rc1c9J.png\n",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "I'm fairly certain that not all of that data is contained in this single table. Instead, I would reckon, the data in this table contains references to other tables or even to data outside of the database (such as some list of strings) which can be used to assemble what your screenshot shows.\n",
            "time": null
        },
        {
            "user": "sudhackar",
            "text": "@ForChaos What is the source of this screenshot you just shared? What is the source of this tbl file and any related software that parses this file? Similar to 0xC0000022L I feel that not all data is present in this single file - any more relevant information would be great.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Based on the limited knowledge and references on strings I was able to extract some of the fields - most of which don't make sense like\n<pre><code>Member(anim_id=1, anim_name=22821, name_len=4, loop=65536, weapon_state=0, freeze_start_time=9830400, blend_time=0, play_speed=1.875, combination=2) bytearray(b'idle')\nMember(anim_id=2, anim_name=22826, name_len=7, loop=65536, weapon_state=0, freeze_start_time=9830400, blend_time=0, play_speed=1.875, combination=2) bytearray(b'idle_01')\nMember(anim_id=3, anim_name=22834, name_len=7, loop=65536, weapon_state=0, freeze_start_time=9830400, blend_time=0, play_speed=1.875, combination=2) bytearray(b'idle_02')\nMember(anim_id=4, anim_name=22842, name_len=11, loop=0, weapon_state=0, freeze_start_time=9830400, blend_time=0, play_speed=1.875, combination=2) bytearray(b'jumplandrun')\nMember(anim_id=5, anim_name=22854, name_len=16, loop=0, weapon_state=0, freeze_start_time=9830400, blend_time=0, play_speed=1.875, combination=0) bytearray(b'jumplandrun_left')\nMember(anim_id=6, anim_name=22871, name_len=17, loop=0, weapon_state=0, freeze_start_time=9830400, blend_time=0, play_speed=1.875, combination=0) bytearray(b'jumplandrun_right')\n</code></pre>\n\nField <pre><code>anim_id</code></pre> is a auto-incremented int represented as a <pre><code>dword</code></pre>.\nField <pre><code>anim_name</code></pre> is the offset to a C-string in the file - represented as a <pre><code>dword</code></pre>. Its followed by a <pre><code>dword</code></pre> sized field for the length of the string which I called <pre><code>name_len</code></pre>\n<pre><code>blend_time</code></pre> and <pre><code>weapon_state</code></pre> are 0 for all fields. I could not see a default value of 150 in the binary file.\n\nSimilarly I guessed other fields as well - maybe someone with some time can handle and manage the code better.\nThe file header looks somewhat like this\n\nThe header is followed by the query and then an array of dwords of values for the primary key field.\nAfter which this is probably the field type specifier\n\nwhere\n\n<pre><code>u</code></pre> - unsigned integer\n<pre><code>s</code></pre> - string\n<pre><code>f</code></pre> - float\n\nThe code to parse looked something like this\n<pre><code>import struct\nfrom typing import NamedTuple\n\nstruct_fmt = \"<2Ii4IeI\"\nstruct_len = struct.calcsize(struct_fmt)\nstruct_unpack = struct.Struct(struct_fmt).unpack_from\nresults = []\n\nclass Member(NamedTuple):\n    anim_id: int\n    anim_name: int\n    name_len : int\n    loop: int\n    weapon_state : int\n    freeze_start_time : int\n    blend_time : int\n    play_speed : int\n    combination : int\n\nmem = open(\"unk\", \"rb\").read()\noldidx = 0x5925\ndef read_c_string(strtidx, anim_id):\n    s = bytearray()\n    strtidx+=2\n    while True:\n        c = mem[strtidx]\n        if c == 0:\n            break\n        strtidx+=1\n        s.append(c)\n    return s\n\nwith open(\"unk\", \"rb\") as f:\n    f.seek(0xb53)\n    while True:\n        data = f.read(struct_len)\n        if not data: break\n        s = Member(*struct_unpack(data))\n        s = s._replace(name_len = s.name_len % 0x10000)\n        print(s, end=\" \")\n        print(read_c_string(s.anim_name, s.anim_id))\n        if s.anim_id == 826:\n            break\n</code></pre>\n",
            "votes": "1",
            "user": "sudhackar",
            "time": "Apr 10, 2022 at 17:05",
            "is_accepted": false,
            "comments": [
                {
                    "user": "For Chaos",
                    "text": "<span class=\"comment-copy\">That is very interesting, all the others .tbl all have same offset, very consistent.</span>",
                    "time": null
                }
            ]
        }
    ]
}