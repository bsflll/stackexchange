{
    "title": "How to call DebugActiveProcessStop from disassembled code?",
    "link": "https://reverseengineering.stackexchange.com/questions/9101/how-to-call-debugactiveprocessstop-from-disassembled-code",
    "content": "I am debugging an application. Another process is debugged by this application.\nHere is the call \n<pre><code>00705435  FF15 C0007500  CALL DWORD PTR DS [<&KERNEL32.ContinueDebugEvent>] \n</code></pre>\nI want to change call to <pre><code>DebugActiveProcessStop</code></pre>, what should I do ?\n",
    "votes": "1",
    "answers": 0,
    "views": "212",
    "tags": [
        "disassembly",
        "ollydbg",
        "debugging",
        "windbg"
    ],
    "user": "ASD",
    "time": "Jun 9, 2015 at 23:30",
    "comments": [
        {
            "user": "Spl3en",
            "text": "What do you expect to do with those calls ? I mean, you can simply change the EIP to DebugActiveProcessStop whenever you want, or patch the IAT to a code cave that will take the ContinueDebugEvent parameters and use them to call DebugActiveProcessStop, or hook ContinueDebugEvent directly.\n",
            "time": null
        },
        {
            "user": "Jason Geffner",
            "text": "@ASD, what debugger are you using?\n",
            "time": null
        },
        {
            "user": "ASD",
            "text": "@JasonGeffner am using ollydbg\n",
            "time": null
        },
        {
            "user": "Spl3en",
            "text": "@ASD So... Problem solved ?\n",
            "time": null
        },
        {
            "user": "ASD",
            "text": "@Spl3en yes i solved it.\n",
            "time": null
        }
    ],
    "answers_data": []
}