{
    "title": "Creating shared object library to switch out loaded methods",
    "link": "https://reverseengineering.stackexchange.com/questions/6133/creating-shared-object-library-to-switch-out-loaded-methods",
    "content": "Is it possible to create a dynamic library <pre><code>libXXX.so</code></pre> with android ndk that has a function that switches out methods in loaded classes in the dvm and call it from any apk ? \nThere are functions within <pre><code>libdvm.so</code></pre> to find loaded classes that could be used. Is this not as useful as I think it is or am I missing how difficult it is ?\nThe only example I found of someone doing this is explained in this blog post:\n\nAndroid hacking: replacing system classes methods with your own, by Andrey Petrov.\n",
    "votes": "1",
    "answers": 0,
    "views": "78",
    "tags": [
        "c",
        "android",
        "function-hooking"
    ],
    "user": "0x41",
    "time": "Aug 29, 2014 at 6:43",
    "comments": [
        {
            "user": "RoraÎ–",
            "text": "You're talking about a binary replacement of the library?\n",
            "time": null
        }
    ],
    "answers_data": []
}