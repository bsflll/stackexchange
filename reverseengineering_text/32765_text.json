{
    "title": "X64DBG Conditional Breakpoint on Specific Opcode?",
    "link": "https://reverseengineering.stackexchange.com/questions/32765/x64dbg-conditional-breakpoint-on-specific-opcode",
    "content": "Is there any way to break on specific opcode in X64DBG?\nFor example i want to break on start of a function which is\n55   | push ebp\n8BEC | mov ebp,esp\ncan i set a breakpoint like opcode == 0x00EC8B55?\nAlso is there any way to break only on certain memory range?\n",
    "votes": "0",
    "answers": 1,
    "views": "98",
    "tags": [
        "assembly",
        "malware",
        "x64dbg",
        "unpacking"
    ],
    "user": "Behrooz Sohrabloo",
    "time": "Feb 25, 2024 at 14:00",
    "comments": [],
    "answers_data": [
        {
            "content": "The debugger/CPU doesn't have a feature to break when it notices a particular opcode byte sequence. Ahead of time, you can scan the memory range you're interested in, then set a software breakpoint on all those particular spots. You can use the 'findall' or 'findasm' scripting command to add a breakpoint, or take some other action for each of those addresses.\nThere's also a tracing feature that single-steps through the execution. It'll be slower since you're breaking constantly. You can log and filter on that trace.\n",
            "votes": "0",
            "user": "Dale",
            "time": "Feb 26, 2024 at 14:03",
            "is_accepted": true,
            "comments": []
        }
    ]
}