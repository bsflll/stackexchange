{
    "title": "How to find the code blocks in the firmware image",
    "link": "https://reverseengineering.stackexchange.com/questions/33315/how-to-find-the-code-blocks-in-the-firmware-image",
    "content": "I have a very old PLC firmware. I also have a MAP file in which the addressing of program memory and data is painted, this file indicates the offset from the beginning for each variable and label, as I understand it.\nThe question is, how to find the placement of program memory and data memory blocks in the firmware image, how to determine the beginning of these blocks? Are there any methods or signatures to identify these parts of firmware?\n",
    "votes": "0",
    "answers": 0,
    "views": "46",
    "tags": [
        "firmware-analysis",
        "segmentation"
    ],
    "user": "Dan Ros",
    "time": "Nov 22, 2024 at 6:45",
    "comments": [
        {
            "user": "Robert",
            "text": "Have you tried binwalk?\n",
            "time": null
        },
        {
            "user": "Dan Ros",
            "text": "@Robert yes, but binwalk doesn't find any known signature\n",
            "time": null
        },
        {
            "user": "the busybee",
            "text": "Did you try these? 1) Depending on the format of the image file: Since you (need to) know the target, you can research the offset of the firmware image. 2) Assume that the image begins with the first mapped code. -- I'd think that a map file will show absolute addresses, not offsets.\n",
            "time": null
        }
    ],
    "answers_data": []
}