{
    "title": "Analyze Arm Linux CPP binary in Ida Pro",
    "link": "https://reverseengineering.stackexchange.com/questions/29579/analyze-arm-linux-cpp-binary-in-ida-pro",
    "content": "I tried to open CPP binary with Ida. Most of the code analyze well .\nThe problem is that there are lot of vtables(Ida doesn't recognize them as vtables) that I need to reach them manually and pressO (offset) so Ida will analyze the functions that all the fields in vtable point on them.\nIn addition,the first function in Vtable is constructor ,and in that constructor we can see the vtable that this vtable inherits from.\nIda didn't analyze the \"father\" vtable.\nHow can I fix this/or is there a script that do it as well to CPP Aem  binary\n",
    "votes": "1",
    "answers": 1,
    "views": "484",
    "tags": [
        "ida",
        "c++",
        "idapython",
        "ida-plugin",
        "vtables"
    ],
    "user": "yfr24493AzzrggAcom",
    "time": "Nov 20, 2021 at 23:17",
    "comments": [
        {
            "user": "R4444",
            "text": "do you need to find virtual functions or build class hierarchy?\n",
            "time": null
        },
        {
            "user": "yfr24493AzzrggAcom",
            "text": "@R4444 both of them. But 1 of those will be good :)\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "as you mentioned in comments, you need to build class hierarchy or find vtables. Following are some projects that I know will help you in achieving what you would like.\n\nclassinformer - https://sourceforge.net/projects/classinformer/\n\nClassy - https://github.com/RicBent/Classy\n\nHexpytools - https://github.com/igogo-x86/HexRaysPyTools\n\nAlso look @ this exellent publication, but their code base is not open sourced - https://dl.acm.org/doi/pdf/10.1145/3321705.3329833 (last time I asked them, they told me that they are planning to do so shortly)\n\n\nTheir paper is interesting to look at, as it explains how to recover such structures. Typically, you need, vtable entries, vtable structures, class constructor and destructor analysis and object flow analysis to build the desired hierarchy.\n",
            "votes": "1",
            "user": "R4444",
            "time": "Nov 21, 2021 at 0:54",
            "is_accepted": false,
            "comments": []
        }
    ]
}