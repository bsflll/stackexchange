{
    "title": "Immunity Debugger PyPlugin",
    "link": "https://reverseengineering.stackexchange.com/questions/5896/immunity-debugger-pyplugin",
    "content": "Immunity Debugger offers a feature called PyPlugin. However there is not enough documentation on it. The help for immdbg says this :\n\nPyPlugins are python scripts located at PyPlugins\\ directory,\n  PyPlugins are called when F4 or the PyPlugin icon located at the main\n  toolbar are pressed. Both (F4 or the PyPlugin icon) will popup a file\n  browse dialog, where the starting folder is the PyPlugin Directory.\n  When a pyplugin is executed, its main() gets called. Please note a\n  pyplugin can not receive any arguments and will not return any value\n  other than inscreen errors.\n\nIn reality when the F4 key is pressed, nothing special happens. F4 is actually the shortcut to Run to selection. Further there is no PyPlugin icon located at the main toolbar. The PyPlugins directory under Immunity Debugger directory is also empty, so no examples to look.\nMy question is what is a PyPlugin ? Are there any ready made PyPlugins to refer as an example ?\nNote : I am only talking about PyPlugins, not PyCommands\n",
    "votes": "6",
    "answers": 1,
    "views": "1k",
    "tags": [
        "python",
        "immunity-debugger"
    ],
    "user": "0xec",
    "time": "Jul 19, 2014 at 12:16",
    "comments": [],
    "answers_data": [
        {
            "content": "Going over \n\nImmunityDbg presentation - page 26, \nv1.73 dir - dir structure\nImmDbg help file - \"PyHooks ... they look exactly as a python plugin, only that they are placed inside PyHooks directory.\"\n\nI'm making and educated guess that <pre><code>PyPlugins</code></pre> is probably a leftover from previous versions of the debugger and at some point it became known as <pre><code>PyScripts</code></pre>.\nSo, the actual examples and guidance could be found here\n",
            "votes": "2",
            "user": "PhoeniX",
            "time": "Jul 7, 2017 at 3:41",
            "is_accepted": true,
            "comments": [
                {
                    "user": "0xec",
                    "text": "<span class=\"comment-copy\">Looks reasonable enough. Perhaps they are artifacts from older versions.</span>",
                    "time": null
                }
            ]
        }
    ]
}