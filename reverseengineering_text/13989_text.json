{
    "title": "Analysis of SSL traffic from a Windows 10 application",
    "link": "https://reverseengineering.stackexchange.com/questions/13989/analysis-of-ssl-traffic-from-a-windows-10-application",
    "content": "I have to analyse SSL traffic of an executable under Windows 10.\nThis sounds trivial really, why not just use Burp suite?\nUsing Burp\nUsing Burp I setup an invisible proxy listenning on port 443 and redirecting to target host's IP. Then in Windows hosts file I add the line \"127.0.0.1 ex.host.com\".\nAfter adding Burp CA into Windows Trusted CA store it works well when I navigate to ex.host.com with Chrome.\nBut the application I have to analyse doesn't seem to take into account the computer trusted CA and I have the error \"unknown_ca\" in burp.\nThe app use OpenSSL and the OpenSSL code is embed in the exe (no DLL). Meaning that I also have no way to locate through the code in a debugger for instance.\nWhat I need is to force the application to trust my Burp CA but I need a hint to do that.\nUsing oSpy\nI tried using oSpy but after attaching oSpy to the target process It's stuck with the splash \"Waiting for logging agent.\"\n",
    "votes": "3",
    "answers": 1,
    "views": "1k",
    "tags": [
        "dynamic-analysis",
        "packet",
        "sniffing"
    ],
    "user": "TinyMan",
    "time": "Nov 19, 2016 at 17:28",
    "comments": [],
    "answers_data": [
        {
            "content": "I'm not sure if this will solve your issue, but have you tried using Charles Proxy with SSL Proxying enabled?  Charles can perform a man-in-the-middle attack and get the contents of the applications's web request if the application is not using certificate pinning.\nI've only used the Mac version, but generally what you would do is install the Charles root certificate, enable SSL proxying for the host you want to listen to, and then begin recording network traffic and run the application.\nIf the host rejects the request, even after installing the root certificate and enabling SSL proxying, the server uses certificate pinning and the traffic cannot be intercepted with Charles.\nI'm not familiar with Burp or the \"unknown_ca\" error.  It's possible that you are setting up your SSL proxy properly with the application and the server is just rejecting the Burp certificate.\n",
            "votes": "1",
            "user": "JAL",
            "time": "Nov 19, 2016 at 17:16",
            "is_accepted": false,
            "comments": [
                {
                    "user": "TinyMan",
                    "text": "<span class=\"comment-copy\">It looks like the app (client side) is using certificate pinning. In this case how do I intercept packets ? I could use hooks but as I said  oSpy isn't working and OpenSSL is bundled inside the app so I can't hook exported symbols of a dll for instance.</span>",
                    "time": null
                },
                {
                    "user": "Nordwald",
                    "text": "<span class=\"comment-copy\">@TinyMan thats bad luck. Did you have any success locating the pinned certificate? Maybe you can replace it.</span>",
                    "time": null
                }
            ]
        }
    ]
}