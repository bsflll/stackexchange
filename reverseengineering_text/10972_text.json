{
    "title": "Why do we have to put shellcode before return address [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/10972/why-do-we-have-to-put-shellcode-before-return-address",
    "content": "Closed. This question is off-topic. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\n Questions asking for help reverse-engineering a specific system are off-topic unless they demonstrate an understanding of the concepts involved and clearly identify a specific problem.\n\n\nClosed 9 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nI'd like to know why we have to put the shellcode before the return address in a buffer overflow. Logically the return address will point to the shellcode and will be executed. So, the return address should be put before the shellcode. \nI read about it here : buffer overflow exploits - Why is the shellcode put before the return address. \nBut, I didn't really understand. Can someone explain me.\n",
    "votes": "-1",
    "answers": 2,
    "views": "768",
    "tags": [
        "shellcode"
    ],
    "user": "Scoobydoo",
    "time": "9 years ago",
    "comments": [
        {
            "user": "Scoobydoo",
            "text": "But I don't understand the answers over there, could you explain me please?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "You can put your shellcode wherever you want. It's usually below the return address in textbook stack overflow, because it causes your total payload to be smaller.\nSmall illustration: you're overflowing a 256 bytes buffer on the stack. Your payload would look like this in classical overflow:\nNOP * (256 - len(shellcode)) + shellcode + padding + returnaddress\nIf you put the payload after:\npadding * 256 + padding + returnaddress + nop * (as much as needed) + shellcode.\nPro: you can sometimes add much more space for your nops or bigger shellcode. If you're doing ROP you'll need to use that space after the return address anyway.\nCons: your payload is bigger and may not fit in your buffer.\n",
            "votes": "1",
            "user": "Aris",
            "time": "Sep 28, 2015 at 9:32",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "I'd like to know why we have to put the shellcode before the return\n  address in a buffer overflow.\n\nThe shellcode does not need to be before the return address in a buffer overflow.\nSee, for example, this advisory and the corresponding slide deck.\n",
            "votes": "0",
            "user": "Jason Geffner",
            "time": "Sep 26, 2015 at 20:06",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Scoobydoo",
                    "text": "<span class=\"comment-copy\">Thank you for your answer but can you explain me exactly what happens when we put the shellcode before the return address and what happens when we put it after the return address? Thank you for your help</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">That's not a reverse engineering question. Please ask on <a href=\"http://security.stackexchange.com/\">security.stackexchange.com</a> or <a href=\"http://stackoverflow.com/\">stackoverflow.com</a>.</span>",
                    "time": null
                }
            ]
        }
    ]
}