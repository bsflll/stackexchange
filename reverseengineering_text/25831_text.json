{
    "title": "Packer changed memory in IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/25831/packer-changed-memory-in-ida",
    "content": "I'm trying to analyze one binary protected by HASP. Since it is pretty old binary (2008) I managed to run it in IDA and it unpacked in memory. When I do tracing + take memory snapshot and reanalyze it, the view of functions I get does not make any sense.\n\nHow is it possible that instructions are skipped? Am I doing something wrong here?\n",
    "votes": "0",
    "answers": 1,
    "views": "71",
    "tags": [
        "ida",
        "packers"
    ],
    "user": "Bojan Vukasovic",
    "time": "Sep 7, 2020 at 17:45",
    "comments": [],
    "answers_data": [
        {
            "content": "You are looking at 64bit code disassembled as 32bit code.\n<pre><code>dec eax\nsub esp, 28h\n</code></pre>\nis the byte pattern <pre><code>48 83 ec 28</code></pre>, which is\n<pre><code>sub rsp, 28h\n</code></pre>\nAs a rule of thumb, if you see a lot of <pre><code>dec eax</code></pre> out of place, you're wrongly disassembling 64bit as 32bit code.\n",
            "votes": "1",
            "user": "Johann Aydinbas",
            "time": "Sep 9, 2020 at 13:14",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Bojan Vukasovic",
                    "text": "<span class=\"comment-copy\">I'm running 32 bit binary on win 7 x64. Is that the reason?</span>",
                    "time": null
                },
                {
                    "user": "Bojan Vukasovic",
                    "text": "<span class=\"comment-copy\">btw this on the right side is output from IDA trace, so I guess that it is actually showing what is executed. Probably the problem is that this binary is self-unpacking and then something happens there.</span>",
                    "time": null
                }
            ]
        }
    ]
}