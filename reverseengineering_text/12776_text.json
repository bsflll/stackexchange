{
    "title": "Crash after exe modification [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/12776/crash-after-exe-modification",
    "content": "Closed. This question is off-topic. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\n Questions asking for help reverse-engineering a specific system are off-topic unless they demonstrate an understanding of the concepts involved and clearly identify a specific problem.\n\n\nClosed 8 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nI am testing a malware that built as COM EXE service. This exe file has a digital signature.\nI succeeded to remove the digital signature for trying to modify it for reverse engineering tests.\nBut when I open it in OllyDbg and make any tiny change, the malware crash and not runs at all. Even if I tries to change one byte in the code cave to <pre><code>nop</code></pre> command, the malware not running.\nWhy can't I change it even in the code cave? Any idea?\n",
    "votes": "3",
    "answers": 2,
    "views": "637",
    "tags": [
        "ollydbg",
        "malware",
        "com"
    ],
    "user": "nrofis",
    "time": "8 years ago",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "This could be anything. You need to provide a lot more information to get any meaningful answer.\n",
            "time": null
        },
        {
            "user": "JeffreyZ",
            "text": "It could be tamper protection. For example, calculating the hash value of the code and checking it against a \"good\" hash value.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Maybe the malware have a hash like \"SHA1\" of its own code so when the malaware run he will check the checksum of executable in memory and compare the hash of memory with the one included in code\ntry to see at starting point what the malware is doing like memory raiding and also search where he call the exit() function or any function that will make it exit\n",
            "votes": "0",
            "user": "Karim H",
            "time": "Jun 2, 2016 at 23:20",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "@Karim's idea is right. Another thought is that your malware might be checking windows' registry debug flags. Since Olly runs dynamic analysis, your .exe recognises it and stops working if any changes applied during debugging proccess.\n",
            "votes": "0",
            "user": "Chris Tsiakoulas",
            "time": "Jun 3, 2016 at 7:12",
            "is_accepted": false,
            "comments": [
                {
                    "user": "nrofis",
                    "text": "<span class=\"comment-copy\">I am not changing it while debugging.. I change it, save it as new EXE and tries to run it without any debugger</span>",
                    "time": null
                },
                {
                    "user": "Chris Tsiakoulas",
                    "text": "<span class=\"comment-copy\">Well, then your malware is probably using some code integrity verification mechanism, like the hashing mentioned. Try to look out in the code for that, disable it and the modify anything else in the code.</span>",
                    "time": null
                }
            ]
        }
    ]
}