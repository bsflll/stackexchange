{
    "title": "Tracing without breakpoints",
    "link": "https://reverseengineering.stackexchange.com/questions/31128/tracing-without-breakpoints",
    "content": "I need:\n\nTo start tracing without breakpoints.\nTo do something in a program.\nTo stop tracing. This step may be replaced with a breakpoint but not the first step.\n\nThe thing is I need to do some actions in a program during tracing. I can't do this while it is paused.\nHow to do this in OllyDbg?\nWhat debuggers support this if not this one?\n",
    "votes": "3",
    "answers": 0,
    "views": "78",
    "tags": [
        "ollydbg",
        "tracing"
    ],
    "user": "oleedd",
    "time": "Nov 29, 2022 at 7:15",
    "comments": [
        {
            "user": "Robert",
            "text": "If you just want to trace certain parts of the program may be you don't need a full debugger. My be a different system may suite better: e.g. a scriptable hooking system like frida.re which allows to hook functions, print arguments and later unload the hook.\n",
            "time": null
        },
        {
            "user": "oleedd",
            "text": "@Robert I need this tracing mechanism: media.discordapp.net/attachments/360907625837101067/â€¦\n",
            "time": null
        },
        {
            "user": "Robert",
            "text": "Not sure what you want to tell me with that animated screenshot. May be my understanding of what is meant by \"tracing\" is different than yours. Please explain what tracing is from your perspective.\n",
            "time": null
        },
        {
            "user": "oleedd",
            "text": "@Robert It is recording all steps. I don't think someone may understand this differently. I mean synchronization with the main tab (assembler), not just a list. It is just a feature which works in OllyDbg. It seems to be missing in x64dbg.\n",
            "time": null
        }
    ],
    "answers_data": []
}