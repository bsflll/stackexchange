{
    "title": "Fixing import table of unpacked DLL with ImpREC : ImpRec throws \"invalid OEP!\" error",
    "link": "https://reverseengineering.stackexchange.com/questions/8584/fixing-import-table-of-unpacked-dll-with-imprec-imprec-throws-invalid-oep-e",
    "content": "I am trying to unpack a DLL and fix the import tables with ImpRec. However, I am stuck with this error.  Following is what I have tried. \n\nModified the flag in its PE header so that windows loads the file as an exe, not a dll. \nLoaded to Immunity Debugger and found the real entry point(Entry point of unpacked binary)\nDumped the the binary at this entry point.\nNow I opened ImpREC to fix the import table of the of the dumped DLL. However, in ImpREC the base memory displayed is 7100000. When I give \"068BA2A0\" as entry point, ImpRec complaints invalid OEP!. I dont understand how the base address of the debugged process is \"7100000\". I suspect this could be the problem.\n\n\nWhy is this error? Any pointers to fix it?\n",
    "votes": "3",
    "answers": 2,
    "views": "5k",
    "tags": [
        "dll",
        "unpacking",
        "immunity-debugger",
        "dumping",
        "import-reconstruction"
    ],
    "user": "aMa",
    "time": "Oct 23, 2016 at 20:38",
    "comments": [],
    "answers_data": [
        {
            "content": "Your analysis machine is Windows 7, ASLR is modifying your module base addresses between different executions. \nTry calculating the offset to your OEP (that is, address - base) and using this value to calculate OEP address with the new base (base2 + offset)\n",
            "votes": "1",
            "user": "Carlos Garcia",
            "time": "Mar 28, 2015 at 18:14",
            "is_accepted": true,
            "comments": [
                {
                    "user": "aMa",
                    "text": "<span class=\"comment-copy\">I just tried it with XP machine and it worked. Thank you.</span>",
                    "time": null
                },
                {
                    "user": "aMa",
                    "text": "<span class=\"comment-copy\">However, it didn't work with windows 7. I tried to keep EOP as 7100000 (base address found by ImpREC) + BA2A0 (offset found in immunity) = 071BA2A0. Still same error.</span>",
                    "time": null
                },
                {
                    "user": "aMa",
                    "text": "<span class=\"comment-copy\">I am again getting same error on XP. This is so weird. How do I find the the new base address, if the problem is ASLR?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "I think this is too late but let's reply though.\nBy default ImpREC has \"Use PE Header From Disk\" enabled. Which means it will NOT use the relocated DLL imagebase. 2 options :\n\n1 - Untick it in options and reselect your target\n2 - Use a custom PE header with Advanced commands / Load PE Header\n\n-> First choice is the best for your case.\nExplaination : the reason \"Use PE Header From Disk\" is enabled by default, comes from protector which destroys the header in memory so it's best to rely on disk but it's bad for DLL.\n",
            "votes": "2",
            "user": "Dessloch",
            "time": "Aug 23, 2016 at 16:52",
            "is_accepted": false,
            "comments": []
        }
    ]
}