{
    "title": "How do I map the std::_Ios_Openmode passed to basic_fstream to an actual value?",
    "link": "https://reverseengineering.stackexchange.com/questions/6381/how-do-i-map-the-std-ios-openmode-passed-to-basic-fstream-to-an-actual-value",
    "content": "I am working on some ARM disassembly. A file is being operated on:\n<pre><code>0000e550  sub  r3, r11, #0x2d0\n0000e554  mov  r0, r3        ; /tmp/MAC\n0000e558  ldr  r1, = 0x9a60c ; 0xec04 (sub_e3a8 + 0x85c)\n0000e55c  mov  r2, #0x8      ; std::basic_fstream<char,std::char_traits<char>>::basic_fstream(char const*,std::_Ios_Openmode)\n0000e560  bl   _ZNSt13basic_fstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode@PLT ; std::basic_fstream<char, std::char_traits<char> >::basic_fstream(char const*, std::_Ios_Openmode)\n</code></pre>\n<pre><code>r0</code></pre> is \"<pre><code>this</code></pre>\", <pre><code>r1</code></pre> is the path (<pre><code>/tmp/MAC</code></pre>) and <pre><code>r2</code></pre> is the mode. As can be seen, the mode is <pre><code>0x8</code></pre>. \nThe mode is \"implementation defined\" according to several sources. I haven't got specifics of the implementation unfortunately. \nWhat is the typical implementation of this on ARM ?\n",
    "votes": "1",
    "answers": 1,
    "views": "250",
    "tags": [
        "disassembly",
        "c++",
        "arm"
    ],
    "user": "Cybergibbons",
    "time": "Oct 13, 2014 at 10:53",
    "comments": [],
    "answers_data": [
        {
            "content": "You should try to find out which compiler/library is being used, then check the specs of that compiler.\nAssuming it's <pre><code>gcc</code></pre> with <pre><code>libstdc++</code></pre> (this is quite probable if you're on android; less probable on Windows RT), googling for \"gcc libstd ios_base openmode\" yields https://gcc.gnu.org/onlinedocs/libstdc++/libstdc++-api-4.5/a00504.html, which tells it's defined in ios_base.h. Navigating there, you can find \n<pre><code>00112   enum _Ios_Openmode \n00113     { \n00114       _S_app        = 1L << 0,\n00115       _S_ate        = 1L << 1,\n00116       _S_bin        = 1L << 2,\n00117       _S_in         = 1L << 3,\n00118       _S_out        = 1L << 4,\n00119       _S_trunc      = 1L << 5,\n00120       _S_ios_openmode_end = 1L << 16 \n00121     };\n</code></pre>\nand\n<pre><code>static const openmode in =      _S_in;\n</code></pre>\nso the open mode is probably <pre><code>in</code></pre>.\nBut, unless you find out which compiler was used, this a guess, and we can only help you guessing.\n",
            "votes": "2",
            "user": "Guntram Blohm",
            "time": "Oct 5, 2014 at 10:44",
            "is_accepted": true,
            "comments": []
        }
    ]
}