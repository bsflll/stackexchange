{
    "title": "Understanding proprietary game texture/image format (.art)",
    "link": "https://reverseengineering.stackexchange.com/questions/22838/understanding-proprietary-game-texture-image-format-art",
    "content": "I've been researching on how to modify the textures of Crazy Taxi 3 for a while now and I have pretty much hit a brick wall.\nThe game stores its texture assets in <pre><code>.art</code></pre> files, which, from what I understand, contain several textures in each of them, due to there being many banks of textures. There is also a <pre><code>Sprites</code></pre> folder containing these files that indicate the same.\nA quick Google search led me to believe that this may be the AOL Image Format used in its software, however AOL 9.0 kept throwing errors when trying to open the files. No dice.\nAfter searching more I found that PFS: First Publisher used this extension as well for its clip art. The files do not exactly match the structure documented in this wiki, but every .art file has something that looks like a table of information in that structure at the start, and then possibly image data. I have also observed that the string <pre><code>GXTX</code></pre> is repeated many times, may suggest that it might be a pointer of the beginning of a new image.\nOther than that, I have no idea how this file format may work. It seems like it is uncompressed image data, however after opening it in many programs I have given up and need help.\n\nUPDATE 1:\nI have found a great tool called Texturefinder that helped me figure out that these textures are compressed with DXT, however I am unsure which version, as half of a certain texture bank may look great in DXT1, while another half looks jumbled until I switch to DXT3 or 5. The container format possibly has information on which algorithm to use in a table before the images, as at the start of each texture file there is plenty of non-image data, or at least data that this tool can not decide. Here are a few examples of this working in one algorithm vs the other:\n \nSo, here is an updated list of what I have gathered:\n\n<pre><code>.art</code></pre> files contain the string <pre><code>GXTX</code></pre> many times, usually followed by about 12 bytes that have small values (something like <pre><code>80 00 80 00 00 80 00 00 01 00 05 00</code></pre>), likely an image separator\nThe files contain many textures compressed with DXT\nTextures may be compressed with differing forms of DXT (possibly DXT1 and DXT3)\nTextures in banks may have differing widths/heights\nEvery texture bank has a sizeable amount of non-image data at the start\nThe textures are upside down\n\nHere are some more samples for comparison.\n",
    "votes": "4",
    "answers": 2,
    "views": "827",
    "tags": [
        "file-format"
    ],
    "user": "stashymane",
    "time": "Dec 28, 2019 at 17:32",
    "comments": [
        {
            "user": "pythonpython",
            "text": "Can you provide multiple samples of the file format? This would be helpful for finding structural commonalities between the files.\n",
            "time": null
        },
        {
            "user": "pts",
            "text": "Please note that this file is not in the AOL ART image format. The latter starts with the JG header (2 bytes).\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I reversed 99% of the .ART file this week, here you go:\n<pre><code>// header\n4 bytes - total of images\n\n// file offsets directory\n  // for each image\n  4 bytes - image offset in directory\n\n// images directory\n  // for each image\n  4 bytes - magic (gxtx)\n  2 bytes - width\n  2 bytes - height\n  4 bytes - image data size\n  2 bytes - unknown\n  2 bytes - compression type (10 = DXT1 | 11 = DXT3)\n  X bytes - image data\n</code></pre>\n",
            "votes": "4",
            "user": "Meth0d",
            "time": "Apr 2, 2020 at 3:36",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "I've made some research and found that the textures uses one of these formats, depending on the 2 bytes value the texture has (10, 11, 4, 5, 0 or 2063): \n\"DXT1, DXT3, A8R8G8B8, A4R4G4B4, R5G6B5, A1R5G5B5\"\n",
            "votes": "0",
            "user": "M.S",
            "time": "Apr 1, 2020 at 16:14",
            "is_accepted": false,
            "comments": []
        }
    ]
}