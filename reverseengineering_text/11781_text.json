{
    "title": "How rootkits hide services on kernel mode? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/11781/how-rootkits-hide-services-on-kernel-mode",
    "content": "Closed. This question needs to be more focused. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Update the question so it focuses on one problem only by editing this post.\n\n\nClosed 9 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nHow rootkits hide services on kernel mode?  \nthanks\n",
    "votes": "-2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "malware",
        "kernel-mode",
        "driver"
    ],
    "user": "forbiddenhi",
    "time": "9 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "rootkit in kernel operate at the same security level as the operating system itself.\nA rootkit can modify data structures in the Windows kernel using a method known as direct kernel object manipulation (DKOM)\nThis method can be used to hide processes. A kernel mode rootkit can also hook the System Service Descriptor Table (SSDT), or modify the gates between user mode and kernel mode, in order to cloak itself\nthere is various way:  \n\nUsing Hook Bypass Method through Mapped Image to Uncover Hidden  \nServices   Enumerating Child Processes of Services.exe to Detect  \nHidden Services   Hidden Services Detection by Enumerating Processes\nwith 'NtControlPipe'\nHidden Service Detection by Enumerating Services Registry Key\n",
            "votes": "2",
            "user": "AminM",
            "time": "Jan 17, 2016 at 11:35",
            "is_accepted": false,
            "comments": []
        }
    ]
}