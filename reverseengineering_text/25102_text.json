{
    "title": "How to setup VSCode with IDAPython?",
    "link": "https://reverseengineering.stackexchange.com/questions/25102/how-to-setup-vscode-with-idapython",
    "content": "Is it possible to remotely debug IDAPyhton scripts using VSCode and ptvsd? I found a few tutorials on the net, but no one is working. In the past, using the same protocol I was able to connect to Maya from VSCode and to remotely debug Pymel scripts. So, from IDA python console I entered:\n<pre><code>ptvsd.enable_attach(address=('localhost', 5678), redirect_output=True)\n</code></pre>\nand eventually:\n<pre><code>ptvsd.wait_for_attach(60)\n</code></pre>\nA Python MsgBox appears telling a script is running... Now in VSCode I started the script to be debugged using the standard json configuration file for attaching to a remote debugger, but the connection is always refused.\nI tried to change the port (3528, 3000), the address (0.0.0.0) and to remove the redirect_output flag. No matter what, I wasn't able to connect. I tried also:\n<pre><code>ptvsd.break_into_debugger()\n</code></pre>\nBut again, no luck.\nAs a second question, is there a way to make the import statement recognize IDAPython modules (idaapi, idc, idc_bytes and so on) or to use autocompletion? I know IDAPython is bundled with IDA and not installed in site-packages, but I wonder if is there a solution (not to execute the script outside of IDA, but to have the modules and keywords recognized).\n",
    "votes": "2",
    "answers": 2,
    "views": "2k",
    "tags": [
        "ida",
        "debugging",
        "idapython",
        "remote"
    ],
    "user": "saiwa",
    "time": "May 23, 2020 at 20:18",
    "comments": [
        {
            "user": "Trass3r",
            "text": "Worth noting <pre><code>break_into_debugger</code></pre> only works if the debugger is already attached. First I took it to do what <pre><code>wait_for_attach</code></pre> is doing.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Something this should work for <pre><code>ptvsd</code></pre>:\n<pre><code>        {\n            \"name\": \"Python: Remote Attach\",\n            \"type\": \"python\",\n            \"request\": \"attach\",\n            \"debugServer\": 5678,\n            \"showReturnValue\": true,\n            \"internalConsoleOptions\": \"openOnSessionStart\",\n            \"redirectOutput\": true,\n        }\n</code></pre>\nYou may need to insert an explicit <pre><code>breakpoint()</code></pre> in the code.\nFor IntelliSense in VSCode there's <pre><code>PYTHONPATH</code></pre> or\n<pre><code>    \"python.autoComplete.extraPaths\": [\n        \"...\"\n    ],\n    \"python.analysis.extraPaths\": [\n        \"...\"\n    ],\n</code></pre>\n",
            "votes": "1",
            "user": "Trass3r",
            "time": "Oct 6, 2020 at 13:16",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "idacode offers a wonderful integration between VSCode and idapython.\nThe github repo is the best place to find the IDA plugin, and there is a VSCode extension under the same name available in the extension repository.\nIf your IDA installation is not in the default location, see the readme in the github repo.\nOnce installed, you enable a local listening server within IDA from the plugin menu, and then in VSCode you open a workspace in the directory containing your python code. Using the command list (ctrl+shift+P), type 'IDA' and choose one of the options to connect with or without a debugger. Then each time you save the python script, it will be executed in IDA.\nIf you wish to use vscodium instead of vscode, you will need to select \"install from *.vsix\" in the extension manager menu and choose the vsix which you can download here.\n",
            "votes": "0",
            "user": "biorpg",
            "time": "Oct 15, 2021 at 10:17",
            "is_accepted": false,
            "comments": []
        }
    ]
}