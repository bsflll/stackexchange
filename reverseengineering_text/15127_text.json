{
    "title": "Why the program can't write to specific memory area",
    "link": "https://reverseengineering.stackexchange.com/questions/15127/why-the-program-cant-write-to-specific-memory-area",
    "content": "I am working on Lab13-01.exe from \"Practical Malware Analysis\" (you can download it from here).\nWhen I run it without debuggers in my VMWare it runs without errors.\nI started to analyze it with OllyDbg 2.01.\nThere is some point in the code that it receives exception and I don't understand why.\nIt has resource that contains encoded string:  \n<pre><code>LLLKIZXORXZWVZWLZI^ZUZWBHRHXTV\n</code></pre>\nThis resource is saved at address <pre><code>0x408060</code></pre>\nAt <pre><code>0x4011C1</code></pre> it overwrites the first byte of the string with <pre><code>AL (0x77)</code></pre>:\n<pre><code>MOV BYTE PTR DS:[ECX], AL\n</code></pre>\nThen I received:\n\nAccess violation when writing to [00408060]\n\n\nWhen I press Shift+Run/Step, it succeed to run.\nThere number of things I don't understand here.\n\nIf it can't write to <pre><code>[00408060]</code></pre>, how come when I press Shift+Run/Step it succeed ?\nWhy it can't write to <pre><code>[00408060]</code></pre> ? Is there some flag that prevent from writing to this aread (if yes, where can I see it?) ?\n",
    "votes": "1",
    "answers": 2,
    "views": "1k",
    "tags": [
        "ollydbg",
        "exception"
    ],
    "user": "E235",
    "time": "Apr 8, 2017 at 12:06",
    "comments": [
        {
            "user": "blabb",
            "text": "Probably virtual protected against write access and trapping the exception for handling differently based on presence or absence of debugger follow the exception chain and single step. The handler\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "did you check if it installs an exception handler which catches the exception?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I went to the memory map window.\nI searched for the memory address range for 408060.\nIt  was under <pre><code>.rsrc</code></pre> (Resources).\nIt had only read permissions, I set it with write permissions too and now it works:\n",
            "votes": "1",
            "user": "E235",
            "time": "Apr 10, 2017 at 10:51",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "It could easily be that it is code/data segregation.  \nIn Windows it is called Data Execution Protection.  \nA lot of malware will load their code as if it were data, then maybe rewrite it after decryption, then attempt to execute it.  \nDEP should always be on, but for purposes of this demonstration maybe you could turn it off and see if you get different results.  \nThen turn it back on.\n",
            "votes": "0",
            "user": "SDsolar",
            "time": "Apr 10, 2017 at 6:05",
            "is_accepted": false,
            "comments": [
                {
                    "user": "E235",
                    "text": "<span class=\"comment-copy\">I checked with Pestudio and DEP is off. See printscreen here: <a href=\"http://imgur.com/dzaCXmR\" rel=\"nofollow noreferrer\">imgur.com/dzaCXmR</a></span>",
                    "time": null
                }
            ]
        }
    ]
}