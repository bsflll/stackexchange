{
    "title": "Ghidra Strings and Global Renaming Issue",
    "link": "https://reverseengineering.stackexchange.com/questions/31866/ghidra-strings-and-global-renaming-issue",
    "content": "I am currently reverse engineering a piece of 16-bit software (originally written in C/C++ from what I can gather).\nI have identified a function that seems to print text to the console. The text to be printed is passed into the function as a parameter, however Ghidra doesn't seem to be handling the strings properly.\nThe function is decompiled as follows:\n\nThe assembly for this function is:\n\nSo Ghidra picks up on the string, however when I attempt to double-click it (to go to it's relevant location), the following error appears:\n\nThis is making identifying where strings are utilised extremely hard, as I cannot search for where a string is utilised within the program's code. I don't understand how Ghidra can pickup part of the name of the string, but won't then let me click through to it?\nI also seem to be getting a lot of global variables names like this in the disassembly:\n\nAnd when I go to rename them, I get the following error:\n\nI have no idea if these two issues are related or not?\nAny suggestions?\nThanks,\nJames.\n",
    "votes": "2",
    "answers": 0,
    "views": "295",
    "tags": [
        "x86",
        "ghidra",
        "strings"
    ],
    "user": "jttri777",
    "time": "May 14, 2023 at 17:52",
    "comments": [
        {
            "user": "jttri777",
            "text": "Ghidra didn't pick up the data segment correctly for this executable. I had to redefine it correctly, and then manually set the DS register value for each of the functions that require it. Setting the DS register manually seems to introduce the \"uRAM\" globals.\n",
            "time": null
        },
        {
            "user": "jttri777",
            "text": "By messing around with the memory maps, I've managed to solve the issue with the \"uRAM\" globals, they had been placed in a memory block that was separate to the data segment, meaning that the DS value was having no effect. Merging the blocks has now solved this issue, however I still don't seem to be able to double click on the string values in the decompilation.\n",
            "time": null
        }
    ],
    "answers_data": []
}