{
    "title": "Find MFC class memory layout automatically in IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/19406/find-mfc-class-memory-layout-automatically-in-ida",
    "content": "Background\nI was using IDA to reverse engineer an DLL which uses MFC100.\nI was reading Reversing an MFC application: How to find class memory layouts? and https://stackoverflow.com/questions/13126694/idapro-loading-c-header-files-into-idapro-for-structures , where two answers suggest going to the correct header file and copy&paste the struct defintion (which is hard, because C++ has templates and vftable. Also, nested classes...), and one answer suggests making a test program and use IDA to decompile it to get the struct declaration, which is not possible because programs don't (appear to) store struct declaration. (see below)\n\nConsider a small example. (with <pre><code>CStdioFile</code></pre> and some MFC thing)\n<pre><code>#include <afxwin.h>\n\nclass HelloApplication : public CWinApp\n{\npublic:\n    virtual BOOL InitInstance();\n};\n\nHelloApplication HelloApp;\n\nclass HelloWindow : public CFrameWnd\n{       \n    CButton* m_pHelloButton;\npublic: \n    HelloWindow();\n};\n\n\nBOOL HelloApplication::InitInstance()\n{       \n    m_pMainWnd = new HelloWindow(); \n    m_pMainWnd->ShowWindow(m_nCmdShow); \n    m_pMainWnd->UpdateWindow(); \n    return TRUE;\n}\n\n\nHelloWindow::HelloWindow()\n{       \n    Create(NULL,            \n        \"Hello World!\",         \n        WS_OVERLAPPEDWINDOW|WS_HSCROLL,             \n        CRect(0,0,140,80));     \n    m_pHelloButton = new CButton();\n    m_pHelloButton->Create(\"Hello World!\",WS_CHILD|WS_VISIBLE,CRect(20,20,120,40),this,1);\n\n    // some code for file reading\n    CStdioFile Inputfile, Outputfile;\n    CFileException FileExc;\n    UINT nOpenFlags;\n    CString s;\n    nOpenFlags = CFile::modeRead;\n    if (!Inputfile.Open(\"Console.txt\", nOpenFlags, &FileExc)) {\n        FileExc.ReportError();\n        return;\n    }\n    nOpenFlags = CFile::modeWrite | CFile::modeCreate;\n    if (!Outputfile.Open(\"Output.txt\", nOpenFlags, &FileExc)) {\n        FileExc.ReportError();\n        return;\n    }\n    while (Inputfile.ReadString(s))\n        Outputfile.WriteString(s+'\n');\n    Inputfile.Close();\n    Outputfile.Close();\n\n}\n</code></pre>\nCommand line used (assuming the file above is named <pre><code>a.cpp</code></pre>):\n<pre><code>cl.exe a.cpp /EHsc /link /debug /subsystem:windows\n</code></pre>\nHere, I intentionally use <pre><code>/debug</code></pre> to make reverse engineering easier.\nWhen IDA ask me if I want to load the PDB file, I chose \"Yes\".\nHowever:\nWhen loading the executable with IDA, neither the \"Local Types\" window nor the \"Structures\" window shows anything about <pre><code>CFile</code></pre>. Therefore, the functions which use them, use offsets to refer to the members.\n\nIn this particular case I use <pre><code>CFile</code></pre>, but I assume it's similar for other classes.\nI know I can go to the header file in <pre><code>atlmfc\\</code></pre> to read the class definition and work out the member names, but that's too tedious and IDA may have it built-in already. So:\n\nThe question\nIs there any way to quickly give IDA the definition of <pre><code>CFile</code></pre>?\n",
    "votes": "3",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "mfc"
    ],
    "user": "user202729",
    "time": "Sep 20, 2018 at 12:45",
    "comments": [
        {
            "user": "w s",
            "text": "If you compile your windows program with debug information and importing the resulting debug info .pdb file with the corresponding menu command ( hex-rays.com/products/ida/support/idadoc/430.shtml ) you'll probably be able to see the CFIle definition.\n",
            "time": null
        },
        {
            "user": "user202729",
            "text": "@ws Won't loading the file import the PDB automatically?\n",
            "time": null
        },
        {
            "user": "mrexodia",
            "text": "IDA will usually ask if you want to load the PDB.\n",
            "time": null
        },
        {
            "user": "user202729",
            "text": "It still doesn't work. (post updated...)\n",
            "time": null
        },
        {
            "user": "w s",
            "text": "Is it IDA free by any chance ? Is it possible that you are running IDA on Linux ?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "The main problem is: <pre><code>/Zi</code></pre> is required. Including just <pre><code>/debug</code></pre> is not enough. That's because the type information is stored in the compiler <pre><code>.pdb</code></pre> file. See also Compiler PDB file and the Linker PDB file - Stack Overflow.\nThe command line can looks like this:\n<pre><code>cl.exe /Zi a.cpp /EHsc /link /subsystem:windows</code></pre>\nNote that <pre><code>/Zi</code></pre> implies <pre><code>/debug</code></pre> (therefore it's not necessary to specify <pre><code>/debug</code></pre> when <pre><code>/Zi</code></pre> is included)\nHint: It's not necessary to build the executable. Just compile the file itself is enough (using <pre><code>/c</code></pre>).\n\nThere are some other problems that one may get while doing that:\n\nThe error message\n<pre><code><< It appears that MS DIA SDK is not installed.\nPlease try installing \"Microsoft Visual C++ 2008 Redistributable Package / x86\" >>\n</code></pre>\nappears in the \"Output window\".\nSolution: just install Microsoft Visual C++ 2008 Redistributable Package (x86).\n<pre><code>Internal IDA Error\n\nOops! internal error 984 occured.\nFurther work is not possible and IDA will close.\n</code></pre>\nIt's a bug that is fixed in IDA 6.9.\nThe classes just don't appear in \"Local Types\" tab.\nCheck the output window to see if the error message mentioned in problem 1 appears.\n\n\nBy the way, it is possible to import any C++ type into IDA using this method, not just specifically MFC.\n",
            "votes": "1",
            "user": "user202729",
            "time": "Sep 25, 2018 at 15:59",
            "is_accepted": false,
            "comments": []
        }
    ]
}