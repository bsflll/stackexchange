{
    "title": "(MacOS) disable codesign check / run codesign on multiple files",
    "link": "https://reverseengineering.stackexchange.com/questions/19479/macos-disable-codesign-check-run-codesign-on-multiple-files",
    "content": "so I have two questions, I'll try to keep it short (also, im a noob):\n\nI run logic pro x and other software to make music, and some third party plugins make program crash if they get a:  \n\nException Type:        EXC_BAD_ACCESS (Code Signature Invalid)\n\nI can solve this problem by <pre><code>codesign -f -s - (file)</code></pre> but I'd rather not. Is there a way to disable code signature check so it won't even give me an error and won't check it?\n\nI assume the answer is no and therefore my second question:\n\nI need to run <pre><code>sudo codesign -f -s -</code></pre> on a <pre><code>.bundle</code></pre> file that's inside a <pre><code>Resource</code></pre> folder inside a <pre><code>.component</code></pre> (a package), and I have a lot of these to go through, for example:\n<pre><code>Plugin_2.component -> Resources -> **Plugin_2.bundle**  \nPlugin_3.component -> Resources -> **Plugin_3.bundle**\n</code></pre>\nis there a way to make a command to do it automatically?\nI was thinking maybe in automator? something to make it do these 2 steps:  \n\nlook for a <pre><code>.bundle</code></pre> file inside a <pre><code>Resource</code></pre> folder in a package  \nrun <pre><code>sudo codesign -f -s -</code></pre> on it\n\nIs that possible? maybe make it in automator and add it to Services in the right click menu? or to make it scan a whole folder with <pre><code>.component</code></pre>?  \n\nAny help would be appreciated!\nThanks\n",
    "votes": "3",
    "answers": 2,
    "views": "3k",
    "tags": [
        "automation",
        "macos"
    ],
    "user": "Gobee",
    "time": "Sep 28, 2018 at 19:27",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "for help with commandline scripting, you can ask on Superuser or Unix\n",
            "time": null
        },
        {
            "user": "pmdj",
            "text": "It should be possible to just remove the signature on the main executable, which contains the <pre><code>library-validation</code></pre> flag which is what enforces the signature check on plugins. Once that flag is gone, plugins should no longer be validated.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "after some trial and error i managed to solve it easily with the following command in terminal  \n<pre><code>find . -name \"*.bundle\" -execdir sudo codesign -f -s - {} \\;  \n</code></pre>\n<pre><code>find . -name \"*.EXTENSION\"</code></pre> is responsible for finding the certain file extension in a directory  \n<pre><code>-execdir YOUR COMMAND {} \\;</code></pre> is responsible to executing the command.\nusing <pre><code>-execdir</code></pre> -> on the results of the previous find command ( <pre><code>{}</code></pre> )  \nfairly simple after all, hope this can help someone in the future\n",
            "votes": "1",
            "user": "Gobee",
            "time": "Sep 28, 2018 at 8:39",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "Check out this script I made, it takes care of your ENTIRE plugin folder. Helps on fresh OS installs for sure.\n<pre><code>#!/bin/bash\n\ncd /Library/Audio/Plug-Ins/\n\nfind . -name \"*.bundle\" -execdir sudo xattr -cr \\;\nfind . -name \"*.VST\" -execdir sudo xattr -cr \\;\nfind . -name \"*.vst3\" -execdir sudo xattr -cr \\;\nfind . -name \"*.component\" -execdir sudo xattr -cr \\;\nfind . -name \"*.dpm\" -execdir sudo xattr -cr \\;\n\nfind . -name \"*.bundle\" -execdir sudo codesign -f -s - {} \\;\nfind . -name \"*.VST\" -execdir sudo codesign -f -s - {} \\;\nfind . -name \"*.vst3\" -execdir sudo codesign -f -s - {} \\;\nfind . -name \"*.component\" -execdir sudo codesign -f -s - {} \\;\nfind . -name \"*.dpm\" -execdir sudo codesign -f -s - {} \\;\n</code></pre>\nUseful as it is, it could use some improvement. I would like to further expand this script to include clearing/setting permissions to allow for this to work. With my current knowledge of how this works, you have tp use a tool like Batchmod to set permissions for each individual file, tediously, then running this script afterwards.\nIf anyone comes across this in the future, feel free to contribute.\n",
            "votes": "0",
            "user": "DiabeticAnna",
            "time": "Mar 28, 2021 at 21:58",
            "is_accepted": false,
            "comments": []
        }
    ]
}