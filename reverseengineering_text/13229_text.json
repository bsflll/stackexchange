{
    "title": "When I start up a remote thread in an application, why does it always crash when it tries to access data in the thread structure?",
    "link": "https://reverseengineering.stackexchange.com/questions/13229/when-i-start-up-a-remote-thread-in-an-application-why-does-it-always-crash-when",
    "content": "I'm  on OS X 10.10 64 bit (x86_64) and created a chunk of memory called code with <pre><code>vm_allocate</code></pre>.  I allocate a chunk of memory for a stack.  I load a library to memory and determine an entry point to the library.  I write the library to my code buffer using <pre><code>vm_write</code></pre>, no problems there.\nI setup the registers and call <pre><code>thread_create_running</code></pre> and run remote thread into another process.\nOver in the other process the thread starts.  I'm using lldb and have it setup so when my thread starts it breaks on that entry point  I see my code.  I step through the code.\nHowever it crashes when it tries to do the <pre><code>_pthread_set_self</code></pre>.  If I step into <pre><code>pthread_set_self</code></pre>, it crashes in \n<pre><code>_pthread_mutex_lock</code></pre> at the following instruction:\n<pre><code>movq %gs:0x0, %rax\n</code></pre>\n(Note: <pre><code>gs</code></pre> is <pre><code>0x00000000</code></pre> prior to the instruction where the crash occurs)\nIt's my understanding this instruction is an operation to retrieve the first segment of <pre><code>gs</code></pre> from a thread segment structure and move it into the <pre><code>rax</code></pre> register.\nMy question is what do I need to do to prevent the crash that ensues upon execution of this instruction?  Upon execution of this instruction I see <pre><code>EXC_BAD_ACCESS</code></pre> in <pre><code>pthread_mutex_lock</code></pre>.\nI tried putting in the code to <pre><code>pthread_mutex_init</code></pre>, followed by <pre><code>pthread_mutex_lock</code></pre> then <pre><code>pthread_set_self</code></pre>.  However when it hits the first <pre><code>pthread_mutex_lock</code></pre>, i get the same issue.  It dies at the same spot.\nAny ideas?\nMy target app to which i don't have source code, is multi-threaded.\n",
    "votes": "3",
    "answers": 0,
    "views": "442",
    "tags": [
        "osx",
        "thread",
        "lldb",
        "injection"
    ],
    "user": "Div",
    "time": "Aug 8, 2016 at 5:51",
    "comments": [
        {
            "user": "Lupe",
            "text": "Did you ever figure this out? I'm having the exact same problem.\n",
            "time": null
        }
    ],
    "answers_data": []
}