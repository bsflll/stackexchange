{
    "title": "Calculator shows incorrect result for 32-bit subtraction?",
    "link": "https://reverseengineering.stackexchange.com/questions/30727/calculator-shows-incorrect-result-for-32-bit-subtraction",
    "content": "I was trying to argue about the operation of a routine called micros() and millis() that is used on the Arduino platform, and I ended up finding this calculator. The calculator shows a different result than 8-bit (ATmega328 - Arduino Nano) and 32-bit (ESP32) processors. They even cited the result of the Windows calculator, which shows the same result as the aforementioned microcontrollers.\n\nNano/ESP32: 0x1 - 0xFFFFFF00 = 0x101\n\n\nCalculator: 0x1 - 0xFFFFFF00 = 0xFFFFFEFF\n\nI found an explanation for calculating subtraction for 8-bit numbers,\nDoes anyone know of an answer made with 32-bit numbers?.\n",
    "votes": "2",
    "answers": 0,
    "views": "50",
    "tags": [
        "arduino",
        "math"
    ],
    "user": "R R",
    "time": "Aug 2, 2022 at 15:26",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "Is <pre><code>0xFFFFFF00</code></pre> supposed to be <pre><code>4294967040</code></pre> or -256?\n",
            "time": null
        },
        {
            "user": "R R",
            "text": "@IgorSkochinsky, Hi, this is my doubt. Apparently, a microcontroller accepts one thing, but a calculator accepts something else. They commented that in Linux the result is the same as in the microcontroller, so I ended up not being able to argue anymore.\n",
            "time": null
        },
        {
            "user": "the busybee",
            "text": "I doubt the result of the calculator. Are you sure that there is no negative sign missing?\n",
            "time": null
        },
        {
            "user": "the busybee",
            "text": "It is important to know what width the different systems use. You cannot say \"Linux does this.\" It all depends on singed/unsigned and the width.\n",
            "time": null
        },
        {
            "user": "the busybee",
            "text": "Anyway, I'm sure you can use differences of the values coming from <pre><code>millis()</code></pre> or <pre><code>micros()</code></pre> in Arduino, even in very long running applications. That is, as long as the intervals are shorter than the <pre><code>unsigned long</code></pre> can hold.\n",
            "time": null
        }
    ],
    "answers_data": []
}