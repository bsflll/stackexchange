{
    "title": "Dynamic instrumentation tools",
    "link": "https://reverseengineering.stackexchange.com/questions/8642/dynamic-instrumentation-tools",
    "content": "I've discovered recently PIN which allows to dynamically instrument the binary code while still making the program believe it is running unmodified.\nEven more recently, I've heared about Dyninst and DynamoRIO. Do you know some other tools like this? And more importantly, do you know the difference between those? What are their strenghs and their weaknesses for the topic of reverse engineering and binary code analysis?\nMore specifically, the properties I'm interested in are:\n\nOpen source licence\nOperating system portability (Linux, Windows, Mac, ...)\nHardware architecture portability (x86 (32 and 64 bits), ARM, ...)\nRun the program unnoticeably, especially when the programs perform some tricks like executable code generation / modification, instruction overlap, memory image checksum, etc.\nHard to detect (how about a program reading <pre><code>/proc/self/maps</code></pre> or trying to <pre><code>mmap</code></pre> all the memory pages that should be free or even reading hardware instruction counters?)\n\nBut of course, other usual properties are also very welcome, like low overhead and ease of use.\n",
    "votes": "5",
    "answers": 1,
    "views": "1k",
    "tags": [
        "dynamic-analysis",
        "instrumentation"
    ],
    "user": "Celelibi",
    "time": "Apr 6, 2015 at 5:42",
    "comments": [],
    "answers_data": [
        {
            "content": "frida is cross-platform (OS X, Windows, Linux, iOS, Android) and also supports multiple architecture.\nThe main functionality is running some javascript code every time a function is called or when returning from a function.\n",
            "votes": "3",
            "user": "Tyilo",
            "time": "Apr 8, 2015 at 2:27",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Celelibi",
                    "text": "<span class=\"comment-copy\">I may have some doubts about the performance if the user code is in javascript.</span>",
                    "time": null
                }
            ]
        }
    ]
}