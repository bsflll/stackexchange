{
    "title": "I don't understand the use of mov eax,ds:0x404004 and the NOP slide in this code I made [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/23019/i-dont-understand-the-use-of-mov-eax-ds0x404004-and-the-nop-slide-in-this-code",
    "content": "Closed. This question needs details or clarity. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Add details and clarify the problem by editing this post.\n\n\nClosed 5 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\n\nHi guys, I'm just practising the difference between global and local variables and how they are represented in x86 assembly. I just don't understand the use of the ds segment register and the NOP slide at the end (nop and xchg ax, ax are the same thing).\nThanks for your help!\n",
    "votes": "0",
    "answers": 1,
    "views": "464",
    "tags": [
        "x86"
    ],
    "user": "Constructive",
    "time": "5 years ago",
    "comments": [
        {
            "user": "tmr232",
            "text": "Please provide a textual version of your code instead of a screenshot. Additionally, it would be easier to understand and explain if you included the code you wrote as well.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "You can refer to this answer for the <pre><code>DS</code></pre> part.\nI believe the <pre><code>nop</code></pre> and <pre><code>xchg</code></pre> are only paddings. They appear after <pre><code>ret</code></pre>, and they aren't executed as part of the function.\n",
            "votes": "1",
            "user": "macro_controller",
            "time": "Jan 16, 2020 at 14:04",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Daniel Sloof",
                    "text": "<span class=\"comment-copy\">Quite off-topic, but any clue why they would pad 6 bytes with 2x nop and 2x xchg? Rather than 3x xchg or 6x nop.</span>",
                    "time": null
                }
            ]
        }
    ]
}