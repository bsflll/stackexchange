{
    "title": "Reversing PyArmor + Pyinstaller",
    "link": "https://reverseengineering.stackexchange.com/questions/25208/reversing-pyarmor-pyinstaller",
    "content": "Created an application, protected by PyArmor and used pyinstaller. I'm trying to reverse engineer it. So far I've decompiled the exe into pyc files but it's still pyarmor encrypted I can only see the loading of the encrypted bytes.\n\nIs there a way to decrypt PyArmor?\nIf not, it's my understanding it decrypts at runtime, how could I catch the unencrypted portion? I've been trying to use Ollydbg but can't figure out exactly how it works.\nThe program prints a Hello World but I can't seem to even find the instruction or the string in reference strings, any idea why or how to do it?\n",
    "votes": "1",
    "answers": 0,
    "views": "2k",
    "tags": [
        "python",
        "deobfuscation"
    ],
    "user": "Cromen",
    "time": "Jun 24, 2020 at 11:23",
    "comments": [
        {
            "user": "arman",
            "text": "In my opinion to find where your code is, Don't just use simple <pre><code>print hello world!</code></pre> instead use an API function and set break-point on that particular api. if you use an unique API function you will stop on your real-original API code that will return to your code.\n",
            "time": null
        }
    ],
    "answers_data": []
}