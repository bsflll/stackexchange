{
    "title": "How can you get the symbol visibility with radare?",
    "link": "https://reverseengineering.stackexchange.com/questions/19507/how-can-you-get-the-symbol-visibility-with-radare",
    "content": "I created a quick x86_64 Assembly file with NASM to generate the four different visibility classes for ELF 64. With <pre><code>readelf --symbols</code></pre> I get the Symbol Visibility in the <pre><code>Vis</code></pre> column: <pre><code>DEFAULT</code></pre>, <pre><code>INTERNAL</code></pre>, <pre><code>HIDDEN</code></pre>, <pre><code>PROTECTED</code></pre>.\n<pre><code>Symbol table '.symtab' contains 16 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     4: 000000000040007e     0 OBJECT  GLOBAL PROTECTED    1 gdp\n     5: 0000000000400082     0 FUNC    GLOBAL HIDDEN     2 gfh\n     6: 000000000040007a     0 OBJECT  GLOBAL INTERNAL    1 gdi\n     8: 000000000040007c     0 OBJECT  GLOBAL HIDDEN     1 gdh\n     9: 0000000000400083     0 FUNC    GLOBAL PROTECTED    2 gfp\n    11: 0000000000400078     0 OBJECT  GLOBAL DEFAULT    1 gdd\n    14: 0000000000400081     0 FUNC    GLOBAL INTERNAL    2 gfi\n    15: 0000000000400080     0 FUNC    GLOBAL DEFAULT    2 gfd\n</code></pre>\nThese symbols are encoded such that\n\nFirst character: <pre><code>g</code></pre> means they're <pre><code>GLOBAL</code></pre> (NASM) -- they all are.\nMiddle character: <pre><code>f</code></pre> means they're \"Function\", <pre><code>d</code></pre> means they're Data\nLast character: <pre><code>d</code></pre>efault, <pre><code>i</code></pre>nternal, <pre><code>h</code></pre>idden, <pre><code>p</code></pre>rotected.\n\nHowever with radare I can't figure out how to see the visibility that <pre><code>readelf --symbols</code></pre> shows is available. Using <pre><code>fs symbols; f</code></pre>\n<pre><code>0x0040007e 0 obj.gdp\n0x00400082 0 sym.gfh\n0x0040007a 0 obj.gdi\n0x0040007c 0 obj.gdh\n0x00400083 0 sym.gfp\n0x00400078 0 obj.gdd\n0x00400081 0 sym.gfi\n0x00400080 0 sym.gfd\n</code></pre>\nClearly, <pre><code>sym</code></pre> is a function and <pre><code>obj</code></pre> is data. But how can I get radare to show me the visibility?\n",
    "votes": "3",
    "answers": 1,
    "views": "1k",
    "tags": [
        "radare2",
        "elf",
        "symbols"
    ],
    "user": "Evan Carroll",
    "time": "Oct 3, 2018 at 19:16",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "Why do you think r2 would have this information? Visibility is important for compilers, not so much for RE (any symbol is good, the more the better)\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "afaik, Symbol Visibility is not available in radare2.\nThe closest to this you can get are the symbol bindings and types. You can do this with the <pre><code>is</code></pre> command which is responsible for showing symbols.\n<pre><code>$ r2 /bin/echo\n -- What do you want to debug today?\n[0x00401800]> is\n[Symbols]\n050 0x00007228 0x00607228 GLOBAL    OBJ    8 stdout\n051 0x00007220 0x00607220 GLOBAL    OBJ    8 program_invocation_short_name\n052 0x00007230 0x00607230   WEAK    OBJ    8 __progname_full\n053 0x00007230 0x00607230 GLOBAL    OBJ    8 __progname_full\n054 0x00007220 0x00607220   WEAK    OBJ    8 program_invocation_short_name\n055 0x00007240 0x00607240 GLOBAL    OBJ    8 stderr\n001 0x00001070 0x00401070 GLOBAL   FUNC   16 imp.__uflow\n002 0x00001080 0x00401080 GLOBAL   FUNC   16 imp.getenv\n003 0x00001090 0x00401090 GLOBAL   FUNC   16 imp.free\n...\n026 0x00001200 0x00401200 GLOBAL   FUNC   16 imp.calloc\n027 0x00001210 0x00401210 GLOBAL   FUNC   16 imp.strcmp\n028 0x00000000 0x00400000   WEAK NOTYPE   16 imp.__gmon_start__\n029 0x00001220 0x00401220 GLOBAL   FUNC   16 imp.memcpy\n...\n</code></pre>\nYou can also print it in a formatted Json format by appending <pre><code>j~{}</code></pre> to the command:\n<pre><code>[0x00401800]> isj~{}\n[\n  {\n    \"name\": \"stdout\",\n    \"demname\": \"\",\n    \"flagname\": \"obj.stdout\",\n    \"ordinal\": 50,\n    \"bind\": \"GLOBAL\",\n    \"size\": 8,\n    \"type\": \"OBJ\",\n    \"vaddr\": 6320680,\n    \"paddr\": 29224\n  },\n  {\n    \"name\": \"program_invocation_short_name\",\n    \"demname\": \"\",\n    \"flagname\": \"obj.program_invocation_short_name\",\n    \"ordinal\": 51,\n    \"bind\": \"GLOBAL\",\n    \"size\": 8,\n    \"type\": \"OBJ\",\n    \"vaddr\": 6320672,\n    \"paddr\": 29216\n  },\n  {\n    \"name\": \"__progname_full\",\n    \"demname\": \"\",\n    \"flagname\": \"obj.__progname_full\",\n    \"ordinal\": 52,\n    \"bind\": \"WEAK\",\n    \"size\": 8,\n    \"type\": \"OBJ\",\n    \"vaddr\": 6320688,\n    \"paddr\": 29232\n  },\n</code></pre>\n",
            "votes": "5",
            "user": "Megabeets",
            "time": "Oct 3, 2018 at 8:59",
            "is_accepted": true,
            "comments": []
        }
    ]
}