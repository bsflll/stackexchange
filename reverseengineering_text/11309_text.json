{
    "title": "ImpRec invalid NtdllDefWindowProc_A seem valid",
    "link": "https://reverseengineering.stackexchange.com/questions/11309/imprec-invalid-ntdlldefwindowproc-a-seem-valid",
    "content": "I have a problem that NtdllDefWindowProc_A function from ntdll is\ninside user32 thunk.\n\nFollowing @Jason Geffner answer in ImpRec invalid thunks seem valid I tried to change it to NtdllDefWindowProc_A from user32, but when I rebuild it after the fix with PE tool the file didn't work at all.\nThen I tried again and cut NtdllDefWindowProc_A function from the chunk,\nand the rebuild work and the file run without a problem.\nits probably not a good idea to cut NtdllDefWindowProc_A from the file....So what did I did wrong?\nThanks you all for the help :-)\n",
    "votes": "1",
    "answers": 1,
    "views": "709",
    "tags": [
        "debugging",
        "iat",
        "protection"
    ],
    "user": "Smiled_One",
    "time": "Apr 13, 2017 at 12:49",
    "comments": [],
    "answers_data": [
        {
            "content": "In your example, the static import <pre><code>user32!DefWindowProcA</code></pre> is getting forwarded to <pre><code>ntdll!NtdllDefWindowProc_A</code></pre>.\nYou need to double-click on the <pre><code>ntdll!NtdllDefWindowProc_A</code></pre> entry in Import REConstructor and change it to <pre><code>user32!DefWindowProcA</code></pre>.\n",
            "votes": "1",
            "user": "Jason Geffner",
            "time": "Nov 11, 2015 at 13:11",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Smiled_One",
                    "text": "<span class=\"comment-copy\">Its work! Thanks :-) How did you know to what name it should be change? command sense with experience? Or do you have a way that I will be able to use to?</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">Two ways to tell in this case: 1. The imports listed in your screenshot above are sorted alphabetically. If you look at the exports from <code>user32.dll</code>, you'll see <code>DefWindowProcA</code> is alphabetically between exports <code>DeleteMenu</code> and <code>DefMDIChildProcA</code>. 2. The function name <code>NtdllDefWindowProc_A</code> sounds like it might be a hook or forwarded-function for <code>DefWindowProcA</code>.</span>",
                    "time": null
                }
            ]
        }
    ]
}