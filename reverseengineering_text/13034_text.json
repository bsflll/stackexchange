{
    "title": "How to get IDA Pro to understand a virtual function table?",
    "link": "https://reverseengineering.stackexchange.com/questions/13034/how-to-get-ida-pro-to-understand-a-virtual-function-table",
    "content": "I'm reversing an old DirectDraw game that uses DirectX 7.\nI have a <pre><code>LPDIRECTDRAWSURFACE7 g_lpDDSBack</code></pre> and <pre><code>g_lpDDSBack->BltFast</code></pre> is being called but this is how it is decompiled in HexRays:\n<pre><code>(*(int (__stdcall **)(struct IDirectDrawSurface7Vtbl *, int, int, LPDIRECTDRAWSURFACE7, RECT *, MACRO_DDBLTFAST))((int (__stdcall **)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD))g_lpDDSBack->QueryInterface + 7))(\n                                      g_lpDDSBack,\n                                      x,\n                                      y,\n                                      pgf2->lpDDSrcSurface,\n                                      &pgf2->rect,\n                                      DDBLTFAST_SRCCOLORKEY);\n</code></pre>\nFor reference, here is the interface:\n<pre><code>DECLARE_INTERFACE_( IDirectDrawSurface7, IUnknown )\n{\n    /*** IUnknown methods ***/\n    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID FAR * ppvObj) PURE; // 0\n    STDMETHOD_(ULONG,AddRef) (THIS)  PURE; // 1\n    STDMETHOD_(ULONG,Release) (THIS) PURE; // 2\n    /*** IDirectDrawSurface methods ***/\n    STDMETHOD(AddAttachedSurface)(THIS_ LPDIRECTDRAWSURFACE7) PURE; // 3\n    STDMETHOD(AddOverlayDirtyRect)(THIS_ LPRECT) PURE; // 4\n    STDMETHOD(Blt)(THIS_ LPRECT,LPDIRECTDRAWSURFACE7, LPRECT,DWORD, LPDDBLTFX) PURE; // 5\n    STDMETHOD(BltBatch)(THIS_ LPDDBLTBATCH, DWORD, DWORD ) PURE; // 6\n    STDMETHOD(BltFast)(THIS_ DWORD,DWORD,LPDIRECTDRAWSURFACE7, LPRECT,DWORD) PURE; // 7\n    // etc ...\n</code></pre>\nSo from the HexRays code <pre><code>g_lpDDSBack->QueryInterface + 7</code></pre>, we can see it's calling <pre><code>g_lpDDSBack->BltFast</code></pre>. But why doesn't HexRays directly call <pre><code>BltFast</code></pre>?\n",
    "votes": "5",
    "answers": 2,
    "views": "2k",
    "tags": [
        "ida",
        "c",
        "hexrays",
        "vtables",
        "virtual-functions"
    ],
    "user": "user16729",
    "time": "Jul 14, 2016 at 4:34",
    "comments": [],
    "answers_data": [
        {
            "content": "HexRays doesn't call it because it doesn't know what is the value of <pre><code>g_lpDDSBack->QueryInterface</code></pre> in the common case. \nGenerally speaking you can define a structure as a <pre><code>QueryInterface</code></pre> type, where members of this structure are named according to the related function names and than you'll see the call as <pre><code>g_lpDDSBack->QueryInterface->BltFast</code></pre> .\n",
            "votes": "2",
            "user": "w s",
            "time": "Jul 14, 2016 at 6:43",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "It turned out to be a bug in IDA pro. I can't seem to edit my original question so first, I want to point out an error I made in the original question.\n\nWhen <pre><code>g_lpDDSBack</code></pre> is defined as <pre><code>struct IDirectDrawSurface7Vtbl *g_lpDDSBack;</code></pre>, then this was the output HexRays was showing:\n<pre><code>(*(int (__stdcall **)(struct IDirectDrawSurface7Vtbl *, int, int, LPDIRECTDRAWSURFACE7, RECT *, MACRO_DDBLTFAST))((int (__stdcall **)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD))g_lpDDSBack->QueryInterface + 7))(\n                                      g_lpDDSBack,\n                                      x,\n                                      y,\n                                      pgf2->lpDDSrcSurface,\n                                      &pgf2->rect,\n                                      DDBLTFAST_SRCCOLORKEY);\n</code></pre>\n\nWhen <pre><code>g_lpDDSBack</code></pre> is defined as <pre><code>LPDIRECTDRAWSURFACE7 g_lpDDSBack;</code></pre>, then this was the output HexRays was showing:\n<pre><code>(*((int (__stdcall **)(int, int, int, _DWORD, int, signed int))g_lpDDSBack->lpVtbl + 7))(\n                       g_lpDDSBack,\n                       x,\n                       y,\n                       pgf2->lpDDSrcSurface,\n                       &pgf2->rect,\n                       DDBLTFAST_SRCCOLORKEY);\n</code></pre>\nAlright, now here are the instructions to fixing the bug (<pre><code>g_lpDDSBack</code></pre> is defined as <pre><code>LPDIRECTDRAWSURFACE7 g_lpDDSBack;</code></pre>):\n\nSelect <pre><code>lpVtbl</code></pre> in <pre><code>g_lpDDSBack->lpVtbl</code></pre>, press y and then copy the contents of the textbox to a notepad. In this case, the contents were <pre><code>struct IDirectDrawSurface7::IDirectDrawSurface7Vtbl *lpVtbl</code></pre>.\nChange the type to <pre><code>int lpVtbl</code></pre> and press OK\nPress y again on <pre><code>lpVtbl</code></pre> and change the type back to its original type stored in notepad. In this case, it is <pre><code>struct IDirectDrawSurface7::IDirectDrawSurface7Vtbl *lpVtbl</code></pre>.\n\nAfter doing this, this is how it looks like in HexRays (you might have to press F5 first):\n<pre><code>g_lpDDSBack->lpVtbl->BltFast(g_lpDDSBack,\n                                      x,\n                                      y,\n                                      pgf2->lpDDSrcSurface,\n                                      &pgf2->rect,\n                                      DDBLTFAST_SRCCOLORKEY);\n</code></pre>\n",
            "votes": "0",
            "user": "user16738",
            "time": "Jul 14, 2016 at 19:44",
            "is_accepted": false,
            "comments": []
        }
    ]
}