{
    "title": "What does this mean in OllyDbg: function+hex value",
    "link": "https://reverseengineering.stackexchange.com/questions/18765/what-does-this-mean-in-ollydbg-functionhex-value",
    "content": "Im trying to debug a binary - and I wanted to know if someone can explain what does it mean when there's a value 'added' on to a function. \neg: <pre><code>CRYPTSP.CryptDuplicateHash+0C</code></pre>\nWhat does the '0C' mean in this case?\nThanks!\n",
    "votes": "2",
    "answers": 1,
    "views": "91",
    "tags": [
        "ollydbg",
        "debugging"
    ],
    "user": "Chuck Nurit",
    "time": "Jul 12, 2018 at 10:49",
    "comments": [
        {
            "user": "Jongware",
            "text": "Do you see this near a line that is exactly 12 source code bytes from the start of the function with that name?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "This indicates the offset within the function.\nIf you wish to reference an instruction in an executable binary, the most basic and straight-forward method would be using it's full address. However especially with ASLR enabled, different versions, RVA vs file offsets and other nuances it may be more useful to reference an instruction relative to the function start address.\nIn the case of <pre><code>CRYPTSP.CryptDuplicateHash+0C</code></pre>, we can easily see the address is at offset <pre><code>0x0C</code></pre> within the <pre><code>CryptDuplicateHash</code></pre> function inside a module called <pre><code>CRYPTSP</code></pre>.\n",
            "votes": "3",
            "user": "NirIzr",
            "time": "Jul 12, 2018 at 10:53",
            "is_accepted": true,
            "comments": []
        }
    ]
}