{
    "title": "Is `movq rax, xmm0` buggy in Radare2?",
    "link": "https://reverseengineering.stackexchange.com/questions/24895/is-movq-rax-xmm0-buggy-in-radare2",
    "content": "Why doesn't <pre><code>rax</code></pre> get loaded from <pre><code>xmm0</code></pre> here?  <pre><code>radare2</code></pre> bug?\nGitHub issue `movq rax, xmm0` doesn't work in native debugger filed.\n<pre><code>[0x0003b0e0]> drr\nrole reg    value            ref\n――――――――――――――――――――――――――――――――\nSN   rax    0                 0 R 0x3010102464c457f\n     rbx    0                 0 R 0x3010102464c457f\nA3   rcx    0                 0 R 0x3010102464c457f\nA2   rdx    7ff0000000000000 \nA1   rsi    0                 0 R 0x3010102464c457f\nA0   rdi    0                 0 R 0x3010102464c457f\nA4   r8     0                 0 R 0x3010102464c457f\nA5   r9     0                 0 R 0x3010102464c457f\nA6   r10    0                 0 R 0x3010102464c457f\nA7   r11    0                 0 R 0x3010102464c457f\n     r12    0                 0 R 0x3010102464c457f\n     r13    0                 0 R 0x3010102464c457f\n     r14    0                 0 R 0x3010102464c457f\n     r15    0                 0 R 0x3010102464c457f\nPC   rip    3b0ee             241902 (.text) sym.finite R X 'movq rax, xmm0'\nBP   rbp    10078000          268926976 R W 0x0 -->  0 R 0x3010102464c457f\n     rflags 0                 0 R 0x3010102464c457f\nSP   rsp    10078000          268926976 R W 0x0 -->  0 R 0x3010102464c457f\n[0x0003b0e0]> dr xmm0\n0xaaaaaaaaaaaaaaaa5555555555555555\n[0x0003b0e0]> ds\n[0x0003b0e0]> drr\nrole reg    value            ref\n――――――――――――――――――――――――――――――――\nSN   rax    8000000000000000 \n     rbx    0                 0 R 0x3010102464c457f\nA3   rcx    0                 0 R 0x3010102464c457f\nA2   rdx    7ff0000000000000 \nA1   rsi    0                 0 R 0x3010102464c457f\nA0   rdi    0                 0 R 0x3010102464c457f\nA4   r8     0                 0 R 0x3010102464c457f\nA5   r9     0                 0 R 0x3010102464c457f\nA6   r10    0                 0 R 0x3010102464c457f\nA7   r11    0                 0 R 0x3010102464c457f\n     r12    0                 0 R 0x3010102464c457f\n     r13    0                 0 R 0x3010102464c457f\n     r14    0                 0 R 0x3010102464c457f\n     r15    0                 0 R 0x3010102464c457f\nPC   rip    3b0f3             241907 (.text) sym.finite R X 'and rax, rdx'\nBP   rbp    10078000          268926976 R W 0x0 -->  0 R 0x3010102464c457f\n     rflags 0                 0 R 0x3010102464c457f\nSP   rsp    10078000          268926976 R W 0x0 -->  0 R 0x3010102464c457f\n[0x0003b0e0]> \n</code></pre>\n",
    "votes": "1",
    "answers": 1,
    "views": "184",
    "tags": [
        "radare2",
        "debuggers",
        "x86-64",
        "emulation"
    ],
    "user": "rickhg12hs",
    "time": "May 6, 2020 at 10:28",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "can you share the binary?\n",
            "time": null
        },
        {
            "user": "rickhg12hs",
            "text": "@PawełŁukasik  It's the <pre><code>finite</code></pre> function in <pre><code>/lib64/libm-2.28.so</code></pre>.\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "Please add an answer with the resolution.\n",
            "time": null
        },
        {
            "user": "rickhg12hs",
            "text": "@IgorSkochinsky Done!  I'll wait a day to accept it in case somebody else writes a better answer.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Is <pre><code>movq rax, xmm0</code></pre> buggy in Radare2?\n\nNo, it's just not fully implemented in all debuggers yet.\nNative Debugger Works!\nThis instruction works fine using the native debugger.  The native debugger is launched with <pre><code>r2 -d yourFileGoesHere</code></pre>.  Alternatively, if you are already in <pre><code>r2</code></pre> looking at the file, but <pre><code>r2</code></pre> wasn't launched with the <pre><code>-d</code></pre> switch, the file can be reopened in debug mode with the <pre><code>r2</code></pre> command <pre><code>ood</code></pre> (o_pen o_penned file with the d_ebugger ?).\nESIL Emulator doesn't fully support SIMD yet.\nSee Github issues #4327 and #11421\nThe \"bug\" noted in the question was actually demonstrating that the ESIL Emulator doesn't fully support the <pre><code>xmm0</code></pre> register yet.\nSummary\nThe native debugger accurately executes the <pre><code>movq rax, xmm0</code></pre> instruction.  The ESIL Emulator does not accurately emulate the <pre><code>movq rax, xmm0</code></pre> instruction yet.\n",
            "votes": "1",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": true,
            "comments": []
        }
    ]
}