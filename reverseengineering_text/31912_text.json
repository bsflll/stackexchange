{
    "title": "How to reverse Engineer a Struct in IDA Pro?",
    "link": "https://reverseengineering.stackexchange.com/questions/31912/how-to-reverse-engineer-a-struct-in-ida-pro",
    "content": "How to identify and define a struct in IDA pro Decompiling during reverse engineering?\nPlease explain the easiest way to figure out the struct in IDA Pro decompilation!\nTo make life easier are there any IDA Pro scripts to automate this task?\n",
    "votes": "3",
    "answers": 1,
    "views": "691",
    "tags": [
        "disassembly",
        "binary-analysis",
        "malware",
        "dynamic-analysis"
    ],
    "user": "Jose I. Hughes",
    "time": "May 27, 2023 at 21:35",
    "comments": [],
    "answers_data": [
        {
            "content": "How-to\nTo define a valuable structure you need to find its length and memory layout first. If you're researching a C++ binary, this is easiest done by finding the constructor(s) of the structure or its parent and then following all usage of the data across the binary.\nStatic analysis\nTo define a new structure type, open <pre><code>Local Types</code></pre> or <pre><code>Structures</code></pre> view and press <pre><code>Insert</code></pre> to add the structure definition.\nYou can also create them from pseudocode view by right-clicking the desired variable name and choosing <pre><code>Create new struct type</code></pre> or apply an existing type with <pre><code>Convert to struct *</code></pre>.\nThis could be automated using ida_struct and/or ida_typeinf modules.\nDebugging\nI don't think IDA has any utilities to help you identify or create structures at runtime, but there exist 3rd party tools such as ReClassEx designed to help with raw memory dump structuring if you need it.\n",
            "votes": "2",
            "user": "mimak",
            "time": "May 30, 2023 at 12:28",
            "is_accepted": true,
            "comments": []
        }
    ]
}