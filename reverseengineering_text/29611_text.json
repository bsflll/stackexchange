{
    "title": "How is the data section dealt with in PIE?",
    "link": "https://reverseengineering.stackexchange.com/questions/29611/how-is-the-data-section-dealt-with-in-pie",
    "content": "According to my understanding, for the .rodata, the compiler can simply put it \"next\" to the .text section, because it shares the same page permissions, so wherever the binary is loaded, an instruction can find the global vars in the .rodata  through RIP-relative adressing\nBut what about the data and bss since they are located at random distances to the .text section ?\n",
    "votes": "2",
    "answers": 1,
    "views": "120",
    "tags": [
        "pie"
    ],
    "user": "hehehe",
    "time": "Nov 24, 2021 at 23:15",
    "comments": [],
    "answers_data": [
        {
            "content": "AFAIK in the current ELF PIE implementations all sections/segments are assumed to be at a fixed offset from the load base, so RIP relative addressing continues to work.\nIn theory it is possible to place the r/w data area at a different offset but it would require major changes in the compiler and dynamic linker behavior. Also, the file format doesnâ€™t really foresee this possibility.\nFrom the major OSes I think currently only macOS does this (for the Mach-O format).\n",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Nov 27, 2021 at 3:12",
            "is_accepted": false,
            "comments": []
        }
    ]
}