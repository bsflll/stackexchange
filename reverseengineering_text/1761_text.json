{
    "title": "How to capture an \"in-memory\" malware in MS-Windows?",
    "link": "https://reverseengineering.stackexchange.com/questions/1761/how-to-capture-an-in-memory-malware-in-ms-windows",
    "content": "I have an infected MS-Windows 7 machine with an in-memory malware, shutting it down will probably make it disappear and I would like to get the malware in a more convenient format to perform some analysis on it.\nWhat are the different in-memory malware and what kind of methods do you recommend for each type of in-memory malware ?\n",
    "votes": "14",
    "answers": 5,
    "views": "3k",
    "tags": [
        "malware",
        "digital-forensics"
    ],
    "user": "perror",
    "time": "Apr 14, 2013 at 9:41",
    "comments": [],
    "answers_data": [
        {
            "content": "You should proceed in two steps: \nFirst: You need to have a look on MoonSols Windows Memory Toolkit Community Edition.  It will allow You to dump memory to file for further analysis\nSecond: then You'll need Volatility Toolkit to analyze dump file and extract info, binaries, DLLs and more from there. \nFor great sample: of using Volatility - have a look on Andre DiMino's blog post about Cridex\n",
            "votes": "20",
            "user": "Denis Laskov",
            "time": "Apr 14, 2013 at 9:49",
            "is_accepted": true,
            "comments": [
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">I managed to use the volatility toolkit and extracted the binary malware. Thanks a lot for the pointers.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "I agree with Denis' answer, but for me, Step 0 is to start FlyPaper, from HBGary.\n\nHBGary Flypaper is an invaluable tool in your fight against malware.\n  Most malware is designed into two or three stage deployment. First, a\n  dropper program will launch a second program, and then delete itself.\n  The second program may take additional steps, such as injecting DLL's\n  into other processes, loading a rootkit, etc. These steps are taken\n  quickly, and it can be difficult for an analyst to capture all of the\n  binaries used in the deployment. HBGary Flypaper solves this problem\n  for the analyst.\nHBGary Flypaper loads as a device driver and blocks all attempts to\n  exit a process, end a thread, or delete memory. All components used by\n  the malware will remain resident in the process list, and will remain\n  present in physical memory. The entire execution chain is reported so\n  you can follow each step. Then, once you dump physical memory for\n  analysis, you have all the components 'frozen' in memory - nothing\n  gets unloaded. All of the evidence is there for you.\n",
            "votes": "9",
            "user": "Mick",
            "time": "Apr 14, 2013 at 13:04",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Denis Laskov",
                    "text": "<span class=\"comment-copy\">Also good one, thx!</span>",
                    "time": null
                },
                {
                    "user": "alexanderh",
                    "text": "<span class=\"comment-copy\">Does FlyPaper exist anymore? I can't seem to find a download link.</span>",
                    "time": null
                },
                {
                    "user": "Mick",
                    "text": "<span class=\"comment-copy\">@alexanderh Yes, but looks like now you have to register on their website to get it: <a href=\"http://www.hbgary.com/free_tools\" rel=\"nofollow noreferrer\">hbgary.com/free_tools</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "As others have mentioned the first thing you should do is dump the memory with MoonSols. This will allow you to do  memory analysis using Volatility later. When it comes to malware analysis I find IDA the most useful. In order for it be useful you will need a process dump and a way to rebuild the import table. If the malware can spread to other processes I would create a dummy process, dump it then rebuild the import table. If for example the malware injects into iexplore.exe, open up Ollydbg change the debugging options events to System Breakpoint, open up iexplore.exe, then search for memory of RWX (described here). Check the contents of the memory, if it contains your memory malware dump the process and then rebuild the import table. If you need to manually rebuild the import table you can use the following script. If the process does not spread you could attach to the process via a debugger. \nDisclaimer: I am the author of those links.\n",
            "votes": "5",
            "user": "alexanderh",
            "time": "Apr 17, 2013 at 17:16",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "MoonSols and Volatility are one option.  \nAnother set of options are Redline and Memoryze, both of which are from Mandiant.  \nAn added bonus with Memoryze is that memory acquisition is included.\n",
            "votes": "4",
            "user": "RobotHumans",
            "time": "Apr 14, 2013 at 17:44",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "Moonsols is a great option, but I've noticed that there is no longer an option to purchase it and it makes me wonder if support has been stopped.\nIn my opinion, the best way to get started is with win32dd, win64dd, or mdd.  Another option that is more automated is DumpIt (created by the maker of Moonsols).  I prefer mdd for most tasks, but I have not tested it on 64bit systems.  \nDepending on what you're looking for, I tend to use file carvers like Scalpel to pick out everything that is recognizable.  Volatility is nice too, but personally I think learning how to recognize the file structures in a hex editor and carving them out will lead you to a better understanding of the dumped memory and what you're actually looking at.\nEDIT: \nThe newest version of scalpel is available in Backtrack r3, I just pulled it from there. As with the others, I have older copies that I use and they work just fine. DumpIt is still available at the MoonSols site and works great for 32 or 64bit, give it a shot: moonsols.com/2011/07/18/moonsols-dumpit-goes-mainstream\n",
            "votes": "3",
            "user": "Brandon  Young",
            "time": "Apr 17, 2013 at 17:32",
            "is_accepted": false,
            "comments": [
                {
                    "user": "cb88",
                    "text": "<span class=\"comment-copy\">most of the tools you have mentioned are no longer available at thier official sites. Scaple for instance gives a 404, win32dd etc points to newer Moonsools tools.</span>",
                    "time": null
                },
                {
                    "user": "Brendan Dolan-Gavitt",
                    "text": "<span class=\"comment-copy\">Also, mdd is <i>not</i> a good choice; it's no longer actively developed (as far as I know) and the most recent version <a href=\"http://lists.volatilesystems.com/pipermail/vol-users/2012-August/000588.html\" rel=\"nofollow noreferrer\">has outstanding bugs that result in corrupt images</a>.</span>",
                    "time": null
                }
            ]
        }
    ]
}