{
    "title": "Anti-Debugging technique in Os-monitor [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/9195/anti-debugging-technique-in-os-monitor",
    "content": "Closed. This question needs to be more focused. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Update the question so it focuses on one problem only by editing this post.\n\n\nClosed 9 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nIm trying to bypass some trial functionnalities in os-monitor, the point is, after running it through ollydbg, a notification appears to tell that executable segment is encrypted with exe-packing algorithm.\n\nI ignored that, and continue to execute it, then another notification said that program halted because a debugger is detected.\n\nCan anyone enlighten me of what type of antidebugging technique is used in this software?\n",
    "votes": "1",
    "answers": 1,
    "views": "644",
    "tags": [
        "ollydbg"
    ],
    "user": "Abr001am",
    "time": "9 years ago",
    "comments": [
        {
            "user": "blabb",
            "text": "the first msgbox is from ollydbg warning that the exe is packed the second one is from the application and it may be using almost infinite varieties of antidebugging techniques. look for peter ferries paper on anti debugging techniques  for an overview of antidebugging implementations that could be used in that software\n",
            "time": null
        },
        {
            "user": "Abr001am",
            "text": "@blabb which PE decryption tool you recommend me, in order to unpack this code? and how would i know which technique is used to prevent debugging.\n",
            "time": null
        },
        {
            "user": "blabb",
            "text": "there is no shortcut to deal with unknown your query is too broad to fit here\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Can anyone enlighten me of what type of antidebugging technique is\n  used in this software?\n\nYes, that <pre><code>Protection Error</code></pre> message is from ASProtect's unpacking stub.\nFrom http://www.aspack.com/asprotect32.html, it features the following antidebugging techniques:\n\n\ncompression of the application\nencryption of the application\ncounteraction to dumping application memory using tools like\n  ProcDump\napplication integrity check\ncounteraction to debuggers\n  and disassemblers \ncounteraction to memory patching \nAPI for\n  interaction between application and protection routines \ncreation and\n  verification of registration keys using public keys encryption\n  algorithms \nkeeping of the database and checkup of \"stolen\" (illegal)\n  registration keys \npossibility to create evaluation (trial) versions,\n  that limit application functions based on evaluation time and the\n  number of runs left \nexpose nag-screens \ngenerating of registration\n  keys, based on the specific computer system.\n",
            "votes": "3",
            "user": "Jason Geffner",
            "time": "Jun 21, 2015 at 22:31",
            "is_accepted": true,
            "comments": []
        }
    ]
}