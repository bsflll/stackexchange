{
    "title": "Unknown 160bit challenge-response (36V ebike battery protocol)",
    "link": "https://reverseengineering.stackexchange.com/questions/24833/unknown-160bit-challenge-response-36v-ebike-battery-protocol",
    "content": "I'm currently trying to build a custom battery pack for an electric bike.\nThe bike uses 36V batteries from Panasonic (also sold under OEM brands Victoria, Kalkhoff, Rahleigh, Flyer, Kettler).   \nWe've already established that the battery speaks a custom UART protocol with the bike and the charger.\nThe protocol itself is easy to understand and we've already understood most of it.\nThere seems to be some sort of challenge-response authentication, though.   \nThe packet format looks as follows:   \n2 byte preamble (always 2x FF)\n1 byte length (not including preamble, length, command and checksum)\n1 byte command\nn byte payload data, varying length\n1 byte checksum = ((0x100 - sum of data bytes) & 0xFF)  \nExample packets, charger sending Challenge-Response to battery:\nQ: <pre><code>FF FF 14 B2 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 3A</code></pre>\nR: <pre><code>FF FF 14 D2 F9 33 FF A6 C6 6B 39 26 EF 82 BB 6E DF 63 08 05 8E 96 96 D2 44</code></pre> \nQ: <pre><code>FF FF 14 B2 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 39</code></pre>\nR: <pre><code>FF FF 14 D2 AE F8 49 86 53 4C 41 87 2D 67 CD 74 5D 91 5E 72 79 6A CD C4 37</code></pre> \nQ: <pre><code>FF FF 14 B2 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 96</code></pre>\nR: <pre><code>FF FF 14 D2 58 3A EE ED C2 F5 C3 B3 95 72 F7 00 25 3A D7 4F 76 C1 2B 96 05</code></pre> \nQ: <pre><code>FF FF 14 B2 AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA AA F2</code></pre>\nR: <pre><code>FF FF 14 D2 AB 01 C4 32 24 1D EF 96 57 5E 7F F0 8A 67 E8 71 7D 16 E3 E6 E8</code></pre> \nAs you can see, there is a 20 byte / 160 bit code in the challenge as well as in the response.\nSingle bit changes in the input lead to a completly different output.  \nWe have asked the real battery with a lot of different challenges and logged the results.\nHere is a .csv with ~200k challenge-response pairs:\nhttps://tbspace.de/content/downloads/flyer_challenges_consecutive.csv.zip\n(dump also contains shorter status information packets, these need to be ignored)\nUnfortunately the entropy of the resulting data seems to be 1.0, which doesn't look too good.\nTogether with the 160bit data length, this might point to a cryptographic hash function like SHA1.  \nThe battery uses a Renesas M37512 8-bit microcontroller (seems to be based on the 6502).  \nI'm out of ideas on how to figure out how this challenge-response system works.\nAny ideas and suggestions are appreciated.  \nThanks!\n",
    "votes": "0",
    "answers": 0,
    "views": "162",
    "tags": [
        "firmware",
        "embedded"
    ],
    "user": "Manawyrm",
    "time": "Apr 26, 2020 at 11:49",
    "comments": [
        {
            "user": "Dan",
            "text": "The 160 bits certainly seems to point to SHA-1, along with the high-entropy response.  I've seen schemes like this where both parties have a hard-coded \"key\" that they pre-pend and/or append to the challenge, thus you still need the \"key\".  Could also be something like HMAC-SHA1 with a pre-shared key.  Probably need to get into the firmware on the 8-bit MCU to confirm.  One easy thing to try is take the challenge and try pre-pending a byte 00-FF, see if that works.  Also try appending 00-FF (one byte at a time).  That's only 512 tries, test against your data set.  Good luck!\n",
            "time": null
        },
        {
            "user": "ddddjj",
            "text": "I liked you investigator work very much and I have a practical question to you. From your description it looks like you separated cells from BMS and after that made BMS work again using pin T. Did I get that right? Because some BMS refuse to work after you separate cells. I'm afraid to work on my battery because not sure I can get BMS work again after replacing cells. Thanks!\n",
            "time": null
        },
        {
            "user": "Manawyrm",
            "text": "@ddddjj After cell replacement, the BMS will need to be connected to the charger to activate it again. It'll work fine after that.\n",
            "time": null
        }
    ],
    "answers_data": []
}