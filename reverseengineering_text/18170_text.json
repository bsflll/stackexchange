{
    "title": "What are the tools use for reverse engineering android apk?",
    "link": "https://reverseengineering.stackexchange.com/questions/18170/what-are-the-tools-use-for-reverse-engineering-android-apk",
    "content": "Currently, I only know about apktool.\nBut is there any tools that helps in checking the code, editing it and compiling it back to apk?\n",
    "votes": "17",
    "answers": 7,
    "views": "60k",
    "tags": [
        "android",
        "apk"
    ],
    "user": "Daniel Mana",
    "time": "May 4, 2018 at 15:18",
    "comments": [
        {
            "user": "atdre",
            "text": "github.com/cryptax/androidre\n",
            "time": null
        },
        {
            "user": "user10886651",
            "text": "\"Apk editor pro\" overrules both suggestions & it's so much faster too. Show java is okay for observation.\n",
            "time": null
        },
        {
            "user": "shizhen",
            "text": "See github repo: Android Apk reverse engineering using Apktool and Frida\n",
            "time": null
        },
        {
            "user": "Muhammad Furqan Ul Haq",
            "text": "Recently, I had compiled an ultimate list of 47 best APK decompilers on my website. I arranged them into 4 different sections. 1. Open Source APK Decompilers 2. Online APK Decompilers 3. APK Decompiler for Windows, Mac or Linux 4. APK Decompiler Apps I hope this collection will be helpful to you. Link: https://www.edopedia.com/blog/best-apk-decompilers/\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "There are many tools, some are more low-level and some build on top of the low-level tools to make nicer and more complete tools. \nHere are my favorites:  \n\nJADX - GUI (and Command line) to produce Java source code from Android Dex and Apk files https://github.com/skylot/jadx \nAndroid MultiTool - decompile/recompile and sign applications + jar framework files https://forum.xda-developers.com/showthread.php?t=2326604\nApktool - Cmd tool to decompile/recompile applications and there resources. Among other things wraps Samli/Baksmali https://ibotpeaches.github.io/Apktool/\nSmali/Baksmali - Convert binary <pre><code>.dex</code></pre> files to textual <pre><code>.smali</code></pre> classes. Can be used in after unzipping the APK manually. More here: Repackaging APK file using baksmali and smali\nJEB - Professional tool for reversing android (and many other) applications https://www.pnfsoftware.com/\n\nAlso look promising:  \n\nAPK Studio - IDE for reverse-engineering (decompiling/editing) & recompiling of Android applications https://forum.xda-developers.com/showthread.php?t=2493107\n\nEdit November 2019: \n\nBytecode Viewer - A user friendly Java reverse engineering suite, similar to JADX. https://bytecodeviewer.com/\n",
            "votes": "29",
            "user": "Gal",
            "time": "Nov 24, 2019 at 9:45",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "If you want to modify code, then the only real option I know of is <pre><code>bak/smali</code></pre>, which <pre><code>apktool</code></pre> provides a helpful wrapper for. \nIf you merely want to understand the code, there's lots of options. For example, you could use Enjarify or dex2jar to translate it to a jar file and then use any Java bytecode tools or decompilers. There's also a few decompilers with native Android support.\n",
            "votes": "7",
            "user": "Antimony",
            "time": "May 5, 2018 at 0:49",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Hyeonseo Yang",
                    "text": "<span class=\"comment-copy\">Colud you mention the decompilers that support ndk?</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "On desktop\nYou can try Antimony's answer.\nAlso check this comment(which states using dex2jar on .dex file and JD-GUI on jar file):\nIf you want to decompile an apk directly on your phone, show java can be a good option. You can just select an apk file and wait. Then you can get rhe java source code of the app. Though it has much rooms for improvement, its handy.\nWHEN YOU ENCOUNTER JNI/NDK\nYou have to decompile the <pre><code>.so</code></pre> files inside the <pre><code>lib</code></pre> folder. So you may have to decompile them, which are usually arm linux shared libraries.\nI am currently developing a helper app that helps you decompile native library targeted ARM and x86, and other CPU instructions.\nReleases\nAndroid-Disassembler release.\nOr you can visit the git repository (Android-Disassembler).\nHowever In general,\nUnfortunately, some developers prevent or make it hard to decompile the apk file, by changing class, methods and variables' names. So you may have some hard time as many reversing routines do.\nHope my answer helped anyway.\n",
            "votes": "4",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "GDA: supports APK, DEX, ODEX and OAT files. A Dalvik bytecode decompiler was written entirely in c++. So, unlike most app analysis tools, GDA does not need to rely on the Java platform, And as the use of the Bytecode directly translated into Java code without Smali code translation. So it is more succinct, more portable and faster. \nhttps://github.com/charles2gan/GDA-android-reversing-Tool\n",
            "votes": "2",
            "user": "charles2gan",
            "time": "May 17, 2019 at 8:21",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "MARA_Framework\nMobSF\nApktool\napk-deguard\nAPK Easy Tool\n",
            "votes": "1",
            "user": "Morteza M",
            "time": "Jan 14, 2020 at 9:46",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "any tools that helps in checking the code, editing it and compiling it back to apk?\n\nSee https://buildapks.github.io/buildAPKs/ for information regarding the tools you are seeking.\n",
            "votes": "0",
            "user": "S D Rausty",
            "time": "Jul 19, 2019 at 5:28",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">please elaborate a bit more about those tools</span>",
                    "time": null
                },
                {
                    "user": "S D Rausty",
                    "text": "<span class=\"comment-copy\">Compiling it back to APK can be accomplished with build scripts such as <code>build.one.bash</code> and <code>build.in.dir.bash</code>.  Tools that help in checking code and editing are available at <a href=\"https://github.com/BuildAPKs/buildAPKs.developers.tools\" rel=\"nofollow noreferrer\">github.com/BuildAPKs/buildAPKs.developers.tools</a> and to build these tools on device you can use <code>~/buildAPKs/build.developers.tools.bash</code> once BuildAPKs is installed.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "APK Editor Pro\nIt is really good an its in android:\nhttps://dl2.androidtime.co/uploads/app/APK-Editor-Pro-1.9.10-Mod(www.Androidtime.co).apk\n",
            "votes": "0",
            "user": "KingAmir",
            "time": "Jan 14, 2020 at 11:50",
            "is_accepted": false,
            "comments": []
        }
    ]
}