{
    "title": "funcion calls extern function without body",
    "link": "https://reverseengineering.stackexchange.com/questions/30047/funcion-calls-extern-function-without-body",
    "content": "I wanted to look at how does the Windows API get the size of a file, so I opened kernel32.dll in a disassembler. I searched for GetFileSizeEx, and it seems to call a stub(?), but the disassembler cannot find the body of that function. Can you shed some light on what am I looking at?\nGetFileSizeEx\n<pre><code>.text:0000000180024D90 GetFileSizeEx   proc near          \n.text:0000000180024D90                                     \n.text:0000000180024D90                 jmp     cs:GetFileSizeEx_0\n.text:0000000180024D90 GetFileSizeEx   endp\n</code></pre>\nNavigating to GetFileSizeEx_0 looks like this:\n<pre><code>.idata:0000000180082078 ; BOOL __stdcall GetFileSizeEx_0(HANDLE hFile, PLARGE_INTEGER lpFileSize)\n.idata:0000000180082078                 extrn GetFileSizeEx_0:qword\n</code></pre>\nThere is no function body whatsoever. Where can I find the functionality regarding this, or where does it call forward to?\nEdit:\nThe idata section seems to be for imports, but it is still uncreal where does it import the GetFileSizeEx_0 function.\nI have found the library it gets the import from, but the function body is not there.\n<pre><code>.rdata:0000000180001A27 GetFileSizeEx   db 'kernel32.GetFileSizeEx',0\n.rdata:0000000180001088 off_180001088   rva GetFileSizeEx\n</code></pre>\nWhat is this RVA part of the rdata section?\nI found the actual function body in KernelBase.dll, but I don't understand from the above, how should I have come to this conclusion.\n",
    "votes": "1",
    "answers": 1,
    "views": "78",
    "tags": [
        "windows",
        "dll",
        "winapi"
    ],
    "user": "geo10",
    "time": "Feb 15, 2022 at 10:05",
    "comments": [
        {
            "user": "blabb",
            "text": "most of the apis in kernel32.dll are stub to thier implementation in kernelbase.dll\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "Please donâ€™t edit questions so much as to invalidate answers. Better add new information or ask a new question if it changed completely. Do you see GetFileSizeEx in the Imports list of kernel32.dll?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<pre><code>.idata</code></pre> section is similar to ELF's <pre><code>.got</code></pre> and contains pointers to external function, although IDA internally pretends that they're functions. They're normally grouped by a DLL/library from each they're imported.\nNormally, if you scroll up from the import pointer, you should see something like\n<pre><code>.idata:000000014008F030 ;\n.idata:000000014008F030 ; Imports from KERNEL32.dll\n.idata:000000014008F030 ;\n</code></pre>\nAlternatively, look for GetFileSizeEx in the Imports view, the Library column should have the same information.\nThe export entry pointing to a string is a special case called export forwarding. In case of <pre><code>'kernel32.GetFileSizeEx'</code></pre>, it means that the actual implementation is <pre><code>GetFileSizeEx</code></pre> in <pre><code>kernel32.dll</code></pre> (here, the name matches, but it could be different too).\n",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Feb 16, 2022 at 8:54",
            "is_accepted": false,
            "comments": []
        }
    ]
}