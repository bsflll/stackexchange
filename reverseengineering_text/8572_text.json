{
    "title": "IDA Pro debugger hit counter",
    "link": "https://reverseengineering.stackexchange.com/questions/8572/ida-pro-debugger-hit-counter",
    "content": "I'm looking for a way to found out how many times instruction at specified address was executed before break point hit.\nIs there some standard way? I cannot found this in its interface.\n",
    "votes": "2",
    "answers": 3,
    "views": "1k",
    "tags": [
        "ida",
        "debuggers",
        "hit-counter"
    ],
    "user": "ST3",
    "time": "Mar 27, 2015 at 8:39",
    "comments": [],
    "answers_data": [
        {
            "content": "Disclaimer: I don't have IDA available to try it out right now, so a detail might be wrong.\nJust add some code to the breakpoint condition. For example\n<pre><code>extern bpcount;\nbpcount++;\nMessage(form(\"%d. hit\n\"), bpcount);\nreturn (bpcount>500);\n</code></pre>\nThis will increment the count each time the breakpoint is it, but only break the program after more than 500 hits. Replace the return instruction with <pre><code>return 0</code></pre> if you never want to break, or <pre><code>return 1</code></pre> if you always want to break.\n",
            "votes": "4",
            "user": "Guntram Blohm",
            "time": "Mar 27, 2015 at 18:51",
            "is_accepted": false,
            "comments": [
                {
                    "user": "ST3",
                    "text": "<span class=\"comment-copy\">Well, it always prints \"0. hit\".</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "Apparently IDA 7.0 (and earlier?) supports a \"pass count\" for a breakpoint, you can even see a column for that in the breakpoint list window, but I found no way to configure it via the UI.\nYou can use the following Python commands to create a breakpoint with a pass count though, where <pre><code>0x12345678</code></pre> is the address at which you want to set it, and <pre><code>42</code></pre> the hit count:\n<pre><code>add_bpt(0x12345678, 1, BPT_DEFAULT)\nset_bpt_attr(0x12345678, BPTATTR_COUNT, 42)\n</code></pre>\n",
            "votes": "2",
            "user": "Ray",
            "time": "Jun 9, 2019 at 22:57",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "I have added <pre><code>Python</code></pre> script on a breakpoint.\n<pre><code>f = open('C:\\\\Users\\\\T3\\\\Desktop\\\\Count.txt', 'r+')\nstrData = f.readline()\nn = int(strData)\nn = n + 1\nf.seek(0)\nf.write(str(n))\nf.close()\nreturn 0\n</code></pre>\n<pre><code>Count</code></pre> file at the beginning contained <pre><code>0</code></pre> but after execution it contains hit count.\n\nThis way has one drawback. File IO is slow, so registry counters may be used because it is stored in memory (that is only for Windows).\n",
            "votes": "0",
            "user": "ST3",
            "time": "Mar 30, 2015 at 10:17",
            "is_accepted": false,
            "comments": []
        }
    ]
}