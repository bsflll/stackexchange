{
    "title": "The executable file makes a unique ID from each individual PC. Can anyone decipher from where the file makes these unique IDs?",
    "link": "https://reverseengineering.stackexchange.com/questions/21947/the-executable-file-makes-a-unique-id-from-each-individual-pc-can-anyone-deciph",
    "content": "The file generates random unique ID. It says hardware ID but I couldn't find it in product key, BIOS serial number or anywhere. I used IDA but I couldn't get from where the file creates the code. Even a little help would be a great deal for me.\nNo need to install, it's 3 mb portable.\nLink: https://drive.google.com/open?id=1JqkRXUvAha13WpfFaeGMHig_GnAZHJab\n",
    "votes": "0",
    "answers": 2,
    "views": "316",
    "tags": [
        "ida",
        "disassembly",
        "windows",
        "unpacking"
    ],
    "user": "WORM",
    "time": "Aug 31, 2023 at 6:19",
    "comments": [
        {
            "user": "julian",
            "text": "Please clearly describe the problem you are having, using relevant technical details. The scope of the problem as currently described is too broad.\n",
            "time": null
        },
        {
            "user": "WORM",
            "text": "In simple words...Well the executable file picks up the unique ID from the PC hardware.So the ID is different on each PC as each PC have different product key or HWID or BIOS serial....I wanted know from where does it takes the ID from i.e from product key of OS or HWID or BIOS serial etc...From IDA can we know from where does the executable takes the ID ? If yes then how ?\n",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "@WORM hi and welcome to RE.SE. Generally, yes, it's possible to investigate this. However, you should show a minimum of initiative and tell us what you have tried so far. As it stands your question may be too broad to answer.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Some hints for you:\n\nI would use DiE (Detect it Easy) to find what programming language was used for creating the executable and if the exe is protected or not.\nRun APIMonitor to see what Windows API functions are getting called and what results they return.\nIf the exe is not protected - you can open it in IDA and start debugging. Put a breakpoint in MessageBox() Api function and then see from where it is called.\nIf the exe is protected - check the protector and search for ways to unpack it.\n",
            "votes": "1",
            "user": "Deadbeef",
            "time": "Aug 24, 2023 at 21:34",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "You can start from the message that prints the Hardware ID and work backwards from it to see how exactly it is calculated.\n",
            "votes": "0",
            "user": "Igor Skochinsky",
            "time": "Aug 21, 2019 at 20:11",
            "is_accepted": false,
            "comments": [
                {
                    "user": "WORM",
                    "text": "<span class=\"comment-copy\">The string with the message is not there...What shall i do ?</span>",
                    "time": null
                }
            ]
        }
    ]
}