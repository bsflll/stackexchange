{
    "title": "How do you attach to a child process using IDAPro?",
    "link": "https://reverseengineering.stackexchange.com/questions/2878/how-do-you-attach-to-a-child-process-using-idapro",
    "content": "The code that I'm analyzing calls fork and I was wondering if there was a way to trace the child process that is created. I've looked in The IDAPro Book and there's nothing on the topic (if there is I can't find it). Perhaps it's not possible with IDAPro. Also if it's helpful I'm debugging an elf executable remotely from a windows machine. Thanks in advance.\nsome basic documentation\nhttps://www.hex-rays.com/products/ida/support/idadoc/index.shtml\n",
    "votes": "5",
    "answers": 2,
    "views": "4k",
    "tags": [
        "assembly",
        "ida"
    ],
    "user": null,
    "time": "Sep 21, 2013 at 4:47",
    "comments": [],
    "answers_data": [
        {
            "content": "This isn't IDA problem, per se. It's more to do with the debugger you're using. I assume you're using remote GDB through IDA. The debugger will attach itself to a specific process, and that process only. Fortunately, GDB has an option to follow child processes, using the debugging option:\n<pre><code>set follow-fork-mode child</code></pre> \nType that in the GDB prompt at the bottom of the Output Window in IDA, and the debugger should follow the path of execution of the forked child process. \nSee this page for more info on debugging forks.\n",
            "votes": "3",
            "user": "ben_re",
            "time": "Sep 22, 2013 at 12:49",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "IDA does not support multi-process debugging at the moment (as of 2013). To debug the new process, you'll need to either detach from the current one, or use a new instance of IDA.\n",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Sep 23, 2013 at 10:46",
            "is_accepted": false,
            "comments": []
        }
    ]
}