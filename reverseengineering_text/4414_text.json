{
    "title": "Large memcpy operation before possible obfuscation [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/4414/large-memcpy-operation-before-possible-obfuscation",
    "content": "Closed. This question needs details or clarity. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Add details and clarify the problem by editing this post.\n\n\nClosed 10 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nI am currently reversing a binary and I am stuck at understanding what the application is trying to do. There is a memcpy operation which is copying almost 1MB from a .data section to a .bss section.  This operation is made in an initialising phase and I suspect that the code running subsequently is obfuscated. The reason I think this is that the subsequent code is very convoluted. Would the large memory block being loaded have anything to do with it being obfuscated, a virtual machine maybe? The code isn't junk afterwards but just too complicated to follow what it is doing. It doesn't seem to have any large jump tables so I am sure what I am looking at.\n",
    "votes": "1",
    "answers": 1,
    "views": "196",
    "tags": [
        "obfuscation"
    ],
    "user": "allbabel",
    "time": "10 years ago",
    "comments": [
        {
            "user": "Willem Hengeveld",
            "text": "is the memcpy function from a library?  or did you identify it as memcpy yourself?  I have seen functions which look like memcpy, bug on closer inspection also had some decompression code in them.\n",
            "time": null
        },
        {
            "user": "Guntram Blohm",
            "text": "There's not really much you give us to work on, so all answers you're going to get are quite uneducated guesses. My uneducated guess is: the application copies some data to a buffer and decrypts that buffer, and the decryption routine just happens to look convoluted in assembler - hey, most encryption/decryption routines look convoluted even in source code.\n",
            "time": null
        },
        {
            "user": "yaspr",
            "text": "I do agree with @GuntramBlohm about the fact that the memcopy might be moving data to a statically allocated buffer (hence the .bss) for further processing. Could you provide more information, the objdump output for example ?\n",
            "time": null
        },
        {
            "user": "allbabel",
            "text": "It came out as memcpy using IDA Pro so I assuming it is memcpy. I could check it further to see if it is actually something else.  I agree that the convoluted section could just be encryption code but I suppose that is my question; how do I work out if something is obfuscated? I am a newbie to this and some pointers on how to spot obfuscation would help dearly.\n",
            "time": null
        },
        {
            "user": "yaspr",
            "text": "Well, a code can be obfuscated using many techniques : padding with garbage bytes, mixing instructions with data, oligomorphism with indirect branches, ... People will be able to help if they have something concrete to look at, mainly CODE.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I've taken this to mean that you want to know how to analyse further. Load it in IDA pro remotely debugging in a virtual machine (that you can throw away) and have it execute until eip is in an unanalysed region. Highlight, right click, analyse.\n",
            "votes": "1",
            "user": "offbyseveral",
            "time": "May 23, 2014 at 4:54",
            "is_accepted": false,
            "comments": [
                {
                    "user": "allbabel",
                    "text": "<span class=\"comment-copy\">I have already pulled out the binary and had a look at it and it seems to be a look up table of sorts</span>",
                    "time": null
                },
                {
                    "user": "offbyseveral",
                    "text": "<span class=\"comment-copy\">Sounds like compression. Look for where the data is written after the lookup.</span>",
                    "time": null
                },
                {
                    "user": "allbabel",
                    "text": "<span class=\"comment-copy\">Could it be a type of encryption also?  I don't think its a public algorithm so I am thinking the complexity I can see in IDA pro is the algorithm for the encryption.</span>",
                    "time": null
                },
                {
                    "user": "offbyseveral",
                    "text": "<span class=\"comment-copy\">From your description it could be anything. I'm just trying to give you method hints. Sounds like it's going to both take a long time and be worth it.</span>",
                    "time": null
                },
                {
                    "user": "offbyseveral",
                    "text": "<span class=\"comment-copy\">But yes it could be encryption.</span>",
                    "time": null
                }
            ]
        }
    ]
}