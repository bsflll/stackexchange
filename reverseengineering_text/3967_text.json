{
    "title": "Reverse engineering, code extraction, and lock bits",
    "link": "https://reverseengineering.stackexchange.com/questions/3967/reverse-engineering-code-extraction-and-lock-bits",
    "content": "For one of my projects I am interested to see how someone else implemented their concept. I wanted to tap onto their microprocessor and read that code. First question I have, if I am to solder wires to the pins of the microprocessor, to which ones should I solder in order to be able to read anything back? \nAlso, I read about lock bits, for my own future security, if I leave the lock bits off, is there a method to trigger lock bits on if someone does any hardware changes (as in trying to tap to the microcontroller)?\n",
    "votes": "4",
    "answers": 1,
    "views": "211",
    "tags": [
        "object-code"
    ],
    "user": "KingsInnerSoul",
    "time": "Apr 13, 2017 at 12:33",
    "comments": [],
    "answers_data": [
        {
            "content": "In a well protected chip, this is not a trivial task.\nThere are several methods to try, some in software, some in hardware.\nOne technique to get around lock bits in the cpu, is to 'glitch' the cpu, by giving it signals which are either too short, or too low a voltage on just the right pins, sometimes this will cause an inconsistent state inside the cpu, allowing one to bypass the memory protection.\nThe exact wires you would need depend very much on the specifications of the chip.\nAnother technique would be to look for software bugs which allow you to run your own code in the context of the secure memory. This is how some of the early iphone jailbreaks worked.\nIn a not so well protected system, it might be sufficient to look for the JTAG port, and using some jtag interface you can then sometimes just read the entire memory of the system.\n",
            "votes": "2",
            "user": "Willem Hengeveld",
            "time": "Mar 29, 2014 at 20:39",
            "is_accepted": false,
            "comments": []
        }
    ]
}