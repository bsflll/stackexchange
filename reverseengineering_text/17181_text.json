{
    "title": "PE DOS stub content not commands",
    "link": "https://reverseengineering.stackexchange.com/questions/17181/pe-dos-stub-content-not-commands",
    "content": "Does anyone know why the PE DOS stub often includes repetitive looking data that does not seem to be valid 16bit commands?\n",
    "votes": "1",
    "answers": 1,
    "views": "490",
    "tags": [
        "pe",
        "dos-exe",
        "pe32"
    ],
    "user": "s3c",
    "time": "Jan 12, 2018 at 10:01",
    "comments": [
        {
            "user": "Abr001am",
            "text": "did you try to open the file with pe explorer ?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "This is the so-called \"Rich header\", added by Microsoft's link.exe (you can see the text \"Rich\" at the end of the mysterious block). It contains information about the versions of compilers and other tools which participated in producing the code of the executable. Some references:\n\nFinding the Needle: A Study of the PE32 Rich Header and Respective Malware Triage \nMicrosoft's Rich Signature (undocumented)\nMy parser based on code from this article (more references at the bottom)\nTypical output:\n<pre><code>PRODID   name            build count\n      1   Import0             0   141\n     95   Utc1310_C        4035     1\n    110   Utc1400_CPP     50727    45\n    125   Masm800         50727    17\n    109   Utc1400_C       50727   105\n    120   Linker800       50727     1\n     93   Implib710        4035    19\n    124   Cvtres800       50727     1\nChecksum valid\n</code></pre>\n",
            "votes": "5",
            "user": "Igor Skochinsky",
            "time": "Jan 12, 2018 at 18:28",
            "is_accepted": true,
            "comments": []
        }
    ]
}