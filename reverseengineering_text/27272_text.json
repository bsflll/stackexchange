{
    "title": "Editing assembly language to bypass the condition",
    "link": "https://reverseengineering.stackexchange.com/questions/27272/editing-assembly-language-to-bypass-the-condition",
    "content": "I want to edit the compiled DLL code to bypass the variable checking condition. I tried to change the value in the condition but it causes an application crash. How can I \"remove\" this condition?\nHere is the condition (if statement)\n\nAnd here is ASM code\n\nI was trying change the HEX from\n<pre><code>83 F8 FF</code></pre>\nto\n<pre><code>83 F8 01</code></pre>\nbut application crashes.\nI don't want crack anything, i want remove version checked because library is older than actual game version\n",
    "votes": "1",
    "answers": 0,
    "views": "354",
    "tags": [
        "ida",
        "dll",
        "hex",
        "assembly"
    ],
    "user": "FileEX",
    "time": "Mar 20, 2021 at 16:57",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "and after the change, is everything looks ok in the disassembly? It might be that there are some checks that detects modifications and crash the game\n",
            "time": null
        },
        {
            "user": "bart1e",
            "text": "It may not be that easy. Possibly the data initialised is used later on, in <pre><code>sub_180005AD0</code></pre> for example, and since it doesn't contain what the program expects, it crashes. Try to debug the patched version: put a breakpoint at <pre><code>1800060EA</code></pre> and keep pressing <pre><code>F8</code></pre> (step over) until it crashes. You will find the procedure causing error.\n",
            "time": null
        }
    ],
    "answers_data": []
}