{
    "title": "How to force run a method triggered with a series of keys in a game?",
    "link": "https://reverseengineering.stackexchange.com/questions/11190/how-to-force-run-a-method-triggered-with-a-series-of-keys-in-a-game",
    "content": "This is my first time asking something on SE and I'll do the best I can to provide all of the required information, but I apologize in advance if I'm not clear enough.\nI'm trying to reverse engineer a certain fighting game to be able to run the moves \"manually\".  What I mean by this is, say a certain power move is run by pressing S A J quickly on the keyboard, I want to be able to just jump to the method to use that move in the code without having to press the keys.\nso far I've tried using CheatEngine and OllyDbg to search for strings that match the move names, and also looked at what values changed before, during, and after executing the move, but neither seems to have done anything.\nI'm relatively new to the assembly language, but have quite a bit of experience in c++, c# and other languages.  \nI looked for questions similar to this one before posting it, but couldn't seem to find anything that would help.  If this has been posted before and I just missed it, sorry about that.\nThanks in advance for any answers.\n",
    "votes": "3",
    "answers": 2,
    "views": "357",
    "tags": [
        "functions"
    ],
    "user": "SplitHorizon",
    "time": "Oct 28, 2015 at 4:23",
    "comments": [
        {
            "user": "w s",
            "text": "Did you try keyboard emulators ? I'd try to simulate such a thing outside of the game.\n",
            "time": null
        },
        {
            "user": "Guntram Blohm",
            "text": "\"I want to be able to just jump to the method to use that move in the code without having to press the keys\" -- You don't say on what condition do you want to jump to the code?\n",
            "time": null
        },
        {
            "user": "SplitHorizon",
            "text": "Sorry.  I meant that i want to jump to the method to use that move by just pressing one button instead of the three or more in quick succession.\n",
            "time": null
        },
        {
            "user": "user2823000",
            "text": "I agree with @ws, it'd probably be way easier to just do this with keyboard macros outside the game\n",
            "time": null
        },
        {
            "user": "SSpoke",
            "text": "There is a way to do this in Cheat Engine <pre><code>using -> Memory View -> Tools ->Ultimap</code></pre> this will get to the functions required to run that move it logs all the functions the game uses an you just keep filtering the results until you get a few like 10 or 20.. then u check each function by hand to see which one you need\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Assuming this game is a bit more complex than a 8bit console game I'm afraid hooking <pre><code>getchar()</code></pre> and the likes won't do you much good.\nWith Windows windowed/full screen games, input is received by handling window messages, usually in a message loop.\nIn such cases, each window has its own message processing loop, in witch it constantly calls <pre><code>GetMessage()</code></pre> to receive events it should react to, such as key presses. <pre><code>GetMessage()</code></pre>s first parameter is a pointer to <pre><code>MSG</code></pre> structure which it populates with the next message after removing it from the queue.\nGo here for a message loop example, here for <pre><code>GetMessage()</code></pre> documentation, and finally here for the <pre><code>MSG</code></pre> structure documentation.\nIn that case you should place breakpoints on:\n\n<pre><code>GetMessage</code></pre>\n<pre><code>PeekMessage</code></pre>\n\nAfter you've got to the message loop, you'll probably encounter a medium sized switch-case handling the different message types. That switch-case should read the <pre><code>MSG</code></pre> structure's <pre><code>message</code></pre> member for message types that belong to the keyboard. most commonly those are:\n\n<pre><code>WM_KEYDOWN</code></pre>\n<pre><code>WM_KEYUP</code></pre>\n<pre><code>WM_CHAR</code></pre>.\n\nOnce you've found the case handling those types, you should be pretty close to the function you're looking for. That case will most-likely do a few lines for code worth of parameter preparations and then call the function you're looking for.\n",
            "votes": "1",
            "user": "NirIzr",
            "time": "Aug 24, 2016 at 8:50",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "Considering that this is the RE forum, this is how I would find the function.\n\nPlace a conditional break point on the input handling code. Depending on the game it might come from something like getchar() or be handled in a Windows message loop (assuming x86 Windows here since you mentioned OllyDbg).\nThe condition for the breakpoint would be when the input data equals 'j'. You might get lucky and find a cmp/jmp (or similar) sequence for 'j' or 'J' in the disassembly, then you could just set a normal break point there.\nRun the game, and execute the combination on the keyboard.\nWhen the break point hits, you can then single step and keep track of the <pre><code>call</code></pre> statements that are hit, one of them is likely to be the function you care about.\n",
            "votes": "0",
            "user": "josh poley",
            "time": "Oct 28, 2015 at 15:31",
            "is_accepted": false,
            "comments": [
                {
                    "user": "SplitHorizon",
                    "text": "<span class=\"comment-copy\">Thanks for the answer.  i'll give this a shot and get back to you.  Also, i'm running x64 windows with ollydbg.  Pardon my ignorance, but does olly not work on x64 windows?  I wasn't aware of this.</span>",
                    "time": null
                },
                {
                    "user": "SplitHorizon",
                    "text": "<span class=\"comment-copy\">Nevermind i just answered my own question.  Probably should've read the olly website more carfully.  :/</span>",
                    "time": null
                }
            ]
        }
    ]
}