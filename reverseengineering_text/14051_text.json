{
    "title": "How to get a entry point of loaded process with IDA Pro and WinDbg as a debugger?",
    "link": "https://reverseengineering.stackexchange.com/questions/14051/how-to-get-a-entry-point-of-loaded-process-with-ida-pro-and-windbg-as-a-debugger",
    "content": "I'm using IDA Pro and WinDbg as a debugger. So I loaded an executable process into it. And now I need to know the entry point (or base address) of that loaded executable, the same as I would get from calling these APIs:\n<pre><code>MODULEINFO mi = {0};\nif(::GetModuleInformation(::GetCurrentProcess(), ::GetModuleHandle(NULL), &mi, sizeof(mi)))\n{\n    //Needed entry point is:\n    pEntryPoint = mi.EntryPoint;\n}\n</code></pre>\nI found this reference, but when I do:\n<pre><code>idaapi.get_imagebase()\n</code></pre>\nit gives me the error:\n\nOperation not supported in current debug session 'idaapi.get_imagebase()'\n\n\nSorry, I'm new to IDA. What am I doing wrong?\n",
    "votes": "2",
    "answers": 1,
    "views": "7k",
    "tags": [
        "ida",
        "windows",
        "windbg",
        "entry-point"
    ],
    "user": "c00000fd",
    "time": "Apr 13, 2017 at 12:49",
    "comments": [],
    "answers_data": [
        {
            "content": "You need to switch to a different command line. Currently, you're using the WinDbg command line, which allows you to send commands to WinDbg instead of IDAPython:\n\nClick on WinDbg, or press Ctrlâ†‘ to switch to IDAPython, where <pre><code>idaapi.get_imagebase()</code></pre> works fine:\n\nHowever, this doesn't really answer your question. What you want is the entry point, and to find it, you can either press CtrlE in IDA, or find it with WinDbg:\n\nThe command is:\n<pre><code>.printf \"0x%X\", $exentry\n</code></pre>\n",
            "votes": "4",
            "user": "Martin",
            "time": "Nov 27, 2016 at 1:33",
            "is_accepted": true,
            "comments": [
                {
                    "user": "c00000fd",
                    "text": "<span class=\"comment-copy\">Appreciate it. Will doing <code>u $exentry</code> for WinDbg console work as well?</span>",
                    "time": null
                },
                {
                    "user": "Martin",
                    "text": "<span class=\"comment-copy\">@c00000fd Yeah. The input you see in IDA sends the text to the WinDbg's debugger backend, so it goes to the same command processor. You're just using it from different interfaces.</span>",
                    "time": null
                }
            ]
        }
    ]
}