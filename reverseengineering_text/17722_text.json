{
    "title": "Ruby on Rails Code Analysis [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/17722/ruby-on-rails-code-analysis",
    "content": "Closed. This question is off-topic. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\n Questions on software development are off-topic here, but can be asked on Stack Overflow.\n\n\nClosed 7 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nI have 'inherited' a fairly large Ruby on Rails repository that was developed for a web application and am trying to make heads or tails of it.  I am specifically looking at this from the perspective of trying to analyze and understand the code under the assumptions of:\n1) I'm not really a coder  per se, but can follow VERY limited aspects of html/erb/haml,  css/sass,  js/coffeescript/angularjs, ruby, sql upon which I believe the app is based.\n2) I have/had access to the user interface and was able to work with the application for some time, so understand its intent.\nSo, my questions is/are really more a procedural inquiry. I suspect many people who are trying to learn ROR would benefit from this type of understanding, (sort of a top-down approach to gain perspective).\nHow would one best try to absorb a given ROR application?\nWhat would you consider to be the first things at which to look and absorb, followed by secondary and so on...\nAnd more specifically,  hows does one determine which code is associated with which gem? (this particular app has 150-200 gems in the gemfile).\n",
    "votes": "1",
    "answers": 0,
    "views": "325",
    "tags": [
        "websites"
    ],
    "user": "user330994",
    "time": "7 years ago",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "Unfortunately this question is poorly suited for this site; we mostly deal with binary/low-level analysis and not much source code. You will probably have better luck on Stack Overflow.\n",
            "time": null
        }
    ],
    "answers_data": []
}