{
    "title": "Difficulty in debugging with dnSpy",
    "link": "https://reverseengineering.stackexchange.com/questions/21215/difficulty-in-debugging-with-dnspy",
    "content": "I have a dotnet malware sample that I'm trying to debug with <pre><code>dnSpy</code></pre>. It has string obfuscation (contains function names such as <pre><code>BarriersBottomed</code></pre>, etc.) I cleaned the sample using <pre><code>de4dot</code></pre> and renamed functions to make them more understandable.\nI placed a breakpoint on <pre><code>Main</code></pre> and also specified in the debug settings to break at <pre><code>Entry Point</code></pre>, but the program never hits the breakpoint. When I click on <pre><code>Start</code></pre>, it runs for a few seconds and then I get a <pre><code>dnSpy</code></pre> error:\n<pre><code>An unhandled exception occurred in kahjvb-cleaned.exe (2160)\nException: ???\nMessage: \"<no exception message>\"\n</code></pre>\nSo, in the <pre><code>Debug</code></pre> options I checked the <pre><code>Ignore unhandled exceptions</code></pre> and restarted debugging with the same options as before. Now, the debugger just runs for a few seconds and the debugging process completes. It still doesn't hit the breakpoint.\nHas anyone faced an issue of this type before or has any insights into this problem? Thanks for the help!\n",
    "votes": "2",
    "answers": 1,
    "views": "3k",
    "tags": [
        "malware",
        "dynamic-analysis"
    ],
    "user": "Nikhil",
    "time": "Apr 25, 2019 at 12:26",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "It might be difficult to propose anything without looking into this specific binary.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Debugging a \"cleaned\" binary is typically hard.  Many cleaning techniques will leave you with a malformed binary that is easy to \"read\" but won't execute properly.  I suggest statically analyzing the \"cleaned\" version and then using what you learn to debug the original version.\n",
            "votes": "2",
            "user": "knowmalware",
            "time": "Apr 30, 2019 at 1:06",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Nikhil",
                    "text": "<span class=\"comment-copy\">Right, that's what I ended up doing. Thanks!</span>",
                    "time": null
                }
            ]
        }
    ]
}