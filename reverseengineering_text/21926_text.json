{
    "title": "How to set breakpoint with gdb on arbitrary memory location?",
    "link": "https://reverseengineering.stackexchange.com/questions/21926/how-to-set-breakpoint-with-gdb-on-arbitrary-memory-location",
    "content": "I'm trying to debug some code on Linux.\nThere's an arbitrary memory location I need the program to jump to.\nThis location is result of calling mmap with appropriate protection flags for executing a piece of code.\nWhen trying to set break point like this: <pre><code>b 0x00007ffff7fcf000</code></pre>\nI get the following message:\n<pre><code>Function \"0x00007ffff7fcf000\" not defined.\nMake breakpoint pending on future shared library load? (y or [n])\n</code></pre>\nIf I answer no, then no breakpoint is triggered, and if I answer yes, then still no breakpoint is triggered. How can I make gdb set a breakpoint on this address?\n",
    "votes": "4",
    "answers": 1,
    "views": "4k",
    "tags": [
        "gdb"
    ],
    "user": "Michael Kruglos",
    "time": "Aug 18, 2019 at 18:10",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "Hi and welcome to RE.SE. While trying to set the bpx, you have already mapped the respective memory range? What does <pre><code>info mem</code></pre> give as output? Is GDB even aware of that memory?\n",
            "time": null
        },
        {
            "user": "Michael Kruglos",
            "text": "actually, after I added the asterisk before the address as suggested by the accepted answer, it worked just fine.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "You need to use syntax like <pre><code>*0x12345</code></pre> with raw addresses, otherwise gdb tries to resolve it as a symbol.\n",
            "votes": "6",
            "user": "Igor Skochinsky",
            "time": "Aug 18, 2019 at 22:07",
            "is_accepted": true,
            "comments": []
        }
    ]
}