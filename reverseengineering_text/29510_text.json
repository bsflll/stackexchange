{
    "title": "Reversing DALY BMS BLE protocol",
    "link": "https://reverseengineering.stackexchange.com/questions/29510/reversing-daly-bms-ble-protocol",
    "content": "I am trying to communicate with the DALY BMS (Battery management system) via BLE.\nI was wondering if anyone has any bit of information regarding their protocol, something to start with?\n",
    "votes": "0",
    "answers": 1,
    "views": "1k",
    "tags": [
        "protocol",
        "bluetooth"
    ],
    "user": "Stéphane de Luca",
    "time": "Nov 5, 2021 at 17:04",
    "comments": [
        {
            "user": "Robert",
            "text": "Have you checked their Android app? play.google.com/store/apps/… Bluetooth communication recording is built-in in on most Android devices (check developer menu).\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "You can check this Python library for reference. It doesn't work for all commands, but you'll have the basics.\nThe Daly BMS (at least mine) uses this TTL-to-Bluetooth dongle. It will basically allows you to send UART commands over bluetooth, convert them to actual serial data and send back the answer over bluetooth as well.\nThe Daly UART protocol is here.\n",
            "votes": "1",
            "user": "MarianD",
            "time": "Apr 26, 2022 at 17:08",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Stéphane de Luca",
                    "text": "<span class=\"comment-copy\">I sniffed the BLE comm and it seems not to be a 1-to-1 message that goes over BLE (as it is on RS-485 or CANbus). I am currently mocking the peripheral and when I connect the Daly BMS app to my peripheral, I got a \"Request MTU failed\" fro the app. I need to pass this before I can dump the data. Any idea?</span>",
                    "time": null
                }
            ]
        }
    ]
}