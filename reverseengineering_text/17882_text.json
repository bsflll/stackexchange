{
    "title": "How can I call a function in radare2 debug session?",
    "link": "https://reverseengineering.stackexchange.com/questions/17882/how-can-i-call-a-function-in-radare2-debug-session",
    "content": "In <pre><code>gdb</code></pre> I can easily do the following:\n<pre><code>(gdb) call function(arg) \n</code></pre>\nwhat is the equivalent in <pre><code>r2</code></pre>?\nThere is no <pre><code>call</code></pre> function in debug session so this doesn't work: \n<pre><code>[0x08048795] call sym.func\n</code></pre>\nInject opcode also didn't work as I tried this: \n<pre><code>[0x08048795] dx call syn.func\n</code></pre>\n",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "radare2"
    ],
    "user": "Kennet Celeste",
    "time": "Apr 3, 2018 at 17:56",
    "comments": [],
    "answers_data": [
        {
            "content": "radare2 is not a source code debugger so you might see some things that are missing in comparison to what you got in GDB.\nThis feature is not implemented in radare2 and I'm not sure will be. Anyway, you can point <pre><code>eip</code></pre> to the function you want to execute by using <pre><code>dr eip=0x...</code></pre> but you'll have a hard time with passing arguments through the stack (although it is possible).\nYou can also check <pre><code>dx?</code></pre> to see examples of how <pre><code>dx</code></pre> should be executed. Check <pre><code>gs</code></pre> as well to execute syscalls.\nAlso, you can use radare2 with gdbserver/gdb so you better check this out as well.\nHere is a good place to read about migrating from GDB to radare2.\n",
            "votes": "2",
            "user": "Megabeets",
            "time": "Apr 3, 2018 at 19:06",
            "is_accepted": false,
            "comments": []
        }
    ]
}