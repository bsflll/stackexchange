{
    "title": "Vulnerabilities of Binary executed by root",
    "link": "https://reverseengineering.stackexchange.com/questions/20884/vulnerabilities-of-binary-executed-by-root",
    "content": "I was given a vulnerable 64bit dynamically linked stripped that runs simple checks to determine the strength of the passwords of users on a linux system.\nThe app checks if it the EUID is 0 and then creates two POSIX message queues one for the password hashes which it a child process reads using the shadow api and later sends to other worker child processes(#num defined by the user) that perform decryption attempts, and one where the workers send the weak passwords found to another child process that prints them on screen.\nAs stated in the instructions the app is supposed to be used by administrator users (i.e. root), which by my understanding means it is not a SUID, so no way of priviledge escalation (?). \nMy problem is that I don't know what to look for besides come kind of race condition or process failure scenario that can cause leakage of hashes or decrypted passwords. Is there anything that can be done by exploiting the Linker ?\n",
    "votes": "1",
    "answers": 0,
    "views": "551",
    "tags": [
        "binary-analysis",
        "binary"
    ],
    "user": "Gian",
    "time": "Mar 15, 2019 at 0:52",
    "comments": [
        {
            "user": "perror",
            "text": "Is there any chance that you could hijack a running POSIX message queue and read or inject messages in it ? I think that there is no security on accessing the queue between processes in the POSIX inter-processes communication schemes. But, I might be wrong!\n",
            "time": null
        },
        {
            "user": "Gian",
            "text": "even if the queue belongs to root ?\n",
            "time": null
        },
        {
            "user": "perror",
            "text": "I tried to dig a bit the thing and I found this section in the Secure Programs HOWTO and this question on another StackExchange website. Maybe you should look if all the permissions of the shared memories and files are properly done or if there is something wrongly done in it.\n",
            "time": null
        },
        {
            "user": "Gian",
            "text": "the queues are opened with permissions set to 666=0x1b6 which means that there are public write/read permissions set, but when i run a process that runs mq = mq_open(QUEUE_NAME,O_RDWR, &attr); i get permission denied on errno.\n",
            "time": null
        },
        {
            "user": "perror",
            "text": "I guess that the security flaw is here, then (666)! But, I guess your are still missing one little thing. As I never tried it before, I do not know precisely what is missing. Sorry.\n",
            "time": null
        }
    ],
    "answers_data": []
}