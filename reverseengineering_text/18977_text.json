{
    "title": "Is deobfuscation of my javascript code hard or easy?",
    "link": "https://reverseengineering.stackexchange.com/questions/18977/is-deobfuscation-of-my-javascript-code-hard-or-easy",
    "content": "I am trying to protect my app code from theft. Since most of it is written in javascript I had to use many obfuscation techniques to make it incomprehensible.\nI have written a very small piece of code for demonstration purposes (under 20 lines) which has been obfuscated. I wonder how easy it is to reverse engineer or is it difficult enough to make life a hell?\nHere a demo with the code:\nhttp://jsfiddle.net/0s84pxvc/1/\nGoal: can you find out how the string inside the alert is generated when you fire a click event on the window?\n",
    "votes": "1",
    "answers": 2,
    "views": "5k",
    "tags": [
        "obfuscation",
        "deobfuscation",
        "javascript"
    ],
    "user": "Asperger",
    "time": "Aug 5, 2018 at 14:12",
    "comments": [
        {
            "user": "realtebo",
            "text": "Because this is a challenge you should give a flag to capture or a change to do that you want to make impossible to do. Sometimes we do not need to deobfuscate code too much for simply intercept a code, or similar. So... Give a goal. This is because obfuscation is not the solution for every problem. Anyway I will try tomorrow.\n",
            "time": null
        },
        {
            "user": "Asperger",
            "text": "@realtebo added a goal. Thanks for the advice\n",
            "time": null
        },
        {
            "user": "realtebo",
            "text": "The first array is simply to attack, we convert octal to ascii then base64decode and we got the dictionary.\n",
            "time": null
        },
        {
            "user": "Asperger",
            "text": "@realtebo so did you figure out how im generating the string: \"I am still 24 hours a day obfuscated\" when clicking on the window? :)\n",
            "time": null
        },
        {
            "user": "realtebo",
            "text": "Full Solved, i'm available for next level challenge.I succesfully solved the 'on the fly' fake redirect of paypal last week.... I didn't gained a single dollar, but was so fun.  Rember one thing: if you create an entire custom fw in js, probably no one will be interested in copying it. So obfuscate it, ok, it will be protected enough.  But if there is something of important under js, it's just question of time and patience.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Resolved.\n\ngenerally nothing in js is impossible to reverse\nin this case the 'alert' string in plain text give me a big help, because I simply started to resolve function value one step back at time.\nsame thing for the setInterval, it was in plain Text\nThis is near the same identical schema of obfuscation of a PDF virus, a JS that internally was doing massive click on a ad rotator; I never see another sample of this before... this is simply strange, I hope\nto kill the anti debug trap, simply overrife the debugger function or at first debugger pause, simply click 'disable breakpoint'. Note that this lead to a memory leak, a big memory leak, and Chrome protect itself by stopping recursion. To avoid this, when in pause see the stack call list, get the place when the anonimous function is called and overrie it to simply do nothing\n\nDECODE THE ARRAY\nDecode unicode. Use an online tool like this and you can got\n<pre><code>var _0x1b0e=['RNBwL','ScKnC','BdjwA','gjKqY','NLCsj','3|2|1|5|0|4|6','iXTyC','constructor','call','Pvdko','ymXVL','uEdcI','I am obfuscated...','riWLD','click','addEventListener','Handler','bind','PwLbK','jYzDF','ndilm','AYDEt','stateObject','vIaGc','pZYix','yTHkP','NHTVJ','CRKBx','enNxX','I am still ','JEZNs',' hours a day obfuscated!','RBXnA','0|1|3|6|5|2|4','TlFHD','NIHXQ','bKETV','ZvwJA','jTRge','lwamn','xjQhJ','tZgNp','PEeVj','FwPPe','HyevS','ffbgA','uQzhD','hOThG','RDxue','zUlaT','qxKfp','7|0|6|4|8|1|5|2|3','kEOXz','hDbut','DEbtW','EWekr','string','uLpny','OKzxq','NUsPS','xQKWu','while (true) {}','YNeoc','counter','hlebj','vtlYy','FxZTK','pLTxF','GWIKo','MHAff','Vgchj','RVWUv','length','Yplhb','DhPfd','RYVOZ','IJelL','LEBxy','uopuc','JTcvT','emAWc','GNCRi','nnpzO','kFplL','UBabX','leugg','hgMkn','uwEeM','IsYwa','xvqSS','WBYyN','wYbEn','NVOhv','lrXaL','sCqTs','tlBST','QVIIo','RqrUk','oyxkA','UpIwZ','TADqK','KHgQl','lyfsc','LuNwu','xVbVv','OsXCq','ItQkC','uXiDn','QnQvl','GVxah','SofZe','VunRI','wnuof','fUBve','foyFv','DlhfN','7|4|1|0|2|5|8|3|6','lkihY','qOXDh','ErKPA','YtkOE','qwIQA','ywRts','CjQTl','WLHwy','apply','console','split','debug','warn','info','trace','log','error','exception','cBfic','FdtOi','xXeRs','oKaof','return (function() ','tbYvC','{}.constructor(\"return this\")( )','IjtnV','JRoNn','mQiLi','OIhHz','function *\\( *\\)','Smwjb','\\+\\+ *(?:_0x(?:[a-f0-9]){4,6}|(?:\\b|\\d)[a-z0-9]{1,4}(?:\\b|\\d))','anVxw','init','PBXIl','DedOs','chain','oLLoP','input','PjnEZ','btVNP','zPhfG','WLdDf','Glpfp','IJdqv','WCdVE','gwVJU','IbJVG','ZHHTo','aNucS','cHacR','CEAKU','sSJyA','test','cgpWb','duVJu','zdtWo','PbmnJ','IQbBw','naiWO','QewNf','TpeaO','kDYZL','GJZry','YGCTR','ztBcC','lkDUw','RJjSU','LbegF','gxAQf','BToeI','LsOQW','HyNsS','hUvxa','FrcoK','xaYAI','dxdFC','glyis','fLiNQ','zgXtG','oLHYG','GOzNr','dJbqD','CyyGn','nAaFv','JTpMq','cyOzF','INWzx','wTsIO','EdBey','pfRVT','eOkUT','ophhQ','wuWdq','lPvac','rQIPK','vxJVR','rRYsV','qQKiS','debu','piAiF','gger','PnsCa','action','afbRz','HKuCd','eRGsq','BisqR','KdEkB','gMVsG','XEayW','LPtpl','ErVeQ','EEfQz','jKbtX','xCKWk','wfZEF','GgolG','sBRCc','yNhcf','jVPUr','jOCmP','DjMYX','6|4|7|5|2|0|3|8|1','bmgZk','UFuMD','vrpeE','MbsEY'];\n</code></pre>\n\nHere you find the \"I am still obsfuscated...\" and the other string, but this is just the color of the flag, not the flah itself, because you asked 'how you showed it'.\nI can point to the alert function near the bottom of the code, but it was too simple ....\n\nThe key for the work is the 2n function\n<pre><code>var _0x2bb4 = function(_0x5c85d8, _0xdd28ab) {\n    _0x5c85d8 = _0x5c85d8 - 0x0;\n    var _0xda35ee = _0x1b0e[_0x5c85d8];\n    return _0xda35ee;\n};\n</code></pre>\nWich can be simplified as\n<pre><code>var _0x2bb4 = function(index) { return _0x1b0e[index] };\n</code></pre>\nThen I replaced <pre><code>_0x1b0e</code></pre> with <pre><code>string_array</code></pre>, So I got\n<pre><code>var _0x2bb4 = function(index) { \n  console.log (index, string_array[index]);\n  return string_array[index]; \n};\n</code></pre>\nAnd replace every call to _0x2bb4(something) with their result.\n.. at the end of the story ..\nThe first call is done at the end of the code where there is this code\n<pre><code>if( \n _0x28a0fa[_0x2bb4('0xd2')] (\n    _0x28a0fa[_0x2bb4('0xec')],\n    _0x28a0fa[_0x2bb4('0xec')]\n  )\n){\n _0x28a0fa[_0x2bb4('0xde')]\n (alert,_0x28a0fa[_0x2bb4('0xdf')]);\n\n window[_0x2bb4('0x97')](_0x28a0fa[_0x2bb4('0xe0')],this[_0x2bb4('0x98')][_0x2bb4('0x99')](this));}\n</code></pre>\nThe if is a if ( 1 )  because is comparing two identical strings and the <pre><code>_0x28a0fa[_0x2bb4('0xde')]( arg1, arg2 ) </code></pre> is a simple\n<pre><code>args1(arg2)\n</code></pre>\ndoing\n<pre><code>alert (_0x28a0fa[\"uwEeM\"]);\n</code></pre>\nwhere <pre><code>_0x28a0fa[\"uwEeM\"]</code></pre> is  <pre><code>_0x2bb4('0x94')</code></pre> that returns <pre><code>_0x1b0e[0x94]</code></pre> that is exactly the string \"I am still obfsuscated\"\nWhile the second time the alert is showed is thanks this\n<pre><code>setInterval(function() {\n    var _0x3d8cab = {};\n    _0x3d8cab[_0x2bb4('0x91')] = function(_0x2383ea) {\n        return _0x2383ea();\n    };\n    _0x3d8cab[_0x2bb4('0x91')](_0x58c724);\n}, 0xfa0);\n\n\nsetInterval(function() {\n    var _0x3d8cab = {};\n    _0x3d8cab[\"Pvdko\"] = function(_0x2383ea) {\n        return _0x2383ea();\n    };\n    _0x3d8cab[\"Pvdko\"](_0x58c724);\n}, 0xfa0);\n\n\nsetInterval(function() {\n    \n    what_to_call = function(_0x2383ea) {\n        return _0x2383ea();\n    };\n    what_to_call(_0x58c724);\n}, 0xfa0);\n\nsetInterval(function() {\n    \n    what_to_call = function(function_to_call) {\n        return function_to_call();\n    };\n    what_to_call(_0x58c724);\n}, 0xfa0);\n\nsetInterval(function() {\n    \n   _0x58c724();\n}, 4000);\n</code></pre>\nThe function <pre><code> _0x58c724();</code></pre> in defined in the code, you can simply search vy its name.\nIt's accepting an argument. and it's nead just few line before the previous alert code\n<pre><code>if (_0x3f8146) {\n            if (_0x28a0fa[_0x2bb4('0xc8')](_0x28a0fa[_0x2bb4('0xe8')], _0x28a0fa[_0x2bb4('0xea')])) {\n                return ![];\n            } else {\n                return _0x3145db;\n            }\n        }\n</code></pre>\n",
            "votes": "3",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Asperger",
                    "text": "<span class=\"comment-copy\">Was the exact implementation obvious though? Here is the original code: <a href=\"http://jsfiddle.net/05Ln8ur3/\" rel=\"nofollow noreferrer\">jsfiddle.net/05Ln8ur3</a></span>",
                    "time": null
                },
                {
                    "user": "realtebo",
                    "text": "<span class=\"comment-copy\">The implementation of the obfuscator, yes, was a little too obvious,... the method for display alert and a delayed alert also, but ... no, i've no idea of what the code looked like originally. It can be enough depending on your goal</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<pre><code>setInterval(function () {\n  _0x58c724();\n}, 4000);\nclass a {\n  constructor() {\n    alert(\"I am obfuscated...\");\n    window.addEventListener(\"click\", this.Handler.bind(this));\n  }\n  Handler(a) {\n    let b = 0;\n    for (let c = 0; c < 24; c++) {\n      b++;\n    }\n    alert(\"I am still \" + b + \" hours a day obfuscated!\");\n  }\n}\nconst b = new a();\n</code></pre>\n",
            "votes": "0",
            "user": "Yotamz",
            "time": "Dec 10, 2023 at 15:37",
            "is_accepted": false,
            "comments": []
        }
    ]
}