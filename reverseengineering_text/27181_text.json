{
    "title": "How to replace a segment with a single structure consisting of the data in that segment - programmatically?",
    "link": "https://reverseengineering.stackexchange.com/questions/27181/how-to-replace-a-segment-with-a-single-structure-consisting-of-the-data-in-that",
    "content": "So I have something like this (I copied this from my other plugin functionality which simply creates a copy paste structure from the frame containing stack variables, while deleting them and then recreating the stack frame as a single variable with the new struct type):\n<pre><code>ea_t currea;\n\n    for (auto i : ranges::iota_view{ (size_t)0, get_segm_qty() })\n        if (auto segment = getnseg(i); segment->type & SEG_DATA) {\n            currea = segment->start_ea;\n\n            auto newstructid = add_struc(BADADDR, nullptr);\n\n            auto newstruct = get_struc(newstructid);\n\n            struc_error_t strucerr;\n\n            do {\n                strucerr = add_struc_member(newstruct, /*name*/, currea, /*flags*/, /*member info*/, /*size*/);\n            } while ((currea = next_head(currea, segment->end_ea)) != BADADDR);\n        }\n</code></pre>\nAnyone can help me fill the blanks. I need to get information about the current head such as type and name.\n",
    "votes": "1",
    "answers": 0,
    "views": "51",
    "tags": [
        "ida",
        "c++",
        "struct",
        "idapro-sdk"
    ],
    "user": "rec",
    "time": "Mar 7, 2021 at 16:56",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "does it have to be programmatically? You can use \"Create struct from data...\" in the UI.\n",
            "time": null
        },
        {
            "user": "rec",
            "text": "@IgorSkochinsky Well yeah - either way it's so slow. I was able to write a program that does it - I thought it would be faster.\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "What’s your goal with this? It sounds like a pretty strange thing to do.\n",
            "time": null
        },
        {
            "user": "rec",
            "text": "@IgorSkochinsky I want to be able to compile back the output of the decompiler. Obviously some unknown data may actually need to be present in the output since it may be indirectly referenced by some function. A structure is the most obvious way to tackle this problem.\n",
            "time": null
        },
        {
            "user": "R4444",
            "text": "you may fix this by doing some work around for a specific program. But it is very hard, almost impossible to recompile decompiled output automatically. check this question if you really want to do this - reverseengineering.stackexchange.com/questions/2603/…\n",
            "time": null
        }
    ],
    "answers_data": []
}