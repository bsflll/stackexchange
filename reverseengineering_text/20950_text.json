{
    "title": "How to load symbols from a symbol server in Ghidra?",
    "link": "https://reverseengineering.stackexchange.com/questions/20950/how-to-load-symbols-from-a-symbol-server-in-ghidra",
    "content": "I've been trying to learn Ghidra by attempting to reverse the <pre><code>comctl32.dll</code></pre> system library, which has many of its functions documented. I started the de-compilation analysis in it, and after a while it showed this error message: \n(I don't know how soon it happened. I had to leave it to do its thing as sadly it was taking too long.)\n\nThen I happened to see that if I go to File -> Download PDB file, then select some folder on my drive and provide Microsoft symbol path <pre><code>https://msdl.microsoft.com/download/symbols</code></pre> and click <pre><code>\"Download from URL\"</code></pre> it seems to download it.\nIt then asks if I want to apply it to the project and if I click <pre><code>Yes</code></pre> it shows this warning:\n\nSo I'm obviously not doing it right.\nThus I was curious:\nA) Is it possible to provide the symbol server path and have it download needed symbol files automatically?\nB) If not, what's the sequence to load symbols for a particular binary? It seems like it wants to have symbols up front, but how would I know which files/imports it may need (besides the obvious binary file that I'm opening)?\n",
    "votes": "10",
    "answers": 2,
    "views": "8k",
    "tags": [
        "disassembly",
        "windows",
        "binary-analysis",
        "decompilation",
        "ghidra"
    ],
    "user": "c00000fd",
    "time": "Mar 24, 2019 at 9:32",
    "comments": [],
    "answers_data": [
        {
            "content": "Yea, it's not completely automatic like IDA Pro.\nAlthough the NSA dev team is very active on the project. And any US citizen should be able to add such a feature (via Java) and make a pull request to add it.\nI found what you do is simply add the module to your Ghidra project.\nWhen you click on the module/executable it will ask \"...Would you like to analyze it now?\".\nClick \"No\", load your PDB, and then start the analysis manually via the \"Analysis\" menu option.\n",
            "votes": "3",
            "user": "Sirmabus",
            "time": "Oct 24, 2019 at 3:46",
            "is_accepted": false,
            "comments": [
                {
                    "user": "c00000fd",
                    "text": "<span class=\"comment-copy\">\"any US citizen\"?</span>",
                    "time": null
                },
                {
                    "user": "Sirmabus",
                    "text": "<span class=\"comment-copy\">&gt;&gt;\"any US citizen\"? It's understanding they IP block some countries, I could be be wrong. Your welcome.</span>",
                    "time": null
                },
                {
                    "user": "c00000fd",
                    "text": "<span class=\"comment-copy\">IP-block? I thought it runs locally on your computer &amp; you can download it from GitHub. What do you mean?</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@c00000fd: it's a legal requirement, not technical</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "One of the possible ways to do this - use radare2 or Cutter with the r2ghidra plugin. It will load the PDB and use Ghidra decompiler to do the actual decompilation.\n",
            "votes": "2",
            "user": "Anton Kochkov",
            "time": "Nov 22, 2019 at 8:25",
            "is_accepted": false,
            "comments": []
        }
    ]
}