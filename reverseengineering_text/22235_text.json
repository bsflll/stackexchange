{
    "title": "How to decrypt the password using radare2 or gdb?",
    "link": "https://reverseengineering.stackexchange.com/questions/22235/how-to-decrypt-the-password-using-radare2-or-gdb",
    "content": "<pre><code>                                                              .--------------------------------------------------.\n                                                              | [0x804851b]                                      |\n                                                              | (fcn) main 522                                   |\n                                                              |   int main (int argc, char **argv, char **envp); |\n                                                              | ; var int32_t var_38h @ ebp-0x38                 |\n                                                              | ; var int32_t var_34h @ ebp-0x34                 |\n                                                              | ; var int32_t var_30h @ ebp-0x30                 |\n                                                              | ; var int32_t var_2ch @ ebp-0x2c                 |\n                                                              | ; var int32_t var_28h @ ebp-0x28                 |\n                                                              | ; var int32_t var_24h @ ebp-0x24                 |\n                                                              | ; var int32_t var_ch @ ebp-0xc                   |\n                                                              | ; var int32_t var_8h @ ebp-0x8                   |\n                                                              | ; arg int32_t arg_4h @ esp+0x4                   |\n                                                              | ; DATA XREF from entry0 @ 0x8048437              |\n                                                              | lea ecx, [arg_4h]                                |\n                                                              | and esp, 0xfffffff0                              |\n                                                              | push dword [ecx - 4]                             |\n                                                              | push ebp                                         |\n                                                              | mov ebp, esp                                     |\n                                                              | push ebx                                         |\n                                                              | push ecx                                         |\n                                                              | sub esp, 0x30                                    |\n                                                              | mov eax, dword gs:[0x14]                         |\n                                                              | mov dword [var_ch], eax                          |\n                                                              | xor eax, eax                                     |\n                                                              | mov dword [var_2ch], 0                           |\n                                                              | mov dword [var_38h], 0                           |\n                                                              | mov dword [var_34h], 1                           |\n                                                              | sub esp, 0xc                                     |\n                                                              | ; 0x80487d0                                      |\n                                                              | ; \"Enter the password: \"                         |\n                                                              | push str.Enter_the_password:                     |\n                                                              | ; int printf(const char *format)                 |\n                                                              | call sym.imp.printf;[oa]                         |\n                                                              | add esp, 0x10                                    |\n                                                              | sub esp, 4                                       |\n                                                              | lea eax, [var_24h]                               |\n                                                              | ; 20                                             |\n                                                              | add eax, 0x14                                    |\n                                                              | push eax                                         |\n                                                              | lea eax, [var_24h]                               |\n                                                              | ; 16                                             |\n                                                              | add eax, 0x10                                    |\n                                                              | push eax                                         |\n                                                              | lea eax, [var_24h]                               |\n                                                              | ; 12                                             |\n                                                              | add eax, 0xc                                     |\n                                                              | push eax                                         |\n                                                              | lea eax, [var_24h]                               |\n                                                              | add eax, 8                                       |\n                                                              | push eax                                         |\n                                                              | lea eax, [var_24h]                               |\n                                                              | add eax, 4                                       |\n                                                              | push eax                                         |\n                                                              | lea eax, [var_24h]                               |\n                                                              | push eax                                         |\n                                                              | ; 0x80487e5                                      |\n                                                              | ; \"%d %d %d %d %d %d\"                            |\n                                                              | push str.d__d__d__d__d__d                        |\n                                                              | ; int scanf(const char *format)                  |\n                                                              | call sym.imp.__isoc99_scanf;[ob]                 |\n                                                              | add esp, 0x20                                    |\n                                                              | sub esp, 0xc                                     |\n                                                              | ; 8                                              |\n                                                              | push 8                                           |\n                                                              | ;  void *malloc(size_t size)                     |\n                                                              | call sym.imp.malloc;[oc]                         |\n                                                              | add esp, 0x10                                    |\n                                                              | mov dword [var_28h], eax                         |\n                                                              | mov eax, dword [var_28h]                         |\n                                                              | ; [0x16452:4]=-1                                 |\n                                                              | mov dword [eax], 0x16452                         |\n                                                              | sub esp, 0xc                                     |\n                                                              | ; 8                                              |\n                                                              | push 8                                           |\n                                                              | ;  void *malloc(size_t size)                     |\n                                                              | call sym.imp.malloc;[oc]                         |\n                                                              | add esp, 0x10                                    |\n                                                              | mov edx, eax                                     |\n                                                              | mov eax, dword [var_28h]                         |\n                                                              | mov dword [eax + 4], edx                         |\n                                                              | mov eax, dword [var_28h]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | ; [0x16456:4]=-1                                 |\n                                                              | mov dword [eax], 0x16456                         |\n                                                              | mov eax, dword [var_28h]                         |\n                                                              | mov ebx, dword [eax + 4]                         |\n                                                              | sub esp, 0xc                                     |\n                                                              | ; 8                                              |\n                                                              | push 8                                           |\n                                                              | ;  void *malloc(size_t size)                     |\n                                                              | call sym.imp.malloc;[oc]                         |\n                                                              | add esp, 0x10                                    |\n                                                              | mov dword [ebx + 4], eax                         |\n                                                              | mov eax, dword [var_28h]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | ; [0x1645d:4]=-1                                 |\n                                                              | mov dword [eax], 0x1645d                         |\n                                                              | mov eax, dword [var_28h]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov ebx, dword [eax + 4]                         |\n                                                              | sub esp, 0xc                                     |\n                                                              | ; 8                                              |\n                                                              | push 8                                           |\n                                                              | ;  void *malloc(size_t size)                     |\n                                                              | call sym.imp.malloc;[oc]                         |\n                                                              | add esp, 0x10                                    |\n                                                              | mov dword [ebx + 4], eax                         |\n                                                              | mov eax, dword [var_28h]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | ; [0x1645e:4]=-1                                 |\n                                                              | mov dword [eax], 0x1645e                         |\n                                                              | mov eax, dword [var_28h]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov ebx, dword [eax + 4]                         |\n                                                              | sub esp, 0xc                                     |\n                                                              | ; 8                                              |\n                                                              | push 8                                           |\n                                                              | ;  void *malloc(size_t size)                     |\n                                                              | call sym.imp.malloc;[oc]                         |\n                                                              | add esp, 0x10                                    |\n                                                              | mov dword [ebx + 4], eax                         |\n                                                              | mov eax, dword [var_28h]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | ; [0x16465:4]=-1                                 |\n                                                              | mov dword [eax], 0x16465                         |\n                                                              | mov eax, dword [var_28h]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov ebx, dword [eax + 4]                         |\n                                                              | sub esp, 0xc                                     |\n                                                              | ; 8                                              |\n                                                              | push 8                                           |\n                                                              | ;  void *malloc(size_t size)                     |\n                                                              | call sym.imp.malloc;[oc]                         |\n                                                              | add esp, 0x10                                    |\n                                                              | mov dword [ebx + 4], eax                         |\n                                                              | mov eax, dword [var_28h]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | ; [0xfffe9bf8:4]=-1                              |\n                                                              | mov dword [eax], 0xfffe9bf8                      |\n                                                              | mov eax, dword [var_28h]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov eax, dword [eax + 4]                         |\n                                                              | mov dword [eax + 4], 0                           |\n                                                              | mov eax, dword [var_28h]                         |\n                                                              | mov dword [var_30h], eax                         |\n                                                              | jmp 0x80486d7                                    |\n                                                              `--------------------------------------------------'\n                                                                  v\n                                                                  |\n                                                                  '---------.\n                                     .----------------------------------------.\n                                     |                                      | |\n                                     |                                .-----------------------------------.\n                                     |                                |  0x80486d7 [oi]                   |\n                                     |                                | ; CODE XREF from main @ 0x80486a5 |\n                                     |                                | cmp dword [var_30h], 0            |\n                                     |                                | jne 0x80486a7                     |\n                                     |                                `-----------------------------------'\n                                     |                                      t f\n                                     |                                      | |\n                                     |    .---------------------------------' |\n                                     |    |                                   '-----------------------------.\n                                     |    |                                                                 |\n                                     |.----------------------------------------.                        .---------------------------.\n                                     ||  0x80486a7 [of]                        |                        |  0x80486dd [oj]           |\n                                     || mov eax, dword [var_30h]               |                        | cmp dword [var_34h], 0    |\n                                     || mov ebx, dword [eax]                   |                        | je 0x80486f5              |\n                                     || mov eax, dword [var_38h]               |                        `---------------------------'\n                                     || mov eax, dword [ebp + eax*4 - 0x24]    |                                f t\n                                     || sub esp, 0xc                           |                                | |\n                                     || push eax                               |                                | |\n                                     || call sym.encrypt;[oe]                  |                                | |\n                                     || add esp, 0x10                          |                                | |\n                                     || cmp ebx, eax                           |                                | |\n                                     || je 0x80486ca                           |                                | |\n                                     |`----------------------------------------'                                | |\n                                     |        f t                                                               | |\n                                     |        | |                                                               | |\n                                     |        | '-------------------------------.                               | |\n                                     |        '--.                              |                               | |\n                                     |           |                              |                               | '---------.\n                                     |           |                              |           .-------------------'           |\n                                     |           |                              |           |                               |\n                                     |       .---------------------------.      |       .---------------------------.   .---------------------------.\n                                     |       |  0x80486c3 [og]           |      |       |  0x80486e3 [ol]           |   |  0x80486f5 [om]           |\n                                     |       | mov dword [var_34h], 0    |      |       | sub esp, 0xc              |   | sub esp, 0xc              |\n                                     |       `---------------------------'      |       | ; 0x80487f7               |   | ; 0x8048800               |\n                                     |           v                              |       | ; \"Correct!\"              |   | ; \"Incorrect!\"            |\n                                     |           |                              |       | push str.Correct          |   | push str.Incorrect        |\n                                     |           |                              |       | ; int puts(const char *s) |   | ; int puts(const char *s) |\n                                     |           |                              |       | call sym.imp.puts;[ok]    |   | call sym.imp.puts;[ok]    |\n                                     |           |                              |       | add esp, 0x10             |   | add esp, 0x10             |\n                                     |           |                              |       | jmp 0x8048705             |   `---------------------------'\n                                     |           |                              |       `---------------------------'       v\n                                     |           |                              |           v                               |\n                                     |           |                              |           |                               |\n                                     |           '----------.                   |           |                               |\n                                     |                      |                   |           '-------------.                 |\n                                     |                      |                   |                         | .---------------'\n                                     |                      | .-----------------'                         | |\n                                     |                      | |                                           | |\n                                     |                .-----------------------------.               .-----------------------------------.\n                                     |                |  0x80486ca [oh]             |               |  0x8048705 [on]                   |\n                                     |                | add dword [var_38h], 1      |               | ; CODE XREF from main @ 0x80486f3 |\n                                     |                | mov eax, dword [var_30h]    |               | mov eax, 0                        |\n                                     |                | mov eax, dword [eax + 4]    |               | mov ecx, dword [var_ch]           |\n                                     |                | mov dword [var_30h], eax    |               | xor ecx, dword gs:[0x14]          |\n                                     |                `-----------------------------'               | je 0x804871b                      |\n                                     |                    v                                         `-----------------------------------'\n                                     |                    |                                                 f t\n                                     |                    |                                                 | |\n                                     `--------------------'                                                 | |\n                                                                                                            | '-----------------.\n                                                                                      .---------------------'                   |\n                                                                                      |                                         |\n                                                                                  .------------------------------------.    .-----------------------.\n                                                                                  |  0x8048716 [op]                    |    |  0x804871b [oq]       |\n                                                                                  | ; void __stack_chk_fail(void)      |    | lea esp, [var_8h]     |\n                                                                                  | call sym.imp.__stack_chk_fail;[oo] |    | pop ecx               |\n                                                                                  `------------------------------------'    | pop ebx               |\n                                                                                                                            | pop ebp               |\n                                                                                                                            | lea esp, [ecx - 4]    |\n                                                                                                                            | ret                   |\n</code></pre>\nHow to decrypt the password from \"call sym.encrypt;[oe]\". When I use the breakpoints (radare2) the hex values of the registers are encrypted (i need the value of ebx shown in the image).And what is the significance of the malloc function? Is there non primitive data structure used in this program?\n",
    "votes": "0",
    "answers": 1,
    "views": "718",
    "tags": [
        "ida",
        "disassembly",
        "radare2",
        "gdb",
        "decryption"
    ],
    "user": null,
    "time": "Nov 6, 2019 at 20:15",
    "comments": [
        {
            "user": "user29687",
            "text": "I am stuck at that point. How to proceed to decrypt that. I have no idea to solve the encrypted function.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "First of All post only relevant code avoid posting some thing that requires horizontal scrolling\nsecond do not post images where you can post copy paste-able code \nsimplifying the code it is basically \n<pre><code>printf (\"enter your password\n\");\nint a,...; \nscanf(\"%d%d%d%%d%%d%d\" , &a,...)\nans1 == encrypt(a) ? \"correct\" : \"incorrect\"\n</code></pre>\nwhere encrypt() is simply a few mathematical operations like add, sub,xor , not on the provided input\nthe first integer is 4 (5 more ints need to be solved)\n<pre><code>>>> hex((((~((4 - 0x18)^0x7a69))^0x11e61)^0x37)+0x26)\n'0x16452'  << this is there in your ebx and others are there in the code you posted\n</code></pre>\n",
            "votes": "1",
            "user": "blabb",
            "time": "Oct 4, 2019 at 17:59",
            "is_accepted": true,
            "comments": []
        }
    ]
}