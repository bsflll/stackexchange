{
    "title": "DLL Injection does not work twice",
    "link": "https://reverseengineering.stackexchange.com/questions/16230/dll-injection-does-not-work-twice",
    "content": "I created a program that performs DLL injection. It does that by opening the process with <pre><code>OpenProcess</code></pre>, writes the DLL path to the process and creates a remote thread with <pre><code>CreateRemoteThread</code></pre> with the dll as a parameter.(The DLL just spawns a messagebox). It works just fine but the problem is the second time i can't see the messagebox. The functions <pre><code>OpenProcess</code></pre>, <pre><code>CreateRemoteThread</code></pre>, <pre><code>VirtualAllocEx</code></pre>, <pre><code>WriteProcessMemory</code></pre> all return true but i can't see the thread being created and the DLL does not run.\nThanks.\n",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "dll",
        "dll-injection",
        "thread",
        "process"
    ],
    "user": "rustam Shirinov",
    "time": "Sep 1, 2017 at 8:40",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "second time during the same run or another one?\n",
            "time": null
        },
        {
            "user": "rustam Shirinov",
            "text": "second time i try to inject the same dll to the same process, the dll does not run @IgorSkochinsky\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "are you  calling <pre><code>LoadLibrary</code></pre> in the injected thread?\n",
            "time": null
        },
        {
            "user": "rustam Shirinov",
            "text": "yes i get a handle to the LoadLibrary function and pass it as a parameter to the CreateRemoteThread @IgorSkochinsky\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Calling <pre><code>LoadLibrary</code></pre> twice with the same DLL name only increases the load counter but does not cause DLL entrypoint to be called again. From the doc (emphasis mine):\n\nIf the specified module is a DLL that is not already loaded for the\n  calling process, the system calls the DLL's DllMain function with the\n  DLL_PROCESS_ATTACH value. If DllMain returns TRUE, LoadLibrary returns\n  a handle to the module. If DllMain returns FALSE, the system unloads\n  the DLL from the process address space and LoadLibrary returns NULL.\n  It is not safe to call LoadLibrary from DllMain. For more information,\n  see the Remarks section in DllMain.\n\nSo if you need to execute your code again you'll have to do it explicitly, <pre><code>LoadLibrary</code></pre> won't do it for you. \nEDIT:\nOne possible solution could be to use the address of the function in your (already loaded) DLL instead of <pre><code>LoadLibrary</code></pre> as the address of the second dinjected thread.\n",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Sep 1, 2017 at 14:34",
            "is_accepted": true,
            "comments": [
                {
                    "user": "rustam Shirinov",
                    "text": "<span class=\"comment-copy\">I am sorry but i did not understand how exactly i am going to do it explicitly. This is the code: <code>remote_dll_path= (LPVOID)VirtualAllocEx(hProcess, &amp;RemoteAddress, size, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE); WriteProcessMemory(hProcess, remote_dll_path, full_dll_path, size, NULL); hKernel32 = GetModuleHandleA(\"kernel32.dll\"); LoadLibraryAddress = GetProcAddress(hKernel32, \"LoadLibraryA\"); CreateRemoteThread(hProcess, 0, 0, (LPTHREAD_START_ROUTINE)LoadLibraryAddress, remote_dll_path, 0, &amp;threadId); VirtualFreeEx(hProcess, (LPVOID)remote_dll_path, size, MEM_DECOMMIT)</code></span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">you'll need to add some shellcode which would call the necessary function from the DLL. Just <code>LoadLibraryA</code> by itself is not enough if you need to run it twice.</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">also see my edit.</span>",
                    "time": null
                }
            ]
        }
    ]
}