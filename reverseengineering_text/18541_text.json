{
    "title": "Determine if an ELF file is signed or not",
    "link": "https://reverseengineering.stackexchange.com/questions/18541/determine-if-an-elf-file-is-signed-or-not",
    "content": "I need some help in determining if an ELF file is signed or with a valid signature or not.\nI have used the <pre><code>readelf</code></pre> tool with <pre><code>-S</code></pre> option in order to view the section headers and more specifically, the <pre><code>sig</code></pre> section header. This is the result I got:\n<pre><code>[30] .sha256_sig         PROGBITS         00000000000000000  00023276\n[31] .sig_key            PROGBITS         00000000000000000  00023676\n</code></pre>\nFew questions:\n\nSince there are two headers (<pre><code>sha256_sig</code></pre> and <pre><code>sig_key</code></pre>), does this mean the ELF is signed?\nHow can I verify the signature?\n",
    "votes": "7",
    "answers": 1,
    "views": "1k",
    "tags": [
        "elf",
        "binary-format"
    ],
    "user": "user9248612",
    "time": "Jun 18, 2018 at 12:21",
    "comments": [],
    "answers_data": [
        {
            "content": "The <pre><code>-S</code></pre> flag lists all section headers, not \"sig[nature] section header\". The <pre><code>S</code></pre> stands for \"sections\", not \"signature\".\nMoreover, these section names appear to be quite unrelated to linux itself, but are part of the linux AppImage application, a third party application framework that includes it's own signed update mechanism. The only references I could find to these section names are part of it's update mechanism as can be seen in this Pull Request.\n",
            "votes": "2",
            "user": "NirIzr",
            "time": "Jun 17, 2018 at 17:42",
            "is_accepted": false,
            "comments": []
        }
    ]
}