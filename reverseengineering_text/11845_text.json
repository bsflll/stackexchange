{
    "title": "Interpreting variable names in radare2",
    "link": "https://reverseengineering.stackexchange.com/questions/11845/interpreting-variable-names-in-radare2",
    "content": "I am reversing an ELF executable, and got the following:\n<pre><code>0x080480ab      b880800408     movl $entry0, %eax          ; eip\n0x080480b0      bb23810408     movl $section_end.LOAD0, %ebx ; section_end.LOAD0\n</code></pre>\nIt turned out that <pre><code>entry0</code></pre> contains the beginning of the <pre><code>.text</code></pre> section and <pre><code>section_end.LOAD0</code></pre> the end of it. However, this was not clear for immediately (<pre><code>entry0</code></pre> is now clear, but I still do not know the origin of name <pre><code>section_end.LOAD0</code></pre>). Is there a documentation for these names? If not, can I ask <pre><code>radare2</code></pre> to use memory addresses instead of these names?\n",
    "votes": "1",
    "answers": 1,
    "views": "664",
    "tags": [
        "radare2"
    ],
    "user": "robert",
    "time": "Jan 26, 2016 at 18:04",
    "comments": [
        {
            "user": "Jongware",
            "text": "Typically, those are explicitly exported symbols, and your disassembler helpfully replaces the addresses with the exported name.\n",
            "time": null
        },
        {
            "user": "robert",
            "text": "How can I improve the question dear downvoter?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<pre><code>entry0</code></pre> is the first entrypoint of your binary, <pre><code>section_end.LOAD0</code></pre> is likely the end of the first (hence the <pre><code>0</code></pre>) LOADable section :)\n",
            "votes": "2",
            "user": "jvoisin",
            "time": "Jan 26, 2016 at 18:06",
            "is_accepted": false,
            "comments": []
        }
    ]
}