{
    "title": "i need software to decode this subtitle xml file, anyone know what it encodes with?",
    "link": "https://reverseengineering.stackexchange.com/questions/32410/i-need-software-to-decode-this-subtitle-xml-file-anyone-know-what-it-encodes-wi",
    "content": "This is a subtitle file encoded by xml, is there any way to decode this xml file to srt?\nSubtitle link xml\n",
    "votes": "0",
    "answers": 1,
    "views": "406",
    "tags": [
        "decompilation",
        "radare2",
        "decryption",
        "deobfuscation",
        "decompiler"
    ],
    "user": "Đức Nguyễn",
    "time": "Oct 20, 2023 at 20:52",
    "comments": [
        {
            "user": "user7290573",
            "text": "Any background info on the file? Where's it from?\n",
            "time": null
        },
        {
            "user": "Đức Nguyễn",
            "text": "it comes from here, i want to download this subtitle file is there any way to decode it  gohitv.com/series/vi-vn/…\n",
            "time": null
        },
        {
            "user": "Eikichi Onizuka",
            "text": "Can you create a script that only decodes the xml file.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "It's AES encrypted, but fortunately it's pretty trivial to see what's going on in the JavaScript file responsible for decoding (https://www.gohitv.com/series/js/hiplayer.min.js) by using browser debugging tools.\nHere's a code snippet for decoding that I've tidied up based on the JS file above:\n<pre><code>(function() {\n    const key = CryptoJS.enc.Utf8.parse(\"52e3d76bf3115bbd\");\n    const vector = CryptoJS.enc.Utf8.parse(\"62543816fdce10e7\");\n\n    // First <con> element from XML file\n    const encoded = \"XSTDxIM1NI+9kYheVJG7ywPKAmg7YNtRKmvhLt6R5umov1aFpyEXrZopsQiHBBBfjrr052rcchm8JBlxY8c47mwz8hUw72VjmqQEna3GHRI=\";\n    const decoded = CryptoJS.AES.decrypt(encoded, key, {\n        iv: vector,\n        mode: CryptoJS.mode.CBC,\n        padding: CryptoJS.pad.Pkcs7,\n    }).toString(CryptoJS.enc.Utf8);\n\n    return decoded; // TÊN NGƯỜI, TỔ CHỨC, TÌNH TIẾT TRONG PHIM\\NKHÔNG CÓ THẬT.\n})();\n</code></pre>\nYou will need CryptoJS: https://cryptojs.gitbook.io/\n\nEdit: I've wrapped this all up in a Python script which you can find here.\nIn terms of reverse engineering the process, this is how the decrypting happens:\n\nFind the episode ID (search the page source for <pre><code>eid=\"...\"</code></pre>)\nGET request to <pre><code>https://api.gohitv.com/s1/w/series/api/episode/detail</code></pre> with <pre><code>eid</code></pre> param and <pre><code>did</code></pre> param (random 24 char ID)\nThe response includes a timestamp and encrypted base64 data. To decrypt the data:\n\nCreate MD5 hash #1 of <pre><code>did</code></pre> (from step 2) + the timestamp\nCreate MD5 hash of hash #1 + <pre><code>Wcb26arWkvkcAZc378eR</code></pre> (a hardcoded key in the site's JavaScript)\nUse the first 16 bytes of hash #2 as the AES key and the last 16 bytes as the vector\n\n\nGET request to <pre><code>https://api.gohitv.com/s1/w/series/api/series/rslv</code></pre> with the following params:\n\n<pre><code>eid</code></pre> - episode ID\n<pre><code>scid</code></pre> - source ID (from step 3)\n<pre><code>sid</code></pre> - series ID (from step 3)\n<pre><code>sq</code></pre> - seems to always be <pre><code>1</code></pre>\n<pre><code>sign</code></pre> - MD5 hash of: query string of above values + <pre><code>bywebabcd1234</code></pre> (another hardcoded key)\n\n\nFind subtitle data in response (includes download URL + key)\nDecrypt the subtitle contents using the key as outlined in step 3.3\n",
            "votes": "6",
            "user": "user7290573",
            "time": "Jan 6, 2024 at 11:02",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Đức Nguyễn",
                    "text": "<span class=\"comment-copy\">Sorry I haven't come back here in a few months, thank you for helping me, but there is one thing I can ask you, where did you find the key and vector? Can this be earned on the app?</span>",
                    "time": null
                },
                {
                    "user": "user7290573",
                    "text": "<span class=\"comment-copy\">@ĐứcNguyễn take a look at the <code>GET</code> requests to <code>api.gohitv.com</code>. Each request has a <code>did</code> header (which is a random 24 char string) and returns a timestamp along with encrypted base64 data. Calculate <code>md5(md5(did + timestamp) + \"Wcb26arWkvkcAZc378eR\")</code> - first 16 bytes is the key, last 16 bytes is the vector. The <code>Wcb2 ...</code> value is a hardcoded AES key on the page.</span>",
                    "time": null
                },
                {
                    "user": "Đức Nguyễn",
                    "text": "<span class=\"comment-copy\">Hello, I just now have time to revisit this article. Can other urls be downloaded? Can other episodes be watched on the mobile app? Can I get subs, for example: <a href=\"https://www.gohitv.com/series/vi-vn/love-is-for-suckers/7?frm=home&amp;frmnav=wn_vdDzLAubEu3LkUvr_qDe&amp;frmblk=wm_9LsNsy9dm4W_EHS0e_gQ\" rel=\"nofollow noreferrer\">gohitv.com/series/vi-vn/love-is-for-suckers/…</a></span>",
                    "time": null
                },
                {
                    "user": "Đức Nguyễn",
                    "text": "<span class=\"comment-copy\">I got the error Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it. How can I use it? Thank you for your help</span>",
                    "time": null
                },
                {
                    "user": "user7290573",
                    "text": "<span class=\"comment-copy\">I don't know about the mobile app as I only tried with the free links; you might be able to include your session token/login details in the requests.  Your error sounds like it could just be your firewall.  I suggest opening an issue on the GitHub page if you have any issues with the script - as far as reverse engineering goes, this has been solved and the question should be marked as completed.</span>",
                    "time": null
                }
            ]
        }
    ]
}