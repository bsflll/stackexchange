{
    "title": "finding file I/O in IDA Pro (actually IDA free)",
    "link": "https://reverseengineering.stackexchange.com/questions/20493/finding-file-i-o-in-ida-pro-actually-ida-free",
    "content": "Am using the free version of IDA pro, and have loaded the program with no apparent problems. I see assembler and stuff.\nThe parts of the program I am interested in is where it reads a file. This is a binary file that (I assume) goes into some data structure. I am trying to find out the binary format used in the file.\nIs there some simple way to find the relevant parts of the code?\nEdit: it is a Windows program, not very old, and I am using Linux (if that matters).\n",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "file-format"
    ],
    "user": "Tomas By",
    "time": "Jan 28, 2019 at 17:35",
    "comments": [
        {
            "user": "NirIzr",
            "text": "Hi and welcome to RE.SE! We usually avoid providing full solutions to specific problems where it appears OP spent little time trying to pursue the challenge themselves. The most basic thing to do in such a case would be finding references to I/O functions. Have you tried mapping the common file I/O functions and search for them in the program's import table(s)?\n",
            "time": null
        },
        {
            "user": "Tomas By",
            "text": "@Nirlzr: I have actually spent a bit of time on this, but by analysing the file, not the program. I was just wondering if there were any more specific (and thereby more useful) tools for this particular problem.\n",
            "time": null
        },
        {
            "user": "Biswapriyo",
            "text": "Could you share the link of that executable file?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "You need to focus on imported functions which access to file.\nIn your case it could be WinAPI (CreateFileA/W, ReadFile), libc (fopen, fread), libc++ (std::fstream, be careful about the name mangling), etc.\nHowever, the executable could also rely on 3rd parties DLL to do that.\nThen you can use the cross-references to see where your program calls these functions.\n",
            "votes": "1",
            "user": "wisk",
            "time": "Jan 28, 2019 at 18:35",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Tomas By",
                    "text": "<span class=\"comment-copy\">Hmm, yes. At the moment I do not really know anything more about the program (ie which language), but that can be determined, I guess.</span>",
                    "time": null
                },
                {
                    "user": "wisk",
                    "text": "<span class=\"comment-copy\">Yes, could you share the list of imported function?</span>",
                    "time": null
                }
            ]
        }
    ]
}