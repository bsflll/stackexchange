{
    "title": "How to disassemble/run mips ELF file ? (with readelf error)",
    "link": "https://reverseengineering.stackexchange.com/questions/8647/how-to-disassemble-run-mips-elf-file-with-readelf-error",
    "content": "So i want to disassemble and then run a MIPS elf file for the first time. As i don't have MIPS hardware i am using mipsel-unknown-linux-gnu toolchain.Here comes the problem. The output of the command file myelf is:\n<pre><code>ELF 32-bit LSB executable, MIPS, MIPS-I version 1 (SYSV), statically linked (uses shared libs), stripped\n</code></pre>\nBut when i try to disassemble the file i get:\n<pre><code>mipsel-unknown-linux-gnu-objdump: myelf: File format not recognized\n</code></pre>\nI get the same error when i want to run it or to debug it. But if i write a small program in MIPS assembly (using an edit and mipsel-unknown-linux-gnu-as as assembler and mipsel-unknown-linux-gnu-ld as a linker) i can run it and debug it so i'm sure the problem comes from myelf file. Actually i can disassemble myelf with IDA but i want to follow the execution using gdb under linux.\nThen i did a readelf and this is the output of mipsel-unknown-linux--u-readelf -a myelf:\n<pre><code>ELF Header:\n  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 \n  Class:                             ELF32\n  Data:                              2's complement, little endian\n  Version:                           1 (current)\n  OS/ABI:                            UNIX - System V\n  ABI Version:                       0\n  Type:                              EXEC (Executable file)\n  Machine:                           MIPS R3000\n  Version:                           0x1\n  Entry point address:               0x400670\n  Start of program headers:          52 (bytes into file)\n  Start of section headers:          4132 (bytes into file)\n  Flags:                             0x1007, noreorder, pic, cpic, o32, mips1\n  Size of this header:               52 (bytes)\n  Size of program headers:           32 (bytes)\n  Number of program headers:         9\n  Size of section headers:           40 (bytes)\n  Number of section headers:         30\n  Section header string table index: 29\nreadelf: Error: Unable to read in 0x69737265 bytes of string table\n\nSection Headers:\n  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al\n  [ 0] <no-name>         LOUSER+6f0fbdbf bdbfefbd bdbfef3b f286821 bfef4abd WAXxMSLOTxxxxxxxxop 1992146927 4022190063 3220159935\nreadelf: Warning: section 0: sh_link value of 1992146927 is larger than the number of sections\n  [ 1] <no-name>         09bdbfef: <unkn bfefbdbf bfef58bd ef3d6ebd ef5d6e20 WAXxSILOGTxxxxxxxop 3220159935 3220134333 1483756221\nreadelf: Warning: section 1: sh_link value of 3220159935 is larger than the number of sections\n  [ 2] <no-name>         LOUSER+3dbfefbd bfef1257 ef1e67bd bfefbdbf efbdbfef WAXIOGTxxxxxxxxop 3183472573 1589493743 3183472479\nreadelf: Warning: section 2: sh_link value of 3183472573 is larger than the number of sections\n  [ 3] <no-name>         LOUSER+3fefbdbf bfef35bd bfef51bd bfef07bd bdbfef38 WXxMSLOGxxxxxxop 4017489853 1393212863 498974703\nreadelf: Warning: section 3: sh_link value of 4017489853 is larger than the number of sections\n  [ 4] <no-name>         LOUSER+3dbfef7c 25bdbfef 44bdbfef efbdbfef efbdbfef WAXOGTxxxxxxxxop 4013997503 4014390719 1532607935\nreadelf: Warning: section 4: sh_link value of 4013997503 is larger than the number of sections\n  [ 5] <no-name>         LOUSER+6f17bdbf bfef1fbd ef3d6dbd 2b4ebdbf ef3a332c WAXxMSLOTxxxxxxxxop 700301295 3183472475 3183472441\nreadelf: Warning: section 5: sh_link value of 700301295 is larger than the number of sections\n  [ 6] <no-name>         LOUSER+6f15bdbf ef0f15bd bfefbdbf bdbfefbd bfef4e90 WAXxMSLOTxxxxxxxxop 3220132880 3220113853 3661197501\nreadelf: Warning: section 6: sh_link value of 3220132880 is larger than the number of sections\n  [ 7] <no-name>         LOUSER+6f1c2e62 64bdbfef 4a3d369 ef603c51 ef40bdbf WAXxMSLOTxxxxxxop 1366867391 700301295 4011659522\nreadelf: Warning: section 7: sh_link value of 1366867391 is larger than the number of sections\n  [ 8] <no-name>         4c2cbdbf: <unkn bdbfefbd bfef3c4f ef476cbd ef1d10bd AXMSIOGTxxxxxxop 386514367 3183472428 3220142970\nreadelf: Warning: section 8: sh_link value of 386514367 is larger than the number of sections\n  [ 9] <no-name>         LOUSER+24c2bdbf 42781f57 efb4a5e5 bfefbdbf 716bdbf WAXxSILOGTxxxxxxxop 3183472573 4012516894 4016422335\nreadelf: Warning: section 9: sh_link value of 3183472573 is larger than the number of sections\n  [10] <no-name>         LOUSER+3fefbdbf 476e0abd 18bdbfef bdbfef32 4bdbfef WXxMSLGxxxxxxop 3183472447 4022190063 525516223\nreadelf: Warning: section 10: sh_link value of 3183472447 is larger than the number of sections\n  [11] <no-name>         LOUSER+3dbfef0f bdbfef35 ef5a2137 5415bdbf efbdbfef AMIOGTxxxxxxxxop 3220117023 3183472573 3183472496\nreadelf: Warning: section 11: sh_link value of 3220117023 is larger than the number of sections\n  [12] <no-name>         LOUSER+3dbfefbd 80dc78ae efbdbfef bfefbdbf bdbfefbd AXxTxxxop 3220115133 4015879101 3220159935\nreadelf: Warning: section 12: sh_link value of 3220115133 is larger than the number of sections\n  [13] <no-name>         LOUSER+3dbfef4a cf6622bd bdbfef89 77bdbfef ef714abd WASIOTxxxxxop 3220122624 3220140989 3220129981\nreadelf: Warning: section 13: sh_link value of 3220122624 is larger than the number of sections\n  [14] <no-name>         LOUSER+6f202b35 5b1a78bd efbdbfef bfefbdbf ef37bdbf WAXxMSLOTxxxxxxxxop 3183472573 3183472489 4022190063\nreadelf: Warning: section 14: sh_link value of 3183472573 is larger than the number of sections\n  [15] <no-name>         2a0e3fbd: <unkn efbdbfef ef3abdbf ef15bdbf bfefbdbf WxOGTxxxxxxxxop 4013014463 4012883391 4014063039\nreadelf: Warning: section 15: sh_link value of 4013014463 is larger than the number of sections\n  [16] <no-name>         LOUSER+6fbdbfef bfefbdbf bdbfefbd 3fbdbfef ef0961bd WAXxMSLOTxxxxxxop 1899399115 3183472494 3220112411\nreadelf: Warning: section 16: sh_link value of 1899399115 is larger than the number of sections\n  [17] <no-name>         185a7404: <unkn 0038bdbf 4abdbfef bdbfef09 9631ebd WAXxMSOGxxxxop 985513967 4010489125 3220159935\nreadelf: Warning: section 17: sh_link value of 985513967 is larger than the number of sections\n  [18] <no-name>         LOUSER+6fa4db38 00bdbfef 000000 000000 bfef0000 WAXxMSLOTxxxxxop  0   0  0\n  [19] <no-name>         410c3000: <unkn 00000000 000000 bdbfef00 7000400b     4009771013 1074249151 3183472384\nreadelf: Warning: section 19: sh_link value of 4009771013 is larger than the number of sections\n  [20] <no-name>         0000400b: <unkn ef00400b 4009bdbf 400b4000 00   p 1074475008 1074470912 1074466816\nreadelf: Warning: section 20: sh_link value of 1074475008 is larger than the number of sections\n  [21] <no-name>         LOUSER+3dbfef00 0000400b ef000000 4007bdbf bdbfefbd Wxx 117440512 4022190063 3220159935\nreadelf: Warning: section 21: sh_link value of 117440512 is larger than the number of sections\n  [22] <no-name>         NULL            1d000000 1f000000 ef000000 bfefbdbf   p 1074314687   0 4022190063\nreadelf: Warning: section 22: sh_link value of 1074314687 is larger than the number of sections\n  [23] <no-name>         00bdbfef: <unkn 20000000 1d000000 1f000000 00     4009754624 1074380223  0\nreadelf: Warning: section 23: sh_link value of 4009754624 is larger than the number of sections\n  [24] <no-name>         NULL            00001d00 001f00 bdbfef00 efbdbfef     16393 3220127488 3183472573\nreadelf: Warning: section 24: sh_link value of 16393 is larger than the number of sections\n  [25] <no-name>         000000bd: <unkn 00003800 001d00 001f00 2e34206e     1128482560 1143480378 1634296421\nreadelf: Warning: section 25: sh_link value of 1128482560 is larger than the number of sections\n  [26] <no-name>         34202938: <unkn 000f4100 6e670000 7010075 626174 AXxSTxxxxxop 67108864 1932394497 1920234344\nreadelf: Warning: section 26: sh_link value of 67108864 is larger than the number of sections\n  [27] <no-name>         00707265: <unkn 42412e65 61742d49 722e0067 756e672e AXxSGTxxxxxxxop 1852401509 771780454 1702129518\nreadelf: Warning: section 27: sh_link value of 1852401509 is larger than the number of sections\n  [28] <no-name>         LOOS+92d646c    6d616e79 2e006369 68736168 7274736e XSIxxxop 2036608512 1836675950 2036608512\nreadelf: Warning: section 28: sh_link value of 2036608512 is larger than the number of sections\n  [29] <no-name>         LOOS+5762e75    672e006e 762e756e 69737265 74786574 AMSIOGxxxxxop 1918856815 1852386816 771781737\nreadelf: Warning: section 29: sh_link value of 1918856815 is larger than the number of sections\nKey to Flags:\n  W (write), A (alloc), X (execute), M (merge), S (strings)\n  I (info), L (link order), G (group), T (TLS), E (exclude), x (unknown)\n  O (extra OS processing required) o (OS specific), p (processor specific)\n\nThere are no section groups in this file.\n\nProgram Headers:\n  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\n  PHDR           0x000034 0x00400034 0x00400034 0x00120 0x00120 R E 0x4\n  INTERP         0x000154 0x00400154 0x00400154 0x0000a 0x0000a R   0x1\n      [Requesting program interpreter: ]\n  REGINFO        0x1bdbfef 0xbfef0000 0x004001bd 0x1bdbfef 0x180040     0x40000\n  <unknown>: 400 0x010000 0x00000000 0x00000000 0x00040 0xc300040     0x50000\n  NULL           0x010001 0x0c300000 0x0c300000 0xc300041 0x2400041     0x60000\n  NULL           0x020001 0xbfef0000 0x000001bd 0x1bdbfef 0xbfef0040 R E 0xbdbfef\n  <unknown>: bfe 0x0000bd 0x00000007 0x00000004 0x00004 0x00164 R   0x400164\n  <unknown>: 20  0x000020 0x00000004 0x00000004 0x00004 0x1bdbfef     0x4001bd\n  <unknown>: 1bd 0x240040 0x00240000 0x00040000 0x40000 0x00000     0\n\nThere is no dynamic section in this file.\n\nThere are no relocations in this file.\n\nThe decoding of unwind sections for machine type MIPS R3000 is not currently supported.\n\nNo version information found in this file.\n</code></pre>\nAs it's a project from a school dealing with reverse engineering, the elf file may be corrupted or not. I have no idea from what the problem could come from. You can download myelf file from this link. Thank you.\nAnyone have encountered this kind of error or any suggestions ?\n",
    "votes": "4",
    "answers": 1,
    "views": "6k",
    "tags": [
        "disassembly",
        "linux",
        "elf",
        "mips"
    ],
    "user": "creuchmeuch",
    "time": "Apr 7, 2015 at 4:51",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "Some information is missing here. You don't have MIPS hardware, but you're able to write a small program in MIPS assembly and run it? In any case, a question that bascially asks \"what's wrong with file X\" has a much better chance of getting answered if a link to file X is included in the question.\n",
            "time": null
        },
        {
            "user": "creuchmeuch",
            "text": "Thanks, you were right i added the link file at the end of the question and the information about the mipsel-unknown-linux-gnu toolchain.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "This file is completely valid ELF, but you have a problem with the toolchain.\nYou should check correctness of its setup.\nIn addition if you don't have the hardware you can use qemu to run it.\nThere is also aboriginal toolchain that you can try to use.\nOutput of the readelf should be as follows:\n<pre><code>mips-unknown-nto-qnx6.5.0-readelf -a ~/Downloads/myelf \nELF Header:\n  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 \n  Class:                             ELF32\n  Data:                              2's complement, little endian\n  Version:                           1 (current)\n  OS/ABI:                            UNIX - System V\n  ABI Version:                       0\n  Type:                              EXEC (Executable file)\n  Machine:                           MIPS R3000\n  Version:                           0x1\n  Entry point address:               0x400670\n  Start of program headers:          52 (bytes into file)\n  Start of section headers:          4132 (bytes into file)\n  Flags:                             0x1007, noreorder, pic, cpic, o32, mips1\n  Size of this header:               52 (bytes)\n  Size of program headers:           32 (bytes)\n  Number of program headers:         9\n  Size of section headers:           40 (bytes)\n  Number of section headers:         30\n  Section header string table index: 29\n\nSection Headers:\n  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al\n  [ 0]                   NULL            00000000 000000 000000 00      0   0  0\n  [ 1] .interp           PROGBITS        00400154 000154 00000d 00   A  0   0  1\n  [ 2] .note.ABI-tag     NOTE            00400164 000164 000020 00   A  0   0  4\n  [ 3] .reginfo          MIPS_REGINFO    00400184 000184 000018 18   A  0   0  4\n  [ 4] .note.gnu.build-i NOTE            0040019c 00019c 000024 00   A  0   0  4\n  [ 5] .dynamic          DYNAMIC         004001c0 0001c0 0000d8 08   A  8   0  4\n  [ 6] .hash             HASH            00400298 000298 0000a4 04   A  7   0  4\n  [ 7] .dynsym           DYNSYM          0040033c 00033c 000160 10   A  8   1  4\n  [ 8] .dynstr           STRTAB          0040049c 00049c 0000df 00   A  0   0  1\n  [ 9] .gnu.version      VERSYM          0040057c 00057c 00002c 02   A  7   0  2\n  [10] .gnu.version_r    VERNEED         004005a8 0005a8 000030 00   A  8   1  4\n  [11] .init             PROGBITS        004005d8 0005d8 000090 00  AX  0   0  4\n  [12] .text             PROGBITS        00400670 000670 000490 00  AX  0   0 16\n  [13] .MIPS.stubs       PROGBITS        00400b00 000b00 0000a0 00  AX  0   0  4\n  [14] .fini             PROGBITS        00400ba0 000ba0 00004c 00  AX  0   0  4\n  [15] .rodata           PROGBITS        00400bec 000bec 000040 00   A  0   0  4\n  [16] .eh_frame         PROGBITS        00400c2c 000c2c 000004 00   A  0   0  4\n  [17] .ctors            PROGBITS        00410c30 000c30 00000c 00  WA  0   0  4\n  [18] .dtors            PROGBITS        00410c3c 000c3c 000008 00  WA  0   0  4\n  [19] .jcr              PROGBITS        00410c44 000c44 000004 00  WA  0   0  4\n  [20] .data             PROGBITS        00410c50 000c50 0001b0 00  WA  0   0 16\n  [21] .rld_map          PROGBITS        00410e00 000e00 000004 00  WA  0   0  4\n  [22] .got              PROGBITS        00410e10 000e10 00005c 04 WAp  0   0 16\n  [23] .sdata            PROGBITS        00410e6c 000e6c 000004 00 WAp  0   0  4\n  [24] .bss              NOBITS          00410e70 000e70 000010 00  WA  0   0 16\n  [25] .pdr              PROGBITS        00000000 000e70 000080 00      0   0  4\n  [26] .comment          PROGBITS        00000000 000ef0 00001c 01  MS  0   0  1\n  [27] .gnu.attributes   LOOS+ffffff5    00000000 000f0c 000010 00      0   0  1\n  [28] .mdebug.abi32     PROGBITS        00000070 000f1c 000000 00      0   0  1\n  [29] .shstrtab         STRTAB          00000000 000f1c 000107 00      0   0  1\nKey to Flags:\n  W (write), A (alloc), X (execute), M (merge), S (strings)\n  I (info), L (link order), G (group), x (unknown)\n  O (extra OS processing required) o (OS specific), p (processor specific)\n\nThere are no section groups in this file.\n\nProgram Headers:\n  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\n  PHDR           0x000034 0x00400034 0x00400034 0x00120 0x00120 R E 0x4\n  INTERP         0x000154 0x00400154 0x00400154 0x0000d 0x0000d R   0x1\n      [Requesting program interpreter: /lib/ld.so.1]\n  REGINFO        0x000184 0x00400184 0x00400184 0x00018 0x00018 R   0x4\n  LOAD           0x000000 0x00400000 0x00400000 0x00c30 0x00c30 R E 0x10000\n  LOAD           0x000c30 0x00410c30 0x00410c30 0x00240 0x00250 RW  0x10000\n  DYNAMIC        0x0001c0 0x004001c0 0x004001c0 0x000d8 0x000d8 RWE 0x4\n  NOTE           0x000164 0x00400164 0x00400164 0x00020 0x00020 R   0x4\n  NOTE           0x00019c 0x0040019c 0x0040019c 0x00024 0x00024 R   0x4\n  NULL           0x000000 0x00000000 0x00000000 0x00000 0x00000     0x4\n\n Section to Segment mapping:\n  Segment Sections...\n   00     \n   01     .interp \n   02     .reginfo \n   03     .interp .note.ABI-tag .reginfo .note.gnu.build-id .dynamic .hash .dynsym .dynstr .gnu.version .gnu.version_r .init .text .MIPS.stubs .fini .rodata .eh_frame \n   04     .ctors .dtors .jcr .data .rld_map .got .sdata .bss \n   05     .dynamic \n   06     .note.ABI-tag \n   07     .note.gnu.build-id \n   08     \n\nDynamic section at offset 0x1c0 contains 22 entries:\n  Tag        Type                         Name/Value\n 0x00000001 (NEEDED)                     Shared library: [libc.so.6]\n 0x0000000c (INIT)                       0x4005d8\n 0x0000000d (FINI)                       0x400ba0\n 0x00000004 (HASH)                       0x400298\n 0x00000005 (STRTAB)                     0x40049c\n 0x00000006 (SYMTAB)                     0x40033c\n 0x0000000a (STRSZ)                      223 (bytes)\n 0x0000000b (SYMENT)                     16 (bytes)\n 0x70000016 (MIPS_RLD_MAP)               0x410e00\n 0x00000015 (DEBUG)                      0x0\n 0x00000003 (PLTGOT)                     0x410e10\n 0x70000001 (MIPS_RLD_VERSION)           1\n 0x70000005 (MIPS_FLAGS)                 NOTPOT\n 0x70000006 (MIPS_BASE_ADDRESS)          0x400000\n 0x7000000a (MIPS_LOCAL_GOTNO)           7\n 0x70000011 (MIPS_SYMTABNO)              22\n 0x70000012 (MIPS_UNREFEXTNO)            29\n 0x70000013 (MIPS_GOTSYM)                0x6\n 0x6ffffffe (VERNEED)                    0x4005a8\n 0x6fffffff (VERNEEDNUM)                 1\n 0x6ffffff0 (VERSYM)                     0x40057c\n 0x00000000 (NULL)                       0x0\n\nThere are no relocations in this file.\n\nThere are no unwind sections in this file.\n\nSymbol table '.dynsym' contains 22 entries:\n   Num:    Value  Size Type    Bind   Vis      Ndx Name\n     0: 00000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 00000001     0 SECTION GLOBAL DEFAULT  ABS _DYNAMIC_LINKING\n     2: 00400bec     4 OBJECT  GLOBAL DEFAULT   15 _IO_stdin_used\n     3: 00000000     0 OBJECT  WEAK   DEFAULT  UND environ@GLIBC_2.0 (2)\n     4: 00000000     0 OBJECT  WEAK   DEFAULT  UND _environ@GLIBC_2.0 (2)\n     5: 00410e00     0 OBJECT  GLOBAL DEFAULT   21 __RLD_MAP\n     6: 004005d8     0 FUNC    GLOBAL DEFAULT   11 _init\n     7: 004007b0   320 FUNC    GLOBAL DEFAULT   12 main\n     8: 00400b80     0 FUNC    GLOBAL DEFAULT  UND exit@GLIBC_2.0 (2)\n     9: 00400b70     0 FUNC    GLOBAL DEFAULT  UND cbc_crypt@GLIBC_2.2 (3)\n    10: 00400b60     0 FUNC    GLOBAL DEFAULT  UND munmap@GLIBC_2.0 (2)\n    11: 00000000     0 OBJECT  GLOBAL DEFAULT  UND __environ@GLIBC_2.0 (2)\n    12: 00400b50     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.0 (2)\n    13: 004009e8   176 FUNC    GLOBAL DEFAULT   12 __libc_csu_init\n    14: 00400b40     0 FUNC    GLOBAL DEFAULT  UND memcpy@GLIBC_2.0 (2)\n    15: 00400b30     0 FUNC    GLOBAL DEFAULT  UND mprotect@GLIBC_2.0 (2)\n    16: 00400b20     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@GLIBC_2.0 (2)\n    17: 00400b10     0 FUNC    GLOBAL DEFAULT  UND ptrace@GLIBC_2.0 (2)\n    18: 00000000     0 NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses\n    19: 00000000     0 FUNC    WEAK   DEFAULT  UND __gmon_start__\n    20: 004009e0     8 FUNC    GLOBAL DEFAULT   12 __libc_csu_fini\n    21: 00400b00     0 FUNC    GLOBAL DEFAULT  UND mmap@GLIBC_2.0 (2)\n\nHistogram for bucket list length (total of 17 buckets):\n Length  Number     % of total  Coverage\n      0  5          ( 29.4%)\n      1  7          ( 41.2%)     33.3%\n      2  3          ( 17.6%)     61.9%\n      3  1          (  5.9%)     76.2%\n      4  0          (  0.0%)     76.2%\n      5  1          (  5.9%)    100.0%\n\nVersion symbols section '.gnu.version' contains 22 entries:\n Addr: 000000000040057c  Offset: 0x00057c  Link: 7 (.dynsym)\n  000:   0 (*local*)       1 (*global*)      1 (*global*)      2 (GLIBC_2.0)  \n  004:   2 (GLIBC_2.0)     1 (*global*)      1 (*global*)      1 (*global*)   \n  008:   2 (GLIBC_2.0)     3 (GLIBC_2.2)     2 (GLIBC_2.0)     2 (GLIBC_2.0)  \n  00c:   2 (GLIBC_2.0)     1 (*global*)      2 (GLIBC_2.0)     2 (GLIBC_2.0)  \n  010:   2 (GLIBC_2.0)     2 (GLIBC_2.0)     0 (*local*)       0 (*local*)    \n  014:   1 (*global*)      2 (GLIBC_2.0)  \n\nVersion needs section '.gnu.version_r' contains 1 entries:\n Addr: 0x00000000004005a8  Offset: 0x0005a8  Link: 8 (.dynstr)\n  000000: Version: 1  File: libc.so.6  Cnt: 2\n  0x0010:   Name: GLIBC_2.2  Flags: none  Version: 3\n  0x0020:   Name: GLIBC_2.0  Flags: none  Version: 2\n\nNotes at offset 0x00000164 with length 0x00000020:\n  Owner     Data size   Description\n  GNU       0x00000010  NT_GNU_ABI_TAG (ABI version tag)\n\nNotes at offset 0x0000019c with length 0x00000024:\n  Owner     Data size   Description\n  GNU       0x00000014  NT_GNU_BUILD_ID (unique build ID bitstring)\nAttribute Section: gnu\nFile Attributes\n  Tag_GNU_MIPS_ABI_FP: Hard float (-mdouble-float)\n\nPrimary GOT:\n Canonical gp value: 00418e00\n\n Reserved entries:\n   Address     Access  Initial Purpose\n  00410e10 -32752(gp) 00000000 Lazy resolver\n  00410e14 -32748(gp) 80000000 Module pointer (GNU extension)\n\n Local entries:\n   Address     Access  Initial\n  00410e18 -32744(gp) 00400000\n  00410e1c -32740(gp) 00410c30\n  00410e20 -32736(gp) 00000000\n  00410e24 -32732(gp) 00000000\n  00410e28 -32728(gp) 00000000\n\n Global entries:\n   Address     Access  Initial Sym.Val. Type    Ndx Name\n  00410e2c -32724(gp) 004005d8 004005d8 FUNC     11 _init\n  00410e30 -32720(gp) 004007b0 004007b0 FUNC     12 main\n  00410e34 -32716(gp) 00400b80 00400b80 FUNC    UND exit\n  00410e38 -32712(gp) 00400b70 00400b70 FUNC    UND cbc_crypt\n  00410e3c -32708(gp) 00400b60 00400b60 FUNC    UND munmap\n  00410e40 -32704(gp) 00000000 00000000 OBJECT  UND __environ\n  00410e44 -32700(gp) 00400b50 00400b50 FUNC    UND puts\n  00410e48 -32696(gp) 004009e8 004009e8 FUNC     12 __libc_csu_init\n  00410e4c -32692(gp) 00400b40 00400b40 FUNC    UND memcpy\n  00410e50 -32688(gp) 00400b30 00400b30 FUNC    UND mprotect\n  00410e54 -32684(gp) 00400b20 00400b20 FUNC    UND __libc_start_main\n  00410e58 -32680(gp) 00400b10 00400b10 FUNC    UND ptrace\n  00410e5c -32676(gp) 00000000 00000000 NOTYPE  UND _Jv_RegisterClasses\n  00410e60 -32672(gp) 00000000 00000000 FUNC    UND __gmon_start__\n  00410e64 -32668(gp) 004009e0 004009e0 FUNC     12 __libc_csu_fini\n  00410e68 -32664(gp) 00400b00 00400b00 FUNC    UND mmap\n</code></pre>\n",
            "votes": "3",
            "user": "w s",
            "time": "Apr 7, 2015 at 7:05",
            "is_accepted": true,
            "comments": [
                {
                    "user": "creuchmeuch",
                    "text": "<span class=\"comment-copy\">Ok thank you, i ll try to do it with qemu then. Have a nice day.</span>",
                    "time": null
                }
            ]
        }
    ]
}