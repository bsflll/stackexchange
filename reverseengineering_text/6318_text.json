{
    "title": "Idapython - undefining an instruction",
    "link": "https://reverseengineering.stackexchange.com/questions/6318/idapython-undefining-an-instruction",
    "content": "I have an instructions defined from <pre><code>address+1</code></pre> onward and a byte at <pre><code>address</code></pre>. I'd like to undefine the instructions from <pre><code>address+1</code></pre> onward and redefine them from <pre><code>address</code></pre> using <pre><code>MakeCode</code></pre> or something similar.\nSo far I have not found any functions to undefine instructions. Any pointers on where I should be looking?\n",
    "votes": "6",
    "answers": 1,
    "views": "4k",
    "tags": [
        "ida",
        "idapython"
    ],
    "user": null,
    "time": "Sep 26, 2014 at 9:52",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "MakeUnkn() (see offensivecomputing.net/papers/IDAPythonIntro.pdf page 48) is probably what you're looking for.\n",
            "time": null
        },
        {
            "user": "user3238415",
            "text": "In versions > 7.4 of IDA some functions have been moved (hex-rays.com/products/ida/support/â€¦). The <pre><code>MakeUnkn</code></pre> function has been moved/renamed to <pre><code>ida_bytes.del_items</code></pre>\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Here is a POC from some code I wrote a while back. \n<pre><code>def fixTheJmpCalls():\n    # kind of slow to loop through all the functions and instructions but it works \n    # flaw: only defined functions will be traversed.this. \n    for funcea in Functions( SegStart( here() ), SegEnd( here() ) ):\n        for eai in FuncItems(funcea):\n            if GetMnem(eai) == \"jmp\" or GetMnem(eai) == \"call\":\n                if GetDisasm(eai)[-2:-1] == \"+\" and GetDisasm(eai)[-1:].isdigit():\n                    print \"Broken Instruction: %X\"%eai, GetDisasm(eai)\n                    code_addr = GetOperandValue(eai, 0) \n                    fix_addr = code_addr -1 \n                    MakeUnkn(fix_addr,1)\n                    MakeCode(code_addr)\n</code></pre>\n",
            "votes": "5",
            "user": "alexanderh",
            "time": "Sep 26, 2014 at 21:44",
            "is_accepted": false,
            "comments": []
        }
    ]
}