{
    "title": "IDA Pro could not disassemble native function properly",
    "link": "https://reverseengineering.stackexchange.com/questions/32697/ida-pro-could-not-disassemble-native-function-properly",
    "content": "Looks like some obfuscation technique was applied to this piece of code (none of <pre><code>start</code></pre> opcodes were identified properly):\n\nIs it possible to produce manually more readable assembly?\n",
    "votes": "0",
    "answers": 1,
    "views": "93",
    "tags": [
        "ida",
        "obfuscation",
        "arm64",
        "aarch64"
    ],
    "user": "AseN",
    "time": "Feb 4, 2024 at 6:53",
    "comments": [
        {
            "user": "AseN",
            "text": "@Robert, the section is identified as a code (you can see on screen .text), but neither automatic nor manual reinterpretation ain't successful =(\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "It's difficult to say for sure without the sample, but I suspect that the code has been encrypted/scrambled, and is decrypted on load, most likely by some function which runs before the entrypoint (e.g. a pointer in <pre><code>.init_array</code></pre> or similar).\n",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Feb 5, 2024 at 20:57",
            "is_accepted": false,
            "comments": []
        }
    ]
}