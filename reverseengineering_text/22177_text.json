{
    "title": "What binary value does Thread and Process ID Register contains in Android ARM?",
    "link": "https://reverseengineering.stackexchange.com/questions/22177/what-binary-value-does-thread-and-process-id-register-contains-in-android-arm",
    "content": "I have following instructions in Android shared library:\n<pre><code>MRC p15, 0, R3,c13,c0, 3 \nLDR R3, [R3,#4] \nMOV R0, #0 \nSTR R0, [R3,#0xC]\n</code></pre>\nAccording to ARM documentation:\n\nReading or writing the Thread and Process ID Registers has no effect\n  on the processor state or operation. These registers provide OS\n  support and must be managed by the OS.\n\nThat's nice, but what is implementation of this register value in Android or ARM Linux?\nFrom the code, it tries to read Thread and Process ID Register value as structure,and it reads some field with offset <pre><code>4</code></pre>. This field is pointer to structure itself, and it writes <pre><code>0</code></pre> to field with offset <pre><code>12</code></pre>.\nSo, the register value is for sure not <pre><code>pthread_t</code></pre>, because, according to Android source codes, <pre><code>pthread_t</code></pre> field with offset 4 is <pre><code>unsigned int</code></pre> and not pointer to any structure.\nDoes anyone know where can I find definition of structure returned by <pre><code>MRC c13::c0::3</code></pre> in Android ARM?\n",
    "votes": "3",
    "answers": 1,
    "views": "201",
    "tags": [
        "android",
        "arm"
    ],
    "user": "Vitalii",
    "time": "Sep 24, 2019 at 9:31",
    "comments": [],
    "answers_data": [
        {
            "content": "Just in case anyone else will have the same issue, after reading a lot of Android sources and real applications memory dumps, I found that:\n\n<pre><code>MRC c13::c0::3</code></pre> returns pointer to structure that contains 2 words.\nThe 2nd world is the same value as <pre><code>pthread_self</code></pre> returns (i. e. it is <pre><code>pthread_t</code></pre> of current thread).\n<pre><code>pthread_t</code></pre> is actually pointer to <pre><code>pthread_internal_t</code></pre> structure, you can see its definition here for example https://android.googlesource.com/platform/bionic.git/+/refs/heads/android10-release/libc/bionic/pthread_internal.h\nFrom the definition, field at offset 12 (0xC) is <pre><code>pid_t cached_pid_</code></pre>.\n\nSo, this code sets cached pid value to <pre><code>0</code></pre>. It looks like it is required to force <pre><code>getpid</code></pre> to read real <pre><code>pid</code></pre> value instead of using cached one (PID caching is known source of bugs in some <pre><code>glibc</code></pre> versions).\n",
            "votes": "3",
            "user": "Vitalii",
            "time": "Sep 24, 2019 at 8:12",
            "is_accepted": false,
            "comments": []
        }
    ]
}