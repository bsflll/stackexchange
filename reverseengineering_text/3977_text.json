{
    "title": "Replace strings in object file",
    "link": "https://reverseengineering.stackexchange.com/questions/3977/replace-strings-in-object-file",
    "content": "I have an object file under Linux with a lot of strings in it.\nI would like to replace all strings that represent a specific path in this object.\nI can see all the strings I need to change using the <pre><code>strings</code></pre> utility.\nIs there a way to replace all these strings at once ?\nThe path I want to change is shorter, so it should be relatively easy, just adding terminating zeros at the end of the strings so it will remain the same length on the file.\nI can write a short program that does this, but I wonder if there's already a tool I can use for this.\n",
    "votes": "1",
    "answers": 2,
    "views": "1k",
    "tags": [
        "linux",
        "strings",
        "object-code"
    ],
    "user": "Mellowcandle",
    "time": "Mar 27, 2014 at 7:30",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "Maybe it's easier if you just create a symlink from \"the location the object file uses\" to \"the path you want\" ?\n",
            "time": null
        },
        {
            "user": "Mellowcandle",
            "text": "The paths exist as strings in the object files. It's an internal data file of some application I want to alter.\n",
            "time": null
        },
        {
            "user": "avgvstvs",
            "text": "Did any of the answers here resolve your question?  Please mark them accordingly.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Here's a way to do that using Perl:\n<pre><code>perl -pi -e 's/pattern/replacement/g' binaryfile\n</code></pre>\nFor example, I created this trivial C++ program:\n<pre><code>// silly.cpp\n#include <iostream>\n#include <string>\n\nint main()\n{\n    std::string name(\"Mellowcandle\");\n    std::cout << \"The name is \" << name << std::endl;\n    std::cout << \"One could call this person \" << name << std::endl;\n    return 0;\n}\n</code></pre>\nAfter compiling and linking it, I used this on the binary:\n<pre><code>perl -pi -e 's/Mellowcandle/Edward\\0\\0\\0\\0\\0\\0/g' silly\n</code></pre>\nwhich gives the intended effect.  Note that failing to pad the replacement string to the longer string length will cause those bytes to simply be omitted, causing a segfault or worse if you try to run the resulting binary.\n",
            "votes": "3",
            "user": "Edward",
            "time": "Mar 27, 2014 at 12:59",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "Edward's Perl answer is great, so normally I wouldn't post another answer, but in response to the other part of your question...\n\nI wonder if there's already a tool I can use for this.\n\nYes, pretty much every decent hex editor has a global search-and-replace function. 010 Editor runs on Linux and definitely supports this functionality.\n",
            "votes": "1",
            "user": "Jason Geffner",
            "time": "Mar 27, 2014 at 14:08",
            "is_accepted": false,
            "comments": []
        }
    ]
}