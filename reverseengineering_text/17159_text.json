{
    "title": "Running a patched binary within IDA Free",
    "link": "https://reverseengineering.stackexchange.com/questions/17159/running-a-patched-binary-within-ida-free",
    "content": "I am using IDA Free for malware analysis and I wanted to patch a binary I am looking at. I applied the patch by using the patch menu, which modifies the DATABASE representation of the executable. \nWhen I go to run the executable via Debugger -> Run, it warns me that the database has been patched and there may be inconsistencies. However, when it finally runs it runs the original executable without patched code!\nIs there a way to tell IDA to run the patched code? Or, since it's only patched in the database, my only choice is to export a DIF file and patch it manually to confirm it works?\n",
    "votes": "5",
    "answers": 1,
    "views": "7k",
    "tags": [
        "ida"
    ],
    "user": null,
    "time": "Jan 9, 2018 at 7:21",
    "comments": [
        {
            "user": "sudhackar",
            "text": "Did you \"Apply patches to input file\"?\n",
            "time": null
        },
        {
            "user": "user22856",
            "text": "@sudhackar IDA Free is only IDA 5.0, I dont have that option.\n",
            "time": null
        },
        {
            "user": "sudhackar",
            "text": "Then you can manually patch the file using a hex editor. I don't know of other options in IDA free.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "IDA Free doesn't support the \"Apply patches to input file...\" feature. Hence, you'll have to do this the old way. I'll expand my answer and will go over things you already know so others (e.g coming from search engines) can benefit from a whole complete answer.\nEdit the configuration file\nThe first thing you have to do is to modify an IDA GUI configuration file named idagui.cfg. You should be able to find the file at \"IDA Free\\cfg\\idagui.cfg\". Locate the file and change \"DISPLAY_PATCH_SUBMENU\" form \"NO\" to \"YES\".\nAfter that, start IDA Free and you'll see a fresh new sub-menu called \"Patch program\". \nPatching\nYou should be able to use this sub-menu to edit the program. It's pretty intuitive, just put your cursor wherever you want to make a change, and choose the appropriate option from the sub-menu.\nNotice that every patch you do is only affected on the IDB, the IDA Database. Thus, the binary on disk won't be affected and when you'll try to debug/execute it you will not see your patches.\nExporting a .DIF file\nWhen you finish with all your patches, it's time to apply them to the binary on disk. To do this, you'll first have to produce a .DIF file that will contain a list of the changes you've made.\nTo produce this file go to File -> Produce File -> Create DIF file...\".\nApplying the changes to the binary\nYou can use this Python script by stalker to apply the changes. Use it like this:\n<pre><code>$ idadif.py <original_binary> <IDA_DIF_file.dif> [revert]\n</code></pre>\nAlternatives:\nNote that I didn't test these alternatives and I'm pretty sure that some of them will not work with IDA Free\n\nida_patcher.c\npe_write.idc\nIDA Patcher plugin\nIDA DIF Patch\n",
            "votes": "3",
            "user": "Megabeets",
            "time": "Jan 9, 2018 at 7:55",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user22856",
                    "text": "<span class=\"comment-copy\">Yes I am well aware of this. Maybe I wasn't clear in my question. I want to run the patched binary to test it. Does IDA not run from the database? I don't want to export a dif without knowing it works.</span>",
                    "time": null
                },
                {
                    "user": "Megabeets",
                    "text": "<span class=\"comment-copy\">No it can't. Just backup the original file and then apply the patches to either of them using one of the methods above.</span>",
                    "time": null
                }
            ]
        }
    ]
}