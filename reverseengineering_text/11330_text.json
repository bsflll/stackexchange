{
    "title": "Dump router firmware over U-BOOT",
    "link": "https://reverseengineering.stackexchange.com/questions/11330/dump-router-firmware-over-u-boot",
    "content": "I connected ttl cable to my router board, and Im trying to dump firmware in order to flash second device over web interface with my backup so I have few questions:\nWhat binary file for ex. upgrade.bin contains ? Kernel image, files, user settings ? Im asking that because Im not sure which partition do I need to dump there is few\n<pre><code>dev:    size   erasesize  name\nmtd0: 00800000 00010000 \"Whole_Flash\"\nmtd1: 00020000 00010000 \"Bootloader\"\nmtd2: 00010000 00010000 \"defcfg\"\nmtd3: 00020000 00010000 \"curcfg\"\nmtd4: 00010000 00010000 \"log\"\nmtd5: 00180000 00010000 \"kernel1\"\n</code></pre>\nAnd here is table from U-BOOT\n<pre><code>AMAZON_S # bdinfo\nboot_params = 0x81DDEFB0\nmemstart    = 0x80000000\nmemsize     = 0x02000000\nflashstart  = 0xB0000000\nflashsize   = 0x00800000\nflashoffset = 0x00000000\n</code></pre>\nI did tried with dd but on board busybox does not contain one so I need to do it over U-BOOT but I cant \"initialize\" SPI device \n<pre><code>AMAZON_S # help sf\nsf probe [bus:]cs [hz] [mode]   - init flash device on given SPI bus\n                                  and chip select\nsf read addr offset len         - read `len' bytes starting at\n                                  `offset' to memory at `addr'\nsf write addr offset len        - write `len' bytes from memory\n                                  at `addr' to flash at `offset'\nsf erase offset len             - erase `len' bytes from `offset'\n\nAMAZON_S # sf probe 0\nFailed to initialize SPI flash at 0:0\n</code></pre>\nAnd last how could I determine how long is \"Whole_Flash\" or \"kernel1\"\n in order to dump correct amount of memory ?\n<pre><code>AMAZON_S # printenv\nbootcmd=run flash_flash\nbootdelay=3\nbaudrate=115200\npreboot=echo;echo Type \"run flash_nfs\" to mount root filesystem over NFS;echo\nserverip=192.168.1.55\nnetdev=eth0\nbaudrate=115200\nrootpath=/opt/nfs\nnfsargs=setenv bootargs root=/dev/nfs rw nfsroot=$(serverip):$(rootpath)\nramargs=setenv bootargs root=/dev/ram rw\naddip=smem=2M\nvpe1_load_aotargs) ip=$(ipaddr):$(serverip):$(gatewayip):$(netmask):$(hostname):$(netdev):on\nmem=32M\nvpe0mem=30M\nvpe1mem=2M\nvpe1_load_addr=0x81e00000\naddmisc=setenv bootargs $(bootargs) console=ttyS1,$(baudrate) ethaddr=$(ethaddr) phym=$(mem) mem=$(vpe0mem) panic=1 vpe1_load_addr=$(vpe1_load_addr) vpe1_mem=$(vpe1mem) vpe1_wired_tlb_entries=1\nflash_nfs=run nfsargs addip addmisc;bootm $(kernel_addr)\nramdisk_addr=B0100000\nflash_self=run ramargs addip addmisc;bootm $(kernel_addr) $(ramdisk_addr)\nimg_uboot=u-boot.ifx\nnet_nfs=tftp 80500000 $(img_kernel);run nfsargs addip addmisc;bootm\nnet_ram=tftp 80500000 $(img_kernel);run ramargs addip addmisc;bootm\nload=tftp 80500000 $(img_uboot)\nflash_flash=run addip addmisc; bootm $(kernel_addr)\nf_ubootconfig_addr=0xB001A000\nf_ubootconfig_size=0x1000\nethaddr=20:89:86:06:B4:00\nipaddr=192.168.1.1\nnetmask=255.255.255.0\nstdin=serial\nstdout=serial\nstderr=serial\nethact=amazon_s Switch\n\nEnvironment size: 1252/4092 bytes\n</code></pre>\n",
    "votes": "3",
    "answers": 0,
    "views": "2k",
    "tags": [
        "serial-communication",
        "dumping"
    ],
    "user": "Vido",
    "time": "Nov 15, 2015 at 18:22",
    "comments": [],
    "answers_data": []
}