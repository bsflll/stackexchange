{
    "title": "Tool for checking if there is any patch in the loaded module",
    "link": "https://reverseengineering.stackexchange.com/questions/2276/tool-for-checking-if-there-is-any-patch-in-the-loaded-module",
    "content": "I'm looking for a tool that is able to check loaded module for any placed patches even on not exported functions.\nI'm aware of Gmer, RKU and Co. and frankly I don't really trust their results.\n",
    "votes": "5",
    "answers": 3,
    "views": "349",
    "tags": [
        "tools",
        "malware",
        "digital-forensics"
    ],
    "user": "PhoeniX",
    "time": "Jun 17, 2013 at 12:27",
    "comments": [
        {
            "user": "Gilles 'SO- stop being evil'",
            "text": "Module loaded into what? Are you analyzing a code image, a running system, a memory dump? This question lacks a lot of context.\n",
            "time": null
        },
        {
            "user": "PhoeniX",
            "text": "If the module is loaded than, it must be loaded into memory, no? Where do you think the module could be loaded into and what do you mean by running system? If I wanted to ask about dump files, I sure would not be using loaded modules.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "HookShark is a great way of detecting whether anything has patched a process. In my experience it's mostly used when studying the stealth of game hacks.\n\nHookShark is a detector of installed hooks and patches installed on the system (only usermode for now). It scans through the code-section of every loaded module of each running process and compares it with the file-image. If it detects discrepancies it tries to determine the type of hook or patch and reports it to the user.\nCurrently implemented hook detection:\n* - Inline patches / Hooks (NOP, Exceptionhandler, relative Jumps, Custom patches)\n* - Other custom patches [...]\n* - VTable Hooks\n* - IAT and EAT Hooks\n* - Relocation Hooks\n* - Hardware Breakpoints\n* - PAGE_GAURD Candidates\n",
            "votes": "3",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": [
                {
                    "user": "PhoeniX",
                    "text": "<span class=\"comment-copy\">Hi, I've tried this tool and unfortunately it was unable to find patches on some non-exported functions. Other than that, it looks like a handy tool.</span>",
                    "time": null
                },
                {
                    "user": "Peter Andersson",
                    "text": "<span class=\"comment-copy\">I'm very surprised it missed them since it does a byte by byte compare with the binary on disk. Maybe if the binary on disk was patched or if there's a global hook on ReadProcessMemory?</span>",
                    "time": null
                },
                {
                    "user": "PhoeniX",
                    "text": "<span class=\"comment-copy\">There is no hook on ReadProcessMemory as it was able to find hooks on other exported functions. I'll try once more time just to be sure. Just to validate, the tool is blindly compares all memory to appropriate module on disk?</span>",
                    "time": null
                },
                {
                    "user": "Peter Andersson",
                    "text": "<span class=\"comment-copy\">That was my impression. I haven't looked at it in detail and actually verified how it works.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "http://msdn.microsoft.com/en-us/library/windows/hardware/ff562217(v=vs.85)\nThe !chkimg extension detects corruption in the images of executable files by comparing them to the copy on a symbol store or other file repository.\n",
            "votes": "3",
            "user": "wordmonger",
            "time": "Jul 6, 2013 at 10:42",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "HookShark will generate false positives in software that uses packer/cryptor to protect their code.\n",
            "votes": "-1",
            "user": "Palaniyappan Bala",
            "time": "Jan 9, 2014 at 10:14",
            "is_accepted": false,
            "comments": [
                {
                    "user": "perror",
                    "text": "<span class=\"comment-copy\">Try to give some links to the tool and to elaborate a bit more your answer. What you wrote is, at most, a comment and definitely not an answer.</span>",
                    "time": null
                }
            ]
        }
    ]
}