{
    "title": "Checksum reverse engineering help",
    "link": "https://reverseengineering.stackexchange.com/questions/13774/checksum-reverse-engineering-help",
    "content": "I'm a newbie here, and I don't have a lot of experience with reverse engineering, so I'm asking for your help.\nI have dumped a Mifare Classic card several times, because I wanted to try understand the data that was written on it. I compared the dumps and succeeded in understanding where the data was and in which format.\nThe data is stored in 8 bytes split into two groups. At the end of each group there is another byte which I suspect is some sort of checksum. Here is the data I got until now:\n<pre><code>00 BB and 01 0B have a checksum byte of 45\n01 6F and 01 0B have a checksum byte of B5\n01 90 and 02 58 have a checksum byte of BC\n01 90 and 00 C8 have a checksum byte of 56\n00 00 and 00 00 have a checksum byte of 64\n</code></pre>\nCan you help me find out how the checksum byte is calculated? Thanks.\n",
    "votes": "1",
    "answers": 0,
    "views": "284",
    "tags": [
        "memory",
        "memory-dump"
    ],
    "user": "Abe Johnson",
    "time": "Oct 20, 2016 at 16:24",
    "comments": [
        {
            "user": "NirIzr",
            "text": "More sample, preferably for similar looking input will be useful. Additionally, some clarification regarding \"00 BB and 01 0B have\". Are those four bytes the (only) input for the single byte output?\n",
            "time": null
        },
        {
            "user": "Abe Johnson",
            "text": "@NirIzr I'll post additional data as soon as possible. Yes, those four bytes are the only input for the single byte output.\n",
            "time": null
        }
    ],
    "answers_data": []
}