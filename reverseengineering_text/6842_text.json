{
    "title": "How to rebase IDA to match GDB",
    "link": "https://reverseengineering.stackexchange.com/questions/6842/how-to-rebase-ida-to-match-gdb",
    "content": "I would like to debug my elf file on linux using GDB and follow the disassembly in IDA, is this possible? And if it is how would I rebase IDA to match with GDB?\nThanks!\n",
    "votes": "4",
    "answers": 1,
    "views": "4k",
    "tags": [
        "ida",
        "linux",
        "gdb"
    ],
    "user": "Hugo Kiiski",
    "time": "Dec 17, 2014 at 19:39",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "Why not just debug it directly in IDA?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "If you are trying to rebase an elf, you could do <pre><code>info proc mappings</code></pre>. This will show you all of the mapped addresses. (This could also be viewed by doing <pre><code>cat /proc/<pid>/map</code></pre>)\nThen just rebase your IDA via EDIT->Segments->Rebase program and select <pre><code>Image Base</code></pre> from the radio buttons.\nEx: \n<pre><code>(gdb) info proc mappings \nprocess 12383\nMapped address spaces:\n    Start Addr   End Addr       Size     Offset objfile\n     0x8048000  0x8049000     0x1000          0      /home/user/my_elf\n     0x8049000  0x804a000     0x1000          0      /home/user/my_elf\n     0x804a000  0x804b000     0x1000     0x1000      /home/user/my_elf\n    0xb7e73000 0xb7e74000     0x1000          0\n    0xb7e74000 0xb7fbd000   0x149000          0     /lib/i386-linux-gnu/libc-2.13.so\n    0xb7fbd000 0xb7fbe000     0x1000   0x149000     /lib/i386-linux-gnu/libc-2.13.so\n    0xb7fbe000 0xb7fc0000     0x2000   0x149000     /lib/i386-linux-gnu/libc-2.13.so\n    0xb7fc0000 0xb7fc1000     0x1000   0x14b000     /lib/i386-linux-gnu/libc-2.13.so\n    0xb7fc1000 0xb7fc4000     0x3000          0\n    0xb7fdf000 0xb7fe1000     0x2000          0\n    0xb7fe1000 0xb7fe2000     0x1000          0           [vdso]\n    0xb7fe2000 0xb7ffe000    0x1c000          0     /lib/i386-linux-gnu/ld-2.13.so\n    0xb7ffe000 0xb7fff000     0x1000    0x1b000     /lib/i386-linux-gnu/ld-2.13.so\n    0xb7fff000 0xb8000000     0x1000    0x1c000     /lib/i386-linux-gnu/ld-2.13.so\n    0xbffdf000 0xc0000000    0x21000          0           [stack]\n</code></pre>\nIf I would be looking at the elf in IDA i would use 0x8048000 for the base. If I would be looking at libc-2.13.so I would use 0xb7e74000.\nHope that helps.\n",
            "votes": "4",
            "user": "Bambu",
            "time": "Dec 18, 2014 at 1:14",
            "is_accepted": true,
            "comments": []
        }
    ]
}