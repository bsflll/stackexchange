{
    "title": "How to determine if an ntfs partition (inside VHDX) is dirty?",
    "link": "https://reverseengineering.stackexchange.com/questions/33073/how-to-determine-if-an-ntfs-partition-inside-vhdx-is-dirty",
    "content": "I have a VHDX file containing a single NTFS partition, when I mount this VHDX using Disk Management it's determined to be \"dirty\":\n\nI do indeed have some issues reading this disk until I run <pre><code>ChkDsk</code></pre> on it, so the message is correct.\nI want to check, programmatically, if a partition needs ChkDsk before attempting to read it and after reading NTFS documentation from here and here I understood the Dirty flag should be set in the <pre><code>$Volume</code></pre> file in the <pre><code>$VOLUME_INFORMATION</code></pre> attribute:\n\nHowever if I read this information the Dirty flag is not set as can be seen from this hex dump:\n\nHowever, after mounting (and without making any further changes) with Disk Management the dirty flag is immediately set:\n\nSo how does Windows determine the disk is dirty if the flag was not set?\nAnd if I cannot use the dirty flag, how can I determine it programmatically?\nIn this example the disk is from Windows 7 and the partition is MBR style. There are no other partitions in the VHDX.\nEDIT\nFound the following extra information in Windows Internals 7th edition part 2 (page 709):\n\nThe dirty bit has a slightly different meaning compared to previous editions of Windows. The $VOLUME_INFORMATION attribute of the NTFS root namespace still contains the dirty bit, but also contains the P-bit, which is used to require a Proactive Scan, and the F-bit, which is used to require a full check disk due to the severity of a particular corruption. The dirty bit is set to 1 by the file system driver if the p-bit or the F-bit are enabled, or if the $Corrupt stream contains one or more corruption records.\n\nSo it looks like the P-Bit (Proactive scan bit) or the F-Bit might be set. Unfortunately I haven't found information where this bits are stored. Perhaps in 2nd byte of the flag field which is a <pre><code>USHORT</code></pre> ?\n",
    "votes": "1",
    "answers": 0,
    "views": "43",
    "tags": [
        "windows",
        "file-format",
        "filesystem"
    ],
    "user": "Remko",
    "time": "Jul 12, 2024 at 9:45",
    "comments": [],
    "answers_data": []
}