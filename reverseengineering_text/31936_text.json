{
    "title": "Dynamically linked busibox won't work",
    "link": "https://reverseengineering.stackexchange.com/questions/31936/dynamically-linked-busibox-wont-work",
    "content": "I am hacking an ARM-based device that is coming with a lightweight busybox:\n<pre><code>[/mnt/sdcard/busybox]## busybox\nBusyBox v1.24.1 (2017-09-29 00:55:28 PDT) multi-call binary.\nBusyBox is copyrighted by many authors between 1998-2015.\nLicensed under GPLv2. See source distribution for detailed\ncopyright notices.\n\nUsage: busybox [function [arguments]...]\n   or: busybox --list\n   or: function [arguments]...\n\n        BusyBox is a multi-call binary that combines many common Unix\n        utilities into a single executable.  Most people will create a\n        link to busybox for each function they wish to use and BusyBox\n        will act like whatever it was invoked as.\n\nCurrently defined functions:\n        ash, awk, cat, chmod, clear, cp, date, dd, devmem, df, dhcprelay, dmesg, dnsdomainname, dumpleases, echo, egrep, env, fgrep, find, flock,\n        free, ftpd, getty, grep, halt, head, hostname, ifconfig, inetd, init, insmod, ipcs, kill, killall, killall5, linuxrc, ln, logger, login,\n        logread, ls, lsmod, lsusb, md5sum, mkdir, mkdosfs, mkfs.vfat, modinfo, more, mount, mv, netstat, passwd, ping, pkill, poweroff, printf, ps,\n        pwd, reboot, renice, reset, rm, rmmod, route, sed, sh, sleep, sort, strings, sync, sysctl, syslogd, tail, telnet, telnetd, tftp, time, top,\n        touch, traceroute, tty, udhcpc, udhcpd, umount, uname, unlink, uptime, usleep, vi, volname, watch, wc\n</code></pre>\nIt is missing a few functions that I'd like (tar, gzip...). So I have started building busybox (1.36.0), that I aim to squeeze into the firmware image. I can make a working version of busybox if I statically link its libs. But the binary is too large and I'm trying to build it with dynamic links. Everything I try ends up that way:\n<pre><code>[~]## ./busybox\n/system/bin/sh: ./busybox: not found\n</code></pre>\nWhich seems to indicate to me that it is not able to find or work with the required libs.\n<pre><code>[/mnt/sdcard/busybox]## echo $LD_LIBRARY_PATH\n/lib:/system/lib:/vendor/lib:/mvs/lib:/usr/lib\n[/mnt/sdcard/busybox]## ls -al /lib/lib*.so.6\nlrwxrwxrwx root     root              2019-05-22 04:21 libc.so.6 -> libc-2.19-2014.04.so\nlrwxrwxrwx root     root              2019-05-22 04:21 libm.so.6 -> libm-2.19-2014.04.so\nlrwxrwxrwx root     root              2019-05-22 04:21 libstdc++.so.6 -> libstdc++.so.6.0.19\n</code></pre>\nThese seem to be the only dependencies, and they are present on the device:\n<pre><code>[/mnt/sdcard/busybox]## echo $LD_LIBRARY_PATH\n/lib:/system/lib:/vendor/lib:/mvs/lib:/usr/lib\n[/mnt/sdcard/busybox]## ls /lib/lib*.so.6\n/lib/libc.so.6\n/lib/libm.so.6\n/lib/libstdc++.so.6\n</code></pre>\nCould it be a version mismatch at the kernel or library level? If yes, how do I align them?\nI have tried copying the libs from my computer into the device, adding '.' to the LD_LIBRARY_PATH env variable, in vain. I note that the libs on my computer are much larger in disk size than the ones on the device.\n",
    "votes": "0",
    "answers": 0,
    "views": "68",
    "tags": [
        "dynamic-linking",
        "libc"
    ],
    "user": "dotvav",
    "time": "Jun 4, 2023 at 12:22",
    "comments": [
        {
            "user": "fpmurphy",
            "text": "Have you tried building statically with uClibc?\n",
            "time": null
        },
        {
            "user": "dotvav",
            "text": "@fpmurphy I have started studying this option but haven't made the time yet to get my hands dirty. uClibc or uClibc-ng are definiltely something I am going to try.\n",
            "time": null
        }
    ],
    "answers_data": []
}