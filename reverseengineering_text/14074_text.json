{
    "title": "Relocate ELF symbols",
    "link": "https://reverseengineering.stackexchange.com/questions/14074/relocate-elf-symbols",
    "content": "How can I apply relocations of symbols in an elffile? I'm currently trying to archive this with pyelftools. Strangely, I could hardly find any information on how to do this, although some projects have to implement something like this (e.g. ida, angr, amoco, ...).\nIn other words: I want to know where elf imports will be located in virtual memory. Of course, the sections should adhere to these relocations.\nCode snippets very appreciated.\n",
    "votes": "1",
    "answers": 1,
    "views": "766",
    "tags": [
        "elf",
        "symbols"
    ],
    "user": "Nordwald",
    "time": "Nov 30, 2016 at 14:30",
    "comments": [],
    "answers_data": [
        {
            "content": "So after some toying around with elftools, I found the following solution for import-symbols:\n<pre><code>    for section in self._elf.iter_sections():\n        if not isinstance(section, RelocationSection):\n            continue\n    symtable = self._elf.get_section(section['sh_link'])\n    for relocation in section.iter_relocations():\n        if not relocation['r_info_sym']:\n            continue\n        symbol = symtable.get_symbol(relocation['r_info_sym'])\n        yield ImportSymbol(relocation['r_offset'], symbol.name)\n</code></pre>\nThe code is inspired by pyelftools readelf implementation\nAlthough pyelftools offers some relocation handling, I've not yet seen a binary for which that actually works. It will complain it doesn't know some relocation types, but for the future, I'll post this snippet:\n<pre><code>def _reloc_section(self, section):\n    rh = RelocationHandler(self._elf)\n    data = section.data()\n    relocation_section = rh.find_relocations_for_section(section)\n    if relocation_section:\n        try:\n            rh.apply_section_relocations(data, relocation_section)\n        except Exception as e:\n            print 'Could not relocate %s' % section.name\n    return data\n</code></pre>\n",
            "votes": "0",
            "user": "Nordwald",
            "time": "Dec 1, 2016 at 9:58",
            "is_accepted": true,
            "comments": []
        }
    ]
}