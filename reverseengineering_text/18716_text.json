{
    "title": "Resolving FLAGS bits with IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/18716/resolving-flags-bits-with-ida",
    "content": "While disassembling a binary, IDA decompiler decompiles the call as <pre><code>mmap(0x80000000, 4096, 7, 50, -1, 0);</code></pre> While there is nothing wrong with the decompilation itself, it could be more useful to decode the <pre><code>flags</code></pre> value as an OR-ed expression of known mnemonics, e.g. <pre><code>MAP_SHARED|MAP_PRIVATE</code></pre> (as in man page of <pre><code>mmap</code></pre>). can there anything can be done to help IDA display that (apart from writing a plugin myself, of course)?\n",
    "votes": "4",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "decompilation",
        "hexrays"
    ],
    "user": "sherlock",
    "time": "Jul 7, 2018 at 5:14",
    "comments": [],
    "answers_data": [
        {
            "content": "In IDA, you can define enums through the Enums view (shift+F10). Enums have the \"bitfield\" bit set (a checkbox by the same name can be found in the Enum edit and create dialogs). This bit cannot be set for enums with overlapping member bits.\nOnce an enum is a bitfield enum, setting any operand in the disassembly view to that enum will display all enum members of bit values set in the immediate operand.\nIf a function prototype uses an enum name for a variable type, IDA will try setting operands using it to the same enum automatically, although that does not always happen.\nIIRC the MAP enum is already mapped in IDA's known enums, so adding it should be easy and without the need to manually define it.\n",
            "votes": "3",
            "user": "NirIzr",
            "time": "Jul 8, 2018 at 14:06",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Biswapriyo",
                    "text": "<span class=\"comment-copy\">Those flags are define in preprocessor <code>#define</code>. So a header file has to be created with enums.</span>",
                    "time": null
                },
                {
                    "user": "NirIzr",
                    "text": "<span class=\"comment-copy\">I'll edit that in, IIRC that enum specifically is defined in IDA's type libraries.</span>",
                    "time": null
                }
            ]
        }
    ]
}