{
    "title": "PowerPC ELF32 detecting VLE",
    "link": "https://reverseengineering.stackexchange.com/questions/20863/powerpc-elf32-detecting-vle",
    "content": "I am writing an ELF32 parser and disassembler for PowerPC. \nDoes anyone knows how to detect if the file is using VLE architecture from ELF header? I see that IDA can do it automatically.\n",
    "votes": "2",
    "answers": 1,
    "views": "425",
    "tags": [
        "powerpc"
    ],
    "user": "krusty",
    "time": "Mar 13, 2019 at 14:11",
    "comments": [],
    "answers_data": [
        {
            "content": "According to the code of <pre><code>readelf</code></pre> in the GNU binutils package, the presence of VLE instructions can be found in the <pre><code>p_flags</code></pre> and <pre><code>sh_flags</code></pre> fields with the mask <pre><code>0x10000000</code></pre> (see <pre><code>binutils-xxx/include/elf/ppc.h</code></pre> and look for <pre><code>PF_PPC_VLE</code></pre> and <pre><code>SHF_PPC_VLE</code></pre>).\nThese flags seems to be present at the begining of each section in the ELF format. So, you should look for it.\nA few interesting readings:\n\nPower ArchitectureÂ® 32-bit Application Binary Interface Supplement 1.0.\nVariable-Length Encoding (VLE) extension programming interface manual.\nVariable-Length Encoding (VLE) Extension Programming Interface Manual.\n64-bit PowerPC ELF Application Binary Interface Supplement 1.9.\nThe binutils source code (<pre><code>grep -r _PPC_VLE</code></pre>).\n",
            "votes": "4",
            "user": "perror",
            "time": "Mar 13, 2019 at 11:59",
            "is_accepted": true,
            "comments": []
        }
    ]
}