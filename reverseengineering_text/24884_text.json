{
    "title": "Ghidra Decompiler Optimized Strings",
    "link": "https://reverseengineering.stackexchange.com/questions/24884/ghidra-decompiler-optimized-strings",
    "content": "Looking at a large x86 binary, I'm seeing lots of instances where strings are assembled on the stack as quadwords like so:\n\nIf I try to set the type of <pre><code>puStack40</code></pre> to <pre><code>char[38]</code></pre>, I get the following output that's still not very helpful:\n\nI am guessing that this is because each quadword is moved in a separate instruction:\n\nI assume there isn't, but does anyone know of a way that I can get <pre><code>puStack40</code></pre> to be displayed as a string in the decompiler window?\n(As a side note: why is this approach taken? My only guess would be to decrease the number of memory accesses. I don't think this is obfuscation since it's a large, commercial application)\n",
    "votes": "4",
    "answers": 1,
    "views": "1k",
    "tags": [
        "x86",
        "ghidra",
        "stack",
        "decompiler"
    ],
    "user": "genghiskhan",
    "time": "May 1, 2020 at 23:42",
    "comments": [
        {
            "user": "Jongware",
            "text": "Can you post the actual text (formatted as <pre><code>code</code></pre>) instead of images?\n",
            "time": null
        },
        {
            "user": "phuclv",
            "text": "Why should I not upload images of code/data/errors?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "https://github.com/0x6d696368/ghidra_scripts/blob/master/SearchSimpleStackStrings.md\nhttps://github.com/0x6d696368/ghidra_scripts/blob/master/SimpleStackStrings.md\nThe only difference looks like search vs at current cursor position\n",
            "votes": "0",
            "user": "mumbel",
            "time": "May 2, 2020 at 3:01",
            "is_accepted": false,
            "comments": [
                {
                    "user": "genghiskhan",
                    "text": "<span class=\"comment-copy\">This is helpful, but I'm asking if there's a way to set the data types such that there is a char array on the stack. The script(s) you linked only set comments as to what the strings are. I'm thinking I'll have to patch the program to accomplish this</span>",
                    "time": null
                }
            ]
        }
    ]
}