{
    "title": "Difference between __openat and openat (Android)",
    "link": "https://reverseengineering.stackexchange.com/questions/31875/difference-between-openat-and-openat-android",
    "content": "While reverse engineering an Android process, I wanted to explore the openat function. I noticed that there is a symbol \"openat\" and another symbol \"__openat\". What is the difference between these two?\nFurthermore, if I use <pre><code>info function openat</code></pre>, I can see more openat related symbols. Can someone also explain what are the differences between these?\n<pre><code>__dl___openat_2\n__dl___openat\n__openat_2@plt\nopenat\nopenat64\n__openat_2\n__openat\n__openat_2@plt\n__openat_2@plt\nopenattr\n__openat_2@plt\nsun.nio.fs.UnixNativeDispatcher.openatSupported\nopenat@plt\nJava_sun_nio_fs_UnixNativeDispatcher_openat0\n__openat_2@plt\n</code></pre>\nUPDATE\nSuppose I want to get a function pointer to openat, I can do this inside Android Studio\n<pre><code>    int (*getptr)(int, const char*, int, ...);\n    getptr = openat;\n</code></pre>\nHowever, I cannot do it for __openat since this function does not seem to exist.\nAt least this is one difference between the two that I know.\n",
    "votes": "2",
    "answers": 0,
    "views": "77",
    "tags": [
        "android",
        "gdb"
    ],
    "user": "localacct",
    "time": "May 16, 2023 at 9:04",
    "comments": [
        {
            "user": "mimak",
            "text": "isn't this libc file the source code for it?\n",
            "time": null
        },
        {
            "user": "localacct",
            "text": "Hi @mimak  Thanks for pointing that out. That leads me to another observation (I added as an update to the post).\n",
            "time": null
        }
    ],
    "answers_data": []
}