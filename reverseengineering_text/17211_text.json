{
    "title": "How to unpack and decrypt malware? [duplicate]",
    "link": "https://reverseengineering.stackexchange.com/questions/17211/how-to-unpack-and-decrypt-malware",
    "content": "This question already has answers here:\n                                \n                            \n\n\n\n\nUnpacking binaries in a generic way\n\n                                (3 answers)\n                            \n\nClosed 7 years ago.\n\n\n\nRecently I have been working on reverse engineering of binary samples and executables of known malware. Most of them have been packed or encrypted. And to reach the actual data or part of the program we have to find where it is unpacking.\nIs there any common way or some technique to unpack malware samples for easier analysis?\n",
    "votes": "0",
    "answers": 2,
    "views": "4k",
    "tags": [
        "malware",
        "static-analysis",
        "dynamic-analysis"
    ],
    "user": "Bruteforce",
    "time": "7 years ago",
    "comments": [
        {
            "user": "Bruteforce",
            "text": "buts its about malware sample unpacking and malware analysis\n",
            "time": null
        },
        {
            "user": "Soufiane Tahiri",
            "text": "Nothing to do with information security, its about reverse engineering !\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "To add to what Hector said, I'd like to offer a couple of excellent tools, as well as an illuminating YouTube channel from an industry expert who shows you techniques and tools used to reverse modern malware targets.\n\nProcess Dump: Dumps malware memory components back to disk for analysis. Dumping of regions without PE headers is supported and in these cases PE headers and import tables will automatically be generated. Process Dump supports creation and use of a clean-hash database, so that dumping of clean files such as kernel32.dll can be skipped.\nPE-Sieve: Detects inline hooks, hollowed processes, process doppelg√§nging, and much more.\nMalware Analysis for Hedgehogs: Funny name for a channel, but absolutely invaluable tutorials for reversing modern malware, including everything from tools, to techniques, to how to set up environments for successful reversing, etc.\n\nThere are of couse a multitude of tools and techniques, but what I've mentioned herein should put you on the right path, especially if using the tools mentioned and utilized by MalwareAnalysisForHedgehogs.\n",
            "votes": "2",
            "user": "dsasmblr",
            "time": "Jan 16, 2018 at 17:39",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "Dependent on how the packing/encryption works one common approach is to run the malware (in a sandboxed environment) and then take a dump of it while in memory.\nIf the malware only temporarily decrypts the parts you wish to see you may need to run the process within a debugger environment.\n",
            "votes": "2",
            "user": "Hector",
            "time": "Jan 16, 2018 at 13:05",
            "is_accepted": false,
            "comments": []
        }
    ]
}