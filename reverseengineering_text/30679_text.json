{
    "title": "Intercept android app DNS lookup with Frida",
    "link": "https://reverseengineering.stackexchange.com/questions/30679/intercept-android-app-dns-lookup-with-frida",
    "content": "I have been attempting to intercept when an app performs a DNS lookup using Frida. I assumed that ultimately a DNS lookup will end up in a libc call to <pre><code>gethostbyname</code></pre> or  <pre><code>getaddrinfo</code></pre> but this does not seem to be the case. For example this Frida trace command does not hit either function\n<pre><code>frida-trace -U -i \"gethostbyname\" -i \"getaddrinfo\" \"com.android.my_app\"\n</code></pre>\nAccording the answer to this question, the <pre><code>netd</code></pre> daemon might be responsible for DNS resolution on android\n\n\"DNS lookups are centralized in the netd daemon to allow for\nsystem-wide caching, while apps call functions (such as getaddrinfo)\nin Bionic. The query is sent over a UNIX socket to\n/dev/socket/dnsproxyd to the netd daemon, which parses the request and\ncalls getaddrinfo again to issue DNS lookups, then caches the results\nso that other apps can use them.\"\n\nHowever hooking this daemon doesn't result in any hits either:\n<pre><code>frida-trace -U -i \"gethostbyname\" -i \"getaddrinfo\" \"netd\"\n</code></pre>\nI am new to Frida so I am not sure if I am missing something here. I would appreciate some insight into how I can hook the DNS lookup call\n",
    "votes": "3",
    "answers": 0,
    "views": "651",
    "tags": [
        "android",
        "frida"
    ],
    "user": "SivaDotRender",
    "time": "Jul 21, 2022 at 14:50",
    "comments": [
        {
            "user": "SivaDotRender",
            "text": "The functions are being hooked properly as far as I can tell and handlers are being created. I will explore a few other options and try to update this question\n",
            "time": null
        },
        {
            "user": "Robert",
            "text": "Is the app base on standard DEX code (e.g. compiled from Java or Kotlin) or does it use a different framework like Xamarin, ReactNative, Dart? Some of those language may implement DNS resolving on their own so that it works on all platforms. I do remember that Firefox for Android e.g. does implement DNS resolving on it's own.\n",
            "time": null
        },
        {
            "user": "SivaDotRender",
            "text": "@Robert this is just a standard Kotlin app. I believe I found the function performing the lookup. Its android_getaddrinfofornet which is present in the libc that my Android app is using\n",
            "time": null
        }
    ],
    "answers_data": []
}