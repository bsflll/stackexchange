{
    "title": "Using IAT Hooking to hook end of function",
    "link": "https://reverseengineering.stackexchange.com/questions/27062/using-iat-hooking-to-hook-end-of-function",
    "content": "Is it possible? Maybe you can explain it with a simple example if that's possible?\n",
    "votes": "1",
    "answers": 2,
    "views": "270",
    "tags": [
        "function-hooking",
        "iat"
    ],
    "user": "Michael",
    "time": "Feb 21, 2021 at 8:36",
    "comments": [],
    "answers_data": [
        {
            "content": "The IAT entries point to the function's entry point, so you can try the following:\n\nSave the current IAT entry value into a variable (e.g. <pre><code>old_func</code></pre>).\nPatch the IAT entry with the address of your hook function.\nIn the hook function, call the old function using <pre><code>old_func</code></pre> variable, then perform whatever you need before returning to the caller.\n",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Feb 22, 2021 at 22:47",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "Hooking would be the same in both cases:\n\nWhether you wanted to manipulate a function's parameters, and then provide them to the original function. In that case the order goes:\n\nExecute your hook code.\nCall the original function.\n\n\nOr call the original function, then manipulate the return results. Order goes:\n\nCall the original function.\nExecute your hook code.\n\n\n\n\n\nIn both cases the steps will be:\n\nStore the original function's entry from the IAT.\nReplace the IAT entry with your hook's start address.\nDo whatever you want inside your hook function.\n\nEDIT: Typos and Language.\n",
            "votes": "1",
            "user": "Abdullah Mohamed",
            "time": "Feb 23, 2021 at 8:46",
            "is_accepted": false,
            "comments": []
        }
    ]
}