{
    "title": "Is it possible to work around SQLcipher by modifying libsqlcipher.so?",
    "link": "https://reverseengineering.stackexchange.com/questions/25980/is-it-possible-to-work-around-sqlcipher-by-modifying-libsqlcipher-so",
    "content": "I was trying to extract data from an Android app which uses SQLcipher. SQLcipher is an extension of SQLite that encrypts database files with 256-bit AES.\nWithin the APK, the library lies in <pre><code>lib/libsqlcipher.so</code></pre>. I'm curious if I can extract the encryption key simply by modifying <pre><code>libsqlcipher.so</code></pre>(e.g. modify <pre><code>sqlite3_key</code></pre> function so that it logs the encryption key to file). The plan is to compile my own version of <pre><code>libsqlcipher.so</code></pre>, repack APK, install it, and run it on a device.\nWill this method work as expected? It sounds too easy to be true:)\n",
    "votes": "1",
    "answers": 0,
    "views": "344",
    "tags": [
        "android"
    ],
    "user": "yizhe",
    "time": "Sep 27, 2020 at 7:15",
    "comments": [
        {
            "user": "morsisko",
            "text": "It will work, you don't need modifing the library, you can use some sort of dynamic instrumentation like Frida.\n",
            "time": null
        }
    ],
    "answers_data": []
}