{
    "title": "Retrieving database credentials with access to an application that can connect and execute",
    "link": "https://reverseengineering.stackexchange.com/questions/4692/retrieving-database-credentials-with-access-to-an-application-that-can-connect-a",
    "content": "I was asked to help extract information from an old Progress database. I have physical and remote access to both the database server and a workstation with the client application installed. I am able to run the client application which requests and presents information from the database. The connection appears to be via ODBC and I am able to connect to the host/service but do not have valid credentials.\nI presume the credentials have to be stored somewhere on the client machine since logging in to the client application allows me to connect. I already reviewed the registry and file system for any hints of configuration and found many useful pieces of information but no credentials. My next thought was to try to trace the network communication but I expect that the communication would be encrypted so that would be a whole other issue.\nHow can I best go about finding what the database credentials are?\n\nUpdate: I should also mention I'm not familiar with Progress databases - my experience is in Oracle, SQLServer, and MySQL. I'm just trying to help an old coworker out and assume once I can connect it's just like any other relational database.\n",
    "votes": "3",
    "answers": 0,
    "views": "193",
    "tags": [
        "networking"
    ],
    "user": "iprtyqr",
    "time": "Jun 26, 2014 at 9:29",
    "comments": [
        {
            "user": "Sigtran",
            "text": "Before jumping into all the hard work, have you tried the easy way out?  1. Launch Progress Data Administration utility:(Admin-> Security-> Edit User List)  2. Delete the sysprogress user account  3. Recreate the sysprogress user account noting the password.  Â© knowledgebase.progress.com/articles/Article/P9483\n",
            "time": null
        },
        {
            "user": "iprtyqr",
            "text": "@Sigtran - Thank you for the idea and direction. Unfortunately it appears I don't have the ability to execute those instructions. When connecting via Data Administration I can run reports on the table structure (which is more than I had before) but Admin, DataServer, and Utilities menu options are disabled.\n",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "@iprtyqr: I find the question intriguing, but you need to give a little more information. Personally the first thing I'd do is to see how it establishes the ODBC connection (which driver etc). And then try to place a shallow wrapper around that which can help to sniff out the data I need. One way is to place a DLL implementing the used ODBC functions and using export forwarders for the uninteresting ones. You can then force the client to load your DLL by placing a manifest or even modifying the import table (assuming no integrity checking).\n",
            "time": null
        },
        {
            "user": "iprtyqr",
            "text": "@0xC0000022L What kind of additional information would be helpful? The idea of tracing the .DLL calls is a great and one I actually had myself. It is beyond my current knowledge but I know there are resources that should allow me go that route. I had tried turning on tracing in the DSN manager but there was no log output which made me worry that it wasn't actually using that driver.\n",
            "time": null
        },
        {
            "user": "logicalscope",
            "text": "I would offer two pieces of direction based on my experience: 1) string dump the client binary to see if anything is hardcoded in there such as file names, etc. or even recovery credentials; and 2) the password is almost certainly going to be encrypted/obfuscated in any external file so you may not have the username/password pop right out at you.\n",
            "time": null
        }
    ],
    "answers_data": []
}