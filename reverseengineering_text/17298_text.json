{
    "title": "PDB file vs SDB file?",
    "link": "https://reverseengineering.stackexchange.com/questions/17298/pdb-file-vs-sdb-file",
    "content": "Radare has a format called a <pre><code>sdb</code></pre>. I asked a question here,\n\nWhat is an SDB file?\n\nThe answer I got was,\n\nThese sdbfiles contain function names (DLL's exports) and their equivalent ordinals for each <pre><code>dll</code></pre> in ./libr/bin/d/dll/. \n\nOne of the pages linked tells you how to make a <pre><code>sdb</code></pre> file, given a dll as input. I've done that. Now I see there are pdb files too.\n<pre><code>|Usage: id Debug information\n| Output mode:     \n| '*'              Output in radare commands\n| id               Source lines\n| idp [file.pdb]   Load pdb file information\n| idpi [file.pdb]  Show pdb file information\n| idpd             Download pdb file on remote server\n</code></pre>\nThe specific <pre><code>sdb</code></pre> I've created is of a Microsoft <pre><code>dll</code></pre>. Moreover, I see Microsoft offers official pdb files.\n\nIs there any advantage to using a <pre><code>pdb</code></pre> over an <pre><code>sdb</code></pre>?\nDo these both convey the same information to the extent that adding a pdb when you already have a loaded <pre><code>sdb</code></pre> does nothing?\n\nLooking at a function in question nothing changed when I loaded the <pre><code>pdb</code></pre>.\n",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "radare2",
        "pdb",
        "pe32"
    ],
    "user": "Evan Carroll",
    "time": "Jan 25, 2018 at 23:05",
    "comments": [
        {
            "user": "blabb",
            "text": "no pdb contains full debug information including but not limited to source line info and if you have a private pdb those have type info too  to leversge the power if odb you may need to use windbg\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "While <pre><code>sdb</code></pre> files was created to translate imports that are referenced by ordinal instead of by name (see \"Exporting Functions from a DLL by Ordinal Rather Than by Name\"), <pre><code>pdb</code></pre> files are something entirely different.\nProgram Database\nProgram Database (PDB) file or DBG file are produced by the compiler. PDB files are used by developers to debug their program and is commonly removed from the binary before it distributed to the client. Most chances is that you won't find debug symbols inside most of the real-world binaries.\nSymbol files hold a variety of data which are not actually needed when running the binaries, but which could be very useful in the debugging process.\nPDB files typically contain:\n\nPublic symbols (typically all functions, static and global variables)\nA list of object files that are responsible for sections of code in the executable\nFrame pointer optimization information (FPO)\nName and type information for local variables and data structures\nSource file and line number information\n\nMicrosoft publishes all the PDB files for all operating systems and other redistributed components on its symbol server. This makes it easy to debug an application that uses these DLL or executable files. You can use the Microsoft symbol server to resolve symbols, together with any local symbols for components that were built on your computer.\nYou can find more information about how radare2 interpret PDB files in the following links:\n\nSymbols information | radare2book\nPDB Usage | radare2 docs\n\nPDB vs SDB\nAs you probably figured out by now, SDB and PDB are two different things and for debugging purposes, PDB is much more helpful.\nFurther reading:\n\nLinking by ordinal\nImport Symbols by Ordinals in Link-Time\nDebugging with Symbols\nSymbols and symbol files\nInformation from Microsoft about the PDB format\n",
            "votes": "4",
            "user": "Megabeets",
            "time": "Jan 26, 2018 at 8:35",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Evan Carroll",
                    "text": "<span class=\"comment-copy\">when you say referenced by ordinal instead of by name? does the pdb not also have the ordinal information for the symbol? Also, while you you certainly say how pdbs are more helpful it isn't clear to me coming into this how it's more helpful. How can I see the information added by the pdb in <code>Name and type information for local variables and data structures</code> It seems I have the same information before and after? I'd like to be able to see what the pdb added that radare didn't already know with the sdb.</span>",
                    "time": null
                }
            ]
        }
    ]
}