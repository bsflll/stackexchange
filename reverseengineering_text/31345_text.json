{
    "title": "HTML/JS app - getting a reference to an element which is not part of the DOM",
    "link": "https://reverseengineering.stackexchange.com/questions/31345/html-js-app-getting-a-reference-to-an-element-which-is-not-part-of-the-dom",
    "content": "I am trying to debug an app which I don't own which uses HTML5 and JS, which displays a video stream.  The issue is that the video stutters when viewed in high resolution.\nNote that the code is obfuscated, but has been prettyfied which helps a little.  So far using Chrome developer tools and by injecting listeners I have determined that the video is being displayed in a <pre><code><canvas></code></pre> element.  From my research, I have determined that displaying video content in <pre><code><canvas></code></pre> requires the use of <pre><code><video></code></pre>, where the data taken from the video element is manipulated and written on to the <pre><code><canvas></code></pre>.\nMy problem is that I want to get a reference to the <pre><code><video></code></pre> element, which apparently is not a part of the DOM.  The use of Chrome developer tools reveals no such element, nor does <pre><code>getElementsByTagName()</code></pre>.  I find clues in the code which indicate a <pre><code><video></code></pre> element most likely exists, so my conclusion is that it is just used in memory as a tool and is not added to the DOM.\nDoes anyone have any suggestions as to how I can get a reference to this element?\n",
    "votes": "2",
    "answers": 1,
    "views": "70",
    "tags": [
        "javascript"
    ],
    "user": "KevinHJ",
    "time": "Jan 2, 2023 at 14:34",
    "comments": [],
    "answers_data": [
        {
            "content": "Look for any requests to <pre><code>document.createElement</code></pre> or <pre><code>document.createElementNS</code></pre> in the code that may be creating and appending the <pre><code><video></code></pre> element to the DOM. You might be able to locate the <pre><code><video></code></pre> element by searching the child nodes of its parent element.\n\nLook for any event listeners associated with the <pre><code><video></code></pre> element. For example, if the <pre><code><video></code></pre> element has a onended event listener, you could try triggering it and seeing if it produces any output in the console or other visible effects.\n\nSearch the code for any mentions of the <pre><code><video></code></pre> element. You might notice references to an attribute in the code, for instance, if the <pre><code>src</code></pre> attribute of the <pre><code><video></code></pre> element is set dynamically.\n\nYou might be able to locate the <pre><code><video></code></pre> element by looking for it in the virtual DOM or component tree if the code makes use of a JavaScript library or framework (like React or Angular).\n\nIf the <pre><code><video></code></pre> element is being used to display a video stream from a server, you may be able to locate it by inspecting the network traffic in the developer tools. For example, if the video stream is served via the HTML5 <pre><code>MediaSource</code></pre> API, network requests for video segments should be visible in the network panel.\n",
            "votes": "2",
            "user": "r0xdeadbeef",
            "time": "Jan 3, 2023 at 2:04",
            "is_accepted": true,
            "comments": []
        }
    ]
}