{
    "title": "Game's anti-cheat complains when driver test-signing mode is on",
    "link": "https://reverseengineering.stackexchange.com/questions/19168/games-anti-cheat-complains-when-driver-test-signing-mode-is-on",
    "content": "I use Windows 7 64 bit, thus in order to load a test-signed driver, I need to enable test-signing mode.\nMy driver bypasses some of the game's anti-cheat features to allow me to run a debugger and attach to the program.\nHowever, when I enable the test-signing mode and launch the game, its anti-cheat service detects test-signing is enabled and terminates the game.\nI also tried to disable the driver signature enforcement by restarting the computer and pressing F8, although the result is the same.\nI thought about a possible solution: set the <pre><code>g_CiEnabled</code></pre> variable to <pre><code>TRUE</code></pre> after the game's run (however, as I can't run my driver, I'd need to find a vulnerability in a signed driver and set it from there, although I think it's not worth doing all that stuff.).\nIs there an easier way to run the test-signed driver on 64 bit system without test-signing mode?\n",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "windows",
        "x86-64",
        "kernel-mode",
        "driver"
    ],
    "user": "anx199",
    "time": "Aug 27, 2018 at 20:28",
    "comments": [
        {
            "user": "NirIzr",
            "text": "What about, using your driver, disabling the test-signing in-game check, so that the game will not terminate when test-signing is on?\n",
            "time": null
        },
        {
            "user": "anx199",
            "text": "@nirlzr AFAIK, to enable/disable test-signing, one needs to restart computer\n",
            "time": null
        },
        {
            "user": "NirIzr",
            "text": "You are correct but I'm not suggesting you enable/disable test-signing. I suggest you patch the piece of code that tests whether test-signing is enabled in the game executable.\n",
            "time": null
        },
        {
            "user": "anx199",
            "text": "@NirIzr Oh, you're right! I don't know why I didn't think about it earlier, maybe I thought it can be bypassed easier. Thanks!\n",
            "time": null
        },
        {
            "user": "NirIzr",
            "text": "Great, let me turn that to an answer then...\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Sometimes the answer can really be more simple then you'd think.\nOne approach you could take is that instead of getting your driver to load without test-signing (which seems to be your initial direction of approach), you could prevent the debugged executable from detecting test-signing it on.\nThis is a link with a few suggestions on how one may detect if test-signing is enabled or not, you can search for similar looking code (e.g. calls to <pre><code>NtQuerySystemInformation</code></pre> with the <pre><code>SystemCodeIntegrityInformation</code></pre>).\nAn alternative solution if your main goal is researching the executable at hand, you could consider using windows versions prior to Vista, where loading your own drivers is far easier.\n",
            "votes": "1",
            "user": "0xC0000022L",
            "time": "Apr 5, 2024 at 14:59",
            "is_accepted": true,
            "comments": []
        }
    ]
}