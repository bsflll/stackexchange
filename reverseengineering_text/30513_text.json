{
    "title": "What utilities allow you to debug a process without pausing execution?",
    "link": "https://reverseengineering.stackexchange.com/questions/30513/what-utilities-allow-you-to-debug-a-process-without-pausing-execution",
    "content": "I was just reading this answer on StackOverflow, \"How can you debug a process using gdb without pausing it?\"\n\nThe Linux kernel provides some support for this via <pre><code>PTRACE_SEIZE</code></pre>, but gdb doesn't use this yet.  There's a bug in bugzilla you can track, \"Bug 15250 - use <pre><code>PTRACE_SEIZE</code></pre> and <pre><code>PTRACE_INTERRUPT</code></pre>\"\n\nI was able to find <pre><code>PTRACE_SEIZE</code></pre> documented in <pre><code>man ptrace</code></pre>,\n\n<pre><code>PTRACE_SEIZE</code></pre> (since Linux 3.4): Attach  to  the process specified in pid, making it a tracee of the calling process.  Unlike <pre><code>PTRACE_ATTACH</code></pre>, <pre><code>PTRACE_SEIZE</code></pre> does not stop the process.  Group- stops are reported as <pre><code>PTRACE_EVENT_STOP</code></pre> and <pre><code>WSTOPSIG(status)</code></pre> returns the stop signal.  Automatically attached  children  stop  with  <pre><code>PTRACE_EVENT_STOP</code></pre>  and <pre><code>WSTOPSIG(status)</code></pre>  returns  <pre><code>SIGTRAP</code></pre>  instead of having <pre><code>SIGSTOP</code></pre> signal delivered to them.  <pre><code>execve(2)</code></pre> does not deliver an extra <pre><code>SIGTRAP</code></pre>.  Only a <pre><code>PTRACE_SEIZE</code></pre>d process can accept <pre><code>PTRACE_INTERRUPT</code></pre> and <pre><code>PTRACE_LISTEN</code></pre> commands.  The \"seized\" behavior just described is inherited by children that are  automatically  at‚Äê tached  using <pre><code>PTRACE_O_TRACEFORK</code></pre>, <pre><code>PTRACE_O_TRACEVFORK</code></pre>, and <pre><code>PTRACE_O_TRACECLONE</code></pre>.  addr must be zero.  data contains a bit mask of ptrace options to activate immediately. Permission to perform a <pre><code>PTRACE_SEIZE</code></pre> is governed by a ptrace access mode <pre><code>PTRACE_MODE_ATTACH_REALCREDS</code></pre> check; see below.\n\nThat raises the question if <pre><code>PTRACE_SEIZE</code></pre> isn't supported by gdb, what tooling (if any) does support this functionality on Linux?\n",
    "votes": "5",
    "answers": 0,
    "views": "369",
    "tags": [
        "linux",
        "gdb"
    ],
    "user": "Evan Carroll",
    "time": "Jun 12, 2022 at 23:17",
    "comments": [],
    "answers_data": []
}