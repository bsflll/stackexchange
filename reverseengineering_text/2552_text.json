{
    "title": "How to unpack files packed with multiple packers?",
    "link": "https://reverseengineering.stackexchange.com/questions/2552/how-to-unpack-files-packed-with-multiple-packers",
    "content": "As I am just getting started in RE, I've mostly faced files packed with a single-layer of packing , such as UPX, ASPack, etc.\nUnpacking these protections is fully documented online. The problem begins when I deal with multiple layers of packing, especially concerning malware. I have followed some tutorials though they're usually not detailed enough. They seem to go through a tedious process to find the OEP. For example, they start by dealing with common packers (which is the easy part) and then they begin to set breakpoints everywhere \"in calls and jumps\" and tracing through the file here and there, which is for me the hard part that I have described above. At this point, I have no clue for what they are seeking or for what they are aiming, and then after some work, they find the OEP!  \nSo what logic did they follow in that process? Also, because I know that the subject is broad, I'm also interested in some keywords.\n",
    "votes": "6",
    "answers": 2,
    "views": "6k",
    "tags": [
        "malware",
        "unpacking"
    ],
    "user": "Higet",
    "time": "Jul 28, 2013 at 19:39",
    "comments": [
        {
            "user": "PhoeniX",
            "text": "I think you mean obfuscation as for example upx is not encryption but a tool for packing executable files.\n",
            "time": null
        },
        {
            "user": "Remko",
            "text": "Related: reverseengineering.stackexchange.com/questions/72/â€¦\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "As you saw by yourself, RE is not a easy skill to accomplish. One must find as much patience (at least) as he could to acquire it, some intelligence and knowledge will also help. If you think that just following the tutorial you will understand all of it from the first read, then you are wrong.\nMy advice to you is :\n\nread the tutorial several times and try to pass it without looking into the writings\ntry to understand as much as you can about OS/platform you are reversing on\nbe proficient with PE format for a start or the file format you are dealing with\nread about packers and obfuscation techniques\n\nAfter that, I'm pretty sure, if you come back to that tut again, you will understand it more clearly.  \nHere are some good resources:\n\nMalware Unpacking In Ollydbg\nFinding OEP and unpacking Malware packed with ASPACK 2.12 - try it although you said, you came across similar ones\nFravia's archive pages of reverse engineering\nOverview of PE file format\n\nMay the force be with you :)\n",
            "votes": "9",
            "user": "PhoeniX",
            "time": "Jul 28, 2013 at 18:33",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "To Unpack a file you must have quite a lot of experience in reversing binaries..\nRemember there exists no universal method that works for all the packers.\nThese steps will work in unpacking 97% of binaries;\n\nYou must be aware of the code that usually lies at the start of entry point in binaries compiled by well known compilers VC++, VB, Borland Delphi and other compilers. You should also be aware of the difference in code near entry point in binaries compiled in different compiler versions. This will eventually help you in finding the OEP.\nYou must have abundance patience to follow all the virtual memory allocation and virtual memory freeing.\nDump the memory blocks and look for visible strings after execution of a decryption code.\nLearn about debugger detection, virtual environment detection and anti-debugging techniques.\nStart with simple packers at first. I will recommend you to try UPX older versions.\nLast but not the least \"Play with your favorite debugger at-least for 14 hours a day.\"\n\nAll the best and Happy reversing!!!\n",
            "votes": "5",
            "user": "perror",
            "time": "Jan 8, 2014 at 15:19",
            "is_accepted": false,
            "comments": [
                {
                    "user": "the_endian",
                    "text": "<span class=\"comment-copy\">I think #6 takes the cake!</span>",
                    "time": null
                }
            ]
        }
    ]
}