{
    "title": "Symbols could not be loaded for win32k drivers",
    "link": "https://reverseengineering.stackexchange.com/questions/14107/symbols-could-not-be-loaded-for-win32k-drivers",
    "content": "I'm doing a kernel debugging on a VmWare installed Windows 10 corporate edition (x64 version 1607 build 14393.447). I use Ida Pro 6.6 with the WinDbg plugin. On my host i have the same OS , with Debugging Tools For WIndows 10 installed. When i connect to the target machine, all the symbols are loaded correctly except for the win32 system ( win32k.sys/win32kbase.sys/win32kfull.sys ). I have the symbols defined in my user-environment variable like so : \n<pre><code>_NT_SYMBOL_PATH=srv*c:\\symbols*https://msdl.microsoft.com/download/symbols\n</code></pre>\nWhen i choose load symbols in Ida modules menu i get the following output:\n<pre><code>WINDBG>!sym noisy\nnoisy mode - symbol prompts on\n\nTrying loadDataForExe with 14000000\nloadDataForExe: 806d0012\nTrying loadDataForExe with ffffffff\nloadDataForExe: 806d0005\nPDB: could not process file \\SystemRoot\\System32\\win32kbase.sys with DIA: Failed to open the file, or the file has an invalid format (E_PDB_NOT_FOUND)\n\nTrying loadDataForExe with 13dd0000\nloadDataForExe: 806d0012\nTrying loadDataForExe with ffffffff\nloadDataForExe: 806d0005\nPDB: could not process file \\SystemRoot\\System32\\win32k.sys with DIA: Failed to open the file, or the file has an invalid format (E_PDB_NOT_FOUND)\n\nTrying loadDataForExe with 14960000\nloadDataForExe: 806d0012\nTrying loadDataForExe with ffffffff\nloadDataForExe: 806d0005\nPDB: could not process file \\SystemRoot\\System32\\win32kfull.sys with DIA: Failed to open the file, or the file has an invalid format (E_PDB_NOT_FOUND)\n</code></pre>\nlmi output:\n<pre><code>WINDBG>!lmi win32kbase\nLoaded Module Info: [win32kbase] \nCannot read Image header @ ffff81ce14000000\nLoad Report: export symbols\n\nWINDBG>!lmi win32k\nLoaded Module Info: [win32k] \nCannot read Image header @ ffff81ce13dd0000\nLoad Report: public symbols , not source indexed \n                     c:\\symbols\\win32k.pdb\\0383A6141581403B9E8426F05328D45F1\\win32k.pdb\n\nWINDBG>!lmi win32kfull\nLoaded Module Info: [win32kfull] \nCannot read Image header @ ffff81ce14960000\n    Load Report: public symbols , not source indexed \n                 c:\\symbols\\win32kfull.pdb\\A792B492035540D397D66128F30037B01\\win32kfull.pdb\n</code></pre>\nThis is all really annoying, because sometimes the symbols just loads correctly, i do not know on what this depends, i found a similar topics in google here they had the same problem, but with the dumps. \nThis is really annoying problem, maybe someone had the same problem, trying to do some reverse-engineering the win32k subsystem, and can help me.\n",
    "votes": "1",
    "answers": 0,
    "views": "1k",
    "tags": [
        "ida",
        "windows",
        "windbg",
        "kernel-mode",
        "debugging-symbols"
    ],
    "user": "Vlad",
    "time": "Dec 5, 2016 at 8:50",
    "comments": [
        {
            "user": "blabb",
            "text": "Try switching to a pricess context like expkirer.exe and reload  viz .process / p / r eproc-explorer.exe .reliad / f\n",
            "time": null
        },
        {
            "user": "Vlad",
            "text": "@blabb It's sort of worked, but sometimes it doesnt recognize for example win32kbase.sys as x64 code module, and disassembles it as x86 code, which is not good.. but i think it is fixed too, by removing all the files in c:\\symbols\n",
            "time": null
        },
        {
            "user": "Vlad",
            "text": "@blabb is there any other solutions? Because i tried to set some breakpoints and whenever i set a breakpoint and continue the os execution, it never gets hit, and all this module becomes mess again.\n",
            "time": null
        }
    ],
    "answers_data": []
}