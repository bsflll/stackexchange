{
    "title": "Specifying DLL imports within the PE?",
    "link": "https://reverseengineering.stackexchange.com/questions/25108/specifying-dll-imports-within-the-pe",
    "content": "I have unpacked and dumped a dll that uses a custom IAT to resolve Win32 API calls (143 of them).\nIs there anyway to modify the dumped dll PE to include these imports dynamcially and forward their addresses to the dumped function pointer table.\nSee below a photo of the on disk dumped PE function table and the list of functions\n",
    "votes": "0",
    "answers": 0,
    "views": "81",
    "tags": [
        "dll",
        "unpacking"
    ],
    "user": "rob-DEV",
    "time": "May 24, 2020 at 16:17",
    "comments": [
        {
            "user": "morsisko",
            "text": "Why do you want to resolve the imports dynamically and not just modify the IAT inside the dumped file?\n",
            "time": null
        },
        {
            "user": "rob-DEV",
            "text": "I rebuilt the IAT inside scylla however these imports where not detected. I don't know how to point the imports to this table correctly, it's also an x64 pe so i cant use lordpe\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "what's your end goal? make unpacked exe runnable or simply analyze the code?\n",
            "time": null
        }
    ],
    "answers_data": []
}