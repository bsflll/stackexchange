{
    "title": "Way to check if two assembly programs (one possibly compiled with optimizations) come from the same C source code?",
    "link": "https://reverseengineering.stackexchange.com/questions/24713/way-to-check-if-two-assembly-programs-one-possibly-compiled-with-optimizations",
    "content": "Let's suppose I have two programs in assembly code. And I want to check if they both came from the same source code, but one was compiled with optimizations. Is there a tool that can do this? Or some general process that can verify this?\n",
    "votes": "2",
    "answers": 1,
    "views": "133",
    "tags": [
        "assembly",
        "compiler-optimization"
    ],
    "user": "JBraha",
    "time": "Apr 15, 2020 at 17:47",
    "comments": [],
    "answers_data": [
        {
            "content": "While you can potentially prove that two pieces of binary code are equivalent (i.e. they produce the same results given the same input), this does not by itself mean that the source code was the same. For example, the following two snippets will likely be compiled to the same binary even though the source is different:\n<pre><code> int f(int x)\n {\n  return x+1;\n }\n\n int g(int y)\n {\n  return ++y;\n }\n</code></pre>\n(check on https://godbolt.org/)\nThat said, if you do want to prove that (for example) two functions are equivalent, you can try many different approaches, e.g.:\n\nmanual comparison of assembly code/binary diffing (may not work if very different compilers or optimizations settings were used)\ndecompile both functions and compare outputs (same caveat)\nif the input state is not huge, you can run both functions with all possible inputs and compare outputs\nin some cases things like symbolic execution or SMT solvers can be applied\n\nA more generic problem of detecting authorship of arbitrary code is called \"code provenance\" and there are several papers on the topic, e.g.:\n\nWho Wrote This Code? Identifying the Authors of Program Binaries (Nathan Rosenblum et al.)\nBinPro: A Tool for Binary Source Code Provenance (Dhaval Miyani et al.)\n",
            "votes": "4",
            "user": "Igor Skochinsky",
            "time": "Apr 15, 2020 at 21:40",
            "is_accepted": true,
            "comments": []
        }
    ]
}