{
    "title": "Can't extract machine code from Cortex-M3 firmware",
    "link": "https://reverseengineering.stackexchange.com/questions/15049/cant-extract-machine-code-from-cortex-m3-firmware",
    "content": "I want to extract machine code from XBee DigiMesh firmware (Cortex-M3, EM357), so I have SREC file with 3 sections inside. I suppose that one of these sections is a code section, but arm-none-eabi-objdump reports \"unknown instruction\" very often. Does anyone know why this happens? \nThis is how I try to do this:\n<pre><code>arm-none-eabi-objcopy --input-target=srec --output-target=binary -j .sec2 xbp24-dm_8073.ehx2.dec sec2.bin\narm-none-eabi-objdump -D -bbinary -marm -Mforce-thumb sec2.bin\n</code></pre>\n\nFirmware: http://tmp.nazaryev.ru/xbp24-dm_8073.ehx2.dec\nEM357 datasheet: https://www.silabs.com/documents/public/data-sheets/EM35x.pdf\n\nUpdate: I converted ehx2 to ehx2.dec by http://git.nazaryev.ru/xctu-decoder.git/\n",
    "votes": "2",
    "answers": 2,
    "views": "1k",
    "tags": [
        "arm"
    ],
    "user": "Sergey Nazaryev",
    "time": "Apr 5, 2017 at 20:05",
    "comments": [
        {
            "user": "blabb",
            "text": "The firmware from freescale consists of 3 file an ehx an ehx2 and an mix file  the zip doesnt contain an ehx2.dec  how did you convert the ehx2 into ehx2.dec google doesnt seem to know of a convertor can you edit in an explanation\n",
            "time": null
        },
        {
            "user": "blabb",
            "text": "Thanks for the update in the meanwhile i found another for presumably series 1 .ehx file here    ,,,github.com/roysjosh/xbee-comm/blob/master/src/bin/ehx2srec.c\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "The code in file is not ARM. In the binary the following string can be seen:\n\nHW Part #: MC13213\n\nGoogling for it leads to this page which says:\n\nThe MC13213 System in Package (SiP) integrates the MC9S08GT MCU\n  with the MC1320x transceiver into a single 9x9mm LGA package.\n\nand\n\n40 MHz HCS08 low-voltage, low-power core\n\nAnd indeed, choosing HCS08 in IDA leads to reasonably-looking disassembly\n<pre><code>seg000:1893 start:\nseg000:1893\nseg000:1893 ; FUNCTION CHUNK AT seg000:23BC SIZE 0000009F BYTES\nseg000:1893\nseg000:1893                 ldhx    #$F2E\nseg000:1896                 txs\nseg000:1897                 ldhx    #$E02\nseg000:189A                 sthx    $177\nseg000:189D                 bra     loc_18AD\nseg000:189F ; ---------------------------------------------------------------------------\nseg000:189F\nseg000:189F loc_189F:                               ; CODE XREF: start+20j\nseg000:189F                 lda     #$A5 ; 'Ñ'\nseg000:18A1                 ldhx    $177\nseg000:18A4                 sta     , x\nseg000:18A5                 ldhx    #$177\nseg000:18A8                 inc     1, x\nseg000:18AA                 bne     loc_18AD\nseg000:18AC                 inc     , x\nseg000:18AD\nseg000:18AD loc_18AD:                               ; CODE XREF: start+Aj\nseg000:18AD                                         ; start+17j\nseg000:18AD                 ldhx    $177\nseg000:18B0                 cphx    #$F2E\nseg000:18B3                 bcs     loc_189F\nseg000:18B5                 jsr     sub_182C\nseg000:18B8                 jmp     loc_23BC\n</code></pre>\n",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Mar 31, 2017 at 9:09",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "the firmware file hash\n<pre><code>E:\\zigb>rahash2 -a md5 xbp24-dm_8073.ehx2.dec\nxbp24-dm_8073.ehx2.dec: 0x00000000-0x00022bcd md5: 971f71b674af2d5edb670a5ce4b0371f\n</code></pre>\nthe version mingw objcopy in my windows box\n<pre><code>E:\\zigb>objcopy -V\nGNU objcopy (GNU Binutils) 2.25.1\nCopyright (C) 2014 Free Software Foundation, Inc.\nThis program is free software; you may redistribute it under the terms of\nthe GNU General Public License version 3 or (at your option) any later version.\nThis program has absolutely no warranty.\n</code></pre>\nduplicated the file \n<pre><code>E:\\zigb>copy xbp24-dm_8073.ehx2.dec test.dec\n        1 file(s) copied.\n</code></pre>\nnow i objcopy it \n<pre><code>E:\\zigb>objcopy -I srec -O binary -S  test.dec\n\nE:\\zigb>ls -l\ntotal 200\n-rw-rw-rw-  1 HP 0  60800 2017-03-30 03:25 test.dec\n-rw-rw-rw-  1 HP 0 142286 2017-03-30 02:43 xbp24-dm_8073.ehx2.dec\n</code></pre>\ndumping 32 bytes from the file \n<pre><code>E:\\zigb>xxd -g 1 -l 32 test.dec\n0000000: 43 54 02 d1 47 10 36 43 4e 00 d1 31 00 00 41 43  CT..G.6CN..1..AC\n0000010: 00 d1 12 00 00 56 52 02 9c 1d fd 46 46 52 00 d1  .....VR....FFR..\n</code></pre>\ndumping the first two lines from original file\n<pre><code>E:\\zigb>head -n 2 xbp24-dm_8073.ehx2.dec\nS0260000433A5C446576656C6F706D656E745C646D32345C62696E5C584232342D444D2E70726DBE\nS1231080435402D1471036434E00D1310000414300D11200005652029C1DFD46465200D14C\n</code></pre>\nDeciphering the first s0 record (header) and the second line an S1 data record\n<pre><code>E:\\zigb>rax2 -s 433A5C446576656C6F706D656E745C646D32345C62696E5C584232342D444D2E70726D\nC:\\Development\\dm24\\bin\\XB24-DM.prm\n\nE:\\zigb>rax2 -s 435402D1471036434E00D1310000414300D11200005652029C1DFD46465200D1\nCT☻╤G►6CN ╤1  AC ╤↕  VR☻£↔²FFR ╤\n</code></pre>\nit appears to be correct conversion by objcopy \nbtw objdump can use srec as target so no objconv is required i think\n<pre><code>:\\>arm-none-eabi-objdump.exe -D -bsrec -marm  -Mforce-thumb --start-address=0x1893 --stop-address=0x\n18a3 e:\\zigb\\xbp24-dm_8073.ehx2.dec\n\ne:\\zigb\\xbp24-dm_8073.ehx2.dec:     file format srec\n\n\nDisassembly of section .sec2:\n\n00001893 <.sec2+0x67>:\n    1893:       0f45            lsrs    r5, r0, #29\n    1895:       942e            str     r4, [sp, #184]  ; 0xb8\n    1897:       0e45            lsrs    r5, r0, #25\n    1899:       9602            str     r6, [sp, #8]\n    189b:       7701            strb    r1, [r0, #28]\n    189d:       0e20            lsrs    r0, r4, #24\n    189f:       a5a6            add     r5, pc, #664    ; (adr r5, 0x1b38)\n    18a1:       0132            lsls    r2, r6, #4\n\n:\\>\n</code></pre>\nStrings inside binary xbee-pro digimesh v24 and mc13213 a hcs08 compatible cpu it seems\n",
            "votes": "1",
            "user": "blabb",
            "time": "Apr 1, 2017 at 10:35",
            "is_accepted": false,
            "comments": []
        }
    ]
}