{
    "title": "IDA and Ghidra Reversing",
    "link": "https://reverseengineering.stackexchange.com/questions/24691/ida-and-ghidra-reversing",
    "content": "I have several questions about IDA and Ghidra (for MIPS and ARM):\n\nIs there any option to load an executable file with all its libraries? \nFor example, I want to enter inside a function which its implementation is in a library, and not to open a new instance of IDA or add the library in a new tab inside Ghidra\nIs there any good tutorial on reversing c++ for MIPS/ARM? \nAre there any plugin you recommend for Ghidra or IDA for MIPS/ARM ? all that I see is for x86  (not plugin for analyzing malware, plugins for analyzing firmware)\n",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "c++",
        "ghidra",
        "ida-plugin"
    ],
    "user": "Logan",
    "time": "Apr 17, 2020 at 22:44",
    "comments": [],
    "answers_data": [
        {
            "content": "I can only properly answer your first question:\nI think this is fundamentally impossible to achieve with IDA, but in Ghidra it works and is fairly easy to use (though a bit hard to find)\nIf your \"firmware\" is a filesystem that you can unpack, you can automatically load the libraries by:\n\nOpening the regular <pre><code>Import File...</code></pre> dialog\nClicking <pre><code>Options</code></pre> inside that dialog\nTick <pre><code>Load External Libraries</code></pre>\n[Optional] Click <pre><code>Edit Paths</code></pre> to select the paths that will be searched for your libraries\nConfirm all the dialogs with <pre><code>Ok</code></pre>.\n\nGhidra will now import your binary and all libraries needed by it. They will automatically be linked, which means that your imports in your main binary are resolved and you can jump to the library code via the GUI when looking at an external function call in your main binary.\nI am not sure if this violates your \"not to open a new instance of IDA or add the library in a new tab inside Ghidra\" requirement, because this will open a new tab, in your Codebrowser's <pre><code>Listing</code></pre> window.\n",
            "votes": "6",
            "user": "Florian Magin",
            "time": "Apr 12, 2020 at 14:52",
            "is_accepted": false,
            "comments": [
                {
                    "user": "multithr3at3d",
                    "text": "<span class=\"comment-copy\">Can this be done after a binary is imported?</span>",
                    "time": null
                },
                {
                    "user": "Logan",
                    "text": "<span class=\"comment-copy\">I have tried what you say and from some reason it load additional libraries but not all what my binary needs.( i gave the ghidra a path to directory contains all libs from firmware)</span>",
                    "time": null
                },
                {
                    "user": "Florian Magin",
                    "text": "<span class=\"comment-copy\">@multithr3at3d I don't think you can do it that easily, but you can definitely add them manually via <code>Windows -&gt; External Programs</code> and then run the <code>FixupELFExternalSymbolsScript</code> Script. With some scripting it shouldn't be that hard to automate searching for the library names in some path, adding the found ones, linking them like the <code>External Programs</code> window and then running <code>FixupELFExternalSymbolsScript</code></span>",
                    "time": null
                },
                {
                    "user": "Florian Magin",
                    "text": "<span class=\"comment-copy\">@Daniel Dan Not sure what the issue is with that. Does it work if you add them manually and run the <code>FixupELFExternalSymbolsScript</code>?</span>",
                    "time": null
                },
                {
                    "user": "Logan",
                    "text": "<span class=\"comment-copy\">@FlorianMagin . If i try to add them manually i get the following error: \"IllegalArgumentException - name is invalid:  java.lang.IllegalArgumentException: name is invalid:\" . Do you have ideas ?</span>",
                    "time": null
                }
            ]
        }
    ]
}