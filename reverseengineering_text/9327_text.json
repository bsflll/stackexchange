{
    "title": "Assembly analyze C system() function",
    "link": "https://reverseengineering.stackexchange.com/questions/9327/assembly-analyze-c-system-function",
    "content": "So I made a very simple C program to study how C works on the inside. It has just 1 line in the main() excluding return 0:\n<pre><code>system(\"cls\");\n</code></pre>\nIf I use ollydebugger to analyze this program It will show something like this(text after the semicolons are comments generated by ollydebugger.\n<pre><code>MOV DWORD PTR SS:[ESP],test_1.004030EC     ; ||ASCII \"cls\"\nCALL <JMP.&msvcrt.system>                ; |\\system\n</code></pre>\nCan someone explain what this means, and if I want to change the \"cls\" called in the system() to another command, where is the \"cls\" stored? And how do I modify it?\n",
    "votes": "-2",
    "answers": 1,
    "views": "561",
    "tags": [
        "ollydbg",
        "assembly",
        "c"
    ],
    "user": "Dashadower",
    "time": "Jul 11, 2015 at 12:24",
    "comments": [
        {
            "user": "0xec",
            "text": "Ascii string <pre><code>cls</code></pre> is stored at virtual address <pre><code>004030EC</code></pre>. In Olly press ,Ctrl + G to go there.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "The Ascii string <pre><code>cls</code></pre> is stored at address <pre><code>0x004030EC</code></pre>. Why is it stored at that location is probably compiler related. \nThe <pre><code>ESP</code></pre> register holds the address of the top of the stack. What your instruction \n<pre><code>MOV DWORD PTR SS:[ESP],test_1.004030EC     ; ||ASCII \"cls\"\n</code></pre>\nmeans is to put the value <pre><code>0x004030EC</code></pre> to the address pointed to by <pre><code>ESP</code></pre>. If the value of <pre><code>ESP</code></pre> is, lets say, <pre><code>ESP = 0x0018FF8C</code></pre>, then the value at address <pre><code>0x0018FF8C</code></pre> will be <pre><code>0x004030EC</code></pre> after the above <pre><code>MOV</code></pre> instruction is executed.\nIf you want to change the string <pre><code>cls</code></pre> to something else, you can position at the dump window in Olly and press CTRL-G. A popup box will appear and there you will enter <pre><code>0x004030EC</code></pre> and press <pre><code>Ok</code></pre>. After that right click on the first byte at that address, which should be <pre><code>0x63</code></pre> (the letter 'c' from string \"cls\") and choose <pre><code>Binary -> Edit</code></pre>. There you can enter your new string that will be passed to the <pre><code>CALL</code></pre> instruction.\n",
            "votes": "1",
            "user": "ubnix",
            "time": "Jul 13, 2015 at 10:16",
            "is_accepted": false,
            "comments": []
        }
    ]
}