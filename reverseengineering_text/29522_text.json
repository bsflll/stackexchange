{
    "title": "Find all x-ref with specific argument with IdaPython",
    "link": "https://reverseengineering.stackexchange.com/questions/29522/find-all-x-ref-with-specific-argument-with-idapython",
    "content": "I have a function at <pre><code>0xabcd</code></pre> that is called a few times like <pre><code>Func(1,2,3)</code></pre> and <pre><code>Func(4,4,5)</code></pre>.\nI want to find all the references where the third argument is <pre><code>5</code></pre>.\n<pre><code>import idautils\nfor f in list(idautils.XrefsTo(0xabcd)):\n</code></pre>\nHow can I get the third argument from all the x-ref with IDAPython?\n",
    "votes": "3",
    "answers": 1,
    "views": "377",
    "tags": [
        "ida",
        "idapython"
    ],
    "user": "vtable",
    "time": "Dec 12, 2021 at 8:28",
    "comments": [],
    "answers_data": [
        {
            "content": "As currently stated, there's no simple solution to such a general problem.\nStatic analysis is quite a complex subject and there are no generic solutions that are available out of the box.\nA few basic examples of why this may be difficult are these:\n\nConsider the case where the third argument to <pre><code>Func</code></pre> is a user supplied input. It is therefore impossible to know the value statically.\n\nMoreover, a value may be derived from other external sources (the OS, the internet, etc).\n\nEven when limiting to static programs, the code manipulating the variable before passing it on to <pre><code>Func</code></pre> may be complex and difficult to follow.\n\n\nA na√Øve static solution may be a more viable solution. For example, a solution that assumes the third argument to <pre><code>Func</code></pre> is a hardcoded immediate value and not a variable, will require only little static analysis and can be achieved, although IDA is not best-suited for such tasks (I'd recommend you take a look at angr instead)\nAlternatively, one might argue that debugging is a better solution, placing a break point on <pre><code>Func</code></pre> and parsing the arguments at call-time. This is again not IDA's forte but nowadays IDA's debugger is good enough to use for such a task.\n",
            "votes": "1",
            "user": "NirIzr",
            "time": "Nov 11, 2021 at 13:14",
            "is_accepted": false,
            "comments": []
        }
    ]
}