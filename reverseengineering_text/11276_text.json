{
    "title": "What is the difference between Intrusive Attaching and Non-Intrusive Attaching when debugging?",
    "link": "https://reverseengineering.stackexchange.com/questions/11276/what-is-the-difference-between-intrusive-attaching-and-non-intrusive-attaching-w",
    "content": "In Core Debugger Concepts What is the difference between Intrusive Attaching  and Non-Intrusive Attaching when debugging?\n",
    "votes": "0",
    "answers": 1,
    "views": "183",
    "tags": [
        "debugging",
        "debuggers",
        "dynamic-analysis"
    ],
    "user": "adri√°n",
    "time": "Nov 9, 2015 at 0:28",
    "comments": [],
    "answers_data": [
        {
            "content": "non invasive debugging has access to the process memory and can inspect state\nnon invasive debuggine cannot perform execution controlling options like step , breakpoints etc.\nnon invasive  code flow is something like this \n<pre><code>OpenProcess() , SuspendThread() , ReadProcessMemory() , ResumeThread() , CloseHandle()\n</code></pre>\nInvasive debugging receives all the debugging events in the debuggee    \n<pre><code>CreateProcess (.,.,.,DEBUG_XXXXX,...,); so this can wait for all the DebugEvents \n</code></pre>\n",
            "votes": "1",
            "user": "blabb",
            "time": "Nov 9, 2015 at 3:41",
            "is_accepted": true,
            "comments": []
        }
    ]
}