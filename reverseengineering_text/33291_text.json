{
    "title": "JSON mapping with obfuscated property names",
    "link": "https://reverseengineering.stackexchange.com/questions/33291/json-mapping-with-obfuscated-property-names",
    "content": "I'm building a replacement server for the 2013 Android-based PlayJam GameStick micro console and implemented the server-side leaderboard APIs.\nOne game crashes when retrieving the leaderboard data, the unity-based \"Stop the birds\".\nI extracted the (presumably C#/unity script) <pre><code>Assembly-CSharp.dll</code></pre> file and loaded it into ILspy and dnSpy.\nThe game uses LitJson to automatically map JSON responses onto objects, and I suspect something fails there, leading to a null pointer exception.\nBoth ILspy and dnSpy only show obfuscated property names like <pre><code>B</code></pre> and <pre><code>A</code></pre> inside the classes that get JSON data mapped onto:\n<pre><code>    private class BodyElement\n    {\n        public bool B; //should be \"success\"\n\n        public string A;\n\n        public string Y;\n\n        public LeaderboardDataItem[] V; //should be named \"leaderBoard\"\n    }\n\n    public LeaderboardData(string d)\n    {\n        o = LitJson.JsonMapper.ToObject<LeaderboardDataJson>(d);\n    }\n</code></pre>\nHow can LitJson map the correct properties when the property names are not available?\n",
    "votes": "0",
    "answers": 0,
    "views": "19",
    "tags": [
        "android",
        "obfuscation",
        "c#"
    ],
    "user": "cweiske",
    "time": "Oct 27, 2024 at 17:57",
    "comments": [],
    "answers_data": []
}