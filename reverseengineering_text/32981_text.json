{
    "title": "Decompress NSIS Script Bytecode",
    "link": "https://reverseengineering.stackexchange.com/questions/32981/decompress-nsis-script-bytecode",
    "content": "In NSIS installers, there is a compiled bytecode blob representing the NSIS script located in the overlay of the executable. The overlay start with flags 0xdeadbeef then \"NullsoftInst\". The next two DWORDs are sizes in bytes. What is the offset of the NSIS script? How can I extract it using Python?\nI am aware of 7zip, but it returns the decompiled representation of the NSIS script. I want the compiled bytecode.\n",
    "votes": "0",
    "answers": 1,
    "views": "61",
    "tags": [
        "python"
    ],
    "user": "Utkonos",
    "time": "May 23, 2024 at 0:58",
    "comments": [],
    "answers_data": [
        {
            "content": "It seems the NSIS decompression process is quite complicate because even the headers can be compressed with deflate or LZMA. I suggest you to study <pre><code>NsisIn.cpp</code></pre> from 7-zip source code, in particular <pre><code>CInArchive::Open</code></pre> and <pre><code>CInArchive::Open2</code></pre>.\n<pre><code>/*\nNsisExe = \n{\n  ExeStub\n  Archive  // must start from 512 * N\n  #ifndef NSIS_CONFIG_CRC_ANAL\n  {\n    Some additional data\n  }\n}\n\n\nArchive\n{\n  FirstHeader\n  Data\n  #ifdef NSIS_CONFIG_CRC_SUPPORT && FirstHeader.ThereIsCrc()\n  {\n    CRC\n  }\n}\n\nFirstHeader\n{\n  UInt32 Flags;\n  Byte Signature[16];\n  // points to the header+sections+entries+stringtable in the datablock\n  UInt32 HeaderLength;\n  UInt32 ArchiveSize;\n}\n*/\n\nHRESULT CInArchive::Open(IInStream *inStream, const UInt64 *maxCheckStartPosition\n</code></pre>\nSee also <pre><code>loadHeaders</code></pre> in NSIS's fileform.c\n",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "May 25, 2024 at 20:29",
            "is_accepted": true,
            "comments": []
        }
    ]
}