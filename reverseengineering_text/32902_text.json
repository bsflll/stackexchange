{
    "title": "What is the meaning of *((_DWORD *)",
    "link": "https://reverseengineering.stackexchange.com/questions/32902/what-is-the-meaning-of-dword",
    "content": "I disassemble some code using IDA Pro and get the pseudo-code. It showed something like below.\n*((_DWORD *)a1 + 150) = 3;\n*(_DWORD *)(a1 + 604) = 1;\nI can't understand what is happening for this two code, anybody can explainï¼Ÿ\n",
    "votes": "0",
    "answers": 1,
    "views": "158",
    "tags": [
        "ida"
    ],
    "user": "yepochangfeng",
    "time": "Apr 17, 2024 at 12:46",
    "comments": [],
    "answers_data": [
        {
            "content": "This is pretty much standard C representation\n<pre><code>*((_DWORD *)a1 + 150) = 3;</code></pre> means <pre><code>a1</code></pre> is a pointer to <pre><code>_DWORD</code></pre> and we dereference the 150th member of the array with base <pre><code>a1</code></pre>\nNote that <pre><code>*(_DWORD *)(a1 + 604) = 1;</code></pre> the order of brackets is a bit different and assuming the type of <pre><code>a1</code></pre> - I guess its dereferencing the 151st element since <pre><code>sizeof(_DWORD)</code></pre> is 4 and 604 = 151 x 4.\nYou can pretty much recreate this\n<pre><code>void f(int * a) {\n    a[150] = 3;\n    a[151] = 1;\n}\n\nint main() {\n    int x[256];\n    f(x);\n}\n</code></pre>\ncompile this - alternatively gcc.godbolt here\n<pre><code>$ gcc -O1 -o test test.c\n</code></pre>\nloading this in ida and decompiling\n<pre><code>void __fastcall f(__int64 a1)\n{\n  *(_DWORD *)(a1 + 600) = 3;\n  *(_DWORD *)(a1 + 604) = 1;\n}\n</code></pre>\nYou can press Y after clicking on a1 and change the type of <pre><code>a1</code></pre> to <pre><code>int *</code></pre> and get this\n<pre><code>void __fastcall f(int *a1)\n{\n  a1[150] = 3;\n  a1[151] = 1;\n}\n</code></pre>\nNote that this is not always true - <pre><code>a1</code></pre> could be a pointer to a struct and the code could be changing a member.\n",
            "votes": "3",
            "user": "sudhackar",
            "time": "Apr 18, 2024 at 6:40",
            "is_accepted": false,
            "comments": []
        }
    ]
}