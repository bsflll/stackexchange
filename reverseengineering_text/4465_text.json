{
    "title": "Where is ntdll.dll?",
    "link": "https://reverseengineering.stackexchange.com/questions/4465/where-is-ntdll-dll",
    "content": "I am trying to get the base address of <pre><code>ntdll.dll</code></pre> over the <pre><code>PEB</code></pre>. So, what I did was to dump the <pre><code>PEB</code></pre> (<pre><code>d fs:[30]</code></pre>). Then, I tried to get to <pre><code>PEB_LDR_DATA</code></pre> over the offset <pre><code>0xC</code></pre>. Over the offset <pre><code>0x1C</code></pre> of <pre><code>PEB_LDR_DATA</code></pre> I found the the pointer of <pre><code>InInitializationOrderModuleList</code></pre> and I was told that I can find the <pre><code>ntdll.dll</code></pre> address there. And that I should first find the address of <pre><code>kernel32.dll</code></pre> (which is always the second entry). So, I was able to find the address of <pre><code>kernel32.dll</code></pre> but it seems like I can't find the address of <pre><code>ntdll.dll</code></pre>. \n<pre><code>00251ED8  .ܛὈ%Ậ%ὐ%Ẵ%.....@ᐴ@怀.TVٜڔ倀...뉨粘뉨粘趨即....ꮫꮫꮫꮫ......ܨ‐%Ỡ%‘%Ứ%\n00251F58  †%Ẽ%.粑Ⱘ粒怀:Ȉ퀨粘⅘粓䀄耈..니粘니粘뾿䠂....ꮫꮫꮫꮫ......ܵC:\\WINDOWS\\system32\\\n00251FD8  kernel32.dll.ꮫꮫꮫꮫﻮﻮﻮ......߁⅐%Ὀ%⅘%ὐ%Ⅰ%὘%.粀똾粀耀@Bᾰ%Ῐ%䀄耈..늰粘늰粘뿀䠂\n00252058  ....ꮫꮫꮫꮫ.....ߎC:\\WINDOWS\\WinSxS\\x86_Microsoft.VC90.CRT_1fc8b3b\n002520D8  9a1e18e3b_9.0.21022.8_x-ww_d08d0375\\MSVCR90.dll.ꮫꮫꮫꮫ.....ߩẬ%‐%\n00252158  Ẵ%‘%Ẽ%†%.硒ⵀ硔　.¾À⁸%℠%䀆逈..닀粘닀粘㷎䜱....ꮫꮫꮫꮫ....ߊ.ᓮîŸ%Ÿ%ﻮﻮﻮﻮﻮﻮﻮﻮﻮﻮﻮﻮ\n</code></pre>\nThis is the part where I have found the <pre><code>kernel32.dll</code></pre>. But in the fact of that this a linked list. Shouldn't I be able to find <pre><code>ntdll.dll</code></pre> too? \nWhen, I open up the window of \"Executable Modules\" I can see the <pre><code>ntdll.dll</code></pre> but it seem I am not able to find the base address inside of the <pre><code>Struct</code></pre>. \nPlease tell me if you need clarification or if I am grievously mistaken.\n",
    "votes": "9",
    "answers": 2,
    "views": "5k",
    "tags": [
        "windows",
        "assembly",
        "memory",
        "immunity-debugger"
    ],
    "user": "Dirk",
    "time": "May 28, 2014 at 7:12",
    "comments": [],
    "answers_data": [
        {
            "content": "The code below will set <pre><code>EAX</code></pre> to the image base address of <pre><code>ntdll.dll</code></pre>:\n<pre><code>MOV EAX, DWORD PTR FS:[30]     ; EAX = PEB\nMOV EAX, DWORD PTR DS:[EAX+0C] ; EAX = PEB->Ldr\nMOV EAX, DWORD PTR DS:[EAX+1C] ; EAX = PEB->Ldr.InInitializationOrderModuleList.Flink\nMOV EAX, DWORD PTR DS:[EAX+8]  ; EAX = image base of ntdll (LDR_MODULE's BaseAddress)\n</code></pre>\nBased on your question above, it seems like you understand everything through the <pre><code>MOV EAX, DWORD PTR DS:[EAX+1C]</code></pre> instruction. Since <pre><code>ntdll.dll</code></pre> is the first module loaded, it's the first <pre><code>LDR_MODULE</code></pre> entry in <pre><code>InInitializationOrderModuleList</code></pre>. So with <pre><code>EAX</code></pre> pointing to <pre><code>PEB->Ldr.InInitializationOrderModuleList.Flink</code></pre>, <pre><code>[EAX+0]</code></pre> points to the list entry's <pre><code>Flink</code></pre>, <pre><code>[EAX+4]</code></pre> points to the list entry's <pre><code>Blink</code></pre>, and <pre><code>[EAX+8]</code></pre> is the <pre><code>BaseAddress</code></pre> value of the first <pre><code>LDR_MODULE</code></pre> entry (<pre><code>ntdll.dll</code></pre>'s <pre><code>LDR_MODULE</code></pre>).\nThis image from http://blog.csdn.net/programmingring/article/details/11357393 may help:\nWhen <pre><code>EAX</code></pre> is set to <pre><code>PEB->Ldr.InInitializationOrderModuleList.Flink</code></pre>, it's pointing to the orange <pre><code>Flink</code></pre> in the first <pre><code>LDR_MODULE</code></pre> above. It's followed by the <pre><code>Blink</code></pre> at <pre><code>[EAX+4]</code></pre>, and the \"<pre><code>DllBase</code></pre>\" (<pre><code>BaseAddress</code></pre>) at <pre><code>[EAX+8]</code></pre>.\n",
            "votes": "12",
            "user": "Jason Geffner",
            "time": "May 27, 2014 at 16:11",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "Assuming you want to see it in Windbg.\nYou can follow this walk through for each pointer points to successive <pre><code>LDR_DATA_TABLE_ENTRY</code></pre> the output is from <pre><code>calc.exe</code></pre>. \n<pre><code>0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(@$peb+c)+c)\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\calc.exe\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(@$peb+c)+c))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\ntdll.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(@$peb+c)+c)))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\kernel32.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(@$peb+c)+c))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\SHELL32.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(@$peb+c)+c)))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\ADVAPI32.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(poi(@$peb+c)+c))))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\RPCRT4.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(poi(poi(@$peb+c)+c)))))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\Secur32.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(poi(poi(poi(@$peb+c)+c))))))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\GDI32.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(@$peb+c)+c)))))))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\USER32.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(@$peb+c)+c))))))))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\msvcrt.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(@$peb+c)+c)))))))))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\SHLWAPI.dll\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(@$peb+c)+c))))))))))))\n   +0x024 FullDllName : _UNICODE_STRING \"\"\n0:000> dt ntdll!_LDR_DATA_TABLE_ENTRY -y Full poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(poi(@$peb+c)+c)))))))))))))\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\calc.exe\"\n</code></pre>\nan alternate representation of the above method\n<pre><code>lkd> dt nt!_ldr_data_table_entry -y Full @@c++(@$peb->Ldr->InLoadOrderModuleList.Flink)\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\Program Files\\Windows Kits\\8.0\\Debuggers\\x86\\windbg.exe\"\nlkd> dt nt!_ldr_data_table_entry -y Full @@c++(@$peb->Ldr->InLoadOrderModuleList.Flink->Flink)\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\ntdll.dll\"\nlkd> dt nt!_ldr_data_table_entry -y Full @@c++(@$peb->Ldr->InLoadOrderModuleList.Flink->Flink->Flink)\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\kernel32.dll\"\nlkd> dt nt!_ldr_data_table_entry -y Full @@c++(@$peb->Ldr->InLoadOrderModuleList.Flink->Flink->Flink->Flink)\n   +0x024 FullDllName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\ADVAPI32.dll\"\n</code></pre>\n",
            "votes": "4",
            "user": "blabb",
            "time": "May 30, 2014 at 8:05",
            "is_accepted": false,
            "comments": []
        }
    ]
}