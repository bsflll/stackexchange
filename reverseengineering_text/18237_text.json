{
    "title": "Decrypting SQLite Database with key",
    "link": "https://reverseengineering.stackexchange.com/questions/18237/decrypting-sqlite-database-with-key",
    "content": "I have a SQLite database that contains a dictionary (just words and definitions) that can be opened with free but proprietary software. To use with the software, it requires an 'unlock' key, which I have. I'm able to see it in this program, but I'd like to manipulate the data and re-arrange it.\nCurrently, I'm paying freelancers on Fiverr to copy/paste every entry to a text document. Old-School Scraping.\nI can open these documents in a SQL viewer like DBBrowser for SQLite. The entry listings are in plaintext, but the definitions are in BLOBs. I've tried hex(), which didn't work. I thought there was somewhere I could paste my key in to decrypt this, but I can't find that. What should I do here?\n\nI have the database\nI have the key required for unlocking it within the software that reads it\nI have the software that reads it\n\nThis is my first venture into reverse engineering, so I appreciate your help and patience.\n",
    "votes": "2",
    "answers": 1,
    "views": "5k",
    "tags": [
        "encryption",
        "decryption"
    ],
    "user": "Matt Zabojnik",
    "time": "May 11, 2018 at 17:11",
    "comments": [],
    "answers_data": [
        {
            "content": "There exists an official encryption addon for SQLite but from your description it sounds more like the data is simply stored encrypted in the blobs and the application decrypts it internally before displaying its content, however:\n\nwe don’t know the exact encryption algorithm\nwe don’t know how the password you enter is converted into the decryption key\nwe don’t know how the decrypted data is converted to what you see on the screen\n\nTo solve your problem you need to find the answers to these questions (and possibly others I did not think of).  You can try doing it by guessing and trying different algorithms but I doubt you’ll get lucky with just that.\nIf I had to do it, I would probably proceed like this:\n\nDisassemble or debug the binary and identify the SQLite API functions, possibly by looking at references to the database/ tables/column names and/or comparing the compiled code against the SQLite source.\ncheck what is done with the data retrieved from the DB and see if any functions handling it look like decryption functions (e.g. use standard crypto constants or have a particular loop structure).\nsee where the decryption key comes from and try to figure out how it’s derived from the password (optional, since we can just use the final key from the debugger)\nif the structure of the decrypted data is non-obvious, check how it’s parsed and outputted.\n\nP.S. for a more low-tech solution you could try some UI automation solutions (e.g. possibly AutoIt) but this is out of scope on this site.\n",
            "votes": "4",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": false,
            "comments": []
        }
    ]
}