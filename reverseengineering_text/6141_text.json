{
    "title": "Understanding of some assembly lines",
    "link": "https://reverseengineering.stackexchange.com/questions/6141/understanding-of-some-assembly-lines",
    "content": "i have the following assembly lines:\n<pre><code>....\nLEA   EAX, DWORD PTR DS:[0x404212]\nMOV   DWORD PTR SS:[EBP-0x3CC], EAX\nPUSH  DWORD PTR SS:[EBP-0x3CC]\n...\n...\n...\nLEA   EAX, DWORD PTR DS:[0x404213]\nMOV   DWORD PTR SS:[EBP-0x3D0], EAX\nPUSH  DWORD PTR SS:[EBP-0x3D0]\n...\n...\n</code></pre>\nSo, I asked myself how I can that piece of code translate into a higher language like C? Or a pseudo C language?\nBut, for the the two blocks I have the following:\n<pre><code> UNKNOWNTYPE *eax_pointer_1;     //points to 00404212\n UNKNOWNTYPE *eax_pointer_2;     //points to 00404213\n</code></pre>\nIn ollydbg, I see that at the address 00404212 there is the following line :\n<pre><code>ADD BYTE PTR DS:[EAX], DH\n</code></pre>\nand at the address 00404213, there is:\n<pre><code>XOR BYTE PTR DS:[EAX], AL\n</code></pre>\nSo my question would be : Is that a correct transformation? Have you some ideas how I can the instructions at 00404212 and 00404213 make part of my transformation into a pseudo-C language?\n",
    "votes": "3",
    "answers": 2,
    "views": "3k",
    "tags": [
        "assembly"
    ],
    "user": "user3097712",
    "time": "Aug 29, 2014 at 23:58",
    "comments": [
        {
            "user": "Jongware",
            "text": "If you are sure these pointers point to a function (and not data), then your <pre><code>UNKNOWNTYPE *</code></pre> is a function pointer. To \"make them part\" of the entire code, convert the pointed-to instructions to a separate function as well.\n",
            "time": null
        },
        {
            "user": "user3097712",
            "text": "ok, thx for your answer.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "In ollydbg, I see that at the address <pre><code>00404212</code></pre> there is the\n  following line:\n<pre><code>ADD BYTE PTR DS:[EAX], DH\n</code></pre>\nAnd, at the address <pre><code>00404213</code></pre>, there is:\n<pre><code>XOR BYTE PTR DS:[EAX], AL\n</code></pre>\n\nI dont think those are code, rather variables, are they in a code/execute section ?\n",
            "votes": "2",
            "user": "DCoder",
            "time": "Sep 2, 2014 at 7:10",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user3097712",
                    "text": "<span class=\"comment-copy\">No, they are not in a code/execute section. I only jump to that two addressesÂ´ by right-clicking in ollydbg and then \"Go To -&gt; Expression\"</span>",
                    "time": null
                },
                {
                    "user": "Jongware",
                    "text": "<span class=\"comment-copy\">Well, that invalidates my earlier comment. Examine the data at that point to guess the type of the pointer.</span>",
                    "time": null
                },
                {
                    "user": "Abr001am",
                    "text": "<span class=\"comment-copy\">these two lines are data segment where arguments are pointing to, its abslutly useless to translate em into asm instructions !</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "It looks like the address of something (maybe an array element) is being taken and that is being used to set up call frame for later use.  Something very roughly like:\n<pre><code>void f(void){\n  void *x = &someMemory;\n  void *y = &someMemory2;\n\n  g(y,x);\n}\n</code></pre>\ncaveat lector.\n",
            "votes": "1",
            "user": "BitShifter",
            "time": "Sep 3, 2014 at 15:30",
            "is_accepted": false,
            "comments": []
        }
    ]
}