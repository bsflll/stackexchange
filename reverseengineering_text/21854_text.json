{
    "title": "How to get array size of a global variable using IDApython?",
    "link": "https://reverseengineering.stackexchange.com/questions/21854/how-to-get-array-size-of-a-global-variable-using-idapython",
    "content": "I can make an array using MakeArray.\nIs there a function to get the size of the array I've created?\nI've tried GetArrayId + GetLastIndex but it doesn't seem to work.\n",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "idapython",
        "array"
    ],
    "user": "sololevelingreverser",
    "time": "Aug 6, 2019 at 15:37",
    "comments": [
        {
            "user": "Biswapriyo",
            "text": "Can you add a sample C or assembly code that you have tried on?\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "by \"size\" do you mean total byte size or number of elements?\n",
            "time": null
        },
        {
            "user": "sololevelingreverser",
            "text": "@IgorSkochinsky, actually I'm trying to get both.\n",
            "time": null
        },
        {
            "user": "sololevelingreverser",
            "text": "@Biswapriyo. I don't have a sample C or assembly code but you can try something like MakeArray(ea,10) to create an array then use GetArrayID + GetLastIndex.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "An array is an example of a data item. Like all items in IDA (the other item type is instruction), it has a starting address (head) and size. You can retrieve the whole item's size using the function <pre><code>get_item_size()</code></pre> (legacy name <pre><code>ItemSize()</code></pre>).\nTo figure out the number of items in an array, you can divide the whole array's size by the size of one element. But how to know the size of element? For this you need to inspect the flags of the item (attached to the head byte) using <pre><code>get_flags()</code></pre> function. Base item type is encoded in the bits defined by the <pre><code>DT_TYPE</code></pre> bits (top 4 bits of the flags) and takes values such as <pre><code>FF_BYTE</code></pre> (byte), <pre><code>FF_WORD</code></pre> (word), <pre><code>FF_DWORD</code></pre> and so on. But instead of checking the bits manually, you can use the function <pre><code>get_data_elsize()</code></pre> which return the size in bytes from the flags.\nFor more info check the <pre><code>bytes.hpp</code></pre> header in the SDK.\n",
            "votes": "3",
            "user": "Igor Skochinsky",
            "time": "Aug 14, 2019 at 21:26",
            "is_accepted": false,
            "comments": [
                {
                    "user": "sololevelingreverser",
                    "text": "<span class=\"comment-copy\">Thanks @IgorSkochinsky. This was exactly what I did! Almost... s_id = GetVarStrucId(ea) s_size = GetStrucSize(s_id) item_size = idaapi.get_item_size(ea) num_elements = s_size/item_size</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">yes, if your items are sructs you need to get the struct id to determine its size</span>",
                    "time": null
                },
                {
                    "user": "KulaGGin",
                    "text": "<span class=\"comment-copy\">@IgorSkochinsky how to do this for stack variables? For example, I have a stack variable: it's an array of 2 DWORD variables. I don't have effective address for them. I can't find it in the documentation: the functions you provided require the effective address.</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@KulaGGin you can use the struct member ID instead of the ea. you need to get the frame struct and check itâ€™s members.</span>",
                    "time": null
                },
                {
                    "user": "KulaGGin",
                    "text": "<span class=\"comment-copy\">Thanks for such a quick answer. I tried it yesterday and it worked.</span>",
                    "time": null
                }
            ]
        }
    ]
}