{
    "title": "what does the imediate value of the BKPT opcode is being used for?",
    "link": "https://reverseengineering.stackexchange.com/questions/3995/what-does-the-imediate-value-of-the-bkpt-opcode-is-being-used-for",
    "content": "Assembler syntax\nBKPT #\nwhere:\n See Standard assembler syntax fields on page A6-7.\n Specifies an 8-bit value that is stored in the instruction. This value is ignored by the ARM \nhardware, but can be used by a debugger to store additional information about the \nbreakpoint.\nwhat should i pass to this function? where can i see that value when i am debugging? \nBKPT #0  vs BKPT #1  - is their a difference?\n",
    "votes": "1",
    "answers": 2,
    "views": "2k",
    "tags": [
        "disassembly",
        "arm"
    ],
    "user": "Itay Levin",
    "time": "Mar 31, 2014 at 15:25",
    "comments": [
        {
            "user": "Jonathon Reinhart",
            "text": "Most likely, this field exists simply because of the instruction encoding. All ARM instructions are 32-bit (except for thumb mode), so it probably happened that the breakpoint instruction just \"had room\" for an immediate field, so why not include it?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "From http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0552a/BABHCHGB.html:\n\nDebug tools can use this to investigate system state when the\n  instruction at a particular address is reached.\n<pre><code>imm</code></pre> is ignored by the\n  processor. If required, a debugger can use it to store additional\n  information about the breakpoint.\n<pre><code>BKPT #0x3   ; Breakpoint with immediate value set to 0x3 (debugger can\n            ; extract the immediate value by locating it using the PC)\n</code></pre>\n\nBased on what you pasted in your question, you can use any 8-bit value for <pre><code>imm</code></pre> for your ARM processor.\nYou can see the value of <pre><code>imm</code></pre> in your debugger by fetching the instruction at the <pre><code>PC</code></pre> (program counter) that caused the breakpoint and looking to see what value of <pre><code>imm</code></pre> was used in that instruction.\n",
            "votes": "3",
            "user": "Jason Geffner",
            "time": "Mar 31, 2014 at 16:55",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "The immediate value is not checked by the CPU but may be checked by the exception handler, e.g. to distinguish between breakpoints inserted by the debugger from those added by the programmer/compiler. For example, the ARM semihosting interface uses <pre><code>BKPT 0xAB</code></pre> on ARMv7-M and presumably won't work with other immediates.\n",
            "votes": "0",
            "user": "Igor Skochinsky",
            "time": "Sep 18, 2017 at 12:48",
            "is_accepted": false,
            "comments": []
        }
    ]
}