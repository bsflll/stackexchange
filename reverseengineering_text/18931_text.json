{
    "title": "What is the difference between xrefs and stack trace?",
    "link": "https://reverseengineering.stackexchange.com/questions/18931/what-is-the-difference-between-xrefs-and-stack-trace",
    "content": "In IDA, I can see what calls a specific function by looking at the xrefs to it, or by looking 1 step back on stack trace.\nWhat are the differences between them?\nHow does IDA know what the stack trace is? And how does IDA know what the xrefs to a specific function are?\n",
    "votes": "0",
    "answers": 1,
    "views": "95",
    "tags": [
        "ida",
        "functions",
        "stack",
        "callstack",
        "call"
    ],
    "user": "Jonert6544",
    "time": "Jul 30, 2018 at 19:53",
    "comments": [],
    "answers_data": [
        {
            "content": "x-refs is just a static cross-reference in the binary that can be identified during static-analysis. \nSo if you <pre><code>main</code></pre> call <pre><code>funcA</code></pre> you could tell that by looking at x-refs on <pre><code>funcA</code></pre>. But you can't be sure that it will be in fact called during runtime - there might be some conditional jumps that only call <pre><code>funcA</code></pre> in a certain state.\nStacktrace presents the actual calls at a given point so it's dynamic and might change after another instruction execution.\nStack trace information is gathered by looking at <pre><code>EBP</code></pre> on the stack ref. x-refs are done by analyzing the binary.\n",
            "votes": "2",
            "user": "Paweł Łukasik",
            "time": "Jul 30, 2018 at 19:57",
            "is_accepted": false,
            "comments": []
        }
    ]
}