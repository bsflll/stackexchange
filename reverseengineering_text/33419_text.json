{
    "title": "Figure out package to send to cheap Chinese smartwatch to make it vibrate",
    "link": "https://reverseengineering.stackexchange.com/questions/33419/figure-out-package-to-send-to-cheap-chinese-smartwatch-to-make-it-vibrate",
    "content": "I want to connect to a cheap Chinese smartwatch (like this) with a Raspberry Pi, and send it a command to vibrate. How can I reverse engineer the watch (or the app that controls it) to figure out what I need to send to the watch in order to get it to vibrate?\n",
    "votes": "0",
    "answers": 1,
    "views": "63",
    "tags": [
        "bluetooth",
        "smart-devices"
    ],
    "user": "Kovy Jacob",
    "time": "Mar 28 at 12:56",
    "comments": [],
    "answers_data": [
        {
            "content": "The common way to reverse engineer a Bluetooth device is using it and collecting the transmitted Bluetooth data. Most Bluetooth communication is - besides the Bluetooth protection at Bluetooth layer - not encrypted or otherwise protected, therefore capturing the data e.g. within Android allows you to get the raw data.\nOne way is to use an Android device with activated developer options and in there enable \"Bluetooth HCI Snoop log\". If activated the Bluetooth data is written to a log file, which is according to Google on most devices located in <pre><code>data/misc/bluetooth/logs</code></pre> (inside the ZIP file generated by the command <pre><code>adb bugreport filename</code></pre>).\nMy preferred way is a rooted Android device with Android frida-server installed. Usually Frida works best when on the phone an older Android version is installed.\nUsing the Frida script blemon you can then hook into apps and dump all the Bluetooth data it sends/receives in real-time. This allows you to execute functions in the app or the device and directly record the BLE traffic that is related to this function.\n",
            "votes": "2",
            "user": "Robert",
            "time": "Mar 28 at 13:01",
            "is_accepted": false,
            "comments": []
        }
    ]
}