{
    "title": "Unknown CRC calculation",
    "link": "https://reverseengineering.stackexchange.com/questions/15752/unknown-crc-calculation",
    "content": "I am seeking for a CRC calculation on EEPROM content. I try to add options to my car with BOSCH ECU. MCU in this ECU is Tricore TC1793 and EEPROM content seems to be divided into blocks of 128 bytes each.\nWhen I try to change a byte from one block, ECU stop working so I get another ECU from another car and grab some blocks to compare :\n\na Block from my ECU:\n<pre><code>26 13 01 00 89 00 00 00 00 00 00 00 00 00 00 00\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 BD 8E\n</code></pre>\nSame ID (26 13) Block from another ECU:\n<pre><code>26 13 01 00 00 00 00 00 00 00 00 00 00 00 00 00 \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 C1 69\n</code></pre>\nAnother block from my ECU with same data (as number 1) except first 2 bytes: \n<pre><code>6A DF 01 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 A8 E5\n</code></pre>\nAnother block from my ECU:\n<pre><code>A9 68 01 00 1B 09 CB 0D FF 7F 00 80 FF 7F 00 80  \nFF 7F 00 80 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 71 DD\n</code></pre>\n<pre><code>0xA968</code></pre> from the other one ECU:\n<pre><code>A9 68 01 00 FF 7F 00 80 FF 7F 00 80 FF 7F 00 80  \nFF 7F 00 80 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 78 74\n</code></pre>\n\nI think first 2 bytes is an ID and I think the two last bytes are a checksum and I am sure that CRC is calculated depending first two bytes cause with another block with same data but two first bytes different CRC differs.\nI have tried to found some clues with Reveng but not found anything...\nIf someone can help me to found how this checksum is calculated or give me some clues to investigate.\nHere is full data of my ECU (eeprom + mcu flash TC1793).\n",
    "votes": "5",
    "answers": 2,
    "views": "2k",
    "tags": [
        "ida",
        "disassembly",
        "decryption",
        "cryptography"
    ],
    "user": "Yohan Cyber",
    "time": "Jul 17, 2017 at 17:10",
    "comments": [
        {
            "user": "josh",
            "text": "You could buy this here: usprog.ru/en/component/jshopping/for-repair/â€¦. Legal?\n",
            "time": null
        },
        {
            "user": "Floyd",
            "text": "Who has a CRC algro for this TriCore 1793? that Russian Webpage requires you to buy the hardware to use the software for the CheckSum. Please post website with CRC software for the Checksum calculation. Thanks\n",
            "time": null
        },
        {
            "user": "delenda alex",
            "text": "What algorithm is used to calculate Checksum Or if any of the members can give us a used algorithm\n",
            "time": null
        },
        {
            "user": "delenda alex",
            "text": "A9 68 01 00 FF 7F 00 80 FF 7F 00 80 FF 7F 00 80 FF 7F 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 78 74 initial:68A9 is crc poly 1021, the result is 7478. What algorithm is used to calculate Checksum Or if any of the members can give us a used algorithm\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "MED17 functional description docs will help with overview of the EEP handler, but not the checksum routine.\nUsually it is best to go through the front door with coding tools rather than try to change EEPROM (actually dataflash on most Tricore) directly.\nGiven time I could probably locate the checksum routines and reverse them, but it is not a small job and fixing those may still leave you with other dependencies or some TPROT EEPROM contents that give you trouble that are difficult to fix.\nDepends how deep you want to go, I think it is a time question beyond a simple CRC formula.\n",
            "votes": "4",
            "user": "John Banks",
            "time": "Jul 17, 2017 at 13:32",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "<pre><code>A9 68 01 00 FF 7F 00 80 FF 7F 00 80 FF 7F 00 80  \nFF 7F 00 80 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  \n00 00 00 00 00 00 00 00 00 00 00 00 00 00 78 74\n</code></pre>\nis crc poly 1021, the result is <pre><code>7478</code></pre>.\n",
            "votes": "3",
            "user": "MarianD",
            "time": "Mar 7, 2022 at 0:29",
            "is_accepted": false,
            "comments": [
                {
                    "user": "not2qubit",
                    "text": "<span class=\"comment-copy\">FYI. <a href=\"https://srecord.sourceforge.net/crc16-ccitt.html\" rel=\"nofollow noreferrer\">CRC16-CCITT</a> and <a href=\"https://en.wikipedia.org/wiki/Cyclic_redundancy_check\" rel=\"nofollow noreferrer\">CRC</a></span>",
                    "time": null
                }
            ]
        }
    ]
}