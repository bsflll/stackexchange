{
    "title": "Can I decompile a file if I have a compiler? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/22511/can-i-decompile-a-file-if-i-have-a-compiler",
    "content": "Closed. This question needs to be more focused. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Update the question so it focuses on one problem only by editing this post.\n\n\nClosed 5 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nIs it possible to reverse the compiled code using a compiler?\nI have a compiler in the form of exe and using it I can compile the file. But there is no possible instruction I got to decompile a file.\nI want to know what are the possibility of getting a decompiled source code from the compiled version?\nAre there any methodology or tools that would help in making it possible?\nPlease share your insights.\n",
    "votes": "1",
    "answers": 2,
    "views": "493",
    "tags": [
        "decompilation",
        "tools",
        "decompiler",
        "pwntools"
    ],
    "user": "Jaffer Wilson",
    "time": "5 years ago",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "if you can add details about  the specific compiler you have, a concrete example may be easier to answer than something abstract.\n",
            "time": null
        },
        {
            "user": "Jaffer Wilson",
            "text": "@IgorSkochinsky If I add the specification of the compiler, I bet no one will even care to answer in abstract ways what they are trying to answer.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "No. In most cases, you cannot obtain the actual source code just because you have the compiler available.\nHowever, it depends on the language. If the source code was written in <pre><code>.NET</code></pre>, for example, a decompiler such as <pre><code>dnSpy</code></pre> or <pre><code>ILSpy</code></pre> can produce relatively accurate source code. However, if it was written in <pre><code>C/C++</code></pre>, for instance, then it will be harder to decompile and the decompiled result will not be as close to the original source code. Some decompilers that work for <pre><code>C/C++</code></pre> are <pre><code>retdec</code></pre> and <pre><code>Ghidra</code></pre>.\n",
            "votes": "3",
            "user": "learnerX",
            "time": "Nov 11, 2019 at 22:26",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Jaffer Wilson",
                    "text": "<span class=\"comment-copy\">Is there nothing we can do in sequence that would give a clue of what is happening and what must be done?</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@JafferWilson check <a href=\"https://reverseengineering.stackexchange.com/a/14125/60\">this</a> for some options</span>",
                    "time": null
                },
                {
                    "user": "Jaffer Wilson",
                    "text": "<span class=\"comment-copy\">@IgorSkochinsky Thank you for sharing. I guess this is one of the wonderful ideas. I will upvote for that... :)</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "Usually, it's not possible. \nYou should use external tools like ghidra or IDAs decompiler - hex-rays.\n",
            "votes": "0",
            "user": "macro_controller",
            "time": "Nov 11, 2019 at 16:38",
            "is_accepted": false,
            "comments": []
        }
    ]
}