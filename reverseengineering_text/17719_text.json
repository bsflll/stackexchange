{
    "title": "IDA SDK: Event when database created / opened?",
    "link": "https://reverseengineering.stackexchange.com/questions/17719/ida-sdk-event-when-database-created-opened",
    "content": "I'm writing a plugin which is available at all times (<pre><code>PLUGIN_FIX</code></pre> flag).\nHowever, I also need to be notified when a database is created or opened, as if I would handle the moment when <pre><code>init()</code></pre> is called on plugins without the <pre><code>PLUGIN_FIX</code></pre> flag.\nI looked into the IDA 7.0 SDK, but I only found <pre><code>idb_event::closebase</code></pre>, and I need the exact opposite. <pre><code>idb_event::savebase</code></pre> also doesn't really match.\nI logged all events in the SDK ever raised by IDA (causing IDA to run slower than my grandma â˜º), and only dug out <pre><code>idb_event::kernel_config_loaded</code></pre> which happens around the moment I want to catch. However, it also triggers at other times (like when simply clicking the \"Open\" button), so it's not a match too.\nAm I missing something here? Such an event seems quite important to me, so I'm a bit surprised there's nothing \"obvious\" for it.\n",
    "votes": "1",
    "answers": 1,
    "views": "128",
    "tags": [
        "ida",
        "ida-plugin",
        "idapro-sdk"
    ],
    "user": "Ray",
    "time": "Mar 17, 2018 at 18:02",
    "comments": [],
    "answers_data": [
        {
            "content": "After looking around a bit more, I noticed that if I handle the following two processor module (<pre><code>HT_IDP</code></pre>) events, I can pretty much catch the moment I wanted:\n\n<pre><code>processor_t::event_t::ev_newfile</code></pre> when a new database is being created (like from a PE file)\n<pre><code>processor_t::event_t::ev_oldfile</code></pre> when an existing database has been loaded (from a .idb file)\n",
            "votes": "2",
            "user": "Ray",
            "time": "Mar 18, 2018 at 11:41",
            "is_accepted": true,
            "comments": []
        }
    ]
}