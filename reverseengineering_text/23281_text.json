{
    "title": "Debugging UEFI with real hardware?",
    "link": "https://reverseengineering.stackexchange.com/questions/23281/debugging-uefi-with-real-hardware",
    "content": "New to this so here we go.  I want to reverse engineer a x86-64 desktop UEFI to add hardware support.\nSince I have the actual hardware available, are there debug interfaces that run via actual hardware & would produce a better output than say...working through HexRays or OllyDbg?\nAlong similar lines, are there debuggers than can be fed useful information about the system being emulated? In the case of a UEFI, I'm thinking chipset information, where graphics are coming from, connected components, types of ports, etc.\nThanks.\n",
    "votes": "0",
    "answers": 1,
    "views": "551",
    "tags": [
        "debugging",
        "uefi"
    ],
    "user": "Rook",
    "time": "Feb 18, 2020 at 3:20",
    "comments": [],
    "answers_data": [
        {
            "content": "The ideal option is to use a hardware debugger like Intel XDP or Arium, however they are very expensive, available only under NDA and generally require special development boards with populated debug port.\nIn the recent platforms, there is a lightweight option of DCI (Direct Connect Interface) available via the USB3 port. In theory it again requires (a little more affordable) Intel hardware like Closed Chasssis Adapter but some people figured out how to enable it on consumer hardware using a regular USB3 cable. Once enabled, you can debug the hardware on the lowest level using Intel System Studio.\nHardware debug alternatives:\n\nthe SerialICE project allows you to emulate firmware in QEMU and forward hardware accesses to the real hardware via serial port to a small stub running on the target machine.\nthe <pre><code>SourceLevelDebugPkg</code></pre> module from EDK2 can, despite the name, be used to debug even firmware without source code info. Follow the directions here.\n",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Feb 18, 2020 at 8:55",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Sparkette",
                    "text": "<span class=\"comment-copy\">Why is it under NDA?</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@flarn2006 Iâ€™m not sure but Intel loves NDAs</span>",
                    "time": null
                }
            ]
        }
    ]
}