{
    "title": "/proc/self/maps equivalent on windows",
    "link": "https://reverseengineering.stackexchange.com/questions/8297/proc-self-maps-equivalent-on-windows",
    "content": "I see that inspecting <pre><code>/proc/self/maps</code></pre> on Linux machines lets me see the pages that have been mapped in. As a result I can write a program to read and parse the pages it has mapped in.\nHow could one go about doing something similar for Windows? Are there any APIs for the same? If not, do you have any suggestions on how this could be done? Do you have any references you could link me to?\n",
    "votes": "4",
    "answers": 1,
    "views": "2k",
    "tags": [
        "windows",
        "linux",
        "virtual-memory",
        "pages"
    ],
    "user": null,
    "time": "Feb 20, 2015 at 2:02",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "vmmap.exe from sysinternal tools does this. I don't know which APIs it uses, however.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "VirtualQueryEx() fills a MEMORY_BASIC_INFORMATION record with information about a contiguous range of pages containing the queried address. This can be used to walk the address space of a process, by starting with 0 and then using mbi.BaseAddress + mbi.RegionSize as the next address to query and so on. GetMappedFileName() can give you the name of mapped binaries (mbi.Type == MEM_IMAGE) and mapped files (MEM_MAPPED).\nAddress overflow is an issue when a 32-bit process runs queries on a 64-bit process; it seems that VirtualQueryEx() fails to fail in that situation and instead saturates the field in question (by setting it to 0xFFFFFFFF). However, that is not documented and hence not reliable. Alternative tests are <pre><code>mbi.RegionSize > DWORD_PTR(-1) - mbi.BaseAddress</code></pre>, or <pre><code>next_va <= curr_va</code></pre> when iterating.\nResults for 32-bit process querying 64-bit notepad.exe:\n<pre><code>         00000000        10000 -\n00010000 00010000        10000 c m rw--  rw-- \n...\nFF5F0000 FF5F0000         1000 c i rwxc  r---  notepad.exe\nFF5F0000 FF5F1000         B000 c i rwxc  r-x- \nFF5F0000 FF5FC000         4000 c i rwxc  r--- \nFF5F0000 FF600000         2000 c i rwxc  rw-- \nFF5F0000 FF602000         1000 c i rwxc  rw-c \nFF5F0000 FF603000        22000 c i rwxc  r--- \n         FF625000     FFFFFFFF -\noverflow -> aborting\n</code></pre>\nDito for a 64-bit process:\n<pre><code>              0000000000000        10000 -\n0000000010000 0000000010000        10000 c m rw--  rw-- \n...\n00000FF5F0000 00000FF5F0000         1000 c i rwxc  r---  notepad.exe\n00000FF5F0000 00000FF5F1000         B000 c i rwxc  r-x- \n00000FF5F0000 00000FF5FC000         4000 c i rwxc  r--- \n00000FF5F0000 00000FF600000         2000 c i rwxc  rw-- \n00000FF5F0000 00000FF602000         1000 c i rwxc  rw-c \n00000FF5F0000 00000FF603000        22000 c i rwxc  r--- \n              00000FF625000  7FDFB2CB000 -\n007FEFA8F0000 007FEFA8F0000         1000 c i rwxc  r---  winspool.drv\n...\n007FFFFFE0000 007FFFFFE0000        10000 r   r---  !--- \n</code></pre>\n",
            "votes": "3",
            "user": "DarthGizka",
            "time": "Feb 20, 2015 at 8:26",
            "is_accepted": true,
            "comments": []
        }
    ]
}