{
    "title": "How does IDA create COMMON, ABS and EXTERN segments of ELF-file?",
    "link": "https://reverseengineering.stackexchange.com/questions/17608/how-does-ida-create-common-abs-and-extern-segments-of-elf-file",
    "content": "Some symbols (from symbol table) in ELF-file belong to special sections (COMMON, ABS, UNDEF).\nIDA creates virtual sections for this symbols.\nSubject: What is the rule (or set of rules) which IDA use to create these special sections (start address, size, alignment)?\n",
    "votes": "0",
    "answers": 1,
    "views": "490",
    "tags": [
        "ida",
        "elf"
    ],
    "user": "prusanov",
    "time": "Mar 5, 2018 at 11:01",
    "comments": [],
    "answers_data": [
        {
            "content": "According to IDA's ELF-loader and some tests.\nThe order of sections in REL-file:\n\nCOMMON \nABS\nEXTERN\n\nThe order of sections in EXEC-file (there is no COMMON section):\n\nEXTERN \nABS\n\nThe rules of section creation are:\n\nTake the adress after last real section\nCalculate the size of each virtual section = <pre><code>number_of_symbols * 4</code></pre>\nCreate all needed virtual sections according to the right order\nFill all virtual sections with the corresponding symbols from symtab\nSet End-address for each virtual section according to the real number of bytes (based on number of symbols in the section)\n",
            "votes": "1",
            "user": "prusanov",
            "time": "May 18, 2018 at 9:11",
            "is_accepted": true,
            "comments": []
        }
    ]
}