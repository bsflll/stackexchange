{
    "title": "How to breakpoint atached process with ida when move on",
    "link": "https://reverseengineering.stackexchange.com/questions/18926/how-to-breakpoint-atached-process-with-ida-when-move-on",
    "content": "In IDA pro, there is an option to attach to a process using the WinDbg backend.\nWhen I want is to see the process' control flow when the IDA attaches to it.\nThe only way (that I know) to see the process' flow is to put a breakpoint in a place that I think the process will hit and single-step from there (F8).\nIf I don't know a place in the process where I can put a breakpoint, then I can't single-step.\nHow to see the process flow in assembly? hot to breakPoint and debug process that ida attached it?\nIf I click on suspend(there is not an option named pause) I see that process breaks inside of <pre><code>ntdll rtUserThreadStart</code></pre>. From there, I can't see where the process was before I clicked suspend.\n",
    "votes": "0",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "assembly",
        "debugging",
        "windbg",
        "breakpoint"
    ],
    "user": "pointers",
    "time": "Jul 30, 2018 at 19:52",
    "comments": [
        {
            "user": "user202729",
            "text": "I don't understand \"If I click on pause I see that assembly enter to BreakPoint function and that not the original fllow\". The command it pauses on is exactly the one that one of the thread was executing.\n",
            "time": null
        },
        {
            "user": "pointers",
            "text": "Sorry, I can't click puase , only suspend and there the process enter to ntdll  rtUserThreadStart, there I can't see where the process was before I click suspend\n",
            "time": null
        },
        {
            "user": "user202729",
            "text": "reverseengineering.stackexchange.com/questions/14649/…\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "posible dupe: reverseengineering.stackexchange.com/questions/3987/…\n",
            "time": null
        },
        {
            "user": "pointers",
            "text": "@IgorSkochinsky that diffrent , When I click on suspend I get the assembly of <pre><code>ntdll rtUserThreadStart</code></pre> , and I looking for the last place in assembly before the assembly jump to <pre><code>ntdll rtUserThreadStart</code></pre>\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "This happens due to way the Win32 debugging API implements process attaching. A new thread with <pre><code>DbgBreakPoint</code></pre> call is injected by the OS to ensure that the process gets stopped, since it could be in unknown state otherwise, and this thread is what you see. \nWhat you can do is inspect the thread list, switch to the main one (usually first in the list), set some breakpoints up in the call stack and resume the process - the debugbreak thread will exit and your process should stop on the breakpoint so you can debug it.\nYou can also try this approach by blabb.\n",
            "votes": "3",
            "user": "Igor Skochinsky",
            "time": "Jul 30, 2018 at 13:51",
            "is_accepted": false,
            "comments": []
        }
    ]
}