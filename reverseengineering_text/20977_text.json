{
    "title": "IDA PRO Tracing stopps",
    "link": "https://reverseengineering.stackexchange.com/questions/20977/ida-pro-tracing-stopps",
    "content": "I need to get data from the window of the external program. This data is dynamic and changes each time the additional window is restarted. I have already found an offset, but I need to find the register of ecx that comes into my function from another function. I try to trace which function calls the function I need, it usually worked for other programs. But now when i trace the functions the trace lagging and stops. I set a breakpoint when creating the window to see all the actions that occur. I have an idea that the tracing stops, because in this program a lot of things work through additional Qt5 libraries as example Qt5Core.dll.\n",
    "votes": "0",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ida",
        "disassembly",
        "debugging",
        "tracing"
    ],
    "user": "ZORAX ZORAX",
    "time": "Mar 28, 2019 at 1:57",
    "comments": [],
    "answers_data": [
        {
            "content": "By default tracing is limited to reduce its overhead: it stops once it goes to a location not in the current database (external modules, runtime-allocated memory etc.), as well as functions marked as library code. You can change this behavior in tracing options (disable the “trace over” checkboxes). \nNote that in some cases IDA may be unable to trace the execution even if you ask it to trace everything. For example, it is unable to trace any kernel code, as well as user code that is called by the kernel indirectly (e.g. window procedures, exception handlers and so on)\n",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Mar 28, 2019 at 10:32",
            "is_accepted": false,
            "comments": [
                {
                    "user": "ZORAX ZORAX",
                    "text": "<span class=\"comment-copy\">I turned off \"trace over debugger segments\" and \"trace over library functions\" Now the program does not stop, and trace works. But in that case, I only get instructions from my breakpoint. I have text in the program window that changes, and I need to find the address to get its value each time the window is restarted.</span>",
                    "time": null
                },
                {
                    "user": "ZORAX ZORAX",
                    "text": "<span class=\"comment-copy\">Previously, traces helped me, thanks to a search for instructions, I entered the address (which I took through cheat engine) and was able to figure out how it is generated. But how to be now? I found 3 functions that are called one after another, but I need a register from another function, because its value has already been obtained by the previous function and put on the stack. How can I track this?</span>",
                    "time": null
                }
            ]
        }
    ]
}