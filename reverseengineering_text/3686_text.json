{
    "title": "Why I can not find all the functions using this IDC script?",
    "link": "https://reverseengineering.stackexchange.com/questions/3686/why-i-can-not-find-all-the-functions-using-this-idc-script",
    "content": "On Linux 32 bit, I use IDA Pro + IDC script to dump all the functions. Here is part of the script:\n<pre><code>addr = 0;\nfor (addr = NextFunction(addr); addr != BADADDR; addr = NextFunction(addr)) {\n    name = Name(addr);\n    end = GetFunctionAttr(addr, FUNCATTR_END);\n    Message(\"%s:\n\", name);\n\n    dumpFunction(name, addr, end);\n}\n</code></pre>\nCertain functions, like <pre><code>close_stdin</code></pre> defined in GNU coreutils static library, can not be found in this script but I can find those functions in <pre><code>File->Produce File->Create ASM File...</code></pre>\nIs there something wrong with my script? Can I use it to find out all the functions?\n",
    "votes": "2",
    "answers": 1,
    "views": "3k",
    "tags": [
        "ida",
        "idapython",
        "ida-plugin"
    ],
    "user": "lllllllllllll",
    "time": "Jul 21, 2016 at 13:15",
    "comments": [],
    "answers_data": [
        {
            "content": "Your script is OK. IDA possibly doesn't recognize your function as a function during auto-analysis and that's a possible problem.\nIf you will go to the address of this function in IDA pro, press P in disassembly view on this address and rerun the script you'll possibly have your function dumped.\nThere is a very incorrect solution for this problem (incorrect means that it is not always provide good/correct results).\nIf you will pass on any non-function area and create functions automatically with the script below everything that was not defined as function before will be dumped with your script, but I'm not sure for correctness of these results. \n<pre><code>#I didn't check this code, run on your own risk, \n#use carefully, beware errors\n\nimport idaapi\nimport idc\n\nsegm = idaapi.get_segm_by_name(\".text\")\nstart = segm.startEA\nend = segm.endEA\n\nwhile start < end:\n\n  start = idaapi.find_not_func(start, 1)\n  print \"Attempt to create function at\", hex(start)\n  idc.MakeFunction(start)\n\n  start += 1 # for a case of any error \n</code></pre>\n",
            "votes": "4",
            "user": "w s",
            "time": "Feb 16, 2014 at 6:41",
            "is_accepted": true,
            "comments": []
        }
    ]
}