{
    "title": "Changing parameter of function call in ELF executable",
    "link": "https://reverseengineering.stackexchange.com/questions/2574/changing-parameter-of-function-call-in-elf-executable",
    "content": "I want to alter a ELF executable function call and replace one of it's parameters.\nThe executable calls <pre><code>dlopen()</code></pre> function and passes <pre><code>RTLD_NOW</code></pre> as the flag parameter.\nI want to change it to <pre><code>RTLD_LAZY</code></pre>.\nWhat's the easiest way to detect the exact place where this call is done, and replacing the parameter.\nI have to do it on production environment, so I only have GNU toolchain, gcc, gdb, etc.\n",
    "votes": "4",
    "answers": 1,
    "views": "878",
    "tags": [
        "linux",
        "elf"
    ],
    "user": "Mellowcandle",
    "time": "Aug 3, 2013 at 7:29",
    "comments": [
        {
            "user": "PSS",
            "text": "Are you talking about permanently patching the executable or modifying at run time?\n",
            "time": null
        },
        {
            "user": "Mellowcandle",
            "text": "Both. At runtime to test it. And then persist it.\n",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "Theoretically <pre><code>LD_PRELOAD</code></pre> would be your friend, but given that <pre><code>dlopen</code></pre> is implemented within the loader, it's possible that this approach would fail.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "The easiest way to do this is with gdb. Put a breakpoint on the <pre><code>dlopen</code></pre> function, and change the parameters (likely passed on the stack). <pre><code>RTLD_NOW</code></pre> is defined as 2. Simply change it by 1 (<pre><code>RTLD_LAZY</code></pre>).\nTo sum up, in <pre><code>gdb</code></pre>\n<pre><code>breakpoint dlopen\nrun\nset stack_memory_address = 1\ncontinue\n</code></pre>\nWhere <pre><code>stack_memory_address</code></pre> is the address of your mode parameter.\n",
            "votes": "2",
            "user": "0xC0000022L",
            "time": "Aug 4, 2013 at 19:26",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Mellowcandle",
                    "text": "<span class=\"comment-copy\">How do I save it, is it possible from gdb ?</span>",
                    "time": null
                },
                {
                    "user": "jvoisin",
                    "text": "<span class=\"comment-copy\">You can use an hex-editor, seek to the offset that you broke on in GDB, and change the 2 in a 1.</span>",
                    "time": null
                }
            ]
        }
    ]
}