{
    "title": "radare2 - radare2 doesn't display string value",
    "link": "https://reverseengineering.stackexchange.com/questions/25744/radare2-radare2-doesnt-display-string-value",
    "content": "I have some rare cases with radare2.\nwhen I try to display all string using \"iz\" it does the job.\n\nbut when I do \"pdf\" or \"pd\" I can't see actual value of string:\n\nI see int puts(const char *s) instead of \"incorrect password\" or \"Access granted!\"\n",
    "votes": "1",
    "answers": 1,
    "views": "469",
    "tags": [
        "radare2"
    ],
    "user": "nickmaroo",
    "time": "Aug 25, 2020 at 18:07",
    "comments": [],
    "answers_data": [
        {
            "content": "This is not a bug in radare2.\nThe comment that you see in red is merely the imported function prototype. In both cases seen in the picture, the parameter to <pre><code>puts</code></pre> is pushed through <pre><code>eax</code></pre> whereas it is loaded from a memory location based on <pre><code>ebx</code></pre>. radare2 does not emulate the code [unless told], so it cannot display the actual string being pointed.\n",
            "votes": "1",
            "user": "Eli",
            "time": "Sep 7, 2020 at 22:32",
            "is_accepted": false,
            "comments": [
                {
                    "user": "nickmaroo",
                    "text": "<span class=\"comment-copy\">Thanks for your answer. can you tell me how can I force radare2 to display actual string?</span>",
                    "time": null
                },
                {
                    "user": "Eli",
                    "text": "<span class=\"comment-copy\">You need to use ESIL emulation for that. Load the binary into radare2 and analyze with <code>aa</code> (or <code>aaa</code> if binary is not too complex). Then disassemble the function (e.g. <code>main</code>) while setting <code>emu.str</code> temporarily: <code>pdf @e:emu.str=true @ main</code></span>",
                    "time": null
                }
            ]
        }
    ]
}