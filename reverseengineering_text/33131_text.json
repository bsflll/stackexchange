{
    "title": "C# reverse engineering bypass obfuscation",
    "link": "https://reverseengineering.stackexchange.com/questions/33131/c-reverse-engineering-bypass-obfuscation",
    "content": "I have to extract a flag from a test.exe file. The respective flag is run as an argument for the test.exe file => \"test.exe FlagName\" and in this way I will reach the next flag.\nI managed to pass the obfuscation and reached the main() file.\nusing System;\nusing System.Text;\n// Token: 0x0200000B RID: 11\ninternal class Class5\n{\n<pre><code>// Token: 0x06000034 RID: 52 RVA: 0x0000339C File Offset: 0x0000159C\n\nprivate static void Main(string[] args)\n\n{\n\n    string text = \"BXQMRxx7GDwXHgAAF2QLCzMQNWUIaAgABx8yERMBZlI=\";\n\n    string text2 = \"Q0BwVHVyZVRoZUZsQGc=\";\n\n    if (args.Length < 1)\n\n    {\n\n        return;\n\n    }\n\n    if (args.Length > 1)\n\n    {\n\n        Console.WriteLine(Encoding.UTF8.GetString(Convert.FromBase64String(\"VHJ5IGFnYWluLCB0aGlzIGlzIG5vdCBjb3JyZWN0Lg==\")));\n\n        return;\n\n    }\n\n    if (!Class5.smethod_0(Convert.ToBase64String(Encoding.UTF8.GetBytes(args[0])), text2).Equals(text))\n\n    {\n\n        Console.WriteLine(Encoding.UTF8.GetString(Convert.FromBase64String(\"VHJ5IGFnYWluLCB0aGlzIGlzIG5vdCBjb3JyZWN0Lg==\")));\n\n        return;\n\n    }\n\n    Console.WriteLine(Encoding.UTF8.GetString(Convert.FromBase64String(\"Q29uZ3JhdHVsYXRpb25zLCB5b3UgaGF2ZSBmb3VuZCB0aGUgcmlnaHQgZmxhZy4=\")));\n\n}\n\n\n// Token: 0x06000035 RID: 53 RVA: 0x0000344C File Offset: 0x0000164C\npublic static string smethod_0(string string_0, string string_1)\n{\n    byte[] bytes = Encoding.UTF8.GetBytes(string_0);\n    byte[] array = new byte[bytes.Length];\n    for (int i = 0; i < bytes.Length; i++)\n    {\n        array[i] = (byte)((char)bytes[i] ^ string_1[i % string_1.Length]);\n    }\n    return Convert.ToBase64String(array);\n}\n\n// Token: 0x06000036 RID: 54 RVA: 0x00003498 File Offset: 0x00001698\npublic static string smethod_1(string string_0, string string_1)\n{\n    byte[] array = Convert.FromBase64String(string_0);\n    byte[] array2 = new byte[array.Length];\n    for (int i = 0; i < array.Length; i++)\n    {\n        array2[i] = (byte)((char)array[i] ^ string_1[i % string_1.Length]);\n    }\n    return Encoding.UTF8.GetString(array2);\n}\n</code></pre>\n}\nFrom what I understand, my flag, the argument with which the script must be run is string text = \"BXQMRxx7GDwXHgAAF2QLCzMQNWUIaAgABx8yERMBZlI=\";\nBut when I run the file with the decoded base64 value(t\fG{<��d\u000b\u000b3\u00105eh�2\u0013fR) of BXQMRxx7GDwXHgAAF2QLCzMQNWUIaAgABx8yERMBZlI= as an argument, it does not take it into account.\nWith what argument should the file be run?\n",
    "votes": "0",
    "answers": 1,
    "views": "135",
    "tags": [
        "assembly",
        "decompilation",
        "c#"
    ],
    "user": "RandomUser",
    "time": "Jul 28, 2024 at 22:12",
    "comments": [],
    "answers_data": [
        {
            "content": "Have you pay attention to code <pre><code>smethod_1</code></pre> ?\n<pre><code>Console.WriteLine(smethod_1(\"BXQMRxx7GDwXHgAAF2QLCzMQNWUIaAgABx8yERMBZlI=\",\"Q0BwVHVyZVRoZUZsQGc=\"));\n</code></pre>\nTDN0J3NEMHRoM1QxbWVXYXJwQWdhIW4=\n<pre><code>echo TDN0J3NEMHRoM1QxbWVXYXJwQWdhIW4= | base64 -d\nL3t'sD0th3T1meWarpAga!\n</code></pre>\n",
            "votes": "0",
            "user": "Igor Matyuh",
            "time": "Jul 29, 2024 at 18:26",
            "is_accepted": false,
            "comments": [
                {
                    "user": "RandomUser",
                    "text": "<span class=\"comment-copy\">Thank you very much for your help.  Could you please tell me why you used method_1? From what I understood from the code sequence, I should have used method_0.      if (!Class5.smethod_0(Convert.ToBase64String(Encoding.UTF8.GetBytes(args[0])), text2).Equals(text))    I am at the beginning on this field and your answer would help me. Many thanks :D</span>",
                    "time": null
                },
                {
                    "user": "Igor Matyuh",
                    "text": "<span class=\"comment-copy\">It just seemed to me base64 is too easy for ctf challenge, so I decided to try all found code.</span>",
                    "time": null
                }
            ]
        }
    ]
}