{
    "title": "How to get address where MakeFunction() failed in IDA Pro",
    "link": "https://reverseengineering.stackexchange.com/questions/13884/how-to-get-address-where-makefunction-failed-in-ida-pro",
    "content": "I am analysing obfuscated code which contains code paths leading to dummy instructions. These dummy instructions prevent IDA from creating functions. However, I need these functions to do a function matching with Bindiff.\nWhile I was patching these functions manually, the output of the \"Make Function\" feature (by pressing \"p\") contained the address where it encountered a problem. This information was very helpful to pinpoint the next dummy instruction.\nTo speed up this process I started to write a Python script. I managed to identify the start addresses of functions containing dummy instructions. However, unlike in the IDA Pro UI the API function MakeFunction() only returns true or false to indicate a (un)successful creation.\nI tried to get the same address as reported in the output window by other means like \"Jump to next unexplored\", but no luck. The only other way I found is to use the \"Jump to Problem\" option which again I only can access in the UI.\nIs there a way to get the address where MakeFunction() failed in Python, just like in the UI?\n",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ida",
        "idapython",
        "deobfuscation"
    ],
    "user": "nebu",
    "time": "Nov 9, 2016 at 10:59",
    "comments": [],
    "answers_data": [
        {
            "content": "Solution:\n<pre><code>find_func_bounds()</code></pre> does the trick (see SDK documentation). That's how it works:\n<pre><code>pfn = func_t()\nfind_func_bounds(ea, pfn, FIND_FUNC_NORMAL)\npfn.endEA\n</code></pre>\nIf the return value of <pre><code>find_func_bounds()</code></pre> is <pre><code>FIND_FUNC_UNDEF</code></pre> (0), <pre><code>pfn.endEA</code></pre> contains the address where it encountered unexplored bytes.\n",
            "votes": "4",
            "user": "Igor Skochinsky",
            "time": "Nov 9, 2016 at 13:48",
            "is_accepted": true,
            "comments": []
        }
    ]
}