{
    "title": "Need help to understand this assembly for fibonacci seq",
    "link": "https://reverseengineering.stackexchange.com/questions/25820/need-help-to-understand-this-assembly-for-fibonacci-seq",
    "content": "I understand the assembly properly. I am just confused about variable 'b' and 'c'. It looks like b is stored at 12(%ebp). I conclude this from <pre><code>cmp 12(%ebp), %eax</code></pre>. If you look at func_8048516, it is adding -0x4(%ebp) which is 'i' and 12(%ebp) which is b. It should translate into <pre><code>a=b+i</code></pre> in the source code but it's <pre><code>a=c+i</code></pre>. Can anyone explain this?\n",
    "votes": "0",
    "answers": 1,
    "views": "72",
    "tags": [
        "assembly"
    ],
    "user": "Neon_lights",
    "time": "Sep 6, 2020 at 2:04",
    "comments": [
        {
            "user": "macro_controller",
            "text": "What created the C/decompiled code? Are you sure that this is the result of the compilation?\n",
            "time": null
        },
        {
            "user": "Neon_lights",
            "text": "@macro-controller this is a problem from picoCTF 2013. There might be a case of a small typo in the assembly from their side.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "compiling this code in godbolt.org the c code assembles to mov 16(%ebp),%edx\nwhich is variable c not b as in your screenshot\n",
            "votes": "1",
            "user": "blabb",
            "time": "Sep 7, 2020 at 17:08",
            "is_accepted": true,
            "comments": []
        }
    ]
}