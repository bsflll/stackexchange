{
    "title": "Recognize this encoding (in a serialization context)?",
    "link": "https://reverseengineering.stackexchange.com/questions/14112/recognize-this-encoding-in-a-serialization-context",
    "content": "I am currently trying to reverse engineer a proprietary serialization format. In some of the sections the encoding is unknown to me. What I was able to figure out:\n\n1 byte 0b00?????? \"6bit signed int\" (0x00 = 0, 0x3F = 63, 0x40 = -64, 0x7F = -1)\n2 byte 0xC? 0x?? \"12 bit signed int\" (0xC0 0x40 = 64, 0xC7 0xFF = 2047, 0xC8 0x00 = -2048, 0xCF 0xBF = -65)\n3 byte 0xD? 0x?? 0x?? \"20bit signed int\"\n4 byte 0xE? 0x?? 0x?? 0x?? \"28bit signed int\"\n\nEverything big endian, btw.\n\nStrings seem to be 0xF3 ... 0x00\n\nDoes somebody know/recognize this encoding?\n",
    "votes": "3",
    "answers": 0,
    "views": "139",
    "tags": [
        "encodings"
    ],
    "user": "Manuel Kasten",
    "time": "Dec 4, 2016 at 17:20",
    "comments": [
        {
            "user": "douggard",
            "text": "LEB128 is a weird variable length format that uses high bits to signal if you should use the next byte or terminate. Posting the language can be helpful, as some standard encodings are used in different languages.\n",
            "time": null
        },
        {
            "user": "Manuel Kasten",
            "text": "@douggard Well, it's not LEB128. Even your description doesn't match my description above.\n",
            "time": null
        },
        {
            "user": "douggard",
            "text": "Sorry, your description wasn't very clear.\n",
            "time": null
        }
    ],
    "answers_data": []
}