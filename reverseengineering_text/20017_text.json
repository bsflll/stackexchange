{
    "title": "Executing MIPS binaries on Ubuntu Linux",
    "link": "https://reverseengineering.stackexchange.com/questions/20017/executing-mips-binaries-on-ubuntu-linux",
    "content": "I have a 32-bit MIPS binary and I'm trying to execute it on Ubuntu 64-bit.\nfile command for the binary shows:\n<pre><code>bin: ELF 32-bit MSB  executable, MIPS, MIPS32 rel2 version 1 (SYSV), dynamically linked (uses shared libs), stripped\n</code></pre>\nIf I use qemu-mips to execute it, I get the following error:\n<pre><code>/lib/ld-musl-mips-sf.so.1: No such file or directory\n</code></pre>\nHow can I execute it? I'd like to remote debug it using IDA Pro.\n",
    "votes": "1",
    "answers": 0,
    "views": "4k",
    "tags": [
        "linux",
        "mips"
    ],
    "user": "Neon Flash",
    "time": "Nov 30, 2018 at 19:10",
    "comments": [
        {
            "user": "0xec",
            "text": "This is a dynamically linked binary. You need the corresponding libc package (like from here )\n",
            "time": null
        },
        {
            "user": "0xec",
            "text": "and then run <pre><code>qemu-mipsel -L /usr/mipsel-linux-gnu/ ./filename</code></pre>\n",
            "time": null
        },
        {
            "user": "0xec",
            "text": "Alternatively you can use qemu full system emulation and run the binary within this\n",
            "time": null
        },
        {
            "user": "0xec",
            "text": "For debugging, run qemu-mipsel with the gdb stub (The -g parameter) and attach IDA to it\n",
            "time": null
        },
        {
            "user": "0xec",
            "text": "In that case check out the precompiled toolchains from toolchains.bootlin.com\n",
            "time": null
        }
    ],
    "answers_data": []
}