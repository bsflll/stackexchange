{
    "title": "asm snippet to pseudo-code",
    "link": "https://reverseengineering.stackexchange.com/questions/25039/asm-snippet-to-pseudo-code",
    "content": "I'm looking into a way to generate pseudo-code from snippet of assembly,\nlet's assume I have this ASM\n<pre><code>    push    rbp\n    mov     rbp, rsp\n    mov     DWORD PTR [rbp-4], edi\n    mov     DWORD PTR [rbp-8], esi\n    mov     edx, DWORD PTR [rbp-4]\n    mov     eax, DWORD PTR [rbp-8]\n    add     eax, edx\n    pop     rbp\n    ret\n</code></pre>\nis there is a way to turn it into pseudo-code using the available decompilers?\nif there is any exported API?\n",
    "votes": "0",
    "answers": 2,
    "views": "2k",
    "tags": [
        "ida",
        "decompilation",
        "radare2",
        "ghidra",
        "hexrays"
    ],
    "user": "zerocool",
    "time": "May 16, 2020 at 21:02",
    "comments": [],
    "answers_data": [
        {
            "content": "You can take the instructions, assemble them into hex values, for example by using: Online disassembler.\nThen you get the byte representation:\n<pre><code>\\x55\\x48\\x89\\xE5\\x89\\x7D\\xFC\\x89\\x75\\xF8\\x8B\\x55\\xFC\\x8B\\x45\\xF8\\x01\\xD0\\x5D\\xC3</code></pre>\nWith this, you can patch bytes in the binary, and then use the normal decompile functionality in <pre><code>Ghidra</code></pre>/<pre><code>Ida</code></pre> on the patched area.\n",
            "votes": "2",
            "user": "macro_controller",
            "time": "May 17, 2020 at 12:43",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "You can actually compile this with NASM depends on your preferred architecture, example command is below (I used  linux):\n<pre><code>nasm -f elf64 -o ./sample.asm ./sample.o \nld -o ./sample ./sample.o \n\n\nglobal _start\n\nsection .text\n\n_start:\n\n    push    rbp\n    mov     rbp, rsp\n    mov     DWORD [rbp-4], edi\n    mov     DWORD [rbp-8], esi\n    mov     edx, DWORD [rbp-4]\n    mov     eax, DWORD [rbp-8]\n    add     eax, edx\n    pop     rbp\n    ret\n</code></pre>\nAfter compiling and linking, I used IDA with pseudo-code support as what @macro_controller mentioned above.\n\nHere is the result.\n",
            "votes": "1",
            "user": "ismael_akez",
            "time": "May 19, 2020 at 19:36",
            "is_accepted": false,
            "comments": []
        }
    ]
}