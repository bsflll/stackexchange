{
    "title": "How to convert Unexplored data in IDA Pro to codeï¼Ÿ",
    "link": "https://reverseengineering.stackexchange.com/questions/19873/how-to-convert-unexplored-data-in-ida-pro-to-code",
    "content": "I am analyzing a malware, it has a lot of confusing methods, I wrote an idc script to remove confusion, use the MakeCode() function to convert some Unexplored data into code, but there are still some that can't be converted when you manually convert When some Unexplored data, it will pop up a window to prompt you whether to convert, so I need a method to force the conversion of Unexplored data to code. Does anyone know which api script language can implement such a function? I used FindUnexplored to find Unexplored data.\n",
    "votes": "1",
    "answers": 1,
    "views": "4k",
    "tags": [
        "ida",
        "binary-analysis",
        "malware",
        "pe",
        "idc"
    ],
    "user": "ATree",
    "time": "Nov 12, 2018 at 9:02",
    "comments": [
        {
            "user": "Bastiflew",
            "text": "Did you find a solution ? I have the same issue.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Using <pre><code>MakeCode</code></pre> function with idc or idaPython is completely OK, this function is exactly what you need.\nHowever (especially when analyzing malware) you can encounter the following problems:\n\nIt may be encrypted (like AES or other encryption algorithm) or transformed (like xored with some pattern)  code. Obviously, it can not be disassembled as is.\nIt may be obfuscated code with garbage bytes inside (something like <pre><code>jmp $+6;garbage byte;code to jump to</code></pre> ). In general IDA should handle it, but if you starting your conversion from incorrect byte it will be garbage. This problem can be found in architectures with non-constant instruction length, such as x86 or x64.\nIt may be just data.  Not all unexplored bytes are the code.\nIt may be some exotic variant of instruction that IDA disassembler can not handle.While theoretically possible, it is highly unlikely.\n",
            "votes": "3",
            "user": "w s",
            "time": "Nov 12, 2018 at 12:31",
            "is_accepted": false,
            "comments": []
        }
    ]
}