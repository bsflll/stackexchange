{
    "title": "Disassembly of raw binary of AARCH64 using Ghidra not complete",
    "link": "https://reverseengineering.stackexchange.com/questions/30734/disassembly-of-raw-binary-of-aarch64-using-ghidra-not-complete",
    "content": "I am trying to disassemble a raw binary with AARCH64:LE:64:v8A​:default (as per below mentioned specs).\n\nArchitecture: aarch64\nCPU op-mode(s): 32-bit, 64-bit\nByte Order: Little Endian\nCPU(s): 8\nOn-line CPU(s) list: 0-7\nVendor ID: Nvidia\nModel: 0\nModel name: ARMv8 Processor rev 0 (v8l)\nCompiler - aarch64-gnu-linux GCC compiler\n\nHere are the steps I followed:\n\nAfter importing the bin file, I ran auto analysis with default options selected.\nSelected the code (ctrl+A) then pressed d (for manual disassembly).\n\nThis ran for around 3 hrs and the disassembled code that it generated still had many bytes as \"??\". Also, when I try to generate the code flow, it runs into heap memory issue (currently heap size set to 4GB).\n\nIs there any step that I am missing out? Or if anyone can help me what else I can try further?\n",
    "votes": "3",
    "answers": 0,
    "views": "699",
    "tags": [
        "disassembly",
        "ghidra",
        "binary",
        "aarch64"
    ],
    "user": "sharma21",
    "time": "Aug 4, 2022 at 7:52",
    "comments": [
        {
            "user": "raspiduino",
            "text": "(Maybe) not enough memory?\n",
            "time": null
        },
        {
            "user": "mumbel",
            "text": "Your step 2 is the wrong approach.  you can't just do that and expect great results, not everything is an instruction (even if they can decode as instructions)\n",
            "time": null
        },
        {
            "user": "dingo_kinznerhook",
            "text": "Are you sure you have the right endianness? 90% of the time when I disassemble code and have unidentified instructions, it's because I used the wrong endianness.\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "Are you sure it’s actually Aarch64?\n",
            "time": null
        },
        {
            "user": "sharma21",
            "text": "@mumbel thanks for replying. Does that mean the bytes that have not been disassembled are not instructions and need to be handled differently? How can that be done?\n",
            "time": null
        }
    ],
    "answers_data": []
}