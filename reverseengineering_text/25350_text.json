{
    "title": "which has better pseudocode? IDA or Ghidra [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/25350/which-has-better-pseudocode-ida-or-ghidra",
    "content": "Closed. This question is opinion-based. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Update the question so it can be answered with facts and citations by editing this post.\n\n\nClosed 4 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nI would like to know which of the two has a better pseudo code generator in C, IDA or Ghidra, if possible, point out the strengths and low points of each one.\n",
    "votes": "1",
    "answers": 0,
    "views": "784",
    "tags": [
        "ida",
        "disassembly",
        "c",
        "ghidra"
    ],
    "user": "Happy",
    "time": "4 years ago",
    "comments": [
        {
            "user": "mumbel",
            "text": "that's a pretty subjective and situational question. you might want to narrow what you're looking for.    Generally though I'd say ghidra beats IDA in that it has decompiler for each processor if it implements the SLEIGH/pcode correctly.  On the other hand IDA's decompiler is very optimized for the architecture/system it does support.\n",
            "time": null
        }
    ],
    "answers_data": []
}