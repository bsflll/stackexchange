{
    "title": "Find out if address store in heap or stack",
    "link": "https://reverseengineering.stackexchange.com/questions/21338/find-out-if-address-store-in-heap-or-stack",
    "content": "While dynamic debugging with ida and gdb-server on binary file running on linux , I saw address that store some value.\nHow can I know if this address allocated in stack or in heap?\n",
    "votes": "1",
    "answers": 1,
    "views": "424",
    "tags": [
        "ida",
        "linux",
        "gdb",
        "stack",
        "heap"
    ],
    "user": "Keystone",
    "time": "May 20, 2019 at 20:01",
    "comments": [],
    "answers_data": [
        {
            "content": "Check out the memory map in the virtual file <pre><code>/proc/[pid]/maps</code></pre> (replace [pid] by the process ID of your target). \nUsually it mentions memory ranges belonging to heap and stack. E.g.:\n<pre><code> address           perms offset  dev   inode       pathname\n00400000-00452000 r-xp 00000000 08:02 173521      /usr/bin/dbus-daemon\n00651000-00652000 r--p 00051000 08:02 173521      /usr/bin/dbus-daemon\n00652000-00655000 rw-p 00052000 08:02 173521      /usr/bin/dbus-daemon\n00e03000-00e24000 rw-p 00000000 00:00 0           [heap]\n00e24000-011f7000 rw-p 00000000 00:00 0           [heap]\n...\n35b1800000-35b1820000 r-xp 00000000 08:02 135522  /usr/lib64/ld-2.15.so\n35b1a1f000-35b1a20000 r--p 0001f000 08:02 135522  /usr/lib64/ld-2.15.so\n35b1a20000-35b1a21000 rw-p 00020000 08:02 135522  /usr/lib64/ld-2.15.so\n35b1a21000-35b1a22000 rw-p 00000000 00:00 0\n35b1c00000-35b1dac000 r-xp 00000000 08:02 135870  /usr/lib64/libc-2.15.so\n35b1dac000-35b1fac000 ---p 001ac000 08:02 135870  /usr/lib64/libc-2.15.so\n35b1fac000-35b1fb0000 r--p 001ac000 08:02 135870  /usr/lib64/libc-2.15.so\n35b1fb0000-35b1fb2000 rw-p 001b0000 08:02 135870  /usr/lib64/libc-2.15.so\n...\nf2c6ff8c000-7f2c7078c000 rw-p 00000000 00:00 0    [stack:986]\n...\n7fffb2c0d000-7fffb2c2e000 rw-p 00000000 00:00 0   [stack]\n7fffb2d48000-7fffb2d49000 r-xp 00000000 00:00 0   [vdso]\n</code></pre>\n(from <pre><code>man proc</code></pre>)\nNote that addresses may change on every run due to ASLR.\n",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "May 21, 2019 at 21:09",
            "is_accepted": false,
            "comments": []
        }
    ]
}