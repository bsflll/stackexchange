{
    "title": "ghidra: how to run a python 3 script with headless analyzer",
    "link": "https://reverseengineering.stackexchange.com/questions/21630/ghidra-how-to-run-a-python-3-script-with-headless-analyzer",
    "content": "I read the documentation of headleass analyzer. It is used to perform analysis on existing binaries. I know that <pre><code>-postscript</code></pre> flag allows to enter the analysis script. I have a java script which works fine. But, I want to use python 3 for the analysis. I want to run that like:\n<pre><code>./analyzeHeadless ghidra-project-directory -import binary-file -postscript yourpythonscript\n</code></pre>\nIs it possible to run python script for the analysis? Also, is there any documentation available to do that?\n\nEdit:\nI made a following script and it does work fine (but it gives me not\n  found errors for DecompInterface):\n<pre><code>import ghidra.app.util.headless.HeadlessScript;\nimport ghidra.app.decompiler.ClangNode;\nimport ghidra.app.decompiler.ClangToken;\nimport ghidra.app.decompiler.ClangLine;\nimport ghidra.app.decompiler.ClangTokenGroup;\nimport ghidra.app.decompiler.DecompInterface;\nimport ghidra.app.decompiler.DecompileResults;\nimport ghidra.program.model.address.Address;\nimport ghidra.program.model.listing.CodeUnit;\nimport ghidra.program.model.listing.Function;\nimport ghidra.program.model.listing.FunctionIterator;\nimport ghidra.program.model.listing.InstructionIterator;\nimport ghidra.program.model.listing.Program;\nimport ghidra.program.model.listing.Variable;\nimport ghidra.program.model.pcode.HighFunction;\nimport ghidra.program.model.pcode.HighSymbol;\nimport ghidra.program.model.pcode.HighVariable;\nimport ghidra.program.model.pcode.LocalSymbolMap;\nimport ghidra.program.model.pcode.PcodeOp;\nimport ghidra.program.model.pcode.Varnode;\nimport ghidra.program.model.symbol.Symbol;\nimport ghidra.program.model.symbol.Reference;\nimport ghidra.program.model.symbol.ReferenceIterator;\nimport ghidra.util.task.ConsoleTaskMonitor;\n\nargs = getScriptArgs()\n\nprint(args)\n\np = currentProgram\nprint(p)\n\nfilename = \"/projects/zephyr/Ruturaj/ghidra_learning/\" + p.getName() + \".txt\"\nprint(filename)\n\n#di = DecompInterface()\n#print(di)\n</code></pre>\n",
    "votes": "6",
    "answers": 1,
    "views": "10k",
    "tags": [
        "ghidra"
    ],
    "user": "R4444",
    "time": "Jul 8, 2019 at 17:42",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "AFAIK Ghidra relies on Jython which does not support Python 3. You'll have to use Python 2.\n",
            "time": null
        },
        {
            "user": "R4444",
            "text": "Thanks @IgorSkochinsky I'll note that down in the answer\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I turns out that the python script can be used with headless analyzer script.\nUsing the following command I can run it, just like the java file:\n<pre><code>./analyzeHeadless ghidra-project-directory -import binary-file -postscript yourpythonscript\n</code></pre>\nApparently all the classes defined for java can be used directly in the python script.\nParticular class can be imported with <pre><code>from import statements</code></pre>, for example in java looks like:\n<pre><code>import ghidra.program.model.listing.Variable;\n</code></pre>\nAnd using python:\n<pre><code>from ghidra.program.model.listing import Variable;\n</code></pre>\nTo import the <pre><code>variable</code></pre> class. The variable class can be imported just like java (see the import statement above). But, then you have to use the whole path name to access it. For example:\n<pre><code>something = ghidra.program.model.listing.Variable()\n</code></pre>\nSo, in conclusion, the same script can be written using python by importing the classes without any issue. Hope this helps someone.\n\nEdit:\nAs @igor said in the comment, it works only with python 2.7 (as ghidra\n  relies on <pre><code>Jython</code></pre>). For python 3.x, something like\n  <pre><code>ghidra_bridge</code></pre> can be\n  used.\n",
            "votes": "8",
            "user": "R4444",
            "time": "Jul 9, 2019 at 15:17",
            "is_accepted": true,
            "comments": []
        }
    ]
}