{
    "title": "IDA SDK: How to add a struct (pointer) field to a struct?",
    "link": "https://reverseengineering.stackexchange.com/questions/20099/ida-sdk-how-to-add-a-struct-pointer-field-to-a-struct",
    "content": "I'm new to the IDA 7.0 SDK, trying to automate creating structs to represent a C++ (MSVC) class in IDA with a plugin. For this, I create 3 structs as follows:\n<pre><code>00000000 SomeClass struc\n00000000 __vftable dd ?  ; SomeClass_vtbl*\n00000004 __members SomeClass_members ?\n00000084 SomeClass ends\n00000084\n00000000 ; ---------------------------------------------------------------------------\n00000000\n00000000 SomeClass_vtbl struc\n00000000 ; ... several function pointers ....\n00000048 SomeClass_vtbl ends\n00000048\n00000000 ; ---------------------------------------------------------------------------\n00000000\n00000000 SomeClass_members struc\n00000000 ; ... some members ....\n00000020 SomeClass_members ends\n</code></pre>\nCreating the structs works fine, but I have trouble defining the 2 fields in <pre><code>SomeClass</code></pre>:\n\nthe pointer to <pre><code>SomeClass_vtbl</code></pre> for the first field, and\nreferencing <pre><code>SomeClass_members</code></pre> for the second field.\n\nNot finding a sample in the SDK on how to define structs detailedly programmatically (is there one?), I checked the raw documentation and found <pre><code>add_struct_member</code></pre> to be doing what I want to do, using it as follows:\n<pre><code>#include <bytes.hpp>\n// ... other typical IDA SDK includes ...\n\nbool idaapi run(size_t arg)\n{\n    qstring className = \"SomeClass\";\n\n    // Create the structs.\n    tid_t classType = add_struc(BADADDR, className.c_str());\n    tid_t vftableType = add_struc(BADADDR, (className + \"_vtbl\").c_str());\n    tid_t membersType = add_struc(BADADDR, (className + \"_members\").c_str());\n    struc_t* classStruct = get_struc(classType);\n    struc_t* vftableStruct = get_struc(vftableType);\n    struc_t* membersStruct = get_struc(membersType);\n\n    // Create vftable field.\n    opinfo_t vftableField{ vftableStruct->id };\n    add_struc_member(classStruct, \"__vftable\", 0, FF_STRUCT, &vftableField, 4);\n\n    // Create members field.\n    opinfo_t membersField{ membersStruct->id };\n    add_struc_member(classStruct, \"__members\", 4, FF_STRUCT, &membersField, 4);\n\n    return true;\n}\n</code></pre>\nI'm not sure if setting the types of those struct fields like this is the right way to go:\n\n<pre><code>FF_*</code></pre> #defines from <pre><code>bytes.hpp</code></pre> are not found by my compiler, even though I included that header right at the start in the only main.cpp file in my project (and they appear in IntelliSense...).\nEven if I could use those #defines now, I did not see how that would allow me to differentiate between a pointer to a struct or simply referencing a struct.\nAfter all, I'm not even sure if using the <pre><code>FF_*</code></pre> #defines for the <pre><code>flag</code></pre> parameter of <pre><code>add_struc_member</code></pre> is correct; the documentation only states \"type + representation bits\".\n\nSo, dumbly asked, ignoring my probably faulty tries above, what are the methods to set known types of struct fields?\n",
    "votes": "1",
    "answers": 0,
    "views": "841",
    "tags": [
        "ida",
        "idapro-sdk"
    ],
    "user": "Ray",
    "time": "Dec 10, 2018 at 7:32",
    "comments": [
        {
            "user": "Biswapriyo",
            "text": "Are you making a plug-in for IDA? There is an alternative way to convert/visualise vtable into struct using simple header file without IDA SDK.\n",
            "time": null
        },
        {
            "user": "Ray",
            "text": "@Biswapriyo Yeah, it should be part of a C++ plugin later on. I clarified the text.\n",
            "time": null
        }
    ],
    "answers_data": []
}