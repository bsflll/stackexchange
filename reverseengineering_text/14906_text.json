{
    "title": "How can i rename Array to API Name in IDAPro?",
    "link": "https://reverseengineering.stackexchange.com/questions/14906/how-can-i-rename-array-to-api-name-in-idapro",
    "content": "I am studying to analysis malware..\nWhile to analysis a malware using IDA, I want to rename array to API Name.\nTo Help your understanding, attached image.\n\nPlease help.\nThank you\n",
    "votes": "0",
    "answers": 1,
    "views": "365",
    "tags": [
        "ida",
        "ida-plugin",
        "decompiler"
    ],
    "user": "ByeongJae",
    "time": "Mar 15, 2017 at 7:42",
    "comments": [],
    "answers_data": [
        {
            "content": "You can convert it to structure, this will produce much more readable code. \nIn order to do this you have to do the following:\n\nCreate a structure in structures window, according to the size of array, create there corresponding number of fields (Open window, press INS, use d key to add fields).\nRename structure fields according to API names, and set their type as function pointers with Y key. For example for <pre><code>GetProcAddress</code></pre> field it will look like <pre><code>_DWORD (__stdcall *pGetProcAddress)(_DWORD, _DWORD);</code></pre> - it is a standard definition of C function pointers with small addition of <pre><code>__stdcall</code></pre> marker of the calling convention.\nSet your a1 variable type to the created structure (In decompiler window locate cursor on your <pre><code>a1</code></pre> variable, press Y and enter the structure name)\n\nLet me know if you need more detailed walkthrough.\nAs an alternative for defining structure inside IDA (bullets 1 and 2) you can write a header file with something similar to the following (btw, see the type definitions in the structure):\n<pre><code>struct apis\n{\n  void* (__stdcall *pGetProcAddress)(_DWORD, _DWORD);\n  _DWORD (__stdcall *pSetErrorMode)(_DWORD);\n  _DWORD (__stdcall *pGetTempPathA)(_DWORD, _DWORD);\n  _DWORD (__stdcall *pGetTempGileNameA)(_DWORD *, _DWORD *, _DWORD, _DWORD *);\n};\n</code></pre>\nand import it into the IDB with Ctrl+F9. You can find and edit this structure in Local types window (Shift+F1).\n",
            "votes": "0",
            "user": "w s",
            "time": "Mar 15, 2017 at 8:44",
            "is_accepted": true,
            "comments": [
                {
                    "user": "ByeongJae",
                    "text": "<span class=\"comment-copy\">I completed step1, But I can't set their type as function pointers.. Press Y and then I don't know What I input.. in box[Please enter a string]. thank you sir.</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">Answer updated. Do you have definitions of HMODULE and LPCSTR types in your IDB ?</span>",
                    "time": null
                },
                {
                    "user": "ByeongJae",
                    "text": "<span class=\"comment-copy\">No, I don't have HMODULE and LPCSTR..</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">So use _DWORD as a parameters.</span>",
                    "time": null
                },
                {
                    "user": "ByeongJae",
                    "text": "<span class=\"comment-copy\">Thank you so much!and, I setted Function Pointer,, and then I will set a1,,I know to set structure using Alt+Q, but you said Y! then What I input there?</span>",
                    "time": null
                }
            ]
        }
    ]
}