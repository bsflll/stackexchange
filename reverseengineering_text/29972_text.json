{
    "title": "433MHz Protocol: Unknown Three-Symbol-Encoding within the OOK data",
    "link": "https://reverseengineering.stackexchange.com/questions/29972/433mhz-protocol-unknown-three-symbol-encoding-within-the-ook-data",
    "content": "Reverse engineering the protocol of a remote-controlled wall socket (433MHz On-Off-Keying) revealed an embedded pattern which apparently uses three symbols (besides 0s).\n\nSymbol A = 000001\nSymbol B = 00000101\nSymbol C = 0000010101\n\nThe receiver identifies the remote via the sync word K = ABBBBCBACBACBBACBACABBCABC.\nThe remote can control up to four individual sockets which learn one of those fixed four codes when a button is pressed to trigger learning mode.\nI assume that different remotes have individual sync words and thus won't interefe with one another. But I cannot confirm that, as I only possess one remote.\nTo turn on the first socket, the remote sends DN[0], where\n\nD = KB (specifying that a single device shall be turned on)\nN = AB (specifying that the device shall be turned on)\n[0] = BBBB (specifying device with index 0, so the first device)\n\nThe remote features a global mode which is able to control all devices simultaniously.\nTo turn on all devices, the remote sends GBB[0], where\n\nG = KA (specifying that all devices shall be controlled)\nBB (specifying that the devices shall be turned on)\n[0] (specifying the index of the device and is left blank, so identical to index 0)\n\nI assume that the underlying semantic code (to turn the device on) is the same, no matter if all devices are controlled simultaniously (via GBB) or via a single device instruction (DN).\nI have the gut feeling that BB is actually analog to the bits 00,\n that the device codes are analogous to the bits 00, 01, 10, and 11 respectively.\nSomehow, the analogy doesn't hold in any case. But the relationship between codes does:\n BBBB for device index 0, binary 00\n BBCA for device index 1, binary 01\n BCAB for device index 2, binary 10\n BCBA for device index 3, binary 11\n It definitively reminds me of an incrementing counter, but it has been passed through some encoding scheme that I was unable to figure out so far.\n\nQuestion\nAll codes I initially thought of (like Non-Return-To-Zero, etc.) encode data using two symbols.\n Does anybody of you have an idea which encoding results in something similar to the three-symbol-encoding I described here?\n\nIn summary:\n\nG=KA (global)\nD=KB (individual device)\n\nN=AB (on)\nF=BA (off)\n\n[0]=BBBB (device 00)\n[1]=BBCA (device 01)\n[2]=BCAB (device 10)\n[3]=BCBA (device 11)\n\nX_ON/OFF: D[N/F][X] (code to turn on/off a single device)\nALL_ON:      GBB[0] (code to turn on     all devices)\nALL_OFF:     GCA[0] (code to turn    off all devices)\n\nWhile pressing a button on the receiver, it can be paired to one of the four constant sender codes.\n\nExample:\nTo turn on the first device (ID 0) the sender has to send\n<pre><code>Individual Device,              ON,             ID_0\n = D                            N               [0]\n = KB                           AB              BBBB\n = ABBBBCBACBACBBACBACABBCABC   AB              BBBB\n = 00000100000101000001010000\n   01010000010100000101010000\n   01010000010000010101000001\n   01000001000001010100000101\n   00000101000001000001010100\n   00010100000100000101010000\n   01000001010000010100000101\n   01000001000001010000010101   00000100000101  00000101000001010000010100000101\n</code></pre>\nSo inside a continuous stream of OOK data (at the right sample rate), it would look like this:\n<pre><code>...000000000000000000000000000000010000010100000101000001010000010100000101010000010100000100000101010000010100000100000101010000010100000101000001000001010100000101000001000001010100000100000101000001010000010101000001000001010000010101000001000001010000010100000101000001010000010100000000000000000000...\n</code></pre>\n\nFurther Context\nLabel on the receiver says\n<pre><code>00121949</code></pre> / <pre><code>hama F3400257</code></pre> / <pre><code>Hama GmbH & Co KG</code></pre> / <pre><code>www.hama.com</code></pre>\n",
    "votes": "2",
    "answers": 1,
    "views": "182",
    "tags": [
        "encodings",
        "radio-interception"
    ],
    "user": "Semnodime",
    "time": "Feb 9, 2022 at 21:59",
    "comments": [],
    "answers_data": [
        {
            "content": "<pre><code>>specifying that the devices shall be turned on\n</code></pre>\nIn all known cases for such remotes, the sender transmits senderID plus action codes, so identifying itself, but not sending individual receiver codes. This is the same in your case, meaning that receiver identifies the transmitted code, not the sender specifies the unit that is addressed with an action.\nLooking at you full data stream, I can see that it is pulse length coded. I think your interpretation of semantic is guiding you the wrong direction at the moment.\nWhat is the real physical length of a \"1\" and \"0\"? Is their length exactly the same? I can see only \"1\", \"0\" and \"00000\", so 3 different time lengths, is this correct?\nWhat device has been used for capturing the stream?\nIs there anything known about your device?\nOOK on 433MHz is standard method, and a lot of codes had been identified and made public, by example here. That will shorten the process if successful\nDoing it the long way the transcoding of your bitstream and using above assumption (0=longLow, 1=shortHigh, 2=shortLow) gets:\n<pre><code>..000101210121012101210121210121010121210121010121210121012101012121012101012121010121012101212101012101212101012101210121012101210000..\n</code></pre>\nThis needs to be transcoded into data stream next to identify the \"0\" and \"1\" and identificationID of sender actions etc.\n",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Feb 14, 2022 at 19:03",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">Hi and welcome to RE.SE. This is not an answer and has been flagged accordingly. However, your effort in formatting would get lost by converting this to a comment.</span>",
                    "time": null
                },
                {
                    "user": "peter ferrie",
                    "text": "<span class=\"comment-copy\">If you have a new question, please ask it by clicking the <a href=\"https://reverseengineering.stackexchange.com/questions/ask\">Ask Question</a> button. Include a link to this question if it helps provide context. - <a href=\"/review/low-quality-posts/21256\">From Review</a></span>",
                    "time": null
                },
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">@peterferrie it's not exactly a new question. Conventionally one would ask/remark these things in comments, but the user does not have enough reputation to comment, yet. Oh, and the content would probably be too long also.</span>",
                    "time": null
                },
                {
                    "user": "Semnodime",
                    "text": "<span class=\"comment-copy\">@dieter reichl, I really appreciate your response and answered your questions in my opening post. Please consider providing more content within your answer (e.g. based on the additional context I posted) and remove the questions that have been answered now. StackExchange moderation might consider flagging your content otherwise.</span>",
                    "time": null
                },
                {
                    "user": "dieter reichl",
                    "text": "<span class=\"comment-copy\">Thanks for understanding that my reputation doesn't allow direct commenting of a question at the moment. @Semnodime: I have edited my answer above, trying to make it more clear and to give support.</span>",
                    "time": null
                }
            ]
        }
    ]
}