{
    "title": "Reverse engineering from binary or ipa [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/3712/reverse-engineering-from-binary-or-ipa",
    "content": "Closed. This question needs details or clarity. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Add details and clarify the problem by editing this post.\n\n\nClosed 11 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nI lost the code of an app I wrote some years ago...the game structure was pretty cool and would be good to have it back...\nSo can I reverse a binary into...something? I mean at least class tree...\nI've this\nand the ipa (yes I saved it and not the code source, pretty smart eh?)\nI saw this link but don't know how to use objc-helper-plugin-ida! Never used python before\notool gives:\n",
    "votes": "2",
    "answers": 4,
    "views": "7k",
    "tags": [
        "ios"
    ],
    "user": "Michele",
    "time": "11 years ago",
    "comments": [
        {
            "user": "Ange",
            "text": "we can only answer a specific question, this is too unclear.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Use IDA Pro 6.5 Demo (available for free from http://hex-rays.com)\nIt supports ObjC by default\n",
            "votes": "3",
            "user": "mailwl",
            "time": "Feb 18, 2014 at 7:44",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "You can use Radare2, IDA Pro or Hopper. You'll need to reverse it and this might take more time than rewriting it. Also have a look at this post: Possibilities for reverse engineering an ipa file to its source\n",
            "votes": "3",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "You can try SmartDec decompiler too. The IDA Pro plugin does support Mach-O.\n",
            "votes": "1",
            "user": "Krypton",
            "time": "Feb 19, 2014 at 4:18",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "To get the basic class structure back, you can use classdump.\nIt generates declarations for the classes, methods, categories and protocols. This is the same information provided by using ‘otool -ov’, but presented as normal Objective-C declarations, so it is much more compact and readable.\n",
            "votes": "1",
            "user": "pank4j",
            "time": "Feb 20, 2014 at 2:26",
            "is_accepted": false,
            "comments": []
        }
    ]
}