{
    "title": "How to parse objdump output data?",
    "link": "https://reverseengineering.stackexchange.com/questions/26253/how-to-parse-objdump-output-data",
    "content": "I'm somehow newbe in reverse engineering and currently I'm reading RE4B book.\n\nIn the image above:\n\nI can't figure out the role of <pre><code>s</code></pre> in the functions <pre><code>f1</code></pre> and <pre><code>f2</code></pre>. As far as I know, based on the last line in the image (i.e. <pre><code>s     db 'world', 0xa, 0</code></pre>), the variable <pre><code>s</code></pre> is a pointer to the beginning of world string. So, why this value is over-writed with -1C in the functions? (<pre><code>s = dword ptr -1Ch</code></pre>)\nAs you know, we can use stack to pass function arguments. The question is why the compiler used <pre><code>mov [esp+1Ch+s], offset s ; \"world\n\"</code></pre> instead of <pre><code>mov [esp], offset s ; \"world\n\"</code></pre>?\n",
    "votes": "1",
    "answers": 0,
    "views": "419",
    "tags": [
        "disassembly",
        "objdump"
    ],
    "user": "Ebrahim Ghasemi",
    "time": "Nov 5, 2020 at 11:37",
    "comments": [],
    "answers_data": []
}