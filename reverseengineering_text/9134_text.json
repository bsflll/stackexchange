{
    "title": "How to read and analyze Intel PIN trace",
    "link": "https://reverseengineering.stackexchange.com/questions/9134/how-to-read-and-analyze-intel-pin-trace",
    "content": "Recently I have collected several PIN traces but all of them are in a format like below :\n<pre><code>0x2af1510676b0\n0x2af1510676b3\n0x2af15106b010\n0x2af15106b011\n0x2af15106b014\n0x2af15106b016\n0x2af15106b018\n0x2af15106b01a\n0x2af15106b01c\n0x2af15106b01d\n0x2af15106b020\n0x2af15106b024\n0x2af15106b026\n0x2af15106b02a\n</code></pre>\nI want to see the assembly instruction related to these traces (equivalent instructions) and perform some analysis but I do not know how to do that?\nHow can I see these traces in a readable format that I can analyze ?\n",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "pintool"
    ],
    "user": "user2942756",
    "time": "Jun 15, 2015 at 7:52",
    "comments": [
        {
            "user": "0xec",
            "text": "What does the series of numbers represent? Are those instruction addresses ?\n",
            "time": null
        },
        {
            "user": "user2942756",
            "text": "I am not sure but it seems they are instruction addresses.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "This list of hexadecimal numbers represent the addresses of each instruction followed by the software you are looking at.\nPin is a tool that will allow you to collect traces of a software by dynamically instrumenting the code of it. What you collected here is the lowest level of information that you can get out of Pin, but you can ask for more by using the proper Pintool (or writing one by yourself).\nLook in the directory <pre><code>source/tools</code></pre>, you will find various plugins that you can use with Pin and extract usefull information. For example, you may want to know: the address of each instruction (you already have that), the decoded instruction that is executed and the opcode of the instruction. All this can be asked to Pin and collected as a trace.\nIn the directory <pre><code>source/tools/SimpleExamples</code></pre>, you will find simple examples to start with and to understand how to use Pin. Try to look also to a few tutorial that you may find on Internet.\n",
            "votes": "4",
            "user": "perror",
            "time": "Jun 15, 2015 at 12:18",
            "is_accepted": false,
            "comments": []
        }
    ]
}