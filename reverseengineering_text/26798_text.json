{
    "title": "What is the obfuscation method utilised in Playdead's 'LIMBO' video game?",
    "link": "https://reverseengineering.stackexchange.com/questions/26798/what-is-the-obfuscation-method-utilised-in-playdeads-limbo-video-game",
    "content": "The game uses Unity3D engine, perhaps with a custom render pipeline. Reports have been made, it is not possible to disassemble it. How did they achieve that?\n",
    "votes": "0",
    "answers": 1,
    "views": "331",
    "tags": [
        "obfuscation"
    ],
    "user": "ivan866",
    "time": "Jan 17, 2021 at 1:18",
    "comments": [
        {
            "user": "nobody",
            "text": "Which reports? Can you link to some?\n",
            "time": null
        },
        {
            "user": "ivan866",
            "text": "@nobody can you disprove first?\n",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "that's a rather spurious response. Disprove what? You made a claim, and the (legitimate) question was raised where the claim comes from. Given this was migrated to our site, I second the request. One of the first tasks a reverse engineer usually does is reconnaissance. And looking at those reports could provide first insights.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I'm not sure what do you mean by \"custom render pipeline\" and \"not possible to disassemble it\", but I quickly checked my steam version, and all I can find is the SteamStub.\nOnce removed, the code is not obfuscated.\n",
            "votes": "1",
            "user": "wisk",
            "time": "Jan 17, 2021 at 20:06",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">Perhaps you could outline what procedure you used to come to your conclusion.</span>",
                    "time": null
                },
                {
                    "user": "ivan866",
                    "text": "<span class=\"comment-copy\">and how does DRM Manager influence source code and game resources?</span>",
                    "time": null
                },
                {
                    "user": "wisk",
                    "text": "<span class=\"comment-copy\">Most of (any?) games coming from Steam are packed with their solution. One way to quickly check that is the presence of a section named <code>.bind</code>. This <a href=\"https://www.pcgamingwiki.com/wiki/User:Cyanic/Steam_DRM\" rel=\"nofollow noreferrer\">link</a> explains it better than me. The game doesn't use Unity3D, @ivan866 could you share your source?</span>",
                    "time": null
                },
                {
                    "user": "ivan866",
                    "text": "<span class=\"comment-copy\">@wisk the source mentioned in question is a single comment on Steam community pages; the notion that it uses Unity3D is (perhaps erratically) extrapolated from the fact that its successor, 'INSIDE', uses it, which is stated on Wikipedia page</span>",
                    "time": null
                }
            ]
        }
    ]
}