{
    "title": "About the VB P-CODE mode reverse-engineer",
    "link": "https://reverseengineering.stackexchange.com/questions/8743/about-the-vb-p-code-mode-reverse-engineer",
    "content": "I have to reverse-engineer a VB P-CODE mode program. I had the program's P-CODE, but I don't know what it means. For example:\n<pre><code>Proc: 421840\n421100: 04 FLdRfVar                local_0098\n421103: 04 FLdRfVar                local_0094\n421106: 05 ImpAdLdRf:              435aec\n421109: 24 NewIfNullPr             408868\n42110C: 0d VCallHresult            CVBApplication::get_\n</code></pre>\nI have to find the tools to reverse a program.I want to know what the P-CODE means.Thanks\n",
    "votes": "2",
    "answers": 3,
    "views": "3k",
    "tags": [
        "binary-analysis",
        "visual-basic"
    ],
    "user": "soul chen",
    "time": "Apr 28, 2015 at 8:16",
    "comments": [
        {
            "user": "blabb",
            "text": "google first hit says p-code means packed-code  en.wikipedia.org/wiki/Microsoft_P-Code supposed to be executed by a visual basic virtual machine (msvbvmXXX.dll abandoned after vb6 in favour of clr and .net and a hunch search yields several decompiers for that code like p32dasm , vb-decompiler etc\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Here are the two best free and available resources about Microsoft's VB P-Code.\nFirst one, the list of opcodes (here). Second one, a 12 pages document written by Alex Ionescu on how to decompile and analyze VB binaries (here).\n",
            "votes": "4",
            "user": "yaspr",
            "time": "Apr 22, 2015 at 12:40",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "VB Decompiler Pro decompiles VB P-Code to Visual Basic code. See below for an example of the decompilation output:\n\nAlternatively, if you're looking for help in analyzing the raw P-Code itself, you can check out the following links in addition to the links that yaspr posted:\n\nVB P-code Information by Mr Silver\nInfo about P-code\n",
            "votes": "2",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "In addition to the Alex Ionescu paper, there's also a useful 27-page paper, VISUAL BASIC REVERSED - A decompiling approach by Andrea Geddon.\n",
            "votes": "0",
            "user": "ThunderFrame",
            "time": "Sep 18, 2016 at 4:16",
            "is_accepted": false,
            "comments": []
        }
    ]
}