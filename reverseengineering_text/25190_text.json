{
    "title": "Why would VGA port 03CC respond with bit 3 set and bit 2 not?",
    "link": "https://reverseengineering.stackexchange.com/questions/25190/why-would-vga-port-03cc-respond-with-bit-3-set-and-bit-2-not",
    "content": "I'm reverse-engineering some code I wrote in the middle-90s for which the source is long-lost and I'm a bit baffled by some VGA code I've encountered. I think it's probably from library or 3rd party code as I was just learning computers then and, while I did include some assembly to interact with VGA, it wasn't this informed.\nIf it's helpful, the app is a 16-bit DOS real-mode exe and the original source was compiled by the Turbo Pascal compiler (either version 6 or 7).\n<pre><code>    ; function boilerplate\n    push bp\n    mov  bp,sp\n    call 0EE2:0530  ; stack bounds check function\n\n    ; probe vga port 03CCh\n    sub  sp,0002    ; why?\n    mov  dx,03CC\n    in   al,dx\n    and  al,0C      ; mask bits 3 & 2\n    cmp  al,04      ; al == 00000100b\n    mov  al,00      ; pre return value\n    jne  jump_label ; return 0\n    inc  ax         ; return 1\njump_label:\n    ; store return value in [bp-01] as well, for.. reasons.\n    mov  [bp-01],al\n    mov  al,[bp-01]\n\n    ; function boilerplate    \n    mov  sp,bp\n    pop  bp\n    retf 0004 ; instance pointer?\n</code></pre>\nSo the question is, what is the intent here? Two parts are confusing to me:\nFirst, bits 2 and 3 denote clock select according to the VGA docs I've read, but those docs are light on information about what that means when bit 3 is involved. For example, http://www.osdever.net/FreeVGA/vga/extreg.htm#3CCR3C2W declares the two values with the bit 3 set as undefined.\nThis function seems to return 0 when bit 3 is set and bit 2 isn't. But, why? What is it trying to determine about the hardware?\nSecond, and this is an aside, but what is the intent of <pre><code>mov [bp-01],al</code></pre> followed by <pre><code>mov al,[bp-01]</code></pre>? This seems redundant!\n",
    "votes": "2",
    "answers": 1,
    "views": "66",
    "tags": [
        "x86",
        "dos"
    ],
    "user": "Mike E",
    "time": "Jun 2, 2020 at 17:51",
    "comments": [],
    "answers_data": [
        {
            "content": "First: the code is only checking bit 2 (bit 0,1,2) if 25 or 28Mhz clock is set\nSecond: maybe its redundant but can't say without original code - could be still a problem with your disassembler\n<pre><code>retf 0004 ; instance pointer?\n</code></pre>\nis a far return with pop of 4 bytes from stack\n",
            "votes": "3",
            "user": "llm",
            "time": "Jun 2, 2020 at 7:58",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Mike E",
                    "text": "<span class=\"comment-copy\">Ah yes, you're right. This function returns 1 only when the clock select bits are 01 (thus 28MHz or 360/720 width). It makes sense, if the bits were 11 then that would not be true so bit 3 must be preserved. I bet it's testing for the 9-pixel-wide-char VGA mode. Thank you!</span>",
                    "time": null
                }
            ]
        }
    ]
}