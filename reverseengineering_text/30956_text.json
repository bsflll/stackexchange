{
    "title": "ida pro: scripting debugger with python fails on step_over/run_to",
    "link": "https://reverseengineering.stackexchange.com/questions/30956/ida-pro-scripting-debugger-with-python-fails-on-step-over-run-to",
    "content": "So I am trying to run an app and collect information at certain points.\nNo biggie, right? Wrong. Check this simple example:\n<pre><code>import ida_dbg\nida_dbg.step_over() #or runto()\neax = ida_dbg.get_reg_val(\"eax\")\nprint(\"eax: \", eax)\n</code></pre>\nthrows an exception\n\nException: Failed to retrieve register value\n\nBut Individually it works. So if I do ONLY a \"ida_dbg.step_over()\", that works. And if do ONLY a 'get_reg_val(\"eax\")' that works too.\nOnly in combination it fails.\nNow, you might think this is because step_over only posts a request, but the documentation explicitly says otherwise and provides a request_step_over() for that purpose.\nPlease, can someone enlighten me and show me how I can step over my program and collect register values after each step?\n",
    "votes": "0",
    "answers": 1,
    "views": "388",
    "tags": [
        "ida",
        "debugging",
        "idapython"
    ],
    "user": "bernd feinman",
    "time": "Oct 5, 2022 at 16:56",
    "comments": [],
    "answers_data": [
        {
            "content": "Ah! So despite the function being advertised otherwise it is still async and I have to call\n\nida_dbg.wait_for_next_event(ida_dbg.WFNE_SUSP, -1)\n\nIs this the correct solution?\n",
            "votes": "0",
            "user": "bernd feinman",
            "time": "Oct 5, 2022 at 17:59",
            "is_accepted": true,
            "comments": []
        }
    ]
}