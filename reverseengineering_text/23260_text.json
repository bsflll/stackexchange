{
    "title": "GCC is not recognizing symbol table in my hand-made ELF file",
    "link": "https://reverseengineering.stackexchange.com/questions/23260/gcc-is-not-recognizing-symbol-table-in-my-hand-made-elf-file",
    "content": "For learning purposes I've created (using a hex editor and some macros) the following ELF file:\n<pre><code>hello.o: ELF 64-bit LSB relocatable, x86-64, version 1 (SYSV), not stripped\n</code></pre>\nxxd hello.o:\n<pre><code>00000000: 7f45 4c46 0201 0100 0000 0000 0000 0000  .ELF............\n00000010: 0100 3e00 0100 0000 0000 0000 0000 0000  ..>.............\n00000020: 0000 0000 0000 0000 4000 0000 0000 0000  ........@.......\n00000030: 0000 0000 4000 3800 0000 4000 0400 0300  ....@.8...@.....\n00000040: 0c00 0000 0300 0000 2000 0000 0000 0000  ........ .......\n00000050: 0000 0000 0000 0000 4001 0000 0000 0000  ........@.......\n00000060: 0600 0000 0000 0000 0000 0000 0000 0000  ................\n00000070: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000080: 0600 0000 0100 0000 2200 0000 0000 0000  ........\".......\n00000090: 0000 0000 0000 0000 4601 0000 0000 0000  ........F.......\n000000a0: 0e00 0000 0000 0000 0000 0000 0000 0000  ................\n000000b0: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n000000c0: 1400 0000 0200 0000 2000 0000 0000 0000  ........ .......\n000000d0: 0000 0000 0000 0000 5401 0000 0000 0000  ........T.......\n000000e0: 1800 0000 0000 0000 0300 0000 0000 0000  ................\n000000f0: 0000 0000 0000 0000 1800 0000 0000 0000  ................\n00000100: 1c00 0000 0300 0000 2000 0000 0000 0000  ........ .......\n00000110: 0000 0000 0000 0000 6c01 0000 0000 0000  ........l.......\n00000120: 2600 0000 0000 0000 0000 0000 0000 0000  &...............\n00000130: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000140: 6865 6c6c 6f00 4865 6c6c 6f2c 2077 6f72  hello.Hello, wor\n00000150: 6c64 2100 0000 0000 1100 0100 0000 0000  ld!.............\n00000160: 0000 0000 0e00 0000 0000 0000 6865 6c6c  ............hell\n00000170: 6f00 2e64 6174 6100 2e73 7472 7461 6200  o..data..strtab.\n00000180: 2e73 796d 7461 6200 2e73 6873 7472 7461  .symtab..shstrta\n00000190: 6200                                     b.\n</code></pre>\nI wish to link it together with a C program (main.c):\n<pre><code>#include <stdio.h>\n\nextern char hello[];\n\nint main() {\n    printf(\"%s\n\", hello);\n    return 0;\n}\n</code></pre>\nHowever, running <pre><code>gcc main.o hello.o</code></pre> shows an error:\n<pre><code>/usr/bin/ld: main.o: in function `main':\nmain.c:(.text+0x7): undefined reference to `hello'\ncollect2: error: ld returned 1 exit status\n</code></pre>\nreadelf -s hello.o:\n<pre><code>Symbol table '.symtab' contains 1 entry:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000    14 OBJECT  GLOBAL DEFAULT    1 hello\n</code></pre>\n(readelf output is similar to object files created by GCC)\nWhy doesn't GCC accept my created object file?\n",
    "votes": "1",
    "answers": 1,
    "views": "280",
    "tags": [
        "elf",
        "symbols",
        "gcc"
    ],
    "user": "PhilipRoman",
    "time": "Feb 15, 2020 at 16:07",
    "comments": [],
    "answers_data": [
        {
            "content": "I tried running the same commands as you with the file you provided but it failed in the same way as yours. However with a newer hellow.c as such\n<pre><code>char hello[] = \"Hello World\";\n</code></pre>\nwith the following commands it worked\n<pre><code>$ gcc -c hellow.c\n$ gcc main.c hellow.o -o main\n$ ./main\nHello World\n</code></pre>\nThere are some key differences between <pre><code>hellow.o</code></pre> and your <pre><code>hello.o</code></pre>\n<pre><code>$ nm hellow.o\n0000000000000000 D hello\n$ nm hello.o \nnm: hello.o: no symbols\n$ readelf -s hellow.o\nSymbol table '.symtab' contains 8 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS hellow.c\n     2: 0000000000000000     0 SECTION LOCAL  DEFAULT    1 \n     3: 0000000000000000     0 SECTION LOCAL  DEFAULT    2 \n     4: 0000000000000000     0 SECTION LOCAL  DEFAULT    3 \n     5: 0000000000000000     0 SECTION LOCAL  DEFAULT    5 \n     6: 0000000000000000     0 SECTION LOCAL  DEFAULT    4 \n     7: 0000000000000000    12 OBJECT  GLOBAL DEFAULT    2 hello\n</code></pre>\nIf we strip <pre><code>hellow.o</code></pre> it won't work as expected. The file looks like this\n<pre><code>$ xxd hellow.o\n00000000: 7f45 4c46 0201 0100 0000 0000 0000 0000  .ELF............\n00000010: 0100 3e00 0100 0000 0000 0000 0000 0000  ..>.............\n00000020: 0000 0000 0000 0000 9801 0000 0000 0000  ................\n00000030: 0000 0000 4000 0000 0000 4000 0900 0800  ....@.....@.....\n00000040: 4865 6c6c 6f20 576f 726c 6400 0047 4343  Hello World..GCC\n00000050: 3a20 2844 6562 6961 6e20 362e 332e 302d  : (Debian 6.3.0-\n00000060: 3138 2b64 6562 3975 3129 2036 2e33 2e30  18+deb9u1) 6.3.0\n00000070: 2032 3031 3730 3531 3600 0000 0000 0000   20170516.......\n00000080: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000090: 0000 0000 0000 0000 0100 0000 0400 f1ff  ................\n000000a0: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n000000b0: 0000 0000 0300 0100 0000 0000 0000 0000  ................\n000000c0: 0000 0000 0000 0000 0000 0000 0300 0200  ................\n000000d0: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n000000e0: 0000 0000 0300 0300 0000 0000 0000 0000  ................\n000000f0: 0000 0000 0000 0000 0000 0000 0300 0500  ................\n00000100: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000110: 0000 0000 0300 0400 0000 0000 0000 0000  ................\n00000120: 0000 0000 0000 0000 0a00 0000 1100 0200  ................\n00000130: 0000 0000 0000 0000 0c00 0000 0000 0000  ................\n00000140: 0068 656c 6c6f 772e 6300 6865 6c6c 6f00  .hellow.c.hello.\n00000150: 002e 7379 6d74 6162 002e 7374 7274 6162  ..symtab..strtab\n00000160: 002e 7368 7374 7274 6162 002e 7465 7874  ..shstrtab..text\n00000170: 002e 6461 7461 002e 6273 7300 2e63 6f6d  ..data..bss..com\n00000180: 6d65 6e74 002e 6e6f 7465 2e47 4e55 2d73  ment..note.GNU-s\n00000190: 7461 636b 0000 0000 0000 0000 0000 0000  tack............\n000001a0: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n000001b0: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n000001c0: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n000001d0: 0000 0000 0000 0000 1b00 0000 0100 0000  ................\n000001e0: 0600 0000 0000 0000 0000 0000 0000 0000  ................\n000001f0: 4000 0000 0000 0000 0000 0000 0000 0000  @...............\n00000200: 0000 0000 0000 0000 0100 0000 0000 0000  ................\n00000210: 0000 0000 0000 0000 2100 0000 0100 0000  ........!.......\n00000220: 0300 0000 0000 0000 0000 0000 0000 0000  ................\n00000230: 4000 0000 0000 0000 0c00 0000 0000 0000  @...............\n00000240: 0000 0000 0000 0000 0800 0000 0000 0000  ................\n00000250: 0000 0000 0000 0000 2700 0000 0800 0000  ........'.......\n00000260: 0300 0000 0000 0000 0000 0000 0000 0000  ................\n00000270: 4c00 0000 0000 0000 0000 0000 0000 0000  L...............\n00000280: 0000 0000 0000 0000 0100 0000 0000 0000  ................\n00000290: 0000 0000 0000 0000 2c00 0000 0100 0000  ........,.......\n000002a0: 3000 0000 0000 0000 0000 0000 0000 0000  0...............\n000002b0: 4c00 0000 0000 0000 2e00 0000 0000 0000  L...............\n000002c0: 0000 0000 0000 0000 0100 0000 0000 0000  ................\n000002d0: 0100 0000 0000 0000 3500 0000 0100 0000  ........5.......\n000002e0: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n000002f0: 7a00 0000 0000 0000 0000 0000 0000 0000  z...............\n00000300: 0000 0000 0000 0000 0100 0000 0000 0000  ................\n00000310: 0000 0000 0000 0000 0100 0000 0200 0000  ................\n00000320: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000330: 8000 0000 0000 0000 c000 0000 0000 0000  ................\n00000340: 0700 0000 0700 0000 0800 0000 0000 0000  ................\n00000350: 1800 0000 0000 0000 0900 0000 0300 0000  ................\n00000360: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000370: 4001 0000 0000 0000 1000 0000 0000 0000  @...............\n00000380: 0000 0000 0000 0000 0100 0000 0000 0000  ................\n00000390: 0000 0000 0000 0000 1100 0000 0300 0000  ................\n000003a0: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n000003b0: 5001 0000 0000 0000 4500 0000 0000 0000  P.......E.......\n000003c0: 0000 0000 0000 0000 0100 0000 0000 0000  ................\n000003d0: 0000 0000 0000 0000                      ........\n</code></pre>\n",
            "votes": "1",
            "user": "sudhackar",
            "time": "Feb 18, 2020 at 12:33",
            "is_accepted": false,
            "comments": [
                {
                    "user": "PhilipRoman",
                    "text": "<span class=\"comment-copy\">If nothing else comes up, I'm going to award the bounty to your answer, because by taking a closer look at the symbols, I realized that I was missing an empty, zero-filled symbol which ELF files require. After the change, GCC and Clang still refuse to link the files, but it works with TCC. The original question still stands - what magic does GCC and Clang expect in object files that I'm missing?</span>",
                    "time": null
                },
                {
                    "user": "sudhackar",
                    "text": "<span class=\"comment-copy\">I am reading source code for <code>nm</code>. Will update when I find what's the reason for this.</span>",
                    "time": null
                },
                {
                    "user": "sudhackar",
                    "text": "<span class=\"comment-copy\"><code>elf_slurp_symbol_table</code> from elfcode.h in binutils returns 0 for your file for nm to read symbols for <code>nm</code>. Then the error is printed out from <code>display_rel_file</code>  in line nm.c:1126 for binutils 2.34 for me.</span>",
                    "time": null
                }
            ]
        }
    ]
}