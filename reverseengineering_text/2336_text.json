{
    "title": "windbg crashdump process by pid from kernel",
    "link": "https://reverseengineering.stackexchange.com/questions/2336/windbg-crashdump-process-by-pid-from-kernel",
    "content": "What is the best way to dump user space process by pid debugging the kernel with windbg? I'm able to attach to the process from user-space with windbg and generate crash by .dump, but how would I do it from the kernel for only a single process and not generate crash dump of the whole kernel?\n",
    "votes": "5",
    "answers": 2,
    "views": "1k",
    "tags": [
        "tools",
        "windows",
        "windbg",
        "dumping"
    ],
    "user": "gljiva",
    "time": "Jun 26, 2013 at 10:24",
    "comments": [
        {
            "user": "Thomas Weller",
            "text": "Is there any particular reason / use case you'd like to do it this way and not via a user mode session?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "You should try using <pre><code>.writemem</code></pre>\nFor example:\n<pre><code>.writemem c:\\www.exe 0x400000 0xE3000\n</code></pre>\nwhere <pre><code>0x400000</code></pre> is the main executable's image base. \nExtract it from <pre><code>pEPROCESS->SectionBaseAddress</code></pre>, <pre><code>0xE3000</code></pre> is <pre><code>SizeOfImage</code></pre> as in PE header, and <pre><code>c:\\www.exe</code></pre> is the output file.\n",
            "votes": "2",
            "user": "asheeshr",
            "time": "Jun 26, 2013 at 12:35",
            "is_accepted": false,
            "comments": [
                {
                    "user": "gljiva",
                    "text": "<span class=\"comment-copy\">I would like to get all the associated memory pages (mostly interested in heap) of the process. Doing a writemem for each one of them is a lot of work so would prefer to trigger crash dump and get everything in one file automatically if possible.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "Dumping a process in user mode (.dump /ma) will dump all of its virtual memory. This includes memory which is currently paged to disk. It will be paged in during the dump process.\nKernel debugging is close to debugging physical memory only. So even if you manage to dump all physical memory of the process, you only have the part which is called \"WorkingSet\". It would not be a complete dump, especially you couldn't use it for debugging .NET.\nSo, finally, even if it's possible somehow, you'll not get the same results.\n",
            "votes": "1",
            "user": "Thomas Weller",
            "time": "Dec 13, 2013 at 9:38",
            "is_accepted": false,
            "comments": []
        }
    ]
}