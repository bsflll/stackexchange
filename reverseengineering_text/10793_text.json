{
    "title": "IDA Pro failed to display the program in graph mode",
    "link": "https://reverseengineering.stackexchange.com/questions/10793/ida-pro-failed-to-display-the-program-in-graph-mode",
    "content": "i am a complete beginner with IDA and I have just tried to follow a tutorial on how to unpack UPX. \nIn the tutorial IDA looks like this: \n\nWhen I try to get the graphical view like in the tutorial an error message appears:\n\nI cannot find the Names window too, please help me.\nHere is how IDA Pro looks like at the moment:\nhttps://i.sstatic.net/cWAQa.png\nVersion: IDA Pro 6.5\nSorry for those noob questions, but I am confused.\n",
    "votes": "5",
    "answers": 2,
    "views": "8k",
    "tags": [
        "ida",
        "unpacking"
    ],
    "user": "L. Resnik",
    "time": "Sep 4, 2015 at 7:48",
    "comments": [
        {
            "user": "DOD",
            "text": "I know you are learning  ida, but use ida for unpack/dynamic reverse (my experience) is not good idea.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "IDA can only display functions in graphical mode if they have a well-defined start and end address. Normally, the start and end address are determined from the disassembly - the start address is the target address of <pre><code>call</code></pre> instructions, the end address is where the code has a <pre><code>ret</code></pre> instruction (*).\nIn your case, IDA failed to make a function from your code, probably because there is no call to <pre><code>start</code></pre>, and maybe there's not even a <pre><code>ret</code></pre> at the end. You can try to fix that by moving the cursor to the <pre><code>start</code></pre> label and pressing the <pre><code>P</code></pre> key. Once your code is defined as a function, the space key should switch between graphical view and assembly view just like your tutorial says.\n(*) Actually, it's a bit more complicated; some parts of the function may be behind the <pre><code>ret</code></pre>; but IDA detects this from jumps within the function.\n",
            "votes": "5",
            "user": "Guntram Blohm",
            "time": "Sep 4, 2015 at 7:12",
            "is_accepted": false,
            "comments": [
                {
                    "user": "L. Resnik",
                    "text": "<span class=\"comment-copy\">Pressing the \"p\" key on EP results in: <code>UPX1:00486DA3: The function has undefined instruction/data at the specified address. Your request has been put in the autoanalysis queue.</code> Thank you for your answer so far, interesting!</span>",
                    "time": null
                },
                {
                    "user": "tmr232",
                    "text": "<span class=\"comment-copy\">This means that IDA can't define the function. Probably since it is not yet fully unpacked.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "I realize this is very old, but in most cases this is solved easily - check if you are under a procedure context, for example if you searched for a string value then go to the place the label is used (pressing x) and then it will show the graphical view\n",
            "votes": "-1",
            "user": "shimi_tap",
            "time": "Jul 9, 2018 at 19:53",
            "is_accepted": false,
            "comments": []
        }
    ]
}