{
    "title": "Angr considers REP instruction as the end of a basic block",
    "link": "https://reverseengineering.stackexchange.com/questions/31680/angr-considers-rep-instruction-as-the-end-of-a-basic-block",
    "content": "I'm developing a python script for angr that has to find all the basic blocks present in each function in a binary. I have noticed that angr splits the basic blocks when it finds a <pre><code>REP</code></pre> instruction, I'm wondering if I can tell angr to not split basic blocks when it encounters <pre><code>REP</code></pre> instructions with the API or if I have to do it manually.\nThis is a snippet of my code:\n<pre><code>p = angr.Project(sys.argv[1], auto_load_libs=False, main_opts={'base_addr': 0} )\ncfg = p.analyses.CFGFast()\ncfg.normalize()\n\nfor func_node in cfg.functions.values():\n    for block in func_node.blocks:\n        c = block.capstone\n        for i in c.insns:\n            * operations *\n\n</code></pre>\nThis is an example of a basic block that ends with a <pre><code>REP</code></pre> instruction:\n\nThank you in advance.\n",
    "votes": "2",
    "answers": 0,
    "views": "78",
    "tags": [
        "disassembly",
        "python",
        "disassemblers",
        "angr"
    ],
    "user": "Luca",
    "time": "Mar 17, 2023 at 12:58",
    "comments": [
        {
            "user": "julian",
            "text": "If an answer is not forthcoming here you can also try asking on their github repo or in their slack channel\n",
            "time": null
        },
        {
            "user": "Luca",
            "text": "@julian ok I'll try, thank you\n",
            "time": null
        }
    ],
    "answers_data": []
}