{
    "title": "Exporting/Importing all function info from one ghidra program to another",
    "link": "https://reverseengineering.stackexchange.com/questions/23318/exporting-importing-all-function-info-from-one-ghidra-program-to-another",
    "content": "I'm looking for a way to export all infos about a function (Call signature including custom storage, local symbols, etc) in a ghidra program and import them into another ghidra program, but at a different address, and to do that automatically for 30-50 functions.\nThis is within the context of a very large game executable, enough so that any form of full analysis is way too cumbersome for my needs, and each game patch shuffles most of the addresses. I already have most of that automated, but through manually defining serialiazation code for function elements like parameters, and was wondering if there was any better way.\n",
    "votes": "1",
    "answers": 0,
    "views": "2k",
    "tags": [
        "decompilation",
        "ghidra"
    ],
    "user": "Strackeror",
    "time": "Feb 22, 2020 at 18:02",
    "comments": [
        {
            "user": "ghidrauto",
            "text": "I am dealing with a similar situation. did you ever find a solution to this?\n",
            "time": null
        },
        {
            "user": "Strackeror",
            "text": "@ghidrauto I never found a built-in solution no, so I wrote scripts to handle it myself, you can find tthem there : github.com/Strackeror/GhidraScripts\n",
            "time": null
        }
    ],
    "answers_data": []
}