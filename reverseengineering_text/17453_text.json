{
    "title": "How do you use the Radare debugger with command line arguments (parameters)?",
    "link": "https://reverseengineering.stackexchange.com/questions/17453/how-do-you-use-the-radare-debugger-with-command-line-arguments-parameters",
    "content": "If I want to debug <pre><code>ls</code></pre> I can run,\n<pre><code>radare -d /bin/ls\n</code></pre>\nBut, how do I provide an argument or parameter to <pre><code>ls</code></pre>? Like I would do if I wanted to run <pre><code>radare -d /bin/ls -1</code></pre>. I've tried it like that without quotes, which returns \n\nradare2: invalid option -- '1'\n\nI've also tried quoting the whole thing\n<pre><code>radare2 -d \"/bin/ls -1\"\nCould not execvp: No such file or directory\n[w] Cannot open 'dbg:///bin/ls\\ -1' for writing.\n</code></pre>\nThe Radare2book's \"Basic Debugger Session\" says , \"or you can start a new program by specifying its name and parameters\", but it's not clear how you specify the parameters.\n",
    "votes": "4",
    "answers": 2,
    "views": "6k",
    "tags": [
        "debugging",
        "debuggers",
        "radare2"
    ],
    "user": "Evan Carroll",
    "time": "Feb 13, 2018 at 2:56",
    "comments": [],
    "answers_data": [
        {
            "content": "Seems like radare has problems with passing arguments starting with dash (\"-\"). Please consider open an issue.\nAnyway, you can pass arguments to radare2 debugged program in several ways.\nThe simplest way is:\n<pre><code>r2 -d program arg1 arg2 arg3\n</code></pre>\n\nr2 is an alias for radare2.\n-d is telling radare2 to debug the execuable.\narg1..3 are the arguments passed to the executable by radare2.\n\nFor example:\n<pre><code>$ r2 -d echo Hello, World!\nProcess with PID 4755 started...\n= attach 4755 4755\nbin.baddr 0x00400000\nUsing 0x400000\nasm.bits 64\n -- You haxor! Me jane?\n\n[0x7f9b1b000c30]> dc\nHello, World!\n</code></pre>\nAnother way is using the <pre><code>ood</code></pre> command inside radare2 shell:\nExecute <pre><code>radare2 ./program</code></pre>, then type <pre><code>ood arg1 arg2 arg3</code></pre>. The <pre><code>ood</code></pre> command is used to \"reopen in debugger mode (with args)\".\n<pre><code>$ r2 /bin/ls\n -- Use V! to enter into the visual panels mode (dwm style)\n\n[0x004049a0]> doo -la\nProcess with PID 4757 started...\nFile dbg:///bin/ls  -la reopened in read-write mode\n= attach 4757 4757\n4757\n\n[0x7f5f36600c30]> dc\ntotal 206\ndrwxrwxrwx 0 root root   512 Feb 13 04:25 .\ndrwxrwxrwx 0 root root   512 Jan 16 05:30 ..\n</code></pre>\nYou can also call <pre><code>ood</code></pre> with dynamic parameters using backticks. For example we want debug our program using the content from a file on our system as an arguments:\n<pre><code>ood `!cat file.txt`\n</code></pre>\nSay file.txt content is 'foo bar' so this equivalent to executing <pre><code>ood foo bar</code></pre>\n\nbackticks are used for passing the output of radare2 commands.\n! is running the given command as in system(3).\n\nAnother way to pass arguments to radare2 debugged program is by using <pre><code>rarun2</code></pre> profile files:\n<pre><code>$ r2 -R profile.rr2 -d program\n$ cat profile.rr2\n#!/usr/bin/rarun2\narg1=foo\narg2=bar\n</code></pre>\n\n-R [rarun2]  specify rarun2 profile to load.\n",
            "votes": "5",
            "user": "Megabeets",
            "time": "Feb 13, 2018 at 12:43",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Dacav",
                    "text": "<span class=\"comment-copy\">The last bit of this question seems to be wrong (possibly reporting an old behaviour?) I found that the correct way of specifying a profile is via <code>-r</code>, not <code>-R</code>. <code>-R</code> can be used to specify directives without using a file.  In other words: <code>r2 -r profile.rr2 -d program</code></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "<pre><code>rarun2</code></pre>\nThis comes under the purview of <pre><code>rarun2</code></pre> which isn't documented in the radare2 book, but instead in radare2-explorations. From <pre><code>man rarun2</code></pre>\n\nThe <pre><code>rr2</code></pre> (<pre><code>rarun2</code></pre>) configuration file accepts the following directives, described as key=value entries and comments defined as lines starting with '#'.\n<pre><code>arg[0-N]</code></pre>    set value for argument N passed to the program\n\nSo you can run that simply by either creating a profile, or doing this\n<pre><code>r2 -R arg0=\"-1\" -d /bin/ls\n</code></pre>\n",
            "votes": "0",
            "user": "Evan Carroll",
            "time": "Feb 13, 2018 at 3:25",
            "is_accepted": false,
            "comments": []
        }
    ]
}