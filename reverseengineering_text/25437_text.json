{
    "title": "crc - reverse engineering GAL16V8 checksum method",
    "link": "https://reverseengineering.stackexchange.com/questions/25437/crc-reverse-engineering-gal16v8-checksum-method",
    "content": "While working with the GAL16V8 (an old programmable logic device), I found out that the Programmers Electronic Signature (PES) of each GAL has a checksum byte\nI've read the PES of some GALs but was unable find out the kind of checksum used. In the sequences below, the last byte is supposed to be the checksum.\n<pre><code>00 03 1A A1 00 00 00 30\n00 05 50 A1 CD A6 03 06\n00 05 1A A1 CD A4 03 06\n00 02 1A 8F 00 00 00 15\n00 02 1A 81 00 00 00 10\n</code></pre>\nHow do I identify the checksum method used?\n",
    "votes": "2",
    "answers": 1,
    "views": "294",
    "tags": [
        "firmware",
        "hardware",
        "crc",
        "cryptography"
    ],
    "user": "dwery",
    "time": "Jul 3, 2020 at 22:56",
    "comments": [],
    "answers_data": [
        {
            "content": "If you can't find documentation indicating the checksum algorithm, you could try reversing the software that reads or writes the checksum. I'm not familiar with GAL, but from the site you linked, there are references to programming software [1] which should be writing the checksum or verifying it before programming the chip.\n[1] http://www.armory.com/~rstevew/Public/Pgmrs/GAL/intro.htm\n",
            "votes": "1",
            "user": "wcerfgba",
            "time": "Jul 5, 2020 at 12:15",
            "is_accepted": false,
            "comments": [
                {
                    "user": "dwery",
                    "text": "<span class=\"comment-copy\">unfortunately this is the checksum of something that is on a special part of the chip that doesn’t get reprogrammed, so you don’t need to recompute it when verifying.</span>",
                    "time": null
                }
            ]
        }
    ]
}