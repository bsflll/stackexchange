{
    "title": "grep -E with Radare2",
    "link": "https://reverseengineering.stackexchange.com/questions/18891/grep-e-with-radare2",
    "content": "With Radare2, I love the <pre><code>iI</code></pre> command.  \nI want to limit the output with grep or radare's own grep syntax.\nHow do I run a <pre><code>iI | grep -E 'bits | pic | stripped'</code></pre> against my binary?\n<pre><code>[0x100001200]> iI\narch     x86\nbinsz    38688\nbintype  mach0\nbits     64\n....\n..\n.\n</code></pre>\nMy intention is to run this command inside a python script using <pre><code>r2pipe</code></pre>.\n",
    "votes": "3",
    "answers": 1,
    "views": "2k",
    "tags": [
        "radare2"
    ],
    "user": "rustyMagnet",
    "time": "Jul 25, 2018 at 5:08",
    "comments": [],
    "answers_data": [
        {
            "content": "Radare's grep is done by using the <pre><code>~</code></pre> character.\n<pre><code> ~?\n\n|Usage: [command]~[modifier][word,word][endmodifier][[column]][:line]\n</code></pre>\nSo to have the output you want just run:\n<pre><code>iI~bits,pic,stripped\n\n[0x100001200]> iI~bits,pic,stripped\nbits     64\npic      true\nstripped true\n</code></pre>\nThe same command you should run in your script. There's a lot of more that this grep can do. To get the help of it just run the <pre><code>~?</code></pre>\n",
            "votes": "6",
            "user": "Evan Carroll",
            "time": "Oct 27, 2018 at 11:05",
            "is_accepted": true,
            "comments": [
                {
                    "user": "rustyMagnet",
                    "text": "<span class=\"comment-copy\">Thanks. Just what I was looking for. Next I will try and work out why the json flag + grep instruction doesn't work with: <code>iIj~bits,pic,stripped</code>. But I can do that solo. Thanks again.</span>",
                    "time": null
                },
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">json supports a limited grep in a form: <code>iIj~{bits}</code> but you would have to grep for the three things separately.</span>",
                    "time": null
                },
                {
                    "user": "rustyMagnet",
                    "text": "<span class=\"comment-copy\">That actually gives me a better answer.  I can now use <code>iIj~{stripped}</code> as it return the value (true / false) instead of the Key Value Pair you get with <code>iI~stripped</code> (stripped true)</span>",
                    "time": null
                }
            ]
        }
    ]
}