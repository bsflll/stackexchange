{
    "title": "When analysing a PE (.exe) in IDA Pro how can I jump to the 'user code' section and skip all the header/libary code?",
    "link": "https://reverseengineering.stackexchange.com/questions/10691/when-analysing-a-pe-exe-in-ida-pro-how-can-i-jump-to-the-user-code-section",
    "content": "Suppose I'm disassembling helloworld.exe (a program that outputs the string \"hello world\") and want to see the user code or code section for the file in IDA Pro.\nIn what address would the user code be available?\nWhen I mean user code I mean the .code section below\n<pre><code>HelloWorld db \"Hello, world!\",0\nmsgTitle db \"Hello world program\",0\n\n.code\nStart:\n         push    offset msgTitle\n         push    offset HelloWorld\n         push    0\n         call    MessageBoxA\n\n         push 0\n         call ExitProcess\nends\nend Start\n</code></pre>\nBonus Question: When not using IDA Pro how can I determine the address of the user code of a Portable Executable?\n",
    "votes": "1",
    "answers": 1,
    "views": "4k",
    "tags": [
        "ida",
        "executable"
    ],
    "user": "Sad CRUD Developer",
    "time": "May 11, 2022 at 13:30",
    "comments": [
        {
            "user": "Jongware",
            "text": "What if the programmer also wrote the \"library code\"? Anyway, most decompilers start decompiling at the program's Initial Code Point (taken from the PE Header), which typically is a very small wrapper that locates arguments, environment, and so on and then simply calls <pre><code>main</code></pre>.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "If You use IDA: When You open Your binary in IDA, navigate to drop-box in up-right corner and choose Entry points. You will see red point, which indicates the address of entry point:\n\nWithout IDA: If You need to see Entry point of your binary without IDA, you need to parse PE and examine AddressOfEntryPoint value, which is RVA from base to the beginning of user-code [usually]\n",
            "votes": "2",
            "user": "Denis Laskov",
            "time": "Aug 23, 2015 at 4:30",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Sad CRUD Developer",
                    "text": "<span class=\"comment-copy\">So without IDA I go to the Optional Header Section which shows the executable information and look at the AddressOfEntryPoint value. From there I just just find the address of the first line in the disabemly window and add the RVA of the AddressOfEntryPoint value?</span>",
                    "time": null
                },
                {
                    "user": "Denis Laskov",
                    "text": "<span class=\"comment-copy\">When You got AddressOfEntryPoint RVA value, You load binary in debugger, see base address, add RVA, like: base: 400000 + RVA 1CAA = address of user code should be 401CAA. Set breakpoint here and press Go.  Or, in various debuggers, you can run directly to entry point.</span>",
                    "time": null
                }
            ]
        }
    ]
}