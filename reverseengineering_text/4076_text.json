{
    "title": "gdb setting fs register on Linux",
    "link": "https://reverseengineering.stackexchange.com/questions/4076/gdb-setting-fs-register-on-linux",
    "content": "I'm debugging an ELF 64-bit binary using <pre><code>gdb</code></pre> and I notice that the <pre><code>%fs</code></pre> register is set to <pre><code>0x63</code></pre>. For some testing that I'd like to perform I'd like to set the <pre><code>%fs</code></pre> register to <pre><code>0x00</code></pre>.\nI tried doing a <pre><code>set $fs=0x0</code></pre> but the value wouldn't change. In some cases I got a:\n<pre><code>Couldn't write registers: Input/output error.\n</code></pre>\nIs there any way I could set the value for the <pre><code>%fs</code></pre> register? I'm also open to modifying the binary, adding inline assembly to the source, etc.\nEDIT : Currently, I'm trying this out by attaching to a process rather than running it from within <pre><code>gdb</code></pre>.\nA screenshot to illustrate the problem :\n",
    "votes": "3",
    "answers": 1,
    "views": "3k",
    "tags": [
        "linux",
        "gdb",
        "x86-64"
    ],
    "user": null,
    "time": "Apr 15, 2014 at 19:15",
    "comments": [],
    "answers_data": [
        {
            "content": "Low 2 bits have to be set or you will get an <pre><code>EIO</code></pre> error. Only the low 16 bits manage to get set anyways.\nSnippet from <pre><code>arch/x86_64/kernel/ptrace.c</code></pre>:\n<pre><code>case offsetof(struct user_regs_struct,fs):\n    if (value && (value & 3) != 3)\n        return -EIO;\n    child->thread.fsindex = value & 0xffff; \n    return 0;\n</code></pre>\nThat said, setting to <pre><code>0x00</code></pre> shouldn't be problematic per the code and per my testing.\n<pre><code>(gdb) set $fs=3\n(gdb) info register fs\nfs             0x3      3\n(gdb) set $fs=1\nCouldn't write registers: Input/output error.\n(gdb) set $fs=0\n(gdb) info register fs\nfs             0x0      0\n(gdb) set $fs=0xffffffff\n(gdb) info register fs\nfs             0xffff   65535\n</code></pre>\n",
            "votes": "2",
            "user": "perror",
            "time": "Apr 15, 2014 at 19:06",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user1743",
                    "text": "<span class=\"comment-copy\">would this behavior vary if a process were being traced?</span>",
                    "time": null
                }
            ]
        }
    ]
}