{
    "title": "how use pefile to check for NX, ASLR, SAFESEH and CFG (Control Flow Guard) flag [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/9293/how-use-pefile-to-check-for-nx-aslr-safeseh-and-cfg-control-flow-guard-flag",
    "content": "Closed. This question needs details or clarity. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Add details and clarify the problem by editing this post.\n\n\nClosed 9 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\ni use <pre><code>pefile</code></pre> library for help me in vulnerability research,malware analysis  and exploit development and try to write script help me to know which protections binary use\ni know <pre><code>mona.py</code></pre> from corelan team but i just need to write some tools will help me without use mona <pre><code>because i'm not use immunity debugger i use python debugger</code></pre>\n====update=========\ni wrote this script  \n<pre><code>import os.path\nimport sys\nimport pefile\n\nclass PESecurityCheck:\n\n  IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE = 0x0040\n  IMAGE_DLLCHARACTERISTICS_NX_COMPAT = 0x0100\n  IMAGE_DLLCHARACTERISTICS_NO_SEH = 0x0400\n  IMAGE_DLLCHARACTERISTICS_GUARD_CF = 0x4000\n\n\n\n  def __init__(self,pe):\n    self.pe = pe\n\n  def aslr(self):\n    return bool(self.pe.OPTIONAL_HEADER.DllCharacteristics & self.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE)\n\n  def dep(self):\n    return bool(self.pe.OPTIONAL_HEADER.DllCharacteristics & self.IMAGE_DLLCHARACTERISTICS_NX_COMPAT)\n\n  def seh(self):\n    return bool(self.pe.OPTIONAL_HEADER.DllCharacteristics & self.IMAGE_DLLCHARACTERISTICS_NO_SEH)\n\n  def CFG(self):\n    return bool(self.pe.OPTIONAL_HEADER.DllCharacteristics & self.IMAGE_DLLCHARACTERISTICS_GUARD_CF)\n\nif len(sys.argv) < 2:\n  print 'Usage: %s <file_path>' % sys.argv[0] \n  sys.exit()\n\ndef main():\n  file_path = sys.argv[1]   \n\n  try:\n    if os.path.isfile(file_path):\n      pe = pefile.PE(file_path,True)\n    else:\n      print \"File '%s' not found!\" % file_path     \n      sys.exit(0)  \n  except pefile.PEFormatError:\n    print \"Not a PE file!\"\n    sys.exit(0)  \n\n  ps = PESecurityCheck(pe)\n\n  if ps.aslr():\n    print \"[+] ASLR Enabled\"\n  else:\n    print \"[-] ASLR Not Enabled\"\n\n  if ps.dep():\n    print \"[+] DEP Enabled\"\n  else:\n    print \"[-] DEP Not Enabled\"\n\n  if ps.seh():\n    print \"[+] SEH Enabled\"\n  else:\n    print \"[-] SEH Not Enabled\"\n\n  if ps.CFG():\n    print \"[+]CFG Enabled\"\n  else:\n    print \"[-] CFG Not Enabled\"\n\nif __name__ == '__main__':\n  main()\n</code></pre>\n",
    "votes": "0",
    "answers": 1,
    "views": "3k",
    "tags": [
        "windows",
        "pe",
        "protection"
    ],
    "user": "adri√°n",
    "time": "9 years ago",
    "comments": [],
    "answers_data": [
        {
            "content": "NX:\n<pre><code>IMAGE_OPTIONAL_HEADER.DllCharacteristics & IMAGE_DLLCHARACTERISTICS_NX_COMPAT != 0</code></pre>\nASLR:\n<pre><code>IMAGE_OPTIONAL_HEADER.DllCharacteristics & IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE != 0</code></pre>\nSAFESEH:\n<pre><code>(IMAGE_OPTIONAL_HEADER.DataDirectory[IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG].VirtualAddress != 0)\n&& (IMAGE_OPTIONAL_HEADER.DataDirectory[IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG].Size != 0 )</code></pre>\nCFG:\n<pre><code>IMAGE_OPTIONAL_HEADER.DllCharacteristics & IMAGE_DLLCHARACTERISTICS_GUARD_CF != 0</code></pre>\n",
            "votes": "7",
            "user": "Jason Geffner",
            "time": "Jul 6, 2015 at 14:36",
            "is_accepted": true,
            "comments": []
        }
    ]
}