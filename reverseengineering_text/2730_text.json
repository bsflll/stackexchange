{
    "title": "How to debug Windows Media Player without attach mode?",
    "link": "https://reverseengineering.stackexchange.com/questions/2730/how-to-debug-windows-media-player-without-attach-mode",
    "content": "When I try to debug Windows Media Player and play a movie this error message is shown: \n\nRunning this process under a debugger while using DRM content is not allowed.\n\nBut with <pre><code>drmdbg</code></pre> it can debug <pre><code>wmplayer</code></pre> and play a movie.\nIs there a solution to overcome this?\n",
    "votes": "2",
    "answers": 2,
    "views": "1k",
    "tags": [
        "debuggers",
        "debugging"
    ],
    "user": "studentofmp",
    "time": "Sep 4, 2013 at 9:48",
    "comments": [
        {
            "user": "PSS",
            "text": "What are you using to debug?\n",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "@studentofmp: Please explain what debugger you are using, if \"drmdbg\" does the job, why don't you use that? Also, more careful formatting will more easily get you the attention of the users here ;)\n",
            "time": null
        },
        {
            "user": "studentofmp",
            "text": "@0xC0000022L thanks for this comment but drmdbg it does its own job it is not a debugguer like ollydbg ..\n",
            "time": null
        },
        {
            "user": "Till",
            "text": "Did you try using any debugger stealth plugins for OllyDbg? If not, go ahead and try them, there are many. Next step could possibly be using a kernel mode debugger, e.g. SoftIce or even WinDBG in kernel dbg mode. Last but not least, you could as well remove the debugging detection from the binary you are trying to debug - there are some tutorials on that subject as well.... Just for your entertainment, this would be a simple one: youtube.com/watch?v=h54jlxpyT3w\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Another (not easy) option could be to use a patched version of Wine (as it supports running Windows Media Player) and connect to the GDB remote debugger it offers. While it may sound weird I did that to debug, for example, Themida packed executables.\nYou can download a patch for Wine 1.2 (if I remember correctly) from here:\nhttp://sourceforge.net/projects/zerowine/files/Zerowine%202.0/zerowine.patch/download\n",
            "votes": "2",
            "user": "joxeankoret",
            "time": "Sep 4, 2013 at 8:35",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "DRMDBG is a debugger like OllyDbg, but it seems to be meant for a single executable.\n<pre><code>Call stack of thread 00000E2C\nAddress    Stack      Procedure / arguments                                   Called from        Frame\n01CC9FAC   7C8192E2   ? ntdll.ZwCreateProcessEx                               KERNEL32.7C8192DC\n01CCA9FC   7C802362   ? KERNEL32.CreateProcessInternalW                       KERNEL32.7C80235D\n01CCAA34   0047DD6E   ? <JMP.&kernel32.CreateProcessW>                        drmdbg.0047DD69    01CCAA30\n01CCAA38   0016CF84     ModuleFileName = \"C:\\Program Files\\Windows Media Player\\wmplayer.exe\"\n01CCAA3C   00000000     CommandLine = NULL\n01CCAA40   00000000     pProcessSecurity = NULL\n01CCAA44   00000000     pThreadSecurity = NULL\n01CCAA48   00000000     InheritHandles = FALSE\n01CCAA4C   00000003     CreationFlags = DEBUG_PROCESS|DEBUG_ONLY_THIS_PROCESS\n01CCAA50   00000000     pEnvironment = NULL\n01CCAA54   00000000     CurrentDir = NULL\n01CCAA58   0048A388     pStartupInfo = drmdbg.0048A388\n01CCAA5C   0048A3CC     pProcessInfo = drmdbg.0048A3CC\n01CCAA68   0047E9E3   drmdbg.0047DD0C                                         drmdbg.0047E9DE    01CCAA64\n01CCFF68   0047F10B   ? drmdbg.0047E954                                       drmdbg.0047F106    01CCFF64\n01CCFF74   00422149   drmdbg.0047F0F0                                         drmdbg.00422146    01CCFF70\n</code></pre>\nYou can use WinDbg in a non-invasive way. Using stealth plugins in ollydbg can let you attach to wmplayer.exe. You need to identify antidebugging routines and bypass them.\n",
            "votes": "2",
            "user": "Peter Mortensen",
            "time": "Sep 4, 2013 at 8:50",
            "is_accepted": false,
            "comments": []
        }
    ]
}