{
    "title": "Handling __int64 in IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/20755/handling-int64-in-ida",
    "content": "This is probably something very easy that I'm missing.\nI have this operation \n<pre><code>length_of_userInput = (signed int)(unsigned __int8)userInput >> 1;</code></pre>\nAnd <pre><code>length_of_userInput</code></pre> is currently reading '4LL', type is __int64.\nI'm wondering what is the correct type to give IDA to display '4LL' into a readable int?\nI've tried inputting int, long (becomes __int64), and all __ints (int8,16,32) with no success. \nThis is the assembly:\n<pre><code>mov     rax, [rbp+var_6E8]\nmov     [rbp+userInputBuffer], rax\nmov     rax, [rbp+userInputBuffer]\nmov     rcx, [rbp+auth_string_pointer]\nmov     [rbp+var_528], rcx\nmov     rcx, [rbp+var_528]\nmov     [rbp+var_520], rcx\nmov     rdx, [rbp+var_520]\nmov     [rbp+var_518], rdx\nmov     rdx, [rbp+var_518]\nmov     [rbp+var_510], rdx\nmov     rdx, [rbp+var_510]\nmovzx   esi, byte ptr [rdx]\nand     esi, 1\ncmp     esi, 0\nmov     [rbp+length_of_userInput], rax\nmov     [rbp+var_6F8], rcx\n</code></pre>\n(disclaimer: naming might be wrong. I hope not but I'm not sure :/ )\n",
    "votes": "0",
    "answers": 0,
    "views": "578",
    "tags": [
        "ida",
        "disassembly"
    ],
    "user": "G. Ramistella",
    "time": "Mar 2, 2019 at 18:24",
    "comments": [
        {
            "user": "G. Ramistella",
            "text": "I know I can edit the data type with y. I want to know what data type I should be using.\n",
            "time": null
        },
        {
            "user": "Biswapriyo",
            "text": "The actual data type can be known from the corresponding assembly code. Please add that in your question.\n",
            "time": null
        },
        {
            "user": "G. Ramistella",
            "text": "@Biswapriyo I added it\n",
            "time": null
        }
    ],
    "answers_data": []
}