{
    "title": "APK Tools for Tinder 7.4.0 [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/16291/apk-tools-for-tinder-7-4-0",
    "content": "Closed. This question needs details or clarity. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Add details and clarify the problem by editing this post.\n\n\nClosed 7 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nI wanted to make some Tinder tools, and found some already made APIs.\nI would like go through the process of discovering this private API by myself, since most of the articles are a bit out of date.\n\nI set up mitmproxy to sniff the API, but unfortunately, I couldn't catch any responses beside the tunneling.\nI understood that there was some certificate pinning happening.\nI downloaded the lastest version of APK Tools (2.2.4).\nI am using Oracle Java 8 JDK on a Ubuntu 16.04 VM.\n\nMy issue is the following :\n\nI disassemble the tinder.apk with APK Tools.\nI reassemble it (without any modifications):\n\n\nFirst thing I notice is that filesize from original and the crafted one is different while no modifications were made\n  When I install my new version of Tinder, I can't login to the app.\n\n\nConstraint : I can't use a SSL killer on my phone because of security issues that are implied.\nIs APK Tools a good tool? Is there another way?\n",
    "votes": "2",
    "answers": 1,
    "views": "860",
    "tags": [
        "disassembly",
        "assembly",
        "android",
        "apk",
        "reassembly"
    ],
    "user": "Nvlf",
    "time": "7 years ago",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "FYI here we do \"reverse engineering\", not \"retro-engineering\".\n",
            "time": null
        },
        {
            "user": "Nvlf",
            "text": "For you, what is the difference? According to wikipedia it seems quite similar (source)\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "I haven't heard the term before; to me it sounds like  \"retrofitting\".\n",
            "time": null
        },
        {
            "user": "Nvlf",
            "text": "Oh ok, thanks. It feels like it can have both sense. Fun fact, google brought me to reverse engineering reddit community from the retro engineering keyword.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Probably the app has some additional checks against modification. Try to track down the login error shown, maybe you can find the check which triggers it and disable it. \nInstead of patching the app itself, you can also try an external solution which would target external libraries to bypass pinning. You'll need to find out which SSL library the app uses and how it detects the certificate mismatch, then either patch the library on disk or in memory, at runtime.\nThis post gives some possible solutions that might work for that.\n",
            "votes": "0",
            "user": "Igor Skochinsky",
            "time": "Sep 8, 2017 at 13:09",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Nvlf",
                    "text": "<span class=\"comment-copy\">Thanks a lot for your answer. I'll give it a try then.  About the external solutions, that's why I meant by a SSL Killer. But it needs a rooted phone, and it will most probably disable SSL on every app and connection. And for security purposes, I'd like to avoid this solution.  I've read many papers from researchers, going through certificate pinning on Tinder, and there's no mention of a tampering check, or needs for an external things. That's why I concluded that it's either out of date, or the most probable one, is that I'm not skilled enough since I'm a beginner.</span>",
                    "time": null
                }
            ]
        }
    ]
}