{
    "title": "How to debug a self-debugging process?",
    "link": "https://reverseengineering.stackexchange.com/questions/8716/how-to-debug-a-self-debugging-process",
    "content": "How do you swap debuggers in Windows?\nIn my case, I have a process A which creates a copy of itself:\n<pre><code>CreateProcessA(\"XXX.exe\", NULL, 0x0023f560, 0x0023f560, TRUE,      \n               **DEBUG_ONLY_THIS_PROCESS**, NULL, NULL, 0x0023f5f8, 0x0023f550)\n</code></pre>\nIt, then, debugs its child (Process B) using <pre><code>WaitForDebugEvent(50ms)</code></pre> to modify the control flow of B. After a highly active startup <pre><code>WaitForDebugEvent</code></pre> will time out(Return false) unless I click a button in B. \nQuestion: How do I get rid of the Debugger(Process A) and attach my own debugger to B ?\nI tried to call <pre><code>DebugActiveProcessStop</code></pre> by injection code into A (DLL Injection) as well as by debugging A and calling it from the thread that debugs B. (inline code injection) both ways I get <pre><code>ACCESS_DENIED</code></pre>!\nIf you try to attach a 2nd debugger you get <pre><code>Error 87 (ERROR_INVALID_PARAMETER)</code></pre>.\nEnvironment: Win 7 x64\n",
    "votes": "4",
    "answers": 2,
    "views": "2k",
    "tags": [
        "debugging",
        "winapi"
    ],
    "user": null,
    "time": "Apr 17, 2015 at 16:41",
    "comments": [
        {
            "user": "blabb",
            "text": "second attach  failure should result in error 0xc000048 not error 0n87 the  process may not be  debugging  an exact  copy of itself because it will result in a chain reaction. ( each copy will be copying itself and spawning a child until resource exhaust)\n",
            "time": null
        },
        {
            "user": "peter ferrie",
            "text": "@blabb, the code can create a mutex to prevent that from occurring, see section G.i. in The \"Ultimate\" Anti-Debugging Reference\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Use ProcessHacker to pause the parent process and then try to Stop deattach debugger from Processhacker\n",
            "votes": "2",
            "user": "0xdead",
            "time": "Apr 17, 2015 at 18:08",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "First you have to find for call IsDebuggerPresent and modify return value in EAX register to 0. Then after you have to find call GetCurrentProcessId and modify input parameter with your dummy process id. Second process you have to done before starting of new thread then after you can attach your debugger to that child process.\nI've fetched same situation in all-in-one keylogger\n",
            "votes": "0",
            "user": "ASD",
            "time": "May 14, 2015 at 4:07",
            "is_accepted": false,
            "comments": []
        }
    ]
}