{
    "title": "Search string in all binary pesudo-code",
    "link": "https://reverseengineering.stackexchange.com/questions/21434/search-string-in-all-binary-pesudo-code",
    "content": "How can I search pesudo code  string in all functions in binary with Ida??\nPesudo code I mean when press <pre><code>F5</code></pre> in Ida I can see psedo code of the binary (like in c)\nI want to search for example where there is <pre><code>while</code></pre> string or <pre><code>break</code></pre> string in psudo code\n",
    "votes": "0",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ida",
        "decompilation"
    ],
    "user": "Keystone",
    "time": "Jun 7, 2019 at 13:06",
    "comments": [
        {
            "user": "Paweł Łukasik",
            "text": "please add some example of what do you mean\n",
            "time": null
        },
        {
            "user": "Keystone",
            "text": "@Paweł Łukasik I edit my post with more details\n",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "But pseudo-code is only ever created on-demand, right? Really unclear what it is you want.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "In version 6.x of Ida (tweaks will likely need to be made for more recent versions), you would want walk each <pre><code>Segment</code></pre>, then you can enumerate each <pre><code>Function</code></pre>, and from there, run the hexrays decompiler.\nThis will enumerate all the functions, dump the pseudo code, and then search for the string 'foobar':\n<pre><code>import sys, idc, idautils, idaapi\n\n# Writes out the C function pseudo code, with the starting effective address\n# returns: string\ndef DumpPseudoCode(ea):\n    if not idaapi.init_hexrays_plugin():\n        return \"\"\n\n    f = idaapi.get_func(ea)\n    if f is None:\n        return \"\"\n\n    try:\n        cfunc = idaapi.decompile(f);\n        if cfunc is None:\n            # Failed to decompile\n            return \"\"\n    except:\n        return \"\"\n\n    lines = []\n    sv = cfunc.get_pseudocode();\n    for sline in sv:\n        line = idaapi.tag_remove(sline.line);\n        lines.append(line)\n    return \"\\r\n\".join(lines)\n\n# enumerate all the functions and search for a string in the generated pseudo code\nfor segea in Segments():\n    for funcea in Functions(segea, SegEnd(segea)):\n        ccode = DumpPseudoCode(funcea)\n        if ('foobar' in ccode)\n            # do something\n</code></pre>\n",
            "votes": "3",
            "user": "josh poley",
            "time": "Jun 7, 2019 at 19:33",
            "is_accepted": false,
            "comments": []
        }
    ]
}