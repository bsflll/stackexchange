{
    "title": "reverse javascript crackme encryption method algorithm",
    "link": "https://reverseengineering.stackexchange.com/questions/16634/reverse-javascript-crackme-encryption-method-algorithm",
    "content": "This crackme contains a text input element on the screen and a button to validate\nThe value you enter is set into _inputValue, afterwards you click on a button, the function executes, in the last lines, if selectedOption is 2 it will print \"Congratz\" otherwise there are 5 bad options in the optionsArr.\nafter unpacking and cleaning the main function is :\n<pre><code>Password: <input/>\n\n<button>Check</button>\n<script id=\"urchin\">\n    (function () {\n        var optionsArr = [\n            function () {\n                console.warn(\"boo\")\n            },\n            function () {\n                console.warn(\":(\")\n            },\n            function () {\n                console.log(\"Congratz!\")\n            },\n            function () {\n                console.warn(\"allmost there\")\n            },\n            function () {\n                console.warn(\"muhaha\")\n            },\n            function () {\n                console.warn(\"nahhh\")\n            },\n            function () {\n                console.warn(\"not even close\")\n            }\n        ];\n        var mainFunction = function () {\n            var arr = [];\n            for (var i = 0; i < 256; i++) {\n                arr[i] = i;\n            }\n            var inputVal = document.getElementsByTagName('input')[0].value;\n            var varX = 0;\n//            for (var i2 = 0; i2 < 256; i2++) {\n//                var secret = 'click';\n//                varX = (varX + arr[i2] + secret.charCodeAt(i2 % 5)) % 256;\n//                arr[i2] ^= arr[varX];\n//                arr[varX] ^= arr[i2];\n//                arr[i2] ^= arr[varX];\n//            }\n            arr = [99, 116, 115, 37, 16, 120, 211, 90, 197, 22, 166, 63, 146, 59, 123, 237, 93, 44, 76, 118, 168, 91, 55, 187, 62, 220, 135, 49, 127, 185, 153, 8, 66, 155, 152, 181, 117, 149, 31, 87, 169, 6, 172, 34, 101, 134, 107, 157, 199, 231, 124, 2, 243, 35, 241, 139, 68, 3, 159, 86, 77, 225, 105, 29, 144, 19, 32, 42, 227, 147, 133, 15, 160, 73, 190, 148, 82, 97, 170, 201, 212, 14, 18, 13, 193, 121, 143, 141, 182, 122, 21, 108, 112, 111, 217, 60, 250, 27, 137, 244, 191, 38, 171, 214, 248, 132, 228, 43, 232, 213, 223, 129, 28, 64, 247, 205, 138, 95, 202, 235, 61, 119, 224, 88, 238, 206, 230, 94, 195, 5, 179, 54, 72, 92, 136, 98, 188, 200, 173, 226, 198, 4, 71, 196, 126, 9, 69, 110, 84, 48, 85, 210, 30, 180, 229, 216, 162, 56, 75, 0, 67, 253, 163, 167, 53, 26, 7, 12, 174, 57, 130, 194, 209, 165, 1, 140, 183, 70, 23, 89, 150, 25, 145, 104, 233, 74, 142, 151, 222, 65, 207, 96, 154, 218, 106, 131, 255, 109, 254, 33, 113, 164, 203, 40, 246, 83, 192, 236, 189, 78, 158, 234, 177, 175, 161, 251, 100, 221, 219, 103, 50, 41, 242, 10, 249, 240, 20, 184, 24, 80, 52, 51, 81, 11, 156, 245, 114, 239, 186, 125, 17, 204, 128, 47, 36, 39, 215, 208, 46, 176, 178, 58, 45, 102, 252, 79];\n            var idx = varX = 0;\n            var cmpStr = '';\n            for (var i3 = idx; i3 < inputVal.length; i3 += 2) {\n                idx = (idx + 1) % 256;\n                varX = (varX + arr[idx]) % 256;\n                arr[idx] ^= arr[varX];\n                arr[varX] ^= arr[idx];\n                arr[idx] ^= arr[varX];\n                var curHex = inputVal.substr(i3, 2);\n                var hex2int = parseInt(curHex, 16);\n                var charCode = hex2int ^ arr[(arr[idx] + arr[varX]) % 256];\n                cmpStr += String.fromCharCode(charCode);\n            }\n            var selectedOption = cmpStr.charCodeAt(cmpStr.charCodeAt(0) % cmpStr.length) % 6;\n\n            if (cmpStr != 'input128' && selectedOption == 2) selectedOption++;\n            optionsArr[selectedOption]();\n        };\n        var btn = document.getElementsByTagName('button')[0];\n        if (typeof(btn.addEventListener) != typeof(mainFunction)) {\n            btn.attachEvent('onclick', mainFunction);\n        } else {\n            btn.addEventListener('click', mainFunction, true);\n        }\n        btn = document.getElementById('urchin');\n        btn.parentNode.removeChild(btn);\n    })();\n</script>\n</code></pre>\nI understand my input after decrypt needs to be \"input128\", how can I reverse the process to encrypt \"input128\" ? \n\nBTW, It's using rc4 encryption\n",
    "votes": "1",
    "answers": 2,
    "views": "553",
    "tags": [
        "obfuscation",
        "javascript"
    ],
    "user": "James W.",
    "time": "Oct 26, 2017 at 10:51",
    "comments": [],
    "answers_data": [
        {
            "content": "To extend on EWD-0- about the reversibility of RC4 here's how I tried it:\nFrom your actual code and reversing it a little to get \"input128\" encoded:\n<pre><code>arr = [99, 116, 115, 37, 16, 120, 211, 90, 197, 22, 166, 63, 146, 59, 123, 237, 93, 44, 76, 118, 168, 91, 55, 187, 62, 220, 135, 49, 127, 185, 153, 8, 66, 155, 152, 181, 117, 149, 31, 87, 169, 6, 172, 34, 101, 134, 107, 157, 199, 231, 124, 2, 243, 35, 241, 139, 68, 3, 159, 86, 77, 225, 105, 29, 144, 19, 32, 42, 227, 147, 133, 15, 160, 73, 190, 148, 82, 97, 170, 201, 212, 14, 18, 13, 193, 121, 143, 141, 182, 122, 21, 108, 112, 111, 217, 60, 250, 27, 137, 244, 191, 38, 171, 214, 248, 132, 228, 43, 232, 213, 223, 129, 28, 64, 247, 205, 138, 95, 202, 235, 61, 119, 224, 88, 238, 206, 230, 94, 195, 5, 179, 54, 72, 92, 136, 98, 188, 200, 173, 226, 198, 4, 71, 196, 126, 9, 69, 110, 84, 48, 85, 210, 30, 180, 229, 216, 162, 56, 75, 0, 67, 253, 163, 167, 53, 26, 7, 12, 174, 57, 130, 194, 209, 165, 1, 140, 183, 70, 23, 89, 150, 25, 145, 104, 233, 74, 142, 151, 222, 65, 207, 96, 154, 218, 106, 131, 255, 109, 254, 33, 113, 164, 203, 40, 246, 83, 192, 236, 189, 78, 158, 234, 177, 175, 161, 251, 100, 221, 219, 103, 50, 41, 242, 10, 249, 240, 20, 184, 24, 80, 52, 51, 81, 11, 156, 245, 114, 239, 186, 125, 17, 204, 128, 47, 36, 39, 215, 208, 46, 176, 178, 58, 45, 102, 252, 79];\nvar idx = varX = 0;\nvar cmpStr = '';\nfor (var i3 = idx; i3 < 'input128'.length; i3 += 1) {\n  idx = (idx + 1) % 256;\n  varX = (varX + arr[idx]) % 256;\n  arr[idx] ^= arr[varX];\n  arr[varX] ^= arr[idx];\n  arr[idx] ^= arr[varX];\n\n  var hex2int = 'input128'.charCodeAt(i3);\n  var charCode = hex2int ^ arr[(arr[idx] + arr[varX]) % 256];\n\n  cmpStr += charCode.toString(16)+\" \";\n}\nconsole.log(cmpStr);\n</code></pre>\nMain difference in the loop is running by step of 1 by char, and taking each character code to xor with the corresponding key value. It is then encoded in hex as your original code does read hex values (the loop run by step of 2) to get character code (<pre><code>curHex</code></pre> then <pre><code>hex2int</code></pre>).\nThis give me: <pre><code>95 69 18 b1 82 8 c1 59</code></pre> \nYou just have to add a <pre><code>0</code></pre> to the 6th entry and remove the spaces to fill <pre><code>inputValue</code></pre> and you'll get back 'input128' in <pre><code>cmpStr</code></pre>.\n",
            "votes": "4",
            "user": "Tensibai",
            "time": "Oct 27, 2017 at 9:52",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "RC4 is a Symmetric Key algorithm. So give \"input128\" as your input. Then debug the code to see what it generates after applying the algorithm on \"input128\". That would be the original input you have to gave.\nSymmetric Key Algorithms:\nplaintext + key = ciphertext\nciphertext + key = plaintext\n",
            "votes": "1",
            "user": "EWD-0-",
            "time": "Oct 26, 2017 at 15:54",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Tensibai",
                    "text": "<span class=\"comment-copy\">A little more complex than that imho, at least the input can't be given as is as it need to be entered in hexadecimal form.</span>",
                    "time": null
                },
                {
                    "user": "Tensibai",
                    "text": "<span class=\"comment-copy\">(sounds promising anyway, but I should be failing my reversal program on the numbers part)</span>",
                    "time": null
                },
                {
                    "user": "Tensibai",
                    "text": "<span class=\"comment-copy\">@IddoE check the actual code, it takes input 2 chars by 2 chars as hex value which are then converted to integer and then xored with the corresponding key character code. It's just an extra obfuscation part.</span>",
                    "time": null
                }
            ]
        }
    ]
}