{
    "title": "What is the difference between kernelBase.dll and Kernel32.dll",
    "link": "https://reverseengineering.stackexchange.com/questions/20175/what-is-the-difference-between-kernelbase-dll-and-kernel32-dll",
    "content": "What is the difference between kernelBase.dll and Kernel32.dll in system32 folder ?\nWhy both of them implement <pre><code>WideCharToMultiByte</code></pre> ?\n",
    "votes": "4",
    "answers": 1,
    "views": "4k",
    "tags": [
        "windows",
        "dll",
        "winapi"
    ],
    "user": "Lolo9876",
    "time": "Dec 21, 2018 at 10:49",
    "comments": [
        {
            "user": "vhjbh nk",
            "text": "The explanation is great, but a small semantic pointer, actually kernel32.dll and advapi.dll get functionalities from kernelbase.dll. eg: kenerl32!WriteProcessMemoryStub is traced to KERNELBASE!WriteProcessMemory, as already pointed.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I think this is the reason why there are some WinAPIs that also existing in kernelbase.dll. \n\"As an example of functionality that we moved to low-level binaries, kernelbase.dll gets functionality from kernel32.dll and advapi32.dll. This means that the existing binary now forwards calls down to the new binary rather than handling them directly; the forwarding can be static (the export table shows the redirection), or runtime (the dll has a stub routine that calls down to the new binary). This will impact low-level applications such as security and backup applications that are dependent upon internal APIs and offsets.\"\nReference: https://docs.microsoft.com/en-us/windows/desktop/Win7AppQual/new-low-level-binaries\nSee the example below. \nThis is the disassembly of OpenProcess in Kernel32.dll which redirects the OpenProcess to Kernelbase.dll\n\nDisassembly of OpenProcess in Kernelbase.dll that call the Native API NTOpenProcess\n",
            "votes": "5",
            "user": "ismael_akez",
            "time": "Dec 21, 2018 at 13:25",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Lolo9876",
                    "text": "<span class=\"comment-copy\">is the edirected via <code>ApiSetShema.dll</code> ? from which Windows's version is that happend?</span>",
                    "time": null
                },
                {
                    "user": "ismael_akez",
                    "text": "<span class=\"comment-copy\">I provided a screenshot for the kernel32 and kernelbase. Starting from Windows 7.</span>",
                    "time": null
                },
                {
                    "user": "ismael_akez",
                    "text": "<span class=\"comment-copy\">Im sorry for not adding the further explanation in the screenshot, I just want to show you that the OpenProcess in kernel32.dll is actually points to the OpenProcess of kernelbase.dll  that calls the NtOpenProcess.</span>",
                    "time": null
                },
                {
                    "user": "Lolo9876",
                    "text": "<span class=\"comment-copy\">that very intresting what you preset,  do you say that all function in <code>Kernel32.dll</code> redirect to <code>Kernelbase.dl</code> ? how can I please see it in your screenshot? you put screenshot of <code>OpenProcess</code> function in <code>Kernel32.dll and </code>OpenProcess` in <code>Kernelbase.dl</code> , how can I see the redirection?</span>",
                    "time": null
                },
                {
                    "user": "ismael_akez",
                    "text": "<span class=\"comment-copy\">@Lolo9876 I created a small program that use the OpenProcess. <a href=\"https://imgur.com/a/6Gw2zbQ\" rel=\"nofollow noreferrer\">imgur.com/a/6Gw2zbQ</a></span>",
                    "time": null
                }
            ]
        }
    ]
}