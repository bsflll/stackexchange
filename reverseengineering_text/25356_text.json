{
    "title": "How to see what has changed in a patched binary?",
    "link": "https://reverseengineering.stackexchange.com/questions/25356/how-to-see-what-has-changed-in-a-patched-binary",
    "content": "I am exploring MacOS Deckset app.\nIt has a trial version available on the official website.\nBut there's a cracked version available on torrent trackers.\nI want to know what was changed by the people who cracked that app: strings? symbols? few assembly instructions?\nBoth (genuine and cracked) versions are available as .DMG installers.\nI've extracted Deckset.app containers from both of them.\nNow, I'm able to explore <pre><code>Deckset.app/Contents/MacOS/Deckset</code></pre> binary in <pre><code>Hopper</code></pre> tool.\nBut as the cracked version is patched, I want to understand what actually was patched.\nFor this, I used <pre><code>radiff2</code></pre> tool from <pre><code>Radare2</code></pre> toolset:\n<pre><code>radiff2 genuine.app/Contents/MacOS/Deckset cracked.app/Contents/MacOS/Deckset  > bin_diff.txt\n</code></pre>\nIt gave me output like this:\n<pre><code>0x00000e98 901e => 101c 0x00000e98\n0x0000201c 109a => 9097 0x0000201c\n0x0027d486 770c => 585e 0x0027d486\n0x0027d48b 04 => 03 0x0027d48b\n0x0027d493 2c => 24 0x0027d493\n0x0027d49a 511a => 5097 0x0027d49a\n0x0027d49d 00 => 01 0x0027d49d\n0x0027d49f 05 => 00 0x0027d49f\n0x0027d4a3 fe00010000 => 07fade0c02 0x0027d4a3\n0x0027d4aa 53bcfade0c02 => 507300020100 0x0027d4aa\n0x0027d4b2 50ee => 0000 0x0027d4b2\n0x0027d4b5 020500 => 0000b3 0x0027d4b5\n0x0027d4b9 01 => 00 0x0027d4b9\n0x0027d4bb 00 => 30 0x0027d4bb\n0x0027d4be 012e => 0003 0x0027d4be\n0x0027d4c2 0060 => 027e 0x0027d4c2\n</code></pre>\nNow, when I open \"genuine\" app in Hopper, and search for either <pre><code>0x00000e98</code></pre>, or <pre><code>901e</code></pre>, or <pre><code>101c</code></pre>, it gives nothing useful.\nE.g. when I do <pre><code>Menu > Navigate > Go to Address or Symbol</code></pre> and enter <pre><code>0x00000e98</code></pre>, it gives me such segment:\n\nI don't see nor <pre><code>901e</code></pre>, neither <pre><code>101c</code></pre> in this segment.\nWhat am I doing wrong?\nDo you know better tools for doing this (except IDA Pro, because it's expensive)?\n",
    "votes": "3",
    "answers": 0,
    "views": "160",
    "tags": [
        "patching",
        "patch-reversing",
        "osx",
        "hopper"
    ],
    "user": "Revengo Engineros",
    "time": "Jun 20, 2020 at 9:12",
    "comments": [
        {
            "user": "bart1e",
            "text": "There is <pre><code>901e</code></pre> at the offset <pre><code>0x00000e98</code></pre>, though it is in little endian, so it is displayed as <pre><code>1e90</code></pre> in \"amount to map from the file\" line. You are using the right tools. Good luck with your investigation. :)\n",
            "time": null
        },
        {
            "user": "morsisko",
            "text": "Try BinDiff for Ghidra\n",
            "time": null
        }
    ],
    "answers_data": []
}