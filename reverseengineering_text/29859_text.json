{
    "title": "IDA decompiler syntax: for function int __usercall sub_45BD46@ <eax>(char a1@<bl>, int a2@<esi>, int a3)",
    "link": "https://reverseengineering.stackexchange.com/questions/29859/ida-decompiler-syntax-for-function-int-usercall-sub-45bd46-eaxchar-a1bl",
    "content": "I have a function with the following header sub_45BD46@eax(char a1@bl, int a2@esi, int a3), my question is: I am right that  sub_45BD46@eax means the result value is in eax?\n",
    "votes": "1",
    "answers": 2,
    "views": "374",
    "tags": [
        "ida",
        "x86",
        "decompilation"
    ],
    "user": "Alexey",
    "time": "Jan 13, 2022 at 3:29",
    "comments": [],
    "answers_data": [
        {
            "content": "Yes. If you have Hex Rays decompiler you can mouse over the decompiled version and will show RET is EAX.\n\nGenerally in most x86 calling conventions return values are in eax.\nHowever need to be aware without debugging symbols available the automatically generated parameters and return value in IDA Pro in the sub name are not always correct.\nFurther details are available here\n",
            "votes": "2",
            "user": "chentiangemalc",
            "time": "Jan 13, 2022 at 0:52",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "You are correct. The <pre><code>__usercall</code></pre> and <pre><code>__userpurge</code></pre> syntax is documented on Hex-Rays website.\n",
            "votes": "2",
            "user": "Rolf Rolles",
            "time": "Jan 13, 2022 at 0:41",
            "is_accepted": false,
            "comments": []
        }
    ]
}