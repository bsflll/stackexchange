{
    "title": "Getting a high level overview of comparative size differences of binary files?",
    "link": "https://reverseengineering.stackexchange.com/questions/19857/getting-a-high-level-overview-of-comparative-size-differences-of-binary-files",
    "content": "I have two binary files, one of them is pulled from Protostar's (<pre><code>stack0</code></pre> example). The other one I compiled (from source) with the latest version of GCC. The size difference is massive. My version is 11.5 Kb. The Protostar distributed version is 21.9 Kb. How would I get a high level overview to work towards an understanding of the massive difference in sizes?\nI am compiling my version with \n<pre><code>CFLAGS=-m32 -fno-stack-protector -std=c89 -fno-PIE -no-pie -mpreferred-stack-boundary=2 -fno-chkp-use-wrappers -D_FORTIFY_SOURCE=0 -fno-check-pointer-bounds -z execstack -z norelro -Os\n</code></pre>\n\nWhen I use Radare's show info with <pre><code>i</code></pre> everything is the same, except for the sizes.\nThe main functions are both very similar.\n\nI'm just wondering what caused the original to be so much bigger. Is there an option or tool for something like <pre><code>radiff2</code></pre> that can help me drill down to explain what my compiler is now doing differently than the compiler it was compiled with?\n",
    "votes": "1",
    "answers": 2,
    "views": "100",
    "tags": [
        "binary-analysis",
        "radare2",
        "bin-diffing"
    ],
    "user": "Evan Carroll",
    "time": "Nov 9, 2018 at 21:49",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "What is protostar and how are the two files related?\n",
            "time": null
        },
        {
            "user": "Evan Carroll",
            "text": "They're both supposed to be compiled from the same source, but potentially a different set of compiler options or different compiler altogether (I just wanted to generate a similar <pre><code>main</code></pre> so I played with <pre><code>gcc</code></pre> until I got something good. But, I want to understand what else changed.\n",
            "time": null
        },
        {
            "user": "Evan Carroll",
            "text": "@IgorSkochinsky see my answer, be curious to know what you think of that and if that's a good place to start to figure out this?\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "\"except for the sizes.\"... so which sizes are different and how?\n",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "What does <pre><code>file</code></pre> give you on the two binaries? Perhaps one is stripped and the other isn't? Also one could be statically linked and perhaps not against glibc at all (for example musl-libc comes to mind as libc which is standards-compliant and yields small binaries)\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Bloaty McBloatFace is a compiled binary size profiler that can provide a breakdown of section sizes as you have there as well as a number of other ways to break things out.\n",
            "votes": "2",
            "user": "Zhentar",
            "time": "Dec 10, 2018 at 3:54",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "I'm not going to accept this answer, because likely someone else will tell me a better way to do it. But, browsing the site I saw an old picture of Radare that seemed to kind of do what I want with an <pre><code>S=</code></pre> option. This is showing the breakdown by section. That seemed like a good place to start.\n\nTurns out that's now really close to the undocumented <pre><code>iS=</code></pre> option.\nUsing that on both binaries, I saw the difference really quick,\n<pre><code>[0x00000000]> iS=\n00  0x00000000 |--------------------------------------------------------------------------------------------------| 0x00000000     0 ---      \n01  0x08048114 |-#------------------------------------------------------------------------------------------------| 0x08048127    19 r--  .interp\n02  0x08048128 |-#------------------------------------------------------------------------------------------------| 0x08048148    32 r--  .note.ABI_tag\n03  0x08048148 |-#------------------------------------------------------------------------------------------------| 0x0804816c    36 r--  .note.gnu.build_id\n04  0x0804816c |-#------------------------------------------------------------------------------------------------| 0x08048198    44 r--  .hash\n05  0x08048198 |-#------------------------------------------------------------------------------------------------| 0x080481b8    32 r--  .gnu.hash\n06  0x080481b8 |-##-----------------------------------------------------------------------------------------------| 0x08048218    96 r--  .dynsym\n07  0x08048218 |--#-----------------------------------------------------------------------------------------------| 0x08048267    79 r--  .dynstr\n08  0x08048268 |--#-----------------------------------------------------------------------------------------------| 0x08048274    12 r--  .gnu.version\n09  0x08048274 |--#-----------------------------------------------------------------------------------------------| 0x08048294    32 r--  .gnu.version_r\n10  0x08048294 |--#-----------------------------------------------------------------------------------------------| 0x0804829c     8 r--  .rel.dyn\n11  0x0804829c |--##----------------------------------------------------------------------------------------------| 0x080482bc    32 r--  .rel.plt\n12  0x080482bc |---#----------------------------------------------------------------------------------------------| 0x080482ec    48 r-x  .init\n13  0x080482ec |---#----------------------------------------------------------------------------------------------| 0x0804833c    80 r-x  .plt\n14  0x08048340 |---###--------------------------------------------------------------------------------------------| 0x080484dc   412 r-x  .text\n15  0x080484dc |-----#--------------------------------------------------------------------------------------------| 0x080484f8    28 r-x  .fini\n16  0x080484f8 |-----#--------------------------------------------------------------------------------------------| 0x08048534    60 r--  .rodata\n17  0x08048534 |-----#--------------------------------------------------------------------------------------------| 0x08048538     4 r--  .eh_frame\n18  0x08049538 |-----#--------------------------------------------------------------------------------------------| 0x08049540     8 rw-  .ctors\n19  0x08049540 |-----#--------------------------------------------------------------------------------------------| 0x08049548     8 rw-  .dtors\n20  0x08049548 |-----#--------------------------------------------------------------------------------------------| 0x0804954c     4 rw-  .jcr\n21  0x0804954c |-----##-------------------------------------------------------------------------------------------| 0x0804961c   208 rw-  .dynamic\n22  0x0804961c |------#-------------------------------------------------------------------------------------------| 0x08049620     4 rw-  .got\n23  0x08049620 |------#-------------------------------------------------------------------------------------------| 0x0804963c    28 rw-  .got.plt\n24  0x0804963c |-------#------------------------------------------------------------------------------------------| 0x08049644     8 rw-  .data\n25  0x08049644 |-------#------------------------------------------------------------------------------------------| 0x0804964c     0 rw-  .bss\n26* 0x00000000 |-------############-------------------------------------------------------------------------------| 0x00000a68  2.6K ---  .stab\n27* 0x00000000 |------------------###################################################################-------------| 0x00003a5c 14.6K ---  .stabstr\n28* 0x00000000 |------------------------------------------------------------------------------------#-------------| 0x00000039    57 ---  .comment\n29* 0x00000000 |------------------------------------------------------------------------------------##------------| 0x000000fd   253 ---  .shstrtab\n30* 0x00000000 |-------------------------------------------------------------------------------------------#####--| 0x00000440    1K ---  .symtab\n31* 0x00000000 |------------------------------------------------------------------------------------------------##| 0x0000020c   524 ---  .strtab\n32  0x08048034 |##------------------------------------------------------------------------------------------------| 0x08048114   224 r-x  PHDR\n33  0x08048114 |-#------------------------------------------------------------------------------------------------| 0x08048127    19 r--  INTERP\n34  0x08048000 |######--------------------------------------------------------------------------------------------| 0x08048538  1.3K r-x  LOAD0\n35  0x08049538 |-----###------------------------------------------------------------------------------------------| 0x0804964c   268 rw-  LOAD1\n36  0x0804954c |-----##-------------------------------------------------------------------------------------------| 0x0804961c   208 rw-  DYNAMIC\n37  0x08048128 |-#------------------------------------------------------------------------------------------------| 0x0804816c    68 r--  NOTE\n38  0x00000000 |--------------------------------------------------------------------------------------------------| 0x00000000     0 rwx  GNU_STACK\n39  0x08048000 |#-------------------------------------------------------------------------------------------------| 0x08048034    52 rw-  ehdr\n=>  0x00000000 |^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^| 0xffffffffffffffff\n</code></pre>\nThat <pre><code>.stabstr</code></pre> thing was huge. I found this on Stack Overflow,\n\nI'd be surprised if the debugging format was stabs on either platform unless you had explicitly requested it with <pre><code>-gstabs</code></pre> as an argument to gcc.\n\nI enabled that option and suddenly my new binary had one too, and it was pretty close in size to the old one.\n",
            "votes": "1",
            "user": "Evan Carroll",
            "time": "Nov 9, 2018 at 22:24",
            "is_accepted": false,
            "comments": []
        }
    ]
}