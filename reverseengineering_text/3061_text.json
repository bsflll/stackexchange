{
    "title": "IDA Pro: use structs on parameters",
    "link": "https://reverseengineering.stackexchange.com/questions/3061/ida-pro-use-structs-on-parameters",
    "content": "I have a small function that is given a <pre><code>struct</code></pre> as parameters. The <pre><code>struct</code></pre> looks to something like this:\n<pre><code>struct my_struct {\n  short a;\n  unsigned int b;\n  unsigned int c;\n};\n</code></pre>\nTaking care of the alignment I build the following <pre><code>struct</code></pre> in IDA:\n<pre><code>field_0 +0x0\nfield_1 +0x4\nfield_2 +0x8\n</code></pre>\nThe compiler builds it so that it takes <pre><code>rbp+0x10</code></pre> as the first field in the <pre><code>struct</code></pre>, <pre><code>rbp+0x14</code></pre> as the second and so on. The problem now arises because if I try to apply the pre-defined IDA <pre><code>struct</code></pre> to the instructions, I always get something like <pre><code>[rbp+struct.field_0+0x10]</code></pre>. This get more complicated if there is actually something in my struct at <pre><code>+0x10</code></pre>, because then it just shows <pre><code>[rbp+struct_fieldX]</code></pre> (which is wrong).\nThe question is: Is there a way to tell IDA (I'm using 6.3) to apply the <pre><code>struct</code></pre> with an offset of <pre><code>0x10</code></pre>? \nThe dirty trick for this simple case is to create a <pre><code>struct</code></pre> that has 2 <pre><code>size_t</code></pre> dummy fields for the <pre><code>RIP</code></pre> and <pre><code>SFP</code></pre>, but that does not seem to be right way to go here.\n",
    "votes": "10",
    "answers": 1,
    "views": "5k",
    "tags": [
        "ida",
        "struct"
    ],
    "user": "sqrtsben",
    "time": "Nov 20, 2013 at 13:36",
    "comments": [],
    "answers_data": [
        {
            "content": "Add your struct in the function's stack view:\n\nWith your cursor in the function's disassembly view, press Ctrl+K to open the stack view.\nIn the stack view, ensure that enough function arguments exist to get to at least <pre><code>+00000010</code></pre> in the stack. Use D to add more function arguments as necessary.\nPosition your cursor on the <pre><code>+00000010</code></pre> line in the stack view and press Alt+Q to specify <pre><code>my_struct</code></pre> at that offset.\n",
            "votes": "8",
            "user": "Jason Geffner",
            "time": "Nov 20, 2013 at 14:53",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user1354557",
                    "text": "<span class=\"comment-copy\">Note for emphasis: During step three, you <b>must</b> be on the stack view. If you place your cursor on the corresponding local variable in IDA view and press <code>Alt+Q</code>, IDA will try to interpret <i>the contents of the function</i> as a structure, rather than the variable, which destroys the function.  This is a mistake I see people make pretty often when learning structures in IDA.</span>",
                    "time": null
                }
            ]
        }
    ]
}