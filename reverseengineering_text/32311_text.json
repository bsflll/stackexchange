{
    "title": "vivisect get assembly instructions",
    "link": "https://reverseengineering.stackexchange.com/questions/32311/vivisect-get-assembly-instructions",
    "content": "I was going through Vivisect Documentation which seems limited. I wanted to create a tool that gets the functions and then get the assembly code or just assembly instruction (mnemonics ) in a given function. Any help will be valuable.\nThanks in Advance :)\n",
    "votes": "1",
    "answers": 1,
    "views": "79",
    "tags": [
        "disassembly"
    ],
    "user": "Aditya",
    "time": "Sep 21, 2023 at 9:06",
    "comments": [],
    "answers_data": [
        {
            "content": ":>type vivtest.py\n<pre><code>import vivisect\nimport envi.common as ec\nvw = vivisect.VivWorkspace()\nvw.loadFromFile(\"C:\\\\Program Files (x86)\\\\Windows Kits\\\\10\\\\Debuggers\\\\x64\\\\cdb.exe\")\nvw.analyze()\nfor i in vw.getFunctions():\n    if ((vw.getName(i)) == \"cdb.FindPESection\"):\n        fb = vw.getFunctionBlocks(i)\n        funcstart = fb[0][0]\n        res = vw.parseOpcode(funcstart)\n        nextaddr = funcstart+res.size\n        print(hex(funcstart) ,end =\" \")\n        print(\"%-15s\" % (ec.hexify(vw.readMemory(funcstart,res.size))),end = \" \")\n        print(res)\n        while (nextaddr < (funcstart + fb[0][1])):\n            res = vw.parseOpcode(nextaddr)\n            print(hex(nextaddr) ,end =\" \")\n            print(\"%-15s\" % (ec.hexify(vw.readMemory(nextaddr,res.size))),end = \" \")\n            print(res)\n            nextaddr = nextaddr+res.size\n</code></pre>\n:>python vivtest.py\n<pre><code>0x14000cdc0 4c63413c        movsxd r8,dword [rcx + 60]\n0x14000cdc4 4533c9          xor r9d,r9d\n0x14000cdc7 4c03c1          add r8,rcx\n0x14000cdca 4c8bd2          mov r10,rdx\n0x14000cdcd 410fb74014      movzx eax,word [r8 + 20]\n0x14000cdd2 450fb75806      movzx r11d,word [r8 + 6]\n0x14000cdd7 4883c018        add rax,24\n0x14000cddb 4903c0          add rax,r8\n0x14000cdde 4585db          test r11d,r11d\n0x14000cde1 741e            jz 0x14000ce01\n</code></pre>\nconfirmation using windbg\n<pre><code>0:000> u cdb!FindPESection l0xa\ncdb!FindPESection:\n00007ff6`9280cdc0 4c63413c        movsxd  r8,dword ptr [rcx+3Ch]\n00007ff6`9280cdc4 4533c9          xor     r9d,r9d\n00007ff6`9280cdc7 4c03c1          add     r8,rcx\n00007ff6`9280cdca 4c8bd2          mov     r10,rdx\n00007ff6`9280cdcd 410fb74014      movzx   eax,word ptr [r8+14h]\n00007ff6`9280cdd2 450fb75806      movzx   r11d,word ptr [r8+6]\n00007ff6`9280cdd7 4883c018        add     rax,18h\n00007ff6`9280cddb 4903c0          add     rax,r8\n00007ff6`9280cdde 4585db          test    r11d,r11d\n00007ff6`9280cde1 741e            je      cdb!FindPESection+0x41 (00007ff6`9280ce01)\n</code></pre>\n",
            "votes": "1",
            "user": "blabb",
            "time": "Sep 21, 2023 at 19:57",
            "is_accepted": false,
            "comments": []
        }
    ]
}