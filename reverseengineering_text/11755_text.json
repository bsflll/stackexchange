{
    "title": "Isolating encrypt/decrypt instructions in an execution trace",
    "link": "https://reverseengineering.stackexchange.com/questions/11755/isolating-encrypt-decrypt-instructions-in-an-execution-trace",
    "content": "If you have an execution trace of a program, and know it uses say AES for encryption.\nCan you isolate the instructions for encryption with that knowledge alone?\n",
    "votes": "1",
    "answers": 1,
    "views": "119",
    "tags": [
        "encryption",
        "tracing"
    ],
    "user": "soupman",
    "time": "Jan 13, 2016 at 11:34",
    "comments": [
        {
            "user": "Abr001am",
            "text": "yes, its called dejunker or deobfuscator\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Generally speaking, it depends on the platform. For example, if the software uses Intel AES extensions it is possible to find the corresponding instructions in the disassembly. If the software is compiled for other platforms and uses specific hardware accelerators it is possible to find it by accesses to specific addresses of the accelerators registers.\nIf there is no specific accelerator or specific instruction set it is possible to find S-BOX constants and check which instructions are accessing it.\nThere are some plugins for IDA that able to do this work for you, for example\nFindCrypt2.\nIn addition there is a presentation from recon conference about locating such an algorithms in obfuscated code here.\n",
            "votes": "3",
            "user": "w s",
            "time": "Jan 13, 2016 at 12:04",
            "is_accepted": true,
            "comments": []
        }
    ]
}