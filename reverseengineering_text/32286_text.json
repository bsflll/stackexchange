{
    "title": "Is it possible to create a CStringT struct in x32dbg/x64dbg to make them more readable?",
    "link": "https://reverseengineering.stackexchange.com/questions/32286/is-it-possible-to-create-a-cstringt-struct-in-x32dbg-x64dbg-to-make-them-more-re",
    "content": "I'm working on analyzing a program which makes extensive use of CStringT but I am unclear as to how these are represented in memory, as it does not seem to be consistent. For example using a x32dbg, we may see EAX as follows:\n<pre><code>EAX : 004FD62C <&??_7?$CStringT@_W@Foo@@6B@>\n</code></pre>\nBut sometimes when I go to dump 004FD62C, what I find there is a string, other times its just a series of pointers that seem to lead to no printable text. Is there a way to make analyzing these easier in x32dbg? Since they are variable length I'm thinking no, but figured someone might know.\nthx\n",
    "votes": "1",
    "answers": 0,
    "views": "36",
    "tags": [
        "x64dbg"
    ],
    "user": "throwawayn000b9999",
    "time": "Sep 14, 2023 at 23:52",
    "comments": [],
    "answers_data": []
}