{
    "title": "Can I define custom enum-type to be used in Ghidra as a data type?",
    "link": "https://reverseengineering.stackexchange.com/questions/21118/can-i-define-custom-enum-type-to-be-used-in-ghidra-as-a-data-type",
    "content": "I'm trying to learn Ghidra. Say, if it generated the following code for loading functions from an array of function names from <pre><code>gpfnCommCtrlAPI</code></pre>:\n\nI was able to retype <pre><code>gpfnCommCtrlAPI</code></pre> into <pre><code>char*[14]</code></pre> which made it quite readable:\n\nBut then is it possible to retype <pre><code>g_pfnsUxCtrl</code></pre>, a pointer to an array of function pointers, (possibly with a custom <pre><code>enum</code></pre>) to make it a little bit more readable? Here's an example of how it looks now in case of <pre><code>g_pfnsUxCtrl[7]</code></pre>:\n\nPS. To understand what index <pre><code>7</code></pre> refers to in that case I need to go back to the <pre><code>gpfnCommCtrlAPI</code></pre> array, which may not be immediately available where <pre><code>g_pfnsUxCtrl[7]</code></pre> is used.\nPS2. In that case case, I manually renamed <pre><code>p_comctl32_HandleScrollCmd</code></pre> variable to make it more readable.\n",
    "votes": "10",
    "answers": 1,
    "views": "6k",
    "tags": [
        "windows",
        "binary-analysis",
        "decompilation",
        "static-analysis",
        "ghidra"
    ],
    "user": "c00000fd",
    "time": "Apr 11, 2019 at 6:42",
    "comments": [
        {
            "user": "Biswapriyo",
            "text": "Which executable file did you analyse?\n",
            "time": null
        },
        {
            "user": "c00000fd",
            "text": "@Biswapriyo: <pre><code>comctrl32.dll</code></pre> x86 build from Win10.\n",
            "time": null
        },
        {
            "user": "Simeon Pilgrim",
            "text": "that sounds like you want a typedef if you want X to mean g_pfnsUxCtrl[7] unless your want to use the enum to replace the 7\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "you are able to add your own enum type inside <pre><code>Data Type Manager</code></pre>. (Keep in mind to select correct size).\n\n\n\nThen you should be able to change the type to your newly created enum and everything should be nicely resolved.\n",
            "votes": "3",
            "user": "erexo",
            "time": "Apr 23, 2019 at 9:41",
            "is_accepted": false,
            "comments": [
                {
                    "user": "c00000fd",
                    "text": "<span class=\"comment-copy\">yeah, that's how you define a generic <code>enum</code>. But how would you apply it to the particular example I showed above?</span>",
                    "time": null
                },
                {
                    "user": "erexo",
                    "text": "<span class=\"comment-copy\">if that proc list is relatively short with const count and you really would like custom names instead of integers, then you can create a custom type with lots of integers of different names. Then you'll have a single object with couple of variables and each of those will have a custom name. And if those addresses are constant which is kinda stupid but you can look where you land with that, you can try to set <code>p_comct132_HandleScrollCmd</code> to enumType and <code>g_pfnsUxCtrl</code> to pointer to enumType. Both solutions are silly, in your case I'd just memorize those integers</span>",
                    "time": null
                }
            ]
        }
    ]
}