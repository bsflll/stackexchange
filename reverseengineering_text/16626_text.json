{
    "title": "Are there any project based books that teach reverse engineering?",
    "link": "https://reverseengineering.stackexchange.com/questions/16626/are-there-any-project-based-books-that-teach-reverse-engineering",
    "content": "I want to learn to reverse engineer hardware/firmware as well as software (eventually, i want to focus on hardware/firmware now). I have some experience programming STM32 microcontrollers as well as decent understanding of C. I understand verilog and have made some simple stuff in FPGA and have done PCB board design before as well.\nI started reading \"Reverse Engineering for Beginners\" but it seems like a lot of examples with no hands-on projects to work with. I learn a lot more by doing so if there was a book that teaches you reverse engineering, assembly/disassembly, and other topics with a project in mind i'd much prefer it. I'd like to learn ARM and x86 but more of a focus on ARM.\nAs for tools i have a Bus Pirate, Logic Analyzer, and basic soldering equipment. Any recommendations on tools i should get and projects i can do?\n",
    "votes": "8",
    "answers": 2,
    "views": "4k",
    "tags": [
        "firmware",
        "hardware"
    ],
    "user": "spetty flakson",
    "time": "Oct 26, 2017 at 1:49",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "I think it's a wrong approach. Pick your own project and figure out how to RE it, using whatever information you can find.\n",
            "time": null
        },
        {
            "user": "spetty flakson",
            "text": "@IgorSkochinsky I can't argue with your experience, but i just don't feel like i know enough to even get started. you know?\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "Well, you can start by posting specific questions right here on this site so we can offer advice specific to your target. A \"book with project\" will teach you only about that project and won't necessarily describe the things you actually need.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "You are right, most of the RE books out there are more generic and consists of dozens of different examples and not project oriented. Moreover, they're mostly focused on software reverse engineering.  \nFrom these, and as a reference, it is worth to mention:\n\nReverse Engineering for Beginners\nPractical Reverse Engineering\nReversing: Secrets of Reverse Engineering\nThe IDA Pro Book\n\nIn the field of hardware reverse engineering, however, it is much harder to find a proper book, not to say one which is project oriented. But there is one book which overcomes the other and seems to fit best for your needs â€“ Hacking the Xbox: An Introduction to Reverse Engineering by Andrew Huang. The book is available for free since March 2013.\nTo quote from the book's description:\n\nThis hands-on guide to hacking begins with step-by-step tutorials on\n  hardware modifications that teach basic hacking techniques as well as\n  essential reverse engineering skills. The book progresses into a\n  discussion of the Xbox security mechanisms and other advanced hacking\n  topics, with an emphasis on educating the readers on the important\n  subjects of computer security and reverse engineering. Hacking the\n  Xbox includes numerous practical guides, such as where to get hacking\n  gear, soldering techniques, debugging tips and an Xbox hardware\n  reference guide.\n\nYou can visit the book's official website for more information.\nOther books which you may find helpful are listed below:\n\nGame Console Hacking: Xbox, PlayStation, Nintendo, Game Boy..., by Joe Grand et al.\nThe Hardware Hacker - Adventures in Making and Breaking Hardware, by Andrew Huang\nHardware Hacking: Have Fun While Voiding Your Warranty, by Joe Grand\nHardware Hacking Projects for Geeks, by Scott Fullam\n\nIt is important for me to note that although the fact that most of these books is available online pirately, I encourage you to buy the books you are interested in and support their  authors.\n\nOn a general note, I'd suggest you to start reverse engineering from routers and old game consoles. Good references could be found in /dev/ttys0. Choose a product which is cheap and you can buy many pieces from it so you won't be afraid of destroying it with your tests. The Super Nintendo Entertainment System (SNES) is an example for a console which is documented in details by other reverse engineers, check this for example. As for tools, most of the resources above contains recommendations for tools that would help you in each project.\n",
            "votes": "4",
            "user": "Megabeets",
            "time": "Oct 26, 2017 at 8:42",
            "is_accepted": true,
            "comments": [
                {
                    "user": "julian",
                    "text": "<span class=\"comment-copy\">4 of the links in this answer refer to material already mentioned in the answer I gave (practical reverse engineering, hacking the xbox, devttys0). In addition, \"reverse engineering for beginners\" is discussed in the question. You should focus on making original contributions</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "Possibly relevant books:\n\nHacking the Xbox (free)\nPractical Reverse Engineering: x86, x64, ARM, Windows Kernel, Reversing Tools, and Obfuscation\n\nBlogs:\n\n.braindump - RE and stuff\nReversing Everything\nEmbedded Device Hacking\n\nForums with demos and write-ups:\n\nexploitee.rs\n\nmisc:\n\nCSCI 4974 / 6974 Hardware Reverse Engineering\nchumby\nvarious RE projects at hackaday.io\n",
            "votes": "1",
            "user": "julian",
            "time": "Oct 26, 2017 at 5:42",
            "is_accepted": false,
            "comments": []
        }
    ]
}