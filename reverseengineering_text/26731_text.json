{
    "title": "usercalls in old Win32 game",
    "link": "https://reverseengineering.stackexchange.com/questions/26731/usercalls-in-old-win32-game",
    "content": "I am currently analyzing an old Win32 game from 1999 that was probably compiled with Visual C++ 6 and was programmed in C.\nI noticed that there are almost no usercalls (i.e. calls that use registers to pass arguments) except for calls in the statically linked CRT library. Is this a reasonable assumption for a game of this age?\nTo identify registers used as function paramters I used an algorithm similar to the one described in this IDA blog post. The algorithm identifies PUSH/POP pairs and searches for registers usages before any assignment except in the PUSH/POP pairs.\n",
    "votes": "0",
    "answers": 1,
    "views": "69",
    "tags": [
        "binary-analysis",
        "register",
        "callstack",
        "arguments"
    ],
    "user": "tly",
    "time": "Jan 8, 2021 at 16:27",
    "comments": [],
    "answers_data": [
        {
            "content": "Yes, this sounds perfectly normal. If the program did not use C++, you won't see thiscall with usage of <pre><code>ecx</code></pre> but just standard stdcall or cdecl which use only stack for passing arguments.\n",
            "votes": "2",
            "user": "Igor Skochinsky",
            "time": "Jan 9, 2021 at 3:50",
            "is_accepted": true,
            "comments": []
        }
    ]
}