{
    "title": "Automatic deobfuscation of Java class/method/parameter names with access to old non obfuscated sources",
    "link": "https://reverseengineering.stackexchange.com/questions/31020/automatic-deobfuscation-of-java-class-method-parameter-names-with-access-to-old",
    "content": "I am currently trying to de-obfuscate a Java program (i.e. find each class name and namespace, each method name and each method parameter name).\nTo do so, I started by using Enigma (the fork from FabricMC).\nBut I have access to old sources that are not obfuscated and I was wondering if I could automatically de-obfuscate the part of my Java program that did not change since then.\nBasically, I have:\n\nVersion 3 that is non-obfuscated.\nVersion 6 that is obfuscated.\nVersion 7 that is obfuscated.\nVersion 9 that is obfuscated.\n\nand I want to de-obfuscate automatically as much symbols as possible in Version 9.\nAre you aware of any tool that can do this? Currently, I am navigating the unobfuscated files of Version 3 by hand and mapping Version 9 on Enigma by hand too, which is quite a long and tedious process.\nNote: all the subjects I found during my research were about de-obfuscating without access to any prior, non-obfuscated, sources. I would like to extract the maximum I can from the non-obfuscated sources I obtained.\n",
    "votes": "2",
    "answers": 1,
    "views": "255",
    "tags": [
        "java",
        "deobfuscation"
    ],
    "user": "Adrien Suau",
    "time": "Oct 20, 2022 at 16:48",
    "comments": [
        {
            "user": "Col-E",
            "text": "An old release of skidsuite used to have something like this: github.com/GenericException/SkidSuite/tree/master/archive/â€¦ (antiob package has CorrelationMapper). Can't say how well it works, never used it myself. But I would love to support a similar feature in my own project, Recaf.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Have you tried https://github.com/FabricMC/Matcher?\nIt doesn't always create the best matches automatically but it helps a lot by suggesting classes/methods/fields that are similar to each other across the different versions.\n",
            "votes": "2",
            "user": "ebaker5214",
            "time": "Oct 21, 2022 at 14:28",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Adrien Suau",
                    "text": "<span class=\"comment-copy\">I do not know how I missed this tool, but it nicely answer my question! It lacks documentation though, but the community is super nice and very reactive on the FabricMC Discord!</span>",
                    "time": null
                }
            ]
        }
    ]
}