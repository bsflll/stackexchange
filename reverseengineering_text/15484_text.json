{
    "title": "Simple 8bit checksum",
    "link": "https://reverseengineering.stackexchange.com/questions/15484/simple-8bit-checksum",
    "content": "I'm trying to find out, how the checksumming in an RS485 communication works.\nThe data is packetized and seems to be using 8bit checksums. \nOne packet per line, the last byte that isn't 0x00 seems to be the checksum.\nI've been able to generate this data which is incrementing continuously. \n0xAA at the beginning is the preamble of the packet, so that probably isn't part of the checksum. \n<pre><code>aa1c01010439000000000000000002a600001429000025caff000000d8000000\naa1c01010439000000000000000002a600001429000025ca00000000d9000000\naa1c01010439000000000000000002a600001429000025cb00000000da000000\naa1c01010439000000000000000002a600001429000025cc00000000db000000\naa1c01010439000000000000000002a600001429000025cd00000000dc000000\naa1c01010439000000000000000002a600001429000025ce00000000dd000000\naa1c01010439000000000000000002a600001429000025cf00000000de000000\naa1c01010439000000000000000002a600001429000025d000000000df000000\naa1c01010439000000000000000002a600001429000025d100000000e0000000\naa1c01010439000000000000000002a600001429000025d200000000e1000000\naa1c01010439000000000000000002a600001429000025d300000000e2000000\naa1c01010439000000000000000002a600001429000025d400000000e3000000\naa1c01010439000000000000000002a600001429000025d500000000e4000000\naa1c01010439000000000000000002a600001429000025d600000000e5000000\naa1c01010439000000000000000002a600001429000025d700000000e6000000\naa1c01010439000000000000000002a600001429000025d800000000e7000000\naa1c01010439000000000000000002a600001429000025d900000000e8000000\naa1c01010439000000000000000002a600001429000025da00000000e9000000\naa1c01010439000000000000000002a600001429000025db00000000ea000000\naa1c01010439000000000000000002a600001429000025dc00000000eb000000\n</code></pre>\nI have some more data, but that has much more going on in it: \nhttps://gist.github.com/Manawyrm/0167fec375d3756dda19c750998f34fc\nI have tried a simple XOR and CRC8 implementation, and have tried every offset for the start of the data. \nCan someone recognize the checksum algorithm used here? It seems relativly simple, because the checksum is incrementing together with the data. \nThanks,\nTobias\n",
    "votes": "0",
    "answers": 1,
    "views": "3k",
    "tags": [
        "crc",
        "xor"
    ],
    "user": "Manawyrm",
    "time": "Jun 5, 2017 at 19:10",
    "comments": [],
    "answers_data": [
        {
            "content": "It is a plain byte sum.\nfor the last line:\n<pre><code>aa+1c+01+01+04+39+00+00+00+00+00+00+00+00+02+a6+00+00+14+29+00+00+25+dc\n=\n02EB\n</code></pre>\n",
            "votes": "2",
            "user": "Willem Hengeveld",
            "time": "Jun 5, 2017 at 21:48",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Manawyrm",
                    "text": "<span class=\"comment-copy\">Wow, I think that's a perfect example of thinking too complex :-) Thank you!</span>",
                    "time": null
                }
            ]
        }
    ]
}