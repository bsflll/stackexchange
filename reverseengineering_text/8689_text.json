{
    "title": "How can I have IDA replace an offset with the label of the function the offset points to?",
    "link": "https://reverseengineering.stackexchange.com/questions/8689/how-can-i-have-ida-replace-an-offset-with-the-label-of-the-function-the-offset-p",
    "content": "I keep seeing the same pattern in the code I'm analyzing. A call instruction is using a label \"off_\" which is just a pointer to the real address of the call (in this case: GetWindowTextW).  It would be much more convenient for me to see call GetWindowTextW (or user32_GetWindowTextW).  This much be an option I can set somewhere or a way to reanalyze the application... but I can't seem to find it.  How can I achieve this?\n",
    "votes": "0",
    "answers": 0,
    "views": "3k",
    "tags": [
        "ida"
    ],
    "user": "Float",
    "time": "Apr 12, 2015 at 3:43",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "How do you know that the dword at <pre><code>off_10010AD8</code></pre> is constant? For all IDA knows, it might get modified dynamically, so the same call doesn't really always call <pre><code>GetWindowTextW</code></pre>. If you know the value is constant, you can rename the label, or write an idc/idapython script to search for these pointers and rename them for you.\n",
            "time": null
        },
        {
            "user": "Float",
            "text": "You raise a really great point.  I found that when I renamed off_10010AD8 to GetWindowTextW (well, first it said that name exists and renamed it to GetWindowTextW_0) it brough all of the parameter names to the calling function, which is really what I was looking for.  I suppose a script to hunt out these types of patterns might be my best bet.  I haven't had experience with writing scripts for IDA yet.\n",
            "time": null
        }
    ],
    "answers_data": []
}