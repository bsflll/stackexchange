{
    "title": "Malware analysis - AntiDebugging - Malware slows down the PC while being debugged",
    "link": "https://reverseengineering.stackexchange.com/questions/11017/malware-analysis-antidebugging-malware-slows-down-the-pc-while-being-debugge",
    "content": "As part of my work, I'm debugging a malware found and his behavior is pretty basic after execution:\n\nBeing executed\nDecrypt a lot of data from memory and obtain a new PE (from memory)\nCreate a child process in suspended state\nDump the new data obtained into the Created child process\nSetThreadContext\nResumeThread\n\nNow one issue i was thinking about, is the fact i dont know what the <pre><code>EntryPoint</code></pre> is so i dont know what part of the memory bytes i would change to <pre><code>EB FE</code></pre> (JMP < ToSelf >) To be able to debug the process from the start\nOnce the new process is created and im attaching a debugger to it - OLLYDbg for that case (And the process is on Pause state) Pressing <pre><code>F8 - step over</code></pre> causing the application to have a huge delay of like 10 seconds untill the Opcode is finished - which makes no sense.\nAlso if i watch the newly created process on <pre><code>Sysinternals - ProcessExplorer</code></pre> I can see that after i press F8 the CPU usage of that process is very high 50-90 for all that time, until the opcode is finished. Which also results in all of the computer to run very slowly\nWhat could cause that? and how would i be able to bypass that?\nIt does not happen if i dont debug the process.\n",
    "votes": "3",
    "answers": 0,
    "views": "281",
    "tags": [
        "windows",
        "ollydbg",
        "malware",
        "anti-debugging"
    ],
    "user": "0xAK",
    "time": "Oct 4, 2015 at 11:10",
    "comments": [
        {
            "user": "0xec",
            "text": "Have you changed <pre><code>EB FE</code></pre> back to the original opcodes? Instead of pressing  F8 you can try to <pre><code>Resume All Threads</code></pre>.\n",
            "time": null
        },
        {
            "user": "blabb",
            "text": "does attaching to a suspended child process succeed ?\n",
            "time": null
        },
        {
            "user": "0xAK",
            "text": "@ExtremeCoders, Yes ofcourse i remembered.\n",
            "time": null
        },
        {
            "user": "0xAK",
            "text": "@blabb, and yes it succeedes, basically OllyDbg creates a new thread for him self for debugging the process\n",
            "time": null
        },
        {
            "user": "blabb",
            "text": "oh ollydbg 2.01 resumes the thread from supended state when attaching to a suspended process i dont think that behaviour is a standard behaviour windbg  or ollydbg 1.10 never succeded in attaching to a suspended process  and that is how it should be i think well in such case you CANT  resume from your parent thread i think and may cause inconsistent result i would bet\n",
            "time": null
        }
    ],
    "answers_data": []
}