{
    "title": "Locate compressed section of executable",
    "link": "https://reverseengineering.stackexchange.com/questions/11352/locate-compressed-section-of-executable",
    "content": "I am playing with Philips DICOM Viewer - download version R3.0 SP3. This viewer can display DICOM information (press <pre><code>F9</code></pre>). Since the displayed strings are not stored in the DICOM file itself, I suspect they are stored somewhere in the binary (standalone binary, no extra DLL loaded):\n\nHowever I could not find it using <pre><code>strings</code></pre> and or:\n<pre><code>$ binwalk -M -X -e PmsDView.exe\n</code></pre>\nFollowed by:\n<pre><code>$ grep -r Manufacturer _PmsDView.exe.extracted\n</code></pre>\nand\n<pre><code>$ find _PmsDView.exe.extracted/ -exec strings -n 12 -e l {} \\; | grep Manufacturer\n</code></pre>\nI picked <pre><code>Manufacturer</code></pre> since this is one of the longer string. Also I only used <pre><code>-e s</code></pre> and <pre><code>-e l</code></pre> as they make the more sense (eg: <pre><code>strings -e l PmsDView.exe</code></pre> and <pre><code>strings -e s PmsDView.exe</code></pre>). I've run <pre><code>-e b</code></pre>, <pre><code>-e B</code></pre> and <pre><code>-e L</code></pre> but they did not return anything.\n",
    "votes": "0",
    "answers": 0,
    "views": "127",
    "tags": [
        "binary-analysis",
        "encryption"
    ],
    "user": "tibar",
    "time": "Nov 19, 2015 at 8:15",
    "comments": [
        {
            "user": "Jason Geffner",
            "text": "Have you tried searching for <pre><code>Manufacturer</code></pre> as a wide-character Unicode string?\n",
            "time": null
        },
        {
            "user": "Neitsa",
            "text": "Also, you could check the imported DLLs (recursively) and see if one of them contain one of the searched strings. Another solution is to scan the whole process address space with a debugger ( I think process explorer can also do that). As stated by @JasonGeffner, search for char or wchar strings. If you still can't find it then it's probably concealed in some way.\n",
            "time": null
        }
    ],
    "answers_data": []
}