{
    "title": "How do I execute \"File -> Add To Program...\" in a Ghidra script?",
    "link": "https://reverseengineering.stackexchange.com/questions/26806/how-do-i-execute-file-add-to-program-in-a-ghidra-script",
    "content": "I'm reversing an old video game with large number of shared libraries, and in order to reference them all correctly (via \"thunk\" functions?) I think I need to import all of the raw files into the same program tree. I've tried using <pre><code>analyzeHeadless</code></pre> to import all of the shared libraries into the project, but I don't see way to place them into an existing program using that tool (it instead creates a new program for each file). Let me know if I'm doing something wrong.\n",
    "votes": "2",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ghidra",
        "dll",
        "dynamic-linking",
        "shared-object"
    ],
    "user": "Trevor Glauz",
    "time": "Jan 17, 2021 at 19:53",
    "comments": [
        {
            "user": "Tavian Barnes",
            "text": "The dialog calls <pre><code>ImporterUtilities.addContentToProgram()</code></pre>, which calls <pre><code>Loader.loadInto()</code></pre>.  I'll write up a full answer once I get my attempt working\n",
            "time": null
        },
        {
            "user": "Tavian Barnes",
            "text": "Actually I wanted this for ELFs, but ElfLoader doesn't support it.  So I won't be finishing my attempt, but maybe the pointer to the relevant methods is helpful\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Are they raw files loaded by special mechanisms or typical <pre><code>.so</code></pre> or <pre><code>.dll</code></pre> shared objects? Given the <pre><code>dll</code></pre> tag I am assuming you are concerned about <pre><code>.dll</code></pre> files.\nOn importing a program for the first time you can select <pre><code>Options</code></pre>\n\nand then activate \"Load External Libraries\"\n\nConfigure the paths properly via <pre><code>Edit Paths</code></pre>.\n\nThe paths are searched for shared libraries that are specified as imports in actual program you are importing. If you have already imported the program you can still fix this with ELF files as described in this issue but for some reason there is no premade script for PE files, i.e. <pre><code>.dll</code></pre>s. There might still be a way to do this manually though, the idea is just to also have imported the relevant DLL file so you can link it to a program that requires it as an external library. The relevant functions will then be properly linked.\n",
            "votes": "1",
            "user": "Florian Magin",
            "time": "Jan 18, 2021 at 9:47",
            "is_accepted": false,
            "comments": []
        }
    ]
}