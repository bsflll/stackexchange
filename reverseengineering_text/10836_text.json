{
    "title": "Find out windows API calls using IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/10836/find-out-windows-api-calls-using-ida",
    "content": "I'm in the process of patching a crackme so that I get recognized as registered without the need of a serial key.\nFinding the function that checks for the validity of the key and patching it so that it always returns a success value was a piece of cake. But when I launched the exe, surprise : <pre><code>We noticed an attempt to crack this program, shutting down..</code></pre>\nI'm thinking that there's somewhere a call to ReadProcessMemory or a more simple fopen/fread that computes an integrity sum and checks it with an hardcoded value.\nWhat I would like to do, with IDA, is find where these system functions are called. Is this even possible ?\nI tried debugging the application, but there seem to be anti-debugger techniques as the crackme instantly exits.\nAny suggestion appreciated. I'm using IDA Pro 6.6.\n",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "system-call"
    ],
    "user": "Ely",
    "time": "Sep 11, 2015 at 16:25",
    "comments": [
        {
            "user": "rev",
            "text": "You can read memory directly, without <pre><code>ReadProcessMemory</code></pre>, like this: <pre><code>*(BYTE*) 0xC0DE</code></pre>, which totally bypasses <pre><code>RPM</code></pre> breakpoints. Your best bet is to put a hardware breakpoint (on read) on the address you modified and check what's reading it.\n",
            "time": null
        },
        {
            "user": "Ely",
            "text": "I see. I'll get around the anti debugging techniques and see what I can do then, thanks for the suggestion !\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Place a read breakpoint on the memory you patched to find out what instructions are accessing it, that should lead you to some sort of checksum function or comparison to the file on disk.  Then you can patch this check as well.\n",
            "votes": "1",
            "user": "GuidedHacking",
            "time": "May 17, 2020 at 19:13",
            "is_accepted": false,
            "comments": []
        }
    ]
}