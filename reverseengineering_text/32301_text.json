{
    "title": "Unable to decompile .pyc file",
    "link": "https://reverseengineering.stackexchange.com/questions/32301/unable-to-decompile-pyc-file",
    "content": "There is a huge problem with decompiling pyinstaller exe file,I tired uncompyle6, uncompyle3, decompyle++. Always main section is not decompiled. I wonder what's the problem. The program is working.\nExe file i'm trying to decompile:\nhttps://cdn1.frocdn.ch/gm6YrcmZ15IKXin.exe\nKind regards,\nDan\n",
    "votes": "0",
    "answers": 1,
    "views": "435",
    "tags": [
        "python"
    ],
    "user": "Dan",
    "time": "Sep 18, 2023 at 11:25",
    "comments": [],
    "answers_data": [
        {
            "content": "'main' looks fine but the 'spammer' function is broken near the try-except block somehow.  You can sort through the IL code to work it out, but it just looks like a Russian wrapper for this class:\nhttps://docs.telethon.dev/en/stable/modules/client.html\nFeeding script.pyc into https://www.toolnb.com/tools-lang-en/pyc.html:\n<pre><code># uncompyle6 version 3.5.0\n# Python bytecode 3.8 (3413)\n# Decompiled from: Python 2.7.5 (default, Jun 20 2023, 11:36:40) \n# [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]\n# Embedded file name: script.py\nfrom telethon.sync import TelegramClient, errors\nfrom time import sleep\nfrom telethon.errors.rpcerrorlist import MessageTooLongError, PeerIdInvalidError\nfrom os import system\nimport random\nprint(' \n             ___  ____   __    ___  ____    ___  _____  ____  ____   \n            / __)(  _ \\\\ /__\\\\  / __)( ___)  / __)(  _  )( ___)(_  _)\n            \\\\__ \\\\ )___//(__)\\\\( (__  )__)   \\\\__ \\\\ )(_)(  )__)   )(  \n            (___/(__) (__)(__)\\\\___)(____)  (___/(_____)(__)   (__)\n\n\n            Telegram: @Dspace_soft\n ')\nsleep(2)\ntry:\n    f = open('Api.txt', 'r')\n    a = f.read().splitlines()\n    api_id = a[0]\n    api_hash = a[1]\n    f.close()\nexcept FileNotFoundError:\n    system('cls')\n    api_id = input('Enter id: ')\n    api_hash = input('Enter hash: ')\n    f = open('Api.txt', 'w')\n    f.write(api_id + '\n' + api_hash)\n    f.close()\nelse:\n    client = TelegramClient('client', api_id, api_hash)\n\n    def dialog_sort(dialog):\n        return dialog.unread_count\n\n\n    def spammer--- This code section failed: ---\n\n  36       0  LOAD_GLOBAL              int\n           2  LOAD_GLOBAL              input\n           4  LOAD_CONST               u'\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u0430\\u0434\\u0435\\u0440\\u0436\\u043a\\u0443 \\u043c\\u0435\\u0436\\u0434\\u0443 \\u0440\\u0430\\u0441\\u0441\\u044b\\u043b\\u043a\\u0430\\u043c\\u0438 (\\u0432 \\u0441\\u0435\\u043a\\u0443\\u043d\\u0434\\u0430\\u0445): '\n           6  CALL_FUNCTION_1       1  ''\n           8  CALL_FUNCTION_1       1  ''\n          10  STORE_FAST               'delay'\n\n  37      12  LOAD_CONST               0\n          14  STORE_FAST               'k'\n\n  38      16  LOAD_CONST               0\n          18  STORE_FAST               'j'\n\n  39      20  BUILD_LIST_0          0 \n          22  BUILD_TUPLE_1         1 \n          24  LOAD_CLOSURE             'client'\n          26  BUILD_TUPLE_1         1 \n          28  LOAD_CODE                <code_object create_groups_list>\n          30  LOAD_STR                 'spammer.<locals>.create_groups_list'\n          32  MAKE_FUNCTION_9          'default, closure'\n          34  STORE_FAST               'create_groups_list'\n\n  45      36  LOAD_DEREF               'client'\n          38  SETUP_WITH          538  'to 538'\n          42  POP_TOP          \n\n  46      44  LOAD_DEREF               'client'\n          46  LOAD_METHOD              iter_messages\n          48  LOAD_STR                 'me'\n          50  LOAD_CONST               1\n          52  CALL_METHOD_2         2  ''\n          54  GET_ITER         \n          56  FOR_ITER             66  'to 66'\n          58  STORE_FAST               'm'\n\n  47      60  LOAD_FAST                'm'\n          62  STORE_FAST               'msg'\n          64  JUMP_BACK            56  'to 56'\n\n  49      66  LOAD_FAST                'create_groups_list'\n          68  CALL_FUNCTION_0       0  ''\n          70  STORE_FAST               'groups'\n\n  50      72  LOAD_FAST                'groups'\n          74  LOAD_ATTR                sort\n          76  LOAD_GLOBAL              dialog_sort\n          78  LOAD_CONST               True\n          80  LOAD_CONST               ('key', 'reverse')\n          82  CALL_FUNCTION_KW_2     2  ''\n          84  POP_TOP          \n\n  51      86  LOAD_FAST                'groups'\n          88  LOAD_CONST               None\n          90  LOAD_CONST               10000\n          92  BUILD_SLICE_2         2 \n          94  BINARY_SUBSCR    \n          96  GET_ITER         \n          98  FOR_ITER            488  'to 488'\n         102  STORE_FAST               'g'\n\n  52     104  SETUP_FINALLY       134  'to 134'\n\n  53     106  LOAD_DEREF               'client'\n         108  LOAD_METHOD              forward_messages\n         110  LOAD_FAST                'g'\n         112  LOAD_FAST                'msg'\n         114  LOAD_STR                 'me'\n         116  CALL_METHOD_3         3  ''\n         118  POP_TOP          \n\n  54     120  LOAD_FAST                'k'\n         122  LOAD_CONST               1\n         124  BINARY_ADD       \n         126  STORE_FAST               'k'\n         128  POP_BLOCK        \n         130  JUMP_FORWARD        474  'to 474'\n       134_0  COME_FROM_FINALLY   104  '104'\n\n  55     134  DUP_TOP          \n         136  LOAD_GLOBAL              errors\n         138  LOAD_ATTR                ForbiddenError\n         140  COMPARE_OP               exception-match\n         142  POP_JUMP_IF_FALSE   242  'to 242'\n         144  POP_TOP          \n         146  STORE_FAST               'o'\n         148  POP_TOP          \n         150  SETUP_FINALLY       230  'to 230'\n\n  56     152  LOAD_DEREF               'client'\n         154  LOAD_METHOD              delete_dialog\n         156  LOAD_FAST                'g'\n         158  CALL_METHOD_1         1  ''\n         160  POP_TOP          \n\n  57     162  LOAD_FAST                'g'\n         164  LOAD_ATTR                entity\n         166  LOAD_ATTR                username\n         168  LOAD_CONST               None\n         170  COMPARE_OP               !=\n         172  POP_JUMP_IF_FALSE   202  'to 202'\n\n  58     174  LOAD_GLOBAL              print\n         176  LOAD_STR                 'Error: '\n         178  LOAD_FAST                'o'\n         180  LOAD_ATTR                message\n         182  FORMAT_VALUE          0  ''\n         184  LOAD_CONST               u' \\u0410\\u043a\\u043a\\u0430\\u0443\\u043d\\u0442 \\u043f\\u043e\\u043a\\u0438\\u043d\\u0443\\u043b @'\n         186  LOAD_FAST                'g'\n         188  LOAD_ATTR                entity\n         190  LOAD_ATTR                username\n         192  FORMAT_VALUE          0  ''\n         194  BUILD_STRING_4        4  ''\n         196  CALL_FUNCTION_1       1  ''\n         198  POP_TOP          \n         200  JUMP_FORWARD        226  'to 226'\n         202  ELSE                     '226'\n\n  60     202  LOAD_GLOBAL              print\n         204  LOAD_STR                 'Error: '\n         206  LOAD_FAST                'o'\n         208  LOAD_ATTR                message\n         210  FORMAT_VALUE          0  ''\n         212  LOAD_CONST               u' \\u0410\\u043a\\u043a\\u0430\\u0443\\u043d\\u0442 \\u043f\\u043e\\u043a\\u0438\\u043d\\u0443\\u043b '\n         214  LOAD_FAST                'g'\n         216  LOAD_ATTR                name\n         218  FORMAT_VALUE          0  ''\n         220  BUILD_STRING_4        4  ''\n         222  CALL_FUNCTION_1       1  ''\n         224  POP_TOP          \n       226_0  COME_FROM           200  '200'\n         226  POP_BLOCK        \n         228  BEGIN_FINALLY    \n       230_0  COME_FROM_FINALLY   150  '150'\n         230  LOAD_CONST               None\n         232  STORE_FAST               'o'\n         234  DELETE_FAST              'o'\n         236  END_FINALLY      \n         238  POP_EXCEPT       \n         240  JUMP_FORWARD        474  'to 474'\n\n  61     242  DUP_TOP          \n         244  LOAD_GLOBAL              errors\n         246  LOAD_ATTR                FloodError\n         248  COMPARE_OP               exception-match\n         250  POP_JUMP_IF_FALSE   302  'to 302'\n         254  POP_TOP          \n         256  STORE_FAST               'e'\n         258  POP_TOP          \n         260  SETUP_FINALLY       290  'to 290'\n\n  62     262  LOAD_GLOBAL              print\n         264  LOAD_STR                 'Error: '\n         266  LOAD_FAST                'e'\n         268  LOAD_ATTR                message\n         270  FORMAT_VALUE          0  ''\n         272  BUILD_STRING_2        2  ''\n         274  CALL_FUNCTION_1       1  ''\n         276  POP_TOP          \n\n  63     278  POP_BLOCK        \n         280  POP_EXCEPT       \n         282  CALL_FINALLY        290  'to 290'\n         284  JUMP_BACK            98  'to 98'\n         286  POP_BLOCK        \n         288  BEGIN_FINALLY    \n       290_0  COME_FROM           282  '282'\n       290_1  COME_FROM_FINALLY   260  '260'\n         290  LOAD_CONST               None\n         292  STORE_FAST               'e'\n         294  DELETE_FAST              'e'\n         296  END_FINALLY      \n         298  POP_EXCEPT       \n         300  JUMP_FORWARD        474  'to 474'\n\n  64     302  DUP_TOP          \n         304  LOAD_GLOBAL              PeerIdInvalidError\n         306  COMPARE_OP               exception-match\n         308  POP_JUMP_IF_FALSE   332  'to 332'\n         312  POP_TOP          \n         314  POP_TOP          \n         316  POP_TOP          \n\n  65     318  LOAD_DEREF               'client'\n         320  LOAD_METHOD              delete_dialog\n         322  LOAD_FAST                'g'\n         324  CALL_METHOD_1         1  ''\n         326  POP_TOP          \n         328  POP_EXCEPT       \n         330  JUMP_FORWARD        474  'to 474'\n\n  66     332  DUP_TOP          \n         334  LOAD_GLOBAL              MessageTooLongError\n         336  COMPARE_OP               exception-match\n         338  POP_JUMP_IF_FALSE   368  'to 368'\n         342  POP_TOP          \n         344  POP_TOP          \n         346  POP_TOP          \n\n  67     348  LOAD_GLOBAL              print\n         350  LOAD_STR                 'Message was too long ==> '\n         352  LOAD_FAST                'g'\n         354  LOAD_ATTR                name\n         356  FORMAT_VALUE          0  ''\n         358  BUILD_STRING_2        2  ''\n         360  CALL_FUNCTION_1       1  ''\n         362  POP_TOP          \n         364  POP_EXCEPT       \n         366  JUMP_FORWARD        474  'to 474'\n\n  68     368  DUP_TOP          \n         370  LOAD_GLOBAL              errors\n         372  LOAD_ATTR                BadRequestError\n         374  COMPARE_OP               exception-match\n         376  POP_JUMP_IF_FALSE   420  'to 420'\n         380  POP_TOP          \n         382  STORE_FAST               'i'\n         384  POP_TOP          \n         386  SETUP_FINALLY       408  'to 408'\n\n  69     388  LOAD_GLOBAL              print\n         390  LOAD_STR                 'Error: '\n         392  LOAD_FAST                'i'\n         394  LOAD_ATTR                message\n         396  FORMAT_VALUE          0  ''\n         398  BUILD_STRING_2        2  ''\n         400  CALL_FUNCTION_1       1  ''\n         402  POP_TOP          \n         404  POP_BLOCK        \n         406  BEGIN_FINALLY    \n       408_0  COME_FROM_FINALLY   386  '386'\n         408  LOAD_CONST               None\n         410  STORE_FAST               'i'\n         412  DELETE_FAST              'i'\n         414  END_FINALLY      \n         416  POP_EXCEPT       \n         418  JUMP_FORWARD        474  'to 474'\n\n  70     420  DUP_TOP          \n         422  LOAD_GLOBAL              errors\n         424  LOAD_ATTR                RPCError\n         426  COMPARE_OP               exception-match\n         428  POP_JUMP_IF_FALSE   472  'to 472'\n         432  POP_TOP          \n         434  STORE_FAST               'a'\n         436  POP_TOP          \n         438  SETUP_FINALLY       460  'to 460'\n\n  71     440  LOAD_GLOBAL              print\n         442  LOAD_STR                 'Error: '\n         444  LOAD_FAST                'a'\n         446  LOAD_ATTR                message\n         448  FORMAT_VALUE          0  ''\n         450  BUILD_STRING_2        2  ''\n         452  CALL_FUNCTION_1       1  ''\n         454  POP_TOP          \n         456  POP_BLOCK        \n         458  BEGIN_FINALLY    \n       460_0  COME_FROM_FINALLY   438  '438'\n         460  LOAD_CONST               None\n         462  STORE_FAST               'a'\n         464  DELETE_FAST              'a'\n         466  END_FINALLY      \n         468  POP_EXCEPT       \n         470  JUMP_FORWARD        474  'to 474'\n         472  END_FINALLY      \n       474_0  COME_FROM           470  '470'\n       474_1  COME_FROM           418  '418'\n       474_2  COME_FROM           366  '366'\n       474_3  COME_FROM           330  '330'\n       474_4  COME_FROM           300  '300'\n       474_5  COME_FROM           240  '240'\n       474_6  COME_FROM           130  '130'\n\n  72     474  LOAD_FAST                'j'\n         476  LOAD_FAST                'k'\n         478  BINARY_ADD       \n         480  STORE_FAST               'j'\n\n  73     482  LOAD_CONST               0\n         484  STORE_FAST               'k'\n         486  JUMP_BACK            98  'to 98'\n\n  74     488  LOAD_GLOBAL              system\n         490  LOAD_STR                 'cls'\n         492  CALL_FUNCTION_1       1  ''\n         494  POP_TOP          \n\n  75     496  LOAD_GLOBAL              print\n         498  LOAD_CONST               u'ID \\u0430\\u043a\\u043a\\u0430\\u0443\\u043d\\u0442\\u0430:'\n         500  LOAD_GLOBAL              api_id\n         502  CALL_FUNCTION_2       2  ''\n         504  POP_TOP          \n\n  76     506  LOAD_GLOBAL              print\n         508  LOAD_CONST               u'\\u041e\\u0442\\u043f\\u0440\\u0430\\u0432\\u043b\\u0435\\u043d\\u043e \\u0441\\u043e\\u043e\\u0431\\u0449\\u0435\\u043d\\u0438\\u0438\\u0306: '\n         510  LOAD_FAST                'j'\n         512  CALL_FUNCTION_2       2  ''\n         514  POP_TOP          \n\n  77     516  LOAD_GLOBAL              sleep\n         518  LOAD_FAST                'delay'\n         520  CALL_FUNCTION_1       1  ''\n         522  POP_TOP          \n\n  78     524  LOAD_FAST                'groups'\n         526  LOAD_METHOD              clear\n         528  CALL_METHOD_0         0  ''\n         530  POP_TOP          \n         532  JUMP_BACK            66  'to 66'\n         534  POP_BLOCK        \n         536  BEGIN_FINALLY    \n       538_0  COME_FROM_WITH       38  '38'\n         538  WITH_CLEANUP_START\n         540  WITH_CLEANUP_FINISH\n         542  END_FINALLY      \n\nParse error at or near `CALL_FINALLY' instruction at offset 282\n\n\n    if __name__ == '__main__':\n        spammer(client)\n</code></pre>\nLooks like it's just a Telegram spammer.\nThe unicode strings are Russian prompts like:\n<pre><code>Enter the delay between mailings (in seconds\n</code></pre>\n",
            "votes": "1",
            "user": "Nathan Smith",
            "time": "Sep 19, 2023 at 16:14",
            "is_accepted": false,
            "comments": []
        }
    ]
}