{
    "title": "Finding Code Reference String in MS-DOS 16-bit Executable with IDA Pro",
    "link": "https://reverseengineering.stackexchange.com/questions/26282/finding-code-reference-string-in-ms-dos-16-bit-executable-with-ida-pro",
    "content": "Have an application that has code to detect serial port model. I'm trying to work out how it works through static analysis. I have unpacked the EXE and can find the references to the strings:\n<pre><code>dseg:2DA8 38 32 35 30 00           a8250     db '8250',0      ; DATA XREF: seg124:4EC1↑o\ndseg:2DAD 31 36 34 35 30 00        a16450    db '16450',0     ; DATA XREF: seg124:4EC6↑o\ndseg:2DB3 31 36 35 35 30 00        a16550    db '16550',0     ; DATA XREF: seg124:4ECB↑o\ndseg:2DB9 31 36 35 35 30 41 46 00  a16550af  db '16550AF',0   ; DATA XREF: seg124:4ED0↑o\ndseg:2DC1 31 36 35 35 31 00        a16551    db '16551',0     ; DATA XREF: seg124:4ED5↑o\ndseg:2DC7 31 36 35 35 32 00        a16552    db '16552',0     ; DATA XREF: seg124:4EDA↑o\ndseg:2DCD 38 32 30 35 30 00        a82050    db '82050',0     ; DATA XREF: seg124:4EDF↑o\ndseg:2DD3 38 32 35 31 30 00        a82510    db '82510',0     ; DATA XREF: seg124:4EE4↑o\n</code></pre>\nNow when when I hit x to find the XRef for these I am taking to strings and the string length values:\n<pre><code>seg124:4EC0 04                               db    4   \nseg124:4EC1 A8 2D 26 6A                      dd a8250         ; \"8250\"\nseg124:4EC5 05                               db    5   \nseg124:4EC6 AD 2D 26 6A                      dd a16450        ; \"16450\"\nseg124:4ECA 05                               db    5   \nseg124:4ECB B3 2D 26 6A                      dd a16550        ; \"16550\"\nseg124:4ECF 07                               db    7   \nseg124:4ED0 B9 2D 26 6A                      dd a16550af      ; \"16550AF\"\nseg124:4ED4 05                               db    5   \nseg124:4ED5 C1 2D 26 6A                      dd a16551        ; \"16551\"\nseg124:4ED9 05                               db    5   \nseg124:4EDA C7 2D 26 6A                      dd a16552        ; \"16552\"\nseg124:4EDE 05                               db    5   \nseg124:4EDF CD 2D 26 6A                      dd a82050        ; \"82050\"\nseg124:4EE3 05                               db    5   \nseg124:4EE4 D3 2D 26 6A                      dd a82510        ; \"82510\"\n</code></pre>\nThere is no reference to these automatically found by IDA. Is there a value or instruction I could search for to narrow the search. i.e. a reference to <pre><code>seg124:4ECB</code></pre>\nI have also tried to use a live debugger but I get Out of Memory error which is why I'm trying to work it out statically\n",
    "votes": "2",
    "answers": 2,
    "views": "537",
    "tags": [
        "ida",
        "dos"
    ],
    "user": "chentiangemalc",
    "time": "Nov 11, 2020 at 7:50",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "Have you tried it in DOSBox? There's a project out there somewhere which helps connecting the \"checked\" build of DOSBox with IDA. I think IDADos or so?\n",
            "time": null
        },
        {
            "user": "Dvd848",
            "text": "In the past I was able to use W32Dasm (version 10.0) in order to find string references for 16-bit programs when IDA and Ghidra failed\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I found the code accessing the string using SoftICE for MS-DOS.\nTo use I did the following:\n\nAdd SoftICE driver as first entry in CONFIG.SYS\n\nDEVICE=C:\\SICE\\S-ICE.EXE /SYM 50\n\n\nLaunch program and Alt+PrintScreen triggered break into SoftICE Window. (SoftIce Documentation also mentioned Ctrl+D but this didn't work for me)\n\nSearched memory for my target string:\n\n\ns 0 L FFFFFFFF \"16550AF\nWhich output memory address 6AF0:2DB9\n\nSet breakpoint on read/write memory access for that location:\n\nbpm 6AF0:2DB9 RW\n\n\nX to continue program execution\n\nOn breakpoint the instruction mov al,ES:[BX] access the string location\n\nIDA pro was searched for the bytes i.e. 26 8A 07 25 FF 00 75 03 to find the instruction:\n",
            "votes": "2",
            "user": "chentiangemalc",
            "time": "Nov 13, 2020 at 20:35",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "It seems you have an array of records of the following format:\n<pre><code>struct msg_rec\n{\n char len;\n char __far *string;\n};\n</code></pre>\n(possibly the fields are swapped)\nIn such case a good strategy is to scroll up until the first read or offset xref - that should be the code which walks or indexes the array and retrieves the string address.\n",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Nov 16, 2020 at 18:40",
            "is_accepted": false,
            "comments": []
        }
    ]
}