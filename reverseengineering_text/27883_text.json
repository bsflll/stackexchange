{
    "title": "Set lldb breakpoint relative to ASLR slide",
    "link": "https://reverseengineering.stackexchange.com/questions/27883/set-lldb-breakpoint-relative-to-aslr-slide",
    "content": "I want to set a breakpoint at an offset within a file.\nI can do this fine if I launch the app, check where it is loaded with <pre><code>image list testapp</code></pre> and then add the offset of where in the binary I want the breakpoint e.g.:\n<pre><code>breakpoint set -a 0x10100cff4\n</code></pre>\nIs there a way whereby I can set the breakpoint in one go without first checking the offset it is loaded at so that I can automate a task more easily. e.g. something similar to:\n<pre><code>breakpoint set -a ((image list -o testapp)+0x100168ff4)\n</code></pre>\nI suspect I could do it with Python however that is not working for me at the moment on Ubuntu so would prefer a way it can be done with lldb commands.\nAlternatively, I can add a breakpoint with:\n<pre><code>breakpoint set --name function_name\n</code></pre>\nbut it is only one instruction I want to break on so still need to add an offset to that address as I then have a command that is performed when it is reached and then resumes.\nThanks\n",
    "votes": "1",
    "answers": 1,
    "views": "1k",
    "tags": [
        "breakpoint",
        "lldb",
        "offset"
    ],
    "user": "Jon",
    "time": "Jun 23, 2021 at 14:49",
    "comments": [],
    "answers_data": [
        {
            "content": "This is possible with a command like:\n<pre><code>breakpoint set -a 0x100168ff4 -s testapp\n</code></pre>\nas from <pre><code>lldb</code></pre>'s <pre><code>help breakpoint add</code></pre>, when you specify a module with <pre><code>-s</code></pre> then the address or expression passed with <pre><code>-a</code></pre>:\n\nwill be treated as a file address in that module, and\nresolved accordingly.  Again, this will allow lldb to track that offset on subsequent reloads.  The module need not have been loaded at the time you specify this breakpoint, and will get resolved\nwhen the module is loaded.\n\nWith many thanks to Scott Knight for the pointer on this.\n",
            "votes": "1",
            "user": "Jon",
            "time": "Jun 24, 2021 at 15:40",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Kamil.S",
                    "text": "<span class=\"comment-copy\">Shorter syntax <code>b -a 0x100168ff4 -s testapp</code></span>",
                    "time": null
                },
                {
                    "user": "Jon",
                    "text": "<span class=\"comment-copy\">Thanks, I still have a lot to learn :)</span>",
                    "time": null
                }
            ]
        }
    ]
}