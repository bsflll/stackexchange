{
    "title": "Can we decompile an .exe or .dll as %100? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/16248/can-we-decompile-an-exe-or-dll-as-100",
    "content": "Closed. This question is opinion-based. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Update the question so it can be answered with facts and citations by editing this post.\n\n\nClosed 7 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\n\nCan we decompile a .exe or .dll file as 100%? Also sometimes seems some\nmistakes on somewhere (like mainfrm.cs) , how can we fix that?\nWhat is the best .NET decompiler? or What would you prefer?\n\nI wanna get an  answer for my questions. Thanks!...\n",
    "votes": "1",
    "answers": 1,
    "views": "63k",
    "tags": [
        "decompilation",
        "decompile",
        "decompiler",
        "c#"
    ],
    "user": "Busi",
    "time": "7 years ago",
    "comments": [
        {
            "user": "NirIzr",
            "text": "Decompilation is not something you can easily perform programmatically, some tools try but eventually you'll have to have a human do at least some of the work.\n",
            "time": null
        },
        {
            "user": "Busi",
            "text": "Could you be more clear? so when i decompiled a file it was giving  like 140+ errors, couldn't fix it...\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Since the compilation output of .NET languages is MSIL, which is quite readable itself, it can be transformed back to (almost) original source code.\nThere are many applications which can do that.\nMy favourite is dnSpy since it's free, open source and has debugging functionalities. AFAIK it can even try to build a Visual Studio Solution (<pre><code>.sln</code></pre>) file from your input which should be what you look for.\nBut under certain circumstances some information is lost during the compilation process.\nYou would have to manually fix those errors. For example anonymous functions can confuse a decompiler easily. And of course - if the developer tries to protect his application there are various techniques like obfuscation which would make your life harder.\nSo to answer your questions directly:\n\nIn most cases there isn't a 100% <pre><code>Plug and Play</code></pre> solution. You will have to fix a few things yourself if you want to have a recompilable project.\nSince <pre><code>best ..</code></pre> is very subjective here are a few suggestions (in no particular order):\n\n\nhttps://github.com/0xd4d/dnSpy (free, open source)\nhttps://www.red-gate.com/products/dotnet-development/reflector/ (paid)\nhttps://www.jetbrains.com/decompiler/ (free?)\nhttp://ilspy.net/ (free, open source)\n",
            "votes": "3",
            "user": "Michael Pittino",
            "time": "Sep 3, 2017 at 12:37",
            "is_accepted": false,
            "comments": []
        }
    ]
}