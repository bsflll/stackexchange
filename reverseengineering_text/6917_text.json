{
    "title": "How can one debug a program that can only be started by other processes?",
    "link": "https://reverseengineering.stackexchange.com/questions/6917/how-can-one-debug-a-program-that-can-only-be-started-by-other-processes",
    "content": "I am now trying to figure out the innards of a custom made program that I've found difficult to debug using a debugger.\nThe program starts by using a bash script wrapper to process input parameters, and then execute an encrypted perl script, which somehow starts another process which is a binary executable and cannot be started independently(even if I add all the parameters as seen using ps au when it is running normally, it still says some .so file is missing). \nNow suppose one wants to debug this binary using something like IDA, how do you set it up? Take IDA as an example, in the \"process option\" I have used the bash wrapper in \"App path\", the binary as \"input file path\", and it turns out the debugger would not go into the binary's space, and just stays in the exceptions inside glibc library and none of the breakpoints set in the binary would be reached. (However the program was running fine, just that debugger cannot go inside.) \nAny thoughts about what is happening and the right way of doing it?\n",
    "votes": "2",
    "answers": 0,
    "views": "191",
    "tags": [
        "linux",
        "debugging",
        "anti-debugging",
        "multi-process",
        "process"
    ],
    "user": "Disenchanted Toad",
    "time": "Dec 29, 2014 at 5:24",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "\"(even if I add all the parameters as seen using ps au when it is running normally, it still says some .so file is missing)\" probably means the starter script messes around with <pre><code>LD_LIBRARY_PATH</code></pre>, <pre><code>LD_PRELOAD</code></pre> or something similar. The first thing i'd try to do is <pre><code>strace -f -s 9999 <bash_script></code></pre> and maybe add <pre><code>-v execve</code></pre> to see the parameters and environment when the binary process gets started.\n",
            "time": null
        },
        {
            "user": "Disenchanted Toad",
            "text": "Thanks, this is quite helpful. It was indeed some LD_ related problem.\n",
            "time": null
        }
    ],
    "answers_data": []
}