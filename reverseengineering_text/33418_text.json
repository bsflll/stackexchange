{
    "title": "The opaque value of NEFilterPacketContext struct in macOS network extension",
    "link": "https://reverseengineering.stackexchange.com/questions/33418/the-opaque-value-of-nefilterpacketcontext-struct-in-macos-network-extension",
    "content": "I'm using NEPacketFilterProvider, which intercept all outgoing/incoming packets from all interfaces and protocols. on packet event I get callback to PacketHandler which has the following signature :\n<pre><code>public typealias NEFilterPacketHandler = (NEFilterPacketContext, nw_interface_t, NETrafficDirection, UnsafeRawPointer, Int) -> NEFilterPacketProvider.Verdict\n</code></pre>\nI'm particularly interested in the <pre><code>NEFilterPacketContext</code></pre> object which is currently opaque and has no documentation. I was wondering if this object can provide me insights about the packet's source app (either PID or procname)\nIs it possible to extract this info from the object NEFilterPacketContext ?\nThanks\n",
    "votes": "1",
    "answers": 1,
    "views": "20",
    "tags": [
        "networking",
        "macos"
    ],
    "user": "osxUser",
    "time": "Mar 26 at 8:16",
    "comments": [],
    "answers_data": [
        {
            "content": "There is a very similar question here on the Apple Developer forum, where Quinn, the font of all Apple knowledge, replies that:\n\n<pre><code>NEFilterPacketContext</code></pre> is just a token that the system gives to you so that you can, if you like, call <pre><code>-delayCurrentPacket:</code></pre>, passing it that context. It has no API; all you can do is pass it around.\n\nand that\n\nFinding out what app it come from is going to be tricky. If you delay the packet (resulting in an <pre><code>NEPacket</code></pre>) you may find useful info in the\nmetadata property. However, Iâ€™d advise against deferring every packet.\n",
            "votes": "0",
            "user": "Jon",
            "time": "Apr 1 at 13:18",
            "is_accepted": false,
            "comments": []
        }
    ]
}