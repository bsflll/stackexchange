{
    "title": "binwalk cannot find gzip sections",
    "link": "https://reverseengineering.stackexchange.com/questions/13547/binwalk-cannot-find-gzip-sections",
    "content": "I am starring at the following exe file, see main page here. It seems pretty clear (using -E entropy option) that the exe contains compressed section. For some reason <pre><code>binwalk</code></pre> is not capable of finding the start of those sections.\nHere is what I have:\n<pre><code>$ binwalk -v -B PmsDView.exe \n\nScan Time:     2016-09-22 14:42:04\nTarget File:   /tmp/PmsDView.exe\nMD5 Checksum:  911d92675f559a40400f7ca2b69c8544\nSignatures:    344\n\nDECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n0             0x0             Microsoft executable, portable (PE)\n2015          0x7DF           Copyright string: \"Copyright 1995-2005 Mark Adler \"\n</code></pre>\nHowever it seems like they are using <pre><code>gzip</code></pre>:\n<pre><code>$ hexdump -C PmsDView.exe\n000007a0  30 00 30 00 31 00 35 00  00 00 00 00 4c 64 72 47  |0.0.1.5.....LdrG|\n000007b0  65 74 50 72 6f 63 65 64  75 72 65 41 64 64 72 65  |etProcedureAddre|\n000007c0  73 73 00 00 6e 74 64 6c  6c 00 00 00 00 00 00 00  |ss..ntdll.......|\n000007d0  20 69 6e 66 6c 61 74 65  20 31 2e 32 2e 33 20 43  | inflate 1.2.3 C|\n000007e0  6f 70 79 72 69 67 68 74  20 31 39 39 35 2d 32 30  |opyright 1995-20|\n000007f0  30 35 20 4d 61 72 6b 20  41 64 6c 65 72 20 00 00  |05 Mark Adler ..|\n</code></pre>\nAm I missing something ? Or did they mask the <pre><code>gzip</code></pre> signature ?\n",
    "votes": "1",
    "answers": 2,
    "views": "2k",
    "tags": [
        "binary-analysis",
        "decompress"
    ],
    "user": "tibar",
    "time": "Sep 22, 2016 at 12:48",
    "comments": [],
    "answers_data": [
        {
            "content": "Binwalk did not find the zlib blob because it is also encrypted. It uses the following code to decrypt the compressed data. The decryption uses a table stored in the stack, which is filled with generated values before the loop.\n\nThus, you have to reverse the decryption code or save the decompressed data from the memory.\n",
            "votes": "3",
            "user": "ebux",
            "time": "Sep 22, 2016 at 13:46",
            "is_accepted": true,
            "comments": [
                {
                    "user": "tibar",
                    "text": "<span class=\"comment-copy\">could you recommend a tool to dump data from memory to file ?</span>",
                    "time": null
                },
                {
                    "user": "ebux",
                    "text": "<span class=\"comment-copy\">Try <a href=\"https://technet.microsoft.com/en-us/sysinternals/dd996900.aspx\" rel=\"nofollow noreferrer\">ProcDump</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "Please refer to https://en.wikibooks.org/wiki/Reverse_Engineering/File_Formats for the following example:\n<pre><code>inflate 1.1.3 Copyright 1995-1998 Mark Adler \n</code></pre>\n\nIt is a good bet to assume that at least parts of the file are ZIP\n  compressed. Further probing might reveal that the file does not\n  contain a complete ZIP archive, but just a section which is compressed\n  with the ZIP deflate algorithm, and supposed to be decompressed with\n  the ZIP inflate algorithm (likely version 1.1.3, as the output of\n  strings revealed). Therefore, the fictitious file might be further\n  separated into its components by using a custom tool which iteratively\n  applies the inflate algorithm to the file, until the generated result\n  makes some sense (e.g. until the result contains some recognizable\n  clear text strings).\n\nIt seems to be the very same case for new, except that your inflate's version is 1.2.3\n",
            "votes": "1",
            "user": "Nordwald",
            "time": "Sep 22, 2016 at 13:26",
            "is_accepted": false,
            "comments": []
        }
    ]
}