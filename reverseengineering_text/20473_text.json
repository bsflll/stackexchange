{
    "title": "Print opcodes in trace - x64dbg",
    "link": "https://reverseengineering.stackexchange.com/questions/20473/print-opcodes-in-trace-x64dbg",
    "content": "How can I print the opcodes in a trace log?\nI can use <pre><code>{x:bswap([cip])}</code></pre> but this will print a fix amount of bytes (which most of the time will end up as either more or less number of bytes), regardless of the ones that the instruction does have\n",
    "votes": "0",
    "answers": 2,
    "views": "794",
    "tags": [
        "x64dbg"
    ],
    "user": "user1156544",
    "time": "Jan 26, 2019 at 5:08",
    "comments": [],
    "answers_data": [
        {
            "content": "You can use <pre><code>{mem;dis.len(cip)@cip}</code></pre>. See http://help.x64dbg.com/en/latest/introduction/Formatting.html for the relevant documentation.\n",
            "votes": "2",
            "user": "mrexodia",
            "time": "Jan 27, 2019 at 9:39",
            "is_accepted": true,
            "comments": [
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">@ mr exodia mem;ken@ addr is broken or does nit work  it either says format error or unknow blah blah from long time</span>",
                    "time": null
                },
                {
                    "user": "mrexodia",
                    "text": "<span class=\"comment-copy\">Perhaps you are using an older version?</span>",
                    "time": null
                },
                {
                    "user": "mrexodia",
                    "text": "<span class=\"comment-copy\">I tried and there appears to be a bug in the command separator so when using the command: log “{mem;dis.len(cip)@cip}” it will separate it into two commands and fail. But when using it in the log text everything works as expected...</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">@ mrexodia yes that command does not accept the semicolon and no i am using a fairly new snapshot but that doesn't matter it has been so for a long time i've tried. it i just pulled the v25 14nov2016 build and it exhibits the same behaviour</span>",
                    "time": null
                },
                {
                    "user": "mrexodia",
                    "text": "<span class=\"comment-copy\">See my previous post. The command is broken, but the trace “log text” field is working perfectly fine for me.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "trace record log file already logs opcodes\nselect the trace window\nselect start run trace\naccept the file name\nand start tracing\nit will trace 50000 steps (default can be configured in preferences) and stop \nand the format of trace file is documented so you can code some utility to parse it if you want\n",
            "votes": "0",
            "user": "blabb",
            "time": "Jan 26, 2019 at 17:29",
            "is_accepted": false,
            "comments": [
                {
                    "user": "user1156544",
                    "text": "<span class=\"comment-copy\">Yes, that is the Trace tab (Run Trace), but I am using the \"trace into\" which logs the results into a file directly</span>",
                    "time": null
                }
            ]
        }
    ]
}