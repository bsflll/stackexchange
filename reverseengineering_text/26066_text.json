{
    "title": "How do you recommend going for applying minor changes in an executable through a dll?",
    "link": "https://reverseengineering.stackexchange.com/questions/26066/how-do-you-recommend-going-for-applying-minor-changes-in-an-executable-through-a",
    "content": "My choice of words in the title might be poor, I apologize: english is not my primary language and I have no idea how to word it better.\nI have a game executable to which I applied several changes, changes can be small replacements of integer values here and there, but also jumps to code caves, as well as adding a new section where I could put longer pieces of code.\nIt is essentially a mod, and I'd like to distribute it without worrying about legality; so in short I'd like to avoid distributing the whole executable and just put all of my changes inside something like a DLL. I have no experience in writing a DLL, but what I understand is that I should be able to compile functions inside the DLL then somehow call them from the executable, and my hope would be that I don't need to modify the executable itself. Can someone confirm this?\nSo my understanding is that for every change I made in my mod, I should copy the whole functions that contains the changes (available to me as assembly only), then I probably should compile them in the DLL.\nWould that be a good way to go about it?\n",
    "votes": "1",
    "answers": 1,
    "views": "101",
    "tags": [
        "assembly",
        "dll",
        "game-hacking"
    ],
    "user": "An29",
    "time": "Oct 6, 2020 at 5:51",
    "comments": [
        {
            "user": "David",
            "text": "Do you need to apply the changes dynamically? Many old school game patches (and cracks) used binary diff files. These can be generated from the original EXE and your patched version. The output contains only the byte differences, so no concerns about distributing a copyrighted file.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I have no experience in writing a DLL, but what I understand is that I should be able to compile functions inside the DLL then somehow call them from the executable, and my hope would be that I don't need to modify the executable itself. Can someone confirm this?\n\nThis is correct.\nCheck out https://docs.microsoft.com/en-us/windows/win32/dlls/dllmain, common thing to do is making a new thread (CreateThread) in the process on DLL_PROCESS_ATTACH, or hook a game function.\n",
            "votes": "1",
            "user": "mathiasxx94",
            "time": "Oct 6, 2020 at 23:02",
            "is_accepted": false,
            "comments": []
        }
    ]
}