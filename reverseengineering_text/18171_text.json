{
    "title": "IDA sdk delete user struct member prevent creating gap",
    "link": "https://reverseengineering.stackexchange.com/questions/18171/ida-sdk-delete-user-struct-member-prevent-creating-gap",
    "content": "I have a problem using IDA SDK function <pre><code>del_struc_member(struc_t *sptr, ea_t offset)</code></pre> ,\nIf i use it on a member, it creates a gap[4] on the offset ( for dword type), it doesn't recalc the struct and it doesn't shrink it.\nIf i use another function from SDK, <pre><code>expand_struc(struc_t *sptr, ea_t offset, adiff_t delta, bool recalc=true);</code></pre> like so <pre><code>expand_struc(struc, 4, -4, true)</code></pre>; \nIt does delete the member and shrink it, but it deletes other gap's that goes after (that are needed)plus it change the type of other members , for example:\nbefore:\n<pre><code>  int field_1204;\n  _BYTE gap4B8[4];\n  int field_1212;\n</code></pre>\nafter:\n<pre><code>  int field_1204;\n  __declspec(align(8)) int field_1212;\n</code></pre>\nIf i delete member manually by CTRL+E, it does shrink and doesn't create this problems with removing gap's.\nWhat is correct way of removing a struct member and shrinking it ?\nP.S.\nMaybe i should set new type for all other gap's that are correct and only after that remove the member i don't need and shrink the struct . Or it would create same problems if its array ?\n",
    "votes": "1",
    "answers": 0,
    "views": "317",
    "tags": [
        "ida",
        "c++"
    ],
    "user": "LighFusion",
    "time": "May 4, 2018 at 15:57",
    "comments": [],
    "answers_data": []
}