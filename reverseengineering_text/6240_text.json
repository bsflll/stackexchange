{
    "title": "COM file starting point",
    "link": "https://reverseengineering.stackexchange.com/questions/6240/com-file-starting-point",
    "content": "I'm having issue reversing a small old COM file from the early 90s.  My understanding was that code begins at 0x100, however the one I have seems to begin at 0x90 (0s before).  However some of the commands point to locations well outside the program space and I'm wondering if the offset isn't wrong - particularly after c2.\nUsing onlinedisassembler.com, I have a few example segments below...\n<pre><code>.data:0x00000090    e612    out    0x12,al  \n.data:0x00000092    131c16  adc    ebx,DWORD PTR [esi+edx*1]    \n.data:0x00000095    d89ade3b6153    fcomp  DWORD PTR [edx+0x53613bde]   \n.data:0x0000009b    3831    cmp    BYTE PTR [ecx],dh    \n.data:0x0000009f    d309    ror    DWORD PTR [ecx],cl   \n.data:0x000000a1    41  inc    ecx  \n.data:0x000000a2    56  push   esi  \n.data:0x000000a3    5b  pop    ebx  \n.data:0x000000a4    ce  into    \n</code></pre>\n...\nAny guidance would be appreciated.\n",
    "votes": "0",
    "answers": 1,
    "views": "275",
    "tags": [
        "x86",
        "decompilation",
        "dos-com"
    ],
    "user": "youcantexplainthat",
    "time": "Jun 24, 2017 at 18:18",
    "comments": [
        {
            "user": "Guntram Blohm",
            "text": "This doesn't seem to look like valid code at all. I'm 99% sure it's something else, not processor instructions. Is that a COM object or a .com file? As you're saying \"code begins at 0x100\", i assume the 2nd. The space from 0x80 to 0xff was reserved for the command line, and wasn't initialized after the trailing '\\0', so what you're seeing is probably just random garbage.\n",
            "time": null
        },
        {
            "user": "youcantexplainthat",
            "text": "This is a .com file.  I agree that it's supposed to begin at 0x100, so I'm very confused.  If I look at what starts at 0x100, I get this: >    .data:0x00000000\t2453\tand    al,0x53 >    .data:0x00000002\t52\tpush   edx     .data:0x00000003\t4e\tdec    esi     .data:0x00000004\t59\tpop    ecx     .data:0x00000005\ta0b2e0212f\tmov   al,ds:0x2f21e0b2     .data:0x0000000a\t18f5\tsbb    ch,dh     .data:0x0000000c\tf3f3f9\trepz repz stc     .data:0x0000000f\t7d9b\tjge    0xffffffac     .data:0x00000011\t5d\tpop    ebp     .data:0x00000012\t224adb\tand    cl,BYTE PTR [edx-0x25]\t     .data:0x00000015\tb013\tmov    al,0x13\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "Are you sure these are executable files? Can you actually run them (in DOS)?\n",
            "time": null
        },
        {
            "user": "blabb",
            "text": "it seems oda silently ate 0f 25 between 9b and 9f 0f 25 iirc is an invalid opcode #ud exception should be generated can be some ntvdm detection not sure i had seen 0f 3f in vpc not generating exception but silently executing while most disassemblers couldnt decipher it\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "The DOS .COM files get loaded into the memory at offset 100h (the first 100h bytes are the PSP, allocated and filled by the DOS loader). The file on disk of course starts at byte 0 (which corresponds to address 100h in memory).\nSince .COM is just a binary blob with no headers, your disassembler has no idea about the address or even the processor mode it's using. That why you get garbage output.\nTo get correct results you need to ensure you're disassembling in 16-bit mode. On onlinedisassembler.com, this is the \"i8086\" option (which actually comes from binutils on which it's obviously based).\nHowever, the bytes you quote don't make sense even in 16-bit mode so it's possible the file has been compressed or encrypted. Since you did not quote the beginning of the file, we can only guess.\n",
            "votes": "4",
            "user": "Igor Skochinsky",
            "time": "Sep 15, 2014 at 22:51",
            "is_accepted": false,
            "comments": [
                {
                    "user": "youcantexplainthat",
                    "text": "<span class=\"comment-copy\">The bytes you see in my post at 0x90 are the first non zero bytes.  Everything before that is 00.</span>",
                    "time": null
                },
                {
                    "user": "youcantexplainthat",
                    "text": "<span class=\"comment-copy\">Using i8086 from 0x100, I still don't understand (then again my assembly is rusty)  `    0x00\t2453\tand   $0x53,%al   `    0x02\t52\tpush  %dx   `    0x03\t4e\tdec   %si   `    0x04\t59\tpop   %cx   `    0x05\ta0b2e0\tmov   0xe0b2,%al   `    0x08\t212f\tand   %bp,(%bx)   `    0x0a\t18f5\tsbb   %dh,%ch   `    0x0c\tf3f3f9\trepz repz stc   `    0x0f\t7d9b\tjge   0xffffffac   `    0x11\t5d\tpop   %bp   `    0x12\t224adb\tand   -0x25(%bp,%si),%cl   `    0x15\tb013\tmov   $0x13,%al   `    0x17\tfb\tsti   `    0x18\te510\tin    $0x10,%ax   `    0x1b\t33e2\txor   %dx,%sp   `    0x1d\t55\tpush  %bp   `    0x1e\t0411\tadd   $0x11,%al</span>",
                    "time": null
                },
                {
                    "user": "youcantexplainthat",
                    "text": "<span class=\"comment-copy\">Why doesn't code markup work in comments??!  So frustrating!</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">Just add a plain hexdump to your post, don't try to disassemble it. So far it seems your file may be not a com file at all.</span>",
                    "time": null
                },
                {
                    "user": "blabb",
                    "text": "<span class=\"comment-copy\">tx igor for i8086 i played with addr16 and data16 with i386 didnt make any sense  thought oda didnt disassemble 16bit plucked the bytes and dropped it into debug.com didnt make sense either with  :\\&gt;awk \"{print $2}\" copypaste.txt | tr -d \\n\\r | xxd -r -p &gt; some.com :\\&gt;debug some.com -u 100 14F3:0100 E612          OUT     12,AL 14F3:0102 131C          ADC     BX,[SI] 14F3:0104 16            PUSH    SS 14F3:0105 D89ADE3B              FCOMP   DWORD PTR [BP+SI+3BDE] 14F3:0109 61            DB      61 14F3:010A 53            PUSH    BX 14F3:010B 3831          CMP     [BX+DI],DH</span>",
                    "time": null
                }
            ]
        }
    ]
}