{
    "title": "Find file signatures inside an unknown file",
    "link": "https://reverseengineering.stackexchange.com/questions/2161/find-file-signatures-inside-an-unknown-file",
    "content": "I have a .bin file I would like to analyse. Especially find images embedded in this firmware update.\n\nbinwalk couldn't find anything.\n\nWhat other tools do you know to search for possible embedded files?\n",
    "votes": "5",
    "answers": 1,
    "views": "3k",
    "tags": [
        "tools",
        "binary-analysis",
        "file-format",
        "firmware"
    ],
    "user": "samuirai",
    "time": "Jun 1, 2013 at 22:43",
    "comments": [
        {
            "user": "NirIzr",
            "text": "Usually, understanding raw firmware updates involves quite a bit of research. You should start with trying to analyze the file structure, if you can't match it to any known format\n",
            "time": null
        },
        {
            "user": "devttys0",
            "text": "Answering a couple questions might help: Are there any readable strings in the .bin? Have you looked for common executable opcodes in the .bin? Have you looked at an entropy analysis of the .bin? If you post a bug report on the binwalk project page with a copy of the .bin or a link to it (if you aren't under and NDA), maybe there are some improvements that can be made to binwalk's signatures that will help.\n",
            "time": null
        },
        {
            "user": "samuirai",
            "text": "I wanted to have this question a little bit more generic, so if you search for this problem you find a list of tools, rather than a solution for one example. Hachoir seems to be exactly what I was looking for. Unfortunately the image format in this firmware file seems not to be a standard image. It looks like a 2d array which will later be displayed as an image.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Your best bet is Hachoir-Subfile. You can pass a file stream to Hachior-Subfile, it will search for all known embedded files and display the location. Some known formats it will calculate the size of the file. This makes it easy to carve out the files using dd. A helpful description of Hachoir-Subfile was left by one of the developers a couple weeks back in a similar question.\n",
            "votes": "8",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": true,
            "comments": []
        }
    ]
}