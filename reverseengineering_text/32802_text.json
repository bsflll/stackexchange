{
    "title": "Windbg conditional breakpoint issue",
    "link": "https://reverseengineering.stackexchange.com/questions/32802/windbg-conditional-breakpoint-issue",
    "content": "Can't get a conditional breakpoint to fire in Windbg. I tried:\n<pre><code>bp xxxxxxxx \"j (@ebp+0C==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (ebp+0C==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (poi(ebp+0C)==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (poi(@ebp+0C)==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (poi(@ebp+0xC)==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (@ebp+0xC==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (@ebp+0x0C==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (poi(@ebp+0x0C)==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (ebp+0x0C==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (poi(ebp+0x0C)==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (poi(ebp+c)==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (ebp+c==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j (ebp+0x0c==115) ''; 'gc' \"\n\nbp xxxxxxxx \"j poi(ebp+0x0c)==115 ''; 'gc' \"\n</code></pre>\nThe 115 value is in hex.\nAnother thing I need is to have two conditions. Like:\n<pre><code>bp xxxxxxxx \"j ((poi(ebp+0x0c)==115)&&(poi(ebp+12)==7)) ''; 'gc' \"\n</code></pre>\nNothing works!\nThanks in adv\n",
    "votes": "0",
    "answers": 1,
    "views": "118",
    "tags": [
        "windbg"
    ],
    "user": "Uddie",
    "time": "May 6, 2024 at 4:59",
    "comments": [
        {
            "user": "Ali Rizvi-Santiago",
            "text": "Are you intending 115 in to be in hex, or decimal? By default the MASM number base is 16, which you can change with <pre><code>n</code></pre>. I know you suggest \"115\" to be in hex, but in your last expr, you dereference an unaligned pointer at 0x12 past <pre><code>%ebp</code></pre>.  Btw, you can specify decimal numbers with the \"0n\" prefix (as opposed to \"0x\" for hex). It's a good habit to use a prefix whenever you specify _all_ of your numbers. This way you can prevent a symbol lookup in case you mistype a hex number that's full of alpha-digits. Same deal with registers, by prefixing them with \"@\".\n",
            "time": null
        },
        {
            "user": "Ali Rizvi-Santiago",
            "text": "With regards to combining numerical expressions, the <pre><code>&&</code></pre> isn't a numeric expression, but you probably realize that \"==\" returns a 0 or 1 (you can test your expressions with <pre><code>? expr</code></pre>). So, if you just use a binary <pre><code>&</code></pre> between both comparisons, you can get the entire expr to return 1, which'd result in <pre><code>j</code></pre> executing the first command.  Wrt your list, at least one of those should work. It might help to clarify whether you're trying to deref a pointer at <pre><code>@ebp+0xc</code></pre> and check its value for 0x115, or check that <pre><code>@ebp+0xc == 0x115</code></pre>. You can also use <pre><code>.if (...) {}</code></pre> if quoting is messing you up.\n",
            "time": null
        },
        {
            "user": "Uddie",
            "text": "Thanks for reply Rizvi-Santago. I've already resolved the problem. It didn't trigger because of another reason. And the && never worked but the AND operator did!\n",
            "time": null
        },
        {
            "user": "Rohit Gupta",
            "text": "Uddie, please post that as an answer.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "The breakpoint would trigger but would not actually stop executing because you are continuing the execution using the 'gc' command right after it.\nif you want to just break conditionally the syntax is as follows (as mentioned here):\nbp /w \"(Condition)\" Address\n",
            "votes": "0",
            "user": "rotem.salinas",
            "time": "May 6, 2024 at 19:56",
            "is_accepted": false,
            "comments": []
        }
    ]
}