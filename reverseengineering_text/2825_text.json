{
    "title": "How do I determine the length of a routine on ARMv7?",
    "link": "https://reverseengineering.stackexchange.com/questions/2825/how-do-i-determine-the-length-of-a-routine-on-armv7",
    "content": "I am disassembling and reverse engineering the logic of an assembly routine written in ARMv7 (hope I'm using the right terminology, as I'm a newbie for this particular processor).\nIn doing so, I came across this site: Introduction to ARM. In order to determine how much code I need to disassemble, first, I need to determine the length of the code. It is my understanding that I only need to look for <pre><code>[Bxx][2]</code></pre> (branch) instructions and instructions that alter the PC (program counter), for example, \n\n<pre><code>MOV PC, r14</code></pre>\n<pre><code>POP {r4, r5, pc}</code></pre>\n\nCan someone please advise if I have missed out any instructions that I need to look out for? Thank you.\n",
    "votes": "8",
    "answers": 2,
    "views": "276",
    "tags": [
        "disassembly",
        "arm"
    ],
    "user": "chuacw",
    "time": "May 27, 2014 at 20:45",
    "comments": [],
    "answers_data": [
        {
            "content": "Here's what IDA considers a return in ARM:\n\n<pre><code>RET</code></pre> (=<pre><code>MOV PC, LR</code></pre>)\n<pre><code>POP {reglist}</code></pre> if <pre><code>reglist</code></pre> includes <pre><code>LR</code></pre> or <pre><code>PC</code></pre>\n<pre><code>LDMFD SP, {reglist}</code></pre>, <pre><code>LDMED SP, {reglist}</code></pre> or <pre><code>LDMDB R11, {reglist}</code></pre> if <pre><code>reglist</code></pre> includes <pre><code>LR</code></pre> or <pre><code>PC</code></pre>\n<pre><code>LDR PC, [SP], #4</code></pre>\n<pre><code>BX LR</code></pre>\n<pre><code>BX reg</code></pre> if preceded by <pre><code>POP {reglist}</code></pre> and <pre><code>reglist</code></pre> includes <pre><code>reg</code></pre>.\n",
            "votes": "7",
            "user": "Igor Skochinsky",
            "time": "Sep 23, 2013 at 10:57",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "In fact, there may be something like:\n<pre><code>.text:00192CB6                 POP             {R4}\n.text:00192CB8                 B.W             sub_268508\n.text:00192CB8 ; End of function XXX::YYY::zZz(void)\n</code></pre>\nIIRC I also have seen conditional branches leading outside of what I would expect to be function boundaries, but I cannot find any example now.\n",
            "votes": "2",
            "user": "18446744073709551615",
            "time": "May 22, 2014 at 7:44",
            "is_accepted": false,
            "comments": []
        }
    ]
}