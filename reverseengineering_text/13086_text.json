{
    "title": "Unpacking and dumping executable from DLL",
    "link": "https://reverseengineering.stackexchange.com/questions/13086/unpacking-and-dumping-executable-from-dll",
    "content": "I'm trying to unpack and dump executable from a DLL packed file, I've loaded the DLL to Immunity Debugger using LOADDLL.exe.\nI think I've reached the OEP <pre><code>0x3DADDD</code></pre> (the memory location of the unpacked code has been allocated with VirtualAlloc), When I'm trying to dump the unpacked code with OllyDumpEx I get the LOADDLL.exe sections and not the unpacked dump file sections (The dumped file is LOADDLL.exe), How can I dump the unpacked code and fix imports?\n\nThanks.\n",
    "votes": "0",
    "answers": 1,
    "views": "3k",
    "tags": [
        "immunity-debugger",
        "dumping"
    ],
    "user": "Kikapi",
    "time": "Jul 19, 2016 at 15:20",
    "comments": [],
    "answers_data": [
        {
            "content": "I would recommend using the starting address of the lpbuffer from \nWriteProcessMemory function and than setting OllyDump to that address (3rd option below Module) :\n\nAfter that if needed you can fix the IAT table with a tool like:\nScylla\n",
            "votes": "1",
            "user": "GelosSnake",
            "time": "Jul 20, 2016 at 6:44",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Kikapi",
                    "text": "<span class=\"comment-copy\">Thanks, I was able to find the PE Base, but when i try to Dump I get <code>Invalid Image Base</code> error <a href=\"https://s31.postimg.org/gwm54v27v/Screen_Shot_2016_07_20_at_5_57_09_PM.png\" rel=\"nofollow noreferrer\">s31.postimg.org/gwm54v27v/â€¦</a></span>",
                    "time": null
                }
            ]
        }
    ]
}