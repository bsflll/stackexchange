{
    "title": "Does empty enumeration in C structure creates unnamed field?",
    "link": "https://reverseengineering.stackexchange.com/questions/12423/does-empty-enumeration-in-c-structure-creates-unnamed-field",
    "content": "I was parsing some modified C++ headers with IDA when I come to some strange behavior. Imagine we have a structure like this (stored in a C header):\n<pre><code>struct S\n{\n    enum {EN0, EN1};\n\n    int m1;\n} ;\n</code></pre>\nWhen I parse it with IDA Pro the created type seems to threat the first unnamed enum as data member inside the structure. I'm thinking - is this correct behavior in the case?\nI tested this on online C compiler which seems not to count the enumeration inside <pre><code>struct S</code></pre> as part of its data (here - i tested sizeof of <pre><code>S</code></pre> when there is only enum in it and it gave size of 0).\n",
    "votes": "1",
    "answers": 1,
    "views": "341",
    "tags": [
        "ida",
        "decompilation",
        "c"
    ],
    "user": "rec",
    "time": "Apr 12, 2016 at 18:39",
    "comments": [],
    "answers_data": [
        {
            "content": "It's just a definition of an ENUM there is no declaration.\nTry this:\n<pre><code>struct S\n{\n    enum {EN0, EN1} myEnum;\n\n    int m1;\n} ;\n</code></pre>\nNow we have two ints.\n",
            "votes": "3",
            "user": "Ouss4",
            "time": "Apr 15, 2016 at 1:37",
            "is_accepted": false,
            "comments": []
        }
    ]
}