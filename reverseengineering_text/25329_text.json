{
    "title": "Set a breakpoint for a win command without an address",
    "link": "https://reverseengineering.stackexchange.com/questions/25329/set-a-breakpoint-for-a-win-command-without-an-address",
    "content": "How to make these columns empty or make a new breakpoint where they are empty? I just need a stop at these win commands (in the summary column), not at a specific address.\n\nI don't know what exactly should be in these columns and that is why I need them empty.\nSo I need to set a breakpoint for a command without an address. Maybe other debuggers can do this.\nUPDATE:\nI am looking for this functionality in x64dbg:\n\nSo there are no addresses. Does it support this?\n",
    "votes": "1",
    "answers": 0,
    "views": "142",
    "tags": [
        "x64dbg"
    ],
    "user": "oleedd",
    "time": "Jun 17, 2020 at 18:31",
    "comments": [
        {
            "user": "morsisko",
            "text": "The colum doesn't affect the breakpoint, it is just for visual purposes\n",
            "time": null
        },
        {
            "user": "oleedd",
            "text": "But I see that they work for these addresses. I need for any addresses. I don't know how to correctly set a breakpoint for Win API functions (without setting an address).\n",
            "time": null
        },
        {
            "user": "morsisko",
            "text": "Not sure if I understand you correctly, but you can do Ctrl+G -> type the name of winapi function -> Enter -> F2 to set breakpoint\n",
            "time": null
        },
        {
            "user": "oleedd",
            "text": "It founds addresses and I should set breakpoints for all of them. I need to set one time only for a function. So x64dbg shouldn't check addresses.\n",
            "time": null
        },
        {
            "user": "morsisko",
            "text": "Yes. You can ignore the disassembly, it means nothing, it is just for the visual purpose...\n",
            "time": null
        }
    ],
    "answers_data": []
}