{
    "title": "Obtaining MmNonPagedPoolStart on x64 systems",
    "link": "https://reverseengineering.stackexchange.com/questions/6483/obtaining-mmnonpagedpoolstart-on-x64-systems",
    "content": "On a x64 Windows 7 I want to get the limits of non paged pool. I know that _KDDEBUGGER_DATA64 structure has this information (fields like MmNonPagedPoolStart and MmNonPagedPoolEnd). \nOn x86 systems this structure was obtained from KPCR.KdVersionBlock, but looking with WinDbg at KPCR's on x64 systems, KdVersionBlock seems to always be null. \nIs there a way of getting this structure? Or another way of getting what I want? Maybe I'm not looking in the right place.\n",
    "votes": "3",
    "answers": 1,
    "views": "1k",
    "tags": [
        "windows",
        "memory"
    ],
    "user": "user3002428",
    "time": "Oct 16, 2014 at 15:13",
    "comments": [],
    "answers_data": [
        {
            "content": "<pre><code>nt!KdDebuggerDatablock</code></pre> used to be a public global symbol in NT\n<pre><code>lkd> x/v nt!KdDebuggerDataBlock\npub global 80545b60             0 nt!KdDebuggerDataBlock = <no type information> \n</code></pre>\n<pre><code>dpS  nt!KdDebuggerDataBlock lxxxx</code></pre> should fetch the <pre><code>NonPagedPoolStart</code></pre> \n<pre><code>lkd> !grep -i -c \"dpS nt!KdDebuggerDataBlock la5\" -e \"pool\"\n 8055b5a0 nt!ExpPagedPoolDescriptor\n 8054ab2c nt!ExpNumberOfPagedPools\n nt!MmMaximumNonPagedPoolInBytes\n 80553cb8 nt!MmNonPagedPoolStart\n</code></pre>\nThis should get the complete structure\n<pre><code>lkd> .printf \"%ma\\t%08x\n\" , nt!KdDebuggerDataBlock+10,poi(nt!KdDebuggerDataBlock+14)\nKDBG    00000290\nlkd> .for (r $t0=0 ; @$t0 <poi(nt!KdDebuggerDataBlock + 14) ; r $t0 = @$t0+4) { .printf \"%08x\\t%08x\\t%y\n\", (nt!KdDebuggerDataBlock + @$t0) ,poi(nt!KdDebuggerDataBlock + @$t0) ,poi(nt!KdDebuggerDataBlock + @$t0) }\n</code></pre>\n",
            "votes": "1",
            "user": "perror",
            "time": "Mar 6, 2015 at 9:35",
            "is_accepted": true,
            "comments": []
        }
    ]
}