{
    "title": "Associating Symbol Names with .PLT Entries",
    "link": "https://reverseengineering.stackexchange.com/questions/6213/associating-symbol-names-with-plt-entries",
    "content": "Doing some messing around with ELF (of both the x86 and ARM varieties).\nAssociating symbol names with entries in the <pre><code>.got</code></pre> section is straightforward.  Find the <pre><code>.got</code></pre> section, find the relocation section <pre><code>.rel.plt</code></pre>/<pre><code>.rela.plt</code></pre> whose <pre><code>.sh_info</code></pre> contains the index of the <pre><code>.got</code></pre>, and find the symbol section <pre><code>.dynsym</code></pre> that contains the symbol names.\nEverything lines up nicely between these sections, and I can accurately assign symbol names to entries in the <pre><code>.got</code></pre>.  \nHowever, I also want names for the stubs in the <pre><code>.plt</code></pre> section.  A rough percentage of the time, symbols for the <pre><code>.plt</code></pre> can be inferred based on the ordering of <pre><code>.got</code></pre> symbols, and an offset from the base of the <pre><code>.plt</code></pre> section.  For whatever reason, occasionally this is not the case.\nBinutils <pre><code>objdump</code></pre> can accurately generate them for x86, and IDA can accurately generate them for x86 and ARM (both without <pre><code>-g</code></pre> debugging symbols).  How are these generated?\nIn the case of IDA, I could reasonably assume there's some advanced logic going on based on interpretation of the instructions in the <pre><code>.plt</code></pre>, but I know that must not be the case for <pre><code>objdump</code></pre>.\n",
    "votes": "5",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ida",
        "elf",
        "got",
        "plt"
    ],
    "user": "Zach Riggle",
    "time": "Oct 14, 2014 at 3:54",
    "comments": [],
    "answers_data": [
        {
            "content": "See this thread. Basically, they rely on the fact that the order of PLT relocations matches the order of the stubs in <pre><code>.plt</code></pre> section, and the stubs are all of the same size.\nOn some platforms you can also use <pre><code>st_value</code></pre> of the symbol entry in the dynamic symbol table.\nIDA indeed usually does not rely on the order of symbols/relocations but checks the actual instructions in the stub.\n",
            "votes": "4",
            "user": "Igor Skochinsky",
            "time": "Sep 10, 2014 at 5:05",
            "is_accepted": true,
            "comments": []
        }
    ]
}