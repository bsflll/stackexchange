{
    "title": "What are the some of the special usecases of general purpose registers",
    "link": "https://reverseengineering.stackexchange.com/questions/8973/what-are-the-some-of-the-special-usecases-of-general-purpose-registers",
    "content": "Some of the general purpose registers are used for some specific reasons. For example <pre><code>EAX</code></pre> is used as an accumulator and to store return values, <pre><code>ECX</code></pre> is used as a counter, <pre><code>ESI</code></pre> and <pre><code>EDI</code></pre> are used to store the src and dst address, respectively. similarly, <pre><code>ESP</code></pre> and <pre><code>EBP</code></pre>.\nIs there any specific use case for<pre><code>EBX</code></pre> register? and Is there anything else that I have missed special use cases of general purpose registers?\nThank you.\n",
    "votes": "1",
    "answers": 1,
    "views": "231",
    "tags": [
        "disassembly",
        "assembly"
    ],
    "user": "Maggie",
    "time": "May 24, 2015 at 8:00",
    "comments": [
        {
            "user": "phuclv",
            "text": "Implicit uses and special-ness for each register\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "• AX/EAX/RAX: Accumulator\n• BX/EBX/RBX: Base index (for use with arrays)\n• CX/ECX/RCX: Counter\n• DX/EDX/RDX: Data/general\n• SI/ESI/RSI: Source index for string operations.\n• DI/EDI/RDI: Destination index for string operations.\n• SP/ESP/RSP: Stack pointer for top address of the stack.\n• BP/EBP/RBP: Stack base pointer for holding the address of the current stack frame.\n• IP/EIP/RIP: Instruction pointer. Holds the program counter, the current instruction address.\nSegment registers:\n• CS: Code Segment (used for IP)\n• DS: Data Segment (used for MOV)\n• SS: Stack Segment (used for SP)\n• ES: Destination Segment (used for MOVS, etc.)\n• FS: local store\n• GS: local store\n",
            "votes": "4",
            "user": "Sigtran",
            "time": "May 24, 2015 at 8:29",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Guntram Blohm",
                    "text": "<span class=\"comment-copy\">Note that the original 8086 design had a lot more limitations on what you could do with which register that current processors have. There's still stuff like <code>loop</code> which works on <code>cx</code> or its extensions, but most instructions that needed a specific (set of) register(s) on 8086 work with any, or almost any, register now.</span>",
                    "time": null
                },
                {
                    "user": "peter ferrie",
                    "text": "<span class=\"comment-copy\">specific case for [E/R]BX: xlat.</span>",
                    "time": null
                },
                {
                    "user": "phuclv",
                    "text": "<span class=\"comment-copy\">RIP is not a general purpose register. R11 also has a special purpose in kernel code. And even the above registers have a lot more special purposes than what you listed</span>",
                    "time": null
                }
            ]
        }
    ]
}