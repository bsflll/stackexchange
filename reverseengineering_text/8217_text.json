{
    "title": "Ways to define portable executable bitness 64 vs 32",
    "link": "https://reverseengineering.stackexchange.com/questions/8217/ways-to-define-portable-executable-bitness-64-vs-32",
    "content": "I found several ways to define the bitness of PE.\n\n<pre><code>IMAGE_FILE_HEADER</code></pre> contains the/a (how do you choose an article type in such place?) field <pre><code>Characteristics</code></pre> that could be checked for <pre><code>IMAGE_FILE_32BIT_MACHINE</code></pre>.\n<pre><code>IMAGE_OPTIONAL_HEADER</code></pre> contains the field <pre><code>Magic</code></pre> switched between <pre><code>IMAGE_NT_OPTIONAL_HDR32_MAGIC</code></pre>, <pre><code>IMAGE_NT_OPTIONAL_HDR64_MAGIC</code></pre> and some <pre><code>IMAGE_ROM_OPTIONAL_HDR_MAGIC</code></pre>.\n<pre><code>IMAGE_FILE_HEADER</code></pre> also contains Machine field that could be checked for \n\n0x8664 - x64\n0xaa64 - ARMv8 in 64-bit mode\n0x0200 - Intel Itanium processor family\n0x0284 - 64-bit Alpha AXP.\n\nAlso <pre><code>SizeOfOptionalHeader</code></pre> in <pre><code>IMAGE_FILE_HEADER</code></pre> could be checked for one of two specific values.\nAre all of them have the same meaning? Are there any difference, specific conditions, exceptional cases?\n\nI found that <pre><code>Machine</code></pre> field check is indirect way because the field is aimed to processor architecture defining. So it's indirect and unreliable as heuristic.\n<pre><code>SizeOfOptionalHeader</code></pre> varies even for the same bitness since some image directories can absent.\n",
    "votes": "3",
    "answers": 2,
    "views": "791",
    "tags": [
        "windows",
        "pe",
        "executable",
        "binary"
    ],
    "user": "SerG",
    "time": "Feb 13, 2015 at 17:00",
    "comments": [
        {
            "user": "MrSynAckSter",
            "text": "Is there any reason you can't just check for 64 bit registers in the decomp?\n",
            "time": null
        },
        {
            "user": "SerG",
            "text": "I look for truth. And I need fast and reliable way for automatic files processing.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "<pre><code>IMAGE_OPTIONAL_HEADER->MAGIC</code></pre> (which is not optional at all :] ) is what determines for the Windows OS Loader to load this as 32bit vs 64bit. Depending on the value at <pre><code>IMAGE_OPTIONAL_HEADER->MAGIC</code></pre> is how the loader will parse the rest of the <pre><code>IMAGE_OPTIONAL_HEADER</code></pre>. \nAnd as stated <pre><code>SizeOfOptionalHeader</code></pre> can be use as a cross reference.\nThe IMAGE_FILE_HEADER->MAGIC is used to determine the intended CPU. Mainly use to determine how machine code should be interpret.\n",
            "votes": "3",
            "user": "k0ng0",
            "time": "Feb 12, 2015 at 21:22",
            "is_accepted": false,
            "comments": [
                {
                    "user": "SerG",
                    "text": "<span class=\"comment-copy\">As Magic is already located inside optional header structure, it's likely bitness is defined before memory after IMAGE_FILE_HEADER will be \"mapped\" to 32 or 64 -bit kind of optional header struct.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "The Machine field will tell you the target platform, which includes its bitness, and the endianness of the section contents.  The PE header itself is little-endian (and the optional header is entirely optional for object files).\n",
            "votes": "0",
            "user": "peter ferrie",
            "time": "Feb 15, 2015 at 4:19",
            "is_accepted": false,
            "comments": []
        }
    ]
}