{
    "title": "How to debug an IDAPython script from within IDA?",
    "link": "https://reverseengineering.stackexchange.com/questions/2190/how-to-debug-an-idapython-script-from-within-ida",
    "content": "IDAPython is great plugin in IDA. It is so handy to write small script to decode, decrypt or fix (patch) a binary in IDA.  I can just write, load and run a script, and can use <pre><code>print</code></pre> for the usual shotgun debugging. But when I develop a bigger IDAPython script, I need a way to debug it. \nI have searched and found that I can debug IDAPython with WingIDE but I want to find another that doesn't require WingIDE. Is there another way to debug IDAPython scripts?\n",
    "votes": "17",
    "answers": 3,
    "views": "7k",
    "tags": [
        "python",
        "idapython",
        "ida"
    ],
    "user": "huyna",
    "time": "Jun 5, 2013 at 18:36",
    "comments": [
        {
            "user": "Willem Hengeveld",
            "text": "i guess i am old fashioned, i use 'print'\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "UPDATE: This seems to be obsolete.\nYou can debug IDAPython scripts using Python Tools for Visual Studio. It is completely free, and very easy to use.\nSee this tutorial for this information.\n",
            "votes": "2",
            "user": "tmr232",
            "time": "Aug 7, 2019 at 12:33",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Vitalii",
                    "text": "<span class=\"comment-copy\">The tutorial is wrong or obsolete. I repeated the steps with Visual Studio 2019 and IDA 7.2, it doesn't work. When Visual Studio starts to attach to IDA, it reports error. The error text is very informative ;) it is \"General error occurred\"...</span>",
                    "time": null
                },
                {
                    "user": "tmr232",
                    "text": "<span class=\"comment-copy\">Thanks. Edited the answer to reflect it.</span>",
                    "time": null
                },
                {
                    "user": "Trass3r",
                    "text": "<span class=\"comment-copy\">That <code>enable_attach(secret=\"</code> part is wrong. Needs to be something like <code>ptvsd.enable_attach(address=('localhost', 5678))</code>: <a href=\"https://reverseengineering.stackexchange.com/questions/25102/how-to-setup-vscode-with-idapython/26069#26069\" title=\"how to setup vscode with idapython\">reverseengineering.stackexchange.com/questions/25102/â€¦</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "You can do this.  Last summer I worked with Hexrays and WingIDE guys and got this working.  In fact its in the docs!\nhttp://wingware.com/doc/howtos/idapython \nIt rocks.\nRiley\n",
            "votes": "8",
            "user": "ril3y",
            "time": "Oct 4, 2013 at 13:50",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "As far as i know there's no way to debug python inside IDA.\nThere are, however, a few python tools you could use to debug your own code.\nbut it will essentially require you to develop your own python IDE/debugger utilities around the built-in python debugging tools.\nI'm listing the possible methods by order of complexity (simplest first):\nCompiling and running your own python code from python\nThe more basic approach is using the python <pre><code>compile</code></pre> built-in function to compile python code into bytecode, executing that with <pre><code>eval</code></pre> or <pre><code>exec</code></pre> (also built-in functions). <pre><code>compile</code></pre> returns an <pre><code>AST</code></pre> (Abstract Syntax Tree) object you can further manipulate/investigate.\nUsing The python debugger (from python)\nIf you want more advanced debugging abilities, python has it's own built-in python debugger module called <pre><code>pdb</code></pre>. You only need to tell <pre><code>pdb</code></pre> what python code to execute, and it'll spawn a debugger interface similar to <pre><code>gdb</code></pre>, the command line debugger lets you set conditional breakpoints, manipulate and analyze python code, and use most of the usual debugging tools.\nUsing the python debugging framework\nthe python debugger is built on top of python's <pre><code>bdb</code></pre> (basic debugger), it is a class implementing debugging functionality and can be used from within IDA's python command line. If you're going to use the <pre><code>bdb</code></pre> you'll have to create your own tools and UI around these utilities.\nEdit:\nI saw WingIDE only now. since OP didn't specify what exactly is the issue using WingIDE, I hope at least one of the methods will be relevant.\n",
            "votes": "4",
            "user": "NirIzr",
            "time": "Jun 6, 2013 at 17:48",
            "is_accepted": false,
            "comments": [
                {
                    "user": "cb88",
                    "text": "<span class=\"comment-copy\">I would imagine the issue is that it isn't cheap.</span>",
                    "time": null
                },
                {
                    "user": "NirIzr",
                    "text": "<span class=\"comment-copy\">@cb88: 45$ vs the ~500$ IDA costs?.. sounds a bit odd but i guess it may be the reason.</span>",
                    "time": null
                }
            ]
        }
    ]
}