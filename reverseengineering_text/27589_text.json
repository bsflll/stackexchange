{
    "title": "startup program exits with code 126 when executing program at entrypoint",
    "link": "https://reverseengineering.stackexchange.com/questions/27589/startup-program-exits-with-code-126-when-executing-program-at-entrypoint",
    "content": "I want to reverse engineer a program. I managed to find the entry point but every time I want to launch the application I get the same error `During startup program exited with code 126.\nHere is what I did:\n<pre><code>┌──(kali㉿kali)-[~/Documents/Guessy]\n└─$ gdb guessy\\?token=eyJ1c2VyX2lkIjoxNDM4LCJ0ZWFtX2lkIjpudWxsLCJmaWxlX2lkIjoxNjd9.YIyJZA.QQbX2E3vChspI95coiZvSzAwDOo\nGNU gdb (Debian 10.1-1.7) 10.1.90.20210103-git\nCopyright (C) 2021 Free Software Foundation, Inc.                                                                                                                                                                                            \nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\nType \"show copying\" and \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<https://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n    <http://www.gnu.org/software/gdb/documentation/>.\n\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from guessy?token=eyJ1c2VyX2lkIjoxNDM4LCJ0ZWFtX2lkIjpudWxsLCJmaWxlX2lkIjoxNjd9.YIyJZA.QQbX2E3vChspI95coiZvSzAwDOo...\n(No debugging symbols found in guessy?token=eyJ1c2VyX2lkIjoxNDM4LCJ0ZWFtX2lkIjpudWxsLCJmaWxlX2lkIjoxNjd9.YIyJZA.QQbX2E3vChspI95coiZvSzAwDOo)\n(gdb) break 1\nNo symbol table is loaded.  Use the \"file\" command.\n(gdb) break 0x0000000000006160\nFunction \"0x0000000000006160\" not defined.\nMake breakpoint pending on future shared library load? (y or [n]) \n(gdb) run\nStarting program: /home/kali/Documents/Guessy/guessy?token=eyJ1c2VyX2lkIjoxNDM4LCJ0ZWFtX2lkIjpudWxsLCJmaWxlX2lkIjoxNjd9.YIyJZA.QQbX2E3vChspI95coiZvSzAwDOo \nzsh:1: permission denied: /home/kali/Documents/Guessy/guessy?token=eyJ1c2VyX2lkIjoxNDM4LCJ0ZWFtX2lkIjpudWxsLCJmaWxlX2lkIjoxNjd9.YIyJZA.QQbX2E3vChspI95coiZvSzAwDOo\nDuring startup program exited with code 126.\n</code></pre>\nI found the entrypoint with this:\n<pre><code>┌──(kali㉿kali)-[~/Documents/Guessy]\n└─$ objdump -f /bin/ls                                                                                                                                                                                                                 130 ⨯\n\n/bin/ls:     file format elf64-x86-64\narchitecture: i386:x86-64, flags 0x00000150:\nHAS_SYMS, DYNAMIC, D_PAGED\nstart address 0x0000000000006160\n</code></pre>\n",
    "votes": "3",
    "answers": 3,
    "views": "6k",
    "tags": [
        "x86",
        "gdb",
        "elf",
        "x86-64"
    ],
    "user": "Revolucion for Monica",
    "time": "May 1, 2021 at 9:19",
    "comments": [],
    "answers_data": [
        {
            "content": "The program exiting with code 126 in GDB occurs when the current user does not have execute permissions for the binary being debugged:\n<pre><code>$ ls -l test\n-rw-r--r-- 1 user01 user01 110080 May  1 22:18 test\n\n$ gdb -q test\n...\ngef➤  run\nStarting program: /home/user01/test \n/bin/bash: /home/user01/test: Permission denied\n/bin/bash: line 0: exec: /home/user01/test: cannot execute: Permission denied\nDuring startup program exited with code 126.\n</code></pre>\nPlease note that when setting a break point to a specific address like <pre><code>0x0000000000006160</code></pre>, an asterisk must be used:\n\n<pre><code>break * 0x0000000000006160</code></pre> or <pre><code>break *0x0000000000006160</code></pre>\n\nThe following will result in an error:\n\n<pre><code>break 0x0000000000006160</code></pre>\n\nIn (2), GDB interprets the memory address as a function name. Since there is no function named <pre><code>0x0000000000006160</code></pre>, it prints the error message\n\n<pre><code>Function \"0x0000000000006160\" not defined.</code></pre>\n\nFor more information on GDB syntax see the GDB Command Reference:\n",
            "votes": "6",
            "user": "julian",
            "time": "May 2, 2021 at 2:25",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "You can also try to run:\n\nchmod +x your_filename\n",
            "votes": "1",
            "user": "Fire Shack",
            "time": "Jan 12, 2023 at 19:40",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "The program exiting with code 126 in GDB can occur if the executable file under debug and its sources are in a shared directory in a virtual machine.\nI copied the files in a non-shared directory in the same virtual machine and GDB could debug without errors.\n",
            "votes": "1",
            "user": "alboforlizo",
            "time": "Feb 9, 2023 at 14:51",
            "is_accepted": false,
            "comments": []
        }
    ]
}