{
    "title": "Computing function offset differences",
    "link": "https://reverseengineering.stackexchange.com/questions/12157/computing-function-offset-differences",
    "content": "When I'm trying to compute the difference between two functions loaded into memory:\n<pre><code>int _start(void)\n{\n    // code\n}\n\nint _end(void)\n{\n    // code\n}\n\nDWORD funcSize = (DWORD) _end - (DWORD) _start;\n</code></pre>\n<pre><code>funcSize</code></pre> is computed incorrectly. For example, if the offset of <pre><code>_start</code></pre> is 0x00291450 and the offset of <pre><code>_end</code></pre> is 0x002915a0 the difference between <pre><code>_end</code></pre> and <pre><code>_start</code></pre> is 0xffffff56. Why?\n",
    "votes": "-1",
    "answers": 1,
    "views": "125",
    "tags": [
        "c",
        "functions",
        "offset"
    ],
    "user": "Sebi",
    "time": "Mar 6, 2016 at 11:25",
    "comments": [],
    "answers_data": [
        {
            "content": "Because end is greater than start and you see the actual representation of negative number. <pre><code>(DWORD) _end - (DWORD) _start</code></pre> should give you a more reasonable number.\nJust for completeness sake: the computations with numbers you provided (may be checked in windows calculator or with python)\n<pre><code>0x002915a0 - 0x00291450 = 0x150\n0x00291450 - 0x002915a0 = -0x150 (0xfffffeb0) \n</code></pre>\nThe difference between numbers which ends with 0 can not end with non-zero like in number as you mentioned <pre><code>(0xffffff56)</code></pre>, so there is something wrong with your calculation.\nUPD:\nJust in case if you are using C language, you probably should use &_start and &_end instead of _start and _end.\n",
            "votes": "1",
            "user": "w s",
            "time": "Mar 6, 2016 at 14:39",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Sebi",
                    "text": "<span class=\"comment-copy\">Sorry I meant _end()  -  start() gives a negative number. Why does _end() have a smaller address than _start().</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">According to numbers you mentioned _end is greater than _start.</span>",
                    "time": null
                },
                {
                    "user": "Sebi",
                    "text": "<span class=\"comment-copy\">When I subtract the address of _start() from that of _end() the result is negative even though the address of _end() is greater than that of _start().</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">I updated the answer. Please review your calculation, something with the numbers and results is inconsistent.</span>",
                    "time": null
                },
                {
                    "user": "w s",
                    "text": "<span class=\"comment-copy\">And shouldn't you use &amp;_end instead of _end and &amp;_start instead of start correspondingly ?</span>",
                    "time": null
                }
            ]
        }
    ]
}