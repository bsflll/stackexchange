{
    "title": "Getting radare2 to load z80 binaries properly",
    "link": "https://reverseengineering.stackexchange.com/questions/23233/getting-radare2-to-load-z80-binaries-properly",
    "content": "I'm trying to disassemble some Sega Master System roms.\nIn order to do so, I've checked for the extra 512 bytes from old roms and once I was sure they weren't there, I proceeded to run radare2 on one of them, like so:\nr2 -A somerom.sms\nRadare2 correctly detects the file signature and loads it as z80 code, however when I go into visual mode, it shows the instructions as byte wide offsets (adding a lot of garbage instructions at each invalid address) but the z80 pc has 2 bytes wide steps/instructions. \nMy question would be: Is there a way to filter those extra addresses so the code can be displayed correctly?\nI've tried using:\nr2 -A -b 16 somerom.sms\nbut it doesn't change anything.\n",
    "votes": "1",
    "answers": 1,
    "views": "403",
    "tags": [
        "disassembly",
        "radare2",
        "rom"
    ],
    "user": "gb_away",
    "time": "Feb 11, 2020 at 15:55",
    "comments": [
        {
            "user": "blabb",
            "text": "radare2 foo.sms  -> aa-> viVV  should show the disassembly   if that is what youmean\n",
            "time": null
        },
        {
            "user": "gb_away",
            "text": "I’m able to see the disassembly, I just don’t see the instructions correctly; Instead of getting 16bit-wide steps, I’m getting 8bit-wide steps. For example, instead of getting the instructions: DI; LD SP, 0xC0FF; IM 1; I get: DI; RST 38; RET NZ; IM 1. Of course, I’m using VV. Does viVV correct this behavior?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "as i commented radare2 opens an sms file without problem\nif you are not using the latest version try updating radare2 \nor downgrading to an older version \noutput below  isfrom 3.3.0 the last 32 bit version of radare2\n<pre><code>:\\>radare2 -q -c \"aa;pd 10\" ak.sms\nChecksum: 0x1cd0\nProductCode: 005067\nConsole: Sega Master System\nRegion: Export\nRomSize: 128KB\n/ (fcn) fcn.00000000 85\n|   fcn.00000000 ();\n|           0x00000000      f3             di\n|           0x00000001      ed56           im 1\n|           0x00000003      31f0df         ld sp, 0xdff0\n|       ,=< 0x00000006      187d           jr 0x7d\n        |   0x00000008      7b             ld a, e\n        |   0x00000009      d3bf           out [0xbf], a\n        |   0x0000000b      7a             ld a, d\n        |   0x0000000c      d3bf           out [0xbf], a\n        |   0x0000000e      c9             ret\n        |   0x0000000f      ff             rst 0x38\n</code></pre>\n",
            "votes": "1",
            "user": "blabb",
            "time": "Feb 12, 2020 at 21:47",
            "is_accepted": false,
            "comments": [
                {
                    "user": "gb_away",
                    "text": "<span class=\"comment-copy\">Indeed, just using aa instead of aaa (or the command flag -A) makes radare2 load the disassembly correctly. Thanks.</span>",
                    "time": null
                },
                {
                    "user": "Paweł Łukasik",
                    "text": "<span class=\"comment-copy\">@gb_away maybe there's something with that binary - I've tried on one I have and there was no difference between the two approaches.</span>",
                    "time": null
                },
                {
                    "user": "gb_away",
                    "text": "<span class=\"comment-copy\">@PawełŁukasik indeed. I’ve compiled and linked a test myself with wla dx and it showed up just fine, even using aaa.</span>",
                    "time": null
                },
                {
                    "user": "gb_away",
                    "text": "<span class=\"comment-copy\">[cont] So, beats me. The game I was trying to disassemble was doki doki penguin land. Very odd.</span>",
                    "time": null
                },
                {
                    "user": "Megabeets",
                    "text": "<span class=\"comment-copy\">@gb_away if you can, please provide the binary so we will be able to have a look at the exact issue :)</span>",
                    "time": null
                }
            ]
        }
    ]
}