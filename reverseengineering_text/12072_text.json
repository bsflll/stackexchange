{
    "title": "Android shared Library (.so)",
    "link": "https://reverseengineering.stackexchange.com/questions/12072/android-shared-library-so",
    "content": "I quite quite new to reverse engineering in General and there are a couple of things I'm unsure of. The app I am reverse engineering uses a couple of android libs in order to sign requests. So far I've managed to extract the libraries from the APK and I've found some code in the APK itself which references them. So would the best way of using them for my own purposes be just reusing the current code the app uses to implement them? Or is there some special techniques that would need to be used in order to use them correctly?\nSorry if this has been asked before\nNathan\n",
    "votes": "1",
    "answers": 0,
    "views": "625",
    "tags": [
        "android",
        "dll",
        "libraries"
    ],
    "user": "Xylynx",
    "time": "Feb 19, 2016 at 13:18",
    "comments": [
        {
            "user": "Vitaly Osipov",
            "text": "Yes, use them the same way as the apk does. Or read the JNI spec. No special techniques are required\n",
            "time": null
        },
        {
            "user": "Sujith Sizon",
            "text": "Use IDA pro with HEX RAYS decompiler or Santoku Linux\n",
            "time": null
        },
        {
            "user": "user1118764",
            "text": "What tools within Santoku Linux can perform this?\n",
            "time": null
        }
    ],
    "answers_data": []
}