{
    "title": "What is stored in typeinfo (GNU C++, Android NDK, ARM)",
    "link": "https://reverseengineering.stackexchange.com/questions/4316/what-is-stored-in-typeinfo-gnu-c-android-ndk-arm",
    "content": "IDA annotates some items as: <pre><code>typeinfo</code></pre> for <pre><code>_classname_</code></pre>.\nWhat is that <pre><code>typeinfo</code></pre>, is it the same as <pre><code>type_info</code></pre>?\nWhat information may be extracted from it? (e.g. I'd like to know the object size or virtual function table size).\nI am particularly interested in GNU C++ (G++) from Android NDK for ARM.\n",
    "votes": "5",
    "answers": 2,
    "views": "1k",
    "tags": [
        "ida",
        "c++",
        "android",
        "arm"
    ],
    "user": "18446744073709551615",
    "time": "May 12, 2014 at 15:23",
    "comments": [],
    "answers_data": [
        {
            "content": "These objects are indeed instances of the <pre><code>type_info</code></pre> class (or, more likely, one of its descendants). The structure of those classes is described in the Itanium C++ ABI. You can also inspect the <pre><code>rtti.h</code></pre> file from GCC.\nFor a trimmed-down, data-only representation of these classes, check my Recon 2012 presentation (start at slide 27 or so).\n",
            "votes": "3",
            "user": "Igor Skochinsky",
            "time": "May 12, 2014 at 14:43",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "To add Igor Skochinsky's answer:\nGiven VFT address, you can print the mangled class name:\n<pre><code>unsigned int* vmtaddr = *(int*)obj_addr;\nDLOG(\"class name: _Z%s\",((char***)vmtaddr)[-1][1]);\n</code></pre>\nThe class name may be decoded with <pre><code>c++filt</code></pre>.\n(The <pre><code>_Z</code></pre> thing is not stored there, but required for <pre><code>c++filt</code></pre> to work.)\nYou can also print the inheritance chain (the trick is that typeinfo is also an object, and if it is a <pre><code>__cxxabiv1::__si_class_type_info</code></pre>, against whose mangled name we <pre><code>strcmp()</code></pre>, there has been single inheritance and a pointer to the superclass typeinfo follows the pointer to name):\n<pre><code>    char* classchain = strrealloccat(NULL, \"_Z\");\n    char**ptypeinfo = ((char***)vmtaddr[-1]);\n    for (; ptypeinfo ; ptypeinfo = !strcmp(((char***)ptypeinfo[0])[-1][1], \"N10__cxxabiv120__si_class_type_infoE\") ? (char**)ptypeinfo[2] : 0) {\n        //DLOG(\"tinfo: %p\",ptypeinfo);\n        //DLOG(\"class: _Z%s   meta: _Z%s\",ptypeinfo[1], ((char***)ptypeinfo[0])[-1][1]);\n        //DLOG(\"meta : _Z%s\",((char***)ptypeinfo[0])[-1][1]);\n        classchain = strrealloccat(strrealloccat(classchain, ptypeinfo[1]), \"  _Z\");\n    }\n    DLOG(\"inheritance chain: %s\",classchain);\n    free(classchain);\n</code></pre>\nwhere <pre><code>strrealloccat()</code></pre> is defined as:\n<pre><code>char* strrealloccat(char* buffer0, char *addition)\n{\n    char* buffer = realloc(buffer0, (buffer0 ? strlen(buffer0) : 0) + strlen(addition) + sizeof(char));\n    if (!buffer) {\n    return buffer;\n    }\n    if(!buffer0) {\n    *buffer = 0;\n    }\n    return strcat(buffer, addition);\n}\n</code></pre>\n<pre><code>_Z4hopeN4this5helpsE</code></pre>\n",
            "votes": "2",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": false,
            "comments": []
        }
    ]
}