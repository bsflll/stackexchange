{
    "title": "How to reverse CGI file for MIPS?",
    "link": "https://reverseengineering.stackexchange.com/questions/2587/how-to-reverse-cgi-file-for-mips",
    "content": "I'm trying to load a CGI file to IDA in order to disassemble it and understand it's behaviour but I can't do it.\nAccording to the strings command I can see some interesting words like system, sprintf, etc. And I know it's a MIPS file, But I'm not able to get something comprehensible in IDA.\nCould anyone guide me to achieve this?\nRegards.\n",
    "votes": "5",
    "answers": 1,
    "views": "5k",
    "tags": [
        "ida",
        "firmware",
        "radare2",
        "mips"
    ],
    "user": "Nucklear",
    "time": "Jun 4, 2014 at 7:30",
    "comments": [
        {
            "user": "Mathew Hall",
            "text": "Could you add a little more information? Output from the <pre><code>file</code></pre> command would be a start, and a dump from <pre><code>readelf -e</code></pre> if it's an ELF would be helpful.\n",
            "time": null
        },
        {
            "user": "devttys0",
            "text": "Some more info about what IDA gives you might be useful as well. Are there any errors or warnings? Are there no listed functions in the functions window, or does the disassembly not make sense? IDA is usually quite good at loading MIPS ELF files; if it's not an ELF, you'll have to do a bit more work to get a useful disassembly.\n",
            "time": null
        },
        {
            "user": "Nucklear",
            "text": "This is the file output: index.cgi: ELF 32-bit LSB executable, MIPS, MIPS32 rel2 version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.12, with unknown capability 0xf41 = 0x756e6700, with unknown capability 0x70100 = 0x1040000, stripped .   Also here is the readelf dump: pastebin.com/raw.php?i=YswCPtLq . I'm using IDA FREE with Wine and the error is Can't set the target processor type \"mipsl\".\n",
            "time": null
        },
        {
            "user": "Mathew Hall",
            "text": "IIRC the free version of IDA doesn't come with support for MIPS. You might want to take a look at this question for a list of alternatives. Failing that, <pre><code>binutils</code></pre> can at least give you a disassembly (via <pre><code>objdump</code></pre>).\n",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "@MathewHall: write this up as an answer. IDA Freeware indeed doesn't offer any processor module for MIPS or a loader for ELF, so that's the main obstacle. I think your answer is perfectly legit.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Expanding on my comment:\nThe Freeware IDA Pro doesn't support MIPS, so you won't be able to use it. If you can't use the paid versions of IDA, there are free alternatives.\nAs an example, using <pre><code>radare2</code></pre> as an example, on the Debian MIPS <pre><code>binutils</code></pre> port:\n<pre><code>$ file bin/objdump \nbin/objdump: ELF 32-bit MSB  executable, MIPS, MIPS-II version 1 (SYSV), \ndynamically linked (uses shared libs), for GNU/Linux 2.6.26,\nBuildID[sha1]=d1d228509874377d7339cfd5b2f15db020e53b7b, stripped\n</code></pre>\nFollowing this example, we get something like this:\n<pre><code>[0x00403300]> af@sym.main\n[0x00403300]> ag > foo.dot\nfoo.dot created\n[0x00403300]> !dot -Tpdf -o foo.pdf foo.dot\n[0x00403300]> !open foo.pdf\n</code></pre>\n\nNote that the PDF this churns out is enormous, so you might want to just use <pre><code>pdf</code></pre> instead of <pre><code>ag</code></pre> produce textual output rather than <pre><code>dot</code></pre> files.\n",
            "votes": "8",
            "user": "Community",
            "time": "Apr 13, 2017 at 12:49",
            "is_accepted": true,
            "comments": []
        }
    ]
}