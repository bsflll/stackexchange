{
    "title": "IDApython confused with get_32bit(ea) function behavior",
    "link": "https://reverseengineering.stackexchange.com/questions/22384/idapython-confused-with-get-32bitea-function-behavior",
    "content": "I am using some code like this \n<pre><code>   import idaapi\n   print(idaapi.get_32bit(0x0055f4a0))\n</code></pre>\nit must return 32 bit of address as int\nbut it returns 1408011093\nis it wrong conversion?\nits length is less than the maximum length of int \nbut it somehow changes the value \nI expected to get return value like ‭5633184‬\n",
    "votes": "1",
    "answers": 1,
    "views": "156",
    "tags": [
        "idapython"
    ],
    "user": "Huntermike",
    "time": "Oct 24, 2019 at 18:03",
    "comments": [],
    "answers_data": [
        {
            "content": "<pre><code>get_32bit(0x0055f4a0)</code></pre> returns the 32-bit value in your IDB at the address <pre><code>0x0055f4a0</code></pre>. 1408011093 decimal is <pre><code>0x53EC8B55</code></pre> in hex which fits in 32 bits. In little endian format this corresponds to the byte sequence <pre><code>55 8B EC 53</code></pre>, so 0x0055f4a0 is likely a function start.\nTo convert hex to decimal you don't need IDA APIs but just standard Python functionality, e.g. <pre><code>str(int(0x0055f4a0))</code></pre>. But this is best discussed on Stack Overflow since that's a programming question and not RE.\n",
            "votes": "0",
            "user": "Igor Skochinsky",
            "time": "Oct 24, 2019 at 19:11",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Huntermike",
                    "text": "<span class=\"comment-copy\">ty so  just need to go through the standard conversion</span>",
                    "time": null
                }
            ]
        }
    ]
}