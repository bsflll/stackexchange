{
    "title": "What does this memory pattern pointing from the thread-local storage mean?",
    "link": "https://reverseengineering.stackexchange.com/questions/2923/what-does-this-memory-pattern-pointing-from-the-thread-local-storage-mean",
    "content": "An application I am currently looking add is using Threads and accessing something via the thread-local storage. It is compiled with Visual C++ (probably 6.0).\nFirst question would be, where can I find more information what the thread-local storage contains? I haven't quite understood it yet.\nThis is the assembler code where the application reads a value from the thread-local storage.\n<pre><code>MOV EAX,0\nMOV ECX,DWORD PTR FS:[0x2C]\nMOV EDX,DWORD PTR DS:[ECX + EAX * 4]\nMOV EAX,DWORD PTR DS:[EDX+4]\n</code></pre>\nEAX is a pointer which points on the following memory area which has a special pattern.\n\nIt basically looks like this:\n<pre><code>52\nP->...\nP->...\n5\n\n52\nP->...\nP->...\n5\n\n52\nP->...\nP->...\n5\n</code></pre>\nI was wondering if this is some kind of standard data structure.\n",
    "votes": "10",
    "answers": 1,
    "views": "1k",
    "tags": [
        "c++",
        "thread",
        "memory"
    ],
    "user": "samuirai",
    "time": "Oct 16, 2013 at 23:23",
    "comments": [],
    "answers_data": [
        {
            "content": "The area you're looking at is something specific to the program; it's not part of Windows structures.\nThe value at <pre><code>fs:[0x2C]</code></pre> is the TLS array - array of pointers to the thread-specific blocks of variables somewhere in the program's memory. Here's how a typical TLS access to a <pre><code>__declspec(thread)</code></pre> variable looks like:\n<pre><code>mov eax, DWORD PTR __tls_index    ; load TLS index for current thread\nmov ecx, DWORD PTR fs:__tls_array ; load the TLS array pointer (FS:[2Ch])\nmov edx, DWORD PTR [ecx+eax*4]    ; fetch the pointer to the TLS block for current thread\nmov eax, DWORD PTR [edx+4h]       ; load the thread variable at offset 4 in the TLS block\n</code></pre>\n(The <pre><code>__tls_index</code></pre> variable is pointed to by the <pre><code>TlsIndex</code></pre> (aka <pre><code>AddressOfIndex</code></pre>) field of the PE TLS directory.)\nThe actual content of the TLS block is up to the program - the OS only makes sure that every thread gets a separate copy of the initial TLS template, and puts a pointer to it in the TLS array. So, to figure out what's in that memory chunk, you'll have to see how the program is using it.\n",
            "votes": "8",
            "user": "Igor Skochinsky",
            "time": "Oct 17, 2013 at 0:34",
            "is_accepted": false,
            "comments": []
        }
    ]
}