{
    "title": "Limitations of capstone's disassembly capabilities compared to IDA",
    "link": "https://reverseengineering.stackexchange.com/questions/11339/limitations-of-capstones-disassembly-capabilities-compared-to-ida",
    "content": "I was wondering if there are any limitations of capstone's disassembling capabilities when compared to IDA.\nIf yes, are those limitations inherent, i.e. a result of the different design/techniques that capstone and ida use? Or are they rather due to \"not yet implemented\" features, e.g. capstone's fewer supported CPUs?\nIf there are inherent limitations, could you give an example?\nI am talking about the disassembling only, i.e., I am not interested in things like available APIs, commercial support, license models, plug-in systems, debugging support etc. Just the pure disassembly.\nCapstone is mentioned as one answer to the post \"Is there any disassembler to rival IDA Pro?\", but it seems to be a copied/pasted text from the capstone website.\nPS: The working of IDA is explained/discussed here.\n",
    "votes": "4",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "disassembly",
        "disassemblers",
        "capstone"
    ],
    "user": "langlauf.io",
    "time": "Apr 13, 2017 at 12:49",
    "comments": [
        {
            "user": "0xec",
            "text": "There is no point in comparing between the two. IDA is more than a disassembler.\n",
            "time": null
        },
        {
            "user": "langlauf.io",
            "text": "I would like to compare the disassembly capabilities, not the two tools. I tried to clarify this in my question.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "There is no point in comparing between the two. IDA is more than a disassembler, it is a reversing tool which implements(or could be implemented via plugins) almost every feature you can think of. \nCapstone on the other hand, is a simple disassembler engine. It by alone cannot generate the same quality of output as IDA.\nFor instance, IDA has cross-referencing capability. Cross-refs are generated by a dedicated analysis engine which uses input from the disassembly engine. A disassembly engine, by its own can neither find cross-refs, nor can it recursively disassemble like IDA.\nYou are comparing a disassembly framework to a tool with a myriad of features. They are not comparable with each other.\nIf you are talking about just the textual disassembler output, then there is not much of a difference per se.\n",
            "votes": "4",
            "user": "0xec",
            "time": "Nov 17, 2015 at 9:24",
            "is_accepted": true,
            "comments": [
                {
                    "user": "langlauf.io",
                    "text": "<span class=\"comment-copy\">I see. I mixed up cross-referencing (and probably more stuff  such as stack frame reconstruction etc.) with disassembly capabilities. But nevertheless this is a valuable insight for me that capstone alone is not able to generate the same \"quality output\" which I understand as disassembled instructions + refs + stack frame info + ....</span>",
                    "time": null
                }
            ]
        }
    ]
}