{
    "title": "Branching in arm assembly",
    "link": "https://reverseengineering.stackexchange.com/questions/29379/branching-in-arm-assembly",
    "content": "This is an example assembly code:\n<pre><code>     function0()\n 0x0.mov r0, #1\n 0x8.mov r1, #20\n0x10.mov r2, #6\n0x18.cmp r1, #16\n0x20.b function1\n\n     function1()\n0x28.cmp r0, #1\n0x30.b functionX\n\n     functionX()\n0x38.bx lr\n</code></pre>\nAs far as I know, <pre><code>function0</code></pre> moved those values into the first 3 registers. In <pre><code>function1</code></pre> no values were moved into registers.\nWhat I don't understand is:\n\nafter branching to <pre><code>function1</code></pre> do registers <pre><code>r1</code></pre> and <pre><code>r2</code></pre> still have those values or those registers have been zeroed out?\n\nAfter branching to <pre><code>functionX</code></pre>, is the link register still the same as the one in function0?\n",
    "votes": "0",
    "answers": 1,
    "views": "115",
    "tags": [
        "assembly",
        "arm",
        "functions",
        "register"
    ],
    "user": "Silent",
    "time": "Oct 7, 2021 at 14:06",
    "comments": [],
    "answers_data": [
        {
            "content": "It looks like you confuse between functions and blocks. It looks like what you call <pre><code>function0</code></pre>, <pre><code>function1</code></pre> and <pre><code>functionX</code></pre> are in fact parts of the same function, and just different basic blocks within the function.\nTo your specific questions:\n\nNothing changes <pre><code>r0</code></pre>, <pre><code>r1</code></pre>, and <pre><code>r2</code></pre> between <pre><code>0x20.b function1</code></pre> and <pre><code>0x28.cmp r0 #1</code></pre>. So yes, they still hold the values from what you called <pre><code>function0</code></pre>. There is nothing in the code, or in assembly as general that implicitly zero out all registers.\n\nThis is the place where the lr is fetched, and jumped to - it is supposed to hold the value of the caller function - The instruction after the call to what you called <pre><code>function0</code></pre>. the <pre><code>lr</code></pre> didn't change between what you called <pre><code>function0</code></pre>, <pre><code>function1</code></pre> and <pre><code>functionX</code></pre>.\n",
            "votes": "0",
            "user": "macro_controller",
            "time": "Oct 7, 2021 at 14:05",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Silent",
                    "text": "<span class=\"comment-copy\">Since you mentioned functions an blocks, would there be a difference if those functions were actually 3 different functions and not blocks from the same function?</span>",
                    "time": null
                },
                {
                    "user": "macro_controller",
                    "text": "<span class=\"comment-copy\">About the first question - there will be no difference. About the second - the <code>lr</code> will change on each call (assuming <code>call</code> instruction is used, instead of <code>b</code>)</span>",
                    "time": null
                }
            ]
        }
    ]
}