{
    "title": "Show arguments while debugging",
    "link": "https://reverseengineering.stackexchange.com/questions/20296/show-arguments-while-debugging",
    "content": "I am a developer but I do not have much experience with IDA/reverse-engineering. Now I have to analyse a compiled program.\nCurrently I try to debug a simple wininet.dll:wininet_InternetReadFile-function and I wonder: where can I see the concrete arguments for this function while debugging?\nCurrently I am at this point: \n\nI am pretty sure you can (almost) see the arguments (or at least its address) in this screenshot. But I am a beginner in reverse engineering. I don't get it/don't see it.\nWhat is the easiest/best way to get the URL that should be downloaded in this case?\n",
    "votes": "0",
    "answers": 1,
    "views": "627",
    "tags": [
        "ida",
        "debugging",
        "arguments"
    ],
    "user": "anion",
    "time": "Jan 19, 2019 at 8:54",
    "comments": [],
    "answers_data": [
        {
            "content": "Since eax,ebx etc are used instead of rax,rbx etc in your screen shot\ni assume it is some x86 code and not x64 code \nsince there doesnt appear a push {} for arguments prior to the call\ni assume this code is not compiled with msvc \nit appears to use a mov arguments to stack kind  which ida doesnt seem to decode\n(ida should usually show the hFile,etc args if it was standard vs compiled exe \n(screenshot shows the disassembly of src code compiled from here using vs2017 15.8.1 x86 32bit\n \nthe prototype for this function is \n<pre><code>BOOLAPI InternetReadFile(\n  HINTERNET hFile,\n  LPVOID    lpBuffer,\n  DWORD     dwNumberOfBytesToRead,\n  LPDWORD   lpdwNumberOfBytesRead\n);\n</code></pre>\nin your screenshot var 47c,478,474,470 are the arguments to this specific function   \ntake a look at VIEW ESP window in your screen shot\ncc0xxx is your  HINTERNET hFile argument\nvar 454 is your LPVOID lpBuffer\n0x3E8 is the    DWORD     dwNumberOfBytesToRead,\nvar_458 is the pointer to recieve the number of bytes read  LPDWORD   lpdwNumberOfBytesRead\n",
            "votes": "1",
            "user": "blabb",
            "time": "Jan 8, 2019 at 7:36",
            "is_accepted": false,
            "comments": []
        }
    ]
}