{
    "title": "Frida hook X509Certificate",
    "link": "https://reverseengineering.stackexchange.com/questions/31470/frida-hook-x509certificate",
    "content": "I have an android application. It connects to a web socket server and uses the X509Certificate to verify the connection.\n<pre><code> newBuilder.trustManagers(WebSocketClient.sTrustManagers);\n</code></pre>\nBy using Frida I was able to get <pre><code>TrustManager[] trustManagerArr</code></pre>\n<pre><code>trustManagerArr: [\"<instance: javax.net.ssl.TrustManager, $className: im.sum.connections.Client$1>\"]\n</code></pre>\nHow can I get certificate to use it for the purpose of establishing a connection from python?\nMy Frida script\n<pre><code>W1ebSocketClient[\"setTrustManagers\"].implementation = function (trustManagerArr) {\n     console.log(' !setTrustManagers is called' + ', ' + 'trustManagerArr: ' + JSON.stringify(trustManagerArr));\n   \n          \n     let ret = this.setTrustManagers(trustManagerArr);\n      console.log(' !setTrustManagers ret value is ' + ret);\n      return ret;\n };\n</code></pre>\n",
    "votes": "3",
    "answers": 1,
    "views": "343",
    "tags": [
        "android",
        "frida"
    ],
    "user": "user123",
    "time": "Feb 5, 2023 at 19:09",
    "comments": [],
    "answers_data": [
        {
            "content": "If you use an TLS interception proxy and have a rooted phone it may be easier to add the used root CA certificate as system certificate (like described in mitmproxy doc. Afterwards the certificate verification will work unless the app uses cert/key pinning.\nAlternatively you can use anti-SSL/TLS verification/pinning scripts included in Objection.\nIf you want to develop a script yourself it is easier to hook the <pre><code>javax.net.ssl.X509TrustManager</code></pre> method <pre><code>checkServerTrusted</code></pre> and replace it with an empty method.\n",
            "votes": "2",
            "user": "Robert",
            "time": "Jan 25, 2023 at 9:37",
            "is_accepted": true,
            "comments": [
                {
                    "user": "user123",
                    "text": "<span class=\"comment-copy\">Thanks for the answer. I'm not trying to see the content of the requests, I want to establish a connection to the server. When I try to establish a connection with a python script, the server drops the connection. As I understand it, the problem is the lack of a certificate. I am trying to read the certificate that is in the <code>trustManagerArr</code> variable.</span>",
                    "time": null
                },
                {
                    "user": "Robert",
                    "text": "<span class=\"comment-copy\">@user123 Then your question was already talking the wrong path. For selecting a client certificate (and key) an implementation of <code>KeyManager</code> respectively <code>X509ExtendedKeyManager</code> is responsible in plain Java/Android HTTPS connection. The TrustManager is only responsible for verifying the server certificate.</span>",
                    "time": null
                },
                {
                    "user": "Robert",
                    "text": "<span class=\"comment-copy\">Another possibility is that the server preforms TLS fingerprinting and thus Python is recognized as \"not an Android device\" and thus the server drops the connection. Therefore it is crucial to identify when the connection is closed. If the handshake is successfully completed, a missing client certificate is very unlikely an issue.</span>",
                    "time": null
                },
                {
                    "user": "user123",
                    "text": "<span class=\"comment-copy\">Thank you. This is good advice.</span>",
                    "time": null
                }
            ]
        }
    ]
}