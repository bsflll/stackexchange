{
    "title": "Is it possible to reverse engineer a minelab metal detector? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/23119/is-it-possible-to-reverse-engineer-a-minelab-metal-detector",
    "content": "Closed. This question needs details or clarity. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Add details and clarify the problem by editing this post.\n\n\nClosed 5 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\nMinelab have a metal detector called the equinox, there are 2 models which are essentially the same apart from the price.\nThe minelab equinox 600 is the cheaper model\nThe minelab equinox 800 is the more expensive model\nWould there be away to copy the 800 software and put it onto the 600?\nminelab have released 3 updates over the last 6 months, it could be possible to dump the 800 firmware and load onto the 600? this could save the user £200+ between models.\nI wondered if anyone has ever done anything like this with a metal detector?\nI have a 600 and my friend have the 800 if anyone knows how i could dump the firmware from both and compare them.\n",
    "votes": "0",
    "answers": 1,
    "views": "175",
    "tags": [
        "firmware"
    ],
    "user": "sTe Shorters",
    "time": "5 years ago",
    "comments": [
        {
            "user": "Olvin Roght",
            "text": "I think, reversing firmware will take so much time that doesn't cost £200 economy, but if you have 100, you can try.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "If the company has released new firmware, you can just download that and compare those files without needing to dump anything.\nYour first step would have to be to disassemble both units and look at the circuitry inside, and compare model numbers on all the larger chips.  You might find they are using different chips, which is why the firmware is different.  In that case moving the firmware  is unlikely to work, in the same way that you can't put a train driver in an aircraft and expect them to be able to drive it.\nIf all the chips are the same, then there's probably some way of identifying which model is in use.  This would allow the same firmware to be loaded onto both devices, and it decides at power up which mode to start in.  If this is the case, it would then be a matter of working out how it identifies the model and changing that.\nIt's relatively rare for companies to release identical devices only differing in features and firmware though.  Usually there really is some hardware difference that makes using different firmware impractical.  So before you even entertain the idea, figuring out how similar the two devices are internally is the most important step.\n",
            "votes": "3",
            "user": "Malvineous",
            "time": "Jan 28, 2020 at 10:41",
            "is_accepted": false,
            "comments": []
        }
    ]
}