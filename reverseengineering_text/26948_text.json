{
    "title": "What are the way I can reverse engineer an obfuscated C++ program?",
    "link": "https://reverseengineering.stackexchange.com/questions/26948/what-are-the-way-i-can-reverse-engineer-an-obfuscated-c-program",
    "content": "I am reverse engineering an program. I encountered a problem where I can't reverse engineer it as the program code is obfuscated. I realised the program is obfuscated thanks to my friend who noticed that the program is obfuscated thanks to him seeing him what IDA showed. My friend is telling me that the program is using virtualization as form of obfuscation.\nWhat can I do to reverse engineer the obfuscated program?\n",
    "votes": "0",
    "answers": 1,
    "views": "852",
    "tags": [
        "ida",
        "decompilation",
        "c++",
        "obfuscation",
        "exe"
    ],
    "user": "The epic face 007",
    "time": "Feb 5, 2021 at 3:07",
    "comments": [],
    "answers_data": [
        {
            "content": "If a packer with virtualization is used then code will become obfuscated but for different reason. It will be under virtual machine which will completely destroy the code when trying to load it in IDA.\nYou should scan the program with programs like DIE, ExeInfo, PEID or similar to determine what packer was used and what version. Then you have to:\n\nDevirtualize the VM and dump the program\nFix the program (IAT, OEP, etc..)\nLoad fixed program it in IDA\\Ghidra and analyze it without any obfuscation\\protection.\n\nThis is no easy task. Depending on which packer is used and what version, it can be extremely hard to unpack if newer versions of commercial packers were used. If older version of packer was used you can probably find tutorials on how to unpack your target.\n",
            "votes": "1",
            "user": "argie",
            "time": "Feb 5, 2021 at 9:50",
            "is_accepted": false,
            "comments": []
        }
    ]
}