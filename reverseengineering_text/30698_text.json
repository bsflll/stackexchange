{
    "title": "Ollydbg - How to find the code of the method OnChange of text field delphi?",
    "link": "https://reverseengineering.stackexchange.com/questions/30698/ollydbg-how-to-find-the-code-of-the-method-onchange-of-text-field-delphi",
    "content": "I have an application programmed with delphi. I want to find the section of code of the function <pre><code>OnChange</code></pre> of a text field. How to find it on Ollydbg?\nAlso, how can I set breakpoint on any window show event and analyze the code of it?\n",
    "votes": "1",
    "answers": 1,
    "views": "174",
    "tags": [
        "debugging",
        "ollydbg"
    ],
    "user": "devlooper",
    "time": "Jul 25, 2022 at 9:35",
    "comments": [],
    "answers_data": [
        {
            "content": "Delphi applications are well known for jump offsets. Since the delphi compiler version is not specified, I will assume it to be Delphi 7.\nI have tested the above scenario by making a demo application having <pre><code>TEdit</code></pre> and <pre><code>TMemo</code></pre> components.(link to source code)\nFor finding the section of code of the function <pre><code>OnChange</code></pre> of a text field, you need to search through the <pre><code>.CODE</code></pre> section of the file in Ollydbg. Though I would suggest you use a disassembler of your choice as it would make searching and analyzing <pre><code>.CODE</code></pre> section easier and faster.\nHowever, if I don't have another choice except Ollydbg, then I would right click on CPU view Search for -> All referenced text strings and then search for <pre><code>TForm1</code></pre> assuming the developer has not changed the default name of <pre><code>TForm</code></pre>. Clicking on the occurrence of <pre><code>TForm1</code></pre> would take me to <pre><code>.CODE</code></pre> section where the predefined text, names of components would reside.\nI have attached 2 screenshots for reference:\n\n\n\n\nHow to set breakpoint on any window show event:\n\nRight click on Disassembly/CPU view, click on Search for -> All intermodular calls, you will get the list of windows functions used by the application. Now you can set breakpoints individually or on all the calls of a specific function. for example. If you set a breakpoint on every <pre><code>SendMessageA</code></pre> function call then you can trace the method executed when the <pre><code>TEdit</code></pre> field is changed.\n",
            "votes": "1",
            "user": "Viktor",
            "time": "Jul 25, 2022 at 17:14",
            "is_accepted": false,
            "comments": []
        }
    ]
}