{
    "title": "Calculate LEA operand",
    "link": "https://reverseengineering.stackexchange.com/questions/20424/calculate-lea-operand",
    "content": "I have those opcodes on 64 bits: \n<pre><code>48 8D 35 45 CE FF FF >>> lea rsi, [rip - 0x31bb].\n</code></pre>\nHow can I get the 0x31bb value from those opcodes and how can I know if I have a <pre><code>+</code></pre> sign or a <pre><code>-</code></pre> sign beetween operands ( <pre><code>rip - 0x31bb</code></pre> or <pre><code>rip + 0x31bb</code></pre> ) ?\n",
    "votes": "0",
    "answers": 1,
    "views": "384",
    "tags": [
        "ida",
        "assembly",
        "decompilation",
        "patch-reversing",
        "x86-64"
    ],
    "user": "Maco",
    "time": "Jan 20, 2019 at 14:15",
    "comments": [],
    "answers_data": [
        {
            "content": "You can get that value from the last 4 bytes of the opcode.\n<pre><code>45 CE FF FF\n</code></pre>\nYou need to reverse the order of bytes and the the value is written as 2's complement. Since the highest bit is 1 it will be negative. \n<pre><code>(0xFFFFCE45) in 2's = -0x31BB\n</code></pre>\n",
            "votes": "0",
            "user": "Paweł Łukasik",
            "time": "Jan 20, 2019 at 14:15",
            "is_accepted": true,
            "comments": []
        }
    ]
}