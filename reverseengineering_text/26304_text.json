{
    "title": "IDA stack depth differences when branching",
    "link": "https://reverseengineering.stackexchange.com/questions/26304/ida-stack-depth-differences-when-branching",
    "content": "I'm decompiling some Direct3D code that makes a lot of indirect calls to __stdcall functions.\nFor example:\n<pre><code>call dword ptr [edx+0xC8h]\n</code></pre>\nwhich is really:\n<pre><code>pD3DDevice->SetRenderState();\n</code></pre>\nIDA doesn't correctly guess the stack pointer change of these calls in every case, so I have to go through and Alt+K the correct SP value manually.\nBut after doing this I start running into a problem where one side of a branch will have the wrong SP value\n\nI can Alt-K the first instruction with the erroneous SP value but this only takes effect on the next instruction.\nEdit:\n",
    "votes": "5",
    "answers": 1,
    "views": "210",
    "tags": [
        "ida",
        "stack"
    ],
    "user": "quitegiddy",
    "time": "Apr 25, 2023 at 12:51",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "Can you show how it looks like in text mode (instead of graph)?\n",
            "time": null
        },
        {
            "user": "quitegiddy",
            "text": "@IgorSkochinsky Apologies for the extreme lateness of this reply (long story), but on the off-chance you're still willing to help, I've updated the OP with a text-mode screenshot which hopefully illustrates the problem.\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "the new screenshot doesn't include the code from the first one but some unrelated(?) function.\n",
            "time": null
        },
        {
            "user": "quitegiddy",
            "text": "@IgorSkochinsky Thanks for the response. I must have uploaded the wrong screenshot sorry about that. It's fixed it in the OP now. The right branch isn't out by quite as much as in the original screenshot for some reason. Taken from a fresh db with just the stack pointer corrected on the indirect calls and <pre><code>pD3DDevice</code></pre> named.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "So, the problem is that you have two branches with different stack delta: E8 at 5018E4 (fall through from <pre><code>jnz</code></pre>) and F0 at 501c49 (destination of <pre><code>jnz</code></pre>). Normally they should be the same, however IDA failed to reconcile them, probably due to too many indirect calls in the function.\nOne peculiarity of manual stack delta adjustments is that they apply after the instruction at which you're setting them. In our case, we need to make 501C49 have the delta of E8, however we can't do it on the instruction itself but need to go to the previous one by address and not the control flow, i.e. the <pre><code>jmp</code></pre> at 501C44. Since that address has SPD=E0, specifying delta of -8 should work.\nThis is why such manipulations are best done in text view and not graph.\n",
            "votes": "1",
            "user": "Igor Skochinsky",
            "time": "Jun 4, 2023 at 12:05",
            "is_accepted": true,
            "comments": [
                {
                    "user": "quitegiddy",
                    "text": "<span class=\"comment-copy\">Thanks Igor, that's exactly what I was looking for. I must have been under the misconception that Alt-K would change the next instruction in the control flow rather than the next instruction in memory, which really wouldn't make any sense. Thanks again!</span>",
                    "time": null
                }
            ]
        }
    ]
}