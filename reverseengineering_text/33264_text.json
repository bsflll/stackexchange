{
    "title": "How to mass set data type in scalar search in Ghidra?",
    "link": "https://reverseengineering.stackexchange.com/questions/33264/how-to-mass-set-data-type-in-scalar-search-in-ghidra",
    "content": "In Ghidra, I have an ARM9 binary that in many places stores hard-coded pointers to the same struct at the same location in RAM.\n<pre><code>022308c8 a0 9f 23 02     undefined4 02239FA0h\n...\n02233290 a0 9f 23 02     undefined4 02239FA0h\n...\n02233838 a0 9f 23 02     undefined4 02239FA0h\n</code></pre>\nI can easily find all/most references to that struct by doing a scalar search (Search > For Scalars...) and I would like to change the data type of all of those matches to be <pre><code>my_struct*</code></pre>.\nIn some cases there are too many pointers to the same RAM location to manually change the data type of each within a reasonable amount of time (ex. 1200+ pointers).\nIs there any way to have Ghidra automate changing the data types of all of those matching hard-coded pointers?\n",
    "votes": "2",
    "answers": 1,
    "views": "61",
    "tags": [
        "ghidra"
    ],
    "user": "Chris",
    "time": "Oct 17, 2024 at 6:48",
    "comments": [
        {
            "user": "blabb",
            "text": "You mean changing the undefined4 doesnt work  ?\n",
            "time": null
        },
        {
            "user": "Chris",
            "text": "Changing the undefined 4 to <pre><code>my_struct*</code></pre> (using Data >Change Data Type...) works to change a single instance, but currently I would have to do that manually for each of the 1200+ pointers which would probably take several hours to do. I want to know if there is a way to automate changing the data type for 1200+ instances of this pointer.\n",
            "time": null
        },
        {
            "user": "the busybee",
            "text": "Are these pointers in an unbroken range, or are they spread separately all over the binary?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "You can automate that by using <pre><code>createData</code></pre> and <pre><code>getDataTypes</code></pre> methods from Ghidra API.\nSomething like that should do the trick:\n<pre><code>ptr_type = getDataTypes(\"my_struct*\")[0] \n# getDataTypes returns an array so we pick the first one\n\nfor addr in range(0x022308c8,02233838,4):\n    createData(toAddr(addr), ptr_type)\n</code></pre>\nIt will work if there's nothing defined for those bytes already. If there are you need to clear that with <pre><code>clearListing</code></pre>.\n",
            "votes": "1",
            "user": "Paweł Łukasik",
            "time": "Oct 19, 2024 at 21:12",
            "is_accepted": false,
            "comments": []
        }
    ]
}