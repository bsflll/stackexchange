{
    "title": "What to do when IDA does not recognize return value?",
    "link": "https://reverseengineering.stackexchange.com/questions/12599/what-to-do-when-ida-does-not-recognize-return-value",
    "content": "I have a function which fetches the Glide screen width and height and passes it to some set-up function (<pre><code>sub_457048</code></pre>).\nHowever, IDA does not recognize that the Glide API function to retrieve the width obviously returns it:\n\nThis gets interesting when looking into the assembly code:\n\nI'm not sure how to tell IDA the <pre><code>grSstScreenWidth</code></pre> returns a value into EBX which is then put in EDX: The set-up function looks correct - I never understood that useless mov of EAX into EBX after the height function was called; height stays in EAX, and width is put into EDX:\n\nAm I wrong here? Is IDA wrong? Or is nobody wrong?\n",
    "votes": "0",
    "answers": 2,
    "views": "1k",
    "tags": [
        "ida",
        "hexrays"
    ],
    "user": "Ray",
    "time": "May 5, 2016 at 1:44",
    "comments": [],
    "answers_data": [
        {
            "content": "You'll need to change the prototype of <pre><code>_grSstScreenWidth()</code></pre> to be a <pre><code>__usercall</code></pre> function with the return value in <pre><code>ebx</code></pre>.\nFor example:\n<pre><code>int __usercall _grSstScreenWidth@<ebx>()\n</code></pre>\n",
            "votes": "2",
            "user": "Jason Geffner",
            "time": "May 5, 2016 at 2:02",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "I am probably late for this, but for future visitors:\nthe parameters to sub_457048 are passed in eax and edx. The call to _grSstScreenHeight is returned in eax and then saved in ebx, and finally moved in edx.\nThe call to _grSstScreenWidth is returned in eax.\nso sub_457048 will be eax (width) and edx (height) which is correct.\nThe intermediate step to store the value in ebx, is because it's not known to the caller if _grSstScreenWidth will overwrite edx (as it is allowed to, according to the STDCALL calling convention https://en.wikipedia.org/wiki/X86_calling_conventions#stdcall). On the other hand, _grSstScreenWidth has to preserve ebx.\nYou're right however, IDA did not seem to see that the value returned by _grSstScreenWidth was to be stored in v4\n",
            "votes": "1",
            "user": "Nicolas Mercier",
            "time": "Feb 9, 2019 at 14:51",
            "is_accepted": false,
            "comments": []
        }
    ]
}