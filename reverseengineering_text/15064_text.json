{
    "title": "IDA Pro: how to pass a function a pointer to a structure field",
    "link": "https://reverseengineering.stackexchange.com/questions/15064/ida-pro-how-to-pass-a-function-a-pointer-to-a-structure-field",
    "content": "When a C++ subclass object is being passed to a function which accepts base class objects, the C++ compiler implementation is so the subclass object pointer gets shifted down to point to the corresponding virtual table. So, the object may be passed to a function starting from the offset of that virtual table.\nI'm trying to find a way how to pass the pointer to an offset within an object to a function in IDA decompiled view.\nI tried to set the type of the function argument something like struct->field * or struct.field * but that doesn't work.\n",
    "votes": "1",
    "answers": 1,
    "views": "2k",
    "tags": [
        "ida",
        "struct",
        "pointer",
        "offset"
    ],
    "user": "Igor Lebedev",
    "time": "Apr 1, 2017 at 23:52",
    "comments": [
        {
            "user": "NirIzr",
            "text": "Its not quite clear what you're asking here. Could you please elaborate?\n",
            "time": null
        },
        {
            "user": "Igor Lebedev",
            "text": "On this page: hex-rays.com/products/decompiler/manual/cmd_numform.shtml you can find the following text:  Please note that v2 must be declared as a pointer to the corresponding structure field, otherwise the conversion may fail.  So, I just want to know how to declare a pointer to the structure field?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "In order to get Hexrays to detect that your subtype passed as an argument is actually a member of a bigger parent type, you have to declare the parent type as a structure, and declare the corresponding field in this parent struct as a pointer to the subtype.\nThe function argument type is irrelevant for this purpose, and should have the type of the substruct.\nhttps://www.hex-rays.com/products/decompiler/manual/tricks.shtml#03\n",
            "votes": "2",
            "user": "user2823000",
            "time": "Apr 4, 2017 at 20:58",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Igor Lebedev",
                    "text": "<span class=\"comment-copy\">So, I can create a subtype and pass its pointer to the function. But in this case, I would need to do some tricks if the functions uses negative offsets.  But is it possible to pass a structure field as a function argument? <i>v2 must be declared as a pointer to the corresponding structure field</i> how can this be achieved?</span>",
                    "time": null
                },
                {
                    "user": "user2823000",
                    "text": "<span class=\"comment-copy\">The whole principle of the CONTAINING_RECORD macro <i>is</i> to use negative offset to actually get a reference to the parent structure. See the link I just added to my answer for more details.</span>",
                    "time": null
                }
            ]
        }
    ]
}