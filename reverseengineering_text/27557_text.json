{
    "title": "Can't find strings on x64 dbg",
    "link": "https://reverseengineering.stackexchange.com/questions/27557/cant-find-strings-on-x64-dbg",
    "content": "I can't find strings from message boxes.\nQuestions:\n\nHow do i find the strings?\nWhat are these strange symbols?\n\nIs it possible to transform them into readable ones? how?\n\nDetailed information:\n\nI open the exe file on exeinfoPE (see picture).\n\nx64dbg don't show error messages from textboxes when i search them into strings.\n\n\n\nResourceHacker don't show tables (just informing).\n\n\nPurposes and other:\n\nI am trying to crack this program.\nI'm newbie in this journey - like 1 week, not much progress.\n",
    "votes": "0",
    "answers": 1,
    "views": "7k",
    "tags": [
        "x64dbg"
    ],
    "user": "eternal100",
    "time": "Apr 25, 2021 at 17:50",
    "comments": [],
    "answers_data": [
        {
            "content": "You can put a breakpoint on the 'MessageBox' syscall, and inspect it's arguments.\nFrom the MSDN the arguments are:\n\nint MessageBox(hWnd, lpText, lpCaption, uType);\n\nAnd you are interessted in 'lpText':\n\nThe message to be displayed. If the string consists of more than one line, you can separate the lines using a carriage return and/or linefeed character between each line.\n\nYou can do this by doing the following:\n\nOpen your file in x64dg, and in the command prompt at the bottom type 'bp MessageBox'. You can also break on 'MessageBoxA', 'MessageBoxW', 'MessageBoxExA', 'MessageBoxExW', 'MessageBoxIndirectA' and 'MessageBoxIndirectW'\nRun your binary (first 'run' bring you to the entrypoint, second one run the program).\nDeal with any exceptions or condition in order to go to the part of the code that displays your message box.\nWhen you break on one of the message box API, press 'return to user code' in order to inspect the application's code, and not the message box API itself.\nFinally you can inspect which arguments where passed to that function\nWhen you see the second argument ('lpText'), right clic on it, 'follow in memory dump' and you should see the message you are viewing !\n\n\nThose are not strings. What you are seeing is a bunch of pointers to the header of your program. Take a look at your binary header. You will see the magic byte 'MZ' at the start. x64dg think this is a string, but it's not.\n\nOh, and by the way, you are looking at an 'AutoHotKey' binary. Make some research on how to reverse this. It is a by different than usual.\n",
            "votes": "2",
            "user": "Guillaume",
            "time": "Apr 26, 2021 at 8:13",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">Regarding your top bullet point: wouldn't you even <i>have</i> to set a breakpoint on individual functions rather than <code>MessageBox</code>? Also, it's not a syscall by a long shot.</span>",
                    "time": null
                }
            ]
        }
    ]
}