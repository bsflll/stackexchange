{
    "title": "Patching a Mach-O Binary Header to remove a LC_SEGMENT",
    "link": "https://reverseengineering.stackexchange.com/questions/8851/patching-a-mach-o-binary-header-to-remove-a-lc-segment",
    "content": "i have an ARMv7 Mach-O Executable on which I want to patch out a certain segment in the binary header which prevents DYLD injection. \nmore information here under point 3. of preventing dyld injection. TL;DR a  __RESTRICT binary header section with a __restrict segment prevents DYLD injection on iOS.\nUnfornatunately i'm not sure howto patch the file properly. Do I simply fill the file offset responsible for the LC_SEGMENT with zeros or do I remove it altogether (meaning cutting out and therefore altering file size and probably? breaking offsets)?\nThanks in advance\nMalte\n",
    "votes": "5",
    "answers": 2,
    "views": "2k",
    "tags": [
        "binary-analysis",
        "arm",
        "patching",
        "mach-o"
    ],
    "user": "Malte",
    "time": "May 8, 2015 at 22:07",
    "comments": [],
    "answers_data": [
        {
            "content": "This tool claims it can move and remove load commands. Might be worth a look.\n",
            "votes": "2",
            "user": "Timmmm",
            "time": "Mar 5, 2018 at 18:50",
            "is_accepted": false,
            "comments": [
                {
                    "user": "neuralmer",
                    "text": "<span class=\"comment-copy\">The interface for this tool is somewhat clumsy, but I was able to remove a segment, but it does not update \"relocation bytecodes\". In my binary the bytecodes still referenced the removed segment after removal.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "EDIT\nMany years later I finally got a mac and can confirm @igors comments - it does not work for mac (:\nKeeping this here for reference on how to achieve on Linux\nStripping a section from an ELF file is easy enough using the 'strip' command in any Linux (I'd bet in OSX too, though I never tried it myself).\nJust do:\n<pre><code>strip -R __restrict\n</code></pre>\nIt should do the trick\n",
            "votes": "0",
            "user": "Ishay Peled",
            "time": "Sep 4, 2021 at 7:51",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">the question is about Mach-O, not ELF. OS X <code>strip</code> does no do section removal.</span>",
                    "time": null
                },
                {
                    "user": "Ishay Peled",
                    "text": "<span class=\"comment-copy\">@IgorSkochinsky plain wrong. See man page here (<a href=\"http://www.unix.com/man-page/osx/1/strip/\" rel=\"nofollow noreferrer\">unix.com/man-page/osx/1/strip</a>) and -R parameter here: <code>-R filename \t      Remove the symbol table entries for the global symbols listed  in  filename.   This \t      file  has  the same format as the -s filename option above.  This option is usually \t      used in combination with other options that save some symbols, -S, -x, etc.</code></span>",
                    "time": null
                },
                {
                    "user": "Ishay Peled",
                    "text": "<span class=\"comment-copy\">Also check out the -c flag</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">Just as you quoted,  <code>-R</code> removes symbols, not sections (this is not GNU strip). As for, <code>-c</code>, while it does remove sections, the resulting file can be only used for linking (and you can't specify what to remove). Perhaps I should have said \"does not do user-specified section removal\".</span>",
                    "time": null
                },
                {
                    "user": "Timmmm",
                    "text": "<span class=\"comment-copy\">Igor is right, Apple's <code>strip</code> can't remove sections. <code>-R</code> removes symbols and <code>-c</code> removes <i>all</i> sections (if I'm reading it right).</span>",
                    "time": null
                }
            ]
        }
    ]
}