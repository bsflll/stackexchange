{
    "title": "STATUS_PRIVILEGED_INSTRUCTION 0xc0000096 from kernel mode code?",
    "link": "https://reverseengineering.stackexchange.com/questions/30892/status-privileged-instruction-0xc0000096-from-kernel-mode-code",
    "content": "Running a kernel driver I wrote. The driver includes:\n<pre><code>mov rax, cr0\nbtr rax, 10h\nmov cr0, rax\n</code></pre>\nto clear WP bit in cr0. Curiously the last instruction faults and causes a bluescreen, KMODE_EXCEPTION_NOT_HANDLED, with the code 0xC0000096 (STATUS_PRIVILEGED_INSTRUCTION). This shouldn't be happening as the code is being executed in ring zero, and especially since the read from cr0 succeeds. Even more curiously this function succeeds when being run on my VM but not on bare metal. Anyone have any idea what's up with this?\n",
    "votes": "2",
    "answers": 1,
    "views": "568",
    "tags": [
        "windows",
        "assembly"
    ],
    "user": "EatingTechnobladesRemainsAt3am",
    "time": "Sep 20, 2022 at 8:01",
    "comments": [
        {
            "user": "Igor Skochinsky",
            "text": "Is there a hypervisor?\n",
            "time": null
        },
        {
            "user": "EatingTechnobladesRemainsAt3am",
            "text": "VBS disabled. So I donâ€™t think so?\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Found it in the intel dev manual. CR4.CET bit is set which prevents clearing of WP bit\n",
            "votes": "2",
            "user": "EatingTechnobladesRemainsAt3am",
            "time": "Sep 19, 2022 at 16:17",
            "is_accepted": false,
            "comments": []
        }
    ]
}