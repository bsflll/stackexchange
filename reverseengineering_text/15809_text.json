{
    "title": "Auto recognition of Unicode Strings",
    "link": "https://reverseengineering.stackexchange.com/questions/15809/auto-recognition-of-unicode-strings",
    "content": "There are hundreds unicode strings in rdata's binary, but IDA doesn't define them properly, so I have to specify each Unicode string offset manually (Alt+A -> Unicode). After doing so, string is rendered properly. \nI'm wondering, whether there are some scripts here, since I've googled too much, and changed any possible settings and defaults to Unicode, but still no results.\n",
    "votes": "2",
    "answers": 1,
    "views": "1k",
    "tags": [
        "ida"
    ],
    "user": "yudjin",
    "time": "Jul 12, 2017 at 13:47",
    "comments": [
        {
            "user": "tambre",
            "text": "What version of IDA are you using?\n",
            "time": null
        },
        {
            "user": "yudjin",
            "text": "I use IDA 6.8 + HexRays plugin\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "I've found solution\nhttp://www.openrce.org/forums/posts/771\nThere is only 1 \"but\" - it works with undefined strings only. That's why changing settings didn't help me in existing project - unicode strings were defined somehow as a data.\nSo I've opened binary from scratch, with \"Create offset if data xref to seg32 exists\" disabled, and IDA recognized all unicode strings.\nI dumped all UNICODE strings addresses (begin-end) from newly recognized project, using IDAPython magics. And then used them in existing project: take an address range, undefine it, define as data (with UNICODE), define a string.\nWorked like a charm.\n",
            "votes": "0",
            "user": "yudjin",
            "time": "Jul 16, 2017 at 8:27",
            "is_accepted": true,
            "comments": []
        }
    ]
}