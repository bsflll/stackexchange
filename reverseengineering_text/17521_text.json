{
    "title": "Where are the arguments to this D3D11CreateDeviceAndSwapchain call stored in x64?",
    "link": "https://reverseengineering.stackexchange.com/questions/17521/where-are-the-arguments-to-this-d3d11createdeviceandswapchain-call-stored-in-x64",
    "content": "I have been trying to reverse a singleplayer x64 game to learn about reversing games. My problem is that I am trying to trace the arguments from a <pre><code>D3D11CreateDeviceAndSwapchain</code></pre> call and as far as I know the first 4 arguments should be stored in the registers <pre><code>rcx</code></pre>, <pre><code>rdx</code></pre>, <pre><code>r8</code></pre> and <pre><code>r9</code></pre> and the rest should be pushed to the stack ontop of the shadow area of the stack. \nLooking at the assembly I am posting below from IDA, it only pushes something far beyond the shadow area and the data does not seem to have anything to do with the call at all. So im wondering if DirectX calls are different somehow? Or am I simply just looking in the wrong place?\n<pre><code>.text:000000000143269B lea     rax, [rsp+218h+arg_0]\n.text:00000000014326A3 lea     rbp, [rdi+0CA8h]\n.text:00000000014326AA xor     r8d, r8d\n.text:00000000014326AD mov     [rsp+218h+var_1C0], rax\n.text:00000000014326B2 mov     [rsp+218h+var_1C8], rbp\n.text:00000000014326B7 lea     rax, [rsp+218h+arg_10]\n.text:00000000014326BF mov     [rsp+218h+var_1D0], rax\n.text:00000000014326C4 lea     rax, [rsp+228h]\n.text:00000000014326CC mov     [rsp+218h+var_1D8], rax\n.text:00000000014326D1 mov     [rsp+218h+var_1E0], rsi\n.text:00000000014326D6 mov     dword ptr [rsp+218h+var_1E8], 7\n.text:00000000014326DE mov     dword ptr [rsp+218h+var_1F0], r15d\n.text:00000000014326E3 mov     [rsp+218h+var_1F8], r15\n.text:00000000014326E8 call    D3D11CreateDeviceAndSwapChain\n</code></pre>\n",
    "votes": "0",
    "answers": 1,
    "views": "145",
    "tags": [
        "ida",
        "windows",
        "assembly"
    ],
    "user": "Flauen",
    "time": "Mar 26, 2018 at 8:46",
    "comments": [],
    "answers_data": [
        {
            "content": "The  API D3D11CreateDeviceAndSwapChain function in question takes 12 arguments\nFrom your disassembly find out what var_1c0 etc is defined as  ( i would presume it is -0x1c0 )   \nso (218 + (-0x1c0 and so on it would be ) = 58 , 50 , 48 , 40 , 38, 30 ,28 ,20,r9,r8,rdx,rcx) etc etc \nyou can see pub const D3D11_SDK_VERSION: DWORD = 7 at 1e8 = (218-1e8)/8 = 30 \nwhich is the 7th argument according to the documentation \n<pre><code>HRESULT D3D11CreateDeviceAndSwapChain(\n  _In_opt_        IDXGIAdapter         *pAdapter,  ==== rcx\n                  D3D_DRIVER_TYPE      DriverType,  ==== rdx\n                  HMODULE              Software,    ==== r8\n                  UINT                 Flags,       ==== r9 \n  _In_opt_  const D3D_FEATURE_LEVEL    *pFeatureLevels, ==== 1f8 == 20\n                  UINT                 FeatureLevels,   ===== 1f0 == 28\n                  UINT                 SDKVersion, <<<<<< == 7 ===1e8 == 30\n  _In_opt_  const DXGI_SWAP_CHAIN_DESC *pSwapChainDesc,\n  _Out_opt_       IDXGISwapChain       **ppSwapChain,\n  _Out_opt_       ID3D11Device         **ppDevice,\n  _Out_opt_       D3D_FEATURE_LEVEL    *pFeatureLevel,\n  _Out_opt_       ID3D11DeviceContext  **ppImmediateContext\n);\n</code></pre>\n",
            "votes": "0",
            "user": "blabb",
            "time": "Feb 23, 2018 at 3:16",
            "is_accepted": true,
            "comments": []
        }
    ]
}