{
    "title": "How to document a reverse engineering operation?",
    "link": "https://reverseengineering.stackexchange.com/questions/15947/how-to-document-a-reverse-engineering-operation",
    "content": "Sometime I have to reverse engineer / disassemble some software/firmware/application, how can I keep track of the findings, the application flow I discovered and generally the details I need when I return to work on that project after some time (months)?\nOften I have to analyze some kind of home-made encryption system and while I work on the project I can keep all the details I need in mind but if I pause the project for some time (ex. 1 month) when I return to work on it I have to relearn at least half of the details.\nTo sum up: I am searching for an easy, browsable, system to keep track of details of applications I disassemble to make them useful.\n",
    "votes": "8",
    "answers": 2,
    "views": "3k",
    "tags": [
        "documentation"
    ],
    "user": "Rocco Mancin",
    "time": "Jul 29, 2017 at 9:12",
    "comments": [],
    "answers_data": [
        {
            "content": "Reverse engineering is not quite mature at the moment.\nWhen I do it, I often do these things:\n\nGive the important functions clear names.\nDraw flow charts using some engineering software/tools with class structures.\nThe final weapon: rewrite the source code of the program (or a part of it) according to your analysis. The code is the best document.\n\nYou might need to read on software engineering to see how others\nkeep track of things in huge software projects.\n",
            "votes": "2",
            "user": "Smi",
            "time": "Aug 12, 2017 at 17:50",
            "is_accepted": true,
            "comments": []
        },
        {
            "content": "If you would like to get examples of thorough reverse engineering documentation examples, one of the moderators here has a website with fully reverse engineered malware analysis IDA Pro databases. Looking at how he approaches each function might prove to be a good framework.\nhttp://www.msreverseengineering.com/blog/2014/6/23/baglew-thorough-idb\nhttp://www.msreverseengineering.com/blog/2014/6/23/commwarriorb-thorough-idb-armc\n",
            "votes": "0",
            "user": "TJ Nel",
            "time": "Aug 1, 2017 at 14:52",
            "is_accepted": false,
            "comments": []
        }
    ]
}