{
    "title": "IDA: Finding out what calls sendmsg",
    "link": "https://reverseengineering.stackexchange.com/questions/6872/ida-finding-out-what-calls-sendmsg",
    "content": "I'm trying to reverse a server executable(linux) and I need to find what calls sendmsg. Usually I can just use the xrefs in IDA, but in this case it doesn't show me anything. However, if I set a breakpoint at it I can see it being called when I connect. So my question to you is: how can I find out how the program got to the sendmsg?\n",
    "votes": "3",
    "answers": 2,
    "views": "908",
    "tags": [
        "ida",
        "linux"
    ],
    "user": "Hugo Kiiski",
    "time": "Feb 26, 2015 at 21:32",
    "comments": [
        {
            "user": "PhoeniX",
            "text": "You can start by attaching a debugger and analysing the stack once you've braked on the sendmsg.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "If you're breaking at the beginning of <pre><code>sendmsg</code></pre> you can look at the return value on the stack to see where the call came from.  As long as no stack frame has been created the return value should be the first thing on the stack above ESP.  Take the image below:\n\nAssuming <pre><code>sendmsg</code></pre> is where <pre><code>Bar()</code></pre> is located, the return address would be the location in <pre><code>Foo()</code></pre> after <pre><code>sendmsg</code></pre> was called.  \nI'm not sure which debugger you're using (would be useful information), but in GDB you can look at the top of the stack (the return value) by using the following command:\n<pre><code>(gdb) x/20xw $esp</code></pre> \nThis technique is useful when following object-oriented code, and xrefs are hard to come by.\nBacktrace\nOr as suggested by Guntram Blohm you can use a backtrace.  In GDB:\n<pre><code>(gdb) bt    ; Prints entire backtrace\n(gdb) bt n  ; Prints 'n' innermost frames\n(gdb) bt -n ; Prints 'n' outermost frames\n</code></pre>\n",
            "votes": "1",
            "user": "RoraΖ",
            "time": "Dec 23, 2014 at 12:17",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Guntram Blohm",
                    "text": "<span class=\"comment-copy\">Or just use the <code>bt</code> command in gdb.</span>",
                    "time": null
                },
                {
                    "user": "RoraΖ",
                    "text": "<span class=\"comment-copy\">Sometimes I find backtrace overwhelming.  Especially if I just want one function back, but for all calls.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "Breakpoint at the beginning of the function and check the stack for the return address. Or hook your function in c++ for instance and log the _ReturnAddress ()\n",
            "votes": "0",
            "user": "Lolz2muchz",
            "time": "Dec 27, 2014 at 3:14",
            "is_accepted": false,
            "comments": []
        }
    ]
}