{
    "title": "How to hide a process from all the methods of getting the list of processes?",
    "link": "https://reverseengineering.stackexchange.com/questions/22062/how-to-hide-a-process-from-all-the-methods-of-getting-the-list-of-processes",
    "content": "So it seems that there are a lot of ways of getting the process list, although I'm not sure whether in the low level do they acquire them from same place or not\nso these are the ways i know :\n\nQuerySystemInformation (Zw or Nt)\nsome place in the TEB which is pointed by FS register \nCreateToolhelp32Snapshot\n\nand i guess there are   more ways too\nso my questions are :\n\ndo these methods use the same structure/linked list in the virtual memory of the process or they might use different methods? \nIf i hook the ZwQuerySystemInformation, will this stop the process from getting the list of processes? if not, then how can i be sure that a process cannot get the list? which functions should i hook or modify?\n",
    "votes": "2",
    "answers": 1,
    "views": "437",
    "tags": [
        "windows",
        "x86",
        "malware",
        "x64dbg",
        "x86-64"
    ],
    "user": "OneAndOnly",
    "time": "Sep 6, 2019 at 14:33",
    "comments": [],
    "answers_data": [
        {
            "content": "Pretty much, they will all eventually read the PEPROCESS object directory.\nMaybe not, depends on what you're trying to hide from. If it's just some basic usermode process iteration then you're probably fine. There's quite a few ways to iterate the process object directory though, such as ZwGetNextProcess.\n\nYour best bet would probably be ObRegisterCallbacks if you want to block access to your process, but it still won't be enough depending on privilege level and how they're iterated.\n",
            "votes": "2",
            "user": "Pickle Rick",
            "time": "Sep 19, 2019 at 8:12",
            "is_accepted": true,
            "comments": []
        }
    ]
}