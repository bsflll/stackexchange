{
    "title": "immediate value change when start debugging",
    "link": "https://reverseengineering.stackexchange.com/questions/19152/immediate-value-change-when-start-debugging",
    "content": "I patch the code for my work. I have a problem with code patching.\nI use IDA pro 6.8. \nI added code like this.\n<pre><code>(Assembly)           (Hex dump)\nmov eax, 638BACh --> B8 AC 8B 63 00\n</code></pre>\nNot problem until now, but problem occurred when start debugging.\nimmediate value change like this.\n<pre><code>(Assembly)              (Hex dump)\nmov eax, 0AC638BACh -->  B8 AC 8B 63 AC\n</code></pre>\nWhat's wrong with my working?\n",
    "votes": "0",
    "answers": 1,
    "views": "253",
    "tags": [
        "ida",
        "patching",
        "patch-reversing"
    ],
    "user": "임근영",
    "time": "Aug 27, 2018 at 22:45",
    "comments": [],
    "answers_data": [
        {
            "content": "When you start debugging, IDA automatically rebases your database to the actual load address of the program you are debugging. Due to ASLR, the runtime base address is very likely different from the base address IDA loaded the file to in the database. When the database gets rebased, IDA automatically patched all locations referenced by the relocation table. If the code you patched contained an absolute address before patching, you have a relocation entry for that address.\nYou can verify my hypothesis by undefining the move instruction. One of the resulting \"db\" statements will have an autogenerated  \"FIXUP\" comment if there is a relocation entry affecting that instruction.\n",
            "votes": "1",
            "user": "Michael Karcher",
            "time": "Aug 26, 2018 at 21:57",
            "is_accepted": true,
            "comments": []
        }
    ]
}