{
    "title": "IDA: add segments without losing data",
    "link": "https://reverseengineering.stackexchange.com/questions/18347/ida-add-segments-without-losing-data",
    "content": "I'm browsing an old 80186 BIOS ROM in IDA free. I have loaded the binary file at the correct address and created one big segment for the entire thing since I knew nothing about the internal structure.\nNow, as I have been digging around, disassembling, commenting etc, I have identified some things that I'd like to create new segments for, e.g. interrupt vector seg:offset, far jmps, jump tables that are offsets into different CS values, etc.\n\nIs this how you are supposed to use IDA segments? I.e. avoid having to hand-calculate linear addresses from jump table offsets by making a new segment with the (known) CS value at the time the table is used.\nHow do I create a new segment without losing the data entered (disassembly, arrays, comments...) in the one all-encompassing segment I already have? It seems that to make room for a new segment, I need to delete or move the one that's already there, but when I do, all work done in that area (of linear addresses) is lost.\n\nEdit: This is the ROM. It's loaded at 0xf0000-0x100000, entry point is f000:fff0 (reset vector)\nhttps://www.dropbox.com/s/63oxq39w0v3rdo9/RYSA094_joined.bin?dl=0\n",
    "votes": "4",
    "answers": 3,
    "views": "3k",
    "tags": [
        "ida",
        "x86"
    ],
    "user": "esrever",
    "time": "May 28, 2018 at 6:49",
    "comments": [],
    "answers_data": [
        {
            "content": "IDA's UI deletes segment items because usually the code needs to be recreated if the segment base changes.\nIf you cheat and don't change the segment base immediately, items won't be destroyed. I.e. try this:\n\ncreate new segment specifying the same base as the existing segment. IDA usually fills in the current segment base if you use selection before invoking the  \"Create Segment\" menu item.\nchange the segment base behind IDA's back using IDC or IDAPython:\nset_segm_attr(here, SEGATTR_SEL, newbase)\n\nSome xrefs, especially those based on current segment/CS may need to be recreated.\n",
            "votes": "2",
            "user": "esrever",
            "time": "May 30, 2018 at 12:36",
            "is_accepted": true,
            "comments": [
                {
                    "user": "esrever",
                    "text": "<span class=\"comment-copy\">Thanks, that did the trick. To clarify, when you say \"usually the code needs to be recreated if the segment base changes\" - what are the potential risks of sneaking the segment base change in like this?</span>",
                    "time": null
                },
                {
                    "user": "Igor Skochinsky",
                    "text": "<span class=\"comment-copy\">@esrever some xrefs, especially those based on current segment/CS may need to be recreated</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "IDA is not very user friendly when it comes to manipulating the segments.\nThere's an option to keep the data while you're resizing the segment, it will at least keep your bytes intact. But the all your names and comments will be lost. \nSo the only thing I can suggest is to use save database to IDC, and then edit it to remove the segment creation part. So that it will still apply the names, comments, etc.\nPersonally, I do firmware reversing in two steps: \n1) load the whole firmware at address 0, recover the memory map. Close this IDA database.\n2) split the firmware into pieces, create new IDA database and load the pieces properly\n",
            "votes": "5",
            "user": "Anton Kukoba",
            "time": "May 24, 2018 at 10:58",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "You can merge segments in two steps:\n\nfirst make sure the end address of the lower segment matches the start address of the higher segment.\nthen once the segments are adjacent, you can combine them without losing data by setting the end address of the first segment to end address of the second segment.\n\nThen IDA will automatically merge the two segments without loss of data.\nI think they do need to have the same segment bitness ( 16 or 32 bit ).\nDo make a backup copy of your database before trying this out, typo's can destroy your data.\n\nSplitting works similarly:\n\nadd a segment with the same attributes and <pre><code>end-address</code></pre> as the original.\n\n\nIDA will automatically split, and retain contents.\n\n\nExample ( in <pre><code>IDC</code></pre> scripting )\nPosition your cursor on the first line of the new segment you want to create, and paste this in the script commandline:\n<pre><code>AddSeg(here, SegEnd(here), GetSegmentAttr(here, SEGATTR_ORGBASE), \n    GetSegmentAttr(here, SEGATTR_BITNESS), \n    GetSegmentAttr(here, SEGATTR_ALIGN),\n    GetSegmentAttr(here, SEGATTR_COMB));\n</code></pre>\n",
            "votes": "4",
            "user": "Willem Hengeveld",
            "time": "May 24, 2018 at 17:07",
            "is_accepted": false,
            "comments": [
                {
                    "user": "esrever",
                    "text": "<span class=\"comment-copy\">I tried your IDC command, but have the same problem. First:       \"The range 00000000000FB050..0000000000100000 contain instructions/data. Do you want to remove these instructions?\"    If I choose yes, all work in the new segment part is lost. If I choose no:        \"Create a segment (00000000000FB050-0000000000100000, sel 0000000000000000): can't trim the previous segment.\"   (the previous segment is at F0000-100000)</span>",
                    "time": null
                },
                {
                    "user": "Willem Hengeveld",
                    "text": "<span class=\"comment-copy\">if you are browsing a 80186 rom, why do you post addresses as 64 bit (16 hexdigits ) numbers?</span>",
                    "time": null
                },
                {
                    "user": "Willem Hengeveld",
                    "text": "<span class=\"comment-copy\">I must say that i never tried this command on a segmented architecture, i know it works fine in flat address spaces.   Can you maybe post a link to the rom, so i try it for myself?</span>",
                    "time": null
                },
                {
                    "user": "esrever",
                    "text": "<span class=\"comment-copy\">That's how I get them from IDA. Maybe I've goofed when first importing the binary?</span>",
                    "time": null
                },
                {
                    "user": "esrever",
                    "text": "<span class=\"comment-copy\">I've added it to the original post now.</span>",
                    "time": null
                }
            ]
        }
    ]
}