{
    "title": "How to load a pdb file from the hard drive with IDA Pro?",
    "link": "https://reverseengineering.stackexchange.com/questions/29279/how-to-load-a-pdb-file-from-the-hard-drive-with-ida-pro",
    "content": "All the answers I see on Google are about how to load PDB files from online servers. But I have an exe I'm debugging. It's my own exe. Only reason I want to debug it, is so that I can step through what happens when it makes some calls to user32.dll and beyond.\nMy EXE was made with c#, in Visual Studio, it's and x64 and \"debug\" build, with \"full\" pdb output. So the PDB is right there in the same folder, same name as the exe, and right next to the exe.\nBut when I load the EXE into IDA, it doesn't load the PDB. Instead, it tries to load a different PDB:\n<pre><code>[autohidden] The input file was linked with debug information\n and the symbol filename is:\n\"D:\\workspace\\_work\\1\\s\\artifacts\\obj\\win-x64.Release\\corehost\\cli\\apphost\\standalone\\Release\\apphost.pdb\"\nDo you want to look for this file at the specified path\nand the Microsoft Symbol Server?\n -> No\n</code></pre>\nI don't know what this \"apphost.pdb\" is, and that folder name of \"D:\\workspace...etc\" is definitely not on my computer, there is no such folders or anything similar. I don't even have a drive D. My exe is named Resolution_dev.exe, and the correct pdb is Resolution_dev.pdb. So I don't know why it's trying to find apphost.pdb.\nBut furthermore, as you can see in the debug output, it is [autohidden] and automatically answers the question with \"-> No\" at the end. So it doesn't even ask me the question, and automatically skips the PDB load.\nAnd I can't find anywhere in the toolbar along the top of IDA, where it will let me manually load the PDB from a file. And as I said, all the info I found on Google is about loading pdb's from online servers. I can't find anything about how to simply load one from the drive.\n",
    "votes": "3",
    "answers": 3,
    "views": "6k",
    "tags": [
        "ida",
        "pdb"
    ],
    "user": "NERL",
    "time": "Sep 12, 2021 at 14:36",
    "comments": [],
    "answers_data": [
        {
            "content": "Either put the PDB in the same folder as the executable, or use <pre><code>File->Load file->PDB file</code></pre> (after opening the .EXE in IDA) to load the PDB from whatever path you like on the disk.\n",
            "votes": "4",
            "user": "Rolf Rolles",
            "time": "Sep 12, 2021 at 14:48",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "To load a PDB for your own DLL, as already mentioned, use File -> Load file -> PDB file.\nTo load a PDB for a Microsoft DLL from the public PDB server:\n\nSet <pre><code>_NT_SYMBOL_PATH</code></pre> environment variable as described on MSDN.\nFor example, to <pre><code>srv*C:\\symbols*https://msdl.microsoft.com/download/symbols</code></pre>\nCreate <pre><code>C:\\symbols</code></pre>,\nRestart IDA.\n\nIn IDA, Go to File -> Load file -> PDB file, then select your binary (EXE/DLL) file where the PDB is expected. IDA will automatically download, cache and use the corresponding PDB file.\n",
            "votes": "3",
            "user": "rustyx",
            "time": "Nov 1, 2021 at 21:52",
            "is_accepted": false,
            "comments": [
                {
                    "user": "0xC0000022L",
                    "text": "<span class=\"comment-copy\">Option 1 is always worth setting, especially if one wants caching in a specific location or separate remote PDBs from those created for own software ... and of course for tools like IDA or Process Explorer, making use of DIA. Good answer!</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "As others have mentioned, File → Load file → PDB file dialog works if you want to load the PDB after initial analysis. However, I was trying to load the PDB before it and ran into the same problem with the dialog being autohidden.\nTo fix it, you need to select Window → Reset hidden messages. This option is greyed out unless there is a disassembly currently loaded. After that, you can start disassembling your file again and PDB selection dialog will appear normally.\n",
            "votes": "0",
            "user": "MarianD",
            "time": "Dec 18, 2021 at 18:03",
            "is_accepted": false,
            "comments": []
        }
    ]
}