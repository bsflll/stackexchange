{
    "title": "Constructor takes it's own class pointer as param",
    "link": "https://reverseengineering.stackexchange.com/questions/29757/constructor-takes-its-own-class-pointer-as-param",
    "content": "So, I need to call a constructor to start an action in a game made with Unity, compiled with Il2cpp.\nThe constructor itself by Ghidra:\n<pre><code>void Client.Model.Gameplay.Battle.Commands.CreatePveBattleCmd$$.ctor(longlong param_1,int stage,int *heroIds,undefined4 source,undefined8 numberBattles, undefined8 autoBattle,undefined8 presetId,undefined doubleRun)\n</code></pre>\nThe constructor in dnSpy after dumping it with Il2cpp dumper by Perfare:\n<pre><code>public CreatePveBattleCmd(int stageId, int[] heroIds, BattleRequestSourceId source, [Optional] int? autoBattleNumber, [Optional] UserAutoBattleData autoBattleData, [Optional] int? presetId, bool doubleRunEnabled = false)\n{\n}\n</code></pre>\nThat unknown param_1 at Ghidra's is the class pointer, I have been able to call methods of other classes with success but they were always already instantiated, so I'm kinda lost on how to approach this.\nMy way of calling methods is as follows:\n<pre><code>typedef type (__callMethod* _name)(type param_1, type param_2);\n_name name;\n</code></pre>\nHow to call the constructor without it's class?\n",
    "votes": "1",
    "answers": 0,
    "views": "257",
    "tags": [
        "ghidra",
        "c#"
    ],
    "user": "Hanndel",
    "time": "Dec 21, 2021 at 18:07",
    "comments": [],
    "answers_data": []
}