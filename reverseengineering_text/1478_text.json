{
    "title": "How common are virtualized packers in the wild?",
    "link": "https://reverseengineering.stackexchange.com/questions/1478/how-common-are-virtualized-packers-in-the-wild",
    "content": "I'm just getting into the RE field, and I learned about virtualized packers (like VMProtect or Themida) in a class about a year ago. How often is malware in the wild really packed with virtualized packers, and what is the state of the art in unpacking them for static analysis?\n",
    "votes": "20",
    "answers": 4,
    "views": "7k",
    "tags": [
        "obfuscation",
        "static-analysis",
        "malware",
        "unpacking",
        "virtualizers"
    ],
    "user": "Andrew",
    "time": "Apr 2, 2013 at 12:48",
    "comments": [],
    "answers_data": [
        {
            "content": "virtualizers usage in the wild\nThey are rarely used, and even worse (or better), rarely used in a useful way.\nhow they're used\nTypically, it was the use of a virtualizer of over only the main function, or another binary packer, and both cases don't prevent analysis: if you bypass the virtualized packer code, then you get the original unpacked code anyway.\nwhy they're not used more often\n\nIt makes the target bloated and slower\nthey're not trivial to use correctly\nit's fairly common to detect them based on their (usually pirated) licence's watermark, so no matter what you'd virtualize, it would be detected by a specific fingerprint.\n\na meaningful example\nAFAIK the only known smart use of a virtualizer (VMProtect here) in a malware is Trojan.Clampi, for which Nicolas Falli√®re wrote a white paper, but it's not so detailed. For this one, the whole viral body was virtualized.\npapers on de-virtualization\n\nRolf Rolles' Unpacking Virtualization Obfuscators, OpenRCE blog entries\nsherzo's inside code virtualizer\n\nI couldn't find a public download link for these (otherwise good) papers:\n\nBoris Lau's Dealing with Virtualization packers\nZhenxiang Jim Wan's How to recover virtualized x86 instructions by Themida\n",
            "votes": "17",
            "user": "Community",
            "time": "Jun 17, 2020 at 9:54",
            "is_accepted": true,
            "comments": [
                {
                    "user": "Brendan Dolan-Gavitt",
                    "text": "<span class=\"comment-copy\">Another one on the academic side: <a href=\"http://iseclab.org/people/andrew/download/oakland09.pdf\" rel=\"nofollow noreferrer\">Automatic Reverse Engineering of Malware Emulators</a></span>",
                    "time": null
                },
                {
                    "user": "lllllllllllll",
                    "text": "<span class=\"comment-copy\">State-of-art dynamic approach: <a href=\"http://www.cs.arizona.edu/~debray/Publications/ccs-unvirtualize.pdf\" rel=\"nofollow noreferrer\">cs.arizona.edu/~debray/Publications/ccs-unvirtualize.pdf</a></span>",
                    "time": null
                }
            ]
        },
        {
            "content": "I can support the presented view of the other responders. You will rarely encounter code virtualization when looking at in the wild samples.\nJust to add, here is a recent case-study by Tora looking at the custom virtualization used in FinFisher (sorry, direct link to PDF, have no other source).\nThe VM used here has only 11 opcodes, thus this example can be easily understood and used to get an impression of some common design principles behind custom VMs.\n",
            "votes": "6",
            "user": "pnX",
            "time": "Apr 3, 2013 at 11:23",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "In the last year or so, I think I have only encountered a single malware sample that was using a virtualized packer (VMProtect in that case).  Most of the samples I look at use stupid packers that allow easy dumping of the original PE from memory.  I don't spend all of my time looking at malware, but I typically look at a couple potentially malicious samples a week, just to give some perspective on the volume I'm talking about.  Also, I seem to remember that the SpyEye author used VMProtect to protect the malware builder, I'm not sure if other's who sell those kind of kits have used it as well.  I've heard the Citadel builder has some pretty gnarly protection, but I'm not certain of what it is.\nRegarding the second part of your question, I am no expert, but a couple of sites came to mind to potentially check out if you are interested in trying to learn to unpack this stuff.  This site has some posts about unpacking various things, including VMProtect and Themida.  I haven't gone through those posts in particular, just noticed that they are on there.  I think there are some tutorials dealing with some versions of these specific packers on tuts4you.com as well if you are interested to check some of those out.\n",
            "votes": "3",
            "user": "thisismalicious",
            "time": "Apr 2, 2013 at 16:28",
            "is_accepted": false,
            "comments": []
        },
        {
            "content": "To the first part of your question: It really depends on the domain. Malware samples that leverage virtualization-based packers are generally easy to detect, which is a drawback from the malware author's perspective. If avoiding detection is crucial, which is especially the case in targeted attacks where your sample is probably custom anyway, virtualized packers are not a good idea. I assume that's why only very few samples make use of them. I have seen only one (themida protected) in the last year or so.\n",
            "votes": "3",
            "user": "til",
            "time": "Apr 2, 2013 at 16:47",
            "is_accepted": false,
            "comments": []
        }
    ]
}