{
    "title": "Hex editing a program to change variable types",
    "link": "https://reverseengineering.stackexchange.com/questions/21458/hex-editing-a-program-to-change-variable-types",
    "content": "For starters guys please don't get mad at me because I really googled this question for a while and couldn't find a satisfying answer. Also if I'm asking an idiotic question, I apologize beforehand.\nWhat I basically want to do is to hex edit an executable file to change an integer variable in an address I know from signed to unsigned. Is this even possible? to change variable types by hex editing? I know how to change the value of the variable, but how can I change its type?\nThanks in advance,\nRay.\n",
    "votes": "1",
    "answers": 1,
    "views": "357",
    "tags": [
        "assembly",
        "executable",
        "patching",
        "hex",
        "hexadecimal"
    ],
    "user": "FightRay",
    "time": "Jun 11, 2019 at 9:15",
    "comments": [],
    "answers_data": [
        {
            "content": "Yes, it is possible, but by changing instructions, not data. In assembly there is no way to tell that a particular integer variable is signed or unsigned until you interpret it in the one or another way (and you may change this interpretation many times). \nKnowing this, to interpret some integer value you use instructions like <pre><code>ja</code></pre>, <pre><code>jb</code></pre> or <pre><code>mul</code></pre> in case of unsigned integer, or <pre><code>jg</code></pre>, <pre><code>jl</code></pre> or <pre><code>imul</code></pre> in case of signed integer (in <pre><code>x86</code></pre> architecture). So, if you want to change the way the particular integer is interpreted, you have to change instructions in one of these groups to their counterparts in the second one.\n",
            "votes": "1",
            "user": "bart1e",
            "time": "Jun 11, 2019 at 8:41",
            "is_accepted": true,
            "comments": []
        }
    ]
}