{
    "title": "Reverse Engineering a whole project desktop application",
    "link": "https://reverseengineering.stackexchange.com/questions/12382/reverse-engineering-a-whole-project-desktop-application",
    "content": "Friends: i am trying to reverse engineer a CMS desktop application with the objective to make another with better functionallity; that CMS application contains 32 Dll´s; the idea is instead of create a whole new appliclation is to understand those Dll´s and use them to make new better one; but i need to map the whole situation: the functions a classes that those Dll´s use are available to be checked using ida or ollydbg, most of them functions are called between programs and Dlls, so my questios is to know if is there a tool live viual studio does with a proyect, that can show me the whole Dlls, its functions and clases so i can try to understand the program from the point of view of their use, instead from the disassembly.\nThanks in advance\n",
    "votes": "1",
    "answers": 0,
    "views": "955",
    "tags": [
        "tools",
        "dll"
    ],
    "user": "user3177225",
    "time": "Apr 8, 2016 at 17:32",
    "comments": [
        {
            "user": "user2823000",
            "text": "Do you know the programming language / compiler that was used for this application?\n",
            "time": null
        },
        {
            "user": "user3177225",
            "text": "according to ResEdit is a VFT_APP, visual fox pro file type\n",
            "time": null
        },
        {
            "user": "DarthGizka",
            "text": "Visual FoxPro apps can be decompiled into recompile source code, complete with the project file for buiilding the app. Look for programs like ReFox or similar. If the Fox app uses anti-reversing tricks and/or transparent encryption (e.g. Cryptor or similar kits) then you need an experienced Fox reverser to give you a hand, like e.g. a little script that tells the decryption stub to please hand over all of the plain Fox app in decrypted form (by injecting code that finds the app's file channel in the descriptor table and flips a bit to make it visible to functions like <pre><code>fread()</code></pre> for dumping).\n",
            "time": null
        },
        {
            "user": "user3177225",
            "text": "thanks for the answer, reversing from the application is another point of view; i wanted just to reverse the Dll´s that came with the application; just having all classes and functions enumeated and related in the same screen. ;)\n",
            "time": null
        }
    ],
    "answers_data": []
}