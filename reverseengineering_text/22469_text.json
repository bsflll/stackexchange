{
    "title": "problem rewriting ELF binary to add an additional loadable segment",
    "link": "https://reverseengineering.stackexchange.com/questions/22469/problem-rewriting-elf-binary-to-add-an-additional-loadable-segment",
    "content": "I have a problem rewriting ELF binary to add an additional loadable segment for add.c code.\nI have problem working with https://pdfhost.io/v/U@uP1+nCY_Compact_Control_Flow_Integerity_in_Linuxpdf.pdf\nNote that in the readelf report , especially the Section to Segment mapping , the right side (modified ELF) still does not have an additional loadable segment (called as .mysection)\nNote: I am using 010Editor together with ELF.bt which I believe that this 010 editor software is already using elfutils library\n",
    "votes": "1",
    "answers": 1,
    "views": "689",
    "tags": [
        "elf",
        "segmentation",
        "section"
    ],
    "user": "kevin",
    "time": "Nov 6, 2019 at 9:36",
    "comments": [],
    "answers_data": [
        {
            "content": "I think that if you want to inject code in an elf, the best way would be to resize your second PT LOAD where the will be your loadable data, add execution permissions and inject your code at the end of the data in order to hook your elf and, at the end of this \"stub\" jump at the original entry point.\nIf you want to have an example, you can look at the code of my tool: AD_1DA which allow you to inject some asm code in an elf from an executable nasm binary (and do some other obfuscation/metamorphic stuff).\n",
            "votes": "1",
            "user": "n4sm",
            "time": "Dec 28, 2019 at 0:01",
            "is_accepted": false,
            "comments": []
        }
    ]
}