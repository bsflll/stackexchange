{
    "title": "Crackme assistance - change input of a function",
    "link": "https://reverseengineering.stackexchange.com/questions/26443/crackme-assistance-change-input-of-a-function",
    "content": "Just as a preface, this is a crackme from <pre><code>https://hack.ainfosec.com/</code></pre>. I know you can submit these as part of a job app, I have no intentions of doing that. Very happy to have a job in a related, but different field as this is not my strong suit (go figure).\nAlso, I have solved this crackme via a different method (changing the MAC on my NIC to what the executable was expecting). I want to further solve this so that I don't have to bend my system to the program's will, but the other way around instead.\nThis is my already-modified version of the getFlag function.\n<pre><code>[0x00400b8d]> pdf\n            ; CALL XREF from sym.generateSentence @ 0x400db0\n┌ 161: sym.getFlag ();\n│           ; var void *ptr @ rbp-0x10\n│           ; var int64_t var_8h @ rbp-0x8\n│           0x00400b8d      55             push rbp\n│           0x00400b8e      4889e5         mov rbp, rsp\n│           0x00400b91      4883ec10       sub rsp, 0x10\n│           0x00400b95      b800000000     mov eax, 0\n│           0x00400b9a      e87d050000     call sym.getMac\n│           0x00400b9f      488945f0       mov qword [ptr], rax\n│           0x00400ba3      48837df000     cmp qword [ptr], 0\n│       ┌─< 0x00400ba8      eb0a           jmp 0x400bb4\n..\n│      ││   ; CODE XREF from sym.getFlag @ 0x400ba8\n│      │└─> 0x00400bb4      488b45f0       mov rax, qword [ptr]\n│      │    0x00400bb8      488d3572f40a.  lea rsi, qword str.de:ad:be:ef:fa:ce ; 0x4b0031 ; \"de:ad:be:ef:fa:ce\"\n│      │    0x00400bbf      4889c7         mov rdi, rax\n│      │    0x00400bc2      e809f9ffff     call fcn.004004d0\n│      │    0x00400bc7      85c0           test eax, eax\n│      │    0x00400bc9      90             nop\n│      │    0x00400bca      90             nop\n│      │    0x00400bcb      0fb60564a12d.  movzx eax, byte [obj.user_seed] ; [0x6dad36:1]=0\n│      │    0x00400bd2      84c0           test al, al\n│      │    0x00400bd4      90             nop\n│      │    0x00400bd5      90             nop\n│      │    0x00400bd6      488d3d66f40a.  lea rdi, qword str.You_win  ; 0x4b0043 ; \"You win!\" ; const char *s\n│      │    0x00400bdd      e8be130100     call sym.puts               ; int puts(const char *s)\n│      │    0x00400be2      488b45f0       mov rax, qword [ptr]\n│      │    0x00400be6      4889c6         mov rsi, rax\n│      │    0x00400be9      488d3d5cf40a.  lea rdi, qword str.Mac_Address:__s ; 0x4b004c ; \"Mac Address: %s\n\"\n│      │    0x00400bf0      b800000000     mov eax, 0\n│      │    0x00400bf5      e8a6040100     call sym.__printf\n│      │    0x00400bfa      488b45f0       mov rax, qword [ptr]\n│      │    0x00400bfe      4889c7         mov rdi, rax\n│      │    0x00400c01      e8faf8ffff     call fcn.00400500\n│      │    0x00400c06      89c2           mov edx, eax\n│      │    0x00400c08      488b45f0       mov rax, qword [ptr]\n│      │    0x00400c0c      89d1           mov ecx, edx                ; int64_t arg4\n│      │    0x00400c0e      4889c2         mov rdx, rax                ; int64_t arg3\n│      │    0x00400c11      be11000000     mov esi, 0x11               ; 17 ; signed int64_t arg2\n│      │    0x00400c16      488d3d03f40a.  lea rdi, qword obj.FLAG     ; 0x4b0020 ; int64_t arg1\n│      │    0x00400c1d      e877040000     call sym.xorencrypt\n│      │    0x00400c22      488945f8       mov qword [var_8h], rax\n│      │    0x00400c26      488b45f0       mov rax, qword [ptr]\n│      │    0x00400c2a      4889c7         mov rdi, rax                ; void *ptr\n│      │    0x00400c2d      e8de0f0200     call sym.__free\n│      │    0x00400c32      488b45f8       mov rax, qword [var_8h]\n│      │    ; CODE XREF from sym.getFlag @ +0x22\n│      └──> 0x00400c36      c9             leave\n└           0x00400c37      c3             ret\n</code></pre>\nI would like to modify the input for the xorencrypt function to \"de:ad:be:ef:fa:ce\", instead of my actual MAC address, which I believe is identified as var_8h. I am sure there's a way to move the value at <pre><code>0x4b0031 (de:ad:be:ef:fa:ce)</code></pre> to <pre><code>var_8h</code></pre> or something like that, but I'm not sure how to go about it. I believe it would be easier to change the input to <pre><code>xorencrypt</code></pre> rather than changing the output of <pre><code>getMac</code></pre>, but I could be wrong.\nThis is pretty much my first go with (dis)assembly and Radare2.\nThe 64-bit ELF executable has 2 flags, <pre><code>--debug</code></pre> and <pre><code>--set-seed</code></pre>. You can solve this by setting the seed to 19016 and changing the MAC address of the first NIC in your system to <pre><code>de:ad:be:ef:fa:ce</code></pre>.\nOriginal executable here (sentencebot)\nMy modified version here (sentencebot2)\n",
    "votes": "1",
    "answers": 1,
    "views": "268",
    "tags": [
        "disassembly",
        "radare2",
        "crackme"
    ],
    "user": "Tyler",
    "time": "Dec 4, 2020 at 23:28",
    "comments": [],
    "answers_data": [
        {
            "content": "I think the best way to solve your problem is to study function calls in assembler.\nMy guess is just need to replace the argument on the top of the stack with your desired MAC address.\nI believe this set of slides from Princeton will put you on the right track: https://www.cs.princeton.edu/courses/archive/spr11/cos217/lectures/15AssemblyFunctions.pdf\n",
            "votes": "1",
            "user": "pythonpython",
            "time": "Dec 5, 2020 at 18:28",
            "is_accepted": false,
            "comments": []
        }
    ]
}