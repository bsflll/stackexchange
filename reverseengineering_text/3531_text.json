{
    "title": "Extract dlls in Import Directory & runtime tool",
    "link": "https://reverseengineering.stackexchange.com/questions/3531/extract-dlls-in-import-directory-runtime-tool",
    "content": "I want to reuse a dll which is imported in another exe. Is there any tool that can extract dlls (load-time dynamic linking & run-time dynamic linking) of an exe?\n Load-time dynamic linking --> I want extract a copy of each dll (user32.dll, kernel32.dll ...)\nFor run-time dynamic linking: I want to extract the dlls that are loaded via LoadLibrary functions.\n",
    "votes": "2",
    "answers": 1,
    "views": "494",
    "tags": [
        "windows",
        "dll"
    ],
    "user": "tuantm",
    "time": "Feb 6, 2014 at 14:52",
    "comments": [
        {
            "user": "PhoeniX",
            "text": "Was this \"another exe\" already loaded before your application?\n",
            "time": null
        },
        {
            "user": "tuantm",
            "text": "No, just this \"another exe\" not already run. I just want to analyze statically\n",
            "time": null
        },
        {
            "user": "PhoeniX",
            "text": "What do you mean by \"extract\"? The DLL is stored as a resource in other executable?\n",
            "time": null
        },
        {
            "user": "0xea",
            "text": "Can you explain your situation in more details, what do you mean by \"extracting a DLL\"? It's name? Please edit your question with more details.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Thank you all for your considering! After googling days by days for tools but didn't get any, I had my temporary solution that I write a tool as below:\n\nFor load-time dynamic linking: Parsing the PE structure of this exe to export the dll names in the import directory then search them in %path% enviroment variable and the current directory of the exe. If the dlls exist, I copy them to the output.\nFor run-time dynamic linking: Hooking the LoadLibrary functions to get the dll names then check the existence (similar as above).\n",
            "votes": "2",
            "user": "tuantm",
            "time": "Feb 3, 2014 at 14:55",
            "is_accepted": false,
            "comments": []
        }
    ]
}