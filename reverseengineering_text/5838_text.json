{
    "title": "How to reserve certain amount of memory and using segment register to access?",
    "link": "https://reverseengineering.stackexchange.com/questions/5838/how-to-reserve-certain-amount-of-memory-and-using-segment-register-to-access",
    "content": "So basically I am trying to re-implement a memory protection technique, with the description like this:\n\nA 256M segment is reserved for application code and \nA 512M segment is reserved for some special data (can't be modified during runtime)\n...\n<pre><code>%fs</code></pre> register is used to access the 512M memory of special data.\n\nI am thinking to leverage some segmentation based protection on 32bit x86, however, I am trapped in the first step, how to reserve some memory for the special data mentioned above ?\nSo basically what i am trying to do is very similar with Google's Native Client, I \nquote some thing for its wiki.\n\nThe x86-32 implementation of Native Client is notable for its novel \n      sandboxing method which makes use of the x86 architecture's rarely \n      used segmentation facility.\nNative Client sets up x86 segments to restrict the memory range \n      that the sandboxed code can access.\n\nCould anyone give me some help on this issue ?\n",
    "votes": "1",
    "answers": 1,
    "views": "341",
    "tags": [
        "x86",
        "memory",
        "protection"
    ],
    "user": "lllllllllllll",
    "time": "Jul 13, 2014 at 13:57",
    "comments": [
        {
            "user": "0xec",
            "text": "In Virtual Memory Operating Systems memory protection is implemented by the OS, which application code has no control over. Unless you are writing some emulator or a virtual machine you cannot guarantee that memory will always be available at some specific address.  Even the <pre><code>VirtualAlloc</code></pre> will not reserve memory at any adress.\n",
            "time": null
        },
        {
            "user": "lllllllllllll",
            "text": "@ExtremeCoders, I modified the question, I made something wrong before. anyway, there should be some methods, thinking of Google's NaCI paper\n",
            "time": null
        },
        {
            "user": "0xec",
            "text": "Google's NaCl implementation is complex and uses many techniques. See this related qs on SO. This pdf analyzes the NaCl architecture.\n",
            "time": null
        },
        {
            "user": "JamalS",
            "text": "There are certain limitations, but you should have a look at the Windows API, and specifically functions such as VirtualProtect(). Some methods for virtual memory management are also used for anti-debugging purposes, e.g. using VirtualProtect() and ZeroMemory() an application may strip its PE header.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "If this is for Linux then take a look at http://linux.die.net/man/2/arch_prctl, specifically at the <pre><code>ARCH_SET_FS</code></pre> option.\n",
            "votes": "1",
            "user": "Peter Goodman",
            "time": "Jul 17, 2014 at 20:36",
            "is_accepted": false,
            "comments": []
        }
    ]
}