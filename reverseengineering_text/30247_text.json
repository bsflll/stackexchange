{
    "title": "Best way to monitor the access to a DLL of a software?",
    "link": "https://reverseengineering.stackexchange.com/questions/30247/best-way-to-monitor-the-access-to-a-dll-of-a-software",
    "content": "I'm currently analyzing a complex software which compiles a kind of code. By monitoring and correlating it with ProcMon I could figure out it loads a DLL as a module.\nNow I'm trying to find out how exactly it is compiling the code by using a specific DLL (and which of its function together with its output) so I would like to ask which is the best way to do this.\nI  have IDA Pro and know it has the capability to debug it together with an exe.\nThe problem is the software consists of multiple subprocesses (or exes) so I don't know which one is using it exactly or how to handle such cases.\nIs there any way you can recommend or reference I could start with? I was considering using processhacker together with \"ThreadCreate\" Operations but don't know if ProcessHacker is the right tool for this as it doesn't record anything and has only a real-time view.\nThanks\n",
    "votes": "0",
    "answers": 1,
    "views": "752",
    "tags": [
        "ida",
        "dll",
        "processhacker"
    ],
    "user": "programmerskitchen",
    "time": "Apr 9, 2022 at 15:34",
    "comments": [],
    "answers_data": [
        {
            "content": "If I've understood correctly, you are trying to figure out how the functions in this dll are called from the main executable.\nIf that's the case you can use API Monitor by Rohitab, a free tool to \"spy\" access to dll functions. This tool is very powerful, and it allows you to retrieve the thread id, the name of the DLL that made the call, the API itself with its parameters and return value.\n",
            "votes": "0",
            "user": "Luca D'Amico",
            "time": "Apr 10, 2022 at 13:56",
            "is_accepted": true,
            "comments": []
        }
    ]
}