{
    "title": "debugger trap with angr",
    "link": "https://reverseengineering.stackexchange.com/questions/18993/debugger-trap-with-angr",
    "content": "Let's suppose this (very ugly) c code:\n<pre><code>#include <stdio.h>\n#include <string.h>\n#include <signal.h>\n\nchar sav_argv[100];\n\nvoid on_sigtrap(int signo)\n{\n    if (strcmp(sav_argv, \"hello\") == 0)\n    {\n        printf(\"OK!\n\");\n    } else {\n        printf(\"NOK\n\");\n    }\n}\n\nint main(int argc, char *argv[])\n{\n    memset(sav_argv,100,0);\n    memcpy(sav_argv,argv[1],100);\n    signal(SIGTRAP,on_sigtrap);\n    __asm__(\"int3\");\n    return 0;\n}\n</code></pre>\nI have compiled this c program with gcc (linux 64 bits elf).\nWhat i want to do is to solve it with an angr python script.\nIt does work if i remove the debuger trap but it does not work with debuger trap.\nIs there a way to make angr work on this c program ?\nThanks\n",
    "votes": "1",
    "answers": 0,
    "views": "490",
    "tags": [
        "anti-debugging",
        "angr"
    ],
    "user": "Bob5421",
    "time": "Aug 6, 2018 at 10:12",
    "comments": [
        {
            "user": "0xec",
            "text": "You can use a hook on the <pre><code>int3</code></pre>. Docs.\n",
            "time": null
        },
        {
            "user": "Bob5421",
            "text": "Good idea but what should i put in hook function? How can i call handler ?\n",
            "time": null
        },
        {
            "user": "0xec",
            "text": "Look in the Control Flow section. You can put a <pre><code>jump(addr)</code></pre> to transfer control to the handler.\n",
            "time": null
        },
        {
            "user": "Bob5421",
            "text": "is it a jump or a call in this case ?\n",
            "time": null
        },
        {
            "user": "0xec",
            "text": "Will likely be a call.\n",
            "time": null
        }
    ],
    "answers_data": []
}