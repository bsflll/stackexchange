{
    "title": "IDA Pro how debug constant function returning different results?",
    "link": "https://reverseengineering.stackexchange.com/questions/21082/ida-pro-how-debug-constant-function-returning-different-results",
    "content": "The code below is executed with the parameters <pre><code>(0, 4, 0)</code></pre> , the first <pre><code>0</code></pre> being an int pointer casted to an int, and these are the same every time.  After execution, a 3 digit number string is returned/assigned to result e.g. \"817\".  But this number string can change and be different values, but I don't understand how this could be the case if the parameters passed to the function are all constant?   \n<pre><code>unsigned int __fastcall sub_CD16FABC(unsigned int result, int a2, int a3)\n{\n  int v3; // r7\n  signed int v4; // r3\n  bool v5; // zf\n  bool v6; // nf\n  unsigned __int8 v7; // vf\n  char v8; // r1\n  int v9; // r2\n  char v10; // r1\n  char v11; // lr\n  int v12; // r8\n  int v13; // r1\n  signed int v14; // r7\n  int v15; // r3\n  char v16; // [sp+2h] [bp-1Ah]\n  char v17; // [sp+3h] [bp-19h]\n\n  v3 = -a3 - (unsigned __int8)result;\n  v4 = (((result >> 8) ^ 0xFFFF00) & (result >> 8)) + a3;\n  v7 = __OFSUB__(a2, 3);\n  v5 = a2 == 3;\n  v6 = a2 - 3 < 0;\n  v8 = 0;\n  v9 = a3 + (unsigned __int8)__ROR4__(result, 16);\n  if ( !((unsigned __int8)(v6 ^ v7) | v5) )\n    v8 = 1;\n  v17 = v8;\n  v10 = result;\n  if ( result )\n    v10 = 1;\n  v16 = v10;\n  v11 = v4\n      - 10\n      * (((signed int)((unsigned __int64)(1717986919LL * v4) >> 32) >> 2)\n       + ((((unsigned __int64)(1717986919LL * v4) >> 32) & 0x80000000) != 0LL))\n      + 48;\n  v12 = v9 % 10 + 48;\n  v13 = -v3 % 10;\n  v14 = -1319380658;\n  while ( 1 )\n  {\n    v15 = v14 & 0x7FFFFFFF;\n    if ( (v14 & 0x7FFFFFFF) == 695688137 )\n      break;\n    if ( v15 == 1516370106 )\n    {\n      *(_BYTE *)(result + 1) = v11;\n      v14 = -1451795511;\n      *(_BYTE *)result = v13 + 48;\n      *(_BYTE *)(result + 2) = v12;\n      *(_BYTE *)(result + 3) = 0;\n    }\n    else if ( v15 == 828102990 )\n    {\n      v14 = -1451795511;\n      if ( v17 )\n        v14 = -631113542;\n      if ( !v16 )\n        v14 = -1451795511;\n    }\n  }\n  return result;\n}\n</code></pre>\n",
    "votes": "1",
    "answers": 0,
    "views": "186",
    "tags": [
        "ida",
        "disassembly",
        "assembly",
        "android",
        "libraries"
    ],
    "user": "Charlie Niekirk",
    "time": "Apr 8, 2019 at 17:03",
    "comments": [
        {
            "user": "sudhackar",
            "text": "Just to be complete, can you also post the asm for this function?\n",
            "time": null
        }
    ],
    "answers_data": []
}