{
    "title": "uncompyle6 gives success message but output is not readable",
    "link": "https://reverseengineering.stackexchange.com/questions/27997/uncompyle6-gives-success-message-but-output-is-not-readable",
    "content": "I am trying to use uncompyle6 to decompile a <pre><code>.pyc</code></pre> code. I even tried <pre><code>--verify</code></pre> option. It says\n\nSuccessfully decompiled file\n\nbut the output only contains strings like <pre><code>\\xe0\\xb3\\x0bh\\x90</code></pre>.\nWhat should I do?\n",
    "votes": "2",
    "answers": 1,
    "views": "321",
    "tags": [
        "python",
        "decompile"
    ],
    "user": "pythonde",
    "time": "Oct 29, 2021 at 7:33",
    "comments": [
        {
            "user": "MarianD",
            "text": "Try it with your own <pre><code>.pyc</code></pre> file (obtained from your own valid <pre><code>.py</code></pre> file) to be sure that the output in your question is not a consequence of the invalid <pre><code>.pyc</code></pre> file.\n",
            "time": null
        }
    ],
    "answers_data": [
        {
            "content": "Something is wrong with your input <pre><code>.pyc</code></pre> file — probably it isn't a valid Python bytecode file (obtained from a valid <pre><code>.py</code></pre> source file).\n<pre><code>\\xe0</code></pre>,  <pre><code>\\xb3</code></pre>, <pre><code>\\x0b</code></pre>, <pre><code>\\x90</code></pre> are hexadecimal codes for bytes which have no printable ASCII representation — mainly above <pre><code>0x7F</code></pre> (127 decimal), but also the control character \\x0b (VT - Vertical Tabulation).\n(The letter <pre><code>h</code></pre> after <pre><code>\\xb3</code></pre> is an ASCII character.)\nIt's standard Python output for non-ASCII characters in binary sequence types (bytes / bytearrays / memoryview):\n<pre><code>>>> bytes((33, 50, 65, 97))                  # ASCII chars\nb'!2Aa'\n</code></pre>\n<pre><code>>>> bytes((224, 179, 11, 144))               # non-ASCII (4 of \"your\" 5 bytes)\nb'\\xe0\\xb3\\x0b\\x90'\n</code></pre>\nThe same for your byte sequence with non-ASCII and ASCII codes\n(now for a change in hexadecimal):\n<pre><code>>>> bytes((0xe0, 0xb3, 0x0b, 0x68, 0x90))    # \"your\" byte sequence\nb'\\xe0\\xb3\\x0bh\\x90'\n</code></pre>\n",
            "votes": "2",
            "user": "MarianD",
            "time": "Jul 15, 2021 at 5:16",
            "is_accepted": false,
            "comments": []
        }
    ]
}