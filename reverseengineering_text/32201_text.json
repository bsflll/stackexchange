{
    "title": "How does IDA know the symbol names for classes and interfaces?",
    "link": "https://reverseengineering.stackexchange.com/questions/32201/how-does-ida-know-the-symbol-names-for-classes-and-interfaces",
    "content": "I am reversing a 32 bit library used by a Linux game (I am sure someone might recognize the engine used). I was messing around with cutter and when trying to compare it to IDA, which I have used in the past for this library, I noticed that I couldn't search for C++ classes the same way I do with IDA's Ctrl+L.\nIDA's output:\n\nIf I search in Cutter's \"Symbols\" tab:\n\nThere is also a \"VTable\" tab, which also looked interesting since it's basically what I am looking for, but although it shows about 1k VTables, none of them have any kind of name:\n",
    "votes": "0",
    "answers": 2,
    "views": "233",
    "tags": [
        "ida",
        "c++",
        "symbols",
        "vtables",
        "cutter"
    ],
    "user": "trxgnyp1",
    "time": "Aug 24, 2023 at 8:09",
    "comments": [],
    "answers_data": [
        {
            "content": "The class names come from RTTI descriptors embedded in the binary.\nConsider this simple example of retrieving the class of an object at runtime:\n<pre><code>#include <iostream>\n#include <typeinfo>\n\nclass Base {\npublic:\n    virtual void vvfunc() {}\n};\n\nusing namespace std;\nint main() {\n    Base* pb = new Base;\n    // class Base\n    cout << typeid(*pb).name() << endl;\n    // .PEAVBase@@\n    cout << typeid(pb).raw_name() << endl;   \n    delete pb;\n}\n\n</code></pre>\nThe second line of the output is a decorated class name - the symbol names used to name VTables are stored in the exact same format. Note that binaries can be stripped off type information at compile time.\nAn example IDA tool for structuring and parsing RTTI is ClassInformer plugin.\n",
            "votes": "0",
            "user": "mimak",
            "time": "Aug 24, 2023 at 11:49",
            "is_accepted": true,
            "comments": [
                {
                    "user": "trxgnyp1",
                    "text": "<span class=\"comment-copy\">I have used ClassInformer before, although not for this project, since it only works for windows binaries. While searching around some time ago I saw that since some version ago, IDA has integrated support for RTTI, and I am guessing that's why those names show up in Ctrl+L. I will mark this answer as solved because it contains useful information, but my original issue was that there is a \"Classes\" window in Cutter that displays all these classes.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "Turns out that Cutter actually provides RTTI information, but not under the \"Symbols\" window but under another \"Classes\" window that is hidden by default.\nYou can open it from Windows > Info > Classes.\n",
            "votes": "0",
            "user": "trxgnyp1",
            "time": "Aug 24, 2023 at 12:40",
            "is_accepted": false,
            "comments": []
        }
    ]
}