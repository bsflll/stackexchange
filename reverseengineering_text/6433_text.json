{
    "title": "Disassemble instruction with a variable as an offset",
    "link": "https://reverseengineering.stackexchange.com/questions/6433/disassemble-instruction-with-a-variable-as-an-offset",
    "content": "I am looking to disassemble an instruction at an address. I know that there are many instructions that can accomplish this such as <pre><code>idc.GetDisasm()</code></pre>, <pre><code>idc.GetDisasmEx()</code></pre>, <pre><code>idaapi.generate_disassembly()</code></pre>, etc.\nWhen I disassemble a line that has a variable in it, the variable appears in the disassembly. ie <pre><code>38 81 00 38</code></pre> disassembles as <pre><code>addi r4, r1, 0x80+var_48</code></pre> instead of <pre><code>addi r4, r1, 0x38</code></pre>.\nIs there any way to disassemble this in the latter form ?\n",
    "votes": "3",
    "answers": 2,
    "views": "691",
    "tags": [
        "disassembly",
        "idapython"
    ],
    "user": "Bambu",
    "time": "Oct 13, 2014 at 8:23",
    "comments": [],
    "answers_data": [
        {
            "content": "You'll have to set the operand type, there are various functions to accomplish that. OpHex is most likely what you want to use.\n",
            "votes": "1",
            "user": "Guntram Blohm",
            "time": "Oct 12, 2014 at 20:26",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Bambu",
                    "text": "<span class=\"comment-copy\">Thanks for the feedback. This could work if it is called for each instruction. However, two problems arise with it. A) I would like to restore it to the way it was prior to converting it with OpHex. B) OpHex/OpOff etc.. does not convert the operand of a branch.</span>",
                    "time": null
                }
            ]
        },
        {
            "content": "not idapython but idc \n<pre><code>auto i;\n\nfor (  i = MinEA() ; i < MaxEA() ; i = NextHead(i, MaxEA()) )\n{\n    OpHex(i,-1);\n}\n</code></pre>\ntake a look here for bit more details\nConvert [arg8+foo-blah+28] to [ebp+38]\n",
            "votes": "1",
            "user": "Community",
            "time": "May 23, 2017 at 12:37",
            "is_accepted": false,
            "comments": []
        }
    ]
}