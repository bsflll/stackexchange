{
    "title": "How is sprintf() identified by IDApro? [closed]",
    "link": "https://reverseengineering.stackexchange.com/questions/21356/how-is-sprintf-identified-by-idapro",
    "content": "Closed. This question needs details or clarity. It is not currently accepting answers.\n                                \n                            \n\n\n\n\n\n\n\n\n\n\n\nWant to improve this question? Add details and clarify the problem by editing this post.\n\n\nClosed 5 years ago.\n\n\n\n\n\n\n\n                        Improve this question\n                    \n\n\n\n<pre><code>#include<stdio.h>\nint main()\n{\n    char buffer[50];\n    int a = 10, b = 20, c;\n    c = a + b;\n    sprintf(buffer, \"Sum of %d and %d is %d\", a, b, c);\n\n    // The string \"sum of 10 and 20 is 30\" is stored\n    // into buffer instead of printing on stdout\n    printf(\"%s\", buffer);\n\n    return 0;\n}\n</code></pre>\nHow is this code disassembled by IDApro?\n",
    "votes": "1",
    "answers": 0,
    "views": "217",
    "tags": [
        "ida",
        "disassembly"
    ],
    "user": "ManiKrishna",
    "time": "5 years ago",
    "comments": [
        {
            "user": "Rup",
            "text": "Do you mean \"what does this look like when compiled and disassembled by IDA\" or \"How does IDA identify that the function I'm calling is sprintf\"? For the first case, exactly what you get may depend on the optimization level - why not try it yourself? For the second, it has a dictionary of standard function signatures.\n",
            "time": null
        },
        {
            "user": "Igor Skochinsky",
            "text": "please clarify the question so a proper answer can be posted\n",
            "time": null
        }
    ],
    "answers_data": []
}