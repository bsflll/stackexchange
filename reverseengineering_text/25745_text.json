{
    "title": "Using angr/radare2 to estimate values given chunks of assembly",
    "link": "https://reverseengineering.stackexchange.com/questions/25745/using-angr-radare2-to-estimate-values-given-chunks-of-assembly",
    "content": "I'm currently using radare2 in order to construct a simple CFG, each block/node in that graph is composed of one or more assembly instructions, I wish to estimate the value of specific register or stack position as best as I can.\nFew examples:\nExample 1:\n<pre><code>xor rax, rax\ninc rax\n; Given these instructions, solve(rax) => 1\n</code></pre>\nExample 2:\n<pre><code>mov rcx, 3\nmov rbx, rcx\nmov rax, rbx\n; Given the instructions above, solve(rax) => 3\n</code></pre>\nExample 3:\n<pre><code>mov rbx, rcx\nmov rax, rbx\n; Given the instructions above, solve(rax) => Unknown\n</code></pre>\nExample 4:\n<pre><code>mov rdx, 1\nshl rdx, 2\nadd rdx, 3\nmov [rsp], rdx\n; Given the instructions above, solve([rsp]) => 7\n</code></pre>\nI'm looking for a simple Python example to start with, which either takes opcodes directly or and address and evaluates/solve for specific register/stack position.\nI've already looked into some symbolic execution examples, which looks like what I need, but I'm pretty new to this so a simple working example would really help.\n",
    "votes": "2",
    "answers": 1,
    "views": "231",
    "tags": [
        "radare2",
        "python",
        "angr"
    ],
    "user": "Aviel Fedida",
    "time": "Aug 25, 2020 at 19:23",
    "comments": [],
    "answers_data": [
        {
            "content": "Here is a small angr script that can do so:\n<pre><code>proj = angr.Project('...path...')\nstate = proj.factory.blank_state(addr=0x0804EA9E)\nsimulation = proj.factory.simgr(state)\nret = simulation.explore(find=0x0804EAA3)\nprint(ret.found[0].regs.ecx)\n</code></pre>\nBetween the addresses <pre><code>0x0804EA9E</code></pre> to <pre><code>0x0804EAA3</code></pre> I've got <pre><code>mov ecx, 0Ah</code></pre> so I get: <pre><code><BV32 0xa></code></pre> from the print.\nI know its not much, but as I've said, I'm new. And hopefully this simple script will help others.\nReally good resources to start with:\n\nhttps://docs.angr.io/core-concepts/states#state-presets\nhttps://blog.notso.pro/2019-03-20-angr-introduction-part0/\n",
            "votes": "2",
            "user": "Aviel Fedida",
            "time": "Aug 26, 2020 at 6:22",
            "is_accepted": true,
            "comments": []
        }
    ]
}