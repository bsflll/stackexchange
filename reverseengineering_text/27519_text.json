{
    "title": "Local KD -- can't access physical address 0xFFFFFFF0 but you can with RwEverything",
    "link": "https://reverseengineering.stackexchange.com/questions/27519/local-kd-cant-access-physical-address-0xfffffff0-but-you-can-with-rweverythi",
    "content": "I've never been able to access 0xf0000000 range using <pre><code>!db</code></pre> on local debug, and I've tried <pre><code>!db -m 00000000`fffffff0</code></pre> and <pre><code>!db [uc] 00000000`fffffff0</code></pre>. I only get <pre><code>Physical memory read at fffffff0 failed</code></pre>. It works fine on RwEverything. Any ideas?\n",
    "votes": "1",
    "answers": 0,
    "views": "131",
    "tags": [
        "windbg",
        "address"
    ],
    "user": "Lewis Kelsey",
    "time": "Apr 21, 2021 at 11:56",
    "comments": [
        {
            "user": "0xC0000022L",
            "text": "So you have a KD session to a target computer when you do that? For example I get the same with just <pre><code>-m</code></pre> but the <pre><code>[uc]</code></pre> works perfectly fine for me. Using a kdnet connection to a Windows 10 VM.\n",
            "time": null
        },
        {
            "user": "Lewis Kelsey",
            "text": "@0xC0000022L I have a WinDbg connection to a VirtualBox VM over a pipe connected to a virtual COM1 port, and I also tested all variations of the commands using <pre><code>kd -kl</code></pre> on my local machine, neither work. On my local machine however, RwEverything works fine for this purpose -- but I like to understand why it's not working\n",
            "time": null
        },
        {
            "user": "Lewis Kelsey",
            "text": "@0xC0000022L That's weird, it worked on remote KD but not remote WinDbg\n",
            "time": null
        },
        {
            "user": "0xC0000022L",
            "text": "But your target does have 4 GiB of \"physical\" memory, right?\n",
            "time": null
        },
        {
            "user": "Lewis Kelsey",
            "text": "Yes it has 8GiB, but this range maps to virtual flash so that's irrelevant. It does work on WinDbg, I made a mistake (I did <pre><code>!db [uc] 00000000`fffffff0</code></pre> which didn't work at that time because I was on bootmgr (so it couldnt read past 4GiB). I tried it again on WinDbg with <pre><code>!db [uc] 00000000`ffffff00</code></pre> and it worked). This however does not work on <pre><code>kd -kl</code></pre> no matter what, which is a shame because I'm more interested in my own hardware -- RwEverything is what I have to use\n",
            "time": null
        }
    ],
    "answers_data": []
}