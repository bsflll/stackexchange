{
    "title": "What is __alloca_probe_16 and what does it do?",
    "link": "https://reverseengineering.stackexchange.com/questions/10759/what-is-alloca-probe-16-and-what-does-it-do",
    "content": "I'm reverse engineering some windows application. I came accross with this function that IDA recognized: \n<pre><code>call __alloca_probe_16\n</code></pre>\nI'm unable to find any documentation/reference on this function except here. The poster suggests that <pre><code>__alloca_probe</code></pre> is a support routine for the API <pre><code>_alloca()</code></pre> without providing any reference.\nI'm just wondering if anyone knows what this function does and where I can find reference to undocumented/internal(?) APIs like this in the future.\n",
    "votes": "4",
    "answers": 1,
    "views": "7k",
    "tags": [
        "ida",
        "assembly"
    ],
    "user": "vincentleest",
    "time": "Aug 31, 2015 at 14:57",
    "comments": [],
    "answers_data": [
        {
            "content": "This funcion enures that an <pre><code>alloca()</code></pre> call returns  a pointer aligned to 16 bytes boundary. You can see the comments in <pre><code>alloca16.asm</code></pre> in Visual C++' CRT sources:\n<pre><code>; _alloca_probe_16, _alloca_probe_8 - align allocation to 16/8 byte boundary\n;\n;Purpose:\n;       Adjust allocation size so the ESP returned from chkstk will be aligned\n;       to 16/8 bit boundary. Call chkstk to do the real allocation.\n;Entry:\n;       EAX = size of local frame\n;\n;Exit:\n;       Adjusted EAX.\n;\n;Uses:\n;       EAX\n</code></pre>\nNB: this comment seems to be stale; the current implementation tail-calls <pre><code>_chkstk</code></pre>, so the allocation (ESP adjustment) happens immediately.\n",
            "votes": "9",
            "user": "Igor Skochinsky",
            "time": "Aug 31, 2015 at 15:12",
            "is_accepted": true,
            "comments": []
        }
    ]
}