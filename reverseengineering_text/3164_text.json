{
    "title": "Frame grabber reverse engineering",
    "link": "https://reverseengineering.stackexchange.com/questions/3164/frame-grabber-reverse-engineering",
    "content": "I have bought a USB frame grabber (Hauppauge WinTV HVR 1900) for a personal research project. A SDK exists, but unfortunately the company does not seem too keen on distributing it. I have to extract frames from a video stream in my software, and although it works perfectly with my webcam stream, it does not work with the frame grabber (that works perfectly with the bundled soft).\nThe frame grabber has an integrated MPEG-2 encoder, so the output stream should be MPEG-2, but since it does not work, I guess it is not standard. VLC is able to read the stream, though. Since it seems I will have to reverse engineer to get my soft to read the output stream, and as I have never done that kind of thing, could someone please give me a hint on how to proceed about that? I mostly have experience with the python language.\n",
    "votes": "3",
    "answers": 1,
    "views": "218",
    "tags": [
        "hardware"
    ],
    "user": "Raoul",
    "time": "Dec 11, 2013 at 11:57",
    "comments": [],
    "answers_data": [
        {
            "content": "VLC is open source, so if it can indeed read the stream, no reverse engineering required.\n",
            "votes": "3",
            "user": "Jason Geffner",
            "time": "Dec 11, 2013 at 0:53",
            "is_accepted": false,
            "comments": [
                {
                    "user": "Raoul",
                    "text": "<span class=\"comment-copy\">Thank you for your answer. So basically, that means I should use VLC as a basis for my own soft? Excuse my lack of experience, but I am a beginner in that field...</span>",
                    "time": null
                },
                {
                    "user": "Jason Geffner",
                    "text": "<span class=\"comment-copy\">My understanding of your post is that you're trying to figure out the format of the stream and you saw that VLC handles the format. You can debug the data-flow through VLC to see how VLC handles the format, allowing you to understand the format itself.</span>",
                    "time": null
                }
            ]
        }
    ]
}