{
  "title": "Reassembler toolchain",
  "link": "https://reverseengineering.stackexchange.com/questions/6186/reassembler-toolchain",
  "content": "I'm looking for tools to:\n\nWhat disassembler and assembler combo allows me to do this ? \n\nI'm currently using Visual Studio 2013 to inject C++ code which works fine but being able to edit the original assembly code without having to translate it to C++ first would be a nice improvement.\n\n",
  "votes": "1",
  "answers": 2,
  "views": "246",
  "tags": [
    "windows",
    "x86",
    "c++",
    "reassembly"
  ],
  "user": "XTF",
  "time": "Sep 6, 2014 at 17:20",
  "comments": [],
  "answers_data": [
    {
      "content": "If you're using Visual Studio 2013, you don't need to translate the assembly code into C++. Just use __asm.\n\n",
      "votes": "1",
      "user": "Jason Geffner",
      "time": "Sep 6, 2014 at 16:12",
      "is_accepted": false,
      "comments": [
        {
          "user": "XTF",
          "text": "Right, but I'd still need something to disassemble parts of the original binary into something that can be reassembled with __asm.",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "Your original question makes it sound like you already have the assembly code. You may want to reword your question to make it more clear.",
          "time": null
        },
        {
          "user": "JamalS",
          "text": "Just FYI, the __asm feature does not work for 64-Bit projects; you need to create a separate .asm and compile with the MS macro-assembler.",
          "time": null
        },
        {
          "user": "XTF",
          "text": "It's about a x86 game (Red Alert 2), so that's not an issue.",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "It sounds like you'd be better off hooking the target function than going through the rigmarole you outlined above. Check out research.microsoft.com/en-us/projects/detours",
          "time": null
        }
      ]
    },
    {
      "content": "disassembling the whole thing to something reassembleable is a huge feat, with high potential for errors if theres no reloc information or other things to 'assist' the disassembly.. i dont know of anything that will do this entirely.. there were old programs like sourcer etc in the dos days, but even then they got close, but not perfect.. what you're looking for i dont think exists.. yet\n\n",
      "votes": "1",
      "user": "evlncrn8",
      "time": "Sep 6, 2014 at 16:25",
      "is_accepted": false,
      "comments": [
        {
          "user": "XTF",
          "text": "I'd like to do it one (or a few) functions at a time, not the whole executable at once.",
          "time": null
        },
        {
          "user": "evlncrn8",
          "text": "hmm well the ida is probably good for that, i've done it myself, but it does require careful analysis of the code, the data blocks it access and other functions it calls.. i hope your target function is small :)",
          "time": null
        }
      ]
    }
  ]
}