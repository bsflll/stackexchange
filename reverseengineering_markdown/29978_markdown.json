{
  "title": "Create instance of iOS class that contains a . with frida",
  "link": "https://reverseengineering.stackexchange.com/questions/29978/create-instance-of-ios-class-that-contains-a-with-frida",
  "content": "I am trying to create an instance of a class of an iOS app using Frida.\n\nIn the past I have successfully done this using a command such as:\n\n```\nvar instance = ObjC.chooseSync(ObjC.classes.TestClass)[0];\n\n```\nHowever, in this instance, the class that I would like to create an instance of has a . in the name so if I try the same command as above I understandably get an error:\n\n```\nvar instance = ObjC.chooseSync(ObjC.classes.Test.Class)[0];\nSyntaxError: expecting field name\n\n```\nI had identified the class from the output of:\n\n```\nObject.keys(ObjC.classes).filter(function(m){ return m.toLowerCase().includes(\"test\") });\n\n```\nThe output of this lists a number of classes, all of which are either mangled Swift names, or have a . in them so I'm not sure if I simply don't understood a concept here about how Frida handles class names in a Swift and Objective-C app, or there is something I've missed in attempting to create the instance.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "648",
  "tags": [
    "ios",
    "frida",
    "hooking"
  ],
  "user": "Jon",
  "time": "Feb 3, 2022 at 23:24",
  "comments": [],
  "answers_data": [
    {
      "content": "ObjC.classes.TestClass is just a shorthand in JavaScript for\nObjC.classes['TestClass'].\n\nTherefore you should be able to access an Test.Class instance this way:\n\n```\nvar instance = ObjC.chooseSync(ObjC.classes['Test.Class'])[0];\n\n```\n",
      "votes": "2",
      "user": "Robert",
      "time": "Feb 4, 2022 at 8:18",
      "is_accepted": true,
      "comments": [
        {
          "user": "Jon",
          "text": "Thank you, that was exactly what I needed.  I had been overthinking things and annoyingly had tried something similar to your solution but with additional () enclosing the [].",
          "time": null
        }
      ]
    }
  ]
}