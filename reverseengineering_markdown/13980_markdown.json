{
  "title": "Comparing two UEFI applications?",
  "link": "https://reverseengineering.stackexchange.com/questions/13980/comparing-two-uefi-applications",
  "content": "I have two x86-64 UEFI applications original.efi and patched.efi. I want to find out what have been changed in patched.efi and what these changes do.\n\nI have tried to use the Radare2 framework to solve this task:\n\n$ radiff2 original.efi patched.efi\n\n```\nBuffer truncated to 283136 bytes (1024 not compared)\n0x000000d8 e129 => d52e 0x000000d8\n0x000099d0 35 => 00 0x000099d0\n0x0000eefb 3637 => 3730 0x0000eefb\n0x0000ef03 3031323538 => 3330353136 0x0000ef03\n\n```\nI have then opened two windows side by side and run radare2 on each file:\n\n$ radare2 original.efi\n\n```\n[0x0000a66c] aaa\n[0x0000a66c] s 0x000000d8\n[0x000000d8] pd 10\n\n```\n$ radare2 patched.efi\n\n```\n[0x0000a66c] aaa\n[0x0000a66c] s 0x000000d8\n[0x000000d8] pd 10\n\n```\nIn this case there is a difference at the address, but it looks like there is something wrong:\n\n```\n0x000000d8    d5           invalid            |     0x000000d8    e129         loope 0x103\n0x000000d9    2e05000a0000 add eax, 0xa00     |     0x000000da    05000a0000   add eax, 0xa00\n\n```\nHowever, in many cases I have found that even though radiff2 reports a difference at a memory location, when I try to compare like described above, no differences are found and the lines are identical.\n\nCan anyone explain if I'm doing anything wrong or maybe a better way to do this?\n\nUnfortunately, I do not have access to a Windows system, so I can only use tools available for Linux.\n\n",
  "votes": "3",
  "answers": 0,
  "views": "260",
  "tags": [
    "disassembly",
    "radare2",
    "patch-reversing"
  ],
  "user": "NSwroy",
  "time": "Nov 18, 2016 at 15:35",
  "comments": [
    {
      "user": "HamZa",
      "text": "can you provide the binaries?",
      "time": null
    }
  ],
  "answers_data": []
}