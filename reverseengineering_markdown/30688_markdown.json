{
  "title": "​Why output is disabled in console when using int3?",
  "link": "https://reverseengineering.stackexchange.com/questions/30688/why-output-is-disabled-in-console-when-using-int3",
  "content": "​I am using NASM(2.15) assembler to generate code. But I am unable to figure out why it does not show output in the console(windows system) when using int3 - software breakpoint, it only shows output in the debugger console while debugging.\n\ncode:\n\n```\nglobal _main\nextern _printf\n\nsection .text\n_main:\n    int3             ; [*] Comment/Uncomment this to enable/disable output\n    push dword[esp+4]    \n    push fmt_d\n    call _printf\n    add esp, 8\n    xor eax, eax\n    ret\n\nsection .data\nfmt_d: db 'argc = %d', 10, 0\n\n```\nHowever, when int3 is disabled, we get output as usual in both the consoles(windows system, debugger console).\n\nWhat is special about the int3 command that inhibits the printf's output capability?\n\nI assembled and linked both cases once int3 enabled and then disabled into pf_disable.exe, pf_enable.exe using NASM & MinGW 4.8.2-gcc.exe.\nThen I matched the assembly output(.asm) generated by IDA for 2 cases, but there were only 3 differences,\n\n.obj files for both the cases are almost same except, one has int3 while other hasn't in _main function.\n\nWith above differences, I understand it has to do something more than just int3 but I am unable to figure out.\n\n",
  "votes": "2",
  "answers": 0,
  "views": "71",
  "tags": [
    "assembly",
    "breakpoint",
    "exception",
    "nasm"
  ],
  "user": "Viktor",
  "time": "Jul 23, 2022 at 14:36",
  "comments": [
    {
      "user": "w s",
      "text": "Isn't  int3 a breakpoint? If I understand this correctly it does not disable the output, it just suspends.",
      "time": null
    },
    {
      "user": "Viktor",
      "text": "@ws Indeed it is breakpoint a software breakpoint. But if we can get output in debugger console then why not in default console.",
      "time": null
    },
    {
      "user": "0xC0000022L",
      "text": "Uhm, so you have a debugger attached and a proper debugger loop consuming those breakpoints? Otherwise the int 3 is merely going to end up ending your program, I reckon. Even if you placed the printf before the int 3, chances are that the output buffer doesn't get flushed before the breakpoint either.",
      "time": null
    }
  ],
  "answers_data": []
}