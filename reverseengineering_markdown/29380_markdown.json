{
  "title": "IDAPython: Is it possible to determine whether an instruction operand is a constant rather than a variable?",
  "link": "https://reverseengineering.stackexchange.com/questions/29380/idapython-is-it-possible-to-determine-whether-an-instruction-operand-is-a-const",
  "content": "Here is my use case:\n\nI am trying to create a script that finds all instances of a particular instruction (in this case wrmsr) and traces back to find out whether the operands for the instruction are hard-coded literals or variables that are set at runtime. This is meant to help me detect a certain flavor of vulnerable driver.\n\nDoes IDAPython have a way to query instruction operands to distinguish between literals and variables? How would I do this?\n\n",
  "votes": "1",
  "answers": 2,
  "views": "586",
  "tags": [
    "idapython"
  ],
  "user": "MrSynAckSter",
  "time": "Dec 16, 2021 at 9:33",
  "comments": [],
  "answers_data": [
    {
      "content": "idc.get_operand_type() is a concise way to do this.\n\ne.g.\n\n```\nif idc.get_operand_type(ea, 1) == idaapi.o_reg:\n    print(\"that's a register\")\n\n```\nThe operand types are all here: https://hex-rays.com/products/ida/support/sdkdoc/group__o__.html\n\n",
      "votes": "1",
      "user": "thejoelpatrol",
      "time": "Nov 8, 2023 at 21:46",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "I believe you can look at the type of the operand with something like this (ideally with some more error and type checking):\n\n```\n  insn = idaapi.insn_t()\n  idaapi.decode_insn(insn, ea)\n  if insn.ops[0].type == ida_ua.o_imm:\n      print(\"This is the constant value \", insn.ops[0])\n\n```\nThe possible values for op_t.type are here: IDA SDK: Operand types.\n\n",
      "votes": "1",
      "user": "MarianD",
      "time": "Oct 30, 2021 at 13:19",
      "is_accepted": false,
      "comments": []
    }
  ]
}