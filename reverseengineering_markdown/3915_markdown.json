{
  "title": "How does Ollydbg obtain the memory map (alt+m)? [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/3915/how-does-ollydbg-obtain-the-memory-map-altm",
  "content": "I've been looking for any Windows functions to view or dump memory, or the process to do this manually. I can not find info on this anywhere online.\n\nHow would I get a dump of a process's memory like the one in Olly's memory window?\n\nEdit for clarification:\n\nI wanted to be able to retrieve an address's base page address. The memory map was the best relation I had to this, as it gives page info such as size, starting address, permissions, etc. VirtualQueryEx() solved the problem.\n\nI ended up iterating through the pages until I found one in which my target address fell.\n\nI tend to ask for what I think would be the solution rather than laying out my problem and taking suggestions. \n\nThank you all for the help.\n\n```\n// Iterate through pages\nfor(base = NULL; \n    WINDOWS::VirtualQuery(base, info, sizeof(*info)) == sizeof(*info); \n    base += info->RegionSize) {\n\n    if(p > base && p < base + info->RegionSize) {\n        found = true;\n        break;\n    }\n}\n\n```\n",
  "votes": "4",
  "answers": 2,
  "views": "2k",
  "tags": [
    "windows",
    "memory",
    "dumping"
  ],
  "user": "douggard",
  "time": "11 years ago",
  "comments": [
    {
      "user": "osvein",
      "text": "\"I tend to ask for what I think would be the solution rather than laying out my problem and taking suggestions\". The XY problem",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "VirtualQueryEx() can be used to scan through the user-mode address space of a process to enumerate each memory allocation, and PE headers of images in memory can be parsed to determine which memory blocks are associated with which PE sections. PE headers for DLLs also contain the DLLs' names.\n\n",
      "votes": "7",
      "user": "Jason Geffner",
      "time": "Mar 19, 2014 at 18:24",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "To dump memory to a file, see the DbgHelp MiniDumpWriteDump function. You'll get a snapshot of the memory as a dump file (.DMP) which you can then analyze with various tools or by yourself using the DbgEng debugging engine.\n\n",
      "votes": "1",
      "user": "Thomas Weller",
      "time": "Mar 19, 2014 at 19:49",
      "is_accepted": false,
      "comments": [
        {
          "user": "Thomas Weller",
          "text": "If the downvoter could explain his vote I could learn not posting bad answers in the future. Thanks.",
          "time": null
        },
        {
          "user": "Jonathon Reinhart",
          "text": "(Wasn't me) The OP's question was somewhat unclear; his title asked specifically about the memory map, but then he went on to ask generic questions about how to \"view or dump memory\". I'd say your answer addresses the latter part, but the real question was about the memory map, which Jason's answer would address.  +1 for providing another approach.",
          "time": null
        }
      ]
    }
  ]
}