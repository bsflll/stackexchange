{
  "title": "RE on firmware images that seem to use weak encryption/obfuscation. Robot vacuum",
  "link": "https://reverseengineering.stackexchange.com/questions/27756/re-on-firmware-images-that-seem-to-use-weak-encryption-obfuscation-robot-vacuum",
  "content": "I have been playing with some robot vacuums that utilize very basic navigation, and I am wanting to play around with my own provisioning along with adding a Rpi to augment features.\nThese vacuums are using the STM32F0 MCU, and when using a debugger to dump the firmware it turns out they are all using RDP1.\n\nThrough some digging, I found a public S3 bucket with various firmware images along with other resources.\nOddly, the newer generation vacuums referenced in the bucket have their firmware images without encryption/obfuscation. The binaries for the vacuums I am interested in all have a type of encryption/obfuscation that seems very weak. The thing is though, no matter how I try attacking it, I do not seem to get my rewards.\n\nI say it is weak because there are decent size segments within the images that have 136byte strings that will repeat anywhere from 15 to 236 times depending on the image type. These repeating parts only repeat the same segment consecutively, and the string dose not occur again outside of the repeated segment. Some  of the smaller firmware images only have 2 blocks of repeating segments, other larger images may have up to six that I have seen.\nHere is an example of one of the images.\nRobot Vacuum Firmware\n\nThe first WORD is 0xEAAF4339, and is common to all of the images.\nThe second WORD seems to be a file type flag.\nThe third WORD is almost always equal to the image size minus 24 bytes.\nThe fourth WORD is always padding.\nThe fifth WORD is always 0x0403020F.\nStarting at 0x4418 is the first segment of repeating 136 bytes.\n\n",
  "votes": "1",
  "answers": 0,
  "views": "67",
  "tags": [
    "assembly",
    "decryption",
    "deobfuscation",
    "xor"
  ],
  "user": "AltxF4",
  "time": "May 31, 2021 at 7:55",
  "comments": [
    {
      "user": "AltxF4",
      "text": "The more I am diving deeper into this, the more I think this might be a poorly implemented custom AES encryption. I say custom since the repeating alignment is happening at 17x8 bytes. Why is the alignment here? could it be 64bit DES? I do have a decent number of different binaries that use this encryption method among them all. One of the binary types has significantly more repeating 136 byte sections than the rest. Maybe I should try to crack these ones, even though they are not my target, as it may reveal the common method for them all.",
      "time": null
    },
    {
      "user": "AltxF4",
      "text": "here are the links to the files I mentioned above. github.com/oAltxF4o/Snark_Iun_Robot_Vacuum/raw/master/… github.com/oAltxF4o/Snark_Iun_Robot_Vacuum/raw/master/… github.com/oAltxF4o/Snark_Iun_Robot_Vacuum/raw/master/…",
      "time": null
    }
  ],
  "answers_data": []
}