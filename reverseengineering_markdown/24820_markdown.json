{
  "title": "Malware attempting to move a value into $zero in MIPS?",
  "link": "https://reverseengineering.stackexchange.com/questions/24820/malware-attempting-to-move-a-value-into-zero-in-mips",
  "content": "Recently I have been trying to reverse engineer an IoT malware called NyaDrop using IDA. There I came across this mysterious assignment a few times.\naddiu   $zero, 0xA\nas well as  move    $at, $at\n\nBoth instructions seem to be just redundant but I feel like they are there for a reason. Does anyone have any idea what that reason is? My guess is that is trying to avoid an emulated MIPS perhaps? Because it would error on an emulated MIPS but will just be discarded in a real one. Not sure, however. \n\nHere is a snippet from the disassembly of nyaDrop that is particularly confusing.\n\n```\naddiu   $zero, 0xA\nmove    $at, $at\nmove    $at, $at\n//end of malware\n\n\n```\n",
  "votes": "0",
  "answers": 1,
  "views": "166",
  "tags": [
    "ida",
    "disassembly",
    "malware",
    "mips"
  ],
  "user": "reallyunknown",
  "time": "Apr 25, 2020 at 4:05",
  "comments": [
    {
      "user": "w s",
      "text": "Are you sure that it is code and not data ?",
      "time": null
    },
    {
      "user": "reallyunknown",
      "text": "Well it does try to execute it, so it is probably code. Moreover, the malware starts off with addiu   $zero, 0xA.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "You can write values to the $zero register, it will simply remain zero.\n\nThese 3 instructions are NOPs.\n\n",
      "votes": "1",
      "user": "Yotamz",
      "time": "Apr 26, 2020 at 7:46",
      "is_accepted": false,
      "comments": []
    }
  ]
}