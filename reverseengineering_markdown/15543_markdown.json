{
  "title": "Disassembling code with Hopper",
  "link": "https://reverseengineering.stackexchange.com/questions/15543/disassembling-code-with-hopper",
  "content": "I'm trying to figure out what this code is doing. \nThe first thing that I don't understand is the condition that tests if arg0's value is 0x2. I read that 0x2 in ASCII is STX (Start of text).\nHere's the code.\n\n```\nvoid main(int arg0, int arg1) {\n    var_30 = arg1;\n    var_14 = 0x7a;\n    var_10 = 0x0;\n    if (LODWORD(arg0) == 0x2) goto loc_4006f3;\n\nloc_4006df:\n    rax = puts(\"Wrong\");\n    rax = exit(0x1);\n    return;\n\nloc_4006f3:\n    LODWORD(rax) = 0x0;\n    var_8 = sign_extend_32(LODWORD(time(0x0)));\n    var_14 = 0x22334455;\n    goto loc_40075c;\n\nloc_40075c:\n    if (var_14 > 0x10000000) goto loc_400711;\n\nloc_400765:\n    if (LODWORD(atoi(*(var_30 + 0x8))) == var_14) {\n        rax = puts(\"Congratulations\");\n    }\n    else {\n        rax = puts(\"Wrong\");\n    }\n    return;\n\nloc_400711:\n    var_14 = LODWORD(SeriousHash(LODWORD(var_14)));\n    LODWORD(rax) = 0x0;\n    rax = sleep(0x15180);\n    LODWORD(rax) = 0x0;\n    if (var_8 + 0x15180 <= sign_extend_32(LODWORD(time(0x0)))) goto loc_40075c;\n\nloc_400752:\n    rax = exit(0x2);\n    return;\n}\n\n```\n",
  "votes": "-1",
  "answers": 1,
  "views": "656",
  "tags": [
    "disassembly",
    "binary-analysis",
    "decompilation",
    "gdb",
    "hopper"
  ],
  "user": "user171635",
  "time": "Jun 13, 2017 at 17:44",
  "comments": [],
  "answers_data": [
    {
      "content": "It might be easier to read the actual disassembly rather than an attempted decompilation. \n\narg0 is really argc for the main function. So, it is comparing argc to 2 and exiting if it is not equal; i.e. there should be one argument passed to the executable (keep in mind there is always one implicit argument which is the executable name itself)\n\n",
      "votes": "1",
      "user": "cimarron",
      "time": "Jun 13, 2017 at 17:27",
      "is_accepted": false,
      "comments": []
    }
  ]
}