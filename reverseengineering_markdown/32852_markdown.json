{
  "title": "Location of CoreMedia framework",
  "link": "https://reverseengineering.stackexchange.com/questions/32852/location-of-coremedia-framework",
  "content": "I've been attempting to dive into mediaserverd which runs on iOS.  Pulling the binary and running otool -L on it reveals, unsurprisingly, that it's linked against /System/Library/Frameworks/CoreMedia.framework/CoreMedia.  However, that directory on the phone doesn't have any file called CoreMedia.  In fact, all it has are two .plist files and some text file called CodeResources.\n\nWhere is the actual Mach-O file for the CoreMedia framework?\n\n",
  "votes": "0",
  "answers": 1,
  "views": "52",
  "tags": [
    "ios"
  ],
  "user": "August Vrubel",
  "time": "Mar 30, 2024 at 3:43",
  "comments": [
    {
      "user": "Yotamz",
      "text": "Welcome to RE.SE. An iOS/MacOS \"framework\" is a directory. Code objects are expected to be found in a subdirectory named contents/macOS under the .framework directory (the parent of the one you are in)",
      "time": null
    },
    {
      "user": "August Vrubel",
      "text": "find /System/Library -type d -name contents yielded no results.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Instead of keeping the builtin frameworks directly in the file system, iOS and macOS keep them bundled in a shared cache.  You can find this cache on the phone at /System//Library/Caches/com.apple.dyld/dyld_shared_cache_arm64.  After pulling the file to your computer, you can use a tool like dyld-shared-cache-extractor:\n\n```\ndyld-shared-cache-extractor dyld_shared_cache_arm64 .\n\n```\n",
      "votes": "0",
      "user": "August Vrubel",
      "time": "Apr 2, 2024 at 16:23",
      "is_accepted": true,
      "comments": []
    }
  ]
}