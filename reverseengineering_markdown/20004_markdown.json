{
  "title": "OllyDbg vs x64dbg - Does OllyDbg have any particular advantage over x64dbg?",
  "link": "https://reverseengineering.stackexchange.com/questions/20004/ollydbg-vs-x64dbg-does-ollydbg-have-any-particular-advantage-over-x64dbg",
  "content": "OllyDbg had been nice in the past, but it stopped development a decade ago, x32dbg/x64dbg era came.\nHowever, some people still use OllyDbg. Are there any reasons to use the old OllyDbg still? Doesn't x32dbg/64dbg covers all needed things?\n\n",
  "votes": "24",
  "answers": 4,
  "views": "26k",
  "tags": [
    "ollydbg",
    "debuggers",
    "x64dbg"
  ],
  "user": "T.Todua",
  "time": "Jul 25, 2021 at 7:58",
  "comments": [],
  "answers_data": [
    {
      "content": "Debugging software with a combination of managed and unmanaged code:\n\nOllydbg debugs and runs managed code very well (of course in this case it only runs as a native debugger and not like DnSpy which shows the .Net functions and code perfectly).\n\nThere are times when, if the malware makes a lot of calls to unmanaged code (native code DLLs) it is far more convenient to use a debugger like OLLY to track down the transition to the native DLLs.\n\nThis is not possible in x32dbg/x64dbg at all and it crashes when dealing with managed code.\n\nCompatibility with 32-bit systems:\n\nScyllaHide for x32dbg is not very good and fails on Windows 7 and Windows 10 (32-bit). (It absolutely does not work on Windows XP SP3 and keeps giving us the UNKNOWN SYSCALL error - So I am not even bothering to mention Win XP in this context). \n\nI see that there is an open issue on GitHub regarding this (for 32-bit Windows 7 and Windows 10), but the only answer there seems to advise that we should migrate to 64-bit Windows. \n\nWhile this is true, there are many times where we need to work on 32-bit systems for a variety of reasons.\n\nWithout a good system in place to hide the debugger from the anti-debugg calls of most malware, the debugger is basically of very little use.\n\nScripting Engines:\n\nThe plugins for scripting on x32dbg/x64dbg are very slow when compared to the Olly Script engine. So is the python scripting.\n\nPatching Issues:\nIn my experience, the patching using x32dbg/x64dbg is very buggy when dealing with some executable and I find that I need to revert back to Olly to ensure that the executable gets reliably patched.\n\nIssue with Updates:\nEvery update of the x32dbg/x64dbg debuggers brings its own bugs with it and in a way, this reminds one of Windows 10 with its constant updates ;)\n\nWhen debugging a target, we should really not need to keep thinking constantly as to whether it was a fault in the debugger or the target program that contributed to the crash!\n\nIn an nutshell, the main problem seems to be that too many programmers have been and are (still) working on x32dbg/x64dbg each in their own programming styles and there seems to a lack of direction in the overall structure of the debugger.\n\nThis was not the case for Olly where a single programmer had created it and therefore has a clean crisp structure that is very difficult to define or described in simple terms.\n\nThis is not to say that x32dbg/x64dbg is bad. Just saying that there is a lot more room for improvement to make it run as reliably as Olly.\n\nThese are just a few of the issues that I could remember the top of my head that constantly caused me to dust my old Olly and re-use it again and again.\n\n",
      "votes": "22",
      "user": "T.Todua",
      "time": "Nov 29, 2018 at 22:15",
      "is_accepted": true,
      "comments": [
        {
          "user": "mrexodia",
          "text": "Could you elaborate on the issues with x64dbg (patching/crashes/whatever). The current focus is stability and I feel things have been pretty good as of recently. Also for 32 bit systems you can easily use TitanHide which uses a kernel driver instead of user mode hooks. It often happens that people say that x64dbg is “unstable” because they used it in 2016 and didn’t report any issues or ever try again.",
          "time": null
        }
      ]
    },
    {
      "content": "Disclaimer: I am the main developer of x64dbg, take that into account :)\n\nI would say that the main difference between OllyDbg and x64dbg is that there is no 64 bit (os) support at all in OllyDbg. If you are working on a modern system I think x64dbg is a better choice because it was designed to work there.\n\nThat said, x64dbg isn’t better in all aspects. One main difference is that OllyDbg has a very solid tracing system, whereas x64dbg has something, but still requires a lot of work. I am using x64dbg for my job, but I am familiar with the source code so I can make improvements as I need them.\n\nAnother big difference is that you can contribute to x64dbg directly. Either by reporting bugs, or simply fixing them yourself. To me this is a big advantage, as many plugins for OllyDbg hook the internal functions to fix bugs or add features.\n\n",
      "votes": "15",
      "user": "mrexodia",
      "time": "Dec 1, 2018 at 23:09",
      "is_accepted": false,
      "comments": [
        {
          "user": "T.Todua",
          "text": "ouch, i didn't know the person helped me with other questions too, is the main dev  of x64. thnx ;)",
          "time": null
        },
        {
          "user": "T.Todua",
          "text": "can you please also list the differences with regard to x32dbg vs olly",
          "time": null
        },
        {
          "user": "mrexodia",
          "text": "I don't feel there would be a benefit to necro-editing a post from 5 years ago, even though the accepted answer has more upvotes and is factually incorrect...",
          "time": null
        },
        {
          "user": "T.Todua",
          "text": "the reason it was accepted answer was because user posted that earlier and by that time it was the \"accepted answer\". however, in recent days I had to go back to that issue and had additional questions, and I've asked you, because you had more context of that. but if you don't find a time to update that post (even though it would be beneficial to readers), then I understand.",
          "time": null
        },
        {
          "user": "CherryDT",
          "text": "@mrexodia I think there is nothing \"necro\" about this, because this isn't a forum but a QA site like a wiki with questions and answers, more targeted towards future readers finding it than to the original poster, and so editing something to improve it or bring it up to date would always be good, regardless of how old the post it. (Adding answers to years-old questions is also good for that reason because even if the question is no longer interesting to the original poster, it may be useful to someone finding it on Google, which is the main use of Stack Exchange sites anyway!)",
          "time": null
        }
      ]
    },
    {
      "content": "Outside of maybe custom plug-ins or perhaps buried features and usability differences, there's really no incentive to use OllyDbg over x32dbg/x64dbg. Since OllyDbg was the debugger of choice for so many years, it will take awhile to run its course.\n\nThat said, it's still extremely capable for a 32-bit debugger with a rich support/plug-in ecosystem (even if a bit dated now), so there's absolutely nothing wrong with using it if you prefer it over any other debugger for 32-bit applications.\n\nPersonally, I migrated to x32dbg/x64dbg quite awhile back and haven't missed OllyDbg ever since. In fact, the switch is so easy that one could presumably get up to snuff with using debuggers via OllyDbg, then bop right over to x32dbg/x64dbg with very little differences to compensate for.\n\n",
      "votes": "5",
      "user": "dsasmblr",
      "time": "Dec 1, 2020 at 15:42",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "",
      "votes": "3",
      "user": "dasdboot",
      "time": "Mar 3, 2020 at 10:30",
      "is_accepted": false,
      "comments": [
        {
          "user": "T.Todua",
          "text": "why was donwvoted ?",
          "time": null
        },
        {
          "user": "Coldblackice",
          "text": "@T.Todua Upset x64dbg fans",
          "time": null
        }
      ]
    }
  ]
}