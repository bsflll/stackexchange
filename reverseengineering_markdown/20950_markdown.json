{
  "title": "How to load symbols from a symbol server in Ghidra?",
  "link": "https://reverseengineering.stackexchange.com/questions/20950/how-to-load-symbols-from-a-symbol-server-in-ghidra",
  "content": "I've been trying to learn Ghidra by attempting to reverse the comctl32.dll system library, which has many of its functions documented. I started the de-compilation analysis in it, and after a while it showed this error message: \n\n(I don't know how soon it happened. I had to leave it to do its thing as sadly it was taking too long.)\n\n\n\nThen I happened to see that if I go to File -> Download PDB file, then select some folder on my drive and provide Microsoft symbol path https://msdl.microsoft.com/download/symbols and click \"Download from URL\" it seems to download it.\n\nIt then asks if I want to apply it to the project and if I click Yes it shows this warning:\n\n\n\nSo I'm obviously not doing it right.\n\nThus I was curious:\n\nA) Is it possible to provide the symbol server path and have it download needed symbol files automatically?\n\nB) If not, what's the sequence to load symbols for a particular binary? It seems like it wants to have symbols up front, but how would I know which files/imports it may need (besides the obvious binary file that I'm opening)?\n\n",
  "votes": "10",
  "answers": 2,
  "views": "8k",
  "tags": [
    "disassembly",
    "windows",
    "binary-analysis",
    "decompilation",
    "ghidra"
  ],
  "user": "c00000fd",
  "time": "Mar 24, 2019 at 9:32",
  "comments": [],
  "answers_data": [
    {
      "content": "Yea, it's not completely automatic like IDA Pro.\nAlthough the NSA dev team is very active on the project. And any US citizen should be able to add such a feature (via Java) and make a pull request to add it.\n\nI found what you do is simply add the module to your Ghidra project.\nWhen you click on the module/executable it will ask \"...Would you like to analyze it now?\".\nClick \"No\", load your PDB, and then start the analysis manually via the \"Analysis\" menu option.\n\n",
      "votes": "3",
      "user": "Sirmabus",
      "time": "Oct 24, 2019 at 3:46",
      "is_accepted": false,
      "comments": [
        {
          "user": "c00000fd",
          "text": "\"any US citizen\"?",
          "time": null
        },
        {
          "user": "Sirmabus",
          "text": ">>\"any US citizen\"? It's understanding they IP block some countries, I could be be wrong. Your welcome.",
          "time": null
        },
        {
          "user": "c00000fd",
          "text": "IP-block? I thought it runs locally on your computer & you can download it from GitHub. What do you mean?",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "@c00000fd: it's a legal requirement, not technical",
          "time": null
        }
      ]
    },
    {
      "content": "One of the possible ways to do this - use radare2 or Cutter with the r2ghidra plugin. It will load the PDB and use Ghidra decompiler to do the actual decompilation.\n\n",
      "votes": "2",
      "user": "Anton Kochkov",
      "time": "Nov 22, 2019 at 8:25",
      "is_accepted": false,
      "comments": []
    }
  ]
}