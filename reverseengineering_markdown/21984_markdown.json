{
  "title": "Start vs WinMain()",
  "link": "https://reverseengineering.stackexchange.com/questions/21984/start-vs-winmain",
  "content": "I am trying to analyze a malicious DLL and when I loaded it in IDA, I can see two functions - DLLEntryPoint and DLLMain. I then proceeded to change the format by switching the characteristics bit that identified the file as a DLL to an EXE. When I load the file again in IDA, I can see two functions - Start and WinMain\n\nFrom what I understand, Start is the entry point for an exe and it does some initialization before it calls WinMain or Main. Are DLLEntryPoint and DLLMain similar functions for Dlls?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "908",
  "tags": [
    "ida",
    "malware",
    "dll",
    "exe",
    "entry-point"
  ],
  "user": "Ranganatha Rao",
  "time": "Aug 27, 2019 at 0:58",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "Hi and welcome to RE.SE. Maybe have a look here?!",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "First, please read this.\n\nEssentially the difference is (in both cases) that one - the entry point - refers to the address where the initial code will be located and the other - \"main function\" - will be the one provided by the (C) runtime, potentially hiding gory details from you.\n\nThis is almost correct. Start is the symbolic name of the entry point in this case, true. However, whether it performs some kind of initialization depends entirely on the library. I wager IDA has recognized some runtime library (such as the Visual C++ runtime) by way of a FLIRT signature and used that information to point out DllMain to you.\n\nConceptually DLLEntryPoint and DLLMain mirror what you found for .exe files, yes.\n\n",
      "votes": "2",
      "user": "0xC0000022L",
      "time": "Aug 28, 2019 at 12:34",
      "is_accepted": false,
      "comments": []
    }
  ]
}