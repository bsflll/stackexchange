{
  "title": "PE FILE section read in C",
  "link": "https://reverseengineering.stackexchange.com/questions/30824/pe-file-section-read-in-c",
  "content": "I need to read PE file. I need to search word in PE file. Search is required to cover only the sections with the “executable” flag. And I need to specify the section where the word found. How can I do this in C? I hope you can help me. And I cannot use 3rd party libraries. This is my task and this is the rule..\n\nI mean a searching string in sections with the \"executable\" flags. I do not want to search string in non executable parts.\n\n",
  "votes": "0",
  "answers": 1,
  "views": "710",
  "tags": [
    "c",
    "pe"
  ],
  "user": "sadMarry",
  "time": "Feb 15, 2023 at 8:27",
  "comments": [
    {
      "user": "josh poley",
      "text": "pecoff Spec: download.microsoft.com/download/9/C/5/…",
      "time": null
    },
    {
      "user": "sadMarry",
      "text": "@joshpoley wow this is too long",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "You will need to read the PE header format posted by @josh poley in the comments to figure out how to find the section header pointers.\n\nThe tasks you need to perform (roughly) are:\n\nYou'll do this in C using a ton of pointer arithmetic. Or, the commonsense shortcut would be to import the Microsoft header files that describe the relevant structs, like they do in this Stack Overflow post. That way you can declare a pointer of the relevant type and access its members by calculating their offsets by hand.\n\n",
      "votes": "4",
      "user": "dingo_kinznerhook",
      "time": "Aug 26, 2022 at 14:24",
      "is_accepted": false,
      "comments": [
        {
          "user": "sadMarry",
          "text": "hello, thanks for answer. I found some code for finding sections and addresses. But I do not know how to read section.  I already read the link in 1. meterial.",
          "time": null
        },
        {
          "user": "sadMarry",
          "text": "But I do not figure out.  I have output like this: Section Header name :               .text ActualSize of code or data :        0x49937 Virtual Address(RVA) :              0x1000 Size of raw data (rounded to FA) :  0x49a00 Pointer to Raw Data :               0x400 Pointer to Relocations :            0 Pointer to Line numbers :           0 Number of relocations :             0 Number of line numbers :            0 Characteristics :                   Contains executable code, Readable,  How can read just this section?",
          "time": null
        },
        {
          "user": "dingo_kinznerhook",
          "text": "@sadMarry You're asking how to do this in C? There are a couple of ways you could do it. One would be to read the whole file into a buffer, and then access that buffer at the offset of the pointer to raw data. You could copy the data from there to the end of the section into a new buffer and search only that new buffer for your target string.",
          "time": null
        }
      ]
    }
  ]
}