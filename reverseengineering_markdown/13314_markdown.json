{
  "title": "how do I bypass ZwQueryInformationProcess as anti-debugging protection",
  "link": "https://reverseengineering.stackexchange.com/questions/13314/how-do-i-bypass-zwqueryinformationprocess-as-anti-debugging-protection",
  "content": "How do I defeat the ZwQueryInformationProcess() anti-debugging protection for the ProcessDebugPort class? \nUnlike isDebuggerPresent() I found this really hard to bypass in my skill... \n\nDoes anyone know how to bypass this api function?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "2k",
  "tags": [
    "windows",
    "ollydbg",
    "anti-debugging"
  ],
  "user": "James Park",
  "time": "Feb 19, 2017 at 3:48",
  "comments": [
    {
      "user": "peter ferrie",
      "text": "it requires a driver to intercept the function and change the behavior.  It can't be bypassed at the application level.",
      "time": null
    },
    {
      "user": "blabb",
      "text": "@peterferrie if it is a query for ProcessDebugPort cant we overwrite the OutBuff  on returning from syscall",
      "time": null
    },
    {
      "user": "peter ferrie",
      "text": "@blabb, to do that you would have to hook the syscall itself, because anything higher than that can be bypassed, and now you're a driver.  Then you have to track which process is being checked, since remote process with debugger might be legitimate.  Process handle might not be -1, but real handle which would require resolving first.",
      "time": null
    },
    {
      "user": "blabb",
      "text": "@peterferrie i posted an answer can you please take a look and tell if this cant be done ?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "```\n#include \"zwopenproc.h\"\nint main (void) \n{\n    hNtdll=GetModuleHandle(\"ntdll.dll\");\n    if(hNtdll) \n    {\n        *(FARPROC *)&ZwQIP  = GetProcAddress(hNtdll,\"ZwQueryInformationProcess\");\n        hProc=OpenProcess(PROCESS_ALL_ACCESS,FALSE,GetCurrentProcessId());\n        ZwQIP(hProc,ProcessImageFileName,OutBuff,sizeof(OutBuff),&Rlen);\n        printf(\"ImageName=%wZ  \n\",OutBuff);\n        ZwQIP(hProc,ProcessDebugPort,&DbgPort,4, &Rlen);\n        switch( DbgPort )\n        {\n        case 0xffffffff:\n            printf(\"some bugs are debugging us  \n\");\n            break;\n        case 0x0:\n            printf(\"no bugs are debugging us  \n\");\n            break;\n        default:\n            printf (\"who knows if bugs are debugging us  \n\");\n            break;\n        }       \n    }\n    return 0;    \n}\n\n```\nexecuting this code without debugger\n\n```\nzwopenproc.exe\nImageName=\\Device\\HarddiskVolume4\\test\\zwqiproc\\zwopenproc.exe\nno bugs are debugging us\n\n```\nexecuting inside debugger results in detection \n\n```\ncdb -g -G zwopenproc.exe | tail -2\nImageName=\\Device\\HarddiskVolume4\\test\\zwqiproc\\zwopenproc.exe\nsome bugs are debugging us +++++++++++++++++++++++++++++++++++++++++++++++\n\n```\nexecuting inside debugger and overwriting the return buffer using a script results in no detection\n\n```\ncdb -G -c \"$$>a< zwqip.txt\" zwopenproc.exe  | tail -6\n\n\n    Process Id  2064\n    Parent Process  3716\n    Base Priority 8\n.  0    id: 810 create  name: zwopenproc.exe\nImageName=\\Device\\HarddiskVolume4\\test\\zwqiproc\\zwopenproc.exe\nno bugs are debugging us  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n\nprintf \"%x  \n\" , 2064\n810\n\n```\ncontents of script file\n\n```\ncat zwqip.txt\nbp ntdll!ZwQueryInformationProcess \".if( poi(@esp+8) != 7 ){gc} .else { !handle poi(@esp+4\n) f ; | ; gu ; ed dbgport 0; gc } \"\ng\n\n```\n",
      "votes": "1",
      "user": "blabb",
      "time": "Aug 26, 2016 at 20:36",
      "is_accepted": true,
      "comments": [
        {
          "user": "peter ferrie",
          "text": "sure, but now change GetCurrentProcessId() to another pid and then debug that pid legitimately.  Unless your script knows which handle refers to your process (can also be -1 for current process, or even a random handle value), you'll either hide the legitimate case and reveal yourself, or fail to report the error and reveal yourself.",
          "time": null
        }
      ]
    }
  ]
}