{
  "title": "What is the meaning of kernel32.BaseThreadInitThunk?",
  "link": "https://reverseengineering.stackexchange.com/questions/4361/what-is-the-meaning-of-kernel32-basethreadinitthunk",
  "content": "I tried to analyze a program in assembly using ollydbg. In the first line I have the following:\n\n```\nMOV EAX, DWORD PTR FS:[0]\n\n```\nIn the register window, I've got the information:\n\nand in another window about FS the following:\n\nSo, my questions would be:\n\nI hope that someone can help me.\n\n",
  "votes": "7",
  "answers": 2,
  "views": "16k",
  "tags": [
    "assembly"
  ],
  "user": "user3097712",
  "time": "Jun 2, 2023 at 19:15",
  "comments": [],
  "answers_data": [
    {
      "content": "Check this - Segment_Registers\n\nOn Windows fs[0] points TEB\n\nYes it is. It's quite simple and is used only to execute your thread's function.\n\n",
      "votes": "5",
      "user": "perror",
      "time": "May 18, 2014 at 7:25",
      "is_accepted": false,
      "comments": [
        {
          "user": "bad_decoy",
          "text": "Some additional information on fs:[0]: stackoverflow.com/questions/4657661/â€¦",
          "time": null
        },
        {
          "user": "ST3",
          "text": "FS is used by 32-bit processes, GS for 64-bit processes.",
          "time": null
        }
      ]
    },
    {
      "content": "Segment registers were historically used to allow 16-bit code to address more than 16 bits (64KB) of address space. Code could be pointed to with the CS segment, data with DS, etc. FS was an \"extra\" segment that could be used however necessary. You can read more about segmentation on wikipedia. Modern architectures don't use segment registers, with the exception of FS and GS.\n\n",
      "votes": "3",
      "user": "bad_decoy",
      "time": "May 18, 2014 at 18:39",
      "is_accepted": false,
      "comments": []
    }
  ]
}