{
  "title": "ASM code hook/patching with trampoline function",
  "link": "https://reverseengineering.stackexchange.com/questions/17995/asm-code-hook-patching-with-trampoline-function",
  "content": "I am stuck on making (my little self-task for learning) that thing:\n\n\nBasically it should be something like Themida or VMProtect (do mutation, virtualization, etc.), but in my case,\ni want to take ASM code between pointers, obfuscate it etc, and write it to some DLL. On original application, \nwe have a patched trampoline with generated by our \"disasm tool\" function... Hmm, any example how to make that? =)\n\nMaybe it is not a good idea of protection software code or something like that, i just do that for learning. I know how ASM pointers\nworks in theory. For example, i can do all of that manually with Olly, but how to do that programatically like VMProtect, Enigma or Themida\n\"compiler tools\" do this? Never tried to make a something like that by my self. And did not find any examples, because that is \"arcane\" level\nof programming, and also such things hard to find on opensource =(\n\nSo to questions:\n\n1)How to search programmatically ASM pointer inside compiled application?\n\n2)How to \"cut\" & disasm code between 2 ASM pointers programmatically?\n\n3)How to paste them back (after edit) programmatically?\n\n",
  "votes": "4",
  "answers": 2,
  "views": "2k",
  "tags": [
    "disassembly",
    "c++",
    "c",
    "assembly"
  ],
  "user": "Happy Day",
  "time": "Apr 16, 2018 at 13:28",
  "comments": [
    {
      "user": "julian",
      "text": "It is difficult to understand this.",
      "time": null
    },
    {
      "user": "Biswapriyo",
      "text": "I don't understand the trampoline function. But I know little about hooking with Easyhook. Link: easyhook.github.io",
      "time": null
    },
    {
      "user": "blabb",
      "text": "check  rewolf  opensource virtualizer    github.com/rwfpl/rewolf-x86-virtualizer",
      "time": null
    },
    {
      "user": "Happy Day",
      "text": "Ohh thanks, that's exactly what i need. Found, std::vector<std::pair<DWORD, DWORD>> scanForMarkers(BYTE *data, DWORD length) and other usefull things. ;)",
      "time": null
    },
    {
      "user": "Igor Skochinsky",
      "text": "@HappyDay: please post answers in the answer box, don't add them into the question body or comments. but make sure it's an actual answer and not just \"something that looks like it\".",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "1) If by pointer you mean \"pattern\" or \"watermark\" the first thing that comes into my mind is BlackMagic (read FindPattern function)\n\n2) \n\n3) At this point the disassembled code should have been obfuscated/encrypted, and since it will be moved to another dll it's there (inside the dll) where it should be compiled back, you can either choose to assemble it manually (on memory) with (for example) Olly disasm (your program should manually generate a dll which is a lot of effort) or compile it (to disk) with (for example) MASM32\n\nNotes : \n\n",
      "votes": "3",
      "user": "COB RCE",
      "time": "Apr 23, 2018 at 19:35",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "The answer is LLVM. It allows to load the assembly and manipulate it. If you own the source code of the program, which you want to protect, it's even easier, because you'll be able to compile it via LLVM and have higher level of code manipulation. See LLVM pass there's an example on modifying the binary code during the compilcation\n\n",
      "votes": "1",
      "user": "Anton Kukoba",
      "time": "May 24, 2018 at 14:44",
      "is_accepted": false,
      "comments": []
    }
  ]
}