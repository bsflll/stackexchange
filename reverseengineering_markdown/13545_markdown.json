{
  "title": "Is it possible copy and save bootloader using CLI telnet commands?",
  "link": "https://reverseengineering.stackexchange.com/questions/13545/is-it-possible-copy-and-save-bootloader-using-cli-telnet-commands",
  "content": "I need get copy of original Bootloader from device running embedded Linux. Is it possible copy and save bootloader using CLI telnet commands? I have full access to CLI interface. Is there way copy Bootloader binary from memory and save it?\n\n```\n=> printenv\n...\nupdate_uboot=tftpboot 0x80000100 u-boot.bin && protect off 0x48000000 +${filesize} && erase 0x48000000 +${filesize} && sleep ${sdelay} && cp.b ${fileaddr} 0x48000000 ${filesize} && protect on 0x48000000 +${filesize}\n...\n\nubootpartsize=0x20000\n\nmtdinfo=0x20000(U-Boot)ro\nmtdparts=spansion:0x20000(U-Boot)ro\n\n5 cmdlinepart partitions found on MTD device spansion\npartitions[0] = {.name = U-Boot, .offset = 0x00000000,.size = 0x00020000 (128K) }\n\n0x00000000-0x00020000 : \"U-Boot\"\n\n```\nEDIT: netcat is not present in Busybox on embedded device.\n\n```\nBusyBox v1.19.2 built-in shell (ash)\nEnter 'help' for a list of built-in commands.\n# help\nBuilt-in commands:\n------------------\n        . : [ [[ bg break cd chdir continue echo eval exec exit export\n        false fg getopts hash help jobs kill local printf pwd read readonly\n        return set shift source test times trap true type ulimit umask\n        unset wait\n\n```\n",
  "votes": "1",
  "answers": 3,
  "views": "1k",
  "tags": [
    "binary-analysis",
    "linux",
    "memory",
    "embedded",
    "flash"
  ],
  "user": "fxgreen",
  "time": "Sep 24, 2016 at 17:57",
  "comments": [],
  "answers_data": [
    {
      "content": "The bootloader is in the flash, so you have to dump it first by using:\n\n```\ndd if=/dev/mtd0 of=/tmp/mtd0\n\n```\nor\n\n```\nnandump -of /tmp/mtd0 /dev/mtd0\n\n```\nAfter it you have to copy to an SD card, USB device or send via netcat (nc) to a socket. Of course you can do it in one step also.\n\nEDIT\n\nYou can send files via netcat with 2 easy steps.\n\n",
      "votes": "4",
      "user": "ebux",
      "time": "Sep 22, 2016 at 13:00",
      "is_accepted": true,
      "comments": [
        {
          "user": "fxgreen",
          "text": "There is no SD card and no USB on device: how to send dump via netcat?",
          "time": null
        },
        {
          "user": "ebux",
          "text": "I edited my answer",
          "time": null
        },
        {
          "user": "fxgreen",
          "text": "Can be used tftp for this as well?",
          "time": null
        },
        {
          "user": "ebux",
          "text": "You can use tftp also, or wget, curl, ftp and other tools as well, but I think netcat is the easiest and most common tool you may have in an embedded linux.",
          "time": null
        },
        {
          "user": "fxgreen",
          "text": "In case I am facing a problem with netcat implementation, how to dump bootloader raw data to the telnet screen?(then copy and save output as binary)",
          "time": null
        }
      ]
    },
    {
      "content": "Please try https://ohse.de/uwe/software/lrzsz.html\nAnd also, read about kermit, xmodem, ymodem and zmodem protocols - these are file transfer protocols over serial lines.\n\nU-boot has a support to receive files with \"loady\" command. We use it together with lsz command from lrzsz package, to update the bootloader.\nI cannot see any support for sending files, but with good understanding of the *modem protocol, you could emulate proper string to activate minicom's file transfer and send whole file to your computer.\n\n```\nu-boot => help loady\nloady - load binary file over serial line (ymodem mode)\n\nUsage:\nloady [ off ] [ baud ]\n- load binary file over serial line with offset 'off' and baudrate 'baud'\n\n```\nThe second solution might be enabling minicom's logging to file, print the whole memory region with u-boot's md command, and then parse the log file with a script to convert from ascii to real bytes.\n\n",
      "votes": "1",
      "user": "aleek",
      "time": "Sep 23, 2016 at 12:10",
      "is_accepted": false,
      "comments": [
        {
          "user": "Lexx Luxx",
          "text": "loady(ymodem) and loadbimplemented in U-boot allow transfer files only in one direction - from computer to the device RAM address.",
          "time": null
        }
      ]
    },
    {
      "content": "dd and netcat should work just fine.\n\nIf any problem with that, try doing an hexdump to stdout\n\n```\nhexdump -C -n 64 /dev/mtdblock0 > bootloader.bin\n\n```\nBut needs a reverse shell on the target, like:\n\n```\nnc.exe [local IP] [port] -e cmd.exe\n\n```\n(cmd.exe is for MS windows, /bin/sh on linux)\n\n",
      "votes": "0",
      "user": "Carlos",
      "time": "Mar 24, 2021 at 14:29",
      "is_accepted": false,
      "comments": []
    }
  ]
}