{
  "title": "CSR DFU File Format",
  "link": "https://reverseengineering.stackexchange.com/questions/22435/csr-dfu-file-format",
  "content": "I am trying to reverse engineer the firmware for my JBL Flip 3 speaker. I have obtained a DFU file for the device online but am unsure as to how much of the firmware is included. My first question would be, normally do DFU files include the full device firmware or just a portion of it and the device knows how to update the specific portion?\n\nAssuming for now that the file contains the full firmware, does anyone know anything about firmware images for CSR Bluetooth SOC's? I know that the speaker is using a CSR SOC because the DFU starts with CSR-dfu2.\n\nOpening the DFU file in Audacity and playing it, we can see that it contains all the sound effects the speaker plays as well as some sections of static that I assume are code: \n\nI am fairly confident that these sections are code/data because they contains strings like tts/0.raw and tts/1.raw. However, there is a null byte in between each character of the strings which suggests that they are UTF-16 strings. Does anyone know of an embedded filesystem that uses UTF-16 filenames?\n\nUnfortunately binwalk does not provide any useful information. However, I found what I believe to be the full JBL Flip 4 firmware image image and binwalk reveals several sections:\n\n```\n0             0x0             CSR (XAP2) DFU firmware update header\n1380          0x564           CSR Bluecore firmware segment\n1931310       0x1D782E        YAFFS filesystem, big endian\n\n```\nDoes anyone have any experience with CSR or JBL firmware and could provide guidance or a suggestion of how to extract code from the DFU? Thank you.\n\n",
  "votes": "2",
  "answers": 3,
  "views": "2k",
  "tags": [
    "firmware",
    "binwalk",
    "bluetooth"
  ],
  "user": "genghiskhan",
  "time": "Oct 31, 2019 at 19:29",
  "comments": [],
  "answers_data": [
    {
      "content": "This is a BlueCore02 Device Firmware Upgrade File. I could not find a specification, but the BlueCore01 specification contains more or less the same fields (with a few differences)\n\n",
      "votes": "5",
      "user": "Johannes Mittendorfer",
      "time": "Dec 31, 2019 at 8:42",
      "is_accepted": false,
      "comments": [
        {
          "user": "Johannes Mittendorfer",
          "text": "If anyone can give a hint where to find the second version of the specification: I would really appreciate it.",
          "time": null
        },
        {
          "user": "genghiskhan",
          "text": "What a life saver! I'll let you know if I find the BlueCore02 specs.",
          "time": null
        },
        {
          "user": "genghiskhan",
          "text": "I've found the following URL on web archive: web.archive.org/web/20041022135603/http://www.csrsupport.com/… that looks like it has more recent BlueCore DFU specs however it requires a CSR login. I'm not sure if it'd even work if someone had a valid email/password but it'd be worth a shot.",
          "time": null
        },
        {
          "user": "Johannes Mittendorfer",
          "text": "I tried but wasn't successful. Looks like it is not available any more...",
          "time": null
        }
      ]
    },
    {
      "content": "I've found this project https://github.com/lorf/csr-spi-ftdi, along with info:\n\nwhat means they are intentionally try to enforce developers to use more high level tools .\nAbove github tool should help you identify exact chip without disassembling physical device. I've checked the one above and found here: https://www.chipfind.net/datasheet/csr/bc212015.htm The datasheet gives some meaningful info - it describes Bluecore2 virtual machine, and also mentions CSR’s BlueLab, Casira and MicroSira development kits which may be good direction for documentation search:\n\nIt looks like it will be hard do reverse code without understanding the architecture first:\n\nAlso it mentions VM Application software is stored on external flash so depending what you are looking for that may be worth checking.\n\n",
      "votes": "1",
      "user": "nusch",
      "time": "Dec 10, 2020 at 23:37",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "I've written an 010 Editor parser for the CSR DFU file format, available here. Hopefully it will be of help.\n\n",
      "votes": "1",
      "user": "ramikg",
      "time": "Aug 11, 2023 at 10:16",
      "is_accepted": false,
      "comments": []
    }
  ]
}