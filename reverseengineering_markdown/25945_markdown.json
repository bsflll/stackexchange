{
  "title": "CRC16 Reverse in C166 Arch",
  "link": "https://reverseengineering.stackexchange.com/questions/25945/crc16-reverse-in-c166-arch",
  "content": "Before that I asked about piece of code that used in this algorithm (here). Now I have a bit problem with the rest of algorithm.\nSo I have to describe this with detail. Sorry if i vast your time for read it.\nI have shown an algorithm below. It seems is a CRC16 algorithm.\n\n```\nCRC_16_Calculate:                       \n                                        \n                mov     [-r0], r9\n                mov     [-r0], r8\n                mov     [-r0], r7\n                mov     [-r0], r6\n                mov     r9, r12\n                mov     r8, r15\n                jmpr    cc_UC, loc_29D6\n; ---------------------------------------------------------------------------\n\nloc_29A4:                               \n                mov     r4, r13\n                mov     r5, r14\n                add     r13, #1\n                addc    r14, #0\n                exts    r5, #1\n                movb    rl3, [r4]\n                movbz   r7, rl3\n                movb    rl6, #0\n\nloc_29B4:                               \n                mov     r4, r9\n                xor     r4, r7\n                and     r4, #1\n                jmpr    cc_Z, loc_29C8\n                mov     r4, r9\n                shr     r4, #1\n                xor     r4, #0A001h\n                mov     r9, r4\n                jmpr    cc_UC, loc_29CA\n; ---------------------------------------------------------------------------\n\nloc_29C8:                               \n                shr     r9, #1\n\nloc_29CA:                               \n                shr     r7, #1\n                addb    rl6, #1\n                cmpb    rl6, #8\n                jmpr    cc_C, loc_29B4\n                sub     r8, #1\n\nloc_29D6:                               \n                cmp     r8, #0\n                jmpr    cc_UGT, loc_29A4\n                mov     r4, r9\n                mov     r6, [r0+]\n                mov     r7, [r0+]\n                mov     r8, [r0+]\n                mov     r9, [r0+]\n                rets\n\n```\nAs you see in below I converted that to C++ code:\n\n```\nstatic uint16_t intCrc16(uint8_t* cBuffer)\n{\n    uint16_t wPreset = 0xFFFF;\n    uint16_t iBufLen = 6;\n    uint16_t temp = 0;\n    while (iBufLen--)\n    {\n        temp = *cBuffer++;\n        for (uint8_t j = 0; j < 8; ++j)\n        {\n            if ((wPreset ^ temp) & 0x01) wPreset = (wPreset >> 1) ^ 0xA001;\n            else wPreset >>= 1;\n            temp >>= 1;\n        }\n    }\n    return wPreset;\n}\n\n```\nIt seems everything is good but the problem appear right here. The main loop of this function run for 6 times(iBufLen) but\nthe input argument(cBuffer) length is always 4 Bytes. To prove this point we check where this algorithm invoked. Look at below:\n\n```\nmov     r13, r4\nmov     r14, r5\nmov     r15, #6\ncalls   0, CRC_16_Calculate\n\n```\nAs you see, r13 and r14 are input argument as cBuffer and r15 equivalent to iBufLen.\nSo, what's my mistake?\nBy the way, r4 and r5 are the returned value of function that I pointed (here).\n\n",
  "votes": "2",
  "answers": 0,
  "views": "206",
  "tags": [
    "ida",
    "disassembly",
    "static-analysis",
    "crc",
    "c166"
  ],
  "user": "Unicornux",
  "time": "Sep 26, 2020 at 5:28",
  "comments": [
    {
      "user": "Igor Skochinsky",
      "text": "Please paste the code as text, not as screenshot",
      "time": null
    },
    {
      "user": "Unicornux",
      "text": "Thanks dear Igor. But how I can paste Ida diagrams as Text? Each code pasted as Text, only diagram is as screenshot.",
      "time": null
    },
    {
      "user": "Igor Skochinsky",
      "text": "you can paste the text listing, it doesn't have to be a graph.",
      "time": null
    },
    {
      "user": "Unicornux",
      "text": "OK. Sure. Thanks.",
      "time": null
    },
    {
      "user": "Igor Skochinsky",
      "text": "Why do you think thereâ€™s a mistake in your conversion?",
      "time": null
    }
  ],
  "answers_data": []
}