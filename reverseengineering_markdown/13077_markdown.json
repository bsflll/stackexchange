{
  "title": "Immnunity Debugger Python API Incorrect code execution order",
  "link": "https://reverseengineering.stackexchange.com/questions/13077/immnunity-debugger-python-api-incorrect-code-execution-order",
  "content": "PyCommand \n\n```\n   import immlib\n    def main(args):\n        imm = immlib.Debugger()\n        imm.setBreakpoint(0x411077)\n        imm.setReg(\"EAX\",0x0)\n        imm.log(\"EAX: {}\".format(imm.getRegs()['EAX']))\n        imm.run()\n\n    return \"OK\"\n\n```\nLog\n\n```\nEAX: 0\nBreakpoint at 0x411077\nOK\n\n```\nThe log write happens before setBreakpoint() according to the log.\n\nWhat is the problem?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "79",
  "tags": [
    "python",
    "immunity-debugger"
  ],
  "user": "Goose",
  "time": "Jul 19, 2016 at 8:00",
  "comments": [],
  "answers_data": [
    {
      "content": "It looks like \"Breakpoint at\" means \"the breakpoint was hit\", not \"breakpoint was set\".\n\nThe breakpoint can be only triggered once the program is running. Since you call log() before run(), the log message is printed first. If you want to log when the breakpoint is hit, you need to use another approach (not familiar with ImmDbg API so can't recommend anything specific).\n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Jul 18, 2016 at 17:58",
      "is_accepted": false,
      "comments": [
        {
          "user": "JeffreyZ",
          "text": "You need to use a BpHook, see the documentation for more information",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "@JeffreyZ: you probably should post that as an answer (with a small example)",
          "time": null
        }
      ]
    }
  ]
}