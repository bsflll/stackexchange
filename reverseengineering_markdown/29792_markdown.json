{
  "title": "Malware analysis of undetected NodeJS token grabber",
  "link": "https://reverseengineering.stackexchange.com/questions/29792/malware-analysis-of-undetected-nodejs-token-grabber",
  "content": "I've recently nearly had my discord account stolen by a token grabber called 'Katana Legends'.\nSomeone contacted me asking to playtest a game, which prompted a .exe file.\nI ran the file and website on virustotal and with malwarebytes, completely clean. Undetected.\nI'm a complete beginner at this, heard Ghidra might be good to decompile it.\nWhen ran, the file opened command prompt and restarted a few applications.\nOther posts just answer\n\nThe file is downloadable on https:// katanalegends . tk (watch out, don't run the file on your main device)\n\nHow do I go about this? I want to know why this is undetectable.\n\n",
  "votes": "0",
  "answers": 0,
  "views": "182",
  "tags": [
    "disassembly",
    "malware",
    "decompile",
    "exe"
  ],
  "user": "Louis Vanhove",
  "time": "Dec 29, 2021 at 17:38",
  "comments": [
    {
      "user": "NirIzr",
      "text": "The short answer is that Anti-virus software is quite lacking. You can't trust an AV (especially the stripped down versions over at virus-total) to detect all viruses. The best protection is safety precautions (such as not running any executable you're given).",
      "time": null
    },
    {
      "user": "0xC0000022L",
      "text": "Hi and welcome to RE.SE. I agree with @NirIzr that AVs are quite lacking (I worked more than ten years in the industry). However, I think that educating users is the best protection and the safety precautions will follow from that. Of course the PR departments of the AV companies will tell you quite the opposite. The best an AV can do is to say \"we didn't find anything\", whereas some will boldly \"system is clean\". Since conventional AVs are blacklist based and the whitelist-based approach is seldom practical, the latter claim is simply hogwash.",
      "time": null
    },
    {
      "user": "0xC0000022L",
      "text": "Roughly speaking most AVs will have heuristic rules and signatures to detect the traits that they deem malicious in a program. Some will also check behavior (either by emulation or while the program is already running). In your case the probable reason is that the actual code is in NodeJS and detecting the binary wrapper would likely cause loads of false positives. Because that's the fine line AVs are always walking: detecting malicious stuff versus false positives. And all the AV tests pay close attention to false positives (unfortunately their corpus of files is lacking).",
      "time": null
    }
  ],
  "answers_data": []
}