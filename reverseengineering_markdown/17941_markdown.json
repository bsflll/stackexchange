{
  "title": "Decrypting SSL traffic from malware",
  "link": "https://reverseengineering.stackexchange.com/questions/17941/decrypting-ssl-traffic-from-malware",
  "content": "I am a cybersecurity student. What is the best approach to decrypting traffic from a malware? I am using x32dbg (I'm new to assembly) and have trouble finding the private key. Are there any other approaches?\n\nThis is the malware I am reverse engineering: https://github.com/ytisf/theZoo/tree/master/malwares/Binaries/CryptoLocker_10Sep2013\n\n",
  "votes": "1",
  "answers": 4,
  "views": "545",
  "tags": [
    "decryption"
  ],
  "user": "Minh Tran",
  "time": "Apr 10, 2018 at 1:51",
  "comments": [
    {
      "user": "julian",
      "text": "reverseengineering.stackexchange.com/questions/2252/â€¦",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Basically, if it's really SSL you need to find the SSL_Read() and SSL_Write() functions in the malware code and hook them, so that you can dump their buffers. \n\nBut, I doubt that this malware uses SSL, couldn't find any signature of SSL library in the binary.\n\n",
      "votes": "2",
      "user": "perror",
      "time": "Apr 11, 2018 at 7:31",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Find the APIs it uses and hook them. The other post mentioned SSL_Read() and SSL_Write(). Malware often just uses the WinAPI to do HTTP, which makes it quite simple to use HTTPS.\n\nCheck for WinHTTP functions, or the WinInet functions, either as imports, or (typically) via dynamic lookups.\n\n",
      "votes": "0",
      "user": "Johann Aydinbas",
      "time": "Apr 11, 2018 at 13:45",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Are you looking for decrypting the files encrypted by the Ransomware. Or are you trying to decrypt the network communication of malware ?\n\nIf it is the first one, You will be able to get the private key by stepping into the code till it reaches (make sure you have lot of coffee next to you).\n\nFor the second one, You can use sslstrip to decrypt the traffic.\n\n",
      "votes": "0",
      "user": "Sai Santhosh D",
      "time": "Apr 13, 2018 at 7:14",
      "is_accepted": false,
      "comments": [
        {
          "user": "Igor Skochinsky",
          "text": "this is not a forum, please don't post comments or follow-up questions in the answer box.",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "BTW, sslstrip does not \"decrypt\" anything.",
          "time": null
        }
      ]
    },
    {
      "content": "Assuming it's using standard methods of performing requests You could try using a proxy to route your traffic and then snoop inside the SSL. For example this tool: https://www.charlesproxy.com/\n\n",
      "votes": "0",
      "user": "jv_",
      "time": "Apr 13, 2018 at 9:58",
      "is_accepted": false,
      "comments": []
    }
  ]
}