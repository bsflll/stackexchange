{
  "title": "Bypass SSL pinning for android application",
  "link": "https://reverseengineering.stackexchange.com/questions/31732/bypass-ssl-pinning-for-android-application",
  "content": "I am trying to analyze the network traffic from an android application for research purpose. I tried few approaches but unable to achieve the results. I am using rooted android emulator.\n\nIn first approach,I used MITMproxy and Frida. I followed the following steps:\n\n```\nsetTimeout(function(){\n Java.perform(function (){\n     console.log(\"\");\n     console.log(\"[.] Cert Pinning Bypass/Re-Pinning\");\n\n     var CertificateFactory = Java.use(\"java.security.cert.CertificateFactory\");\n     var FileInputStream = Java.use(\"java.io.FileInputStream\");\n     var BufferedInputStream = Java.use(\"java.io.BufferedInputStream\");\n     var X509Certificate = Java.use(\"java.security.cert.X509Certificate\");\n     var KeyStore = Java.use(\"java.security.KeyStore\");\n     var TrustManagerFactory = Java.use(\"javax.net.ssl.TrustManagerFactory\");\n     var SSLContext = Java.use(\"javax.net.ssl.SSLContext\");\n\n     // Load CAs from an InputStream\n     console.log(\"[+] Loading our CA...\")\n     var cf = CertificateFactory.getInstance(\"X.509\");\n     \n     try {\n         var fileInputStream = FileInputStream.$new(\"/data/local/tmp/cert-der.crt\");\n     }\n     catch(err) {\n         console.log(\"[o] \" + err);\n     }\n     \n     var bufferedInputStream = BufferedInputStream.$new(fileInputStream);\n     var ca = cf.generateCertificate(bufferedInputStream);\n     bufferedInputStream.close();\n\n     var certInfo = Java.cast(ca, X509Certificate);\n     console.log(\"[o] Our CA Info: \" + certInfo.getSubjectDN());\n\n     // Create a KeyStore containing our trusted CAs\n     console.log(\"[+] Creating a KeyStore for our CA...\");\n     var keyStoreType = KeyStore.getDefaultType();\n     var keyStore = KeyStore.getInstance(keyStoreType);\n     keyStore.load(null, null);\n     keyStore.setCertificateEntry(\"ca\", ca);\n     \n     // Create a TrustManager that trusts the CAs in our KeyStore\n     console.log(\"[+] Creating a TrustManager that trusts the CA in our KeyStore...\");\n     var tmfAlgorithm = TrustManagerFactory.getDefaultAlgorithm();\n     var tmf = TrustManagerFactory.getInstance(tmfAlgorithm);\n     tmf.init(keyStore);\n     console.log(\"[+] Our TrustManager is ready...\");\n\n     console.log(\"[+] Hijacking SSLContext methods now...\")\n     console.log(\"[-] Waiting for the app to invoke SSLContext.init()...\")\n\n     SSLContext.init.overload(\"[Ljavax.net.ssl.KeyManager;\", \"[Ljavax.net.ssl.TrustManager;\", \"java.security.SecureRandom\").implementation = function(a,b,c) {\n         console.log(\"[o] App invoked javax.net.ssl.SSLContext.init...\");\n         SSLContext.init.overload(\"[Ljavax.net.ssl.KeyManager;\", \"[Ljavax.net.ssl.TrustManager;\", \"java.security.SecureRandom\").call(this, a, tmf.getTrustManagers(), c);\n         console.log(\"[+] SSLContext initialized with our custom TrustManager!\");\n     }\n });\n},0);\n\n```\n```\n adb shell getprop ro.product.cpu.abi\n\n```\n```\n $ adb push frida-server /data/local/tmp\n $ adb shell chmod 777 /data/local/tmp/frida-server\n $ adb push cacert.der /data/local/tmp/cert-der.crt\n $ adb push fridascript.js /data/local/tmp\n\n```\n```\n $ adb shell\n $ su\n $ /data/local/tmp/frida-server &\n\n```\n```\n  $ frida-ps -U\n  $ frida-ps -aU | grep -i \"app-name\"\n\n```\n```\n $ frida -U -f com.app-name.android -l ./fridascript.js\n\n```\nHere is output,\n\n```\n $  frida -U -f <app-name> -l ./fridascript.js \n     ____\n    / _  |   Frida 16.0.11 - A world-class dynamic instrumentation toolkit\n   | (_| |\n    > _  |   Commands:\n   /_/ |_|       help      -> Displays the help system\n   . . . .       object?   -> Display information about 'object'\n   . . . .       exit/quit -> Exit\n   . . . .\n   . . . .   More info at https://frida.re/docs/home/\n   . . . .\n   . . . .   Connected to Galaxy S4 (id=192.xxx.xx.xxx:5555)\nSpawned `<app-name>`. Resuming main thread!                  \n[Galaxy S4::<app-name> ]->\n[.] Cert Pinning Bypass/Re-Pinning\n[+] Loading our CA...\n[o] Our CA Info: O=mitmproxy, CN=mitmproxy\n[+] Creating a KeyStore for our CA...\n[+] Creating a TrustManager that trusts the CA in our KeyStore...\n[+] Our TrustManager is ready...\n[+] Hijacking SSLContext methods now...\n[-] Waiting for the app to invoke SSLContext.init()...\n\n```\nThe Frida keeps waiting for the SSL context. I did clicked buttons on the app to invoke APIs but did not get any response. Could you please help me to watch the network traffic from android application. Really looking forward to hear from you guys.\n\n",
  "votes": "1",
  "answers": 0,
  "views": "589",
  "tags": [
    "android",
    "frida",
    "sniffing",
    "api-reversing",
    "proxy"
  ],
  "user": "suplesh",
  "time": "Apr 3, 2023 at 5:54",
  "comments": [
    {
      "user": "Robert",
      "text": "Please do not post terminal output as screen shot that makes it really hard to read. As you already have frida-server running you want to take a look onto the tool objection for the PC side. It includes e.g. a good anti-pinning Frida script. May be it works better than the script you have.",
      "time": null
    },
    {
      "user": "suplesh",
      "text": "Hi @Robert thanks for the suggestion. I tried with objection. $ objection -g <app-name com.xx.xx> explore then $ android sslpinning disable also $ android root disable . Now I can intercept request for login into app but not able log in . It fails with message 'You could not login at this time. please try again' . May be the app have some mechanism to identify such activities. How should I proceed?",
      "time": null
    },
    {
      "user": "Robert",
      "text": "Check the network traffic if the error comes from the server. If not decompile the app and try to understand the reasons why the error is displayed. Depending on how the app has been implemented that can get pretty hard and consume a lot of time even if you are skilled in Android/Java reversing. I hope for you that your \"enemy\" is not too hard...",
      "time": null
    },
    {
      "user": "Usama Awan",
      "text": "Can i bypass Facebook ssl pinning using frida?",
      "time": null
    }
  ],
  "answers_data": []
}