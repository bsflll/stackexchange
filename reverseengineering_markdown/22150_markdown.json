{
  "title": "Is there a way to show exceptions handlers in Hex-Rays decompiler output?",
  "link": "https://reverseengineering.stackexchange.com/questions/22150/is-there-a-way-to-show-exceptions-handlers-in-hex-rays-decompiler-output",
  "content": "Is there a way to show these exception handlers in the decompiled code?\n\n\n\nI can't tell that a block is in a __try block without looking into the disassembly.\n\n```\n__int64 __fastcall NtDCompositionGetBatchId(int a1, unsigned int a2, _DWORD *a3)\n{\n  _DWORD *v3; // r14\n  __int64 v4; // r8\n  int v5; // er13\n  __int64 v6; // rcx\n  _DWORD *v7; // rdx\n  _DWORD *v8; // rdi\n  signed int v9; // esi\n  __int64 v10; // rbx\n  __int64 *v11; // r15\n  __int64 v12; // rax\n  struct _ERESOURCE *v13; // rbx\n  __int64 v14; // rcx\n  __int64 v15; // rax\n  struct _ERESOURCE *v16; // rdi\n  int v17; // er12\n  __int64 v19; // [rsp+38h] [rbp-50h]\n  int v20; // [rsp+44h] [rbp-44h]\n  unsigned int v21; // [rsp+98h] [rbp+10h]\n\n  v21 = a2;\n  v3 = a3;\n  v4 = a2;\n  v5 = a1;\n  if ( !v3 )\n    return (unsigned int)-1073741811;\n  v6 = *(_QWORD *)MmUserProbeAddress;\n  v7 = v3;\n  if ( (unsigned __int64)v3 >= *(_QWORD *)MmUserProbeAddress )\n    v7 = *(_DWORD **)MmUserProbeAddress;\n  *v7 = *v7;\n  v8 = 0i64;\n  v9 = 0;\n  v10 = 0i64;\n  v11 = 0i64;\n  v12 = PsGetCurrentProcessWin32Process(v6, v7, v4);\n  if ( v12 )\n    v11 = *(__int64 **)(v12 + 256);\n  if ( v11 )\n  {\n    v13 = (struct _ERESOURCE *)v11[1];\n    KeEnterCriticalRegion();\n    ExAcquireResourceExclusiveLite(v13, 1u);\n    v14 = *v11;\n    v10 = 0i64;\n    LODWORD(v19) = v5;\n    *(__int64 *)((char *)&v19 + 4) = 0i64;\n    v20 = 0;\n    v15 = RtlLookupElementGenericTable(v14, &v19);\n    if ( v15 )\n      v10 = *(_QWORD *)(v15 + 8);\n    if ( v10 )\n    {\n      _InterlockedIncrement((volatile signed __int32 *)(v10 + 8));\n      v8 = 0i64;\n    }\n    else\n    {\n      v9 = -1073741790;\n    }\n    ExReleaseResourceLite((PERESOURCE)v11[1]);\n    KeLeaveCriticalRegion();\n  }\n  else\n  {\n    v9 = -1073741823;\n  }\n  if ( v10 )\n  {\n    v16 = *(struct _ERESOURCE **)(v10 + 32);\n    KeEnterCriticalRegion();\n    ExAcquireResourceExclusiveLite(v16, 1u);\n    v8 = (_DWORD *)v10;\n  }\n  if ( v9 >= 0 )\n  {\n    if ( (*(unsigned int (__fastcall **)(_DWORD *))(*(_QWORD *)v8 + 8i64))(v8) == 1 )\n      goto LABEL_16;\n    v9 = -1073741811;\n    (**(void (__fastcall ***)(_DWORD *))v8)(v8);\n  }\n  v8 = 0i64;\nLABEL_16:\n  if ( v9 >= 0 )\n  {\n    if ( v21 == 2 )\n    {\n      v17 = v8[96];\n    }\n    else if ( v21 )\n    {\n      if ( v21 == 1 )\n        v17 = v8[95];\n      else\n        v17 = 0;\n    }\n    else\n    {\n      v17 = v8[94];\n    }\n    (**(void (__fastcall ***)(_DWORD *))v8)(v8);\n    if ( v9 >= 0 )\n      *v3 = v17;\n  }\n  return (unsigned int)v9;\n}\n\n```\n",
  "votes": "2",
  "answers": 1,
  "views": "1k",
  "tags": [
    "ida",
    "hexrays",
    "decompiler",
    "exception",
    "seh"
  ],
  "user": "user6026299",
  "time": "Sep 18, 2019 at 21:48",
  "comments": [],
  "answers_data": [
    {
      "content": "The Hex-Rays decompiler does not support decompiling exception handling code:\n\n(as of version 7.3.181105)\n\n",
      "votes": "0",
      "user": "Igor Skochinsky",
      "time": "Sep 18, 2019 at 17:24",
      "is_accepted": true,
      "comments": []
    }
  ]
}