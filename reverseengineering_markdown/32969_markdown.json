{
  "title": "Help reversing Xilinx firmware",
  "link": "https://reverseengineering.stackexchange.com/questions/32969/help-reversing-xilinx-firmware",
  "content": "I have a binary file which can be flashed onto a FPGA board\nThat being said, I am trying to reverse this firmware to understand it and just as learning experience\n\nAfter running binwalk;\n\n```\nDECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n44            0x2C            Xilinx Virtex/Spartan FPGA bitstream dummy + sync word\n533271        0x82317         Intel x86 or x64 microcode, sig 0x00011020, pf_mask 0x2000420, 2001-11-03, rev 0x0012, size 744\n1195942       0x123FA6        LZMA compressed data, properties: 0x60, dictionary size: 115267128 bytes, uncompressed size: 64 bytes\n1420056       0x15AB18        Intel x86 or x64 microcode, sig 0x00104400, pf_mask 0x40016010, 2022-18-01, rev 0x-feafe14, size 66666\n1564327       0x17DEA7        LZMA compressed data, properties: 0x48, dictionary size: 1157672 bytes, uncompressed size: 88 bytes\n\n```\nAfter running binwalk -E; I see that the entropy averages around 0.5 (min 0.2, max 0.7) and it fluctuates up and down.\nAfter running binwalk -Me; I get 4 files extracted\n\n```\n- 96AF72\n- 96AF72.7z\n- 56CD18\n- 56CD18.7z\n\n```\nEvery tutorial I've seen, there is an extracted subdirectory where they can ls and see information, however this is not my case\nI've tried opening the 7z files with an archiver to no avail\nWhat should I deduce from the information I'm presented with and what would be the next steps at reversing this firmware\n\nI'm new to reverse engineering so any help would mean a lot\n\n",
  "votes": "0",
  "answers": 0,
  "views": "69",
  "tags": [
    "binary",
    "firmware-analysis",
    "fpga"
  ],
  "user": "Dennis Solomon",
  "time": "May 15, 2024 at 17:22",
  "comments": [],
  "answers_data": []
}