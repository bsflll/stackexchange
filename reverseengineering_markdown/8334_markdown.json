{
  "title": "cost, time and tools had Google reverse-engineered Java packages? [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/8334/cost-time-and-tools-had-google-reverse-engineered-java-packages",
  "content": "In the context of Oracle vs. Google:\n\npage 48 ORACLE AMERICA , INC . v. GOOGLE INC .\n\nMy question is, had Google, or, were to Google to reverse engineer Oracle's Java packages:\n\nWhat tools would Google have used?\nHow long would it have taken, approximately?\nWhat would've been the estimated cost?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "303",
  "tags": [
    "disassembly",
    "android",
    "java",
    "api",
    "dalvik"
  ],
  "user": "Thufir",
  "time": "10 years ago",
  "comments": [
    {
      "user": "joxeankoret",
      "text": "As far as I know, the source code of Java is freely available.",
      "time": null
    },
    {
      "user": "Thufir",
      "text": "@joxeankoret yes, it is..but there's a licensing agreement.  So, I really, really, don't want to troll, that's not the intent.  It's a very narrow technical question.  I can put the question in context of appeals court decision, but that's wayyy off topic..",
      "time": null
    },
    {
      "user": "Guntram Blohm",
      "text": "Reading publicly available source code doesn't count as reverse engineering. So there was no reason for them to reverse engineer anything. Now, IF they had had only the .class files, they would have had to use a java decompiler, possibly fix decompiler errors, annotate the sources, do some optimizations, whatever. But there's no serious way to guesstimate timeframe and cost - running something like jd-gui over the java classes cost an hour. Cleaning the source code and assigning meaningful comments costs months.",
      "time": null
    },
    {
      "user": "Thufir",
      "text": "@GuntramBlohm the reason to reverse engineer is because OpenJDK is under the GPL; Google uses the ASL, instead.",
      "time": null
    },
    {
      "user": "Guntram Blohm",
      "text": "License issues can be a reason to re-engineer something (build a new software from scratch that behaves like the original, but doesn't share code with the original). This something different from reverse-enigneering, (investigate an implementation to find out how it works). Google re-engineered Java, but they didnt - and didn't have to - reverse-enigneer Java.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "As I understand it, they didn't reverse engineer anything. They wrote an independent implementation based on reading the documentation of the APIs. Oracle's contention was that simply having the same method names in the APIs was a copyright violation, which is obviously silly.\n\n",
      "votes": "3",
      "user": "Antimony",
      "time": "Feb 25, 2015 at 16:01",
      "is_accepted": false,
      "comments": [
        {
          "user": "Thufir",
          "text": "Agreed, they didn't reverse engineer.  The question is hypothetical:  \"what if?\"  What I'm asking is, and I think Guntram gave most of the answer, is that they would've/could've done the reverse engineering with jd-gui, and, based on his estimate, it would've meant months of delay.",
          "time": null
        },
        {
          "user": "Antimony",
          "text": "Why would do you anything with jd-gui? At least use a real decompiler like procyon.",
          "time": null
        },
        {
          "user": "Thufir",
          "text": "sure, I just asking, in general, what tools would be involved and, just to estimate, the cost and time involved to actually reverse engineer on this scale.",
          "time": null
        }
      ]
    }
  ]
}