{
  "title": "Does anyone recognize this keyboard encoding scheme?",
  "link": "https://reverseengineering.stackexchange.com/questions/8293/does-anyone-recognize-this-keyboard-encoding-scheme",
  "content": "I am finalizing the reverse-engineering of a linux driver for the Perixx MX-2000 IIB mouse. One of the features the mouse has is arbitrary button mapping. I can assign a button to produce various keys or mouse buttons. I have recorded a few button assignments available in the Windows driver, and figured out a few myself, but there doesn't seem to be a discernible (to me) pattern to map the whole address space.\n\nThe keys behave like this: Two bytes control a particular mouse button. I have learned a few keys and modifiers, and will post below. Setting the mouse button to the hex value gives me keyboard output when clicked. \n\nkeyboard output | hex value\na | 0x0400\nb | 0x0500\nc | 0x0600\n...\nz | 0x1D00\n1 | 0x1E00\n2 | 0x1F00\n...\n9 | 0x2600\n0 | 0x2700\nreturn | 0x2800\nesc | 0x2900\nbackspace | 0x2A00\ntab | 0x2B00\nspace | 0x2C00\n...\nVolume Up | 0x8000 (XF86AudioRaiseVolume)\nVolume Down | 0x8100 (XF86AudioLowerVolume)\n...  \n\nI've mapped through 0x8A00 but will spare you the whole table. The interesting things are that thing like XF86 commands appear pretty early, like in 0x6F00 is XF86AudioMicMute, or 0x6600 is the power off key.\n\nAs for the least significant byte, part of that is modifiers, applied as a mask. Ctl is (1 << 0), shift is (1 << 1), alt is (1 << 2) and super/meta/windows is (1<<3). So this way, shift+a (capital A) is 0x0402. Ctl+Alt+a would be 0x0405. All four modifiers give you 0x0F for the least sig. byte. Playing around with the high nybble of the LSB, say with values like 0x0440 gives me more keys, like XF86Mute. So it seems the address space is massive.\n\nOn top of this, there are some keys from the windows driver that presented as an entirely different scheme.\n\nOutput | hex value\naMouse Scroll up | 0x0143\nMouse Scroll down | 0xFF43\nWWW Search | 0x2122\nWWW Back | 0x2422\nWWW Forward | 0x2522\nEmail | 0x8A21\nInternet Expl Back | 0x8842 (presents as mouse button 8 in X11)\nIE Forward | 0x9042 (mouse button 9)\nCalculator | 0x9221\nMy Computer | 0x9421\nMute | 0xE220\nVolume Up | 0xE920\nVolume Down | 0xEA20 \n\nAnd a few mouse buttons:\n\noutput | hex\nLeft Click | 0x8142\nRight Click | 0x8242\nWheel Click | 0x8442 \n\nand finally, these are internal mouse commands. They don't register any events on my linux machine, but do change things in the mouse's internal settings\n\naction | hex\n\nCycle DPI setting | 0x034A\nDPI increase | 0x014A\nDPI decrease | 0x004A\nCycle mouse profile | 0x074A\nProfile Up | 0x054A\nProfile Down | 0x044A \n\nAnd finally there is a special set that looks like 0x0a88 that point internally to macro memory.\n\nI can't find any encoding schemes or keyboard mappings that might match this. Alphabetical keys? And If you notice, volume up is both 0x8000 and 0xE920 while vol down is both 0x8100 and 0xEA20. So somewhat of a light at the end of the tunnel that there is a consistent distance between those. \n\nBut really, I can't figure out a standard mapping this matches. Or any way to figure out all the keys without manually fiddling with the memory and looping through 0x0000 to 0xFFFF and clicking with xev each time.\n\nThoughts? is any of this familiar? or other patterns spotted?\n\nedit: All key information I've mapped so far is in this gist including 0x0000 through 0xFF00 (leaving LSByte 0x00). So there is still a massive address space left. And it still makes no sense to me with the extra keys from the windows driver like 0x9421 = XF86Explorer\n\n",
  "votes": "4",
  "answers": 1,
  "views": "334",
  "tags": [
    "encodings",
    "driver"
  ],
  "user": "Dan P",
  "time": "Feb 5, 2019 at 9:06",
  "comments": [],
  "answers_data": [
    {
      "content": "Those are 16-bit USB keyboard/Keypad scan codes. Please see Keyboard Scan Code Specification for details. Appendix C contains the complete mapping \n\n",
      "votes": "3",
      "user": "Lorem Ipsum",
      "time": "Feb 22, 2015 at 21:24",
      "is_accepted": true,
      "comments": []
    }
  ]
}