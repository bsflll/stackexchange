{
  "title": "IdaPython aob search and rename example",
  "link": "https://reverseengineering.stackexchange.com/questions/21513/idapython-aob-search-and-rename-example",
  "content": "Iv'e never used python before and in looking at other example I can't find what I'm looking for exactly so I have come here to humbly ask for an example script if anyone could be so kind, I am trying to simply make a table of function names and their corresponding sig and then I'd like to run the script in ida and have it search for the aob and if found rename that function to the sigs name and if not found just print that it wasn't found. I have coded in lua an exact replica of what I am trying to accomplish. Thanks for your time!\n\n```\nlocal sigs = {\n    [\"func1\"] = \"ff ff ff ff ff ff ff\",\n    [\"func2\"] = \"ff ff ff ff ff ff ff\",\n    [\"func3\"] = \"ff ff ff ff ff ff ff\",\n    [\"func4\"] = \"ff ff ff ff ff ff ff\"\n}\n\nfor name, sig in pairs(sigs) do\n    local address = searchaob(sig)\n    if address then\n        rename(address, name)\n    else\n        print(name .. \" not found\")\n    end\nend\n\n```\n",
  "votes": "0",
  "answers": 1,
  "views": "736",
  "tags": [
    "ida",
    "idapython",
    "python"
  ],
  "user": "Icesythe7",
  "time": "Jun 19, 2019 at 6:27",
  "comments": [
    {
      "user": "w s",
      "text": "Do I understand correctly that by aob you mean array of bytes and by sig you mean some specific array of bytes that should identify a function ?",
      "time": null
    },
    {
      "user": "Icesythe7",
      "text": "@w s yes sir that is correct.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "You can do it pretty easily with find_binary and set_name, just a matter of iterating over your patterns and searching for them. IDA supports wildcards in binary patterns too.\n\nThis should give you a good idea on how to do it:\n\n```\npatterns = {\n    \"fn1\": \"AA BB CC DD EE ? ? ?\",\n    \"fn2\": \"BB CC DD EE FF ? ? ? AA\",\n    ...\n}\n\nfor name, pattern in patterns.items():\n    ea = idc.find_binary(0, ida_search.SEARCH_DOWN, pattern)\n\n    if ea == ida_idaapi.BADADDR:\n        # not found\n        break\n\n    idc.set_name(ea, name)\n\n```\n",
      "votes": "2",
      "user": "Adam",
      "time": "Jun 27, 2019 at 5:30",
      "is_accepted": true,
      "comments": []
    }
  ]
}