{
  "title": "DOS interrupt problem with int 21h 0ah",
  "link": "https://reverseengineering.stackexchange.com/questions/11399/dos-interrupt-problem-with-int-21h-0ah",
  "content": "I have this assembly code that reads a string of 120 bytes. If I try to fill the buffer by pressing a key until it stops writing, the enter key doesn't work. I counted the characters and I found that I have written 121 characters. \n\nIs this normal? Is there a way to avoid it? Another interruption perhaps?\n\nThe code:\n\n```\n.model small\n.stack 100h\n.386\n.data \n    MSG DB \"Please give me the string (max 120 chars): \", 10, 13, \"$\"\n    Sentence1 DB 121,?,121 dup(0)\n.code\nstart:\n    mov ax, @data\n    mov ds, ax\n\n    mov ah,09h\n    lea dx,A\n    int 21h\n\n    xor ax,ax        \n    mov dx, offset Sentence1\n    mov ah, 0Ah\n    int 21h\n    xor bx,bx\n    mov bl, Sentence1[1]\n    mov Sentence1[bx+2], '$' \n\n    mov ah, 4ch\n    int 21h\nend start  \n\n```\nAn example (imagine that is a 11 bytes buffer and not 121 bytes, for brevity):\n\n```\nPlease give me the string (max 10 chars):\nAAAAAAAAAAA\n\\_________/\n     |\n    11 As\n\n```\nIf I press Enter at this point it doesn't work, but if I delete an A and press Enter, then it works.\n\nI use Tasm and Tlink for compiling.\n\nRegards.\n\n[Edit] A typo.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "2k",
  "tags": [
    "assembly",
    "dos"
  ],
  "user": "Kuro",
  "time": "Nov 25, 2015 at 12:25",
  "comments": [],
  "answers_data": [
    {
      "content": "Yes.\n\nYou can use Ctrl+C or Ctrl+Break to exit buffered-input mode (this results in an INT 23h).\n\nThere are several DOS interrupt services that you could use to read input, but INT 21h/AH=01h is probably the next best option.\n\n",
      "votes": "1",
      "user": "Jason Geffner",
      "time": "Nov 25, 2015 at 15:54",
      "is_accepted": false,
      "comments": [
        {
          "user": "Jason Geffner",
          "text": "And if you want to see the actual code behind INT 21h/AH=0Ah, see google.com/webhp?q=%22cpmio.asm%22",
          "time": null
        },
        {
          "user": "peter ferrie",
          "text": "see reverseengineering.stackexchange.com/questions/8911/â€¦ for the explanation - the enter key requires its own buffer slot.  If you fill the buffer completely, then you can't press enter.",
          "time": null
        },
        {
          "user": "Kuro",
          "text": "Thank you for your answers. Now I have it clear. I tried with Emu8086 and it worked the another way around. Seems that is because of how dosbox emulates.",
          "time": null
        }
      ]
    }
  ]
}