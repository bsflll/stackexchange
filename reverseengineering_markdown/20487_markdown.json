{
  "title": "Process Immediately Killed",
  "link": "https://reverseengineering.stackexchange.com/questions/20487/process-immediately-killed",
  "content": "I'm trying to reverse an ARM executable. It's for an embedded system, but I don't have any details about the normally targeted environment. \n\nHere's what file shows: ELF 32-bit LSB executable, ARM, EABI4 version 1 (SYSV), statically linked, stripped\n\nI've tried running it on Linux using qemu and the process immediately terminates with the message \"Killed\". Running strace ./executable returns this:\n\nexecve(\"./executable\", [\"./executable\"], [/*13 vars */] <unfinished ...>\n+++ killed by SIGKILL +++ \nKilled\n\nI'm using the Debian Wheezy image from here: https://people.debian.org/~aurel32/qemu/armel/\n\nAny ideas why this is happening?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "175",
  "tags": [
    "linux",
    "arm",
    "elf"
  ],
  "user": "SArcher",
  "time": "Jan 28, 2019 at 1:11",
  "comments": [
    {
      "user": "0xec",
      "text": "file doesn't always give the correct output. Try running readelf -A to know specifically the version of ARM.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The process may send itself (or it's child processes) the SIGTERM signal as part of an anti-debugging trick. Hunting for that will require you to search for signal-sending APIs like kill and how/when they're being used by the application.\n\nA more simple solution, that is not necessarily RE related, could be that the process is killed by the OOM killer.\n\nTo test that, you can run mesg | egrep -i “killed process” inside the emulated machine.\n\nIf that's the case, you can easily disable it (add vm.oom-kill = 0 in /etc/sysctl.conf).\n\n",
      "votes": "3",
      "user": "NirIzr",
      "time": "Jan 28, 2019 at 11:28",
      "is_accepted": false,
      "comments": []
    }
  ]
}