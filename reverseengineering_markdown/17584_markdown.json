{
  "title": "mov dword ptr[eax], 1 is invalid in Hopper Disassembler?",
  "link": "https://reverseengineering.stackexchange.com/questions/17584/mov-dword-ptreax-1-is-invalid-in-hopper-disassembler",
  "content": "I'm trying to Patch a 32bit ELF file with Hopper disassembler\n\nThe ASM code I use is like the following\n\n```\nmov dword ptr [eax], 15\n\n```\nBut when I enter that expression, Hopper consider it as invalid? It works perfectly in IDA and I'm not sure why\n\n\n\nAny ideas?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "307",
  "tags": [
    "hopper"
  ],
  "user": "daisy",
  "time": "Jan 26, 2018 at 6:21",
  "comments": [
    {
      "user": "daisy",
      "text": "@blabb It's code section. mov dword ptr ds:[eax], 15 does not work either",
      "time": null
    },
    {
      "user": "Paweł Łukasik",
      "text": "I've just checked Hopper v4 and have no issues with assembling this instruction. There has to be something else. Can you post the binary?",
      "time": null
    },
    {
      "user": "daisy",
      "text": "@PawełŁukasik I'm running V3 version .. Guess that's the problem",
      "time": null
    },
    {
      "user": "0xC0000022L",
      "text": "@daisy try get in touch with the author. Last few times I contacted him, he was very responsive.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I've checked version v3 and yes, it does not work with such instruction and it does work in v4. There are few bug reports that might be related to such issues.\n\nUnfortunately I couldn't find if there is any workaround for this apart from installing a latest one.\n\n",
      "votes": "2",
      "user": "Paweł Łukasik",
      "time": "Mar 4, 2018 at 15:54",
      "is_accepted": true,
      "comments": []
    }
  ]
}