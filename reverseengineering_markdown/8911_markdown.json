{
  "title": "Why int 21h/ ah=0Ah doesn't work in emu86 [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/8911/why-int-21h-ah-0ah-doesnt-work-in-emu86",
  "content": "I've written a simple code to get a student information like name and ID, but in the code when I want to get input the interrupt doesn't work I mean int 21h/ah=0Ah\nIt pauses when the interrupt is reached but just accepts Enter from keyboard not any number or characters, here my code :\n\n```\nstack segment \n\n    dw 128 dup (?)\n\nstack ends\n\ndata segment \n\n\n    name0 db 30,?,30 dup('$')\n    id0 db 10,?,10 dup('$') \n\n    menu db \"1-Enter student name:\",0Dh,0Ah\n    db \"2-Enter student ID:\",0Dh,0Ah\n    db \"3-Printing the student name and ID:\",0Dh,0Ah,\n    db \"4-Exit\",0Dh,0Ah\n    db \"Please Select :\",'$'\n\n\n\n    selection db 1,?,4\n\n    show0 db \"(s)he is \",'$'\n    show1 db \" his/her ID \",'$'\n\n   ; address1 db 2 dup(?)\n   ; address2 db 2 dup(?)\n\n\n\ndata ends    \n\n\ncode segment\nstart:\n; set segment registers:\n    mov ax, data\n    mov ds, ax\n    ;mov ax, data1\n    mov es, ax\n\n    push bp\n    mov bp,sp              \n\n    xor cx,cx\n\nloop1:\n    ;cx is reserved\n\n    push offset menu\n    call print\n\n    lea dx,selection   \n    mov ah,0Ah\n    int 21h         ; <----- doesn't work \n\n    lea bx,selection\n    mov cl,[bx+2]\n\n    cmp cl,1\n    je getname_scope\n\n    cmp cl,2\n    je getid_scope\n\n    cmp cl,3\n    je showinfo\n\n\nret0:           \n\n    cmp cl,4\n    jne loop1\n    jmp exit\n\n            getname_scope:\n\n                mov bx, offset name0\n                push bx\n                call Get\n\n            jmp ret0\n\n            getid_scope:\n\n                lea bx,id0\n                push bx\n                call Get    \n\n            jmp ret0   \n\n            showinfo:\n\n                push offset show0\n                call print\n\n                push offset name0+2\n                call print\n\n                push offset show1\n                call print \n\n                push offset id0+2\n                call print\n\n\n\n            jmp ret0\n\nexit:   \n\n    ; wait for any key....    \n    mov ah, 1\n    int 21h\n\n    pop bp\n\n    mov ax, 4c00h ; exit to operating system.\n    int 21h    \n\ncode ends\n\n\nproc Get near\n\n    push bp\n    mov bp,sp\n\n    lea dx,[bp+4]\n    mov ah,0Ah\n    int 21h\n\n\n    pop bp\n    ret\n\nGet endp\n\n\n\nproc print near\n\n    push bp\n    mov bp,sp\n\n    mov dx,[bp+4]\n    mov ah, 9\n    int 21h\n\n    pop bp\n  ret     \n\nend start ; set entry point and stop the assembler.\n\n```\nwhat's wrong with the code ? how to \n\n",
  "votes": "0",
  "answers": 1,
  "views": "978",
  "tags": [
    "assembly"
  ],
  "user": "user314532",
  "time": "9 years ago",
  "comments": [],
  "answers_data": [
    {
      "content": "The problem is in your declaration of \"selection\".  Your buffer is only one character large, which is enough space for only the Enter key.  To accept more characters, you have to increase the size of the buffer.\n\n",
      "votes": "1",
      "user": "peter ferrie",
      "time": "May 16, 2015 at 22:05",
      "is_accepted": false,
      "comments": []
    }
  ]
}