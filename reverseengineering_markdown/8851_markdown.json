{
  "title": "Patching a Mach-O Binary Header to remove a LC_SEGMENT",
  "link": "https://reverseengineering.stackexchange.com/questions/8851/patching-a-mach-o-binary-header-to-remove-a-lc-segment",
  "content": "i have an ARMv7 Mach-O Executable on which I want to patch out a certain segment in the binary header which prevents DYLD injection. \n\nmore information here under point 3. of preventing dyld injection. TL;DR a  __RESTRICT binary header section with a __restrict segment prevents DYLD injection on iOS.\n\nUnfornatunately i'm not sure howto patch the file properly. Do I simply fill the file offset responsible for the LC_SEGMENT with zeros or do I remove it altogether (meaning cutting out and therefore altering file size and probably? breaking offsets)?\n\nThanks in advance\n\nMalte\n\n",
  "votes": "5",
  "answers": 2,
  "views": "2k",
  "tags": [
    "binary-analysis",
    "arm",
    "patching",
    "mach-o"
  ],
  "user": "Malte",
  "time": "May 8, 2015 at 22:07",
  "comments": [],
  "answers_data": [
    {
      "content": "This tool claims it can move and remove load commands. Might be worth a look.\n\n",
      "votes": "2",
      "user": "Timmmm",
      "time": "Mar 5, 2018 at 18:50",
      "is_accepted": false,
      "comments": [
        {
          "user": "neuralmer",
          "text": "The interface for this tool is somewhat clumsy, but I was able to remove a segment, but it does not update \"relocation bytecodes\". In my binary the bytecodes still referenced the removed segment after removal.",
          "time": null
        }
      ]
    },
    {
      "content": "EDIT\nMany years later I finally got a mac and can confirm @igors comments - it does not work for mac (:\nKeeping this here for reference on how to achieve on Linux\n\nStripping a section from an ELF file is easy enough using the 'strip' command in any Linux (I'd bet in OSX too, though I never tried it myself).\n\nJust do:\n\n```\nstrip -R __restrict\n\n```\nIt should do the trick\n\n",
      "votes": "0",
      "user": "Ishay Peled",
      "time": "Sep 4, 2021 at 7:51",
      "is_accepted": false,
      "comments": [
        {
          "user": "Igor Skochinsky",
          "text": "the question is about Mach-O, not ELF. OS X strip does no do section removal.",
          "time": null
        },
        {
          "user": "Ishay Peled",
          "text": "@IgorSkochinsky plain wrong. See man page here (unix.com/man-page/osx/1/strip) and -R parameter here: -R filename \t      Remove the symbol table entries for the global symbols listed  in  filename.   This \t      file  has  the same format as the -s filename option above.  This option is usually \t      used in combination with other options that save some symbols, -S, -x, etc.",
          "time": null
        },
        {
          "user": "Ishay Peled",
          "text": "Also check out the -c flag",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "Just as you quoted,  -R removes symbols, not sections (this is not GNU strip). As for, -c, while it does remove sections, the resulting file can be only used for linking (and you can't specify what to remove). Perhaps I should have said \"does not do user-specified section removal\".",
          "time": null
        },
        {
          "user": "Timmmm",
          "text": "Igor is right, Apple's strip can't remove sections. -R removes symbols and -c removes all sections (if I'm reading it right).",
          "time": null
        }
      ]
    }
  ]
}