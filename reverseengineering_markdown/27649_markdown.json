{
  "title": "Run ntoskrnl.exe with qemu",
  "link": "https://reverseengineering.stackexchange.com/questions/27649/run-ntoskrnl-exe-with-qemu",
  "content": "We can run linux and similar unix kernels uing qemu -kernel parameter. Is there any way to do the same with NT kernel? I could not find a way to test even reactos kernelwith qemu.\n\nAlso can .efi files be run? In that way I can try bootmgr.efi to load ntoskrnl.exe.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "267",
  "tags": [
    "windows",
    "qemu",
    "kernel"
  ],
  "user": "ynidpl",
  "time": "May 9, 2021 at 20:12",
  "comments": [
    {
      "user": "multithr3at3d",
      "text": "I’m voting to close this question because it doesn't seem to specifically concern reverse engineering.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Linux kernel can boot mostly on its own by probing the hardware and using the linked-in drivers. The NT kernel requires an environment such as UEFI or legacy BIOS and relies on it, for example, to load additional drivers. It also expects to be loaded in a certain manner by the pre-loader (winload.efi) while Linux has less strict requirements.\n\nThis is why QEMU can provide built in support for booting Linux - it’s much simpler to implement. For Windows you need to prepare a disk image with the file system and a UEFI environment such as OVMF. The Windows kernel uses registry (BCD - Boot configuration data) for configuration instead of command line arguments so it’s trickier to implement.\n\n",
      "votes": "2",
      "user": "Igor Skochinsky",
      "time": "May 17, 2021 at 11:42",
      "is_accepted": false,
      "comments": []
    }
  ]
}