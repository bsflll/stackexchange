{
  "title": "what do these assembly code doing?",
  "link": "https://reverseengineering.stackexchange.com/questions/27694/what-do-these-assembly-code-doing",
  "content": "I tried to reverse engineer an apk app, and it was loading a native code. I have observed that the app was using the native code like this\n\n```\npublic static String v = sUQWWyTBEs().toString().substring(32, 37);\n\n```\nthe disassembled function  sUQWWyTBEs() with Ghidra contained this code:\n\n```\n                             *************************************************************\n                             *                           FUNCTION                          \n                             *************************************************************\n                             undefined  __cdecl  Myapp_sUQWWyTBEs()\n             undefined         w0:1           <RETURN>\n             longlong *        x0:8           param_1\n                             Myapp_sUQWWyTBEs XREF[2]:     Entry Point (*) , 00101350   \n        00100e44 08  00  40  f9    ldr        x8, [param_1 ]\n        00100e48 01  00  00  b0    adrp       x1, s_c7a584936712f32773d3d0a_00101000           ; = \"c7a584936712f32773d3d0a\"\n        00100e4c 21  60  08  91    add        x1, x1, #0x218\n        00100e50 02  9d  42  f9    ldr        x2, [x8, #0x538 ]\n        00100e54 40  00  1f  d6    br         x2\n\n```\nI don't have much experience on assembly code. my question what these code is doing? in respect to the code what the above variable v is stored?\n\n",
  "votes": "-1",
  "answers": 1,
  "views": "174",
  "tags": [
    "android",
    "java",
    "assembly"
  ],
  "user": "hanan",
  "time": "May 21, 2021 at 5:35",
  "comments": [
    {
      "user": "hft",
      "text": "Maybe this should be migrated to the Reverse Engineering Stack Exchange?",
      "time": null
    },
    {
      "user": "hanan",
      "text": "yeah I realized later, That I posted in security.stackexchange but how can I migrate it though?",
      "time": null
    },
    {
      "user": "hft",
      "text": "I flagged it for moderator intervention. The mods migrated it already.",
      "time": null
    },
    {
      "user": "hft",
      "text": "You might be getting down votes on this SE because you didn't put much effort into figuring it out yourself. Here is a tutorial: azeria-labs.com/writing-arm-assembly-part-1",
      "time": null
    },
    {
      "user": "hft",
      "text": "You can also access official documentation regarding ARM instructions here: developer.arm.com",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "This load the value at memory address param_1 into register x8.\n\nThis sets register x1 to 0x101000.\n\nThis adds 0x218 to x1, so sets x1 to 0x101218.\n\nThis loads the value at x8 + 0x538 into x2.\n\nThis branches to the memory address stored in x2.\n\nSo, unless I am missing something, it looks like there may not be enough information to say what happens unless you provide the additional disassembly at x2. It might be easier to figure out if you can step through the code with a debugger rather than via static analysis.\n\n",
      "votes": "3",
      "user": "hft",
      "time": "May 21, 2021 at 6:07",
      "is_accepted": false,
      "comments": [
        {
          "user": "hanan",
          "text": "\"So, unless I am missing something, it looks like there may not be enough information to say what happens unless you provide the additional disassembly at x2\", I am really don't know much about ghidra, How can I get the additional disassembly at x2? right clicking on it gives me a set of menus, and I dont know which to click. sorry I am noob here. but can you instruct me this? thanks",
          "time": null
        },
        {
          "user": "hft",
          "text": "It's difficult to say without more info. Since the actual value in x2 depends on the value of param_1.",
          "time": null
        }
      ]
    }
  ]
}