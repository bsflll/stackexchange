{
  "title": "IDA Pro - Determine if a function prototype is user-defined",
  "link": "https://reverseengineering.stackexchange.com/questions/33402/ida-pro-determine-if-a-function-prototype-is-user-defined",
  "content": "I'm trying to determine - using IdaPython - if a function prototype is user-defined or have been automatically guessed / defined by IDA (i.e. without specific user interaction).\n\nThe flag is probably available somewhere but I haven't been able to find it, despite multiple tries.\n\nAccording to the documentation for the Functions Window:\n\nFor example (disassembled Windows kernel with PDB), in the Functions window the PsReferenceImpersonationToken function is in bold, and its decompiled code prototype (signature) is in blue:\n\n\n\nOn the other hand, the ObReferenceFileObjectForWrite function is not in bold in the Functions window, and its decompiled function prototype is in yellow:\n\n\n\nWhat I'd like to find - using IdaPython - is that, given a function ea: is the function prototype user-defined or not? (i.e. bold in functions windows and blue in the decompiler).\n\nI've tried using cfunc_t and cfuncptr_t, checking the flags between various functions, but nothing definitive came out of it. Tried also with the vds4.py example (with some modifications) but to no avail.\n\nNote: I'm using IDA Pro 9.0 SP1 and have the x64 decompiler.\n\n",
  "votes": "1",
  "answers": 0,
  "views": "58",
  "tags": [
    "ida",
    "idapython",
    "functions"
  ],
  "user": "Neitsa",
  "time": "Mar 7 at 10:38",
  "comments": [],
  "answers_data": []
}