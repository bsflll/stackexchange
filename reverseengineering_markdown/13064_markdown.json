{
  "title": "Hooking offset from IDA throws Access Violation",
  "link": "https://reverseengineering.stackexchange.com/questions/13064/hooking-offset-from-ida-throws-access-violation",
  "content": "I've been trying to hook a function using Detours 1.5, but when DetourFunction() is called, it throws access violation.\n\nThis is the original function:\n\n```\nint greeter(char *name) {\n    printf_s(\"%s, %s!  \n\", greetings[rand() % ((int) sizeof(greetings) / (int) sizeof(greet_t))], name);\n    int rerun = strcmp(\"Gabriel\", name);\n    if (!rerun) printf_s(\"Have a nice day!  \n\");\n    return rerun;\n}\n\n```\nWith the program compiled and running properly, I used IDA Pro to see the trace and found my function beginning on address 0x004010B0.\nThen I set the variable DWORD orig_greeter = 0x4010B0. And wrote the following code:\n\n```\n#include \"sky.h\"\n\nint myGreeter(char* name);\nint (__cdecl* origGreeter)(char*);\n\nbool __stdcall DllMain(HINSTANCE hInst, DWORD dwReason, LPVOID pvReserved) {\n    if (dwReason == DLL_PROCESS_ATTACH) {\n        // Start Hook Sub-Routine\n        origGreeter = (int (__cdecl*)(char*))DetourFunction((PBYTE)orig_greeter, (PBYTE)myGreeter);\n        origGreeter(\"sir\");\n    }   \n    return true;\n}\n\nint myGreeter(char* name) {\n    printf_s(\"You've been hooked, %s!\", name);\n    return 0;\n}\n\n```\nOnce DetourFunction tries to access the given offset it throws Access Violation and the function is not hooked. What am I missing?\n\n[Edits removed. No relevant for the question]\n\n",
  "votes": "0",
  "answers": 1,
  "views": "316",
  "tags": [
    "function-hooking"
  ],
  "user": "Gabriel Vasconcelos",
  "time": "Jul 17, 2016 at 19:42",
  "comments": [],
  "answers_data": [
    {
      "content": "The problem is that I was considering the base address given by IDA Pro instead of process actual base address.\n\nThe IDA Base was 0x400000, thus the offset really was 0x10B0. Once I updated orig_greeter to this value, I call it as follows.\n\n```\nHMODULE hModule = GetModuleHandle(NULL);\norigGreeter = (int (__cdecl*)(char*))DetourFunction((PBYTE)hModule+orig_greeter, (PBYTE)myGreeter);\n\n```\nThe code itself still doesn't behave as expected, but it detours properly. The callstack showed it called myGreeter when it was supposed to. Therfore, I consider this question answered.\n\n",
      "votes": "1",
      "user": "Gabriel Vasconcelos",
      "time": "Jul 17, 2016 at 19:49",
      "is_accepted": false,
      "comments": []
    }
  ]
}