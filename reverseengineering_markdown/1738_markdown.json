{
  "title": "How can I prevent Immunity Debugger / OllyDbg from breaking on attach?",
  "link": "https://reverseengineering.stackexchange.com/questions/1738/how-can-i-prevent-immunity-debugger-ollydbg-from-breaking-on-attach",
  "content": "When I attach OllyDbg or ImmunityDebugger to a process, it automatically breaks execution. I'm attaching to a user-mode service running as SYSTEM and only need to catch exceptions, so this is not ideal. Is there a way to disable the break-on-attach behaviour?\n\n",
  "votes": "11",
  "answers": 3,
  "views": "15k",
  "tags": [
    "tools",
    "debuggers",
    "ollydbg",
    "immunity-debugger"
  ],
  "user": "Polynomial",
  "time": "Apr 17, 2013 at 3:07",
  "comments": [
    {
      "user": "perror",
      "text": "You would like to attach the debugger to the program and immediately perform a 'continue', is it correct ?",
      "time": null
    },
    {
      "user": "Polynomial",
      "text": "Pretty much. I'd prefer to avoid the breakpoint entirely. I just want the debugger to break if an exception occurs.",
      "time": null
    },
    {
      "user": "Denis Laskov",
      "text": "@Polynomial will anti-debugging techniques be an option as well?",
      "time": null
    },
    {
      "user": "Polynomial",
      "text": "@DenisLaskov An option? I'm not sure I follow.",
      "time": null
    },
    {
      "user": "0xC0000022L",
      "text": "@Polynomial: uhm, why is it harsh? a.) I could just have downvoted and not told you why, so you would have never known b.) downvotes on questions affect your rep (true) but not mine (so even if you checked everyones rep all the time you couldn't tell who downvoted) c.) you can simply edit your question to be less ambiguous and I'll gladly retract my downvote - it may even end up as an upvote. Last but not least, I stand by the downvote and the reason for it. Downvotes on answers affect both (-1 for voter, -2 for person answering), btw. But check out my profile I downvote also answers ;)",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The break on attach is due to the ntdll DbgUiRemoteBreakin and DbgBreakPoint functions being called. If you check the kernel32 DebugActiveProcess function called by the debugger, OllyDbg or ImmunityDebugger, you will see a call to the CreateRemoteThread, CreateRemoteThreadEx, or ZwCreateThreadEx function depending on your OS.\n\nSo, i guess one way to bypass breaking is:\n\nI created an OllyDbg v1.10 plugin which NOPs the INT3 in DbgBreakPoint in the process with the PID you choose. It has only been tested on Windows 7.\n\nPlace SilentAttach.dll in OllyDbg directory, fire OllyDbg, Press Alt+F12, and then enter process Id of the process you want to silently attach to.\n\nN.B.\nSince no break occurs, OllyDbg does not extract many piece of info. e.g. list of loaded module. So, you have to activate the context by something like Alt+E then Alt+C\n\n",
      "votes": "16",
      "user": "Community",
      "time": "Jun 17, 2020 at 9:54",
      "is_accepted": true,
      "comments": [
        {
          "user": "Peter Andersson",
          "text": "This is probably the best solution as it doesn't mess with DbgBreakPoint. Just NOP the call to DbgBreakPoint in DbgUiRemoteBreakin in the process you want to attach to.",
          "time": null
        },
        {
          "user": "Niklas B.",
          "text": "The link to the plugin is dead, any chance of getting it?",
          "time": null
        }
      ]
    },
    {
      "content": "One way to do this is to have an OllyDbg plug-in that performs a\n\nWriteProcessMemory(hDebuggee, GetProcAddress(GetModuleHandle(\"ntdll\"), \"DbgBreakPoint\"), &mynop, 1, NULL)\n\nwhere hDebuggee is the handle for the process being debugged (I believe that OllyDbg has an API for retrieving this value), and mynop is a variable that holds a 0x90 byte (nop instruction).\n\nThat will clear the int3 instruction that is causing the break, allowing the execution to continue immediately.  It's a common anti-debugging trick.\n\n",
      "votes": "8",
      "user": "peter ferrie",
      "time": "Apr 12, 2013 at 15:08",
      "is_accepted": false,
      "comments": [
        {
          "user": "Peter Andersson",
          "text": "I take that back. It was the usual OllyDbg attach freeze bug. This works as intended. Probably the easiest one to implement!",
          "time": null
        }
      ]
    },
    {
      "content": "I don't think this is possible without doing something extremely invasive. Either patching OllyDbg to use an alternative ZwXX/NtXX function which accepts some flags or patching the kernel. The initial break is done by the operating system so that the debugger can gather information about the process it is being attached to.\n\nI haven't verified but my guess is that OllyDbg is calling DebugActiveProcess in order to attach to it. The documentation for it states:\n\nAnd later on\n\n",
      "votes": "6",
      "user": "Peter Andersson",
      "time": "Apr 12, 2013 at 19:07",
      "is_accepted": false,
      "comments": [
        {
          "user": "Polynomial",
          "text": "Bugger. I assume that local kernel debugging on Windows doesn't work the same way?",
          "time": null
        }
      ]
    }
  ]
}