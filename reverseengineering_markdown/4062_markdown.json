{
  "title": "Extracting data from a Program for external use",
  "link": "https://reverseengineering.stackexchange.com/questions/4062/extracting-data-from-a-program-for-external-use",
  "content": "I am looking at basically capturing VU Meter data from an audio recording program, preferably the highest resolution possible, and inputting that data into a circuit to power LED's, respectively.  I am hoping there is a way to \"harness\" this data from the audio program. I've attached a picture of what exactly these look like...\n\nThen, using a AD557 microprocessor (handles 8-bit digital input) can then output my required voltage to drive my external LED VU Meter circuit.\n\nThis is the program I am using (Pro Tools) and the video gives you a visual idea as well.  https://www.youtube.com/watch?v=d5IUWJY9b0Q\n\nAs it stands, there are a few options for getting the metering data from this program. The first, using the HUI protocol via MIDI, does not provide the resolution I, or others are looking for to provide external metering. The second option, is a secure protocol (Eucon) that is only available for developers, and I cannot obtain this. None the less, this above information is not important.\n\nSince I am fairly new to programming, I am asking for help regarding the means to obtain this metering 'data' another way. How would I be able to obtain the raw data of these meters from the program? Is there a specific method I could try? I'm hoping someone could shoot out answers or a straight up resolution to how I could get this data. Hope this clarifies a little.\n\nHope someone can help! Thank You!\n\n \n\n",
  "votes": "3",
  "answers": 2,
  "views": "309",
  "tags": [
    "debuggers"
  ],
  "user": "Scott K",
  "time": "Apr 13, 2014 at 2:54",
  "comments": [],
  "answers_data": [
    {
      "content": "I think what you're after is developing a plugin for protools.  \n\nCheck this site out to get started.  I have no idea what \"Applying to be a plugin developer\" means in the world of ProTools, but the SDK that you'll get access to will likely answer most of your questions.  \n\nFrom a reverse engineering perspective, I'll add to @BraveNewCurrency 's answers and suggest finding out where ProTools stores the *.wav files for each of its tracks, and writing a DSP program to capture what you want.  You didn't specify whether or not the data had to be real-time, so this approach won't work if you need real-time.  \n\nOutside of this, BraveNewCurrency's first answer is the only other option I see.  Reverse-engineering ProTools will likely be quite difficult because there's usually a TON of piracy protection on flagship studio software... Don't know about ProTools, but Cubase has a hardware dongle and emulating that isn't trivial.  \n\nThe problem to solve here is to be able to find where ProTools stores its audio-buffers at runtime and more or less be able to monitor the data.  OR if you can figure out what functions its using to access audio data, hook them perhaps by using Detours.\n\n",
      "votes": "1",
      "user": "avgvstvs",
      "time": "Jun 2, 2014 at 14:20",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "I don't have a real answer, I can think of two possible routes:\n\nDepending on your priorities/skills, #2 may actually be simpler.\n\n",
      "votes": "1",
      "user": "perror",
      "time": "Jun 2, 2014 at 17:04",
      "is_accepted": false,
      "comments": []
    }
  ]
}