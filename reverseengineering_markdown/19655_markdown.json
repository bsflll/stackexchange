{
  "title": "gdb for main and input parameters",
  "link": "https://reverseengineering.stackexchange.com/questions/19655/gdb-for-main-and-input-parameters",
  "content": "I have one elf 32 application and not stripped, I use gdb info functions and it list only the memory address and function name, but there is no function name with \"main\", so any way to find the main function of the program?\n\nthe other problem is when using info functions, it didn't list of the input parameter of each function, if i want to list all input parameter of each function, which command should be use?\n\n",
  "votes": "0",
  "answers": 1,
  "views": "712",
  "tags": [
    "gdb"
  ],
  "user": "Jolin Wong",
  "time": "Oct 18, 2018 at 1:59",
  "comments": [
    {
      "user": "perror",
      "text": "Give, at least, the architecture you target. Saying '32-bit' is not enough!",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The memory address of main() is a parameter of __libc_start_main:\n\n```\nint __libc_start_main(int *(main) (int, char * *, char * *),    <-----pointer to main\n                      int argc, \n                      char * * ubp_av, \n                      void (*init) (void), \n                      void (*fini) (void), \n                      void (*rtld_fini) (void), \n                      void (* stack_end));\n\n```\nThis means we can find the address of main() when __libc_start_main() is called in the _start routine (from crt1.o). \n\nIn x86 environments, the memory address of main() will be pushed onto the stack prior to calling __libc_start_main(), but the way arguments are passed to functions depend on the calling convention implemented by the compiler, and this can vary across compiler toolchains and CPU architectures (arguments may be passed in registers instead, for example). You did not give any information regarding the CPU family the object code in your ELF binary targets (beyond the fact that the architecture is 32-bit) or the compiler used to generate the binary, or any sample disassembly, so I can't be more specific.\n\nAs far as I know, information about function parameters is not stored in the symbol table, so there is no command to list them. \n\nAt runtime, you may use info args and info locals to inspect the values of function arguments and local variables if your binary has been compiled with the -g flag.\n\n",
      "votes": "1",
      "user": "julian",
      "time": "Oct 18, 2018 at 3:23",
      "is_accepted": false,
      "comments": []
    }
  ]
}