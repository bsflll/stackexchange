{
  "title": "Compile Hex-Rays code",
  "link": "https://reverseengineering.stackexchange.com/questions/13855/compile-hex-rays-code",
  "content": "I'm aware, that Hex-Rays provides pseudocode, which is not supposed to be compiled, but I'm trying to do it.\n\nSo far I stopped on instructions like that:\n\n```\nchar (__usercall *__fastcall sub_947770(__int64 a1, __int64 a2))@<al>(__int64 a1@<rdx>, __m128i *a2@<xmm6>);\n\n```\nThose @< a1 > a1@< rdx >, etc are not recognizable by MSVC 2015 compiler. Is  there any way to compile this code or to setup decompilation options to generate something more compiler-friendly?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "649",
  "tags": [
    "decompilation",
    "hexrays"
  ],
  "user": "yudjin",
  "time": "Nov 3, 2016 at 8:42",
  "comments": [],
  "answers_data": [
    {
      "content": "Try changing this line to:\n\nchar * FASTCALL sub_947770(int64 a1, int64 a2)\n\n",
      "votes": "1",
      "user": "malikcjm",
      "time": "Nov 3, 2016 at 9:03",
      "is_accepted": true,
      "comments": [
        {
          "user": "yudjin",
          "text": "Would be nice to understand, what's hidden under this HexRays notation. Do you have some links?",
          "time": null
        },
        {
          "user": "Willem Hengeveld",
          "text": "hex-rays.com/products/ida/support/idadoc/1361.shtml",
          "time": null
        }
      ]
    }
  ]
}