{
  "title": "Does empty enumeration in C structure creates unnamed field?",
  "link": "https://reverseengineering.stackexchange.com/questions/12423/does-empty-enumeration-in-c-structure-creates-unnamed-field",
  "content": "I was parsing some modified C++ headers with IDA when I come to some strange behavior. Imagine we have a structure like this (stored in a C header):\n\n```\nstruct S\n{\n    enum {EN0, EN1};\n\n    int m1;\n} ;\n\n```\nWhen I parse it with IDA Pro the created type seems to threat the first unnamed enum as data member inside the structure. I'm thinking - is this correct behavior in the case?\n\nI tested this on online C compiler which seems not to count the enumeration inside struct S as part of its data (here - i tested sizeof of S when there is only enum in it and it gave size of 0). \n\n",
  "votes": "1",
  "answers": 1,
  "views": "341",
  "tags": [
    "ida",
    "decompilation",
    "c"
  ],
  "user": "rec",
  "time": "Apr 12, 2016 at 18:39",
  "comments": [],
  "answers_data": [
    {
      "content": "It's just a definition of an ENUM there is no declaration.\n\nTry this:\n\n```\nstruct S\n{\n    enum {EN0, EN1} myEnum;\n\n    int m1;\n} ;\n\n```\nNow we have two ints.\n\n",
      "votes": "3",
      "user": "Ouss4",
      "time": "Apr 15, 2016 at 1:37",
      "is_accepted": false,
      "comments": []
    }
  ]
}