{
  "title": "How to unpack firmware .bin file",
  "link": "https://reverseengineering.stackexchange.com/questions/33069/how-to-unpack-firmware-bin-file",
  "content": "I need help to unpack or create python script to unpack automatically the type of this firmware, someone already unpacked this firmware, and it contains: boot.bin, aboot.bin and system.bin files. (possible to have others partitions in other firmware).\nI analyse the firmware.bin with Hex Editor and i see on the Header the information of: size, offset and name of the partition.  I compare it with the extracted partiton files and i get this information:\n\ni make some analyse and verification also that next offset or next partition address 'start' is getting on:  hex address inverse on black color ( + ) the offset of preview partition.\n\nex: to get the start partition of \"system\" : 00 4E FB 00 = 00 47 90 00 + 00 07 6B 00\n\n_ partition size: red color  / length of byte who contains infos is: 1C, which starts with 01 for other partitions except the first or start of partition (aboot is 08)\n\n\nSo, i want to understand, where or how to know the offset of partition address start  because it needed to calculate the offset of next partition ?\n\nThank you very much.\n\n(there is some  byte also in start of aboot 03 00 00 00)\n\nsorry, if my explanation is not clear.\nfirmware link\n\n",
  "votes": "0",
  "answers": 0,
  "views": "57",
  "tags": [
    "binary-analysis",
    "unpacking"
  ],
  "user": "0xnewbie",
  "time": "Jul 12, 2024 at 8:03",
  "comments": [],
  "answers_data": []
}