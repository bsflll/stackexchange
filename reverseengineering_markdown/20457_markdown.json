{
  "title": "Why disassemble multi-thread binary is hard?",
  "link": "https://reverseengineering.stackexchange.com/questions/20457/why-disassemble-multi-thread-binary-is-hard",
  "content": "Why disassemble multi-thread binary is hard? I also know that some obfuscation techniques are to create unnecessary threads. But why reverse engineering multi-thread program is hard.\n\n",
  "votes": "3",
  "answers": 1,
  "views": "1k",
  "tags": [
    "disassembly",
    "disassemblers",
    "multi-process"
  ],
  "user": "user5984274",
  "time": "Jan 24, 2019 at 9:26",
  "comments": [],
  "answers_data": [
    {
      "content": "The technique you are referring to is called 'nanomites'. I would advise you the reading of this article as a full example of reverse of a nanomite crack-me.\n\nNever the less, the problem of multi-thread or multi-process reverse-engineering is that in place of one sequence of events (with only one program), you have to follow in parallel multiple programs that interact (possibly in a non-deterministic way) with each others. It raise up exponentially the complexity of the reverse-engineering process.\n\n",
      "votes": "3",
      "user": "Community",
      "time": "Jun 17, 2020 at 9:54",
      "is_accepted": false,
      "comments": []
    }
  ]
}