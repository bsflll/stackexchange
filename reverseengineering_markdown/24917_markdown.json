{
  "title": "Loading a PE32 executable DLL Intel 80386 into a c# program",
  "link": "https://reverseengineering.stackexchange.com/questions/24917/loading-a-pe32-executable-dll-intel-80386-into-a-c-program",
  "content": "I'm new here so I'm sorry if this isn't the right section for my question.\n\nI'm reverse engineering a software that's written in .net 3.5 c# which loads a weird dynamic dll, which has an important functionality of decrypting / encrypting strings. I tried to make a c# program and import the dlls but visual studio complains about invalid / unsupported dll.\n\nHere is some output and info:\n\n```\ntargetframework: .Net Framework v3.5 \n\n```\n```\nFileAnalyzer.dll:  PE32 executable (DLL) (GUI) Intel 80386, for MS Windows\n\n```\nthe .net software loads it and hooks its functions like this:\n\n```\n public class FileDataCtrlWrap\n  {\n    [DllImport(\"FileDataCtrl.dll\", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    private static extern bool GetPersonalSettingsFolder(byte[] buffer, uint type);\n\n    [DllImport(\"FileDataCtrl.dll\", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    private static extern bool GetSettingsFolder(byte[] buffer, uint type);\n\n    [DllImport(\"FileDataCtrl.dll\", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    private static extern bool GetSnapShotFolder(byte[] buffer);\n\n    [DllImport(\"FileDataCtrl.dll\", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    private static extern bool GetSnapShotPath(string cameraName, byte[] buffer);\n\n    [DllImport(\"FileDataCtrl.dll\", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]\n    private static extern int Encrypt(string intput, StringBuilder output);\n...\n...\n..etc\n\n```\nthe dll file can be found here\n\n",
  "votes": "0",
  "answers": 1,
  "views": "1k",
  "tags": [
    "dll",
    "c#",
    "dll-injection",
    "pe32"
  ],
  "user": "Hassan Abdul-Kareem",
  "time": "May 5, 2020 at 2:13",
  "comments": [
    {
      "user": "Igor Skochinsky",
      "text": "Is your app targeted to x86 or x64?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "You can't load 32bit Dlls in 64bit Processes\n\nSolution: build a 32bit App or write an external 32bit prozess(yes a EXE) that loads the DLL and communication with that process using Pipes or TCP/IP from your 64bit app\n\nbtw: the first Dlls name is FileAnalyzer.dll, in the Code is FileDataCtrl.dll?\n\n",
      "votes": "1",
      "user": "llm",
      "time": "May 5, 2020 at 8:29",
      "is_accepted": true,
      "comments": []
    }
  ]
}