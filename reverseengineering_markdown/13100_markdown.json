{
  "title": "How to get the list of strings within IDA's string window in my script?",
  "link": "https://reverseengineering.stackexchange.com/questions/13100/how-to-get-the-list-of-strings-within-idas-string-window-in-my-script",
  "content": "I'm trying to write some scripts that do some string searching through the disassembly in IDA. Currently, I loop through all the disassembly, MinEA() to MaxEA() and use idc.FindText() to see if a potential string is in the disassembly. Although this works, its very time consuming. I was wondering if there was a way I could just use an API method to get all the strings in IDAs string window. For example, I was able to get all the imports used in the import window by using idaapi.get_import_module_qty() and idaapi.enum_import_names(i, import_call_back). That's very fast and I can easily just check if something has been imported. Is there something similar that will allow me to get all the strings from the strings window? If not, is there a less time-consuming method of string searching that is possible? Thanks for any input.\n\n",
  "votes": "4",
  "answers": 3,
  "views": "12k",
  "tags": [
    "ida",
    "idapython"
  ],
  "user": "Eccmms",
  "time": "Jul 20, 2016 at 15:29",
  "comments": [],
  "answers_data": [
    {
      "content": "It looks like that the following is what you are looking for or at least similar:\n\n```\nimport idautils\nsc = idautils.Strings()\n\nfor s in sc:\n    print \"%x: len=%d type=%d -> '%s'\" % (s.ea, s.length, s.type, str(s))\n\n```\nTested and works in IDA 6.8, 64 bit.\nThe details about the class Strings in idautils module are here: https://www.hex-rays.com/products/ida/support/idapython_docs/idautils.Strings-class.html\n\n",
      "votes": "5",
      "user": "w s",
      "time": "Jul 21, 2016 at 4:42",
      "is_accepted": true,
      "comments": [
        {
          "user": "Ray",
          "text": "Apparently, s.type has changed to s.strtype in IDA 7.",
          "time": null
        },
        {
          "user": "wanghua shi",
          "text": "how to get the strings of each function ?",
          "time": null
        }
      ]
    },
    {
      "content": "another variation to get all the strings \n\n```\nimport idaapi as ia\nsc = ia.string_info_t()\nfor i in range(0,ia.get_strlist_qty()):\n    ia.get_strlist_item(i,sc)\n    print ia.get_ascii_contents(sc.ea,sc.length,sc.type)\n\n```\n",
      "votes": "3",
      "user": "blabb",
      "time": "Jul 21, 2016 at 20:07",
      "is_accepted": false,
      "comments": [
        {
          "user": "Tey'",
          "text": "That's much better because calling idautils.Strings() regenerates the list of strings while this method just re-use the current list of strings.",
          "time": null
        },
        {
          "user": "molenzwiebel",
          "text": "On IDA 7.7 with Python 3, swap the i and sc arguments to get_strlist_item and use get_strlit_contents instead of get_ascii_contents (note: returns bytes).",
          "time": null
        }
      ]
    },
    {
      "content": "I found a crude yet completely different solution without having to mess with Python 2.7 .  All with IDA GUI and with the help of side Regex\n\nWarning: if you have a different count of characters before the strings text begins, replace the number with yours!\n\n",
      "votes": "0",
      "user": "TAbdiukov",
      "time": "Jan 20, 2021 at 6:08",
      "is_accepted": false,
      "comments": []
    }
  ]
}