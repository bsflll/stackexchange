{
  "title": "Windbg: How to directly view GS:[0x60]",
  "link": "https://reverseengineering.stackexchange.com/questions/18232/windbg-how-to-directly-view-gs0x60",
  "content": "Win10x64: In Windbg, how may I view a pointer to the PEB by directly using GS:[0x60] (and not by Windbg extensions)?\n\nTo test, I assembled a program via masm64 that throws an interrupt, clears r8 then moves a pointer to the PEB to r8:\n\n```\n(3a4.2034): Break instruction exception - code 80000003 (!!! second chance !!!)\n*** WARNING: Unable to verify checksum for C:\\Users\\res\\Desktop\\cfg\\test.exe\n*** ERROR: Module load completed but symbols could not be loaded for C:\\Users\\res\\Desktop\\cfg\\test.exe\ntest+0x10c1:\n00007ff6cedf10c1 4d33c0          xor     r8,r8\n0:000> r\nrax=00007ff6cedf1000 rbx=0000000000000000 rcx=00007ff6cedf1068\nrdx=00007ff6cedf1075 rsi=0000000000000000 rdi=0000000000000000\nrip=00007ff6cedf10c1 rsp=0000006642d8f730 rbp=0000000000000000\nr8=0000000000000000  r9=00007ff6cedf1000 r10=0000000000000000\nr11=0000000000000000 r12=0000000000000000 r13=0000000000000000\nr14=0000000000000000 r15=0000000000000000\niopl=0         nv up ei pl zr na po nc\ncs=0033  ss=002b  ds=002b  es=002b  fs=0053  gs=002b               efl=00000244`\n\n```\nAfterwards, I checked the base address for GS via selector, but it's not populated:\n\n```\n0:000> dg gs\n                                                P Si Gr Pr Lo\nSel        Base              Limit          Type    l ze an es ng Flags`\n---- ----------------- ----------------- ---------- - -- -- -- -- --------\n002B 00000000 00000000 00000000 ffffffff Data RW Ac 3 Bg Pg P  Nl 00000cf3`\n\n```\nNaturally its null when I try to dump GS:[0x60].\n\nHowever, when I step into the instruction that moves the PEB pointer into r8, r8 has a distinct value!:\n\n```\ntest+0x10c4:\n00007ff6 cedf10c4 654c8b042560000000 mov   r8,qword ptr gs:[60h]    gs:00000000 00000060=????????????????\n0:000> t\ntest+0x10cd:\n00007ff6 cedf10cd 4d8b4018        mov     r8,qword ptr [r8+18h]   ds:00000066 42e0a018={ntdll!PebLdr (00007ff8 c642f3a0)}\n0:000> r\nrax=00007ff6cedf1000 rbx=0000000000000000 rcx=00007ff6cedf1068\nrdx=00007ff6cedf1075 rsi=0000000000000000 rdi=0000000000000000\nrip=00007ff6cedf10cd rsp=0000006642d8f730 rbp=0000000000000000\nr8=0000006642e0a000  r9=00007ff6cedf1000 r10=0000000000000000\nr11=0000000000000000 r12=0000000000000000 r13=0000000000000000\nr14=0000000000000000 r15=0000000000000000\niopl=0         nv up ei pl zr na po nc\ncs=0033  ss=002b  ds=002b  es=002b  fs=0053  gs=002b               efl=00000246\ntest+0x10cd:\n00007ff6 cedf10cd 4d8b4018        mov     r8,qword ptr [r8+18h] ds:00000066 42e0a018={ntdll!PebLdr (00007ff8 c642f3a0)}`\n\n```\n",
  "votes": "2",
  "answers": 1,
  "views": "3k",
  "tags": [
    "windbg",
    "x86-64",
    "windows-10"
  ],
  "user": "grepNstepN",
  "time": "May 11, 2018 at 6:04",
  "comments": [],
  "answers_data": [
    {
      "content": "dg gs seems to be not supported on x64, as stated by the documentation, so you can not rely on it.\n\nIf you want to see where gs points to, you can use !teb or rdmsr c0000102.\n\n",
      "votes": "1",
      "user": "Benoit Sevens",
      "time": "Mar 12, 2019 at 16:59",
      "is_accepted": false,
      "comments": []
    }
  ]
}