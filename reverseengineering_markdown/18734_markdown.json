{
  "title": "ODA generates data segment instead of code (8086 COM hexdump)",
  "link": "https://reverseengineering.stackexchange.com/questions/18734/oda-generates-data-segment-instead-of-code-8086-com-hexdump",
  "content": "I upload an hexdump of 8086 COM file and want to compile it into a COM executable that is running. (I don't upload it, because it is a riddle)\n\nSince it is a COM file it should start at 100h. But ODA recognizes the code at the Data segment.\n\nIs there any reasonable reason for that?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "119",
  "tags": [
    "com"
  ],
  "user": "user1387682",
  "time": "Jul 10, 2018 at 8:40",
  "comments": [
    {
      "user": "Nordwald",
      "text": "This does seem like a support request to a commercial closed-source product. Maybe you could contact the developers directly via [email protected]",
      "time": null
    },
    {
      "user": "Paweł Łukasik",
      "text": "apart from the reason that it is treated as data, you know that you can change that and tell ODA to treat it as code?",
      "time": null
    },
    {
      "user": "0xC0000022L",
      "text": "One more thing, telling apart code and data is hideously difficult and one of the main challenges disassemblers have to cope with. That's where usually the human in front of the screen is called for, to help out (the \"interactive\" part in IDA stems from that, IIRC). While this isn't IDA, the fundamental principles apply all the same.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Since there is no source code or documentation for ODA we can’t tell for sure why it interprets com files as data. My guess would be that it happens because COM files have no defined structure or headers with magic values unlike other executable formats such as ELF, PE, or DOS MZ EXE, so it falls back to raw data bytes display. \n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Jul 10, 2018 at 20:43",
      "is_accepted": false,
      "comments": []
    }
  ]
}