{
  "title": "Patch methods in COM dll",
  "link": "https://reverseengineering.stackexchange.com/questions/9191/patch-methods-in-com-dll",
  "content": "I have COM DLL with one class and one interface.\nWhen I open it with COMView I see all the methods in the class/interface.\n\nI want to modify the behavior of one method in this COM but I don't know how. I failed debugging it in debugger because it uses multiple threads and I couldn't find the DLL's code.\n\nIs there a way to patch a function without using the debugger?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "188",
  "tags": [
    "windows",
    "decompilation",
    "dll",
    "patching",
    "com"
  ],
  "user": "nrofis",
  "time": "Mar 27, 2017 at 14:47",
  "comments": [],
  "answers_data": [
    {
      "content": "Debugging COM is indeed a bit on an issue, however you don't necessarily need to debug it in order to retrieve an address to the function you're interested in. Additionally, there are tricks to find COM related functions while debugging.\n\nOnce you got the function's address, simply open that COM dll with any patching tool and patch the assembly as you'd like. Just google for a binary patching tool you feel comfortable with.\n\nThere are basically three ways I can think of to get the address of that function:\n\n",
      "votes": "2",
      "user": "Community",
      "time": "Apr 13, 2017 at 12:49",
      "is_accepted": true,
      "comments": []
    }
  ]
}