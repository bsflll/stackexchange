{
  "title": "Compress Xamarin assemblies after decompression",
  "link": "https://reverseengineering.stackexchange.com/questions/30535/compress-xamarin-assemblies-after-decompression",
  "content": "I have an APK that has assemblies in a single blob file. I could extract them successfully using decompress-assemblies.\n\nIs there anyway I can compress them again into assemblies.blob file or at least modify the APK to allow loading the the extracted DLL like older Xamarin APKs?\n\nI seem to have found that the application checks for application_config.have_assembly_store value, if it's true, it only continues if there's an assembly blob. Any idea how to change this value inside the APK?\n\n",
  "votes": "3",
  "answers": 1,
  "views": "469",
  "tags": [
    "android",
    "dll",
    "decompress",
    "c#"
  ],
  "user": "paddle.code",
  "time": "Jun 20, 2022 at 17:02",
  "comments": [],
  "answers_data": [
    {
      "content": "For unpacking and repacking Xamarin (and .Net MAUI as it is now called) assemblies.blob + assemblies.manifest files you can use the Python based tool Xamarin AssemblyStore Explorer (pyxamstore).\n\nMake sure your current directory contains the files assemblies.blob and assemblies.manifest.\n\n```\npyxamstore unpack\n\n```\nThis will create the directory out which will contain the decoded dll files.\n\nEnter the directory where you have execute  pyxamstore unpack and execute\n\n```\npyxamstore pack\n\n```\nThis will generate the two files assemblies.blob.new and assemblies.manifest.new. Just rename the two files to it's original names without .new and replace them in the APK file.\n\nFinally don't forget to zipalign and resign (apksigner) your APK file.\n\n",
      "votes": "2",
      "user": "Robert",
      "time": "Apr 23, 2024 at 21:43",
      "is_accepted": true,
      "comments": []
    }
  ]
}