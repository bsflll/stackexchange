{
  "title": "Use of FastLogHook function in immlib?",
  "link": "https://reverseengineering.stackexchange.com/questions/2502/use-of-fastloghook-function-in-immlib",
  "content": "I am a newbie in python programming for Debugging . I wrote a code for using the function FastLogHook() in immlib but i am not able to figure out the exact problem with my code as it is not working :(\n\n Here is My code \n\n```\n#!/usr/bin/env python\n\nimport immlib\nfrom immlib import FastLogHook\n\nDESC = \"FastLogHook Basic Demo\"\n\ndef showresult(imm, a,addr):\nif a[0]==addr:\n    imm.Log(\"(0x%08x >> 0x%08x , 0x%08x)%(a[1][0], a[1][1], a[1][2]) \")\n    return \"done\"\n\ndef main(args):\nimm = immlib.Debugger()\nName = 'fasty'\nfast = imm.getKnowledge( Name )\n\nfunctionToHook = \"msvcrt.strcpy\"\nfunctionAddress = imm.getAddress(functionToHook)\nimm.log(str(functionAddress) + 'pf')\nif fast:\n    hook_list = fast.getAllLog()\n    imm.log(str(hook_list))\n    for a in hook_list:\n        ret = showresult( imm, a, functionAddress )\n    return\"Logged: %d hook hits.\" % len(hook_list)\nimm.pause()\nfast = FastLogHook(imm)\nfast.logFunction(functionAddress)\nfast.logBaseDisplacement('ESP', 0x4)\nfast.logBaseDisplacement('ESP', 0x8)\nfast.logRegister(\"ESP\")\nfast.Hook()\nimm.addKnowledge(Name, fast, force_add = 1)\n\nreturn \"Success!!\"\n\n```\nI am running this code in Immunity Debugger but continuously getting error . I searched , googled but due to the limitation of documentation regarding this I am unable to correct it .\n\n",
  "votes": "2",
  "answers": 1,
  "views": "780",
  "tags": [
    "python",
    "immunity-debugger"
  ],
  "user": "in3o",
  "time": "Jul 20, 2013 at 3:23",
  "comments": [],
  "answers_data": [
    {
      "content": "I also just started to learn more about this topic and managed to write down the following lines of code.\n\nI guess all my comments in the code are good enough as answer. I dont know much more then that anyway.\n\n```\n  ' #!/usr/bin/env python\n\n  import immlib\n  import struct\n  from immlib import STDCALLFastLogHook\n\n  DESC=\"FastLoogHook\"\n\n  def main(args):\n\n        \"\"\"\n                Will hook and run its own assembly code then return to the process\n                Usage: First run the script to install hook, then run it again to get results ^^\n        \"\"\"\n\n        imm = immlib.Debugger()\n        Name = \"hippie\"\n\n\n        # Get stored data on second script run\n        fast = imm.getKnowledge(Name)\n\n        if fast:\n\n                # Get a list of all the things we saved\n                hook_list = fast.getAllLog()\n\n                # Log result\n                imm.log(str(hook_list))\n\n                # unpack list\n                (func_addr, (esp1, esp2)) = hook_list[0]\n\n                # Log argument\n                imm.log(imm.readString(esp2))\n\n                return \"Parsing results done\"\n\n        # Find strcpy address   \n        strcpy = imm.getAddress(\"msvcrt.strcpy\")\n\n        # Building the hook\n        fast = immlib.FastLogHook(imm)\n\n        # This function is required and returns \n        # the address of the original instruction\n        fast.logFunction(strcpy)\n\n        # Offset\n        fast.logBaseDisplacement(\"ESP\", 4)\n        fast.logBaseDisplacement(\"ESP\", 8)\n\n        # Set hook\n        fast.Hook()\n\n        # Save data for later use\n        imm.addKnowledge(Name, fast, force_add = 1)\n\n        return \"FastLogHook installed for strcpy\"'\n\n```\n",
      "votes": "3",
      "user": "asheeshr",
      "time": "Jul 20, 2013 at 12:52",
      "is_accepted": true,
      "comments": [
        {
          "user": "in3o",
          "text": "Can u tell me what's wrong with my code ?",
          "time": null
        },
        {
          "user": "user2464",
          "text": "The line with imm.Log in showresult has typos in it. it should be   imm.log(\"(0x%08x >> 0x%08x , 0x%08x)\"%(a[1][0], a[1][1], a[1][2]))",
          "time": null
        }
      ]
    }
  ]
}