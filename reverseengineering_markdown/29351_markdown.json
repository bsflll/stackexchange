{
  "title": "What is the meaning of SYSTEM_INFO.wProcessorLevel?",
  "link": "https://reverseengineering.stackexchange.com/questions/29351/what-is-the-meaning-of-system-info-wprocessorlevel",
  "content": "I am performing some RE on a malware sample, and they are checking the value of SYSTEM_INFO[32] which is SYSTEM_INFO.wProcessorLevel. The description MS provides is not clear to me. The malware checks if this value is 0x0 and exits immediately. Sources online say this is to avoid malware inspection environments - when I read this value on my Windows10 PC (not in a VM, just a basic VS script), it returns 0x6. Can someone shed some light on the meaning of this SYSTEM_INFO offset?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "195",
  "tags": [
    "malware",
    "documentation"
  ],
  "user": "RiskyDiablo",
  "time": "Sep 29, 2021 at 13:55",
  "comments": [],
  "answers_data": [
    {
      "content": "for intel wProcessorArchitecture\nwProcessorLevel indicates if the family is one of\n\n```\n386--------------->(3) ,   \n486--------------->(4) ,  \npentium----------->(5) ,   \npentium2&above---->(6)\n\n```\nfor other architectures they return different information\n\non my current device\n\n```\n:\\>wmic cpu get Caption,Level,Name\nCaption                                Level  Name\nIntel64 Family 6 Model 142 Stepping 9  6      Intel(R) Core(TM) i3-7020U CPU @ 2.30GHz\n\n```\nor some c snippet\n\n```\n#include <windows.h>\n#include <stdio.h>\n\nint main(void) {\n    SYSTEM_INFO sysinf ={0};\n    GetSystemInfo(&sysinf);\n    printf(\"%-30s = %x  \n\" , \"wProcessorArchitecture\",sysinf.wProcessorArchitecture ); //9 amd64\n    printf(\"%-30s = %x  \n\" , \"wProcessorLevel\" ,sysinf.wProcessorLevel ); //6 pent2&above (core i3)\n    printf(\"%-30s = %u  \n\" , \"dwProcessorType\" ,sysinf.dwProcessorType ); // 8664 AMD64\n    return 0;\n}\n\n```\nmay be the malware runs selectively and infects only specific machine\n\nor as igorsk commented some emulation environments might be returning 0\n\nlike instead of GeniuneIntel vmware or hyper-v used to return thier names which could be used to detect if running inside vms\n\n",
      "votes": "2",
      "user": "blabb",
      "time": "Sep 30, 2021 at 3:24",
      "is_accepted": true,
      "comments": [
        {
          "user": "Igor Skochinsky",
          "text": "my guess is that 0 is returned by some lazy emulation environments.",
          "time": null
        }
      ]
    }
  ]
}