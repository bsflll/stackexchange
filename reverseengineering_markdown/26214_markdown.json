{
  "title": "Determine if there is a cross reference using idapython given a specific address",
  "link": "https://reverseengineering.stackexchange.com/questions/26214/determine-if-there-is-a-cross-reference-using-idapython-given-a-specific-address",
  "content": "I want to end up in something like the following using idapython to determine if given a specific address there is an xref (without caring where the XREF comes from)\n\n```\nea_start = #\nea_end = #\nfor ea in range(ea_start,ea_end):\n    if hasXREF(ea):\n        doSomething()\n\n\ndef hasXREF(addr):\n    \n    if [something]:\n        return true\n    else\n        return false\n\n```\n",
  "votes": "1",
  "answers": 2,
  "views": "878",
  "tags": [
    "ida",
    "idapython",
    "script"
  ],
  "user": "Shad3",
  "time": "Nov 1, 2020 at 21:56",
  "comments": [],
  "answers_data": [
    {
      "content": "Take a look at this link: https://www.hex-rays.com/products/ida/support/idapython_docs/idautils-module.html#XrefsTo\n\nYou can use the function:\nXrefsTo(ea, flags=0).\n\nFrom the description, it\nReturn all references to address ea.\n\nAnd XrefsFrom(ea, flags=0), which  Return all references from address 'ea'\n\nYou should have anything for your script now :)\n\nI have an example of a working IDA Python script that you can use as a reference here (It count the number of XrefTo per functions of a binary): https://github.com/GuillaumeOrlando/MalwareAnalysisArtifacts/blob/master/IDA_Scripts/XrefChecker.py.\n\n",
      "votes": "2",
      "user": "Guillaume",
      "time": "Nov 1, 2020 at 22:19",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "You can use the flags which are attached to each address and, among other info, store information about whether the address has any xrefs to it.\n\n```\ndef hasXREF(addr):        \n    return has_xref(get_flags(addr))\n\n```\nBTW, instead of inspecting every address it's better and faster to inspect only head bytes (starts of instructions or data items) which are returned by the idautils.Heads() iterator.\n\n",
      "votes": "2",
      "user": "Igor Skochinsky",
      "time": "Nov 1, 2020 at 22:52",
      "is_accepted": false,
      "comments": []
    }
  ]
}