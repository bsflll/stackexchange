{
  "title": "Replacing small length instruction with larger length instruction",
  "link": "https://reverseengineering.stackexchange.com/questions/9092/replacing-small-length-instruction-with-larger-length-instruction",
  "content": "Basically I want to replace MOVS R1, #0x0 with MOV.W R1, #0x123, since later instruction requires 4 bytes it is impossible to simply replace in HEX code.\n\nI am using IDA Pro for analyzing native android library. I read about codecaves but my text segment don't have free space to add new data.\n\nSince i'm newbie to this, any tutorials are welcome.\n\n",
  "votes": "5",
  "answers": 1,
  "views": "1k",
  "tags": [
    "ida",
    "android",
    "arm",
    "hex",
    "patching"
  ],
  "user": "user2578525",
  "time": "Jun 8, 2015 at 11:37",
  "comments": [],
  "answers_data": [
    {
      "content": "As you need just 2 more bytes, you don't need a large code cave. Out of the box, there are four things you can try:\n\n",
      "votes": "7",
      "user": "Guntram Blohm",
      "time": "Jun 8, 2015 at 10:52",
      "is_accepted": true,
      "comments": [
        {
          "user": "user2578525",
          "text": "Thanks.. I've found some debugging messages in same function so i'll omit calls to __android_log_print for getting some space.",
          "time": null
        }
      ]
    }
  ]
}