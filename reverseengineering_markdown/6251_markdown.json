{
  "title": "Why are values passed through useless copies?",
  "link": "https://reverseengineering.stackexchange.com/questions/6251/vlas-in-c-seemingly-nonsential-compiler-code",
  "content": "So, say that I have the following code, which gives three examples of what I believe to be unnecessary copies of values.\n\n```\nmov    QWORD PTR [rbp-0x18],rdi\nmov    rdx,QWORD PTR [rbp-0x18]\nlea    rax,[rbp-0x10]\nmov    rsi,rdx\nmov    rdi,rax\ncall   4003e0 <strcpy@plt>\n\n```\nWhy is the value in rdi copied to memory at rbp-0x18, then copied back to rdx ?  It's then copied to rsi (2 extra copies).\n\nFinally, why the lea + mov for rbp-0x10 to rax, then to rdi ?  Is there any reason the following code wasn't generated ?\n\n```\nmov    rsi,rdi\nlea    rdi,[rbp-0x10]\ncall   4003e0 <strcpy@plt>\n\n```\n(My guess is that this is just an artifact of the code generation in the compiler, but I'm making sure there's not some rules of x86-64 that I'm missing.)\n\n",
  "votes": "8",
  "answers": 1,
  "views": "917",
  "tags": [
    "linux",
    "x86-64"
  ],
  "user": "user4520",
  "time": "Jun 5, 2014 at 6:31",
  "comments": [],
  "answers_data": [
    {
      "content": "There are no artifacts and surely the compiler, and I mean GCC, can generate a better and faster code if told so. The first version of your generated code is non optimized. Why ? Either because -O0 flag (0 level optimizations ==> No optimizations) was specified, or because no optimization flags were specified and by default GCC turns optimizations off. \n\nBelow you'll find two versions of the same code. Version 1 with -O0 flag. Version 2 with -O2 flag. \n\nIf you're interested in the optimizations performed by GCC you should read this link, and this one too. You can also check the GCC summit publications.\n\n",
      "votes": "9",
      "user": "yaspr",
      "time": "Jun 5, 2014 at 6:08",
      "is_accepted": true,
      "comments": [
        {
          "user": "David",
          "text": "Ok, seems to be what I was assuming.  I was posting code from a wargame challenge, and I suppose no optimization makes sense there.",
          "time": null
        }
      ]
    }
  ]
}