{
  "title": "Using IDA Python Iterate Through All Functions and Their Instructions",
  "link": "https://reverseengineering.stackexchange.com/questions/14725/using-ida-python-iterate-through-all-functions-and-their-instructions",
  "content": "I'm new to IDAPython. Basically I want to iterate through all functions in an IDB file and their instructions using ida python script. The final goal is to export the functions & their instructions from idapro. in certain format.\n\n```\nfrom idautils import *\nfrom idaapi import *\n\nea = BeginEA()\nfor funcea in Functions(SegStart(ea), SegEnd(ea)):\n    functionName = GetFunctionName(funcea)\n    print functionName\n\n```\nUsing above script I'm retrieving function names, now I also want to print the assembly instructions of each function. I know may I have to use GetDisasm(ea), not sure how to use the API.\n\nTIA\n\n",
  "votes": "8",
  "answers": 1,
  "views": "26k",
  "tags": [
    "ida",
    "idapython"
  ],
  "user": "Dev.K.",
  "time": "Feb 23, 2017 at 14:17",
  "comments": [],
  "answers_data": [
    {
      "content": "Please note that it will print only those functions that were recognized as such by IDA autoanalysis or defined manually, exactly as your code snippet. This snippet is not debugged, use on your own risk.\n\n```\nfrom idautils import *\nfrom idaapi import *\nfrom idc import *\n\nfor segea in Segments():\n    for funcea in Functions(segea, SegEnd(segea)):\n        functionName = GetFunctionName(funcea)\n        for (startea, endea) in Chunks(funcea):\n            for head in Heads(startea, endea):\n                print functionName, \":\", \"0x%08x\"%(head), \":\", GetDisasm(head)\n\n```\nIf you want to extract the instructions as binary you can use idc.NextHead function to get instruction boundaries.\n\nThe function chunks mentioned in the code are not the same as we see in the the graph view in IDA (the function has more than one chunk if it is discontinuous\n): chunks in graph view are called \"basic blocks\", see more correct definition by the link.\n\n",
      "votes": "9",
      "user": "Jason",
      "time": "Dec 11, 2017 at 22:00",
      "is_accepted": true,
      "comments": [
        {
          "user": "Dev.K.",
          "text": "Thanks! This is what I wanted. BTW, Is there any way I can get the instruction sets in chunks, the way we get in IDA graph view?",
          "time": null
        },
        {
          "user": "w s",
          "text": "@Dev.K. These chunks are called \"basic blocks\". As far as I know there is no IDAPython API to work with it, however all starting instructions of the chunks can be found by number of code references to them.",
          "time": null
        },
        {
          "user": "w s",
          "text": "@Dev.K. See updated answer, more correct definition of basic block referenced",
          "time": null
        },
        {
          "user": "NirIzr",
          "text": "Instead of iterating over all segments, one may call idautils.Functions(). The default behavior will iterate over all functions defined in the IDB.",
          "time": null
        }
      ]
    }
  ]
}