{
  "title": "DLL Injection Call Address In Target",
  "link": "https://reverseengineering.stackexchange.com/questions/21757/dll-injection-call-address-in-target",
  "content": "I have an address that is located in a dll loaded by my target process. I would like to call this address using dll injection.\n\nFor now my dll looks like this:\n\n```\nBOOL APIENTRY DllMain(HMODULE hModule, DWORD ul_reason_for_call, LPVOID lpReserved)\n{\n    switch (ul_reason_for_call)\n    {\n        case DLL_PROCESS_ATTACH:\n        {\n            MessageBox(NULL, L\"Injection Successful\", L\"TEST:\", MB_OK); \n            //Here I'd like to call the address\n\n            break;\n        }\n        case DLL_THREAD_ATTACH:\n        case DLL_THREAD_DETACH:\n        case DLL_PROCESS_DETACH:\n        break;\n    }\n    return TRUE;\n}\n\n```\nFrom what I've learned online, there are some problems: \n\nI'm using Cheat Engine to inject the dll and x64dbg as a debugger.\nSince I'm a beginner, a bit of code would be very much appreciated.\n\n",
  "votes": "3",
  "answers": 1,
  "views": "608",
  "tags": [
    "c++",
    "dll-injection"
  ],
  "user": "Kevin Mueller",
  "time": "Jul 24, 2019 at 17:13",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "Doing such stunts from DllMain can be a patently bad idea. Certain locking conditions apply inside DllMain. Grab a decent book and read up on it. Perform only simple actions inside DllMain, perhaps set an event or output a debug string (which you can see in WinDbg or DbgView).",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "There are plenty of ways to do what you want.\n\n",
      "votes": "1",
      "user": "bart1e",
      "time": "Jul 24, 2019 at 17:10",
      "is_accepted": false,
      "comments": []
    }
  ]
}