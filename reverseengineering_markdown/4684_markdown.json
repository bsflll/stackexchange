{
  "title": "IDAPython: Get struct id defined at an address",
  "link": "https://reverseengineering.stackexchange.com/questions/4684/idapython-get-struct-id-defined-at-an-address",
  "content": "Spotted an interesting problem when trying to determine which type of structure (since isStruct(getFlags(ea)) returns True) is defined at the given address in the DB. Reading through idc.py didn't help much.\n\nA solid example:\n\n```\n# Some Python code\nstrid = idaapi.get_struc_id('_s__RTTIClassHierarchyDescriptor')\nsize = idaapi.get_struc_size(strid)\nidaapi.doStruct(ea, size, strid)\n\n```\nHow, knowing the ea, do I get the strid value ?\n\n",
  "votes": "4",
  "answers": 4,
  "views": "4k",
  "tags": [
    "idapython"
  ],
  "user": "Dmitry Janushkevich",
  "time": "Jun 25, 2014 at 11:33",
  "comments": [
    {
      "user": "w s",
      "text": "What is your question ? What problem did you spot ?",
      "time": null
    },
    {
      "user": "perror",
      "text": "I didn't get what is the problem ?!?",
      "time": null
    },
    {
      "user": "Dmitry Janushkevich",
      "text": "Updated the question.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "This works for me:\n\n```\nea=here()\nti = idaapi.opinfo_t()\nf = idc.GetFlags(ea)\nif idaapi.get_opinfo(ea, 0, f, ti):\n   print (\"tid=%08x - %s\" % (ti.tid, idaapi.get_struc_name(ti.tid)))\n\n```\nSo ti.tid then contains the strid.\n\n",
      "votes": "9",
      "user": "perror",
      "time": "Jul 2, 2014 at 14:52",
      "is_accepted": true,
      "comments": [
        {
          "user": "Dmitry Janushkevich",
          "text": "Confirmed working. Likely because IDA treats the structure variable as an \"operand\" of some \"instruction\".",
          "time": null
        },
        {
          "user": "Dmitry Janushkevich",
          "text": "Sorry, there is 1 day timeout for bounties. :-(",
          "time": null
        },
        {
          "user": "Zach Riggle",
          "text": "Looks like the bounty is still open. imgur.com/d0NYZSq.jpg",
          "time": null
        },
        {
          "user": "Dmitry Janushkevich",
          "text": "Can't award earlier than 24h after starting the bounty, it seems. :-( Will do so ASAP.",
          "time": null
        },
        {
          "user": "Dmitry Janushkevich",
          "text": "There we go, awarded! :-)",
          "time": null
        }
      ]
    },
    {
      "content": "in IDC the following works, so I'm not sure if you can use the same functions from Python\n\n```\nauto type;\nauto ea;\n\nea = 0x8F84C37C;\nMessage(\"isStruct: %d  \n\", isStruct(GetFlags(ea)));\ntype = GetTinfo(ea);\nMessage(\"firstattr: %s  \n\", firstattr(type));\nMessage(\"getattr: %d  \n\", getattr(type,\"typid\"));\n\n```\noutputting:\n\n```\nisStruct: 1\nfirstattr: typid\ngetattr: 52541\n\n```\n",
      "votes": "3",
      "user": "Simeon Pilgrim",
      "time": "Jun 26, 2014 at 3:54",
      "is_accepted": false,
      "comments": [
        {
          "user": "Dmitry Janushkevich",
          "text": "Doesn't seem to work for me from Python... even if using IDC adapter funcs from idc.py. To be fair, copying your snippet into an IDC script and executing it indeed works. :-)    Python>print idc.isStruct(idc.GetFlags(0x561114)) True Python>print idc.GetTinfo(0x561114) None Python>print idc.GetType(0x561114) None Sorry for this unreadable blob, I seem unable to insert line breaks in comments, but you probably get the idea of what's returned.",
          "time": null
        },
        {
          "user": "Simeon Pilgrim",
          "text": "That seems broken that the Python IDC wrapper for GetTinfo gets different results.",
          "time": null
        },
        {
          "user": "Simeon Pilgrim",
          "text": "idc.GetTinfo appears to just be calling idaapi.idc_get_type_raw(ea), but it's strange that it's failing. looking at swig/typeinf.i idc_get_type_raw appears to call get_tinfo so I'd expect it to work.",
          "time": null
        },
        {
          "user": "Dmitry Janushkevich",
          "text": "Oddly enough: Python>tif = idaapi.tinfo_t() Python>print tif <idaapi.tinfo_t; proxy of <Swig Object of type 'tinfo_t *' at 0x02A5BFB0> > Python>print idaapi.get_tinfo2(0x561114, tif) False and Python>tp = idaapi.qtype() Python>flags = idaapi.qtype() Python>print idaapi.get_tinfo(0x561114, tp, flags) False so either those are broken, or I am doing it wrong (together with idapython, apparently).",
          "time": null
        }
      ]
    },
    {
      "content": "Updated version of @Willem Hengeveld answer for IDA 7.4 API:\n\n```\naddress=0x14001D020\nstruct_id = idaapi.opinfo_t()\nflags = ida_bytes.get_flags(address)\nif ida_bytes.get_opinfo(struct_id, address, 0, flags):\n    struct_name = ida_struct.get_struc_name(struct_id.tid)\n    print (f\"tid=0x{struct_id.tid:08x} - {struct_name}\")\n\n```\n",
      "votes": "1",
      "user": "KulaGGin",
      "time": "Feb 7, 2022 at 12:58",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "The minsc plugin at https://github.com/arizvisa/ida-minsc exposes this via database.type.structure.id\nDisclaimer: I maintain the ida-minsc plugin.\n\n```\nPython>idc.here()\n0x2ac34\n\nPython>db.disasm(idc.here())\n'2ac34: GUID <?>'\n\nPython>db.t.struc.id(idc.here())\n0xff000054\n\nPython>idaapi.get_struc_name(db.t.struc.id(idc.here())), idaapi.get_struc(db.t.struc.id(idc.here()))\n('GUID', <ida_struct.struc_t; proxy of <Swig Object of type 'struc_t *' at 0x7f9af7f74c30> >)\n\n```\nAlthough, it's better to just get the structure (and extract the id from it if you still want it).\n\n```\nPython>db.t.struc(idc.here())\n<class 'structure' name='_GUID' offset=0x2ac34 size=0x10784>\n\nPython>db.t.struc(idc.here()).id\n0xff000055\n\n```\n",
      "votes": "0",
      "user": "Ali Rizvi-Santiago",
      "time": "Jul 21, 2024 at 6:58",
      "is_accepted": false,
      "comments": []
    }
  ]
}