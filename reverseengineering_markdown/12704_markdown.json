{
  "title": "Reversing a serial communication with two inputs",
  "link": "https://reverseengineering.stackexchange.com/questions/12704/reversing-a-serial-communication-with-two-inputs",
  "content": "I'm making a device that needs me to transfer some sort of initiation code like handshaking to start further communications.\nThere is 2 inputs and 2 outputs the first output is pretty similar to a two's compliment which only works on even numbers and copy the value into the odd numbers. \n\nBut the second output is more complicated it is a combination of the first input and the second one and if the second input is 0 the second output is equal to the first output, let's see some examples:\n\n```\nInput 1          Output 1                  Input 2           Output 2\n\n0- 00000000      1- 00000001     ------    8- 00001000      33- 00100001      \n1- 00000001      5- 00000101     ------    8- 00001000      37- 00100101      \n2- 00000010      5- 00000101     ------    8- 00001000      37- 00100101      \n3- 00000011      9- 00001001     ------    8- 00001000      57- 00111001      \n4- 00000100      9- 00001001     ------    8- 00001000      57- 00111001      \n5- 00000101      21- 00010101     ------    8- 00001000      53- 00110101      \n6- 00000110      21- 00010101     ------    8- 00001000      53- 00110101      \n7- 00000111      17- 00010001     ------    8- 00001000      49- 00110001      \n8- 00001000      17- 00010001     ------    8- 00001000      73- 01001001      \n9- 00001001      21- 00010101     ------    8- 00001000      77- 01001101      \n\n```\nThis was the outputs for input 2 equal 8\n\n```\nInput 1           Output 1                    Input 2           Output 2\n\n25- 00011001      85- 01010101   ------      31- 00011111      248- 11111000      \n26- 00011010      85- 01010101     ------    31- 00011111      245- 11110101      \n27- 00011011      73- 01001001     ------    31- 00011111      242- 11110010      \n28- 00011100      73- 01001001     ------    31- 00011111      239- 11101111      \n29- 00011101      69- 01000101     ------    31- 00011111      236- 11101100      \n30- 00011110      69- 01000101     ------    31- 00011111      233- 11101001      \n31- 00011111      65- 01000001     ------    31- 00011111      230- 11100110      \n32- 00100000      65- 01000001     ------    31- 00011111      195- 11000011      \n33- 00100001      69- 01000101     ------    31- 00011111      192- 11000000      \n34- 00100010      69- 01000101     ------    31- 00011111      61- 00111101      \n35- 00100011      73- 01001001     ------    31- 00011111      58- 00111010      \n36- 00100100      73- 01001001     ------    31- 00011111      55- 00110111      \n\n```\nHere also you can find some different inputs and outputs while holding one input constant and the others change:\n\nInput2=16, \n\nInput 2=5,\n\nInput 1=2, link: pastebin.com/k5D5J1d5\n\nAny help on a way to find the protocol for the outputs or the formula between them would be highly appreciated.\n\nThanks in advance.\n\n",
  "votes": "1",
  "answers": 0,
  "views": "70",
  "tags": [
    "decryption",
    "serial-communication",
    "protocol",
    "packet",
    "communication"
  ],
  "user": "Soroush",
  "time": "May 20, 2016 at 20:48",
  "comments": [
    {
      "user": "Jonas KÃ¶ritz",
      "text": "You are making the device? Or are you reversing a device?",
      "time": null
    },
    {
      "user": "Soroush",
      "text": "There are different devices connected to a main one and I'm gonna make a new one to work with the main unit but there is this first negotiation problem.",
      "time": null
    }
  ],
  "answers_data": []
}