{
  "title": "How to parse the IAT using IDApython?",
  "link": "https://reverseengineering.stackexchange.com/questions/26558/how-to-parse-the-iat-using-idapython",
  "content": "Is it possible to parse the IAT using IDApython?\n\ni know how to do it with python libraries like lief, but i was wondering if IDApython also has an ability to parse IAT or not?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "178",
  "tags": [
    "ida",
    "idapython",
    "ida-plugin"
  ],
  "user": "OneAndOnly",
  "time": "Dec 16, 2020 at 7:46",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "Sorry to ask a slightly confused question here, but what exactly keeps you from using any of your Python modules from IDAPython, provided they share compatibility in the same Python version range?",
      "time": null
    },
    {
      "user": "OneAndOnly",
      "text": "@0xC0000022L because lief sometimes doesn't properly parse stuff, and considering IDA pro is a professional software i would assume it should have a better parser compared to lief.",
      "time": null
    },
    {
      "user": "0xC0000022L",
      "text": "Okay, so LIEF doesn't fit your bill. Fine, use something like pefile then or report the issues LIEF has or even fix them yourself. I don't see why IDAPython itself should pack a parser for PE files when IDA provides this out-of-the-box in the respective loader module. However, I'll ping one of the IDA folks.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "There’s no built-in functionality for that, it’s too target-specific to be useful as standard API. What you can do is to retrieve the list of exports and/or imports for the file which was used to create the database. If you need the low-level IAT details you’ll have to parse it manually from memory or database (not sure if database keeps enough information so you may need to go back to the input file).\n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Dec 16, 2020 at 14:32",
      "is_accepted": true,
      "comments": []
    }
  ]
}