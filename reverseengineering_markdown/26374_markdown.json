{
  "title": "Is it possible to download program database (PDB) files of Microsoft Windows binaries without installing any software?",
  "link": "https://reverseengineering.stackexchange.com/questions/26374/is-it-possible-to-download-program-database-pdb-files-of-microsoft-windows-bin",
  "content": "I want to download the .pdb files of Windows binaries (e.g., notpad.exe) on machines where the user doesn't have admin rights, nor has any debugger available. I was wondering if it is possible to download the PDB files using Windows built-in functionalities such as cmd/batch, Powershell, or WSH VBScript or JScript?\n\nI think the first step is to find the globally unique identifier (GUID) of the binary, and then probably there are some URL queries one can use to download the specific program database file of the built.\n\nP.S.1. Apparently the New Technology Symbolic Debugger (NTSD) used to come built into the Windows OS. I am not aware of the OS includes any debuggers by default anymore.\n\nP.S.2. From this comment, I was pointed towards the right URI to download the exact PDB file, given the GUID of the binary. Now the problem is to know how to extract the GUID from the binary itself.\n\nP.S.3. I am wondering if the CLSID/GUID/ProgID of all binaries are stored in the registry and one can manually map them to the specific .dll/.exe files.\n\n",
  "votes": "4",
  "answers": 2,
  "views": "3k",
  "tags": [
    "windows",
    "debugging-symbols",
    "pdb"
  ],
  "user": "Foad",
  "time": "Nov 25, 2020 at 23:06",
  "comments": [
    {
      "user": "Igor Skochinsky",
      "text": "Why the requirement \"without installing any software\"? How are you going to use the PDBs then?",
      "time": null
    },
    {
      "user": "Foad",
      "text": "@IgorSkochinsky the only thing I need to do is to extract the name of the exposed methods and properties. see this and this question to have a feeling of what I'm trying to achieve.",
      "time": null
    },
    {
      "user": "Igor Skochinsky",
      "text": "Even if you get the PDBs you probably won't be able to parse them \"without installing any software\". And the PDB doesn't have a handy \"list of COM object methods\" anyway, you'll probably need to analyze the binary.",
      "time": null
    },
    {
      "user": "Foad",
      "text": "@IgorSkochinsky true. There many things I don't know. So some of my thoughts might be wrong. I admit that.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "You can use PDB downloader which doesn’t require any installation https://docs.microsoft.com/en-us/archive/blogs/webtopics/pdb-downloader. Or you could use its source below to see how you could recreate with PowerShell or some other method.\n\nhttps://github.com/rajkumar-rangaraj/PDB-Downloader\n\nYou can also just copy the WinDBg files from a machine where it’s been installed and it will run without requiring admin rights.\n\nAlso you can taken SymChk.exe from Windows debugging tools for download symbols, or if machine doesn’t have internet access generate a manifest to download from another machine https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/using-a-manifest-file-with-symchk\n\nTo get the Debug GUID refer to https://github.com/rajkumar-rangaraj/PDB-Downloader/blob/master/SymbolFetch/PeHeaderReader.cs\nYou need to extract from the PE Header’s debug directory refer to struct IMAGE_DEBUG_DIRECTORY_RAW\nYou can also look for structure starting with signature RSDS (0x53445352), is followed by a GUID (16 bytes), a counter (4 bytes) and then the PDB pathname.\n\nCLSID/ProgID are stored in the registry for COM class objects under HKCR\\CLSID which maps to HKLM\\Software\\Classes and HKCU\\Software\\Classes (in 32-bit and 64-bit views of registry) But this is the GUID for initializing the COM object, not related to the GUID used for PDB files.\n\n",
      "votes": "7",
      "user": "chentiangemalc",
      "time": "Nov 25, 2020 at 22:34",
      "is_accepted": false,
      "comments": [
        {
          "user": "Foad",
          "text": "It seems to be much more difficult than I had anticipated!",
          "time": null
        },
        {
          "user": "chentiangemalc",
          "text": "Added more details on guid",
          "time": null
        },
        {
          "user": "mirh",
          "text": "That PDB downloader is a bit of a PITA to work with files that aren't .exes or .dlls. So personally I would rather recommend this or this.",
          "time": null
        }
      ]
    },
    {
      "content": "With the same issue, I made a PowerShell script based on PDB-Downloader. You can find it in my GitHub.\n\nIt Requires PowerShell 7.3 or newer.\n\nIn action:\n\n\n\nPS: Help me test it.\n\n",
      "votes": "3",
      "user": "0xC0000022L",
      "time": "Sep 6, 2023 at 21:26",
      "is_accepted": false,
      "comments": []
    }
  ]
}