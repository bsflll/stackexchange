{
  "title": "Replace section inside ELF file",
  "link": "https://reverseengineering.stackexchange.com/questions/14607/replace-section-inside-elf-file",
  "content": "Is it possible to replace a non-code section inside an ELF file? If so, then how? Is there something I would have to consider before simply replacing the bytes by some other bytes (of course nothing larger)? Maybe some hash or similar?\n\nNote that I'm not interested in modifying code, so the solutions presented in What are the available libraries to statically modify ELF executables? is not what I'm looking for, also many solutions there aren't architecture-agnostic.\n\n(BTW, I would require this for a replacing the initrd/initramfs file system embedded into a kernel image [vmlinux.64] which is also an ELF file, see https://unix.stackexchange.com/q/342298/117599. This question here is supposed to be more in general.)\n\n",
  "votes": "3",
  "answers": 1,
  "views": "3k",
  "tags": [
    "file-format",
    "elf",
    "section"
  ],
  "user": "phk",
  "time": "Apr 13, 2017 at 12:37",
  "comments": [],
  "answers_data": [
    {
      "content": "I'm not aware of any ready-made tools for such task, but I suspect in most cases the good old dd will do the task of replacing the actual bytes in the file  (or maybe you can make objcopy work too). What can be more difficult is making the code work with the changed data. This depends on the nature of the data in question. For example:\n\n",
      "votes": "5",
      "user": "Igor Skochinsky",
      "time": "Feb 13, 2017 at 13:29",
      "is_accepted": true,
      "comments": []
    }
  ]
}