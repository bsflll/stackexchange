{
  "title": "How to fix the type of a function pointer call in the Hex-Rays decompiler?",
  "link": "https://reverseengineering.stackexchange.com/questions/5904/how-to-fix-the-type-of-a-function-pointer-call-in-the-hex-rays-decompiler",
  "content": "In a disassembly with a call to a DirectDraw->BltFast function, I encountered the following:\n\n```\n(*(void (__stdcall **)(LPDIRECTDRAWSURFACE7, _DWORD, _DWORD, _DWORD, _DWORD, signed int, int, int, int, int))\n((void (__stdcall **)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD))v17->lpVtbl + 7))(\nv17,\n0,\n0,\n*(&g_COREvidSurf + 25),\n0,\n16,\nv75,\nv77,\nv79,\nv81);\n\n```\nThe cast has too many arguments. How does one edit the call's cast to fix the disassembly ?\n\nEDIT:\nAfter applying a struct to the code:\n\n```\n.text:00540825 030                 cmp     [esp+30h+arg_8], ecx\n.text:00540829 030                 mov     edx, g_COREvidSurf+64h\n.text:0054082F 030                 mov     eax, g_CoreVidsurf_6\n.text:00540834 030                 push    10h\n.text:00540836 034                 push    0\n.text:00540838 038                 push    edx\n.text:00540839 03C                 push    0\n.text:0054083B 040                 push    0\n.text:00540844 044                 mov     ecx, [eax]\n.text:00540846 044                 push    eax\n.text:00540847 048                 mov     eax,[ecx+IDirectDrawSurface7Vtbl.BltFast]\n.text:0054084A 048                 call    eax\n\n```\nand the decompilation:\n\n```\nv17.lpVtbl = (struct IDirectDrawSurface7::IDirectDrawSurface7Vtbl *)g_surface2;\n(*(void (__stdcall **)(struct IDirectDrawSurface7::IDirectDrawSurface7Vtbl *, _DWORD, _DWORD, _DWORD, _DWORD, signed int, int, int, int, int))(*(_DWORD *)v17.lpVtbl + offsetof(IDirectDrawSurface7Vtbl, BltFast)))(\nv17.lpVtbl,\n0,\n0,\n*(&g_COREvidSurf + 25),\n0,\n16,\nv75,\nv77,\nv79,\nv81);\n\n```\nThe struct used was selected from the standard struct selection in IDA, and if i press 'Y' on the declaration of BltFast in the struct declaration, the call is declared like this:\n\n```\nHRESULT (__stdcall *BltFast)(IDirectDrawSurface7 *This, DWORD, DWORD, LPDIRECTDRAWSURFACE7, LPRECT, DWORD)\n\n```\nwhich is correct, but as seen above, IDA is still showing too many args.\n\n",
  "votes": "2",
  "answers": 1,
  "views": "3k",
  "tags": [
    "ida",
    "disassembly"
  ],
  "user": "user8105",
  "time": "Jul 20, 2014 at 15:47",
  "comments": [],
  "answers_data": [
    {
      "content": "I would define a vtable struct which has the correct function pointers in it. I assume this is an IDirectDrawSurfaceX? The variable named v17->lpVtbl needs to have a type of  IDirectDrawSurfaceX *. Create this structure of function pointers according to the interface definition on MSDN or load it from a standard structures if IDA has imported the DirectX C interface definitions. Set the type of the v17->lpVtbl by pressing y on the definition of lpVtbl in whatever structure type v17 is. Then you may need to force the type of the function pointer call to the type of the interface member used in the vtable. You do this by right clicking the call site and choosing Force call type.\n\n",
      "votes": "4",
      "user": "Peter Andersson",
      "time": "Jul 20, 2014 at 14:56",
      "is_accepted": true,
      "comments": [
        {
          "user": "user8105",
          "text": "I couldnt find any reference to \"force call type\". Added the struct as suggested and edited question.",
          "time": null
        },
        {
          "user": "Peter Andersson",
          "text": "You need to fix whatever type v17 is so that the first member is pointer to the vtable. It looks like it's now using . notation and offsetof which shouldn't be happing. You should see v17->lpVtbl->BltFast. That is v17 is the pointer to the surface object whose first member is a pointer to the IDirectDrawSurface7 vtable and whose 7th(?) member is the pointer to the BltFast method. It looks like you made the vtable the first part of v17? You can hack around this by defining v17 as IDirectDrawSurface7 ** if you don't want to define a struct for v17.",
          "time": null
        },
        {
          "user": "user8105",
          "text": "yaya sorry just found \"force call type\" while not looking for it.That's what happens when one stares at the same code for a few months. FIXED. Thanks.",
          "time": null
        }
      ]
    }
  ]
}