{
  "title": "Why is is ghidra representing mips move instruction as _or?",
  "link": "https://reverseengineering.stackexchange.com/questions/27660/why-is-is-ghidra-representing-mips-move-instruction-as-or",
  "content": "Now of course I keep trying to change it but once I get to the end of patching it says its invalid and wont let me change it. So if you have a way to do that let me know.\n\n",
  "votes": "-1",
  "answers": 1,
  "views": "260",
  "tags": [
    "ghidra",
    "mips"
  ],
  "user": "Peter Robertson",
  "time": "May 13, 2021 at 13:24",
  "comments": [
    {
      "user": "Peter Teoh",
      "text": "Think about carefully mov is just OR with a zero register",
      "time": null
    },
    {
      "user": "Peter Robertson",
      "text": "@PeterTeoh yes but I have never seen (or) be represented as (_or)",
      "time": null
    },
    {
      "user": "mumbel",
      "text": "Ghidra uses _ before an instruction to designate it is in a branch delay slot",
      "time": null
    },
    {
      "user": "Peter Robertson",
      "text": "@mumbel thanks brother I am still learning ghidra how would the branch delay slot be edited to give correct output example: or a0,v0,zero to move av0,v0 works great but in _or a0,s0,zero it ads och 04ch 0ch 04ch above it, now there doesnt appear to be a such thing as _move so how would that be rectified?",
      "time": null
    },
    {
      "user": "mumbel",
      "text": "@PeterRobertson I would try clearing the branch instruction and the delay slot instruction, modify the delay slot instruction, and then re-disassemble both branch and delay slot instructions",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Ghidra uses _ before an instruction to designate it is in a branch delay slot â€“ mumbel 18 hours ago by @mumbel\n\n",
      "votes": "1",
      "user": "Peter Robertson",
      "time": "May 16, 2021 at 21:17",
      "is_accepted": false,
      "comments": []
    }
  ]
}