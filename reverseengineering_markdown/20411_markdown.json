{
  "title": "x64dbg - Conditional breakpoint based on function argument",
  "link": "https://reverseengineering.stackexchange.com/questions/20411/x64dbg-conditional-breakpoint-based-on-function-argument",
  "content": "How can I set a conditional breakpoint based on the argument of a function?\n\nI am trying to break on the windows function LoadLibraryExW: https://docs.microsoft.com/en-us/windows/desktop/api/libloaderapi/nf-libloaderapi-loadlibraryexw\n\nI want to break on this function only when the first argument (lpLibFileName) is equal to L\"Test.dll\". When I break on the function I can see that L\"Test.dll\" is esp+4.\n\nI've tried a few different variations without success. They either break on every LoadLibraryExW calls or none. Variations like:\n\n```\nBreak Condiditon: [esp+4]==L\"Test.dll\"\nBreak Condition: esp+4==L\"Test.dll\"\netc..\n\n```\nWhat is the proper way of setting a conditional breakpoint based on function arguments? Or register offsets?\n\n",
  "votes": "0",
  "answers": 1,
  "views": "5k",
  "tags": [
    "windows",
    "x86",
    "x64dbg",
    "breakpoint"
  ],
  "user": "user3238415",
  "time": "Jan 18, 2019 at 11:01",
  "comments": [
    {
      "user": "mrexodia",
      "text": "In this specific case you can just set a DLL breakpoint for “Test.dll”",
      "time": null
    },
    {
      "user": "user3238415",
      "text": "Thanks for that. Will keep this open as I'm still interested in the answer",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "As commented by @mrexodia  you can set a DLL breakpoint \n\n```\nTyp Address  Module/La State   Disassembly H Summa\nDLL                               \n    76850000 gdi32.dll Enabled  0 all()\n\n```\nGo to breakpoint window (alt+b) -> Right Click Add Dll BreakPoint \n\nType test.dll \n\nThis will break when test.dll is loaded \n\nString compare as such isn't yet implemented. A bug report exists from 2017 and a workaround exists which states using a third party plugin\nwhich you can check out. \n\nOr simply split the string into bytes and compare  the bytes \nlike \n\n```\nType     Address  Module/Label/Exception     State   Disassembly H Summary                                                                                         \nSoftware                                                           \n         76ACE8A5 <kernel32.dll.CreateFileW> Enabled mov edi,edi 5 breakif((1:[[esp+4]+0xc] == 66) &&  (1:[[esp+4]+0xe] == 69)), log(\"brk hit   { 1:[[esp+4]+c] }\")\n\n```\n\n\nx64dbg has broken when file testmefive.txt was opened for source code below with above byte compare method\n\n```\n#include <stdio.h>\n\nint main(void)\n{\n    char *filenames[] = {\n        \"testmeone.txt\",\n        \"testmetwo.txt\",\n        \"testmethree.txt\",\n        \"testmefour.txt\",\n        \"testmefive.txt\"};\n    for (int i = 0; i < 5; i++)\n    {\n        FILE *fp = NULL;\n        errno_t err = fopen_s(&fp, filenames[i], \"r\");\n        if (err == 0 && fp != 0)\n        {\n            char buff[0x50] = {0};\n            fread_s(buff, 0x50, 1, 0x50, fp);\n            printf(\"%s  \n\", buff);\n            fclose(fp);\n        }\n    }\n}\n\n```\n",
      "votes": "0",
      "user": "blabb",
      "time": "Jan 18, 2019 at 22:55",
      "is_accepted": true,
      "comments": []
    }
  ]
}