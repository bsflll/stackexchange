{
  "title": "Rebuilding firmware back to binary file",
  "link": "https://reverseengineering.stackexchange.com/questions/17017/rebuilding-firmware-back-to-binary-file",
  "content": "I used Binwalk to extract firmware files,  extracted content include 2 folders and one binary file.\n\n```\nsquashfs-root\n_351C.extracted\n351C\n\n```\nSquashfs-root contains file system, '_351C.extracted' folder contains security certificates (.crt). Don't know what is '351C' binary file (2.96 Mb).\n\nNow I need to rebuild firmware back to binary image (.bin). How to rebuild this into binary firmware image? I tried use Firmware Mod Kit to extract fw, but it old, fails to run on my LTS 16.04 due missing some dependencies.\n\nThe FW file.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "2k",
  "tags": [
    "binary-analysis",
    "firmware",
    "linux",
    "embedded"
  ],
  "user": "Lexx Luxx",
  "time": "Dec 20, 2017 at 14:06",
  "comments": [],
  "answers_data": [
    {
      "content": "It really depends on the firmware format. If it was pure squashfs, without any additional header, just generate the new firmware file out of your set of files via mksquashfs https://elinux.org/Squash_FS_Howto#Creating_and_using_squashed_file_systems\nOtherwise, you'll need to append header/footer to the squashfs file to make it look like the original firmware.\n\n",
      "votes": "1",
      "user": "Anton Kukoba",
      "time": "Dec 20, 2017 at 9:52",
      "is_accepted": false,
      "comments": [
        {
          "user": "Lexx Luxx",
          "text": "For more specific, I added an actual FW file. Is there other tools or methods to add header and footer and rebuild to original binary?",
          "time": null
        }
      ]
    }
  ]
}