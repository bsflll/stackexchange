{
  "title": "Can I search floats / doubles in IDA?",
  "link": "https://reverseengineering.stackexchange.com/questions/8685/can-i-search-floats-doubles-in-ida",
  "content": "I have two versions of the same binary, and I know that both are using a float (127.0) which is stored in a variable like ds:dbl_7F5A28 (offset from binary #1).\n\nThere's only one xref to that dbl_ in both binaries, but I don't know how to find 127.0 in binary #2, so I can xref it and find the function that's using it.\n\nSo, is there a way to search for float / double values in IDA?\n\n",
  "votes": "0",
  "answers": 1,
  "views": "2k",
  "tags": [
    "ida"
  ],
  "user": "rev",
  "time": "Apr 11, 2015 at 15:49",
  "comments": [
    {
      "user": "user1743",
      "text": "I'm not sure if this helps at all, but would it be easier to search for the instructions that manipulate floating point values?",
      "time": null
    },
    {
      "user": "rev",
      "text": "@blahfish I'm analyzing a game, and floating point values are (ab)used a lot, so that wouldn't help",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "There are some ways to do this.\n\nGood luck\n\n",
      "votes": "1",
      "user": "w s",
      "time": "Apr 12, 2015 at 5:30",
      "is_accepted": false,
      "comments": [
        {
          "user": "rev",
          "text": "The problem is that the binary is kinda big (200MB+), so text search is really, really slow and not effective. Binary search didn't work (searched for 0x42fe0000 -> 127.0)",
          "time": null
        },
        {
          "user": "w s",
          "text": "what does it mean didn't work ? Gave too much alternatives or did not find anything ? Did you try binary search on first executable ?",
          "time": null
        },
        {
          "user": "rev",
          "text": "Did not find anything, however, I just found the function by xref-ing other known functions, and it does use the number (as I supposed). Therefore, not a reliable way to search for floats.",
          "time": null
        },
        {
          "user": "w s",
          "text": "Does binary representation looks the same in both executables ?",
          "time": null
        },
        {
          "user": "rev",
          "text": "It 'does': in one binary it's like 127.0, in the other one it's in hexadecimal form. I can, of course, make both be 127.0 or 0x42fe0000  by redefining the type, but if I need to find it first, there's no way I can do this.",
          "time": null
        }
      ]
    }
  ]
}