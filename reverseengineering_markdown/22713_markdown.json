{
  "title": "Finding \"func main\" in a stripped binary written in GO",
  "link": "https://reverseengineering.stackexchange.com/questions/22713/finding-func-main-in-a-stripped-binary-written-in-go",
  "content": "I'm reversing a binary that was apart of a CTF I was involved in about a month ago. It was too large of a binary to do during the challenge so I am doing it now.\n\nI am having trouble finding the main function because the entry function is not the same as if this was written in C and compiled with GCC. I was wondering how I could go about finding the main function and if there were any resources that could assist me in my endeavors. \n\n",
  "votes": "2",
  "answers": 1,
  "views": "479",
  "tags": [
    "binary-analysis",
    "binary",
    "ghidra",
    "x86-64"
  ],
  "user": "Chase Opsahl",
  "time": "Dec 11, 2019 at 14:53",
  "comments": [
    {
      "user": "diff",
      "text": "Wrote an article about this a bit back and maintain an IDA plugin that resolves the function names, it could be a good starting point for you; rednaga.io/2016/09/21/reversing_go_binaries_like_a_pro",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "You can find some plugins that does the functions renaming for go language (and others as well). For example this one could be used and after renaming bunch of methods can be seen:\n\n\n",
      "votes": "1",
      "user": "Paweł Łukasik",
      "time": "Dec 10, 2019 at 16:52",
      "is_accepted": true,
      "comments": [
        {
          "user": "Chase Opsahl",
          "text": "Cool! I'll try that out! Thank you :)",
          "time": null
        }
      ]
    }
  ]
}