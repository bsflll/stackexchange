{
  "title": "Different offsets in different Windows versions",
  "link": "https://reverseengineering.stackexchange.com/questions/8265/different-offsets-in-different-windows-versions",
  "content": "I loaded a file into OllyDbg, and on my Windows 8, I see offsets of this format '7780XXXX':\n\n```\n7780DE50\n7780DE52\n...\n\n```\nOn my XP machine it goes like this 0041XXXX:\n\n```\n004171A2\n004171A4\n...\n\n```\nWhy is there a difference in the format?\n\nHelp me understand, and thank you in advance.\n\n",
  "votes": "3",
  "answers": 1,
  "views": "197",
  "tags": [
    "windows",
    "ollydbg",
    "windows-8"
  ],
  "user": "Mark",
  "time": "Apr 21, 2015 at 11:36",
  "comments": [
    {
      "user": "DarthGizka",
      "text": "Under Windows XP, binaries tend to get loaded at their preferred load address if there aren't any conflicts (e.g. between DLLs bound for the same load address), which avoids the need for relocations to be applied. Vista introduced Address Space Layout Randomisation (ASLR), which causes load addresses to be randomised within certain limits. Also, /LARGEADDRESSAWARE programs can see an extended address space if a 32-bit Windows is started with the /3GB switch; for Wow64 it's about 4GB. Shared/system DLLs tend to go to 7xxxxxxx",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Because ASLR is enabled in Windows 8, but not in Windows XP. The memory space layout is randomized when ASLR is enabled.\nIf you want to disable it for a particular executable, you can do it with the tool setdllcharacteristics. Here is an example of how to use it:\n\n```\nsetdllcharacteristics.exe -d \"<your executable>.exe\"\n\n```\n",
      "votes": "2",
      "user": "perror",
      "time": "Feb 20, 2015 at 7:59",
      "is_accepted": false,
      "comments": []
    }
  ]
}