{
  "title": "IDA \"unk_XXXXXX\" meaning? [duplicate]",
  "link": "https://reverseengineering.stackexchange.com/questions/21120/ida-unk-xxxxxx-meaning",
  "content": "I am new to reverse engineering.\nToday when looking at IDA, I found this\n\n```\nif ( *(_UNKNOWN **)(this + 8) == &unk_4EDC58 )\n\n```\nbut I dont understand the part \"unk_4EDC58\".\n\nSo can you help me ? Thank you !\n\n",
  "votes": "3",
  "answers": 1,
  "views": "1k",
  "tags": [
    "ida"
  ],
  "user": "Nguyễn Quốc Trung",
  "time": "6 years ago",
  "comments": [
    {
      "user": "Nguyễn Quốc Trung",
      "text": "@Biswapriyo oh sorry, my bad.... Do I need to delete this question ? This is the second time I ask a question on SO",
      "time": null
    },
    {
      "user": "Biswapriyo",
      "text": "No, no, don't delete your question. This is a valid Q&A.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "For IDA, it means this part of memory, at the address 0x004EDC58, doesn't have any types.\n\nIt's hard to be 100% sure with only one line of decompiled code, but I guess this code is typical from cl.exe (Microsoft C++ compiler) when it tries to inline a virtual method. To do so, it will directly check if the method (this + 8) is equal to the current method (0x004EDC58). If it's true, it will continue to the current code. Otherwise, the address of the method at this + 8 is read and it jumps to this address.\n\nYou have different options to set a type to this memory part. Since it seems to be a pointer to something, go to this address address and type 'o' or Edit → Operand type → Offset → Offset (data segment).\n\n",
      "votes": "2",
      "user": "wisk",
      "time": "Apr 11, 2019 at 20:14",
      "is_accepted": true,
      "comments": []
    }
  ]
}