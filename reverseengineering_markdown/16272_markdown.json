{
  "title": "Debugging EXE File in Windbg and How to set Breakpoints in Assembly",
  "link": "https://reverseengineering.stackexchange.com/questions/16272/debugging-exe-file-in-windbg-and-how-to-set-breakpoints-in-assembly",
  "content": "I am trying to set a breakpoint (created in assembly) and step into an EXE file line by line to watch registers and memory behavior. I have done this easily with gdb under Linux like this.\n\n```\ngdb -q ./AssembledLinkedFile -tui\nbreak _start  (or break *&code for C using shellcode)\nrun\nstepi\n\n```\nThis works perfectly. However, The documentation for Windbg does not seem so straight forward.\n\nSince using GoLink adds several lines of asm, I need to find my assembly and start at the beginning  (_start:)\n\nCurrent process.\n\nAfter I open the messageBox64bit.EXE in Windbg, how can I  set a breakpoint in my assembly (_start:), then step into? \n\n",
  "votes": "2",
  "answers": 1,
  "views": "1k",
  "tags": [
    "gdb",
    "windbg",
    "shellcode",
    "nasm",
    "assembly"
  ],
  "user": "hexhatchet",
  "time": "Sep 5, 2017 at 15:48",
  "comments": [],
  "answers_data": [
    {
      "content": "It seems  bp $exentry should set breakpoint on the entrypoint, then you can continue (g) until you hit it.\n\n",
      "votes": "2",
      "user": "Igor Skochinsky",
      "time": "Sep 5, 2017 at 15:11",
      "is_accepted": true,
      "comments": []
    }
  ]
}