{
  "title": "radare2 get API library and name from address",
  "link": "https://reverseengineering.stackexchange.com/questions/16790/radare2-get-api-library-and-name-from-address",
  "content": "When I disassemble a jmp I get:\n\n```\n[0x004073d4]> pd 1\n            0x004073d4      ff2584804000   jmp dword [sym.imp.kernel32.dll_GetModuleHandleA] ; 0x408084 ; \"j\\x85\"\n\n```\nIs there a command I can get the information contained in  sym.imp.kernel32.dll_GetModuleHandleA by providing the address 0x408084? \nPreferably in Json as I'm using this for a script.\n\nI searched a bit but could not find anything.\n\n",
  "votes": "4",
  "answers": 2,
  "views": "1k",
  "tags": [
    "radare2"
  ],
  "user": "simonzack",
  "time": "Nov 20, 2017 at 8:00",
  "comments": [],
  "answers_data": [
    {
      "content": "sym.imp.kernel32.dll_GetModuleHandleA is a flag radare2 defined for this address.  \n\nThis flag name is combined from 4 parts:\n\nTo handle flags with radare2 you should use the f command and its subcommands. Use f? to list all of them. \n\nFor your case, the right way to get the flag name for a given address is to use the fd command like this:  \n\n```\n[0x004073d4]> fd 0x408084 \nsym.imp.kernel32.dll_GetModuleHandleA\n\n```\nYou can split it to the function and the DLL name by using simple string manipulation with the programming language you are using to script radare.\n\nOn a personal note I will say that the best way to script with radare2 is to use r2pipe which is a very simple interface to radare2. You may already started using it but just in case, here's how simple it looks like with Python:\n\n```\nimport r2pipe\n\nr2 = r2pipe.open(\"/bin/ls\")\nr2.cmd(\"aa\")\nprint(r2.cmd(\"afl\"))\nprint(r2.cmdj(\"aflj\"))  # evaluates JSONs and returns an object\nr2.quit()\n\n```\nI suggest you to read the Radare2 Book to learn more about radare2 and how to use it.\n\n",
      "votes": "4",
      "user": "Megabeets",
      "time": "Nov 19, 2017 at 22:16",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "```\n[0x01012d6c]> pd 1 @ 0x1012d89\n\n| 0x01012d89    ff154c110001  call dword [sym.imp.KERNEL32.dll_GetStartupInfoA]; 0x100114c\n\n[0x01012d6c]> pxrj  4 @ 0x100114c\n\n[{\"addr\":16781644,\"value\":2011045392,\"ref\":\"reloc.KERNEL32.dll_GetStartupInfoA_16\"}]\n[0x01012d6c]>\n\n```\n",
      "votes": "1",
      "user": "blabb",
      "time": "Nov 19, 2017 at 20:53",
      "is_accepted": false,
      "comments": []
    }
  ]
}