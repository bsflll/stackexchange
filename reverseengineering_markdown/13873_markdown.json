{
  "title": "Call Android method without running whole Android-App",
  "link": "https://reverseengineering.stackexchange.com/questions/13873/call-android-method-without-running-whole-android-app",
  "content": "I want to ask if somebody is aware of tools/projects which are similar to the Appcall feature of IDA Pro[1] for Android Apps?\n\nI'm looking for the possibility to run certain methods detected in the smali code without running the whole APK.\n\nThanks in advance for your help :-)\n\n[1] http://www.hexblog.com/?p=113\n\n",
  "votes": "2",
  "answers": 1,
  "views": "817",
  "tags": [
    "android",
    "gdb",
    "dynamic-analysis"
  ],
  "user": "bujindo",
  "time": "Nov 6, 2016 at 14:55",
  "comments": [
    {
      "user": "0xec",
      "text": "Check this: github.com/CalebFenton/simplify and this calebfenton.github.io/2016/04/30/â€¦",
      "time": null
    },
    {
      "user": "Martin",
      "text": "Just to clarify: Appcall requires you to run the binary before allowing you to call its functions. It won't work statically.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "You should be able to write a separate application that dynamically loads the dex file from the app that you are interested in using DexClassLoader, allowing you to construct classes and call methods from that dex file. \n\nYou can get the path to the other apk using PackageManager.getApplicationInfo(). The sourceDir field of the returned ApplicationInfo object will have the path to the apk.\n\n",
      "votes": "4",
      "user": "JesusFreke",
      "time": "Nov 6, 2016 at 20:44",
      "is_accepted": true,
      "comments": [
        {
          "user": "bujindo",
          "text": "Thanks for your fast help :-) This sounds like an appropriate solution :-)",
          "time": null
        }
      ]
    }
  ]
}