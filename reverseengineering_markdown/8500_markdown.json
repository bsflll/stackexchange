{
  "title": "Reverse-Engineer an application download in base64 [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/8500/reverse-engineer-an-application-download-in-base64",
  "content": "An application on my system downloads a .sys file (driver) via base64. What I mean is; the application requests a site, the site returns a huge base64-encoded string and then the .sys file is built via this string.\n\nI'm intrigued and interested (for educational purposes) as to how I could go about building the .sys file via the string I have.\n\nAny guidance is appreciated,\nCheers.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "592",
  "tags": [
    "disassembly",
    "windows",
    "dll"
  ],
  "user": "Kon",
  "time": "10 years ago",
  "comments": [
    {
      "user": "Dominik Antal",
      "text": "Base64 is an encoding, meaning that your sys is represented in an base64 encoded form. If I understand your question correctly, all you have to do is decode it and you'll get your file. If you are on linux I think a simple \"cat sys.base64| base64 -D > sys\" would do the job. en.wikipedia.org/wiki/Base64",
      "time": null
    },
    {
      "user": "Dominik Antal",
      "text": "I'm voting to close this question as off-topic because it is not a reverse engineering question.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "http://www.motobit.com/util/base64-decoder-encoder.asp\n\nChoose decode the data from a Base64 string and export to a binary file.\n\n",
      "votes": "1",
      "user": "Jason Geffner",
      "time": "Mar 19, 2015 at 17:49",
      "is_accepted": false,
      "comments": [
        {
          "user": "Guntram Blohm",
          "text": "Dang, Jason, you beat me by 30 seconds. However, i'd like to add that this only works if the file is just the base64 decoded string; it might be encrypted/randomized some more, in which case your file will be nothing but garbage, and you'd have to break that extra encryption.",
          "time": null
        },
        {
          "user": "Kon",
          "text": "I'm aware of how to decode that, my mistake - should of pointed it out. Anyhow, by string I mean the dll itself. It builds itself from that string, which is what I'm trying to get at.",
          "time": null
        },
        {
          "user": "0xec",
          "text": "@Kon Base64 is just a way to represent binary data using a radix-64 representation. Once you convert it back to binary, you get the original file you are looking for. There is nothing extra involved. If you are interested in the base64 algorithm itself, look in the wiki",
          "time": null
        },
        {
          "user": "Kon",
          "text": "How would one convert it back to binary? I don't think you understand me.",
          "time": null
        },
        {
          "user": "Guntram Blohm",
          "text": "I think you don't understand us. After you decode the string, the result will be binary.",
          "time": null
        }
      ]
    }
  ]
}