{
  "title": "Dylib can run without code sign in iOS?",
  "link": "https://reverseengineering.stackexchange.com/questions/13776/dylib-can-run-without-code-sign-in-ios",
  "content": "I learn from somewhere dylib should be signed in iOS, otherwise dyld will refuse to execute it.\n\nBut when I test the example of this post. The dylib is not signed by default in this project, but it just running well when try to open it. I have verified the dylib's binary doesn't contain lc_code_signature.\n\nAnyone can explain this? \n\nI test on a jailbreak device with 3 cases for a dylib without lc_code_signature. \n\nThey all succeed.\n\n",
  "votes": "2",
  "answers": 1,
  "views": "5k",
  "tags": [
    "ios",
    "dynamic-linking"
  ],
  "user": "Karl",
  "time": "Oct 24, 2016 at 8:35",
  "comments": [
    {
      "user": "Igor Skochinsky",
      "text": "well, jailbreaks usually disable signature checking completely so no wonder it works.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "EDIT: The below applies only to non-jailbroken devices. Jailbreaks usually disable signature checking completely to allow unsigned homebrew software to run.\n\nApparently only libraries which are listed as dependencies of the executable in the header (LC_LOAD_DYLIB and similar commands) are checked, and those loaded with dlopen are not.\n\nThis is mentioned indirectly in the Code Signing Guide:\n\nFollowing the link, we see this passage:\n\nSo it would seem that dlopen should not be able to load unsigned libraries in iOS 8 and higher, though I have not checked this.\n\n",
      "votes": "3",
      "user": "Igor Skochinsky",
      "time": "Nov 23, 2016 at 19:08",
      "is_accepted": false,
      "comments": [
        {
          "user": "Karl",
          "text": "Thanks for you detail explain. I use iOS9 to test, and still can load unsigned binary.",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "@Karl: and you're not using a jailbroken device? In that case it seems either the doc is wrong, or there is a bug.",
          "time": null
        }
      ]
    }
  ]
}