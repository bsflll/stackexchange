{
  "title": "dnSpy works really slow. How can I fix it?",
  "link": "https://reverseengineering.stackexchange.com/questions/29136/dnspy-works-really-slow-how-can-i-fix-it",
  "content": "I've been doing some stuff with a pre-compiled .NET executable. It is my first time reversing something, so I don't know much.\n\nI got a bunch of programs like ILSpy, dnSpy and dotPeek. They all do as much as they can, not 100% accurate, but quite enough. I found that it is best to use dnSpy as I can easily change some methods without having to recompile the whole project.\n\nHowever, it takes so much time to decompile some classes with this piece of software. It takes about 20 seconds to decompile Main.cs (>50k lines, perfect engineering yeah) with ILSpy, and it takes an eternity (more than 5 minutes) to decompile it with dnSpy.\n\nThe codes these programs give out are pretty much the same. I have a pretty weak PC, but according to the task manager, my 6 core CPU never goes above 50% on any of the cores while decompiling. Moreover, whenever I go into editing mode to edit some classes or methods, the editor goes stop-motioning, with response time about 3 seconds with that Main.cs file and quite a low performance on smaller files.\n\nSo I am thinking that maybe there are some settings I need to tweak for better performance?\n\n",
  "votes": "0",
  "answers": 1,
  "views": "608",
  "tags": [
    "executable",
    ".net",
    "dnspy"
  ],
  "user": "ymdred16",
  "time": "Aug 30, 2021 at 21:51",
  "comments": [],
  "answers_data": [
    {
      "content": "Welcome,\n\nit's hard to guess with the information that you provided but I believe you tried very hard.\n\nCheckout https://github.com/dnSpy/dnSpy this is source code and it will help you tweak it for your needs\n\n",
      "votes": "1",
      "user": "BadSugar",
      "time": "Aug 17, 2021 at 1:54",
      "is_accepted": false,
      "comments": []
    }
  ]
}