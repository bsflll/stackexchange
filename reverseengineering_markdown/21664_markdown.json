{
  "title": "IDA taking forever to run autoanalysis on remote Android app?",
  "link": "https://reverseengineering.stackexchange.com/questions/21664/ida-taking-forever-to-run-autoanalysis-on-remote-android-app",
  "content": "I've disassembled and run auto-analysis on a .so file from an Android apk, and then hooked up the remote ARM debugger to an emulator. IDA then asked me if /data/app/com.package.name/lib/arm/libil2cpp.so is the same file as libil2cpp.so on my computer, which it is so I said yes. It took a few minutes to \"move database\", \"move functions\", etc. and now it's taking hours to perform auto-analysis all over again on the mapped files.\n\nIs there any way to speed this up, and will it happen every time I start a remote debugging session?\n\nFollow-up question: I learned that this is caused by IDA rebasing the program every time. Why can't it just use offsets from the start of the program and avoid rerunning the static analysis?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "1k",
  "tags": [
    "ida",
    "android"
  ],
  "user": "Akababa",
  "time": "Jul 17, 2019 at 2:09",
  "comments": [
    {
      "user": "MazeGen",
      "text": "Isn't it because of rebasing? What version of IDA do you use?",
      "time": null
    },
    {
      "user": "Akababa",
      "text": "Yeah it is... I'm using 32-bit IDA Pro 7.0.170914.",
      "time": null
    },
    {
      "user": "MazeGen",
      "text": "I didn't try it but with IDA 7.3 the rebasing should be much faster: hex-rays.com/products/ida/7.3/index.shtml",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I can confirm that the rebasing is much faster with IDA 7.4, and it seems to be addressed in version 7.3:\n\nHowever, I can't answer the follow-up question.\n\n",
      "votes": "1",
      "user": "Community",
      "time": "Jun 17, 2020 at 9:54",
      "is_accepted": false,
      "comments": []
    }
  ]
}