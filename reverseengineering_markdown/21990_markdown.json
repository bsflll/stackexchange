{
  "title": "How to set virtual `T` register programmatically in IDA Python?",
  "link": "https://reverseengineering.stackexchange.com/questions/21990/how-to-set-virtual-t-register-programmatically-in-ida-python",
  "content": "It is trivial to do it with Alt+G command from GUI.\n\nHowever, when I set multiple breakpoints programmatically, IDA doesn't recognize them as \"thumb\" mode ones and sets T value at breakpoint address to 0. When IDA tries to use ARM mode instead of Thumb, it is guaranteed to crash.\n\nSetting T value 50 times manually is supposed to be too slow.\n\nSo, I try to set T = 1 programmatically.\n\nHowever, I have no idea how to do that.\n\nI tried this:\n\n```\nidaapi.set_sreg_at_next_code(function_pointer, function_pointer + 2, idaapi.str2reg(\"T\"), 1)\n\n```\nAnd this:\n\n```\nidaapi.set_default_sreg_value(idaapi.getseg(function_pointer), idaapi.str2reg(\"T\"), 1)\n\n```\nIDA simply ignores both calls, no error occurs, but T value doesn't change.\n\nDoes anyone know how to change virtual T segment register value with IDAPython in ARM mode?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "741",
  "tags": [
    "ida",
    "idapython"
  ],
  "user": "Vitalii",
  "time": "Aug 28, 2019 at 14:46",
  "comments": [],
  "answers_data": [
    {
      "content": "I found solution myself. Correct code follows:\n\n```\nidaapi.split_sreg_range(instruction_pointer, idaapi.str2reg(\"T\"), required_t_value, idaapi.SR_user)\n\n```\nwhere instruction_pointer is instruction address which mode you want to change, and required_t_value is new mode (1 for Thumb, 0 for ARM), and \n\n",
      "votes": "2",
      "user": "Vitalii",
      "time": "Aug 29, 2019 at 9:19",
      "is_accepted": false,
      "comments": []
    }
  ]
}