{
  "title": "Does anyone know this encoding?",
  "link": "https://reverseengineering.stackexchange.com/questions/13757/does-anyone-know-this-encoding",
  "content": "There is an interesting article on Phack:\nhttp://phrack.org/issues/69/15.html#article\n\nAt the end of the article there is the source appended in a strange encoding. \n\n```\nbegin 664 hypervisor_for_rootkit.tar.gz\nM'XL(`%?BS58``^P];7>B2-;]U3ZG_P/K[LXQTU$!$<R0S!Q4['C&1!\\U[<PS\nM/<=%*)5I!`8P+],[_WUO%:!@0,U+)YUNJF,+U*U;5??]E@7,;VSD7.JNY8RG\nM\\'$LR_NH>^57CUEH*`)-XV]&J,:^P_**87F^4N$96A!>T0S'5/A75/511Y%2\n...\n`\nend\n\n```\nDoes anyone know how to convert this back to the original archive?\n\n",
  "votes": "5",
  "answers": 3,
  "views": "2k",
  "tags": [
    "file-format",
    "encodings"
  ],
  "user": "Konrad Eisele",
  "time": "Oct 18, 2016 at 15:44",
  "comments": [],
  "answers_data": [
    {
      "content": "This seems to be UUencoded data.\n\n",
      "votes": "7",
      "user": "Guntram Blohm",
      "time": "Oct 18, 2016 at 16:34",
      "is_accepted": true,
      "comments": [
        {
          "user": "Konrad Eisele",
          "text": "I succeeded decode it with perl: the format is \"u61\". put the string into $a and: open(my $out, '>:raw', 'b1.tar.gz') or die \"Unable to open: $!\"; print $out unpack(\"u61\",$a); close($out);",
          "time": null
        },
        {
          "user": "Konrad Eisele",
          "text": "Append: there happen to be a program to decode as well:  \"uudecode\"",
          "time": null
        }
      ]
    },
    {
      "content": "Guntram Blohm seems to be right. But in the spirit of \"give a man a fish and he has food for one day\", magic mime is an easy way to figure out most formats. The file command detects filetypes by their \"magic\" mime, i.e. markers left in the file (like you see %PDF in PDFs and PK in zip files).\n\nfile accepts as argument a filename, like file /tmp/unknown-file. It can also read from STDIN if you use - as the \"file\" argument. This makes it easy to just figure out an encoding you're seeing without having to store the file:\n\n```\ncat | file -\n\n```\nNow paste the data and end with Ctrl+D (which signals 'end of input'). In your case, the result is this:\n\n```\n/dev/stdin: uuencoded or xxencoded, ASCII text\n\n```\nFor some formats it can give a lot of information, like for gzip compressed data:\n\n```\necho test | gzip | file -\n/dev/stdin: gzip compressed data, last modified: Wed Oct 19 01:36:02 2016, from Unix\n\n```\n",
      "votes": "4",
      "user": "Luc",
      "time": "Oct 19, 2016 at 1:41",
      "is_accepted": false,
      "comments": [
        {
          "user": "Nick Mertin",
          "text": "Also, if you add -z, it will look inside compressed files, giving you even more information",
          "time": null
        }
      ]
    },
    {
      "content": "If you are using a file manager like Total Commander on Windows, simply create a new text file (Shift+F4), name it like you want followed by .uue extension\ni.e. hypervisor_for_rootkit.tar.gz.uue\n\nThen paste the whole encoded symbols in that new text file with *.uue extension including the 'begin ...' and 'end' strings.\n\nNow open (click) that file in Total Commander and it'll be ready to unpack (decode) it to the sidebar location.\n\nOr Files -> Decode File... in menu on selected .uue file\n\n",
      "votes": "-1",
      "user": "at-hex",
      "time": "Oct 28, 2018 at 3:45",
      "is_accepted": false,
      "comments": []
    }
  ]
}