{
  "title": "Ida+Windbg alternative of Olly's \"Back to user code\" feature",
  "link": "https://reverseengineering.stackexchange.com/questions/31688/idawindbg-alternative-of-ollys-back-to-user-code-feature",
  "content": "I'm learning lena151's materials and in 4 lesson she uses Olly's Back-to-user feature to find where the MassegeBox is creating.\n\n\n\nIt works fine under x32 windows server 2003.\n\nBut what about nowadays?!\n\nIs there similar option in IDA+WINDBG for x64 apps?\nCoz I've tried setting BP to the .text section but I faced the message of IDA 'BP set is failed coz of break point overlapping' (so you should delete all previous if some was set)\n\n",
  "votes": "3",
  "answers": 1,
  "views": "213",
  "tags": [
    "ida",
    "ollydbg",
    "windbg"
  ],
  "user": "tejinaji",
  "time": "Mar 18, 2023 at 19:20",
  "comments": [],
  "answers_data": [
    {
      "content": "I've got found incredibly good plugin for IDA.\n\nThe tools:\n\nThe task:\nDo any action and find out which function was called.\n\nThe recipe:\n\n1. Get the script by typing git clone https://github.com/deresz/funcap.git\n\n2. Run IDA and select the Local Windows debugger (Windbg froze up when launch with lots of breakpoints).\n\n3. Run process as usual, right till the exe fully loads up.\n\n4. Pause process, hold ALT+F7 and select funcap.py script\n\n5. Now type in command line d.hookSeg('.text') and run process.\n\n6. Now just click the interesting button and wait till it fully drawn.\n\n7. You will see a lot of logs in the IDA output, select and copy whole text to some notepad and search for MessageBox. Here we go :ли\n\n",
      "votes": "2",
      "user": "tejinaji",
      "time": "Mar 27, 2023 at 18:34",
      "is_accepted": true,
      "comments": []
    }
  ]
}