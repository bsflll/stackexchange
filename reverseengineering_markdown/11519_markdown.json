{
  "title": "Analyzing a Login Process",
  "link": "https://reverseengineering.stackexchange.com/questions/11519/analyzing-a-login-process",
  "content": "I am reverse engineering a program that uses a custom auth protocol. This is a basic outline of the process:\n\nThe communication is all done via HTTP. My goal is to locate and analyze the functions responsible for calculating the session key. My most recent approach was to set a breakpoint on ws2_32.recv, begin the login process, then step through the execution from the recv breakpoint to analyze how the public key was being used to calculate the session key.\n\nHowever, the breakpoint isn't triggered at the expected time. A breakpoint on ws2_32.send is triggered as expected. I'm pretty stumped on this. Is there something I've overlooked? Is there a better approach to locating the functions?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "934",
  "tags": [
    "binary-analysis",
    "debugging",
    "dynamic-analysis"
  ],
  "user": "Invalidation",
  "time": "Dec 13, 2015 at 9:41",
  "comments": [
    {
      "user": "Remko",
      "text": "Is the client a (windows) executable? You could look at what the executable imports in the Import Address Table or run it through a disassembler.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Your program might be using ws2_32.recvfrom instead of ws2_32.recv. Or alternatively, it could be using one of the lower-level Winsock functions, such as ws2_32.WSARecv, ws2_32.WSARecvEx, ws2_32.WSARecvFrom, or ws2_32.WSARecvMsg.\n\nYou may want to try one of the following approaches to determine what the program is doing:\n\n",
      "votes": "1",
      "user": "Jason Geffner",
      "time": "Dec 14, 2015 at 15:57",
      "is_accepted": false,
      "comments": [
        {
          "user": "Invalidation",
          "text": "I took a look at the process with API monitor and monitored all functions under \"networking\". I also set individual breakpoints on recv, recvfrom, WSARecv, WSARecvEx, and WSARecvFrom. Though the auth library calls send, it never seems to call any of the recv functions listed. The only calls to recv are from libcef.dll, and the calls are out of order in relation to the auth library's send calls. I'm watching the recv packets come in simultaneously using network monitor, too. Also, WSARecvMsg isn't recognized by API Monitor nor Immunity Debugger for me.",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "Sounds like using Process Monitor is the way to go, then.",
          "time": null
        }
      ]
    }
  ]
}