{
  "title": "How to check if a memory range or an address is DEP-enabled or not?",
  "link": "https://reverseengineering.stackexchange.com/questions/11899/how-to-check-if-a-memory-range-or-an-address-is-dep-enabled-or-not",
  "content": "Is there any easy way by using windbg/ollydbg to figure out a memory range or simply an address is DEP-enabled or not?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "1k",
  "tags": [
    "ollydbg"
  ],
  "user": "user15580",
  "time": "Jan 31, 2016 at 4:56",
  "comments": [],
  "answers_data": [
    {
      "content": "For your case all \"DEP enabled\" for a process means is that the stack and heap are not writable and executable. By the time you can attach a debugger you just need to check if the stack and heap are ReadWrite or ReadWriteExecute. \n\nIn Windbg you can use either !vprot or !address to get this information. In Olly I believe there's a window under view that will give you a list of the memory regions in a process and their associated protections.\n\nAdditionally you can check the PE header of an executable to see if it supports DEP or not. The mona plugin gives you a quick command to see this, but there are probably others as well.\n\n",
      "votes": "1",
      "user": "Fewmitz",
      "time": "Jan 31, 2016 at 4:20",
      "is_accepted": true,
      "comments": [
        {
          "user": "peter ferrie",
          "text": "stack and heap are not the only regions covered by DEP.  It's simply that any page in the process space is either executable or it's not, assuming that DEP is enabled for the process at all.",
          "time": null
        },
        {
          "user": "Fewmitz",
          "text": "Yes, you're right, but for the case that most people would be talking about the stack and heap are all that they really care about.",
          "time": null
        }
      ]
    }
  ]
}