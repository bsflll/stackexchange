{
  "title": "Radare2 (noob question) can't set breakpoint?",
  "link": "https://reverseengineering.stackexchange.com/questions/13689/radare2-noob-question-cant-set-breakpoint",
  "content": "I was following this video at the end it shows how to do basic stuff with Radare2 (r2).\n\nWhen I try to set a break point with:\n\n```\ndb 0x004005bd\n\n```\nWhere 0x004005bd is the first address of the main function that just does:\n\n```\npush rbp\n\n```\nBut after I run the db command it tells me:\n\n```\nCannot place a breakpoint on 0x004005bd unmapped memory. See dbg.bpinmaps\n\n```\nI understand what it says, but how do I fix it ?\n\n",
  "votes": "9",
  "answers": 6,
  "views": "16k",
  "tags": [
    "radare2",
    "breakpoint"
  ],
  "user": "tatticadanito",
  "time": "Jun 17, 2021 at 15:32",
  "comments": [
    {
      "user": "u185619",
      "text": "do you use r2 from git ?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Run radare2 in debug mode. r2 -d\n\n",
      "votes": "8",
      "user": "Weeruhputt Supsohmboon",
      "time": "Jan 19, 2017 at 9:57",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "You are probably using an obsolete version of radare2.\n\nUninstall your current radare2 version then run:\n\n```\ngit clone https://github.com/radare/radare2 && cd radare2 && ./sys/install.sh\n\n```\nIf you are using ArchLinux use radare2-git\n\nIf you are using windows or another platform (like iOS or Android), please use the git link on rada.re or build it.\n\nLastly if you encounter an issue related to radare2 itself, I strongly suggest you come say hi on IRC or Telegram, you can also report issue on github.\n\n",
      "votes": "3",
      "user": "galoget",
      "time": "Jun 17, 2021 at 15:32",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "you can check the exexcutable file using \"file\" command.\nthen you can find the file is an \"elf shared object\" NOT an \"elf executable\".\nhowever you can execute it directly.\n\nso you need to recomplie it using \"gcc xxx.c -no-pie -o xxx\"\nthen  debug it using \"radare2 -d xxx\"\nand you're good to go\n\n",
      "votes": "1",
      "user": "TinyMin",
      "time": "Jun 13, 2017 at 2:19",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "If you have and e io.cache set to true, then breakpoints don't work\n\n",
      "votes": "1",
      "user": "usama8800",
      "time": "Mar 10, 2020 at 7:37",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "You can also do e dbg.bpinmaps=0 so Radare2 allows you to set breakpoint without that restriction.\n\n",
      "votes": "0",
      "user": "Petteri H",
      "time": "Aug 5, 2019 at 15:59",
      "is_accepted": false,
      "comments": [
        {
          "user": "Paweł Łukasik",
          "text": "it could be helpful to explain what this flag does in r2.",
          "time": null
        }
      ]
    },
    {
      "content": "I'm using a Debian based OS(Kali / Parrot OS) and I got the same error. When you run radare2 in a Mac OS and try to add a breakpoint using the same method, it will work properly. But when it comes to Linux OS, it will probably give you this error.\n\nI tried everything. Then I saw this when I was trying to execute ood inside radare2 console:\n\n```\nWARNING: bin_strings buffer is too big (0xffffffffa9a2552c). Use -zzz or set bin.maxstrbuf (RABIN2_MAXSTRBUF) in r2 (rabin2)\n\n```\nFirst, you have to compile the C code using the following command,\n\n```\ngcc <name>.c -no-pie -o <any_name>\n\n```\nThen open it with -zzz option, as an example, let's say my compiled code name is \"tool\", then execute this command,\n\n```\nradare2 -zzz tool3\n\n```\nAnd continue with the process. Now you'll be able to add a breakpoint.\n\n",
      "votes": "0",
      "user": "galoget",
      "time": "Jun 17, 2021 at 15:31",
      "is_accepted": false,
      "comments": []
    }
  ]
}