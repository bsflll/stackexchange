{
  "title": "Breakpoint on memory access in ARM debugging",
  "link": "https://reverseengineering.stackexchange.com/questions/19839/breakpoint-on-memory-access-in-arm-debugging",
  "content": "I'm using IDA Pro for ARM native debugging (with androidserver). I'd like to check when a memory address is read by code (what instruction and where). Hardware breakpoint is not possible. How can I do it? How to use watch option? With gdb?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "442",
  "tags": [
    "ida",
    "arm",
    "hardware",
    "breakpoint"
  ],
  "user": "Silvius",
  "time": "May 23, 2022 at 5:16",
  "comments": [],
  "answers_data": [
    {
      "content": "What you are describing is called watchpoints/memory breakpoints.\nSadly, IDA doesn't let you place memory breakpoints.\n\nFortunately, you can implement those by changing the page protection and catching the page protection violation exception as described here and here.  \n\n",
      "votes": "1",
      "user": null,
      "time": "Nov 8, 2018 at 11:24",
      "is_accepted": false,
      "comments": [
        {
          "user": "Silvius",
          "text": "Thanks amirag. Can you help me to understand how to do? Can you give an example with ida? I'd like to stop or trace when a code location is read. Many thanks",
          "time": null
        },
        {
          "user": "user22970",
          "text": "doing it by hand will go something like that: shift+f7, right click on the segment that contains the address you want.and make it non-readable. continue execution until you get an exception. if the cause is not a read instruction to the address you want, just continue execution. if it is,  you can have a lok at the code and stuff. don't forget that when you continue execution you should change the permissions back, step one instruction and remove the read permission again",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "changing segment permissions in IDA does nothing to the running process, it's just internal flags for analaysis/decompiler.",
          "time": null
        },
        {
          "user": "user22970",
          "text": "so ignore my oh, i see. so that's pretty much nullifies my suggestion",
          "time": null
        },
        {
          "user": "Silvius",
          "text": "Thus, How I can do in order to find what instruction goes to read a single location? By stepping all code is very hard...",
          "time": null
        }
      ]
    }
  ]
}