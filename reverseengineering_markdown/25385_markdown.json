{
  "title": "disassembly - bad results generated with ghidra but not with objdump and IDA",
  "link": "https://reverseengineering.stackexchange.com/questions/25385/disassembly-bad-results-generated-with-ghidra-but-not-with-objdump-and-ida",
  "content": "I am using Ghidra to analyze libpng-compat.1.5.10.so (downloaded from Fedora mirrors).\n\nBut it didn't load the expected disassembly. Then I used Objdump and IDA to check the code and they get the same results and process it correctly. Here are pictures of these three tools about the function png_write_rows:\n\nGhidra:\n\n\n\nwe can see that from 0x6bf9, bad results are generated.\n\nFor comparison, Objdump:\n\n\n\nand IDA:\n\n\n\nI know IDA is the best SRE tool, and I always thought Ghidra and IDA are the top 2. Objdump is a basic, standard and old tool, but why is it that Ghidra can't even get the correct disassembly code while the other two tools do? I use auto-analyze and import the binary file for both IDA and Ghidra.\nHow to correct these errors?\n\nBy adjusting analysis options，if Non-Returning Functions - Discovered is set as false, it will be correct.\n\n",
  "votes": "3",
  "answers": 0,
  "views": "1k",
  "tags": [
    "ida",
    "disassembly",
    "ghidra",
    "objdump"
  ],
  "user": "xiaoyao Don",
  "time": "Jul 8, 2020 at 21:28",
  "comments": [
    {
      "user": "Jongware",
      "text": "(Replicated, using rpm.pbone.net/index.php3/stat/4/idpl/47213828/dir/fedora_17/com/…). Weird. That function entry gets marked noreturn, and it takes a \"Clear flow and repair\" command to get it to recognize it for what it is (a simple localized ebx loader). After that, \"D\" again on the original function appears to work -- but you have to do that on every function using entry.",
      "time": null
    },
    {
      "user": "xiaoyao Don",
      "text": "@usr2564301 \"D\" works for the extra code after \"call entry\", but the next lines following \"call entry\" get wrong disassembly.",
      "time": null
    },
    {
      "user": "hippietrail",
      "text": "What does the align mean where an Intel mnemonic should be? I think I ran into this once before and never figured out what it was.",
      "time": null
    }
  ],
  "answers_data": []
}