{
  "title": "HackRF One - Replay Attack on Garage Door does not work (12 DIP switches)",
  "link": "https://reverseengineering.stackexchange.com/questions/27745/hackrf-one-replay-attack-on-garage-door-does-not-work-12-dip-switches",
  "content": "TL;DR solution\n\nMy colleagues and I have taken on a HackRF project for university, using HackRF One. One of the targets is garage door controllers.\n\nWe own two controllers with DIP switches for the same door, one has 10 switches while the other one has 12.\n\nThe controller has a PIC16C54 chip, broadcasting at 27.015Mhz.\n\nUsing hackrf and Universal Radio Hacker we were able to obtain signals from both controllers (top is 10 switches, bottom is 12):\n\n\nWe can easily recognize that there is a long wait period after every signal. The DIP switches are 0000111110 and 0000111110000 on the 10-switch and 12-switch controller respectively.\n\nWe were able to notice that the long parts of the signal correspond to 0s and the short bursts (probably including some of the 'silence' after them in order to be the same length) are 1s. At this point I am expecting the signal to  be like this:\n\n0 1111 0 1111 0 1111 0 1111 0 1100 0 1100 0 1100 0 1100 0 1100 0 1111 0 1100 0 1100\n\nwhere 1111 is a dip switch set to 0 and 1100 is a dip switch set to one.\n\nOur efforts to replay the signal for the garage door have been futile, even directly in front of it. We tried to import the data in Audacity and normalize the signal in order to get the most power out of it but Universal Radio Hacker does not import it properly from a RAW 8-bit unsigned PCM 48KHz format (this is the expected format right?).\n\nDespite not succeeding in the replay attack with the captured signal from URH without using audacity, the following questions arose:\n\nAre we missing something even more important here?\n\nEdit: the door is not rolling code since we are capturing the same signal on every press (and it's a 30 years old door)\n\nEdit (2): The signal with autodetect parameters is the following:\n\n\n\nBut I believe 2000 samples/Symbol is better since it yields:\n\nThe problem is, URH replays samples not bits, so why does the replay not work?\n\nEdit (3): I read that the antennas that come with HackRF are not useful for transmitting in that frequency (27.015Mhz), is this true?\n\nEdit (4): After fiddling around with the URH filters I got some good parameters for the capture of a long press I had named \"repeat\". The same information is repetitively transmitted for the duration of the press.\n\n\nwhich resulted in getting from this:\n\nto this:\n\n\nI have not yet tested the attack. Does the way the signal gets decoded into bits change the way it gets repeated? do the parameters affect repetition too? what about the filters?\n\nUpdate: Test through the repeat option in Interpretation tab failed (check edit 4).\n\nEdit (4): I just realized I can use the Generator tab...\n\n\nWill test tomorrow and update accordingly!\n\n\n\n5k samples/symbol gives desired decoding mentioned by @roscoe but doesn't work for generation\n\n\n\nEdit (6): Setting the sample rate to 4M and bandwidth to 2M during recording yielded the following:\n\nAutodetect seems to have gotten the right values, samples per symbol was manually set to 4000 since that is the approximate width of a symbol:\n\n\n\nSimply replaying the signal didn't work, but generating a new signal from the Generator tab with autodetect parameters DID !\n\n\n",
  "votes": "6",
  "answers": 1,
  "views": "2k",
  "tags": [
    "hardware",
    "protocol"
  ],
  "user": "John St",
  "time": "May 31, 2021 at 10:47",
  "comments": [
    {
      "user": "user10216038",
      "text": "Modern garage door openers use Rolling Code to prevent replay attacks.",
      "time": null
    },
    {
      "user": "defalt",
      "text": "There's not enough information to know what type of encoding digital signal is using. Use preplay attack instead. Jam and capture 1st signal. Release 1st signal while jam & store 2nd signal. Now you have an unused 2nd signal to unlock the door.",
      "time": null
    },
    {
      "user": "John St",
      "text": "I'm pretty sure it's the same since we have captured several times and the exact same signal appears",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I believe both keyfobs send the same data which is\n\n```\n1111 0000 0100\n\n```\nSecond keyfob is repeating signal 3 times.\n\nDIP encoding to signal would be byte by byte with swapped nibbles.\n\n```\n00001111 10 =>  11 11 00 00 01\n\n```\n\n\nTry to use Autodetect parameters in URH.\n\n",
      "votes": "7",
      "user": "roscoe",
      "time": "May 27, 2021 at 19:14",
      "is_accepted": true,
      "comments": [
        {
          "user": "John St",
          "text": "So the lack of signal does not have to be decoded into 0s? This seems to be right then. Also, any idea why the replay attack is not working? Tried several times with different captures (all of them were the same signal).",
          "time": null
        },
        {
          "user": "roscoe",
          "text": "No - parameters should not affect how signal is transmitted (however it is important that record parameters should be valid, i.e. number of samples - see: en.wikipedia.org/wiki/â€¦)",
          "time": null
        },
        {
          "user": "roscoe",
          "text": "Correct. If code is not changing, first try to resend recorded signal. If it works - then try to analyze it.",
          "time": null
        },
        {
          "user": "John St",
          "text": "IT WORKED!!! simply recording and replaying didn't but generating a clean signal did! Thanks a lot for your help!",
          "time": null
        },
        {
          "user": "roscoe",
          "text": "You welcome!!!!",
          "time": null
        }
      ]
    }
  ]
}