{
  "title": "OllyDbg \"runs away\" when stepping over wininet.HttpSendRequestW",
  "link": "https://reverseengineering.stackexchange.com/questions/19431/ollydbg-runs-away-when-stepping-over-wininet-httpsendrequestw",
  "content": "I'm, using OllyDbg 1.1 to debug some malware and it's been quite a while since I've dealt with wininet calls. When I set a software or hardware breakpoint directly after the call to wininet.HttpSendRequestW the breakpoint never hits and it seems like the malware hangs.\n\nI've also verified that I can reach the internet and the resource that is involved in the HttpSendRequestW call. What's the trick to allowing a step-over on these wininet functions?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "376",
  "tags": [
    "ollydbg"
  ],
  "user": "vane",
  "time": "Sep 23, 2018 at 2:20",
  "comments": [
    {
      "user": "deon cagadoes",
      "text": "Can you share this malware ? I want analyze why happens this.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Check if the program calls InternetSetStatusCallback which allows setting a callback to be called during different stages of the connection.  \n\nPossibly the callback performs the actual work, or it detects the debugger and hangs without returning to the caller. \n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Sep 23, 2018 at 14:16",
      "is_accepted": false,
      "comments": [
        {
          "user": "vane",
          "text": "Unfortunately it doesn't. I worked around the issue by providing the data directly and skipping the call to HttpSendRequest but that's not really a good solution and doesn't help me understand why it's happening",
          "time": null
        }
      ]
    }
  ]
}