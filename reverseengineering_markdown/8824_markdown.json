{
  "title": "Which python library for parsing Linux ELF files?",
  "link": "https://reverseengineering.stackexchange.com/questions/8824/which-python-library-for-parsing-linux-elf-files",
  "content": "I want to be able to parse 32 and 64 bit ELF files - but not create or modify them (e.g. as discussed in this thread). The ELF binaries may possibly come from embedded Linux systems, that is, the library should not be irritated by MIPS, ARM and other non-x86 architectures.\n\nWhat I have considered: \n\nDo I have forgotten something?\nWhich of the above options would you prefer? \n\nFor those who had some practical experience with pylibelf or pydeftools: These seem no longer updated (last commit: 2013 and 2012), are they mature enough?\n\n",
  "votes": "11",
  "answers": 2,
  "views": "16k",
  "tags": [
    "binary-analysis",
    "linux",
    "idapython",
    "elf",
    "python"
  ],
  "user": "langlauf.io",
  "time": "Apr 13, 2017 at 12:49",
  "comments": [],
  "answers_data": [
    {
      "content": "Take a look at radare2. It can parse file formats (see here for an example of parsing the ELF header).\n\nRadare2 supports multiple architectures and is being actively developed. On top of that it has bindings for a lot of languages, including Python of course. Read through the bindings source code to see it is pretty straightforward to script it.\n\nHTH!\n\n",
      "votes": "5",
      "user": "Carlos Garcia",
      "time": "May 6, 2015 at 11:50",
      "is_accepted": true,
      "comments": [
        {
          "user": "langlauf.io",
          "text": "Thank you for your pointer! Radare2 seems to be a powerful framework but may be a bit too heavy for my task. Have you tried one of the mentioned libraries whose main/only objective is to parse ELF files? In case their parsing capabilities are as good the ones of Radare2, I would prefer a more light-weight solution ...",
          "time": null
        }
      ]
    },
    {
      "content": "LIEF is a good choice for parsing ELF binaries. It's written in C++, but comes with proper Python bindings and is readily available via PyPi. Besides parsing ELF files it also supports Windows PE and MacOS binaries, reading and modifying and writing all of them, that is.\n\nIt's available since 2017 and is actively maintained (example).\n\nLIEF is pretty light-weight and doesn't require many dependencies.\n\n",
      "votes": "2",
      "user": "maxschlepzig",
      "time": "Apr 23, 2022 at 11:20",
      "is_accepted": false,
      "comments": []
    }
  ]
}