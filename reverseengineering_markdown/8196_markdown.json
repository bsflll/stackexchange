{
  "title": "Define new code section in assembly code to compile ELF binary",
  "link": "https://reverseengineering.stackexchange.com/questions/8196/define-new-code-section-in-assembly-code-to-compile-elf-binary",
  "content": "I defined a new code section in my assembly program, which is going to be compiled into 32-bit ELF binary, on x86.\n\nI use the linker scripts to assign a specified address for this new code section, it works. However, I noticed that this new section does not be loaded to the memory, after some debugging!\n\nI use readelf and figure out that there is no \"execution\" privilege of this new section:\n\n```\n[15] .trampoline       PROGBITS        080483d0 004020 000117 00      0   0 16\n\n```\nThen I did this:\n\n```\nobjcopy --set-section-flags .trampoline=alloc,code a.out\n\n```\nHowever, I got this warning:\n\n```\nBFD: stQWykoH: warning: allocated section `.trampoline' not in segment\n\n```\nNow I realize that I didn't explicitly assign a segment information to my new section!!\n\nSo here is my question:\n\n",
  "votes": "1",
  "answers": 0,
  "views": "641",
  "tags": [
    "assembly",
    "c",
    "elf",
    "dynamic-linking"
  ],
  "user": "lllllllllllll",
  "time": "May 23, 2017 at 12:37",
  "comments": [],
  "answers_data": []
}