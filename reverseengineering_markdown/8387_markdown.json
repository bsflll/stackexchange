{
  "title": "Using members of a struct in Win32 (MASM)",
  "link": "https://reverseengineering.stackexchange.com/questions/8387/using-members-of-a-struct-in-win32-masm",
  "content": "Due to the following topic,\nInitializing a struct in win32 assembly programming using MASM\n\nI tried to correct my mistakes, So I tried the following code :\n\n```\n.386\n.model flat,stdcall\noption casemap:none\n\nstruct1 struct\nfirst db ?\nsecond dd ?\nthird db ?\nstruct1 EndS\n\n.data\nInitializedstructure struct1 <4,10>\n\n.code\nstart:\nmov eax, struct1.first\nmov ebx , struct1.second\nmov ecx , struct1.third\n;offsets\nmov eax , offset struct1.first\nmov ebx , offset struct1.second\nmov ecx , offset struct1.third\nend start\n\n```\nBut on the disassembled code didn't find any thing. I added the offset of each struct's member to distinguish the differences between the two.\n\n```\n.text:00401000 start:\n.text:00401000                 mov     eax, 0\n.text:00401005                 mov     ebx, 1\n.text:0040100A                 mov     ecx, 5\n.text:0040100F                 mov     eax, 0\n.text:00401014                 mov     ebx, 1\n.text:00401019                 mov     ecx, 5\n\n```\nI've surfed the net but didn't find any documentation describing the use of structs well, so I decided to try it by myself.\nThe disassembled code seems,it holds the size of each struct's member.\n\nThe main question is how to use the members of the struct within the code?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "573",
  "tags": [
    "disassembly",
    "windows",
    "struct"
  ],
  "user": "user3679015",
  "time": "Apr 13, 2017 at 12:49",
  "comments": [],
  "answers_data": [
    {
      "content": "In this case struct1 is such a general structure should be initialized to use, otherwise such this statement : mov eax , struct1.second just gives you the offset of struct1 from the begging. I think you've misunderstood the Initializedstructure to an instruction or other directives.You can name it what you want and use the initialized struct in the rest by its name.For instance, in the .data section you would use:\n\n```\nAAAA struct1 <4,10,60>\n\n```\nSo in the rest of code in the .code section using following statement will work,\nmov eax , AAAA.second and give you (in this case) 10 and the mov eax, offset AAAA.second give the offset of second member in run-time.\n\n",
      "votes": "1",
      "user": "perror",
      "time": "Mar 5, 2015 at 20:28",
      "is_accepted": false,
      "comments": []
    }
  ]
}