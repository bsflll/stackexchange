{
  "title": "Radare2 - How to debug Android native code (dynamic analysis)?",
  "link": "https://reverseengineering.stackexchange.com/questions/21968/radare2-how-to-debug-android-native-code-dynamic-analysis",
  "content": "I'm using Termux(root) on LineageOS 16 (Android 9) with radare2 (v3.6.0 linux-arm32). When i attach to a process with 'r2 -d pid' the app freezes properly but doesn't continue with 'dc'. I'm not sure in which condition the debugger is exactly but when i try to step in code (F7/F8 in visual) some errors are flickering (SIGILL somewhat..). The Zygote instance (we are connected to) seems to be corrupted by r2.\n\nOn IDA you attach the remote debugger (android_server) to the pid and you'll land somewhere in the code, can set breakpoints, continue execution and so on. I'm trying to achieve the same with r2.\n\nHow is it meant to be done to debug Android native code with radare2 at runtime (dynamic analysis)?\n\n",
  "votes": "3",
  "answers": 1,
  "views": "1k",
  "tags": [
    "debugging",
    "radare2",
    "android",
    "dynamic-analysis"
  ],
  "user": "Maniaxx",
  "time": "Aug 25, 2019 at 0:35",
  "comments": [
    {
      "user": "Fabian Mendez",
      "text": "I have also tried to use r2 to debug android binaries but had many troubles. I would advise you to file an issue in the radare2 repository and use gdb meanwhile.",
      "time": null
    },
    {
      "user": "0pendev",
      "text": "Have you tried to start a gdbserver on your android device and to attach to it in r2 ? It worked for me. radare.gitbooks.io/radare2book/content/debugger/remote_gdb.html",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Have you tried to start a gdbserver on your android device and to attach to it in r2 ?\n\nIt worked for me.\n\nhttps://radare.gitbooks.io/radare2book/content/debugger/remote_gdb.html\n\n",
      "votes": "1",
      "user": "0pendev",
      "time": "Jan 21, 2020 at 13:36",
      "is_accepted": false,
      "comments": [
        {
          "user": "TobTobXX",
          "text": "It doesn't for me. I wanted to observe a static initializing library loading (step through the JNI_OnLoad function), so I set the app as debug application and told the OS to wait for the debugger. After launching the app, I attach gdbserver and connect to it with r2. Then I do dc, but the app is still frozen and I don't get my prompt back in r2.",
          "time": null
        }
      ]
    }
  ]
}