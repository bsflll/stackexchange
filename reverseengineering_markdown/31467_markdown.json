{
  "title": "Can ESP point to a global variable",
  "link": "https://reverseengineering.stackexchange.com/questions/31467/can-esp-point-to-a-global-variable",
  "content": "This 3 lines of code are used by some encoders to get EIP into ECX register:\n\n```\nfldz\nfnstenv [esp-C]\npop ecx\n\n```\nThe 2 first instructions push some datas on stack and we get one of this into ECX on the last line.\n\nI have tried this code in a very basic poc. It works fine.\n\nBut in real life (in a Buffer overflow application), ecx contains 0x0000000 and I do not understand why.\n\nThe only thing I know is ESP value has been changed, but points in the middle of a big buffer.\n\nAre there some rules on ESP ? Can ESP points anywhere (on an allocated memory region of course) ?\n\nFor example if I create a global variable in my program: unsigned char buf[1024]. Can I set ESP to buf+512 and call PUSH, fldz or fnstenv instructions ?\n\nThanks\n\n",
  "votes": "2",
  "answers": 1,
  "views": "58",
  "tags": [
    "x86",
    "stack",
    "shellcode"
  ],
  "user": "Bob5421",
  "time": "Jan 24, 2023 at 21:47",
  "comments": [
    {
      "user": "peter ferrie",
      "text": "You might require fninit before the fldz, to initialise the FPU state explicitly.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "ESP always points to the top of stack. Do you really understand stack concept? If you overwrite esp with random value, the application can crash.\n\nfldz - Push +0.0 onto the FPU stack.\nfnstenv - Store FPU environment in the area which is placed on memory in your case. [esp-C] - this is memory pointer.\npop ecx - just pop dword from the top of stack to the ecx\n\nWhat do you want to do with this code? Describe your task.\n\n",
      "votes": "1",
      "user": "strannyi",
      "time": "Jan 25, 2023 at 1:56",
      "is_accepted": false,
      "comments": [
        {
          "user": "Bob5421",
          "text": "I know what is stack and how it works. The os creates a memory space for the stack. My question is will it work if i put an esp value that points on another memory space. I am not talking about a random memory space. I am talking about a buffer i control. I want to know if the cpu will detect this is not the memory space dedicated for stack",
          "time": null
        },
        {
          "user": "strannyi",
          "text": "You can change ESP, but after that pop/return instruction will work incorrect and call/push will store ret_addr/value outside the stack, because you change stack pointer(a location where data was stored). You can use ESP as general purpose register.",
          "time": null
        }
      ]
    }
  ]
}