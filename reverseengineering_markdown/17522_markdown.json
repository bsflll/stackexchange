{
  "title": "Commands to step into and step over, outside of visual pane mode",
  "link": "https://reverseengineering.stackexchange.com/questions/17522/commands-to-step-into-and-step-over-outside-of-visual-pane-mode",
  "content": "The Radare book says \n\nBut, I don't see it telling you how to do this with the d command. When I run d? I see \n\n```\nds[?]                   Step, over, source line\ndc[?]                   Continue execution\n\n```\n",
  "votes": "2",
  "answers": 1,
  "views": "7k",
  "tags": [
    "debugging",
    "radare2"
  ],
  "user": "Evan Carroll",
  "time": "Dec 11, 2018 at 23:05",
  "comments": [],
  "answers_data": [
    {
      "content": "I did't find this to be too intuitive, but the answer is ds. Now it makes sense though: ds expands to a bunch of stuff,\n\n```\n[0x55673eccb5fa]> ds?\n|Usage: ds Step commands\n| ds               Step one instruction\n| ds <num>         Step <num> instructions\n| dsb              Step back one instruction\n| dsf              Step until end of frame\n| dsi <cond>       Continue until condition matches\n| dsl              Step one source line\n| dsl <num>        Step <num> source lines\n| dso <num>        Step over <num> instructions\n| dsp              Step into program (skip libs)\n| dss <num>        Skip <num> step instructions\n| dsu[?]<address>  Step until address\n| dsui[r] <instr>  Step until an instruction that matches `instr`, use dsuir for regex match\n| dsue <esil>      Step until esil expression matches\n| dsuf <flag>      Step until pc == flag matching name\n\n```\nWhile really cool, there are a tons of ways to step and they're all organized under ds. \n\n",
      "votes": "3",
      "user": "Evan Carroll",
      "time": "Feb 23, 2018 at 0:47",
      "is_accepted": true,
      "comments": []
    }
  ]
}