{
  "title": "Is it possible to create data xrefs manually?",
  "link": "https://reverseengineering.stackexchange.com/questions/2139/is-it-possible-to-create-data-xrefs-manually",
  "content": "I have a binary with lots of indirect calls (call dword ptr [register + offset ]) the register is calculated with a simple math which I manage to statically calculate on my own (the call itself lead to some winapi calculated from the current offset)\n\nwhenever I try to use AddCodeRefs (ins, winapi, XREF_USER | fl_CN/f) to this data my graph turns out wrong and all the basic blocks become one instruction per basic block; when I try to do the reverse, IDA (logically :/) thinks that the data is really code and reinterprets all of the section to be garbage code.\n\nMy question is - Is it possible to create data xrefs from code manually ? AddCodeRefs seem to spoil the graph and I couldn't find any AddDataRefs, I'm using IDA 6.4.\n\n",
  "votes": "7",
  "answers": 1,
  "views": "3k",
  "tags": [
    "ida",
    "python",
    "idapython"
  ],
  "user": "xrefsfrom",
  "time": "May 30, 2013 at 15:17",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "Perhaps less f-words next time would also get your point across?",
      "time": null
    },
    {
      "user": "xrefsfrom",
      "text": "I see that you've already edit'ed it, sorry, I will s// next time",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I think you might be looking for add_dref(long From,long To,long drefType). IDA Online Help describes it as following:\n\n```\nData reference types (combine with XREF_USER!):\n#define dr_O    1                       // Offset\n#define dr_W    2                       // Write\n#define dr_R    3                       // Read\n#define dr_T    4                       // Text (names in manual operands)\n#define dr_I    5                       // Informational\n\nvoid    add_dref(long From,long To,long drefType);      // Create Data Ref\nvoid    del_dref(long From,long To);    // Unmark Data Ref\n\nlong    Dfirst  (long From);            // Get first data xref from 'From'\nlong    Dnext   (long From,long current);\nlong    DfirstB (long To);              // Get first data xref to 'To'\nlong    DnextB  (long To,long current);\n\n```\n",
      "votes": "5",
      "user": "PSS",
      "time": "Jun 26, 2013 at 3:54",
      "is_accepted": false,
      "comments": []
    }
  ]
}