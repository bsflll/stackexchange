{
  "title": "Ways to define portable executable bitness 64 vs 32",
  "link": "https://reverseengineering.stackexchange.com/questions/8217/ways-to-define-portable-executable-bitness-64-vs-32",
  "content": "I found several ways to define the bitness of PE.\n\nAre all of them have the same meaning? Are there any difference, specific conditions, exceptional cases?\n\nI found that Machine field check is indirect way because the field is aimed to processor architecture defining. So it's indirect and unreliable as heuristic.\nSizeOfOptionalHeader varies even for the same bitness since some image directories can absent.\n\n",
  "votes": "3",
  "answers": 2,
  "views": "791",
  "tags": [
    "windows",
    "pe",
    "executable",
    "binary"
  ],
  "user": "SerG",
  "time": "Feb 13, 2015 at 17:00",
  "comments": [
    {
      "user": "MrSynAckSter",
      "text": "Is there any reason you can't just check for 64 bit registers in the decomp?",
      "time": null
    },
    {
      "user": "SerG",
      "text": "I look for truth. And I need fast and reliable way for automatic files processing.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "IMAGE_OPTIONAL_HEADER->MAGIC (which is not optional at all :] ) is what determines for the Windows OS Loader to load this as 32bit vs 64bit. Depending on the value at IMAGE_OPTIONAL_HEADER->MAGIC is how the loader will parse the rest of the IMAGE_OPTIONAL_HEADER. \n\nAnd as stated SizeOfOptionalHeader can be use as a cross reference.\n\nThe IMAGE_FILE_HEADER->MAGIC is used to determine the intended CPU. Mainly use to determine how machine code should be interpret. \n\n",
      "votes": "3",
      "user": "k0ng0",
      "time": "Feb 12, 2015 at 21:22",
      "is_accepted": false,
      "comments": [
        {
          "user": "SerG",
          "text": "As Magic is already located inside optional header structure, it's likely bitness is defined before memory after IMAGE_FILE_HEADER will be \"mapped\" to 32 or 64 -bit kind of optional header struct.",
          "time": null
        }
      ]
    },
    {
      "content": "The Machine field will tell you the target platform, which includes its bitness, and the endianness of the section contents.  The PE header itself is little-endian (and the optional header is entirely optional for object files).\n\n",
      "votes": "0",
      "user": "peter ferrie",
      "time": "Feb 15, 2015 at 4:19",
      "is_accepted": false,
      "comments": []
    }
  ]
}