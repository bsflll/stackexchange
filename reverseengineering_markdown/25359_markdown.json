{
  "title": "Linux keyboard driver windows reverse engineering",
  "link": "https://reverseengineering.stackexchange.com/questions/25359/linux-keyboard-driver-windows-reverse-engineering",
  "content": "I have toshiba portege x30-f laptop with Fn keys not working under linux.\n\nI've read some articles about usb drivers reverse engineering, but the keyboard connected not via usb. As I can understand it connected through i8042 ps/2\n\nI've tried to capture /dev/input/event but there are only usual keys, Fn keys don't generate any output. I've checked every /dev/input/event and /dev/hidraw for any output on Fn keys press and none of them gived me any events or signals. So linux don't know anything about this keys, I suppose the only way to know what is happening - load into windows.\n\nI can run Windows natively or in virtual box, but I have no guess how to capture signals from keyboard to windows and vice versa. Can anyone give me advice on this?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "249",
  "tags": [
    "linux",
    "kernel"
  ],
  "user": "GRbit",
  "time": "Jun 20, 2020 at 21:43",
  "comments": [
    {
      "user": "GRbit",
      "text": "@InformedA Thank you, that was very helpfull",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "AFAIK often on laptops the special keys are handled not by the OS but the embedded controller (EC), either completely without the OS involvement or via the ACPI interface.\nSo you might have to look at the ACPI tables and see if there are methods you can hook (not sure how it works in Linux).\n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Jun 21, 2020 at 12:56",
      "is_accepted": false,
      "comments": []
    }
  ]
}