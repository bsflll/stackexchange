{
  "title": "How would one find test cases for a self-implemented value set analysis (VSA)?",
  "link": "https://reverseengineering.stackexchange.com/questions/13824/how-would-one-find-test-cases-for-a-self-implemented-value-set-analysis-vsa",
  "content": "I read a blog post about value set analysis (VSA). For VSA, see e.g. here. \n\nThe blog author writes\n\nI was wondering how one would test a custom VSA implementation. How can one find test cases? \n\nMy guess is one could run & trace a simple application and record (concrete, i.e. run-time) values for some memory areas or registers. These values then should show up in the result of the corresponding memory / registers after having done the static VSA, right?\n\nFor the beginning, it would be easier to have some examples. Are you aware of any examples (other than those in the official papers)?\n\n",
  "votes": "3",
  "answers": 1,
  "views": "126",
  "tags": [
    "binary-analysis",
    "decompilation",
    "static-analysis"
  ],
  "user": "langlauf.io",
  "time": "Oct 27, 2016 at 9:40",
  "comments": [
    {
      "user": "Brendan Dolan-Gavitt",
      "text": "As a side note, I think the blog post is wrong about why the VSA implementation is able to have more accurate bounds on eax â€“ in the journal version of the WYSINWYX they mention that this is due to an extra affine analysis step they do, described in the PhD thesis (section \"Affine-Relation Analysis\").",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Well, using dynamic analysis is one way, but you can probably start with some small, self-evident edge cases, e.g.:\n\n```\ntest edx, 1\njz @even\n[here, edx is odd]\neven:\n[here, edx is even]\n\ntest edx, edx\njg @greater\n[here, edx is <=0]\ngreater:\n[here, edx is >0]\n\n```\nand so on.\n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Oct 27, 2016 at 17:51",
      "is_accepted": false,
      "comments": [
        {
          "user": "langlauf.io",
          "text": "Very useful hint. I also did not think of creating samples in assembly.",
          "time": null
        }
      ]
    }
  ]
}