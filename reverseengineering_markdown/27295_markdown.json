{
  "title": "GDB inserting breakpoint cause Segmentation Fault",
  "link": "https://reverseengineering.stackexchange.com/questions/27295/gdb-inserting-breakpoint-cause-segmentation-fault",
  "content": "I was trying to play around with gdb, and I'm especially interest in seeing how the Procedural Linkage Table(PLT) and the Global Offset Table (GOT) interact with each other. So I set some breakpoints and see how the process work step by step. Interestingly enough, when I set breakpoints at certain instruction, I got segmentation fault, and I could not understand why. I simply stop at that instruction. Why would my program give me a segmentation fault? I'm just curious about this behavior. I screenshot the behavior. The red line encloses where I insert a breakpoint, and the program start to receive segfault.\n\n\n\n",
  "votes": "2",
  "answers": 1,
  "views": "996",
  "tags": [
    "assembly",
    "debugging",
    "gdb",
    "debuggers"
  ],
  "user": "JamesQuinn",
  "time": "Mar 23, 2021 at 20:21",
  "comments": [],
  "answers_data": [
    {
      "content": "Your breakpoint probably overwrites a byte in the middle of an instruction instead of the first one. It can lead to, for example, an out of memory read. You should put breakpoint at known instructions (e.g. start of the function/stub) then step through the following ones.\n\n",
      "votes": "2",
      "user": "Igor Skochinsky",
      "time": "Mar 24, 2021 at 0:14",
      "is_accepted": false,
      "comments": []
    }
  ]
}