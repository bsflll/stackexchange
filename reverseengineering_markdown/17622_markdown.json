{
  "title": "Parsing .rodata (ELF)",
  "link": "https://reverseengineering.stackexchange.com/questions/17622/parsing-rodata-elf",
  "content": "IDA pro is able to display the data contained in the read only data section of ELF files, but the section is defined as type SHT_PROGBITS. \n\nTo my knowledge, we cannot parse sections of this type to resolve information such as constant data/variable names.\n\nSo my question is how do tools such as IDA actually get the information in .rodata or other SHT_PROGBITS sections such as .PLT.\n\nThanks\n\n",
  "votes": "0",
  "answers": 1,
  "views": "2k",
  "tags": [
    "ida",
    "elf",
    "static-analysis"
  ],
  "user": "Marius.pharoe",
  "time": "Mar 6, 2018 at 13:47",
  "comments": [],
  "answers_data": [
    {
      "content": "According to ELF-format SHT_PROGBITS meens only that\n\nBut ELF-section's type is not the only (and not main) attribute for parsing data from file. There are also section's name and attributes. \n\nSections like .text and .data also have SHT_PROGBITS-type, but their names are special.\n\nGenerally (and very simply) the process of ELF-parsing is so:\n\nMore info you can take from IDA's ELF-loader (IDA_Dir\\loaders\\elf.ldw (or dll)) or from a tools like readelf.\n\n",
      "votes": "1",
      "user": "prusanov",
      "time": "Mar 6, 2018 at 18:04",
      "is_accepted": false,
      "comments": [
        {
          "user": "Marius.pharoe",
          "text": "could you elaborate on names being special? Thanks",
          "time": null
        },
        {
          "user": "prusanov",
          "text": "Special names are .bss, .comment, .data .debug, .dynamic, .dynstr, .dynsym, .fini, .got, .hash, .init, .interp, .line, .note, .plt, .rel<name>, .rodata, .shstrtab, .strtab, .symtab, .text",
          "time": null
        }
      ]
    }
  ]
}