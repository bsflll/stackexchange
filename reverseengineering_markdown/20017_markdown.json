{
  "title": "Executing MIPS binaries on Ubuntu Linux",
  "link": "https://reverseengineering.stackexchange.com/questions/20017/executing-mips-binaries-on-ubuntu-linux",
  "content": "I have a 32-bit MIPS binary and I'm trying to execute it on Ubuntu 64-bit.\n\nfile command for the binary shows:\n\n```\nbin: ELF 32-bit MSB  executable, MIPS, MIPS32 rel2 version 1 (SYSV), dynamically linked (uses shared libs), stripped\n\n```\nIf I use qemu-mips to execute it, I get the following error:\n\n```\n/lib/ld-musl-mips-sf.so.1: No such file or directory\n\n```\nHow can I execute it? I'd like to remote debug it using IDA Pro.\n\n",
  "votes": "1",
  "answers": 0,
  "views": "4k",
  "tags": [
    "linux",
    "mips"
  ],
  "user": "Neon Flash",
  "time": "Nov 30, 2018 at 19:10",
  "comments": [
    {
      "user": "0xec",
      "text": "This is a dynamically linked binary. You need the corresponding libc package (like from here )",
      "time": null
    },
    {
      "user": "0xec",
      "text": "and then run qemu-mipsel -L /usr/mipsel-linux-gnu/ ./filename",
      "time": null
    },
    {
      "user": "0xec",
      "text": "Alternatively you can use qemu full system emulation and run the binary within this",
      "time": null
    },
    {
      "user": "0xec",
      "text": "For debugging, run qemu-mipsel with the gdb stub (The -g parameter) and attach IDA to it",
      "time": null
    },
    {
      "user": "0xec",
      "text": "In that case check out the precompiled toolchains from toolchains.bootlin.com",
      "time": null
    }
  ],
  "answers_data": []
}