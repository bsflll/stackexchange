{
  "title": "How to debug a binary with the relative path in argv[0]?",
  "link": "https://reverseengineering.stackexchange.com/questions/6792/how-to-debug-a-binary-with-the-relative-path-in-argv0",
  "content": "I have a binary test that I want to debug with gdb. As you can see pwd is /tmp:\n\n```\n$ gdb\n(gdb) file test\nReading symbols from /tmp/test...(no debugging symbols found)...done.\n(gdb) pwd\nWorking directory /tmp\n(gdb) run\nStarting program: /tmp/test\n\n```\nor\n\n```\n$ pwd\n/tmp\n$ gdb test\nReading symbols from /tmp/test...(no debugging symbols found)...done.\nThe target architecture is assumed to be i386\n(gdb) run\nStarting program: /tmp/test\n\n```\nThe problem is that gdb executes the file with the absolut path /tmp/test instead of the realtiv path test. Which means argv[0]=\"/tmp/test\".\n\nHow can I make gdb execute the file with the relativ path (argv[0]=\"test\")?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "1k",
  "tags": [
    "linux",
    "gdb"
  ],
  "user": "samuirai",
  "time": "Dec 8, 2014 at 14:48",
  "comments": [],
  "answers_data": [
    {
      "content": "Figured it out myself with a cool trick I didn't know before - set exec-wrapper\n\n```\n$ cat wrapper.sh\n#!/bin/bash\np=\"test\"\nexec -a \"$p\" \"$@\"\n\n```\nand in gdb\n\n```\n(gdb) set exec-wrapper ./wrapper.sh\n\n```\nThis way you can set the argv[0] to whatever you want. \n\nsource: https://sourceware.org/ml/gdb/2013-05/msg00049.html\n\n",
      "votes": "3",
      "user": "samuirai",
      "time": "Dec 8, 2014 at 15:06",
      "is_accepted": true,
      "comments": []
    }
  ]
}