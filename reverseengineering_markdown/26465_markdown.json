{
  "title": "How use signature pattern for hooking",
  "link": "https://reverseengineering.stackexchange.com/questions/26465/how-use-signature-pattern-for-hooking",
  "content": "I like to replace the static function address:\n\n```\n AddressOfHookSoundFunction = (DWORD)GetModuleHandleA(\"myfile.exe\") + 0x0F3B65; // good: 4406117 (integer)\n\n```\nusing signature pattern:\n\n```\n SigScan Scanner;\n\n AddressOfHookSoundFunction = Scanner.FindPattern(\"myfile.exe\", \"\\x55\\x8B\\xEC\\x83\\xEC\\x14\\x53\\x56\\x8B\", \"xxxxxxxxx\"); // bad: 3685831 (integer)\n\n```\nbut the value is different and work only the static address: 0x0F3B65\n\nhere the IDA screenshot:\n\n\n\n\n\nProbably I have insert a wrong dump information.\n\nhere the code of signature scanning:\n\n```\nclass SigScan\n{\npublic:\n    // For getting information about the executing module\n    MODULEINFO GetModuleInfo(char *szModule)\n    {\n        MODULEINFO modinfo = { 0 };\n        HMODULE hModule = GetModuleHandleA(szModule);\n        if (hModule == 0)\n            return modinfo;\n        GetModuleInformation(GetCurrentProcess(), hModule, &modinfo, sizeof(MODULEINFO));\n        return modinfo;\n    }\n\n    // for finding a signature/pattern in memory of another process\n    DWORD FindPattern(char *module, char *pattern, char *mask)\n    {\n        MODULEINFO mInfo = GetModuleInfo(module);\n        DWORD base = (DWORD)mInfo.lpBaseOfDll;\n        DWORD size = (DWORD)mInfo.SizeOfImage;\n        DWORD patternLength = (DWORD)strlen(mask);\n\n        for (DWORD i = 0; i < size - patternLength; i++)\n        {\n            bool found = true;\n            for (DWORD j = 0; j < patternLength; j++)\n            {\n                found &= mask[j] == '?' || pattern[j] == *(char*)(base + i + j);\n            }\n            if (found)\n            {\n                return base + i;\n            }\n        }\n\n        return NULL;\n    }\n};\n\n```\nCan you help me please ?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "502",
  "tags": [
    "ida",
    "disassembly",
    "c++",
    "function-hooking"
  ],
  "user": "user3449922",
  "time": "Dec 7, 2020 at 16:05",
  "comments": [],
  "answers_data": [
    {
      "content": "I have understand what happen just add only 2 digits:\n\n```\nAddressOfHookSoundFunction = Scanner.FindPattern(\"myfile.exe\", \"\\x55\\x8B\\xEC\\x83\\xEC\\x14\\x53\\x56\\x8B\\x75\\x0C\", \"xxxxxxxxxxx\");\n\n```\nand now work.\n\n",
      "votes": "1",
      "user": "user3449922",
      "time": "Dec 7, 2020 at 19:16",
      "is_accepted": false,
      "comments": []
    }
  ]
}