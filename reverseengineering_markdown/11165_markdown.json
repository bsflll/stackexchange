{
  "title": "how do I debug full screen applications",
  "link": "https://reverseengineering.stackexchange.com/questions/11165/how-do-i-debug-full-screen-applications",
  "content": "I need to debug an old (1999) full screen application. When I window the application and attach olly the program crashes.\n\nI have heard of remote debugging. Would running the program on a VM and then attaching windbg to the application on the remote machine do the trick?\n\n",
  "votes": "2",
  "answers": 2,
  "views": "2k",
  "tags": [
    "ollydbg",
    "virtual-machines",
    "remote"
  ],
  "user": "RNs_Ghost",
  "time": "Oct 24, 2015 at 0:28",
  "comments": [],
  "answers_data": [
    {
      "content": "you can use windbg like an user-mode debugger from a kernel connection \n\nopen the vm\ninstall windbg in vm\ninstall the full screen game in vm   \n\nconnect the vm to a kernel debugger in host   \n\nexecute ntsd -d {the fullscreen app in vm}  \n\nthe kernel debugger in host will kick to life as a plain user-mode debugger debugging the app ( the syntax for continuing is kinda tricky refer windbg manual for syntax of using ntsd -d )\n\n",
      "votes": "3",
      "user": "blabb",
      "time": "Oct 25, 2015 at 8:54",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "I usually do one of the following when dealing with full screen software:\n\nHope that helps :)\n\n",
      "votes": "2",
      "user": "Community",
      "time": "Mar 20, 2017 at 10:04",
      "is_accepted": false,
      "comments": [
        {
          "user": "Jason Geffner",
          "text": "Another option is to run the game in a VM configured to use 2 virtual monitors. If you're lucky, the game will display full-screen in one of the virtual monitors, and you can interact with OllyDbg via the other virtual monitor.",
          "time": null
        }
      ]
    }
  ]
}