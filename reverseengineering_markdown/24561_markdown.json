{
  "title": "How can I get classes from \"protected\" JAR file?",
  "link": "https://reverseengineering.stackexchange.com/questions/24561/how-can-i-get-classes-from-protected-jar-file",
  "content": "I'm trying to get classes from JAR file / actually running JVM machine but:\n\nWhen I'm trying to open JAR file using for example 7Zip I dont see any classes. After unzip Manifest file is empty too.\n\nWhen I'm trying to \"dump\" classes from running JVM machine, I got \"very funny\" named - empty classes (not really empty, but contains info like \"gtfo\" etc..)\n\nJD-Gui showed nothing - just nothing.\n\nAround month ago, when I tried to open it using 7Zip, there was classes with same name, and custom extension.\n\nWhat should I do, and what tools do You recommend for actions like this?\n\nLink: https://drive.google.com/file/d/1qhfEXu-ITQLW1mi55hMqnHmWt9BM5ur3/view\n\nEDIT: Every decompiler I tested show info like this:\n\n",
  "votes": "1",
  "answers": 1,
  "views": "698",
  "tags": [
    "java",
    "decompile"
  ],
  "user": "CospriMalice",
  "time": "Nov 21, 2020 at 1:49",
  "comments": [
    {
      "user": "Antimony",
      "text": "Those \"very funny\" names are probably the actual names of the classfiles in the JAR",
      "time": null
    },
    {
      "user": "CospriMalice",
      "text": "But \"extracted\" class names depends on method how I get them. When dumping classes  I got those funny names, but when tried JD-Gui or other \"extractors?\" I got fragments from poems or sth like that: i.imgur.com/sL9W6g3.png",
      "time": null
    },
    {
      "user": "Antimony",
      "text": "JD-Gui is really unreliable. Trust your zip extractor. Also, I'd recommend checking out the Krakatau disassembler: github.com/Storyyeller/Krakatau",
      "time": null
    },
    {
      "user": "CospriMalice",
      "text": "I got those output when trying to use decompiler and no result in output directory. pastebin.com/EGMbeUeN  Diassembler give the same error.",
      "time": null
    },
    {
      "user": "Antimony",
      "text": "It appears that your Jar file is malformed then. If you upload it, then maybe I can take a look later.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The obfuscator probably used the '\\u0000' \"exploit\".\nThis character is known as NUL terminator and its used for terminate the length of a character string in C/C++.\nAll renamed classes will contain that character, this will confuse tools like 7Zip, WinRar etc..\n\nQuick explanation:\n\n=======\n\nOriginal file names:\n\nRenamed file names:\n\n=======\n\nTry to use https://github.com/TerriblePanda/JByteMod-Reborn or https://github.com/GraxCode/threadtear to decompile your jar.\n\nProbable obfuscator used: https://paramorphism.dev/\n\n",
      "votes": "3",
      "user": "Yennefer",
      "time": "Sep 28, 2020 at 21:50",
      "is_accepted": false,
      "comments": [
        {
          "user": "CospriMalice",
          "text": "wow, in my opinion it can be this one. I will test it in ~3days",
          "time": null
        },
        {
          "user": "Princekin",
          "text": "Anyway, can you provide the jar?",
          "time": null
        },
        {
          "user": "CospriMalice",
          "text": "Link was in comments, but added it and it's in post now",
          "time": null
        },
        {
          "user": "Princekin",
          "text": "I can confirm my theory. The classes starts with \\u0000.",
          "time": null
        }
      ]
    }
  ]
}