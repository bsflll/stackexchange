{
  "title": "SAR Instruction",
  "link": "https://reverseengineering.stackexchange.com/questions/18290/sar-instruction",
  "content": "```\nsar eax, 6\n...\nsar eax, 0x1f\n\n```\nThis arithmetic shift operation confuses me. Understand that it's taking the value of eax in hex then shifting it to the right by 6 and the same for the next operation by 0x1f. See what the end result is, but still looking to better understand what's happening with these Shift Operations.\nSay eax was 0x3338e3e0, how exactly does it get to 0x00cce38f step by step?\n\n",
  "votes": "1",
  "answers": 2,
  "views": "3k",
  "tags": [
    "assembly"
  ],
  "user": "bumchux",
  "time": "May 16, 2018 at 21:59",
  "comments": [
    {
      "user": "Anton Kukoba",
      "text": "Next question you should ask is what's the difference between SHR and SAR :)",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "It's easier to see what's going on if you work in binary.\n\n0x3338e3e0 is 0b00110011001110001110001111100000\n\nShifting this right by 6 bits (i.e. removing the last 6 bits and adding 6 zeros at the start) gives -\n\n0b00000000110011001110001110001111\n\nFinally, turning this back into hex gives the value in your question. \n\n0b 0000 0000 1100 1100 1110 0011 1000 1111 = 0x00CCE38F\n\n",
      "votes": "2",
      "user": "Ian Cook",
      "time": "May 16, 2018 at 19:18",
      "is_accepted": true,
      "comments": [
        {
          "user": "Ricardo",
          "text": "I think you did a shr not a sar. Am I wrong? shr fill with zeros and sar fill with the sign bit?",
          "time": null
        }
      ]
    },
    {
      "content": "```\nC:\\>python -c \"print \\\"{0:8X}={0:b}  \n{1:8X}={1:b}\\\".format(0x3338e3e0,0x3338e3e0>>6)\"\n3338E3E0=110011001110001110001111100000\n  CCE38F=110011001110001110001111\n\n```\n",
      "votes": "0",
      "user": "blabb",
      "time": "May 16, 2018 at 21:06",
      "is_accepted": false,
      "comments": []
    }
  ]
}