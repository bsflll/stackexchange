{
  "title": "I don't understand this hexeditor output",
  "link": "https://reverseengineering.stackexchange.com/questions/32134/i-dont-understand-this-hexeditor-output",
  "content": "I'm trying extract .wav files from a datafile, and each file has some metadata at the end of it.\nIt contains a date, '1996-05-16' as shown here:\n\n\n\nMost of these dates for the files are correct, but some have special chars in them, like here:\n\n\n\nWhat's going on? I'm using the HxD editor.\n\nedit: also seeing these zeros between 'RIFF' which should be a complete word/identifier for WAV files. Is the data corrupted? I get the feeling the .EXE might be doing some decoding on this data?\n\n\n",
  "votes": "0",
  "answers": 2,
  "views": "118",
  "tags": [
    "hex"
  ],
  "user": "Oli",
  "time": "Aug 6, 2023 at 12:35",
  "comments": [
    {
      "user": "blabb",
      "text": "You mean the 0x04  it normally indicates[ end of text , end of data or ctrl+D ](en.m.wikipedia.org/wiki/End-of-Transmission_character)",
      "time": null
    },
    {
      "user": "Oli",
      "text": "I see, and the 0x020 befire it is a space right..but what is it doing right in the middle of a date? I doubt it's been entered like that originally, so maybe a property of the metadata of the wav?",
      "time": null
    },
    {
      "user": "blabb",
      "text": "Probably corrupt you can see S in SoundForge is different charecter in one screen shot  you posted",
      "time": null
    },
    {
      "user": "Oli",
      "text": "I think I found the problem..the data is slightly compressed, I found this in the log: 1io_Io(457)      processing volume: white1s.vol 1io_Io(466)      allocating 496kB... 1io_Io(476)      reading and decompressing 467kB...",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Looks like some form of run length encoding could be custom since it's quite simple to write. You can lookup run length encoding in TGA image files for a code example. But personally I would first check if it's LZ4 since that uses RLE. You will likely need to use the LZ4 api if so. I would write a for loop that attempts to LZ4 inflate at offset 0,1,2,3,... and see if any complete without error and have an expected size.\n\n",
      "votes": "0",
      "user": "user3053099",
      "time": "Aug 6, 2023 at 22:48",
      "is_accepted": true,
      "comments": [
        {
          "user": "Oli",
          "text": "Thanks, this gives me a nice start to look into this",
          "time": null
        }
      ]
    },
    {
      "content": "Looks like my file has some sort of compression, I just found this info in the logs of the game that's using the datafile:\n\n```\n1io_Io(457)      processing volume: white1s.vol\n1io_Io(466)      allocating 496kB...\n1io_Io(476)      reading and decompressing 467kB...\n\n```\nNow I'll have to dive into a debugger to see what's going on\n\n",
      "votes": "1",
      "user": "Oli",
      "time": "Aug 6, 2023 at 13:48",
      "is_accepted": false,
      "comments": []
    }
  ]
}