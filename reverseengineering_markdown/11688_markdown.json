{
  "title": "Reverse engineering car stereo panel",
  "link": "https://reverseengineering.stackexchange.com/questions/11688/reverse-engineering-car-stereo-panel",
  "content": "I'd like to reverse engineer a car stereo front removable panel. It's a leftover from a broken car stereo. I'd like to do so by connecting the panel's 14 connections to Raspberry Pi 2 model B's GPIO pins and controlling the pins via a Python program. The idea is to be able to use the panel's display and buttons. The panel has an infrared receiver, so I may like to use that as well (if I manage to find the remote control).\n\n\n\n\nThe car stereo is LG LAC-M3600R CD/MP3 player.\n\nIs this doable? If it is, where should I begin? Any advice is greatly appreciated.\n\n",
  "votes": "2",
  "answers": 1,
  "views": "763",
  "tags": [
    "hardware",
    "python"
  ],
  "user": "Magnus Teekivi",
  "time": "Jan 3, 2016 at 17:34",
  "comments": [],
  "answers_data": [
    {
      "content": "The first step is to figure out the purpose of each of those pins. The easiest way to do this is to Google for the LAC-M3600R's service manual (note that this is different from the user manual). That device's service manual contains the following diagram for the back of the faceplate:\n\n\n\nAs you can see above, the pins are (beginning from top-right, moving counter-clockwise):\n\n```\n 1. GND\n 2. KEY IN1\n 3. KEY IN2\n 4. LCD RES\n 5. LCD DO\n 6. LCD CLK\n 7. GND\n 8. LCD CE\n 9. VDD\n 10. LCD 9.4V\n 11. LED 9.4V\n 12. VR DN\n 13. VR UP\n 14. RMC\n\n```\nYou'd likely then need to use an ohmmeter to start measuring resistance, etc. for each pin and connect those pins to your Pi's GPIO pins (further questions in that arena would likely be better asked on https://electronics.stackexchange.com/.)\n\n",
      "votes": "6",
      "user": "Community",
      "time": "Apr 13, 2017 at 12:33",
      "is_accepted": true,
      "comments": []
    }
  ]
}