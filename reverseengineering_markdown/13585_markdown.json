{
  "title": "Is it possible to change/disable the keybindings for a game by modifying the exe using x64db or a similar program? [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/13585/is-it-possible-to-change-disable-the-keybindings-for-a-game-by-modifying-the-exe",
  "content": "So I have a game I've been making mods for. I'd rather not reference the title here to avoid it showing up in google searches and leading people to exploits.\n\nBy, default, it doesn't allow keybind changes, it is in alpha, and the dev plans to update this, but it would be nice to change that in the meantime.\n\nHowever, my priority is disabling specific keybinds for a debug mode community members found in the game via viewing and modifying values in x32dbg.\n\nI was part of a project to make a modified exe that enables Debug Mode permanently, which allows map editing, something not currently otherwise possible.\n\nBut, my partner and the lead left unexpectedly, so I, the total novice, am left to finish the last, but crucial step of the patch.\n\nIt's currently largely complete, functioning as a perfect permanent debug mode patch, however there are certain functions attached to specific keys that allow viewing of information that's well, outright exploitable.\n\nSo for fairness sake I'd love to disable those keys.\n\nHe seemed to be certain it was possible, as it was something he said he was working on.\n\nThough I was totally following his lead, so I'm unsure.\n\nIf anyone could point me in the right direction I'd really appreciate it!\n\n",
  "votes": "0",
  "answers": 1,
  "views": "197",
  "tags": [
    "windows",
    "x86",
    "tools",
    "debuggers",
    "patching"
  ],
  "user": "Default 001",
  "time": "8 years ago",
  "comments": [],
  "answers_data": [
    {
      "content": "it's definitely possible, as keybinding handling has to check for actual pressed key scan codes (comparing it with configured values to branch program to appropriate handler). So if you can locate this piece of code somehow, you can adjust it as you need.\nModifying comparison instructions to check for some very unlikely value, or turning one to unconditional jump will disable corresponding handler.\n\nI can think of dozens of ways how keyboard handling can be implemented in application from top of my head, thus cannot point you in specific direction locating exact piece of code you need\n\n",
      "votes": "2",
      "user": "agg3l",
      "time": "Sep 25, 2016 at 13:46",
      "is_accepted": false,
      "comments": [
        {
          "user": "Default 001",
          "text": "Thanks for your reply! It's good to know it's definitely possible. Right now all I'm doing is searching randomly, can't seem to find much info.",
          "time": null
        },
        {
          "user": "agg3l",
          "text": "With simple old-school WinAPI application, that could turn to WM_KEYPRESSED message  ( msdn.microsoft.com/en-us//library/windows/desktop/â€¦ ). With nowadays games it depends on framework used. If you can determine how the app you're trying to reverse is implemented (e.g. Unity), corresponding API documentation can help you a lot",
          "time": null
        },
        {
          "user": "Default 001",
          "text": "I am actually aware of what tools it was built with. The relevant one seems to be \"Simple DirectMedia Layer\" AKA SDL.",
          "time": null
        },
        {
          "user": "Default 001",
          "text": "It's also made with OpenAL and OpenGL.",
          "time": null
        }
      ]
    }
  ]
}