{
  "title": "How to use memory address information from IDAFree to set a breakpoint in x32dbg?",
  "link": "https://reverseengineering.stackexchange.com/questions/22494/how-to-use-memory-address-information-from-idafree-to-set-a-breakpoint-in-x32dbg",
  "content": "I have a DLL paused at EntryPoint in x32dbg. I am interested in examining memory following a specific API call that this DLL makes. I found the API call in the imports section when I open the DLL in IDAFree and then I see the API function call in IDA. I follow it in code and IDA shows it's at address: 10001B66\n\nMy problem is that when I try to set a breakpoint at this address in x32dbg (bp 0x10001B66), it gives me an error:\n\nAdditionally, in x32dbg, I'm seeing addresses such as 714A7D39 for my DLL. Now, I'm new to this but I'm guessing that the memread error is because 10001B66 -- as seen in IDA -- is not a valid memory address in the context of execution in the debugger.\n\nSo how do I get the correct address of this API function call so that I can set the correct breakpoint? \n\n",
  "votes": "0",
  "answers": 1,
  "views": "9k",
  "tags": [
    "ida",
    "disassembly",
    "debugging",
    "memory",
    "x64dbg"
  ],
  "user": "learnerX",
  "time": "Nov 9, 2019 at 22:31",
  "comments": [],
  "answers_data": [
    {
      "content": "\n\n\n\n\n\nThis procedure changes the base address of the loaded binary in IDA according to x64dbg. This can also be done manually by calculating the difference between the base address and the point where you want to set the breakpoint.\n\nSource: YouTube/OALabs: Disable ASLR For Easier Malware Debugging With x64dbg and IDA Pro\n\n",
      "votes": "3",
      "user": "Biswapriyo",
      "time": "Nov 10, 2019 at 9:33",
      "is_accepted": true,
      "comments": []
    }
  ]
}