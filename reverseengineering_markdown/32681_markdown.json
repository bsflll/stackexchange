{
  "title": "Windows kernel Dev",
  "link": "https://reverseengineering.stackexchange.com/questions/32681/windows-kernel-dev",
  "content": "I'm writing a basic program that'd allow me to list the running processes on a windows system but by simply trying to go through the ActiveProcessLinks of the _EPROCESS structure.The problem I'm facing right now is that I can't access directly the elements of the pointer to EPROCESS structure as it's considered as incomplete pointer. Below is the snippet of the section I'm having trouble with:\n\n```\n#include <wdm.h>\n\n#define MAX_PATH 260\nVOID listprocess() {\n\n    // Access the doubly linked list of processes\n    PEPROCESS currentProcess = PsGetCurrentProcess();\n    PLIST_ENTRY processListEntry = currentProcess->ActiveProcessLinks.Flink;```\n\n\nPS: I'm a beginner so please indulge me if it's too basic as question, Thanks!!!\n\n```\n",
  "votes": "0",
  "answers": 0,
  "views": "60",
  "tags": [
    "windows",
    "c++",
    "kernel-mode"
  ],
  "user": "Essole",
  "time": "Jan 31, 2024 at 0:12",
  "comments": [
    {
      "user": "Neitsa",
      "text": "EPROCESS is considered - from a programming point of view - an opaque structure (you may know it exist, but you're not supposed to deal with it). Main reason is that the structure happens to change a lot. Best way to use it is to extract and convert it from the PDB file of the exact kernel version you're experimenting with into C and use the header in your program. There are some programs to convert PDB structures (named UDT in PDB parlance) to C header files (e.g. pdbex) or online websites such as Vergilius.",
      "time": null
    },
    {
      "user": "Essole",
      "text": "I'll try to look into that, thanks!!!",
      "time": null
    }
  ],
  "answers_data": []
}