{
  "title": "Extract certificate information of a process from memory dump",
  "link": "https://reverseengineering.stackexchange.com/questions/29915/extract-certificate-information-of-a-process-from-memory-dump",
  "content": "I have a .dmp file for googleupdate.exe process. I wanted to check in WinDbg this process has a certificate or not in order to detect this process has modified or not because this process has tried access lsass.exe multiple time.\n\nHow can I check the integrity and also maliciousness of this process in WinDbg? I have just a memory dump from that process and nothing more. I should check it in WinDbg.\n\n",
  "votes": "0",
  "answers": 1,
  "views": "278",
  "tags": [
    "memory",
    "memory-dump",
    "digital-forensics"
  ],
  "user": "Timberwolf",
  "time": "Jan 30, 2022 at 19:36",
  "comments": [
    {
      "user": "Robert",
      "text": "This paper seems to exactly match your question: On Challenges in Verifying Trusted Executable Files in Memory Forensics - DFRWS 2020 EU",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "In short, the PE loader does not explicitly load up the certificate details into the new process at run-time.\n\nIn the binary, the certificates are referenced via the IMAGE_DIRECTORY_ENTRY_SECURITY directory; but they are not in a section that is mapped into virtual memory. The data is instead appended to the file.\n\nYou might get lucky and find the cert data has been mapped via a memory mapped file, or if you captured a full kernel dump you might have a copy of it. Otherwise you will have to try and source the file from the computer.\n\nYour best bet is to manually compare the code-in-memory to a valid copy of googleupdate.\n\nAlso keep in mind that the source binary could be completely valid, but the behavior changed at run-time (via code injection, etc.). So even if you could easily validate the integrity of the certificate, it wouldn't detect rogue threads, hooked functions, etc.\n\n",
      "votes": "1",
      "user": "josh poley",
      "time": "Feb 9, 2022 at 22:20",
      "is_accepted": true,
      "comments": []
    }
  ]
}