{
  "title": "SP analysis failed in gfortran compiled application",
  "link": "https://reverseengineering.stackexchange.com/questions/9473/sp-analysis-failed-in-gfortran-compiled-application",
  "content": "I need assistance in ida pro regarding sp analysis failure.\nThe link to the dissembled function is here:\nhttp://pastebin.com/XRwzswgS\nThe program has a lot of these errors which hinders hexrays decompilation.\nThe analysis failure is shown in line 333 in pastebin. I have included the SP pointer values from ida\n\n",
  "votes": "0",
  "answers": 1,
  "views": "3k",
  "tags": [
    "ida"
  ],
  "user": "schrodinger",
  "time": "Jul 28, 2015 at 6:23",
  "comments": [],
  "answers_data": [
    {
      "content": "In a line 34 you have a following code:\n\n```\n.text:0046FC96 010                 mov     eax, 3AFCh\n.text:0046FC9B 010                 call    __alloca\n\n```\nThis code allocates 0x3afc bytes on stack and this allocation is not reflected in IDA stack analysis (if the assumption that _alloca function detected and defined correctly is correct, see linux alloca man page and MSDN alloca documentation for more details about this function).\n\nTo fix this you should go to call _alloca instruction, press ALt-K and insert the needed value (probably -0x3afc in your specific case, but I'm not sure).\n\nThis will hint IDA that there is a stack pointer change here.\n\n",
      "votes": "3",
      "user": "perror",
      "time": "Jul 28, 2015 at 13:57",
      "is_accepted": true,
      "comments": [
        {
          "user": "w s",
          "text": "By the way, this specific problem may be solved automatically with IDAPython. ALT-K is alike IDAPython api function idaapi.add_user_stkpnt(ea, delta), all the rest is obvious.",
          "time": null
        }
      ]
    }
  ]
}