{
  "title": "IDA python, list all imported functions",
  "link": "https://reverseengineering.stackexchange.com/questions/13627/ida-python-list-all-imported-functions",
  "content": "I have the following IDA python script. It sets and removes breakpoints on all calls to library functions:\n\n```\nimport idc\nimport idaapi\nimport idautils\n\ndef set_breakpoints():\n    ea = idc.ScreenEA()\n    for function_ea in idautils.Functions(idc.SegStart(ea), idc.SegEnd(ea)):\n        if idc.GetFunctionFlags(function_ea) & FUNC_LIB:\n            for ref in idautils.CodeRefsTo(function_ea, 0):\n                    idc.AddBpt(ref)\n\ndef rem_breakpoints():\n    ea = idc.ScreenEA()\n    for function_ea in idautils.Functions(idc.SegStart(ea), idc.SegEnd(ea)):\n        if idc.GetFunctionFlags(function_ea) & FUNC_LIB:\n            for ref in idautils.CodeRefsTo(function_ea, 0):\n                    idc.DelBpt(ref)\n\nidaapi.add_hotkey(\"Alt-Z\", set_breakpoints)\nidaapi.add_hotkey(\"Alt-X\", rem_breakpoints)\n\n```\nNow I want to have the same functionality for imported win api functions (from \"Import\" tab), but I cannot find any flags that will indicate that function is imported. Maybe someone can point me into right direction to do this. Thanks.\n\n",
  "votes": "5",
  "answers": 1,
  "views": "7k",
  "tags": [
    "ida",
    "idapython",
    "winapi"
  ],
  "user": "igntec",
  "time": "Oct 1, 2016 at 13:23",
  "comments": [],
  "answers_data": [
    {
      "content": "This code snippet was copied from\n\nhttps://github.com/idapython/src/blob/master/examples/core/list_imports.py\n\n```\n\"\"\"\nsummary: enumerate file imports\n\ndescription:\n  Using the API to enumerate file imports.\n\"\"\"\n\nimport ida_nalt\n\nnimps = ida_nalt.get_import_module_qty()\n\nprint(\"Found %d import(s)...\" % nimps)\n\nfor i in range(nimps):\n    name = ida_nalt.get_import_module_name(i)\n    if not name:\n        print(\"Failed to get import module name for #%d\" % i)\n        name = \"<unnamed>\"\n\n    print(\"Walking imports for module %s\" % name)\n    def imp_cb(ea, name, ordinal):\n        if not name:\n            print(\"%08x: ordinal #%d\" % (ea, ordinal))\n        else:\n            print(\"%08x: %s (ordinal #%d)\" % (ea, name, ordinal))\n        # True -> Continue enumeration\n        # False -> Stop enumeration\n        return True\n    ida_nalt.enum_import_names(i, imp_cb)\n\nprint(\"All done...\")\n\n```\nThe remaining steps from enumerating imports to setting breakpoints are trivial.\n\n",
      "votes": "6",
      "user": "crifan",
      "time": "Dec 6, 2023 at 10:12",
      "is_accepted": false,
      "comments": [
        {
          "user": "Igor Skochinsky",
          "text": "One note: the entries in the .idata section are usually pointers to the target functons, not functions themselves, so they'll need to be dereferenced before setting breakpoints.",
          "time": null
        }
      ]
    }
  ]
}