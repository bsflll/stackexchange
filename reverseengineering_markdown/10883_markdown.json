{
  "title": "Windows 7x86 System Freezes when running assembly program with int 3h",
  "link": "https://reverseengineering.stackexchange.com/questions/10883/windows-7x86-system-freezes-when-running-assembly-program-with-int-3h",
  "content": "Recently was doing some pydbg testing, so I had to remove the AeDebug entry (which determines the JIT debugger) in the registry, and Windbg was (and is) my JIT debugger. Exported the key before deleting it. It was:\n\n```\nHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AeDebug\n\n```\nand the values were:\n\n```\n(Default) REG_SZ (value not set)\nAuto REG_SZ 1\nDebugger REG_SZ \"C:\\...\\windbg.exe\" -p %ld -e %ld -g\nUserDebuggerHotKey REG_DWORD 0x00000000 (0)\n\n```\nNow I had to test some other stuff in Windbg, so I added the exported AeDebug key in the .reg file. \n\nHowever, when I attempt to run a few test assembly programs that contact int 3h/0xCC (which should make Windbg come up as my JIT debugger) instead my system freezes with no BSOD, and I have to power off/turn back on.\n\nI've deleted all of AeDebug and re-ran \"windbg -I\" to register it as my JIT debugger. However, I still get system freezes!\n\nPlease help! It only occurs so far when code Im running contains an int 3h breakpoint in it.\n\nI tried running an assembly (masm32) program that I compiled with the following to test:\n\n```\n.586\n.model flat, stdcall\n\noption casemap:none\n\nincludelib \\masm32\\lib\\kernel32.lib\nincludelib \\masm32\\lib\\user32.lib\n\ninclude \\masm32\\include\\kernel32.inc\ninclude \\masm32\\include\\user32.inc\ninclude \\masm32\\include\\windows.inc\n\n.code\nstart:\nxor eax, eax\nxor ebx, ebx\nxor ecx, ecx\nxor edx, edx\nint 3h\ninvoke ExitProcess, 0\nEND start\n\n```\nHowever, the system still freezes. When I run windbg first and I step out of the breakpoint, it exits like normal but doesn't feeze my whole system.\n\nHow can I get normal breakpoints again that dont cause undefined behavior?\n\n",
  "votes": "1",
  "answers": 2,
  "views": "181",
  "tags": [
    "windows",
    "assembly",
    "debugging",
    "windbg"
  ],
  "user": "grepNstepN",
  "time": "Sep 16, 2015 at 21:12",
  "comments": [
    {
      "user": "Jason Geffner",
      "text": "If you run %windir%\\system32\\bcdedit.exe as an administrator, do you see in the output debug___________________Yes?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "This occurs when you have kernel debugging enabled, but have not attached a kernel debugger.\n\nIn short the freeze occurs when,\n\nFor Windows XP, see the contents of boot.ini.\nIf boot.ini has a /debug flag it means kernel debugging is enabled.\n\nFor Windows 7 and above you can use bcdedit or msconfig.\nYou can also use the command bcdedit | findstr debug to check if debug flag has been enabled.\n\nTo fix the problem, just remove the debug flag from your boot entry.\n\n",
      "votes": "1",
      "user": "0xec",
      "time": "Sep 17, 2015 at 7:46",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "It wasn't clear from your question if the x86 in the title is concerning the processor or the process.\n\nIf you are actually running on a 64-bit processor/OS, but running a 32-bit app, then you possibly set the wrong AeDebug key. There is one for 32-bit applications and one for 64-bit applications. Make sure you are setting both of them to the appropriate version of windbg.\n\n```\nHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AeDebug\nHKLM\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\AeDebug\n\n```\n",
      "votes": "1",
      "user": "josh poley",
      "time": "Sep 16, 2015 at 22:41",
      "is_accepted": false,
      "comments": [
        {
          "user": "grepNstepN",
          "text": "Apologies if it was unclear, i noted it was x86 in the question title",
          "time": null
        }
      ]
    }
  ]
}