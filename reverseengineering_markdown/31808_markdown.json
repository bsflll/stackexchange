{
  "title": "How to do live debugging of ARM64 binaries on macOS with M1/M2 chips?",
  "link": "https://reverseengineering.stackexchange.com/questions/31808/how-to-do-live-debugging-of-arm64-binaries-on-macos-with-m1-m2-chips",
  "content": "I'm trying to figure out why NSSavePanel fails in my SwiftUI app. I tried every possible documentation, or asking on the Swift programming forums - to no avail.\n\nI'm originally a Windows programmer, and I am also a reverse engineer. The way I can see why some API doesn't work (on Windows) is usually by stepping into it with a live debugger/disassembler. This is what I want to do with the NSSavePanel.runModal() call. But I'm kinda new to macOS.\n\nSo to test the concept, I built a simple C++ app with the Xcode (natively for ARM64 architecture, with the \"release\" configuration):\n\n```\nint main(int argc, const char * argv[])\n{\n    if(argc > 2)\n    {\n        int a = atoi(argv[1]);\n        int b = atoi(argv[2]);\n        int c = a / b;\n        \n        printf(\"v=%d  \n\", c);\n    }\n    \n    return 0;\n}\n\n```\nI then configured Xcode to \"Debug -> Debug Workflow -> Always show disassembly\" and set a bp at the start. So I get this:\n\n\n\nI can somewhat step-over and -into ARM64 assembly instructions with ^F6 and ^F7 keyboard shortcuts, but the Xcode UI is not really showing values of registers (one needs to type p $register into the console) and to see memory one needs to use \"Debug -> Debug Workflow -> View memory\" option, which is very clunky.\n\nIn other words, Xcode is not the best for this type of low-level debugging.\n\nSo I'm wondering, if there's another live debugger/disassembler that can be used for this purpose?\n\n",
  "votes": "4",
  "answers": 0,
  "views": "588",
  "tags": [
    "debugging",
    "debuggers",
    "arm64",
    "macos"
  ],
  "user": "c00000fd",
  "time": "Apr 21, 2023 at 14:27",
  "comments": [
    {
      "user": "mimak",
      "text": "Ghidra is a free disassembler/decompiler that comes with a debugger",
      "time": null
    },
    {
      "user": "c00000fd",
      "text": "@mimak oh wow, it has a debugger now?",
      "time": null
    },
    {
      "user": "mimak",
      "text": "yes, apparently it was introduced in v10.0",
      "time": null
    }
  ],
  "answers_data": []
}