{
  "title": "Can I get a valid source code from this assembly?",
  "link": "https://reverseengineering.stackexchange.com/questions/30856/can-i-get-a-valid-source-code-from-this-assembly",
  "content": "I've used the IDA 8.0 Demo to retrieve (from a .DLL) the assembly code, such as:\n\n```\n; code\npxor    xmm0, xmm0\nucomiss xmm0, xmm1\nja      short loc_67F31600                          \nmovss   xmm2, cs:dword_6854E3C0\ncomiss  xmm1, xmm2\njbe     short loc_67F31630\nmovups  xmm1, xmm2\njmp     short loc_67F3160B\n\n; subroutines\nloc_67F31600:\n    movups  xmm1, xmm0\n    movss   xmm0, cs:dword_6854E3C0\n\nloc_67F31630:\n    movups  xmm3, xmm1\n    movups  xmm0, xmm1\n    movss   xmm4, cs:dword_6854E43C\n    addss   xmm3, xmm1\n    subss   xmm0, xmm2\n    mulss   xmm1, xmm4\n    movups  xmm5, xmm3\n    addss   xmm2, xmm3\n    mulss   xmm0, xmm4\n    subss   xmm5, xmm4\n    divss   xmm1, xmm2\n    divss   xmm0, xmm5\n    jmp     short loc_67F3160B\n\nloc_67F3160B:\n    movss   dword ptr [rcx+102F0h], xmm0\n    movss   dword ptr [rcx+102ECh], xmm1\n    movss   dword ptr [rcx+160h], xmm0\n    movss   dword ptr [rcx+1D4h], xmm1\n    retn\n\n```\nIs there a way (with the same tool) to retrieve a more readable source code from it? Should I need IDA Pro? Can you show me the steps to do it? (so I can evaluate a purchase).\n\nOr which kind of other tools can you suggests to do the same?\nI mean: at least get C++ standard operations, with the real values placed on arrays and stuff (if possible, of course).\n\n",
  "votes": "1",
  "answers": 1,
  "views": "1k",
  "tags": [
    "ida",
    "disassembly",
    "decompilation",
    "c++",
    "tools"
  ],
  "user": "markzzz",
  "time": "Sep 7, 2022 at 10:59",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "the quality of the different decompilers can differ vastly. In all cases what you get is pseudo code, meaning it attempts to show what the assembly is doing in a more high level language. But it likely would never compile out of the box. Logically since the pseudo code is usually C, even though the original code may have been C++ or some different language altogether, the results can vary a lot. You could attempt to use dogbolt to evaluate which one is suited the best (their FAQ also lists other options).",
      "time": null
    },
    {
      "user": "markzzz",
      "text": "pseudo code is exactly what I'm looking for right now, in a way that I can build on top \"concrete\" source code.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "For IDA Pro there are decompiler plugins available that can generate a code similar to C (if everything goes well). But IDA Pro + decompiler for the architecture you need is pretty expensive (1975 USD + 2765 USD).\n\nA cheaper way to get decompiled code would be Ghidra, it includes a decompiler.\n\nIn both cases the generated code can be good or bad or even wrong. That depends on the code to be decompiled.\n\nIf you already have IDA Pro you can can also try to integrate Ghidra decompiler into IDA using the open source IDA plugin GhIDA.\n\n",
      "votes": "3",
      "user": "Robert",
      "time": "Sep 7, 2022 at 9:23",
      "is_accepted": true,
      "comments": [
        {
          "user": "0xC0000022L",
          "text": "I think the RetDec integration and yagi as an alternative to GhIDA are also worth a mention.",
          "time": null
        }
      ]
    }
  ]
}