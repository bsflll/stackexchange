{
  "title": "In angr, how to Load and Analyze a binary file that only contain a function instructions",
  "link": "https://reverseengineering.stackexchange.com/questions/14641/in-angr-how-to-load-and-analyze-a-binary-file-that-only-contain-a-function-inst",
  "content": "I have some binary files, each of them contain instructions of a function, (may be a little more in the end). The begining of the file also is the start point of the function. \n\nThis files were extracted from a ELF file.The platform is arm64.\n\nSo, how to load and analyze this file using angr?\nI upload a sample file here: xfrank.pythonanywhere.com/bin\n\nThe original target:\n\nEvery function has a \"switch case statement\", the target is to get all intergers of the case expression.\n\nExample(C code):\n\n```\nvoid func1(int cmd){\n    switch (cmd) {\n    case 1:\n        xxxx\n        break;\n    case 10:\n        yyyy;\n        break;\n    }\n}\n\n```\nResult: 1,10\n\n",
  "votes": "2",
  "answers": 1,
  "views": "997",
  "tags": [
    "binary"
  ],
  "user": "Swing",
  "time": "Feb 18, 2017 at 8:39",
  "comments": [
    {
      "user": "julian",
      "text": "Can you share some of these binary files with us?",
      "time": null
    },
    {
      "user": "Swing",
      "text": "I upload a sample file here: xfrank.pythonanywhere.com/bin",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Here are the steps I would normally do:\n\n",
      "votes": "3",
      "user": "Fish",
      "time": "Aug 16, 2017 at 20:31",
      "is_accepted": false,
      "comments": [
        {
          "user": "Swing",
          "text": "How to load the binary in angr without any 'head' info?",
          "time": null
        },
        {
          "user": "Fish",
          "text": "What's head info? Are you talking about loading binary blobs directly? You can manually specify format facts when loading, like architecture, loading offsets, etc. This is not well-documented currently in angr-docs, but it is documented in the doc-strings of angr.Project() and cle.Loader.",
          "time": null
        }
      ]
    }
  ]
}