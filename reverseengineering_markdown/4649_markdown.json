{
  "title": "Has XOR EAX, EBX another purpose?",
  "link": "https://reverseengineering.stackexchange.com/questions/4649/has-xor-eax-ebx-another-purpose",
  "content": "I have the following line in an assembler code:\n\n```\n XOR EAX, EBX\n\n```\nSo, then I've searched a little bit and found out that XOR represents a \"swap algorithm\". You can read it here: http://en.wikipedia.org/wiki/XOR_swap_algorithm\n\nBut when I look in register window of ollydbg, then I have the following \n\n```\n EAX = 00000068\n EBX = 0000003B\n\n```\nNow, after the line the register window says\n\n```\nEAX = 000000053\nEBX = 0000003B\n\n```\nBut from that what I have read in wikipedia article I would expect the following\n\n```\nEAX = 0000003B\nEBX = 00000053\n\n```\nAt the end, i can say that a normal XOR operation is performed because:\n\n```\n0111011   =>EAX=0000003B \n1101000   =>EBX=00000068\n-------\n1010011   =>EAX=00000053\n\n```\nSo my question would be why the swap algorithm is not performed. Or in other words: When can I expect the swap algorithm?\n\n",
  "votes": "3",
  "answers": 2,
  "views": "6k",
  "tags": [
    "assembly"
  ],
  "user": "user3097712",
  "time": "Jun 20, 2014 at 14:44",
  "comments": [
    {
      "user": "phuclv",
      "text": "the instruction for swapping data is xchg, not xor",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "As the first answer states, XOR is a bitewise XOR, not an XOR swap. \n\nTo do the Xor swap that you referenced from wikipedia it takes 3 instructions : \n\n```\nxor eax, ebx\nxor ebx, eax\nxor eax, ebx\n\n```\nSince you asked about the purpose of XOR I thought I would include some other concepts for you to read up on, so you might have an idea of what to expect from XORs\n\nYou can use XOR to clear a register: \n\n```\nxor eax,eax\n\n```\nCalculate absolute value: \n\n```\ncdq\nxor eax,edx\nsub eax,edx\n\n```\nXORs can be used for Crypto:\nhttp://en.wikipedia.org/wiki/XOR_swap_algorithm\n\nXORs are used in the CRC checksum algorithm:\nhttp://en.wikipedia.org/wiki/Cyclic_redundancy_check\n\nXORs can be used to calculate Gray codes:\nhttp://www.morkalork.com/mork/article/74/How_to_understand_and_use_Gray_code.htm#.U6RhN_ldXvI\n\nThis is just the tip of the iceberg. The instruction can be used in a large number of situations. \n\n",
      "votes": "13",
      "user": "MrSynAckSter",
      "time": "Jun 20, 2014 at 16:33",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "The XOR mnemonic does not represent an XOR swap; it represents a bitwise XOR.\n\n",
      "votes": "11",
      "user": "Jason Geffner",
      "time": "Jun 20, 2014 at 14:48",
      "is_accepted": false,
      "comments": []
    }
  ]
}