{
  "title": "With a hex editor, can you really examine/modify every piece of code/data encoding in a \"file\"?",
  "link": "https://reverseengineering.stackexchange.com/questions/3191/with-a-hex-editor-can-you-really-examine-modify-every-piece-of-code-data-encodi",
  "content": "Say I open a 1x1 BMP file with a hex editor. Will the values therein link directly to the specification used to encode the image, and what the decoding image program will also see?\n\nIf a dig in to Sonic The Hedgehog's bin file, can I really change every single entire encoded instruction using Motorola 68000's binary opcode map specification (assuming the assembler used will place the exact binary opcodes for the correct instructions taken by a Motorola 68000), and alter data values, change instruction positions, etc.? Basically, at the byte-level, I am exposed to the entire mass of a file structure, and have the control to change it at any rate I want. Basically, you can think of this question as this, to be blunt: \n\n\"Is there anything that CAN'T be accessed from a hex editor in a file, or something hidden?\"\n\nIs that correct?\n\n",
  "votes": "5",
  "answers": 3,
  "views": "6k",
  "tags": [
    "file-format"
  ],
  "user": "tim mokesy",
  "time": "Dec 14, 2013 at 22:23",
  "comments": [],
  "answers_data": [
    {
      "content": "You can open any files in a hex editor. The way to think about this is that programs that read files are developed specifically to interpret the bytes in a certain way. The header in a file might contain specific data that only a specific program can understand and use.\n\nThere are also some files that are encrypted, and a program with a certain algorithm can decrypt it. Like a game ROM, an emulator is just a program that knows how to interpret its bytes and render the information in the form of a game.\n\nIf you were to manually modify the bytes in a file, you can corrupt the intended information needed by the program. However, nothing can stop you from manually creating your mp3, game, document from using only a hex editor. It would only be painfully hard.\n\n",
      "votes": "6",
      "user": "drum",
      "time": "Dec 15, 2013 at 0:39",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "You can edit anything you want with a hex editor. There are ways to \"hide\" entire files but as soon as you can make them visible and open with a hex editor, then there are no ways to make parts of a file invisible. (1)\n\nHowever ... You need to work within the frame of what you are changing. Suppose you edit a simple BMP image, and you \"change\" its size from 1x1 to 2x2. Will that \"work\"? No -- you are changing an important property (the image size) but not the actual image, and no program can read your modified BMP image anymore, since it expects a 2x2 image now.\n\nHowever, if you only change the color of the one pixel inside the image, then there is no problem. BMP files do not contain a checksum, and so your altered file will be read correctly.\n\nThe same goes for your \"Sonic\" example. Yes, you can modify single instructions -- but (within the constraints of the entire executable) you cannot 'insert' or 'delete' them. And before you can change a single instruction, you need to be absolutely sure it is a single instruction, and not part of a previous multi-byte one. This might be hard to see if you are looking at a raw hex dump.\n\nA third problem may be that the file is encrypted or otherwise protected against tampering (e.g., with aforementioned checksum). If that is the case, you can look all you want, but you cannot find anything useful to change; or, changing the data may make the program stop running (i.e., if it detects the original has been modified).\n\n(1) Back in the days of floppy disks and CD-ROMs there were ways to invalidate disk sectors. That way, a 'file' could not be copied to another medium or opened with regular disk editors. Of course, the reading application \"knew\" which sectors were damaged and did not try to access them.\n\n",
      "votes": "4",
      "user": "Jongware",
      "time": "Dec 15, 2013 at 0:39",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "In general you can access any byte written on disk or in a file however there can be places you don't see if you don't look for them.\n\n",
      "votes": "2",
      "user": "pi3",
      "time": "Dec 15, 2013 at 17:39",
      "is_accepted": false,
      "comments": []
    }
  ]
}