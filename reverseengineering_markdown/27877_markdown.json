{
  "title": "Why module address is different in Cheat Engine than in x32dbg?",
  "link": "https://reverseengineering.stackexchange.com/questions/27877/why-module-address-is-different-in-cheat-engine-than-in-x32dbg",
  "content": "Why the module address is different in Cheat Engine than in x32dbg?\n\n\n\nI'm trying to read this:\n\n\n\nMy c++ attempt:\n\n```\n#include \"pch.h\"\n#include \"Functions.h\"\n#include \"offsets.h\"\n#include <iostream>\n\nusing namespace std;\n\nDWORD WINAPI HackThread(HMODULE hModule)\n{\n    //Create Console\n    AllocConsole();\n    FILE* f;\n    freopen_s(&f, \"CONOUT$\", \"w\", stdout);\n\n    cout << \"We're injected!  \n\";\n\n    uintptr_t module = (uintptr_t)GetModuleHandle(NULL);        \n    int addr = module + 0x04939F0;\n\n    while (true)\n    {\n        if (GetAsyncKeyState(VK_END) & 1)\n        {\n            cout << \"Reading: \" << hex << addr << endl;\n            cout << *(int*)addr << endl;\n        }\n\n        Sleep(5);\n    }\n\n    fclose(f);\n    FreeConsole();\n    FreeLibraryAndExitThread(hModule, 0);\n    return 0;\n}\n\nBOOL APIENTRY DllMain( HMODULE hModule,\n                       DWORD  ul_reason_for_call,\n                       LPVOID lpReserved\n                     )\n{\n    switch (ul_reason_for_call)\n    {\n    case DLL_PROCESS_ATTACH:\n        CloseHandle(CreateThread(nullptr, 0, (LPTHREAD_START_ROUTINE)HackThread, hModule, 0, nullptr));\n    case DLL_THREAD_ATTACH:\n    case DLL_THREAD_DETACH:\n    case DLL_PROCESS_DETACH:\n        break;\n    }\n    return TRUE;\n}\n\n```\nFrom c++ I can find this module address:\n\n\n\nI'm not sure if I was reading the correct address my code will work...\n\n",
  "votes": "2",
  "answers": 1,
  "views": "605",
  "tags": [
    "c++",
    "x64dbg",
    "cheat-engine"
  ],
  "user": "Adrian Hernando Solanas",
  "time": "Jun 22, 2021 at 20:32",
  "comments": [
    {
      "user": "blabb",
      "text": "905a4d is MZ dos Header and is not an address ; your code paste and result paste seems to differ the code does not have the string \"Setting xxxxx\" ;  Read About ASLR  the Address Will always be different in each run of executable because of Address Space Layout Randomization  in os > vista",
      "time": null
    },
    {
      "user": "Adrian Hernando Solanas",
      "text": "updated image, \"RealestaDX9.exe\" is pointing to 0x905A4D in every run of executable",
      "time": null
    },
    {
      "user": "blabb",
      "text": "yes that is right realxxxxx  is an address (start of executable ) it points to  DosHeader->Signature     MZ (0x4D 0x5A 0x90 0x00) in little endian as 0x00905a4d  what do you expect ?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I just had to derreference 0xB20000:\n\n\n\n",
      "votes": "-1",
      "user": "Adrian Hernando Solanas",
      "time": "Jun 22, 2021 at 21:17",
      "is_accepted": false,
      "comments": [
        {
          "user": "Robert",
          "text": "Please don't post terminal text as screenshot. Instead copy the text and paste it using code-formatting.",
          "time": null
        }
      ]
    }
  ]
}