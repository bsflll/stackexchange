{
  "title": "Decompiling/Unpacking a Compiled/Packed File (Or Somehow Inserting a Flag)",
  "link": "https://reverseengineering.stackexchange.com/questions/11483/decompiling-unpacking-a-compiled-packed-file-or-somehow-inserting-a-flag",
  "content": "I'm using a program that can pack/compile a folder with files into a single *.xyz file that only that program can decompile and read. In order for the program to create a compiled file the flag:\n\n```\n[Compile]\nDecompile=1\n\n```\nmust be in the file Meta.ini. If not, the file cannot be unpacked/decompiled and there is no way to get back the source files.\n\nI have created a compiled file and have lost the source files. I forgot to add the decompile flag, so I currently have no way to unpack the file and continue my work. I can still compile and decompile files using the program as long as I include the flag. The file produced is in the FoxPro FPT format. The program is written in Visual Basic.\n\nTo Summarise:\n\nI know where the flag needs to go but I have no way of inserting it without first decompiling/unpacking the file (that I know of). When I open the file with Notepad++ it's mostly gibberish (makes sense as the file contains alot of images and geometry data) but the contents of Meta.ini are in plaintext. However, trying to add the flag or replace one of the other flags with it gives Incorrect String errors when the program tries to load the file.\n\nMy options are: \n\nHow should I go about this?\n\nThanks\n\n",
  "votes": "0",
  "answers": 1,
  "views": "3k",
  "tags": [
    "decompile",
    "visual-basic"
  ],
  "user": "Alex Bridges",
  "time": "May 23, 2017 at 12:37",
  "comments": [
    {
      "user": "Jason Geffner",
      "text": "\"I'm using a program that can pack/compile a folder with...\" - What's the name and version number of the program?",
      "time": null
    },
    {
      "user": "Guntram Blohm",
      "text": "As Jason said. Stating the name of the program greatly improves the possibility of someone knowing about it. However, what you want might just not be feasible. For example, the flag might just be read when you create the file, and if it's set, both source code and compiled version go into the package; if it's clear, the source code is omitted. No amount of patching the finished package will give you the original source back.",
      "time": null
    },
    {
      "user": "Alex Bridges",
      "text": "@JasonGeffner the program is Lucas' Simpsons Hit & Run Mod Launcher Version 1.12.1",
      "time": null
    },
    {
      "user": "Alex Bridges",
      "text": "@JasonGeffner here is another of my files that has the decompile flag. To load it into the launcher click Open... then Mods and paste the folder there, then click Reload. To decompile the mod right click on it (Audi R8) and click Decompile. The compile process is practically identical. Thanks",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I had a look at the program you mentioned and the compilation means only packaging, so decompilation is always possible. The format of the file seems to be very simple, so if you want you can reverse it easily. However you can insert the decompilation flag into the meta.ini with a hex editor for example in the following way:\n\nAfter these modification you should have a similar entry such in the following picture:\n\n\n\n",
      "votes": "1",
      "user": "ebux",
      "time": "Jan 22, 2016 at 14:07",
      "is_accepted": false,
      "comments": [
        {
          "user": "Alex Bridges",
          "text": "Thanks for taking a look :) Inserting it didn't work initially but I'll do some fiddling and see what happens.",
          "time": null
        }
      ]
    }
  ]
}