{
  "title": "What are modern techniques of reverse engineering? [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/17566/what-are-modern-techniques-of-reverse-engineering",
  "content": "I read an article on x64dbg blog(https://x64dbg.com/blog/2016/07/09/introducing-contemporary-reverse-engineering-technique-to-real-world-use.html) which mentions modern techniques of reverse engineering e.g., trace record, back tracing, Parallel debugging.\nWhat else modern techniques of reverse engineering you can tell?\nIs there any place I can learn all about it?(I don't expect too much on this)\nI'm learning reverse only on windows now, If I learn reverse engineering on Linux too will I learn more techniques?\nEdit:\nMore specific, What debug feature you think is useful but windbg don't have?\n\n",
  "votes": "-2",
  "answers": 1,
  "views": "256",
  "tags": [
    "debugging",
    "x64dbg"
  ],
  "user": "prophet-x",
  "time": "7 years ago",
  "comments": [
    {
      "user": "joxeankoret",
      "text": "Your question is too broad, I think.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "If you're starting to study a new field you don't know much about, it is better to read some surveys which helps you to find recent work about the topic and presents some of the theoretical concepts used widely in that area.\n\nFor your second question, most modern operating systems support similar software technologies for user-mode programs. It may be easier or harder to do some procedure in different systems but, most of the time you can do the same thing in other even if it is not equal semantically.\n\n",
      "votes": "1",
      "user": "Kerim Can Kalıpcıoğlu",
      "time": "Mar 1, 2018 at 9:26",
      "is_accepted": true,
      "comments": []
    }
  ]
}