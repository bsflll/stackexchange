{
  "title": "Rename a program's button using x64dbg?",
  "link": "https://reverseengineering.stackexchange.com/questions/32000/rename-a-programs-button-using-x64dbg",
  "content": "I'm trying to change the name of a button, but I can't find anything that references it. I looked for the CreateWindow function in the intermodular calls, but I only found a reference to the main window. I also tried through strings but without success.\n\nSearching a little more I found a x64dbg function that allows checking the created processes and their identifiers called handle but nothing appears there except the process of the main window, different one from when you analyze the native calculator of windows.\n\nCould someone give me a new tip on what to do? It's like the button doesn't exist but it's visually there in the program.\n\nSorry for my English I'm using google translator.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "191",
  "tags": [
    "debugging"
  ],
  "user": "William Marques",
  "time": "May 6, 2024 at 4:59",
  "comments": [
    {
      "user": "Ricardo",
      "text": "Have you tried searching for the text?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Before registering a window for the first time, the Windows os holds all relevant information in a structure.(maybe uses RegisterClass function)  You can do this by looking at the arguments for the functions used.\n\nOtherwise, older legacy UIs use the window's default preset to bring up the window, which is hard to modify internally.\n\nI would suggest searching for the text inside the button, or breakpointing the click, and then pressing the button.\n\nIf possible, it would be great if you could specify exactly which method it using.\n\nps I use the \"deepl\" translator, AI-powered.\n\n",
      "votes": "0",
      "user": "Eveheeero",
      "time": "Jun 27, 2023 at 4:47",
      "is_accepted": false,
      "comments": []
    }
  ]
}