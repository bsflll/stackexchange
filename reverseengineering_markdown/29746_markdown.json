{
  "title": "Finding function from pattern",
  "link": "https://reverseengineering.stackexchange.com/questions/29746/finding-function-from-pattern",
  "content": "I have been trying to reverse engineer a game for a while now. I have a pattern already for the function I want to find:\n\n```\n\\x89\\x54\\x24\\x10\\x4C\\x89\\x44\\x24\\x18\\x4C\n\\x89\\x4C\\x24\\x20\\x48\\x83\\xEC\\x28\\x48\\x85\n\\xC9\\x75\\x08\\x8D\\x41\\x2B\\x48\\x83\\xC4\\x28\n\\xC3\\x4C\n\n```\nCan I find the function with that pattern using IDA or x64dbg?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "867",
  "tags": [
    "ida",
    "x64dbg",
    "game-hacking"
  ],
  "user": "CoolNite",
  "time": "Dec 20, 2021 at 17:19",
  "comments": [
    {
      "user": "zi0Black",
      "text": "Using IDA, do you mean the IDA debugger? (asking since the second software is a debugger)",
      "time": null
    },
    {
      "user": "CoolNite",
      "text": "@zi0Black Yes - at least I think I'm not 100% sure about the name",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "In IDA, you can find sequences of bytes via Search->Sequence of bytes. That said, if your byte pattern is poorly-chosen (for reasons such as that it includes relocatable byte sequences, or it was created for a different version of the software), the result of the search may well be that the pattern cannot be found in the target binary.\n\n",
      "votes": "2",
      "user": "Rolf Rolles",
      "time": "Dec 20, 2021 at 18:06",
      "is_accepted": true,
      "comments": [
        {
          "user": "CoolNite",
          "text": "Thanks for the answer! It didn't really work but that's more of a problem on my side that I'll figure out. Not your fault at all. Thanks again for answering",
          "time": null
        },
        {
          "user": "Rolf Rolles",
          "text": "No problem. If it doesn't match, try \"reducing\" your pattern, i.e., selecting some subset of it, and seeing if you can match the smaller one. Try to choose a long sequence that doesn't include any bytes that are interpreted as offsets or displacements.",
          "time": null
        }
      ]
    }
  ]
}