{
  "title": "Shellcode alignment problem",
  "link": "https://reverseengineering.stackexchange.com/questions/8459/shellcode-alignment-problem",
  "content": "I am trying some CTF style challenges where I have to write shellcode in x86_64 targeting Linux.\n\nIn the later challenges, the code grows a lot. I now have a large array of bytes I cannot use directly in the shellcode. My idea is to load the code, then manipulate it with add/sub and such in a first stage, then execute the decoded instructions later on.\n\nThe decoding however does not always work properly. Mostly, when I try to use pointers like [rax], the content read during runtime is not the same as the one read by gdb. Here is a simplified version of what I am trying to do :\n\n```\ndecrypt:\n  cmp byte [rax], 0x66\n  jae no_change\n  cmp byte [rax], 0\n  je no_change\n    add byte [rax], 0x3f\n\nno_change:\n  inc [rax]\n  loop decrypt\n\n```\nThis does not work. Usually [rax] is not read properly. However when I add a few NOP instructions in front of the no_change label then it works correct. I just don't get why I can't use [rax] to point to any location.\n\n",
  "votes": "1",
  "answers": 0,
  "views": "1k",
  "tags": [
    "assembly",
    "shellcode"
  ],
  "user": "Eric",
  "time": "Dec 17, 2015 at 17:15",
  "comments": [
    {
      "user": "user2823000",
      "text": "\"Mostly, when I try to use pointers like [rax], the content read during runtime is not the same as the one read by gdb\". This sounds like you're using absolute addresses, and the error comes from the overhead introduced by debugging with gdb that creates an offset for any absolute address compared to when you run the program without debugger.",
      "time": null
    },
    {
      "user": "tmr232",
      "text": "I'm pretty sure that in the line after the no_change label, you want to use inc rax and not inc [rax], as you want to increment the value of the pointer (rax) and not the value that is pointed to [rax].",
      "time": null
    },
    {
      "user": "InfinitelyManic",
      "text": "I know this post stale but, in addition to inc [rax] being an issue, I don't see anything initializing the loop counter - rcx. e.g., xor rcx, rcx add cl, 8             ; # of bytes...",
      "time": null
    }
  ],
  "answers_data": []
}