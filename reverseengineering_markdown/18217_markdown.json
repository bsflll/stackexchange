{
  "title": "r2pipe won't prompt for user input like the binary does in r2 debugger mode",
  "link": "https://reverseengineering.stackexchange.com/questions/18217/r2pipe-wont-prompt-for-user-input-like-the-binary-does-in-r2-debugger-mode",
  "content": "Have a functioning r2pipe script, but there's a need for hitting crtl-c to continue near the breakpoint(not a major issue,) however the script does not pause for input when the crackme asks for user input like it does in regular r2 command line. Whats the best way of sending input to the binary?\nThis tree of inputs is required near the end of the executable.\nCan't manage it to prompt even for the first.\nNo problems with script except for the input issue.\n\n```\nimport r2pipe\nr = r2pipe.open('crackme, flags=['-d'])\nr.cmd('e dbg.profile=robot.rr2')\nr.cmd('db 0x080486d8;') \nprint(r.cmd('dc'))\nprint(r.cmd('dc'))\nsep=' '\n\nvalue1=int(r.cmd('? [ebp+0xc];').split(sep, 1)[0])\nvalue2=int(r.cmd('? [ebp+0x10];').split(sep, 1)[0])\nhex_operator=r.cmd('dr eax')\noperator=r.cmd('? '+(hex_operator))\n\nif '+' in operator:\n    answer=value1+value2\n\nelif '-' in operator:\n    answer=value1-value2\n\nprint(r.cmd('dc'))\n\n```\nShould prompt for input down here, but the execution just ends after the \"what's the password\"\nOR if I enter the r2 commands without r2pipe starting with: \n r2 -d crackme -c \"e dbg.profile=robot.rr2\"\nit does prompt me for input but rr2 still does not input whats in input.txt\n\nin my .rr2:\n\n```\n#!/usr/bin/rarun2\n\n```\nhave tried\n\n```\ninput=input.txt \n\n```\nand\n\n```\nstdin=input.txt\n\n```\ninput.txt is just a string\n\nis it possible rarun's input or stdin directives are not compatible or something?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "1k",
  "tags": [
    "binary-analysis",
    "radare2"
  ],
  "user": "bumchux",
  "time": "May 10, 2018 at 0:02",
  "comments": [
    {
      "user": "Paweł Łukasik",
      "text": "is it possible you provide the link to this crackme?",
      "time": null
    },
    {
      "user": "bumchux",
      "text": "hackers.gg/challenges/pwnables/advanced3/robot_city",
      "time": null
    },
    {
      "user": "bumchux",
      "text": "here it is @PawełŁukasik",
      "time": null
    },
    {
      "user": "Paweł Łukasik",
      "text": "have some time yesterday, but don't have a solution yet. Looks like the issue is with this additional bin/sh being spawned there...",
      "time": null
    },
    {
      "user": "bumchux",
      "text": "That sounds strange. Did not even know that that was happening.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I think you're using some of the old version of r2, so my answer will not address that and show you how to do it with the latest one.\n\nThe problem is with your first line, or wrong assumption that starting the debug session and applying rarun2 file will automatically get applied. It's not.\n\nSo instead of connecting to r2 engine like this r = r2pipe.open('crackme', flags=['-d']) do this instead\n\n```\nr = r2pipe.open('crackme') #no debugging flag\nr.cmd('e dbg.profile=robot.rr2')\nr.cmd('ood') #reopen the file in debug mode - this will apply the dbg.profile settings\n...\n\n```\nWith this approach, it will correctly map the settings in rr2 to the debugging session and in case you put input.txt it will inform that the file doesn't exist (it treats this as a file).\n\nBut even with that approach, this crackme does some strange modifications to streams that are hard to follow. But at least with this change, you would be able to continue the investigation.\n\n",
      "votes": "0",
      "user": "Paweł Łukasik",
      "time": "May 11, 2018 at 14:21",
      "is_accepted": true,
      "comments": [
        {
          "user": "bumchux",
          "text": "Thanks for the helpful input. Though my version was up to date, this solution did allow me to get the program to accept some input. However, strangely enough, execution stops immediately thereafter and should continue to more questions upon validation of this input. Perhaps this is due to the binary as you are suggesting.",
          "time": null
        },
        {
          "user": "bumchux",
          "text": "UPDATE: Was able to get the input validated and a second question was outputted in succession finally, turns out running the dc command an extra time before the script quits fixes this stream issue. :O",
          "time": null
        },
        {
          "user": "Paweł Łukasik",
          "text": "my comment about old version of r2 was due to the fact that on my latest version this command: value1=int(r.cmd('? [ebp+0xc];').split(sep, 1)[0]) doesn't work as the output from ? is in a forma that can't be parsed by int.",
          "time": null
        },
        {
          "user": "bumchux",
          "text": "Huh, works for me however 2.5.0. But ran into a separate issue after further debugging. Ended up putting those beefy equations in a function to open input.txt and update it, so that the binary's first question is indeed answered correctly, then by the next question the next answer is accounted for. Also correct, however, it seems rarun is not passing the updated value of input.txt for the second question. IE. the first one is answered successfully but the second one comes up as incorrect even though input.txt is updated to the 2nd answer. Thinking rarun2 might not reload input fornext question",
          "time": null
        }
      ]
    }
  ]
}