{
  "title": "Reverse pseudo code",
  "link": "https://reverseengineering.stackexchange.com/questions/4470/reverse-pseudo-code",
  "content": "I am reversing a binary which seems to have all the symbols exported which helps.  What I have seen is a pile of variables and functions which all start with the letter 'v', for example v101.  I have been playing around with the decompiler from IDA and noticed that its pseudo code generally uses the same form having variables starting with the letter 'v'.  I know this may seem silly to ask but I am looking at a binary which is actually just IDA pro pseudo code compiled?\n\nA snippet of pseudo code generated:\n\n```\nint v3480()\n{\n  __int32 v0; // r0@1\n\n  v0 = time(0);\n  srand48(v0);\n\n  // TODO Object initialisation!!\n  v877 = &v3688;\n  v1277 = &v7299;\n  v1634 = &v5690;\n  v2042 = &v7024;\n\n  v873 = &v3688;\n  v872 = (char *)&v3688 + 1;\n  v1274 = &v7299;\n  v485 = &unk_40B69FF5;\n\n  v1631 = &v5690;\n  v1629 = (char *)&v5690 + 1;\n\n  v2037 = &v7024;\n  v2038 = (char *)&v7024 + 1;\n\n  v5661 = -1;\n  v2325 = -1;\n  v1259 = -1;\n  v4048 = -1;\n  v5509 = &v5497;\n  v3845 = &unk_40B69EEC;\n  v3522 = &v4191;\n  v7253 = &unk_40B69EE4;\n  v2081 = &v3009;\n  v5828 = &unk_40B69EDC;\n  v7014 = &v2061;\n  v3636 = &unk_40B69ED4;\n  v217 = &v6520;\n  v218 = &v6524;\n  v219 = &v6525;\n  v221 = &v6523;\n  v1455 = &v6523;\n  unk_40B69EF4 = &v6524;\n  v7297 = &dword_40A071D0;\n  v5530 = &dword_40A071D0;\n  if ( dword_40A071D0 )\n  {\n    v6935();\n  }\n  else\n  {\n    memcpy(v219, &v5764, 0xE3958u);\n    dword_40A071D0 = 1;\n  }\n  return 0;\n}\n\n```\n",
  "votes": "1",
  "answers": 1,
  "views": "1k",
  "tags": [
    "ida",
    "hexrays"
  ],
  "user": "allbabel",
  "time": "Jun 1, 2014 at 8:38",
  "comments": [
    {
      "user": "Willem Hengeveld",
      "text": "that sounds more like obfuscation, if all variables are  like 'v'+NUMBER.",
      "time": null
    },
    {
      "user": "yaspr",
      "text": "I suppose you should post part of the code so that the people who know what IDA's pseudo-code looks like can help. Otherwise, I don't think anybody can predict anything :D",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "You're looking at pseudocode reconstructed from the binary.\nAfter compilation all variable names disappeared, so IDA generates new generic ones.\n\nIt looks like that all v* variables are local (allocated on the stack) \n\n",
      "votes": "1",
      "user": "w s",
      "time": "May 28, 2014 at 18:14",
      "is_accepted": false,
      "comments": [
        {
          "user": "allbabel",
          "text": "Yes I know that but what I am seeing is that I have lots of functions in the original binary which have exported names starting with the character 'v' as well.",
          "time": null
        },
        {
          "user": "allbabel",
          "text": "What I am trying to say is that these names exist before generating psuedo code",
          "time": null
        },
        {
          "user": "w s",
          "text": "do you have debug information in this file ? i",
          "time": null
        },
        {
          "user": "w s",
          "text": "Can you post the function pseudocode somewhere ?",
          "time": null
        },
        {
          "user": "allbabel",
          "text": "Its above in the question",
          "time": null
        }
      ]
    }
  ]
}