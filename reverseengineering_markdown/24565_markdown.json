{
  "title": "In IDA, cannot find xrefs to string in ARM little-endian bootloader/firmware",
  "link": "https://reverseengineering.stackexchange.com/questions/24565/in-ida-cannot-find-xrefs-to-string-in-arm-little-endian-bootloader-firmware",
  "content": "In this firmware that is ARM Little endian.\n\nThere is two strings : \n\n```\n0x00006953 : Foretrex 701\n0x00006960 : Foretrex 601\n\n```\nThe issue, is there is no direct Xreft to any of thoses strings ? \n\nFor the firmware, it's pretty much the same.\n\n\n\nAs IDA cannot find the entry point, to start analyzing the binary (after setting CPU to arm little endian) select all the code (with CTRL+SHIFT+PAGE_DOWN) press C, then \"Analyze\"\n\n\n\n",
  "votes": "0",
  "answers": 1,
  "views": "401",
  "tags": [
    "ida",
    "binary-analysis",
    "arm"
  ],
  "user": "Lapin",
  "time": "Mar 30, 2020 at 1:12",
  "comments": [
    {
      "user": "w s",
      "text": "Do you know what is the base address of the firmware ?",
      "time": null
    },
    {
      "user": "Lapin",
      "text": "No at all, first time I open up a ARM binary (or even a firmware) in IDA, should I get the adresses of all the strings, compare it to the known pointers and try to find an offset that matches the most possible (if not \"all\") strings ? Or is there a better way ?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "As suggested in one of the answers, it's because of the base address, I used rbasefind to find the base_address of the firmware, and edited it to find the address of the bootloader as there was only two strings plus 11 false string positives.\n\n",
      "votes": "0",
      "user": "Lapin",
      "time": "Mar 30, 2020 at 16:54",
      "is_accepted": true,
      "comments": []
    }
  ]
}