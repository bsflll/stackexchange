{
  "title": "Static offsets Vs. Loaded Offsets",
  "link": "https://reverseengineering.stackexchange.com/questions/32904/static-offsets-vs-loaded-offsets",
  "content": "I am developing an application integrity concept tool that performs integrity checks based on a comparison of Windows syscalls in a static PE file on disk to those loaded. Can I match the offset of each syscall from the base address in the static file to the offest of the loaded function from the loaded base address to check that they correspond? I understand through ASLR the base address will change, but I suppose my question is, do the offsets from the base addresses (on disk and loaded) to the function calls remain the same?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "100",
  "tags": [
    "windows",
    "binary-analysis",
    "x86"
  ],
  "user": "Shockmeister",
  "time": "Jul 12, 2024 at 17:43",
  "comments": [
    {
      "user": "ynwarcs",
      "text": "Yes, the offsets will generally be the same, but only from the beginning of the section that the functions are located in (usually .text section). Section offsets may be different though, as a section can take a different amount of space when loaded vs being on the disk.",
      "time": null
    },
    {
      "user": "Shockmeister",
      "text": "So I just locate the the base of .text section and calculate the offsets in each case. Thanks!",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "As this is a Windows Q, there:\n\nSo, the answer to your Q (in this Windows context) is essentially yes, those (code text) offsets stay the same in that sense, relative to each other. OTOH\n\nSo offsets of some of those (other) things can differ from run to run.\n\n",
      "votes": "0",
      "user": "got trolled too much this week",
      "time": "Jun 24, 2024 at 1:21",
      "is_accepted": false,
      "comments": []
    }
  ]
}