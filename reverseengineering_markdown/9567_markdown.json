{
  "title": "How to find the entry point in LLDB on OS X?",
  "link": "https://reverseengineering.stackexchange.com/questions/9567/how-to-find-the-entry-point-in-lldb-on-os-x",
  "content": "How can I identify the entry point of an executable in LLDB?\n\nIn GDB, we can use the info file command, but that won't work in LLDB.  \n\nCan anyone show me how to do that?\n\n",
  "votes": "5",
  "answers": 1,
  "views": "2k",
  "tags": [
    "osx",
    "lldb",
    "entry-point"
  ],
  "user": "PSN",
  "time": "Aug 14, 2022 at 17:05",
  "comments": [],
  "answers_data": [
    {
      "content": "You can make use of the command\n\n```\n(lldb) process launch --stop-at-entry\n\n```\nto start the program. This stops you right at the entry point. From there lldb will tell you the address as well, in case this is what you are interested in.\n\nIf instead you were interested in the actual main function, and not the entry point, you should have a look at the related question lldb: break at start of actual code, not entrypoint\n\n",
      "votes": "8",
      "user": "Community",
      "time": "Apr 13, 2017 at 12:49",
      "is_accepted": true,
      "comments": [
        {
          "user": "JAL",
          "text": "What is the difference between --stop-at-entry and breaking at __libc_start_main?",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "@JAL: see reverseengineering.stackexchange.com/a/19572/60. BTW, __libc_start_main is not used on OS X (it's a glibc thing)",
          "time": null
        }
      ]
    }
  ]
}