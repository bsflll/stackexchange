{
  "title": "Hooking functions in Linux and/or OSX?",
  "link": "https://reverseengineering.stackexchange.com/questions/2113/hooking-functions-in-linux-and-or-osx",
  "content": "I want to hook functions in a library (lib.so or lib.dylib) from another process. I know that unlike windows libraries, libraries in Linux and Mac still have their symbols (function names and parameters).\n\nAPI Monitor allows you hook exported functions from other libraries but only for windows, which is somewhat of what I need.\n\nBasically I want to hook certain functions in either Linux or mac and see their parameters and order of calls.\n\nAny help is appreciated!\n\n",
  "votes": "12",
  "answers": 3,
  "views": "4k",
  "tags": [
    "disassembly",
    "linux",
    "dynamic-analysis",
    "osx",
    "symbols"
  ],
  "user": "TerryW",
  "time": "Jun 17, 2021 at 15:32",
  "comments": [
    {
      "user": "johndpope",
      "text": "That apimonitor software looks amazing. I did search apimonitor in google and came back with Valgrind",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "You can simply export the environment variable LD_PRELOAD (on Linux) or DYLD_INSERT_LIBRARIES (on OS X) pointing to (the full path of) your library before running your target, like in this example: \n\nhttps://stackoverflow.com/questions/6083337/overriding-malloc-using-the-ld-preload-mechanism\n\nThis is for hooking functions to do whatever you want (not to spy on function calls).\n\n",
      "votes": "9",
      "user": "Community",
      "time": "May 23, 2017 at 12:37",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Check the trace family:\n\nand also:\n\n",
      "votes": "8",
      "user": "Ange",
      "time": "May 27, 2013 at 8:00",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "For OS X, dtrace should do the trick. dtrace is supposed to exist for Linux as well, though I donâ€™t know how well it is supported, and I believe there are other equivalent tools there.\n\n",
      "votes": "6",
      "user": "microtherion",
      "time": "May 27, 2013 at 4:41",
      "is_accepted": false,
      "comments": [
        {
          "user": "TerryW",
          "text": "i see examples of dtrace with system calls but none on other libraries. can dtrace be used for a game to see which functions are being called in a specific library (ex. engine.dylib) and perhaps its parameters as well.",
          "time": null
        },
        {
          "user": "microtherion",
          "text": "Yes, the pid provider can do this: dtrace.org/guide/chapter30.html",
          "time": null
        }
      ]
    }
  ]
}