{
  "title": "GDBserver on Qemu not honoring \"follow-fork-mode child\"",
  "link": "https://reverseengineering.stackexchange.com/questions/25668/gdbserver-on-qemu-not-honoring-follow-fork-mode-child",
  "content": "I am using gdb-multiarch version 9.1 on Ubuntu to connect to a qemu-mipsel-static version 4.2.0 running a MIPS application which daemonizes itself with fork(), and which is running the built-in gdbserver. Here is the relevant GDB output:\n\n```\nBreakpoint 5, 0x7f5bb874 in daemon () from ./lib/libc.so.0\n\n```\nThe next instruction is jalr to fork\n\n```\n(gdb) si\n0x7f5738e0 in fork () from ./lib/libc.so.0\n\n```\nNow we are in fork(), let's check the state of follow-fork-mode\n\n```\n(gdb) show follow-fork-mode \nDebugger response to a program call of fork or vfork is \"child\".\n\n```\nEverything looks good, let's finish the function and check our return value\n\n```\n(gdb) finish\nRun till exit from #0  0x7f5738e0 in fork () from ./lib/libc.so.0\n0x7f5bb87c in daemon () from ./lib/libc.so.0\n(gdb) p $v0\n$7 = 119052\n(gdb) # what\n\n```\nThe PID indicates we are still attached to the parent process\n\n",
  "votes": "1",
  "answers": 1,
  "views": "769",
  "tags": [
    "gdb",
    "mips",
    "qemu"
  ],
  "user": "user503997",
  "time": "Aug 13, 2020 at 15:33",
  "comments": [],
  "answers_data": [
    {
      "content": "From the docs:\n\nCould it be that your kernel version is too low?\n\nYou can also try catch fork/vfork/exec  commands.\n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Aug 16, 2020 at 15:24",
      "is_accepted": false,
      "comments": [
        {
          "user": "user503997",
          "text": "Thank you for your reply. It wasn't the kernel version, as it was running on a recent Ubuntu release. Even Ubuntu 4.10 (Warty Warthog), the first Ubuntu released, used a newer kernel than 2.5.4.",
          "time": null
        }
      ]
    }
  ]
}