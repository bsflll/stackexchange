{
  "title": "registers set by function",
  "link": "https://reverseengineering.stackexchange.com/questions/4196/registers-set-by-function",
  "content": "How can I figure out which general-purpose registers are modified by a function call. I am programming a Win32 Assembly program that calls IsDebuggerPresent(). According to MSDN, it will return a boolean value of nonzero is a debugger is present. How would I find out which register is modified without having to assemble and link the program to test it.\n\n",
  "votes": "4",
  "answers": 1,
  "views": "99",
  "tags": [
    "windows",
    "debugging",
    "anti-debugging"
  ],
  "user": "Penguin",
  "time": "Apr 29, 2014 at 0:58",
  "comments": [],
  "answers_data": [
    {
      "content": "In general, this concept is referred to as register preservation or register volatility.\n\nFrom http://en.wikipedia.org/wiki/X86_calling_conventions#Register_preservation --\n\nIn other words, an API function such as IsDebuggerPresent() might modify EAX, EDX, and/or ECX, but it won't modify EBX, ESP, or EBP.\n\n",
      "votes": "6",
      "user": "Jason Geffner",
      "time": "Apr 29, 2014 at 2:31",
      "is_accepted": true,
      "comments": []
    }
  ]
}