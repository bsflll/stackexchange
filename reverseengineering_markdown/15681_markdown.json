{
  "title": "Is it possible for a .exe PE file to do something without any imports at all?",
  "link": "https://reverseengineering.stackexchange.com/questions/15681/is-it-possible-for-a-exe-pe-file-to-do-something-without-any-imports-at-all",
  "content": "All Portable Executable files that I've found with zero imports in the Import Address Table have not functioned. I also know that while .NET files often do not have the typical OS imports, they must still import either _CorExeMain or RHBinder__ShimExeMain.\n\nLastly, even packed files, while they will not have the main modules' imports, will still have imports necessary to start and unpack the file. Is it possible for a .exe PE file to have absolutely zero imports but still run and perform any useful function on a machine?\n\nPlease note: I am not talking about DLL files which are used by other executables for their function exports. I am talking about a standalone .exe file.\n\n",
  "votes": "6",
  "answers": 3,
  "views": "3k",
  "tags": [
    "pe",
    "executable"
  ],
  "user": "the_endian",
  "time": "Feb 28, 2019 at 17:02",
  "comments": [
    {
      "user": "peter ferrie",
      "text": "I'm still not clear - do you mean a program that uses no imported functions at all?  Without APIs, you can't even print on the screen.  Then it becomes a question of how you define \"useful\".  Alternatively, all Crinkler-packed files have an empty import table, yet do many amazing things, by parsing memory structures to find the loader, and then resolving the imports at runtime.",
      "time": null
    },
    {
      "user": "xvk3",
      "text": "Yes, programs can easily lookup the base address of \"kernel32.dll\" from the PEB. Then walk the PE header and export directory and dynamically lookup function addresses.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Although blabb's answer shows an executable without any imports, I'm assuming OP was asking about a more functional executable, and not as a theoretical exercise of that level.\n\nI can think of four types of reasonable, useable executable file types that may not have any imports:\n\n",
      "votes": "12",
      "user": "NirIzr",
      "time": "Jun 10, 2018 at 1:36",
      "is_accepted": true,
      "comments": [
        {
          "user": "conio",
          "text": "I don't really see the difference between 2 and 3. (Though I generally agree with what you said and voted up.)",
          "time": null
        },
        {
          "user": "NirIzr",
          "text": "I split up \"only using available APIs\" and \"Loading additional libraries\". Naturally, most of those differences are kinda similar and only slightly differ. Thanks for the upvote :)",
          "time": null
        }
      ]
    },
    {
      "content": "```\nvoid main (void)\n{\n    __asm\n    {\n        retn\n    }\n}\n\n```\ncompiled and linked using \n\n```\ncl /nologo /W4 /Ox /analyze noimpo.cpp /link /DEBUG:NONE /RELEASE /ENTRY:main /INCREMENTAL:NO /FIXED /SUBSYSTEM:windows /ALIGN:128 /DRIVER\n\n```\nwill create a working PE file \n\n**edit ** \n\n```\n// win 7 sp1 32 bit machine and ewdk 1703 cl.exe\nunsigned long long time = 0xdeadbeefdeadbeef;\n__declspec(naked) void main (void)\n{   \n    __asm\n    {\n        push OFFSET time\n        call ntqst      \n        retn\n    }   \n    ntqst:\n    __asm\n    {\n        mov eax,107h\n        mov edx , 7ffe0300h\n        call dword ptr ds:[edx]\n        retn 4\n    }\n}\n\n```\nrunning under debugger to see if it really does some thing useful \n\n```\ncdb -c \"g @$exentry;dq 400380 l1;pc;p;dq 400380 l1;.formats qwo(400380);.time;q\" noimpo.exe | grep -i quit -B 16\n\n00400380  deadbeef`deadbeef <----- marker\n\n00400380  01d2ef24`40afa83a <----- actual result\n\nEvaluate expression: < result from .formats \nxxxxxxxxxxxxxxxxxxxxxxxxx\n  Time:             Tue Jun 27 14:33:33.028 2017 \nxxxxxxxxxxxxxxxxxxxxxxxxx\n\nresult from .time command\n\nDebug session time: Tue Jun 27 14:33:33.028 2017 \nxxx\nquit:\n\n```\n",
      "votes": "7",
      "user": "blabb",
      "time": "Jun 27, 2017 at 9:30",
      "is_accepted": false,
      "comments": [
        {
          "user": "the_endian",
          "text": "I appreciate the response and the knowledge is useful, however, I think you missed the part of this sentence: \". Is it possible for a .exe PE file to have absolutely zero imports but still run and perform any useful function on a machine?\" 'anything useful.'",
          "time": null
        },
        {
          "user": "blabb",
          "text": "if you think querying system time is useful you have it in the edit",
          "time": null
        }
      ]
    },
    {
      "content": "Yes, it is possible but may depend on the OS you're trying to run it on. From the TinyPE page by  Alexander Sotirov:\n\nSo, if you use XP or above you can rely on kernel32 being in memory and use its functions. I suspect (but did not check) that even on Windows 2000 the ntdll.dll is mapped by the kernel, so you may be able to use it to do useful work (e.g. LdrLoadDll to load other DLLs and LdrGetProcedureAddress to resolve functions).\n\n",
      "votes": "5",
      "user": "Igor Skochinsky",
      "time": "Jun 27, 2017 at 9:20",
      "is_accepted": false,
      "comments": []
    }
  ]
}