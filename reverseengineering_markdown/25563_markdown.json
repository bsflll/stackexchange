{
  "title": "What are the best ways today in order to learn about finding use-after-frees while code auditing?",
  "link": "https://reverseengineering.stackexchange.com/questions/25563/what-are-the-best-ways-today-in-order-to-learn-about-finding-use-after-frees-whi",
  "content": "I'm a novice CTF player with a decent understanding of OS internals and software mechanisms, I have deep understanding of heap and OS and User locking mechanims.\n\nI would like to learn on how to properly identify use-after-frees in source codes. The classical examples of alloc-free-use are too simple, (at least for me), in order to deeply understand how use-after-free mechanims is actually identified. I've been reading about the subject for quite a lot in the past few weeks but I do not seem to find good examples, (bugs/writeups), on.\n\nWhat are good examples, (bugs/writeups), or methodologies in order to properly identify use-after-frees in code?\n\n",
  "votes": "0",
  "answers": 0,
  "views": "43",
  "tags": [
    "vulnerability-analysis"
  ],
  "user": "nvplyr",
  "time": "Jul 27, 2020 at 17:54",
  "comments": [
    {
      "user": "nvplyr",
      "text": "Can anyone at least point me to some good writeups about exploited use-after-frees?",
      "time": null
    },
    {
      "user": "nvplyr",
      "text": "Is anyone here?",
      "time": null
    }
  ],
  "answers_data": []
}