{
  "title": "Debug httpd process",
  "link": "https://reverseengineering.stackexchange.com/questions/6400/debug-httpd-process",
  "content": "I'm attempting to inspect memory of an httpd binary compiled statically with openssl. When I list the httpd processes, I get:\n\n```\n$ ps aux|grep httpd\nroot     58539  0.0  0.7  75364  3740 ?        Ss   14:49   0:00 /opt/httpd/bin/httpd\ndaemon   58850  0.0  0.5 364328  2556 ?        Sl   14:58   0:00 /opt/httpd/bin/httpd\ndaemon   58914  0.0  0.5 364328  2548 ?        Sl   14:59   0:00 /opt/httpd/bin/httpd\ndaemon   58942  0.0  0.5 364328  2544 ?        Sl   14:59   0:00 /opt/httpd/bin/httpd\n\n```\nI then tried attaching to each of the processes individually and applying a breakpoint to the function I am trying to debug. However, the breakpoint never gets triggered, although I know the function is being called.  I assume this problem relates to something along the lines of httpd forking on a new process, but I'm a bit stuck on how to proceed. Is there a generic way to ensure my breakpoint is triggered even if the processes forks?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "2k",
  "tags": [
    "gdb",
    "dynamic-analysis"
  ],
  "user": "amccormack",
  "time": "Oct 7, 2014 at 22:04",
  "comments": [
    {
      "user": "Guntram Blohm",
      "text": "Assuming your httpd is apache, to debug something like this, it might be best to service httpd stop and gdb httpd -X. That way, httpd will serve requests, but never fork, which makes things much easier to debug.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Depending on the worker model your apache is configured to use its likely a new worker is being spawned to handle your request if your bp isnt hitting. Like Guntram said you can disable forking and put httpd in debug mode by using the -X flag and starting gdb with:\n\n```\ngdb httpd -X\n\n```\nIf for some reason you need to debug the multiple worker configured httpd you should use the gdb options set follow-fork-mode ask or set follow-fork-mode child if you know you'd like to follow all forks in advance. (https://sourceware.org/gdb/onlinedocs/gdb/Forks.html). This would also be considered the 'generic approach' and would apply to programs that don't allow you to run single process in the foreground.\n\n",
      "votes": "1",
      "user": "amccormack",
      "time": "Oct 9, 2014 at 5:10",
      "is_accepted": true,
      "comments": []
    }
  ]
}