{
  "title": "What is __alloca_probe_16 and what does it do?",
  "link": "https://reverseengineering.stackexchange.com/questions/10759/what-is-alloca-probe-16-and-what-does-it-do",
  "content": "I'm reverse engineering some windows application. I came accross with this function that IDA recognized: \n\n```\ncall __alloca_probe_16\n\n```\nI'm unable to find any documentation/reference on this function except here. The poster suggests that __alloca_probe is a support routine for the API _alloca() without providing any reference.\n\nI'm just wondering if anyone knows what this function does and where I can find reference to undocumented/internal(?) APIs like this in the future. \n\n",
  "votes": "4",
  "answers": 1,
  "views": "7k",
  "tags": [
    "ida",
    "assembly"
  ],
  "user": "vincentleest",
  "time": "Aug 31, 2015 at 14:57",
  "comments": [],
  "answers_data": [
    {
      "content": "This funcion enures that an alloca() call returns  a pointer aligned to 16 bytes boundary. You can see the comments in alloca16.asm in Visual C++' CRT sources:\n\n```\n; _alloca_probe_16, _alloca_probe_8 - align allocation to 16/8 byte boundary\n;\n;Purpose:\n;       Adjust allocation size so the ESP returned from chkstk will be aligned\n;       to 16/8 bit boundary. Call chkstk to do the real allocation.\n;Entry:\n;       EAX = size of local frame\n;\n;Exit:\n;       Adjusted EAX.\n;\n;Uses:\n;       EAX\n\n```\nNB: this comment seems to be stale; the current implementation tail-calls _chkstk, so the allocation (ESP adjustment) happens immediately.\n\n",
      "votes": "9",
      "user": "Igor Skochinsky",
      "time": "Aug 31, 2015 at 15:12",
      "is_accepted": true,
      "comments": []
    }
  ]
}