{
  "title": "How to display memory zones content on IDA Pro?",
  "link": "https://reverseengineering.stackexchange.com/questions/1909/how-to-display-memory-zones-content-on-ida-pro",
  "content": "This is a very naive question about IDA Pro. Once the IDA debugger started, I would like to be able to type a memory address (or a memory zone) and look easily at the content of it (in various format). With gdb you would do print /x *0x80456ef or, if you want a wider zone, x /6x 0x80456ef.\n\nSo, what is the best way to display the memory content from the IDA debugger ?\n\n",
  "votes": "11",
  "answers": 2,
  "views": "16k",
  "tags": [
    "tools",
    "ida"
  ],
  "user": "perror",
  "time": "Apr 24, 2013 at 15:14",
  "comments": [],
  "answers_data": [
    {
      "content": "In IDAPython (documentation) you can do something like this to print a byte/word/double word:\n\n```\nDword(0x80456ef)\nWord(0x80456ef)\nByte(0x80456ef)\n\n```\nOr, to print an arbitrary number of bytes:\n\n```\nfor b in GetManyBytes(0x40138E, 10):\n    print \"%X\" % ord(b)\n\n```\nIf running in the debugger, call it like this: \n\n```\nGetManyBytes(0x40138E, 10, True)\n\n```\n",
      "votes": "10",
      "user": "0xC0000022L",
      "time": "Apr 23, 2013 at 12:14",
      "is_accepted": true,
      "comments": [
        {
          "user": "perror",
          "text": "Ok, I tried to write Dword(0x80456ef) in the IDC and it worked. Thanks a lot ! But, does someone knows where we can find the complete language usable in the IDC ? Is it matching exactly the idapython language ? Or, is it more ?",
          "time": null
        },
        {
          "user": "perror",
          "text": "Strangely, the last command that you gave is not working on my IDA Linux because of the \"True\", you need to write: GetManyBytes(0x804928c, 10, 1) to get it to work.",
          "time": null
        },
        {
          "user": "newgre",
          "text": "There is documentation in IDAs help file if you search for IDC. Also, idapython contains a wrapper around the IDC functions in idc.py.",
          "time": null
        },
        {
          "user": "0xC0000022L",
          "text": "@newgre: I think for completeness the IDC version should be included as well for the one statement where it differs (ignoring semi-colons). +1",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "See idc.idc for full docs.",
          "time": null
        }
      ]
    },
    {
      "content": "You can also position your cursor in one of the code, hex-view, or stack view windows, and press 'g' to bring up the \"jump to address\" dialog.\n\n",
      "votes": "3",
      "user": "Rolf Rolles",
      "time": "Apr 23, 2013 at 19:04",
      "is_accepted": false,
      "comments": [
        {
          "user": "Willem Hengeveld",
          "text": "and in hexview you can select the format you want to view your hexdump in.",
          "time": null
        },
        {
          "user": "amccormack",
          "text": "I'm a fan of double clicking addresses in the command window. This is an easy way to jump if you use a script to calculate the address.",
          "time": null
        }
      ]
    }
  ]
}