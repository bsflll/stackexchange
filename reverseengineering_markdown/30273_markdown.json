{
  "title": "How do I find the address of /bin/bash within a binary?",
  "link": "https://reverseengineering.stackexchange.com/questions/30273/how-do-i-find-the-address-of-bin-bash-within-a-binary",
  "content": "With the following command be correct in the following sequence?\n\n```\ngdb-peda -q binary\nbreak main\ninfo registers\n\n```\n",
  "votes": "0",
  "answers": 1,
  "views": "3k",
  "tags": [
    "address"
  ],
  "user": "Alvin567",
  "time": "Apr 17, 2022 at 8:35",
  "comments": [],
  "answers_data": [
    {
      "content": "This can be achieved with strings and grep\n\n```\n[rese] strings -a --radix=x x | grep /bin/bash\n    6e4 /bin/bash\n[rese] gdb -q x # for modern \"PIE\" binaries\"\nGEF for linux ready, type `gef' to start, `gef config' to configure\n75 commands loaded for GDB 8.1.1 using Python engine 3.6\n[*] 5 commands could not be loaded, run `gef missing` to know why.\nReading symbols from x...(no debugging symbols found)...done.\ngef➤  x/xs 0x6e4\n0x6e4:  \"/bin/bash\"\n\n```\nHowever it is to note that the address of strings change at runtime. You'll need to add the base of the module such as\n\n```\n[#0] Id 1, Name: \"x\", stopped 0x55555540063e in main (), reason: BREAKPOINT\n[#0] 0x55555540063e → main()\ngef➤  x/xs 0x6e4\n0x6e4:  <error: Cannot access memory at address 0x6e4>\ngef➤  x/xs 0x5555554006e4\n0x5555554006e4: \"/bin/bash\"\n\n```\nAlso another way is to use gdb using the find command\n\n```\n(gdb) help find\nSearch memory for a sequence of bytes.\nUsage:\nfind [/size-char] [/max-count] start-address, end-address, expr1 [, expr2 ...]\nfind [/size-char] [/max-count] start-address, +length, expr1 [, expr2 ...]\nsize-char is one of b,h,w,g for 8,16,32,64 bit values respectively,\nand if not specified the size is taken from the type of the expression\nin the current language.\nNote that this means for example that in the case of C-like languages\na search for an untyped 0x42 will search for \"(int) 0x42\"\nwhich is typically four bytes, and a search for a string \"hello\" will\ninclude the trailing '\\0'.  The null terminator can be removed from\nsearching by using casts, e.g.: {char[5]}\"hello\".\n\nThe address of the last match is stored as the value of \"$_\".\nConvenience variable \"$numfound\" is set to the number of matches.\n\n```\nExample\n\n```\n[rese] gdb -q x\nReading symbols from x...(no debugging symbols found)...done.\n(gdb) start\nTemporary breakpoint 1 at 0x4004eb\nStarting program: /tmp/rese/x\n\nTemporary breakpoint 1, 0x00000000004004eb in main ()\n(gdb) info proc mappings\nprocess 516\nMapped address spaces:\n\n          Start Addr           End Addr       Size     Offset objfile\n            0x400000           0x401000     0x1000        0x0 /tmp/rese/x\n            0x600000           0x601000     0x1000        0x0 /tmp/rese/x\n            0x601000           0x602000     0x1000     0x1000 /tmp/rese/x\n      0x7ffff79e2000     0x7ffff7bc9000   0x1e7000        0x0 /lib/x86_64-linux-gnu/libc-2.27.so\n      0x7ffff7bc9000     0x7ffff7dc9000   0x200000   0x1e7000 /lib/x86_64-linux-gnu/libc-2.27.so\n      0x7ffff7dc9000     0x7ffff7dcd000     0x4000   0x1e7000 /lib/x86_64-linux-gnu/libc-2.27.so\n      0x7ffff7dcd000     0x7ffff7dcf000     0x2000   0x1eb000 /lib/x86_64-linux-gnu/libc-2.27.so\n      0x7ffff7dcf000     0x7ffff7dd3000     0x4000        0x0\n      0x7ffff7dd3000     0x7ffff7dfc000    0x29000        0x0 /lib/x86_64-linux-gnu/ld-2.27.so\n      0x7ffff7fde000     0x7ffff7fe0000     0x2000        0x0\n      0x7ffff7ff7000     0x7ffff7ffb000     0x4000        0x0 [vvar]\n      0x7ffff7ffb000     0x7ffff7ffc000     0x1000        0x0 [vdso]\n      0x7ffff7ffc000     0x7ffff7ffd000     0x1000    0x29000 /lib/x86_64-linux-gnu/ld-2.27.so\n      0x7ffff7ffd000     0x7ffff7ffe000     0x1000    0x2a000 /lib/x86_64-linux-gnu/ld-2.27.so\n      0x7ffff7ffe000     0x7ffff7fff000     0x1000        0x0\n      0x7ffffffde000     0x7ffffffff000    0x21000        0x0 [stack]\n(gdb) find 0x400000, +0x1000, \"/bin/bash\" # 0x400000 is the start addr for target module x and 0x1000 is the size of the mapping.\n0x400584\n1 pattern found.\n(gdb) x/xs 0x400584\n0x400584:       \"/bin/bash\"\n\n```\n",
      "votes": "1",
      "user": "sudhackar",
      "time": "Apr 18, 2022 at 6:07",
      "is_accepted": false,
      "comments": []
    }
  ]
}