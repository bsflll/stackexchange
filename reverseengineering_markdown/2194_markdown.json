{
  "title": "IDA EBP variable offset",
  "link": "https://reverseengineering.stackexchange.com/questions/2194/ida-ebp-variable-offset",
  "content": "Let's take a look of how IDA displays address of local variable. For instance:\n\n```\nMOV EAX, [EBP + var_4]\n\n```\nAs we all know as far as local variables go, they are located at lower addresses of EBP.\n\n\n\nThough, I have been taking it for granted and inevitable, I am still very curious. Why does IDA display local variable offset as [EBP + var], not [EBP - var]?\n\nThank you so much.\n\n",
  "votes": "16",
  "answers": 1,
  "views": "6k",
  "tags": [
    "disassembly",
    "assembly",
    "static-analysis",
    "callstack",
    "ida"
  ],
  "user": "PSS",
  "time": "Jun 7, 2013 at 1:11",
  "comments": [],
  "answers_data": [
    {
      "content": "Have a look at the var_4 definition at the start of the function:\n\n```\nvar_4 = dword ptr -4\n\n```\nSo it's actually negative as expected.\n\nFor a more complete picture, use Ctrl+K or double-click/Enter on the stack var to see the stack frame layout:\n\n```\n-00000018 ; Two special fields \" r\" and \" s\" represent return address and saved registers.\n-00000018 ; Frame size: 18; Saved regs: 4; Purge: 0\n-00000018 ;\n-00000018\n-00000018 var_18          dd ?\n-00000014 var_14          dd ?\n-00000010 var_10          db 12 dup(?)\n-00000004 var_4           dd ?\n+00000000  s              db 4 dup(?)\n+00000004  r              db 4 dup(?)\n+00000008 arg_0           dd ?\n+0000000C\n+0000000C ; end of stack variables\n\n```\n",
      "votes": "23",
      "user": "Igor Skochinsky",
      "time": "Jun 7, 2013 at 1:55",
      "is_accepted": true,
      "comments": []
    }
  ]
}