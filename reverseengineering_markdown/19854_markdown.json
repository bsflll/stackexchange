{
  "title": "What are the difference syscall and int 0x2E instructions?",
  "link": "https://reverseengineering.stackexchange.com/questions/19854/int-2eh-instead-of-syscall-sysenter",
  "content": "From this question: How does the Windows Native API communicate with the kernel?\n\nHere is an example of ZwClose(HANDLE Handle); system call in NTDLL.DLL in Windows 10 X86_64:\n\n```\nNtClose         proc near\nmov     r10, rcx\nmov     eax, 0Fh\ntest    byte ptr ds:7FFE0308h, 1\njnz     short loc_a\nsyscall\nretn\n\nloc_a:\nint     2Eh\nretn\nNtClose         endp\n\n```\nMy question is, why there is two different instruction syscall and int 0x2E in one subroutine? The 0xF value in EAX is the ID of ZwClose() and/or NtCose(). While debugging, code execution never goes to int 0x2E, syscall instruction is always executed and ds:7FFE0308h becomes zero.\n\n",
  "votes": "10",
  "answers": 2,
  "views": "8k",
  "tags": [
    "windows",
    "x86",
    "kernel-mode",
    "system-call"
  ],
  "user": "MaleFUnction0",
  "time": "Jun 17, 2020 at 9:54",
  "comments": [],
  "answers_data": [
    {
      "content": "7FFE0308h is a pointer inside the KUSER_SHARED_DATA struct.\n\nRef: https://www.geoffchappell.com/studies/windows/km/ntoskrnl/structs/kuser_shared_data.htm\n\nWe see from that ref above that SharedUserData+0x308 is\n\nfor Windows versions 1511 and higher.\n\nSo what does it do?\n\n```\n//\n// On AMD64, this value is initialized to a nonzero value if the system\n// operates with an altered view of the system service call mechanism.\n//\n\nULONG SystemCall;\n\n```\nfrom recent ntddk.h\n\n...not very helpful.\n\nSo what's the difference between int 2e and syscall in this context?\n\nRef: https://twitter.com/honorary_bot/status/966609444674162688\n\nMore info here: https://www.amossys.fr/fr/ressources/blog-technique/windows10-th2-int2e-mystery/\n\nIn the context of your question the ntdll.dll int 0x2e system calls probably have something to do with Virtualization Based Security. They have been present in Windows 10 since version 1511, after having been removed as a syscall method since Windows 8.\n\n",
      "votes": "9",
      "user": "Gehock",
      "time": "Feb 14, 2023 at 14:28",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "int 2Eh is used on 32bit OS to enter the kernel mode. On 64-bit, the same is obtained by using syscall. The check done on memory address 0x7ffe0300 is one of the ways to detect the bitness.\n\n",
      "votes": "6",
      "user": "Paweł Łukasik",
      "time": "Sep 13, 2018 at 16:22",
      "is_accepted": false,
      "comments": []
    }
  ]
}