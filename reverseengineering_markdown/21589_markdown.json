{
  "title": "Identify function in cpp static binary",
  "link": "https://reverseengineering.stackexchange.com/questions/21589/identify-function-in-cpp-static-binary",
  "content": "When I open cpp static binary, how can identify known functions like fopen/ioctl/printf? They have been compiled statically into the binary.\n\nI dont know the compiler of this binary .\n\n",
  "votes": "2",
  "answers": 1,
  "views": "1k",
  "tags": [
    "ida",
    "static-analysis",
    "compilers"
  ],
  "user": "Keystone",
  "time": "Dec 5, 2019 at 3:43",
  "comments": [],
  "answers_data": [
    {
      "content": "As far as I know, there are 3 approaches that have been implemented to identify library functions:\n\nAn experimental approach based on machine learning techniques was explored by Google Project Zero's Thomas Dullien in his article \"Searching statically-linked vulnerable library functions in executable code: \nHelping researchers find 0ld days\", in which he experimented with using similarity hashing combined with distance metrics in an attempt to identify functions across binaries generated by different compiler toolchains and compilation options. The article also mentions alternative approaches in published research, but besides MACHOC there is no public code or implementation available.\n\n",
      "votes": "2",
      "user": "julian",
      "time": "Jul 3, 2019 at 5:28",
      "is_accepted": false,
      "comments": []
    }
  ]
}