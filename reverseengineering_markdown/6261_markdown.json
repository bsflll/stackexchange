{
  "title": "Competitive Types",
  "link": "https://reverseengineering.stackexchange.com/questions/6261/competitive-types",
  "content": "I have the following lines discovered in a piece of code (using IDA PRO) :\n\n```\n ...\n ...\n push 44h\n pop edi\n push edi        ; size_t\n xor esi, esi\n lea eax, [ebp+StartupInfo]\n push esi        ; int \n push eax        ; void *\n call _memset\n ...\n ...\n\n```\nWhen I saw the line lea eax, [ebp+StartupInfo] I thought, okay eax is a pointer to the structure STARTUPINFO. With int esi = 0 or NULL (see the line xor esi, esi) and with size_t edi = 44h and by calling memset, they must fill the first 44 bytes of STARTUPINFO (that would be the elements cb, lpReserved,....,wShowWindow).\n\nBut the line \n     push eax        ; void *\n\nirritates me. How can eax has the type Startupinfo and void at the same time? \n\nAfter that, I found out that the first parameter of memset()-function must have the type void. And so, the question mark in my mind is now bigger...\n\n",
  "votes": "1",
  "answers": 1,
  "views": "111",
  "tags": [
    "assembly",
    "struct"
  ],
  "user": "user3097712",
  "time": "Sep 19, 2014 at 16:58",
  "comments": [
    {
      "user": "evlncrn8",
      "text": "its the memset declaration, parameter is a size_to_memset (size_t), value to fill with (int), memory address (void*) and the void*, StartupInfo etc are all just high level concepts.. at the end of the day the chip doesnt care what it is, its just a number..",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "IDA knows that the prototype for the _memset function is _memset(void *, int, size_t), so it's showing you that the value of eax in push eax is for the void * parameter.\n\nHowever, later on in this function, a pointer to the StartupInfo structure is likely passed to CreateProcess, which is why IDA named it as such.\n\neax is just a register that holds a value, which in your disassembly above is the address of the StartupInfo structure. Types are high-level concepts, so when handled by _memset, the value of eax is interpreted as a void *, and when it's handled by CreateProcess, it's interpreted as a pointer to a STARTUPINFO structure.\n\n",
      "votes": "3",
      "user": "Jason Geffner",
      "time": "Sep 19, 2014 at 17:09",
      "is_accepted": true,
      "comments": [
        {
          "user": "user3097712",
          "text": "thanks for your answer. The part \" the value of eax is interpreted as a void *, and when it's handled by CreateProcess, it's interpreted as a pointer to a STARTUPINFO structure.\" was completely new for me. Thx!",
          "time": null
        }
      ]
    }
  ]
}