{
  "title": "IDA hexrays decompiler [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/15216/ida-hexrays-decompiler",
  "content": "Sometimes i see such lines. What do they mean, such syntax? \n\n```\nint __fastcall sub_1(int a1, int a2)\n{\n  int v2; // r4@1\n  int v3; // r5@1\n  int v4; // r6@1\n  int v5; // r0@2\n  int v6; // r0@2\n  unsigned int v7; // r0@4\n  int v8; // r5@8\n\n  v2 = a2;\n  v3 = a1;\n  sub_2(a2);\n  v4 = *(_BYTE *)(sub_3(*(_DWORD *)(v3 + 1684)) + 13);\n  (*(void (__fastcall **)(int, int))(*(_DWORD *)v2 + 24))(v2, v4);\n  if ( v4 )\n  {\n    (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)v2 + 56))(v2, *(_DWORD *)(v3 + 1700));\n\n```\n",
  "votes": "-2",
  "answers": 1,
  "views": "643",
  "tags": [
    "ida",
    "decompilation"
  ],
  "user": "feauqt",
  "time": "8 years ago",
  "comments": [
    {
      "user": "JAL",
      "text": "In what context?",
      "time": null
    },
    {
      "user": "feauqt",
      "text": "this what context in",
      "time": null
    },
    {
      "user": "julian",
      "text": "hex-rays.com/products/ida/support/ppt/â€¦",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "It's very likely what you're looking at is a virtual method call on a class. \n\nVirtual methods are usually implemented by the use of a pointer to a table of function pointers. The pointer is added at the beginning of the class data and is added transparently by the compiler if a class has a virtual method.\n\nFirst it casts v2 to a pointer to a DWORD, reads the DWORD (vtable pointer), adds 24 to the vtable base pointer, reads the pointer to the method at offset 24 in the vtable, casts that to a function pointer and calls it. \n\nSince v2 is both used to locate the vtable pointer and passed as the first argument it's likely the this pointer.\n\n",
      "votes": "4",
      "user": "Peter Andersson",
      "time": "Apr 26, 2017 at 4:08",
      "is_accepted": true,
      "comments": []
    }
  ]
}