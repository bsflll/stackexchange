{
  "title": "mov ecx, arg - How to replicate in C++?",
  "link": "https://reverseengineering.stackexchange.com/questions/10753/mov-ecx-arg-how-to-replicate-in-c",
  "content": "I frequently see code formatted like this:\n\n```\npush arg\npush arg\n(...)\nmov ecx, arg\ncall function\n\n```\nIf I need to call that function in Assembly, it's fine. But since I know how to consistently get the base of the functions, for the sake of organization and simplicity, I'd like to use typedefs in a DLL to call the functions. \n\nThe problem's that I have no idea how to make a call use ecx to pass data. Unless I'm mistaken, func(arg,arg) will always assemble to two pushes and a call. If I don't use ecx the function crashes because it's a pointer to an object and it needs to be that. Is there any way to do this without inline assembly which I'd like to avoid?\n\n",
  "votes": "4",
  "answers": 1,
  "views": "683",
  "tags": [
    "assembly",
    "c++",
    "call"
  ],
  "user": "Lupe",
  "time": "Aug 30, 2015 at 23:04",
  "comments": [],
  "answers_data": [
    {
      "content": "You can either typedef it like this:\n\n```\n// typedef <return-type>(__thiscall* <type-name>)(<ecx>, <stack-1>, <stack-2>);\ntypedef int(__thiscall* tSomeFunc)(int thisPtr, int arg1, int arg2);\ntSomeFunc func = (tSomeFunc) 0xBAADC0DE;\n\n// this is how you call it\nfunc(/* this */ 0x123, /* arg1 */ 1, /* arg2 */ arg2);\n\n```\nOr directly call it:\n\n```\n((int(__thiscall*)(int, int, int)) 0xDEADBABE)(/* this */ 0x123, 1, 2);\n\n```\nIt relies on the fact that your calling convention seems to be __thiscall, which stores the this pointer into ecx and then pushes the rest of the args to the stack.\n\n",
      "votes": "10",
      "user": "rev",
      "time": "Aug 31, 2015 at 0:38",
      "is_accepted": true,
      "comments": [
        {
          "user": "Lupe",
          "text": "Thank you, this was perfect. I always wondered how C++ could magically tell whether functions used ret or retn %d and this explained that, too",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "@AcidShout, nice job including both the typedef-style and the direct-call style in your answer!",
          "time": null
        }
      ]
    }
  ]
}