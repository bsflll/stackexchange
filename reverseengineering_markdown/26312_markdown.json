{
  "title": "How to keep symbols when taking memory snapshot with IDA?",
  "link": "https://reverseengineering.stackexchange.com/questions/26312/how-to-keep-symbols-when-taking-memory-snapshot-with-ida",
  "content": "When i take memory snapshot with IDA to try to analyze it statically later, the problem is there are a lot of symbols that get lost when i dump the memory, how can i solve this?\n\nfor example this is the dump before :\n\n```\nrootkit:84582008 40 DE A4 82                             dd offset nt_memcpy\nrootkit:8458200C C1 BA C7 82                             dd offset nt_RtlFreeUnicodeString\nrootkit:84582010 10 AF AC 82                             dd offset nt_RtlEqualString\nrootkit:84582014 20 D5 A4 82                             dd offset nt_RtlInitAnsiString\nrootkit:84582018 BA 6A B3 82                             dd offset nt_ExFreePoolWithTag\nrootkit:8458201C 9B D2 C7 82                             dd offset nt_RtlUnicodeStringToAnsiString\nrootkit:84582020 05 60 B3 82                             dd offset nt_ExAllocatePoolWithTag\nrootkit:84582024 58 12 A5 82                             dd offset nt_ZwQuerySystemInformation\nrootkit:84582028 C0 E4 A4 82                             dd offset nt_memset\nrootkit:8458202C DC 01 A5 82                             dd offset nt_ZwClose\nrootkit:84582030 1C 03 A5 82                             dd offset nt_ZwCreateFile\nrootkit:84582034 35 9A C3 82                             dd offset nt_RtlEqualUnicodeString\nrootkit:84582038 6F DF C7 82                             dd offset nt_ObQueryNameString\nrootkit:8458203C 83 D2 A8 82                             dd offset nt_ObfDereferenceObjec\n\n```\nafter i take the memory snapshot and detach from kernel :\n\n```\nrootkit:84582000                 dd 82A851FEh\nrootkit:84582004                 dd 82A84D9Bh\nrootkit:84582008                 dd 82A4DE40h\nrootkit:8458200C                 dd 82C7BAC1h\nrootkit:84582010                 dd 82ACAF10h\nrootkit:84582014                 dd 82A4D520h\nrootkit:84582018                 dd 82B36ABAh\nrootkit:8458201C                 dd 82C7D29Bh\nrootkit:84582020                 dd 82B36005h\nrootkit:84582024                 dd 82A51258h\nrootkit:84582028                 dd 82A4E4C0h\nrootkit:8458202C                 dd 82A501DCh\nrootkit:84582030                 dd 82A5031Ch\nrootkit:84582034                 dd 82C39A35h\nrootkit:84582038                 dd 82C7DF6Fh\nrootkit:8458203C                 dd 82A8D283h \n\n```\n",
  "votes": "1",
  "answers": 1,
  "views": "222",
  "tags": [
    "ida",
    "windows",
    "unpacking",
    "dumping",
    "kernel"
  ],
  "user": "Notoriouss",
  "time": "Nov 16, 2020 at 12:19",
  "comments": [],
  "answers_data": [
    {
      "content": "Two options:\n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Nov 17, 2020 at 23:09",
      "is_accepted": true,
      "comments": [
        {
          "user": "Notoriouss",
          "text": "Thank you for answer, the problem is the module is not really a module, its a rootkit executable buffer so it doesnt show in modules list so i cant use Analyze module,  also i coudln't find the \"enable segment loader flag\" in the segment attributes? (edit - > segments - > edit segment)",
          "time": null
        },
        {
          "user": "Notoriouss",
          "text": "I should note that the segment you see in my question is created by me manually, i found the rootkit's kernel module and created a segment for so i can analyze it later when i create memory snapshot",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "@Notoriouss the target is the nt module which should be in the list",
          "time": null
        },
        {
          "user": "Notoriouss",
          "text": "thank you that fixed it, but i still couldn't find anything regarding enabling the target segmentâ€™s loader flag in segment properties in edit - > segments - > edit segment, where is this option?",
          "time": null
        }
      ]
    }
  ]
}