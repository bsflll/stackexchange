{
  "title": "Binary instrumentation with Python",
  "link": "https://reverseengineering.stackexchange.com/questions/2522/binary-instrumentation-with-python",
  "content": "I'm interested in performing (dynamic) binary instrumentation using Python to be able to analyze the binary by instructions during execution for\n\n",
  "votes": "10",
  "answers": 2,
  "views": "1k",
  "tags": [
    "binary-analysis"
  ],
  "user": "PhoeniX",
  "time": "Jun 17, 2020 at 9:54",
  "comments": [
    {
      "user": "Rolf Rolles",
      "text": "Man ... that is going to be hella slow.",
      "time": null
    },
    {
      "user": "PhoeniX",
      "text": "I know, but currently I do not really care :)",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "From https://code.google.com/p/processtap/ -\n\n",
      "votes": "9",
      "user": "Jason Geffner",
      "time": "Jul 22, 2013 at 22:35",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Despite being an afternoon hack, this static binary instrumenter might get you part way there. However, consider these crucial limitations:\n\nBUT, it is in python ;-)\n\n",
      "votes": "4",
      "user": "Peter Goodman",
      "time": "Sep 9, 2013 at 20:18",
      "is_accepted": false,
      "comments": []
    }
  ]
}