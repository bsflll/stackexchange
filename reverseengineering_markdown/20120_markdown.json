{
  "title": "How to make Radare2 automatically disassemble next instruction after each `ds` debug single-step?",
  "link": "https://reverseengineering.stackexchange.com/questions/20120/how-to-make-radare2-automatically-disassemble-next-instruction-after-each-ds-d",
  "content": "I thought that e asm.bytes=1 would achieve this, but that doesn't help.\n\nIn particular, GDB supports disassembling the next instruction after each debug single-step, so I guess this should be possible with Radare2 as well.\n\n",
  "votes": "3",
  "answers": 1,
  "views": "2k",
  "tags": [
    "debugging",
    "radare2"
  ],
  "user": "Shuzheng",
  "time": "Dec 11, 2018 at 8:08",
  "comments": [],
  "answers_data": [
    {
      "content": "If you want to execute another command after doing ds you can simply use ; to add a new command. So for example, the command ds; pd 1 @ rip will step one instruction and disassemble the instruction at rip.\n\nYou can also define a macro (an alias) for a set of commands. Let's define for example the macro foo to do the following things:\n\nTo do this you can simply run:\n\n```\n[0x7f46fea5ee00]> (foo, ds, px 16 @ rip, pd 1 @ rip)\n\n```\nAnd then use it with .(foo):\n\n```\n[0x7f46fea5ee00]> .(foo)\n- offset -       0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF\n0x7f46fea5ee1a  89c0 48c1 e220 4809 c248 8b05 0e70 0200  ..H.. H..H...p..\n            ;-- rip:\n            0x7f46fea5ee1a      89c0           mov eax, eax\n\n[0x7f46fea5ee00]> .(foo)\n- offset -       0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF\n0x7f46fea5ee1c  48c1 e220 4809 c248 8b05 0e70 0200 4889  H.. H..H...p..H.\n            ;-- rip:\n            0x7f46fea5ee1c      48c1e220       shl rdx, 0x20\n\n[0x7f46fea5ee00]> .(foo)\n- offset -       0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF\n0x7f46fea5ee20  4809 c248 8b05 0e70 0200 4889 156f 6802  H..H...p..H..oh.\n            ;-- rip:\n            0x7f46fea5ee20      4809c2         or rdx, rax\n\n```\nVisual Modes \n\nNow, after all this was said, I want to add that in my opinion, interactive debugging using ds, dso, dc and similar are the wrong approach. For a debugging session, it is preferred to use the Visual Modes of radare2. Visual Panels mode is ideal for debugging session but you can also enjoy from a good experience while using the regular Visual and Visual Graph modes.\n\nThe following GIF shows the Visual Panels mode (V!) as well as the regular Visual mode. You can also see that by pressing : I can execute radare2 commands (in the gif I executed px). Visual Panels mode is very configurable and you can tweak it as you see fit. Simply use the ? key to see the help and the available commands.\n\n\n\nRead more:\n\n",
      "votes": "3",
      "user": "Megabeets",
      "time": "Dec 11, 2018 at 12:48",
      "is_accepted": true,
      "comments": [
        {
          "user": "Shuzheng",
          "text": "thank you a lot. Now, how do I save the macro, so that it is loaded at next startup of Radare2? Furthermore, do you know why ds doesn't update the prompt address in reverseengineering.stackexchange.com/questions/20114/â€¦? The prompt address only updates after pressing like 5-10 ds's, but that varies.",
          "time": null
        },
        {
          "user": "Megabeets",
          "text": "You can simply write (echo) it to your radare2rc file (default is: ~/.radare2rc). And for the seek, I don't know if it should be changed at all. If you think so, you can open an issue on GitHub or just ask in the radare2 telegram/irc group. Alos, you can add s rip to your macro in order to make r2 seek to the IP.",
          "time": null
        },
        {
          "user": "Shuzheng",
          "text": "Ahh yes, you are probably right. However, it is just wierd then that after pressing ds many times, the seek address is suddenly updated. That doesn't make sense does it? Anyway, thanks for your answer. I will accept it :)",
          "time": null
        }
      ]
    }
  ]
}