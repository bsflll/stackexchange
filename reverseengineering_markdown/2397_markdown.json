{
  "title": "Using MIPS EJTAG functionality in OpenOCD",
  "link": "https://reverseengineering.stackexchange.com/questions/2397/using-mips-ejtag-functionality-in-openocd",
  "content": "I am trying to use the OpenOCD functionality of a BusBlaster to debug a MIPS target. However, it doesn't look as though my target MIPS chip is defined in the list of sample target chip configurations - in my directory for OpenOCD, version 0.7.0, I am looking in the tcl/target folder.\n\n",
  "votes": "7",
  "answers": 1,
  "views": "4k",
  "tags": [
    "hardware",
    "jtag",
    "mips"
  ],
  "user": "dingo_kinznerhook",
  "time": "Jun 4, 2014 at 7:30",
  "comments": [
    {
      "user": "Francisco",
      "text": "Any new hints on this subject? BusBlaster has a new VID/PID and even correcting those, I still cannot \"halt\" the MIPS-4KEc device. Thanks! Francisco",
      "time": null
    },
    {
      "user": "Chris Stratton",
      "text": "The answer form may only be used to post answers, not to ask questions.  Typically you need to have some key information about your target, especially the register lengths.  And if you're trying to load your own code, you typically need to know things like how to configure the DRAM controller and clocking, etc.  For one SoC the module vendor sent me a command file for some proprietary tool that was intelligible enough to manually translate into an openocd script.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I am going to take a stab at answering my own question, and may update the answer in the future with additional details about OpenOCD. \n\nThere are some things that I did not understand about the Bus Blaster and there are some things that I did not understand about OpenOCD, and in both cases reading the documentation better would have helped. I ended up compiling OpenOCD from source under Ubuntu. \n\nThe user documentation for OpenOCD is available on the OpenOCD website, and the instructions for creating configuration files are located here. There are three types of configuration files: \n\nWarn : AUTO auto0.tap - use \"jtag newtap auto0 tap -expected-id 0x???????? ...\"\nWarn : AUTO auto0.tap - use \"... -irlen ?\"\n\nYou can use the autoprobed TAP lines to create a new target file in openocd-0.7.0/tcl/target. In addition to those lines, add a line declaring a new target (I borrowed this from another target configuration) specifying which architecture and variant it is when creating the TAP. \n\n",
      "votes": "3",
      "user": "dingo_kinznerhook",
      "time": "Aug 12, 2013 at 21:02",
      "is_accepted": false,
      "comments": []
    }
  ]
}