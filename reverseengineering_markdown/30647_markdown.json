{
  "title": "What should the instruction string be for capstone",
  "link": "https://reverseengineering.stackexchange.com/questions/30647/what-should-the-instruction-string-be-for-capstone",
  "content": "The following program doesn't correctly disassemble string \"d280001d\", it just outputs:\n\nI also tried \"\\xd2\\x80\\x00\\x1d\", which I got from shell-storm.org, still got the same issue. Anybody can help me on what is going wrong? I cannot find explanation about what kind of input string format capstone expects. Thanks\n\n```\n#include <stdio.h>\n#include <inttypes.h>\n#include <capstone/capstone.h>\n#define CODE \"1d0080d2\" // expect: movz  x29, #0\n\nint main(void)\n{\n\n  csh handle;\n  cs_insn *insn;\n  size_t count;\n  //if (cs_open(CS_ARCH_ARM64, CS_MODE_ARM, &handle) != CS_ERR_OK)\n  if (cs_open(CS_ARCH_ARM64, CS_MODE_ARM, &handle) != CS_ERR_OK)\n    return -1;\n\n  count = cs_disasm(handle, CODE, sizeof(CODE)-1, 0x1000, 0, &insn);\n  if (count > 0) {\n    size_t j;\n    for (j = 0; j < count; j++) {\n      // Assembly code address Address ,mnemonic It's the opcode ,op_str It's the operands \n      printf(\"0x%\"PRIx64\":\\t%s\\t\\t%s  \n\", insn[j].address, insn[j].mnemonic,\n      insn[j].op_str);\n    }\n    cs_free(insn, count);\n  } else\n    printf(\"ERROR: Failed to disassemble given code!  \n\");\n\n  cs_close(&handle);\n  return 0;\n}\n\n```\n",
  "votes": "0",
  "answers": 1,
  "views": "102",
  "tags": [
    "capstone"
  ],
  "user": "yeeha",
  "time": "Jul 16, 2022 at 19:04",
  "comments": [],
  "answers_data": [
    {
      "content": "You CODE def needs the data formatted like this:\n\n```\n#define CODE \"\\x1d\\x00\\x80\\xd2\" // expect: movz  x29, #0\n\n```\nYou don't need to change the endian format, please see the Capstone docs for guidance: https://www.capstone-engine.org/lang_c.html\n\nOutput:\n\n```\n$ ./cap \n0x1000: movz        x29, #0\n\n```\n",
      "votes": "1",
      "user": "Mega Tonnage",
      "time": "Jul 17, 2022 at 5:19",
      "is_accepted": false,
      "comments": [
        {
          "user": "yeeha",
          "text": "Thanks for the help. I actually tried different enumeration of the 4 byte orders (including  \"\\x1d\\x00\\x80\\xd2\") and nothing works. I am wondering if there is something wrong with the way I build my capstone.",
          "time": null
        },
        {
          "user": "yeeha",
          "text": "I built capstone with the following command:  CAPSTONE_ARCHS=\"aarch64\" CAPSTONE_USE_SYS_DYN_MEM=no CAPSTONE_DIET=yes CAPSTONE_X86_REDUCE=yes sh -x  ./make.sh debug",
          "time": null
        },
        {
          "user": "Mega Tonnage",
          "text": "I didn't do anything special:  gcc -lcapstone -o cap cap.c",
          "time": null
        }
      ]
    }
  ]
}