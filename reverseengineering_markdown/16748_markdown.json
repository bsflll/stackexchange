{
  "title": "how to find memory objects using immunity debugger",
  "link": "https://reverseengineering.stackexchange.com/questions/16748/how-to-find-memory-objects-using-immunity-debugger",
  "content": "I am trying to exploit a program where I have to reuse a socket.\n\nrecv looks like this:\n\n```\nint recv(\n_In_  SOCKET s, // socket ID\n_Out_ char   *buf,\n_In_  int    len,\n_In_  int    flags\n);\n\n```\nI want to find where the socket ID is on the stack. How do I find this using Immunity Debugger?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "2k",
  "tags": [
    "debugging",
    "immunity-debugger",
    "shellcode"
  ],
  "user": "oldnoob",
  "time": "Nov 12, 2017 at 9:44",
  "comments": [
    {
      "user": "Megabeets",
      "text": "@DominikAntal please consider making an answer from your comment since it may answer OP's question",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Put a INT3 (F2) breakpoint on the recv function (To jump to that function, hit CTRL+G then type recv to the textbox which just appeared, and then hit enter) within Immunity Debugger, and observe the stack (lower right corner) for the socket ID when the breakpoint is hit.\n\n",
      "votes": "3",
      "user": "Dominik Antal",
      "time": "Nov 13, 2017 at 6:24",
      "is_accepted": true,
      "comments": []
    }
  ]
}