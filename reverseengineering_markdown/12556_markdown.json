{
  "title": "Analyzing an APK without tools [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/12556/analyzing-an-apk-without-tools",
  "content": "I know you can unpack APKs with apktool and the likes, however we're doing an exercise at uni where we're supposed to get some info like permissions declared and permissions used from some APKs without using tools. Not really sure where to start. I'm guessing I'll need to unzip and apply some public-private signing. \n\n",
  "votes": "0",
  "answers": 1,
  "views": "253",
  "tags": [
    "android",
    "apk"
  ],
  "user": "Michiel Ariens",
  "time": "8 years ago",
  "comments": [
    {
      "user": "Guntram Blohm",
      "text": "You need to be a bit more specific what your problem is. Yes, an APK is a zip file, so you can unzip it. But isn't unzip a tool as well? No, you don't need to apply any signing as long as you aren't trying to generate a new modified APK. To see permissions, you need to check Android.xml, but inside an APK, this isn't a text XML file, it has a binary encoding. Are you allowed to use a tool to convert that back to readble XML?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Amazing exercise.\n\nHere are the steps you can do broadly:\n\n",
      "votes": "1",
      "user": "perror",
      "time": "Apr 29, 2016 at 11:39",
      "is_accepted": true,
      "comments": []
    }
  ]
}