{
  "title": "In Ghidra what do I need to set so disassembler is in Thumb mode instead of ARM",
  "link": "https://reverseengineering.stackexchange.com/questions/21187/in-ghidra-what-do-i-need-to-set-so-disassembler-is-in-thumb-mode-instead-of-arm",
  "content": "In IDA I would press Alt+G and set the T register to 1 to first the code to be Thumb, but in Ghidra am not not sure how to force it.\n\nThe context is I have some functions pointed to by a data structure, I have set those to have a data type of a new function pointer type, so I am not sure if I really just need to re-analyze the code, and it will flow correctly (also not sure how to that), Or if I just need to manually force it.\n\n[Edit:]I originally selected ARMv4 as my target, after doing some reading ARM architecture and starting again with ARMv7 the code correctly has Thumb support. \n\n",
  "votes": "7",
  "answers": 1,
  "views": "5k",
  "tags": [
    "arm",
    "ghidra"
  ],
  "user": "Simeon Pilgrim",
  "time": "Apr 20, 2019 at 5:16",
  "comments": [],
  "answers_data": [
    {
      "content": "So once in an architecture that has Thumb (ARMv7+) selecting the region of interest and pressing CTRL+R will bring up the Set Register Value editor, and selecting TMode and setting value 1.\n\nIf you have the Edit -> Tool Options -> Options | Listing Fields | Register Field | Display Hidden Registers set, you will have annotations like \n\n```\nassume TMode = 0x1\n\n```\nin your listings\n\n",
      "votes": "6",
      "user": "Simeon Pilgrim",
      "time": "Apr 20, 2019 at 5:30",
      "is_accepted": true,
      "comments": [
        {
          "user": "genghiskhan",
          "text": "Do you know how to do this from a script? The currentProgram object has a getRegister method to but no setRegister.",
          "time": null
        },
        {
          "user": "jmcarter9t",
          "text": "Good reference for which ARM architectures support Thumb: infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.kui0100a/â€¦",
          "time": null
        }
      ]
    }
  ]
}