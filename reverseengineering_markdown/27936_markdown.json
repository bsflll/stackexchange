{
  "title": "How to disassemble an obfuscated .NET DLL?",
  "link": "https://reverseengineering.stackexchange.com/questions/27936/how-to-disassemble-an-obfuscated-net-dll",
  "content": "I asked earlier about unpacking a packed .NET exe. But now I need to see the source code for an obfuscated DLL:\n\n\n\nAny idea how to unpack it?\n\n",
  "votes": "0",
  "answers": 0,
  "views": "3k",
  "tags": [
    "disassembly",
    "dll",
    "obfuscation",
    ".net",
    "packers"
  ],
  "user": "c00000fd",
  "time": "Jul 2, 2021 at 23:14",
  "comments": [
    {
      "user": "SSpoke",
      "text": "did you try github.com/de4dot/de4dot",
      "time": null
    },
    {
      "user": "c00000fd",
      "text": "@SSpoke thanks. Tried it. But unfortunately it gave me Detected Unknown Obfuscator and what it created didn't help much.",
      "time": null
    },
    {
      "user": "SSpoke",
      "text": "well thats the best tool on the market, your last bet is to use (Detect It Easy) github.com/horsicq/Detect-It-Easy to figure out which obfuscator it is (if you are lucky idk if it works for .NET programs that well) then use this link: github.com/NotPrab/.NET-Deobfuscator together with DIE to narrow it down. On DIE (Try the Nauz File detector) if the default one doesn't find it (for more luck). If DIE doesn't have Nauz try download the stand alone here : github.com/horsicq/Nauz-File-Detector",
      "time": null
    },
    {
      "user": "c00000fd",
      "text": "@SSpoke yeah, it tells me its Eazfuscator",
      "time": null
    },
    {
      "user": "SSpoke",
      "text": "cool I'm pretty sure you already got it done, but ya there is 2 options for that EazFixer / eazdevirt (to run both tools you need to use de4dot first)",
      "time": null
    }
  ],
  "answers_data": []
}