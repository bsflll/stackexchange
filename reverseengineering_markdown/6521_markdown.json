{
  "title": "Is it possible to force IDA to acknowledge unusual frame pointer deltas?",
  "link": "https://reverseengineering.stackexchange.com/questions/6521/is-it-possible-to-force-ida-to-acknowledge-unusual-frame-pointer-deltas",
  "content": "I keep coming across a compiling pattern that IDA doesn't automatically handle well.  Consider the following example:\n\n```\nmov rax, rsp       ; Set rax at the start of the function\n...\nlea rbp, [rax-5Fh] ; Shortly afterward, set rbp as the frame pointer at a nonstandard offset\n...\nmov [rbp+3Fh], rcx ; Reference all stack offsets from rbp for the rest of the function\n...\n\n```\nIn this example, it appears that IDA has lost track of rbp's state as an offset into the stack frame, presumably because of the additional indirection.  (We copy from rsp to rax to rbp, rather than just from rsp to rbp)\n\nI would like the above example to look something more like this:\n\n```\nvar_20= qword ptr -20h\n...\nmov [rbp+5Fh+var_20], rcx\n\n```\nHowever, as one would expect, if I change the type of 3Fh to be a stack offset, I get the following:\n\n```\narg_37= qword ptr 3Fh\n...\nmov [rbp+arg_37], rcx\n\n```\nWhich is obviously not correct.  I have two questions:\n\nSolutions I am aware of:\n\nAlso relevant: I'm using IDA Pro 6.2.\n\n",
  "votes": "7",
  "answers": 1,
  "views": "4k",
  "tags": [
    "ida"
  ],
  "user": "user1354557",
  "time": "Oct 22, 2014 at 18:31",
  "comments": [
    {
      "user": "QAZ",
      "text": "any chance you can share/link to the binary sample, would like to check this out myself :)",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Alt+P will bring up the Edit function screen.\n\nMake sure BP based frame is checked, and enter your value 0x5F into the box marked Frame pointer delta.\n\n",
      "votes": "4",
      "user": "heinrich5991",
      "time": "Oct 26, 2014 at 12:49",
      "is_accepted": true,
      "comments": [
        {
          "user": "user1354557",
          "text": "That did it, thank you!  Positive 0x5F is the correct delta.",
          "time": null
        }
      ]
    }
  ]
}