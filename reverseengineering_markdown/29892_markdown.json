{
  "title": "How do I gain access to files that an Android app stores in its persistent internal storage directory?",
  "link": "https://reverseengineering.stackexchange.com/questions/29892/how-do-i-gain-access-to-files-that-an-android-app-stores-in-its-persistent-inter",
  "content": "I was playing a game that had hidden achievements and wanted to find the conditions necessary to unlock these achievements. To do this, I've tried to get the source code of the game, to find the achievement trigger. The PC version of the game seems to have been written in C++, making the decompiled code near unreadable. So, I got the APK for the android version of the game, and managed to convert the classes.dex file into a jar, which I have now decompiled into readable code. The problem is, there was no code for the classes I was looking for. I don't think any of the code I've seen even relates to the sort of game features I want, having more to do with file and asset management than player control, stat records, NPC behavior, or events. I asked a question about this on a different Stack Exchange site, but have since done a bit more research. It seems that, when the APK is installed onto a device, it requires an internet connection, in order to download all of the other files necessary for the game to run. Is there a way I can gain access to these files? I'm pretty sure that they are in the persistent internal storage directory for this app.\n\n",
  "votes": "0",
  "answers": 1,
  "views": "689",
  "tags": [
    "android",
    "apk",
    "game-hacking"
  ],
  "user": "Michael",
  "time": "Jan 19, 2022 at 1:48",
  "comments": [],
  "answers_data": [
    {
      "content": "Best way to access app internal (persistent) storage directory is a rooted device. Once you have root permissions you can access the app internal directory which is located in /data/data/<app packagename>\n\nOn an unrooted device you don not have direct access to the app internal (persistent) storage directory.\n\nIf the app allows backup (most apps do not) via adb backup <packagename> then you can get indirect access to the app internal storage directory.\n\nNote that Google has limited adb backup on Android 12+: It only works for apps that have a targetSdkVersion of less than 31. App data of app that have targetSdkVersion 31+ are excluded from backup, the backup will stay empty for such apps.\n\n",
      "votes": "1",
      "user": "Robert",
      "time": "Feb 9, 2024 at 12:21",
      "is_accepted": false,
      "comments": [
        {
          "user": "Michael",
          "text": "Thank you for the help. I tried doing as you suggested, and the resulting app data on the extracted tar file did not have all of the data that I wanted. To put this into perspective, the app on my phone takes up more than 800 MB of space. The data for the app stored within the extracted tar file take up less than 60 MB of space. Will I just have to root the device? And is it possible to do the rooting on some sort of emulated device, in order to get the files I want?",
          "time": null
        },
        {
          "user": "Michael",
          "text": "Okay, so I got a rooted emulator with the app on it, and managed to dig through the files  until I found a .OBB file that had everything I wanted in it. That was pretty good, but the thing is filled with generic garbled file and resource data. My plan is to take these files tomorrow and find some way to decompile, or decrypt, or whatever, them into something useful. How I'm going to do that is pretty hazy, so if anyone sees this and has suggestions, I'm open.",
          "time": null
        },
        {
          "user": "Robert",
          "text": "@Micheal Your question was only about the data files crated by the app. OBB files are AFAIK not downloaded/created by the app but from Google Play Store/Play Services. If you just want the app code it is usually easier to check web sites like apkpure.com or apkmirror.com - often they have the complete app package available for download.",
          "time": null
        }
      ]
    }
  ]
}