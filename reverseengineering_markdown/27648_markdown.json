{
  "title": "Can the return value of this function be determined with static analysis?",
  "link": "https://reverseengineering.stackexchange.com/questions/27648/can-the-return-value-of-this-function-be-determined-with-static-analysis",
  "content": "I have an assignment and I tried solving it. However I can't seem to solve it, despite double checking everything and investing multiple hours.\n\nMy task is to reverse engineer the following functions to high-level C-code and determine the return value of f(1,2,3).\n\nGiven Task:\n\n\nThis is my approach:\n\n\n\nThe problem:\n\nf(1,2,3) can not be determined, because line 6 in function f results in a jump to loc_56C, where g(2,3) is called. In line 14 push dword ptr [ebp+0Ch] is used, however only 2 parameter are supplied for function g at line 16 (8 Byte), meaning we do not know what lies on that memory location (12 Byte above base pointer). As a result, the return value can not be determined.\n\nIs it true, that f(1,2,3) can not be determined?\n\n",
  "votes": "3",
  "answers": 1,
  "views": "221",
  "tags": [
    "assembly"
  ],
  "user": "Fluctuation23",
  "time": "Jul 19, 2022 at 2:04",
  "comments": [
    {
      "user": "Paweł Łukasik",
      "text": "call puts something on the stack too...",
      "time": null
    },
    {
      "user": "blabb",
      "text": "maybe think like what will ebp+8 be when f is called  like f(1,2,3)  and on what condition g() would be called ? or may be cheat for the sake of learning put this in an assembly file assemble and singlestep :)",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The control flow of the above program goes in following order main -> f -> g -> f -> main\n\nmain calls f with 1,2,3.\n\nstack----\n3\n2\n1\nret\nebp\n\nNotice the push instructions and calling convention. function f checks whether 1 == 0 (ebp - 8). The answer is no. So, it calls function g. This is the major hint for you. I am sure you will be able to figure rest of it :-)\n\n",
      "votes": "3",
      "user": "Viktor",
      "time": "Jul 19, 2022 at 2:03",
      "is_accepted": false,
      "comments": []
    }
  ]
}