{
  "title": "Is it possible to get a list of user-defined names in IDA?",
  "link": "https://reverseengineering.stackexchange.com/questions/13846/is-it-possible-to-get-a-list-of-user-defined-names-in-ida",
  "content": "IDA allows one to rename a program entity (e.g. register, variable, function) using N shortcut. Is it possible to get a list of such user-defined names in IDA?\n\n",
  "votes": "4",
  "answers": 3,
  "views": "6k",
  "tags": [
    "ida",
    "idapython",
    "python"
  ],
  "user": "sherlock",
  "time": "Nov 12, 2016 at 17:18",
  "comments": [
    {
      "user": "w s",
      "text": "Do you mean hex-rays variables by \"variables\" ? If yes, this script dumps almost all user defined things in specific decompiler function: github.com/idapython/src/blob/master/examples/vds4.py",
      "time": null
    },
    {
      "user": "w s",
      "text": "In addition idautils.Names() can be used to retrieve the named global entities.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The idautils.Names function might be of interest to you, as it returns a list of (ea, name) tuples for all names defined in the IDB and the ea at which they're located.\n\nAdditionally, you can use the answer to the question Igor linked (Get a list of global variables with IDA python) to get a list of all functions.\n\nOnce you have the eas you can do the following to figure out if a function or ea was named by the user:\n\n```\ndef is_user_name(ea):\n  f = idc.GetFlags(ea)\n  return idc.hasUserName(f)\n\n```\nThis function will return true if an EA has a name set by the user either programatically or manually.\n\n",
      "votes": "6",
      "user": "NirIzr",
      "time": "Sep 24, 2017 at 3:33",
      "is_accepted": false,
      "comments": [
        {
          "user": "Willi Ballenthin",
          "text": "I think the Names utility function is available under idautils, not idc.",
          "time": null
        },
        {
          "user": "Willi Ballenthin",
          "text": "the API name is idc.GetNames, not idc.getNames. I can't make the edit because its less than six chars difference.",
          "time": null
        },
        {
          "user": "NirIzr",
          "text": "@WilliBallenthin Couldn't find a reference to idc.getnames anywhere in my comment. Let me know and I'll edit.",
          "time": null
        },
        {
          "user": "Willi Ballenthin",
          "text": "whoops, i'm sorry! I meant idc.GetFlags().",
          "time": null
        },
        {
          "user": "dkaranovich",
          "text": "is_user_name seems to return True even for library names that were generated during analysis.",
          "time": null
        }
      ]
    },
    {
      "content": "You can use View->Open subview->Names or Shift-F4. Note that the list included all names, both user-defined as well as generated by IDA (e.g. ASCII string names).\n\nSee also related Get a list of global variables with IDA python\n\n",
      "votes": "3",
      "user": "Community",
      "time": "Apr 13, 2017 at 12:49",
      "is_accepted": false,
      "comments": [
        {
          "user": "sherlock",
          "text": "Is it possible to list out user-defined names only, not IDA generated ones?",
          "time": null
        }
      ]
    },
    {
      "content": "Run this .idc script to export all user-defined functions name. Script tested on IDA 7.0.\n\nFor IDA < 7.0: please use function hasUserName(addr) instead of has_user_name(addr)\n\n```\n#include <idc.idc>\nstatic FuncDump(start)\n{\n    auto ea, str, count, ref;\n    auto end;\n    auto teststr;\n\n    ea = start;\n\n    while( ea != BADADDR )\n    {\n        str = GetFunctionName(ea);\n        if( str != 0 )\n        {\n            end = FindFuncEnd(ea);\n\n            count = 0;\n            ref = RfirstB(ea);\n            while(ref != BADADDR)\n            {\n                count = count + 1;\n                ref = RnextB(ea, ref);\n            }\n\n            teststr = sprintf(\"sub_%X\", ea);\n            if(has_user_name(GetFlags(ea)) && !((GetFunctionFlags(ea) & FUNC_LIB) == FUNC_LIB) && teststr != str ) {\n                Message(\"-s 0x%X=%s  \n\", ea, str );\n            }\n            //Message(\"%s, 0x%d, 0x%x, 0x%x, 0x%x, %d  \n\", str, count, ea, end, end-ea, end-ea   );\n        }\n\n        ea = NextFunction(ea);\n    }\n}\n\nstatic main() \n{\n    Message(\"FuncDump: Start  \n\");\n\n    FuncDump(0x40000);\n\n    Message(\"FuncDump: Done  \n\");\n}\n\n```\n",
      "votes": "1",
      "user": "Tráº§n Leo",
      "time": "Feb 26, 2020 at 19:25",
      "is_accepted": false,
      "comments": []
    }
  ]
}