{
  "title": "Assembly output too complicated",
  "link": "https://reverseengineering.stackexchange.com/questions/16949/assembly-output-too-complicated",
  "content": "This is a probably a very basic question, please bear with me.\n\nI'm starting to get into reverse engineering following this pdf I found online: https://beginners.re/\nI am, however, stuck at the very basic steps.\n\nThe relevant part from the PDF: \n\nWhen I try to compile my c++ code (which is the same as in the book) with the following command:\n\n```\ngcc main.cpp -S -O\n\n```\nThis is the output I get:\n\n2\n\nWhich, as you can see, is very different, and a lot more complicated than the supposed output written in the pdf. I'm unsure what I'm doing wrong, could anyone help me?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "179",
  "tags": [
    "assembly"
  ],
  "user": "Bobobot",
  "time": "Dec 9, 2017 at 19:06",
  "comments": [],
  "answers_data": [
    {
      "content": "Both outputs show the same effective assembly code.  In both outputs, there is only a single instruction:\n\n```\nret\n\n```\nThe second example output is a variation of ret the reason for which is listed in this answer on Stackoverflow.\n\nThe more complicated output has several code organizational assembler directives.  These directives are not instructions.\n\n",
      "votes": "0",
      "user": "RubberStamp",
      "time": "Dec 9, 2017 at 19:37",
      "is_accepted": true,
      "comments": [
        {
          "user": "Bobobot",
          "text": "Thank you! So if I understand correctly, assembler directives are to assembly what preprocessor directives are to C?  Also, is there a way to generate a simplified output file similar to the one in the pdf (function names remaining, directives removed etc.), or did the author presumably manually clean up the codes himself?",
          "time": null
        },
        {
          "user": "Vladislav Ivanov",
          "text": "The author probably cleaned up it himself. You can also use godbolt.org to quickly view disassembly for a given code",
          "time": null
        }
      ]
    }
  ]
}