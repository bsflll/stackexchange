{
  "title": "How to do i fix it when IDA pro mislabels values as loc_",
  "link": "https://reverseengineering.stackexchange.com/questions/18274/how-to-do-i-fix-it-when-ida-pro-mislabels-values-as-loc",
  "content": "Some times the psuedo code generated by IDA is baffling\n\n```\nv8 = (signed int)&loc_100010; //ida\nv8 = 0x100010; //actual code\n\n```\nThis is not so bad when it is just one value but sometimes the offset for member variables are also distorted this way\n\n```\nv2 = a1 + (_DWORD)&loc_2043B90 - 33831600); //ida\nv2 = a1 + 224; //actual offset\n\n```\nThis makes for horrible readability and it is even worse for arrays. Is there a way to fix this?\n\nThis happens a lot with floating point numbers\n\n```\nv63 = **(float **)((char *)&loc_15D9503 + 33831601)\n\n```\nI should add this is a MACH-O x86 binary (if that matters)\n\n",
  "votes": "2",
  "answers": 1,
  "views": "2k",
  "tags": [
    "ida",
    "decompilation"
  ],
  "user": "Sinister Mephisto",
  "time": "May 15, 2018 at 17:47",
  "comments": [],
  "answers_data": [
    {
      "content": "Names with loc_ prefix are generated in case IDA thinks that it's code at that address. So now IDA thinks that theres' code at 2043B90 and at 100010.\n\nYou should go to 2043B90 (in the disassembly view), undefine the code piece which IDA create and create a data structure there, then specify the type information (Y key) that it's an array like \"int myarray[300]\". This is just an example, you need to determine the type of the data yourself.\n\nAs for loc_100010, you should also go to the address 100010 undefine the code there and create a string, if you think that there's a literal. \n\nThen press F5 in you function again to renew the decompiler output.\n\np.s. IDA might want to keep the loc_ names even after you undefine the code piece, so you'll need to delete this loc_ name in order to make IDA generate the new one.\n\n",
      "votes": "1",
      "user": "Anton Kukoba",
      "time": "May 22, 2018 at 8:11",
      "is_accepted": true,
      "comments": [
        {
          "user": "Sinister Mephisto",
          "text": "But it is a literal value and not a data structure. An integer not an array of ints",
          "time": null
        },
        {
          "user": "Sinister Mephisto",
          "text": "I tried it and got  v8 = (signed int)&loc_1048592D;",
          "time": null
        },
        {
          "user": "Anton Kukoba",
          "text": "I've update the answer, I hope it helps.",
          "time": null
        },
        {
          "user": "Sinister Mephisto",
          "text": "Thanks for the reply/update. When i undefined the code it simply replace loc_xxxx with unk_xxxx",
          "time": null
        },
        {
          "user": "Ray",
          "text": "It seems like you can't unless you fix all occurrences of the loc_ with literals.",
          "time": null
        }
      ]
    }
  ]
}