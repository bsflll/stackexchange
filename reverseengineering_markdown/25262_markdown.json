{
  "title": "Displaying Operands as Position Independent in IDA",
  "link": "https://reverseengineering.stackexchange.com/questions/25262/displaying-operands-as-position-independent-in-ida",
  "content": "I'm writing an IDA python script, and i need to be able to detect position independent code. I have an instruction that IDA displays using the operand name 'format'\n\n```\nlea     rdi, format\n\n```\nHowever, when i use capstone disassembler or disassember.io it displays the instruction as \n\n```\nlea     rdi, [rip + 0xd5a]\n\n```\nIs there an ida python function that will return the instruction in the form of the register + the immediate offset instead of the relative value or operand name?\n\nI tried using idc.get_operand_value but it returns the full address, not the register + offset.\n\nI've also tried idc.GetDisasm but that just returns the instruction as it's displayed in IDA.\n\nThe hexbytes for the instruction are 48 8d 3d 5a 0d 00 00\n\nArchitecture is i386 x86-64\n\n",
  "votes": "1",
  "answers": 1,
  "views": "211",
  "tags": [
    "ida",
    "x86",
    "x86-64",
    "offset",
    "pic"
  ],
  "user": "Brightflame",
  "time": "Jun 10, 2020 at 10:15",
  "comments": [],
  "answers_data": [
    {
      "content": "Options-General-Analysis-Processor specific options, [x] Explicit RIP-addressing.\n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Jun 10, 2020 at 13:14",
      "is_accepted": true,
      "comments": []
    }
  ]
}