{
  "title": "Anti reverse engineering tools that are easy to set up",
  "link": "https://reverseengineering.stackexchange.com/questions/10772/anti-reverse-engineering-tools-that-are-easy-to-set-up",
  "content": "I will be distributing a c++ application, and I was wondering if there was any tools available to add an extra layer of security against reverse engineering. I'm looking for a quick fix because I don't want to spend a year learning RE, I just want to focus on my application. Should I be looking at anti debuggers, packers, or what? Is there any convenient libraries to use?\n\nI understand that nothing can stop reverse engineering, I just would like to make it more difficult if possible.\n\nIs there anything that is free or open source?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "2k",
  "tags": [
    "c++",
    "binary",
    "protection"
  ],
  "user": "Thomas",
  "time": "Sep 2, 2015 at 0:35",
  "comments": [
    {
      "user": "Brennan Vincent",
      "text": "\"Hello, I am not interested in learning the hobby that this forum is for, but I'd like you to tell me how to make this hobby more difficult or impossible. Thanks.\"",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Since you don't want to learn RE, there are some free/opensource and paid tools. \n\nFor the first you probably should look in the answers here. \n\nIf you feel like spending money you can find some relatively stronger packers like:\nVMProtect or themida.\n\nGood luck!\n\n",
      "votes": "1",
      "user": "GelosSnake",
      "time": "Sep 2, 2015 at 5:07",
      "is_accepted": true,
      "comments": [
        {
          "user": "Denis Laskov",
          "text": "Yes, open-source\\free packers and cryptors is your way. But please note, that  for most of them there is an automatic unpackers or extractors, both open-source and proprietary ones.",
          "time": null
        },
        {
          "user": "Paul",
          "text": "Open source is more subjective to been compromised since anyone can look at the code and reverse it.",
          "time": null
        },
        {
          "user": "Denis Laskov",
          "text": "Paul, as well as look and  alter or improve :) So I doubt Open Source products in general are more vulnerable, there are pros and contras for each model.",
          "time": null
        },
        {
          "user": "Thomas",
          "text": "the ones in the linked thread don't work except maybe the delphi ones but i have no experience with delphi or compiling for delphi and I gave up trying to compile those sources",
          "time": null
        }
      ]
    }
  ]
}