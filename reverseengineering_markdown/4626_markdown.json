{
  "title": "Which condition has to be met to execute this if branch",
  "link": "https://reverseengineering.stackexchange.com/questions/4626/which-condition-has-to-be-met-to-execute-this-if-branch",
  "content": "Right now I am playing around with a little training application I found on OpenSecurityTraining. \n\nSo, I analyzed this code and I think I understand this pretty well. The only thing I don't get is the cmp and je at lines 0x004010e3 and 0x004010e7 which seem to be some if conditions. But, I cannot figure out which condition should be met to take the jump instruction. \n\nMy workaround was to manipulate eip when the cmp line was executed. But, my question is what condition has to be set to take the je instruction ? \n\n```\n004010e0 55              push    ebp\n004010e1 8bec            mov     ebp,esp\n004010e3 837d0803        cmp     dword ptr [ebp+8],3\n004010e7 7412            je      mystery!main+0x1b (004010fb)\n004010e9 6834404200      push    offset mystery!__rtc_tzz <PERF> (mystery+0x24034) (00424034)\n004010ee e81c040000      call    mystery!printf (0040150f)\n004010f3 83c404          add     esp,4\n004010f6 83c8ff          or      eax,0FFFFFFFFh\n004010f9 eb0b            jmp     mystery!main+0x26 (00401106)\n004010fb e80affffff      call    mystery!mystery_function+0xffffffff`ffffffea (0040100a)\n00401100 eb02            jmp     mystery!main+0x24 (00401104)\n00401102 eb02            jmp     mystery!main+0x26 (00401106)\n00401104 33c0            xor     eax,eax\n00401106 5d              pop     ebp\n00401107 c3              ret\n\n```\n",
  "votes": "1",
  "answers": 2,
  "views": "315",
  "tags": [
    "disassembly",
    "assembly",
    "debuggers",
    "windbg"
  ],
  "user": "Dirk",
  "time": "Jun 17, 2014 at 13:37",
  "comments": [],
  "answers_data": [
    {
      "content": "Extended Base Pointer, as the name suggests, is usually used as a frame pointer. That, among other things, means that it's used to access function parameters and local variables. If you think about how stack works, you can conclude the following:\n\nThat being said, ebp+8 is usually the first function argument. The compare instruction in this case compares the value of the first function parameter to 3. If those are equal (je instruction is jump if equal) the conditional jump will be executed. \n\n",
      "votes": "5",
      "user": "0xea",
      "time": "Jun 17, 2014 at 11:27",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "dword ptr [val] is exactly, what it says: A 32bit pointer to value. As to how cmp, je and all the other instructions work, I recommend the reading of the Intel Manual.\n\n",
      "votes": "3",
      "user": "perror",
      "time": "Jun 17, 2014 at 11:50",
      "is_accepted": false,
      "comments": []
    }
  ]
}