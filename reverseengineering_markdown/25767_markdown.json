{
  "title": "How does Andriod .so files Reverse Engineering with a dissasembler like IDA pro and Cutter work",
  "link": "https://reverseengineering.stackexchange.com/questions/25767/how-does-andriod-so-files-reverse-engineering-with-a-dissasembler-like-ida-pro",
  "content": "So few days ago going through youtube Reverse Engineering videos, i came across a particular video where an android application was modified using IDA pro by disassembling it's .so file found in /lib directory in every android app.\n\nThis is the link to the video\nhttps://m.youtube.com/watch?v=m-t-jFBy7FE\n\nI was further curious as i have never seen anyone modify an android App from the .so file usually when we talk of reversing android apps we use tools like Apktool, Dex2jar, jd-gui and so on.\n\nWhat kind of Reverse Engineering is this and what exactly is going on???\n\nSomeone please shed some light on this topic. i've been confused for days.\n\n",
  "votes": "1",
  "answers": 0,
  "views": "963",
  "tags": [
    "ida",
    "apk"
  ],
  "user": "0xBones",
  "time": "Aug 29, 2020 at 7:18",
  "comments": [
    {
      "user": "hanan",
      "text": "please note that .so files is a shared objects. usually it is a binary from cpp. in some apps use it to hide their core functionality.",
      "time": null
    },
    {
      "user": "Robert",
      "text": "A related question: reverseengineering.stackexchange.com/questions/4624/â€¦",
      "time": null
    }
  ],
  "answers_data": []
}