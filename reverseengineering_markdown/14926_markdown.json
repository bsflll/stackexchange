{
  "title": "Access violation when reading [OLLYDEBUG]",
  "link": "https://reverseengineering.stackexchange.com/questions/14926/access-violation-when-reading-ollydebug",
  "content": "Any time I try to crack a program I get this error in olly:\n\n\n\nWhat causes this error? How can I fix this?\nIf anyone has suggestion or advice that would be great. I already tried pressing F9 but that doesn't help\n\n",
  "votes": "2",
  "answers": 1,
  "views": "8k",
  "tags": [
    "ollydbg",
    "debugging",
    "debuggers",
    "exception"
  ],
  "user": "cupid67",
  "time": "Mar 17, 2017 at 13:38",
  "comments": [
    {
      "user": "Nordwald",
      "text": "Did you try passing the exception to the programm? e.g. Shift+ [F7], [F8], [F9]. The debugger is the first to be able to handle exceptions.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "TL;DR: Without understanding what's causing the access violation, it is hard to tell how best to address it. You will need to investigate the exception handler and the cause first.\n\nThis status line means an Access Violation exception occurred and ollydbg caught that exception. It is not necessarily an error and could be part of normal behavior of the program. It is now up to you to decide how olly should handle that exception, but first lets discuss what can cause this exception.\n\nTechnically, this exception means the program tried accessing an invalid address. It could be that the address is not allocated or that the CPU tried executing code at an address whose permissions prevent execution, write to an address that can't be written to, etc.  Generally, an access violation exception occurs when an attempt to access an address failed for one reason or another.\n\nNow that we answered what is an access violation exception, let's discuss why it happens. An access violation usually happens when a bug is encountered, due to a programming error that made the CPU execute the wrong instructions or using the wrong data. However, security developers often use tricks related to access violation exceptions for their advantage, complicating the reverse engineering process or making the program harder to debug and modify.\n\nExamples of the more common tricks include:\n\nDepending on why the exception was triggered, what is the exception handler code and what surrounds the exception triggering code, the way to handle that exception differs.\n\nFor example:\n\n",
      "votes": "3",
      "user": "NirIzr",
      "time": "Mar 17, 2017 at 14:26",
      "is_accepted": false,
      "comments": []
    }
  ]
}