{
  "title": "OllyDbg: Constant does not fit into operand",
  "link": "https://reverseengineering.stackexchange.com/questions/22565/ollydbg-constant-does-not-fit-into-operand",
  "content": "I'm trying to assemble this instruction:\n\n\n\nI'm not being able to do it..\n\nWhen I test with MOV AX,55000 I get this error:\n\n\n\nI tested before in Cheat Engine, and this is working as AOB injection: MOV AX,#55000\n\nSo if I test with the same syntax, ollydbg can't recognize it:\n\n\n\nI don't know how to assemble that instruction correctly:\n\nMOV AX,55000 instead of MOV AX,WORD PTR DS:[EBX+A4]\n\nIn Cheat Engine it's working perfectly.\n\n",
  "votes": "0",
  "answers": 1,
  "views": "81",
  "tags": [
    "assembly",
    "ollydbg"
  ],
  "user": "kuhi",
  "time": "Jun 17, 2020 at 9:54",
  "comments": [],
  "answers_data": [
    {
      "content": "OllyDbg is interpreting numbers as hex by default. But 0x55000 is larger than 0xFFFF so it cannot be stored in a 16bit register, which ax is, hence it complains.\n\nIf you meant the decimal number 55000, I think you can enter it as \"55000.\" with the trailing dot. If that doesn't work enter the number as hex:\n\n```\nmov ax, 0D6D8\n\n```\nThe leading 0 is necessary otherwise the first character would be a letter and OllyDbg would not recognize it as a number.\n\n",
      "votes": "1",
      "user": "Johann Aydinbas",
      "time": "Nov 18, 2019 at 3:02",
      "is_accepted": true,
      "comments": [
        {
          "user": "kuhi",
          "text": "thank you :) both options worked",
          "time": null
        }
      ]
    }
  ]
}