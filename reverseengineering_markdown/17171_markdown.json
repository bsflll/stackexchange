{
  "title": "Is it possible to correctly disassemble STL inlines?",
  "link": "https://reverseengineering.stackexchange.com/questions/17171/is-it-possible-to-correctly-disassemble-stl-inlines",
  "content": "Is it possible to correctly disassemble STL inlines with IDA? STL inlines are not detected by FLAIR just because they are inline not functions. For example how can I know that the code I see disassembled was in the original source\n\n```\n  std::set<int> myset;\n  myset.insert(10);\n\n```\nbut not\n\n```\n  std::vector<short> myvector;\n  myvector.push_back(10);\n\n```\nIs it possible somehow to know what the code exactly means when it was originally born?\n\n",
  "votes": "1",
  "answers": 0,
  "views": "255",
  "tags": [
    "ida",
    "decompilation",
    "c++"
  ],
  "user": "amahalaj",
  "time": "Jan 11, 2018 at 7:53",
  "comments": [],
  "answers_data": []
}