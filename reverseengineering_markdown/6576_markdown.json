{
  "title": "Unknown compression (Decompression reversed)",
  "link": "https://reverseengineering.stackexchange.com/questions/6576/unknown-compression-decompression-reversed",
  "content": "I've reversed a decompression routine, but have to figure out the compression.\n\nBecause the executable only decrypts and therefor has no compression routine and I'm not comfortable with compressions it's really hard for me.\n\nHere the code I've written in C#:\n\n```\nprivate unsafe void Decompress(byte[] decom, byte[] com, int comSize) {\n        byte[] dict = new byte[4096];\n        fixed (byte* pDict = dict, p1 = decom, p2 = com) {\n            byte* pDecom = p1, pCom = p2;\n\n            byte next;\n            int r6 = 0, r7 = 0xfee, r10, r9;\n\n            while (true) {\n                r6 >>= 1;\n\n                if ((r6 & 0x100) == 0) {\n                    if (comSize-- == 0)\n                        return;\n\n                    r6 = 0xFF00 | *(pCom++);\n                }\n\n                if ((r6 & 1) == 1) {\n                    if (comSize-- == 0)\n                        return;\n\n                    next = *(pCom++);\n                    *(pDecom++) = next;\n                    *(pDict + r7) = next;\n                    r7 = (r7 + 1) & 0xFFF;\n                } else {\n                    if ((comSize -= 2) <= 0)\n                        return;\n\n                    r10 = (*(pCom++) << 8) | *(pCom++);\n\n                    r9 = r10 >> 4;\n                    r10 = (r10 & 0xF) + 2;\n\n                    for (int i = r10 + 1; i > 0; --i) {\n                        r10 = r9++ & 0xFFF;\n                        next = *(pDict + r10);\n                        *(pDecom++) = next;\n                        *(pDict + r7) = next;\n                        r7 = (r7 + 1) & 0xfff;\n                    }\n                }\n            }\n        }\n    }\n\n```\nIt would be nice if someone could identify or post a link to code for the compression.\nAny help is appreciated.\n\n",
  "votes": "2",
  "answers": 1,
  "views": "456",
  "tags": [
    "decompress"
  ],
  "user": "user9926",
  "time": "Nov 3, 2014 at 18:55",
  "comments": [],
  "answers_data": [
    {
      "content": "Based on this post, that appears to be an LZ77 variant.\n\n",
      "votes": "3",
      "user": "Jason Geffner",
      "time": "Nov 3, 2014 at 19:55",
      "is_accepted": true,
      "comments": []
    }
  ]
}