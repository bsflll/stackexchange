{
  "title": "parse PE section variables",
  "link": "https://reverseengineering.stackexchange.com/questions/6797/parse-pe-section-variables",
  "content": "I have extracted the .rdata section from a windows executable. I would like to parse the variables contained in the section into a easily understandable format, such as:\n\n```\nchar s[] = \"hello world\"\nint i = 0\n\n```\nThere does not appear, however, to be data types associated with the variables, so simply encoding the variable data in hexadecimal might be more realistic.\n\nIs the data stored in the .rdata section in an easily parsable format? If so, what would that be?\n\n",
  "votes": "1",
  "answers": 2,
  "views": "459",
  "tags": [
    "pe"
  ],
  "user": null,
  "time": "Dec 10, 2014 at 0:33",
  "comments": [],
  "answers_data": [
    {
      "content": "No, the data is not easily parsable.\n\nThe best option is to use a disassembler (such as IDA Pro) that can create cross-references from code to data in your .rdata section. This can help you better identify strings, bytes, words, and dwords in the .rdata section:\n\n\n\n",
      "votes": "3",
      "user": "Jason Geffner",
      "time": "Dec 10, 2014 at 0:59",
      "is_accepted": false,
      "comments": [
        {
          "user": "user4446",
          "text": "What if the source code is not available? That is my situation.",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "My answer above already assumes that the source code is not available. The screenshot is that of an .rdata section with cross-references to disassembled code.",
          "time": null
        }
      ]
    },
    {
      "content": "After compiling to a release build with many compilers no debug or symbolic information about the function name or variable names is left in the native binaries, so the data section u have dumped only contains the variable values at different positions, manually its not easy to find variables, so use a debugger or disassembler which will ease the work for you, it will let you see different variables categorized and identified according to their alignment and size.\n\n",
      "votes": "0",
      "user": "Alok Saini",
      "time": "Dec 12, 2014 at 11:07",
      "is_accepted": false,
      "comments": [
        {
          "user": "user4446",
          "text": "Thank you for your answer. Is there any debugger/disassembler that you would recommend?",
          "time": null
        },
        {
          "user": "Alok Saini",
          "text": "Ida olly are the best",
          "time": null
        }
      ]
    }
  ]
}