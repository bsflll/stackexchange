{
  "title": "How to get Packet Structures",
  "link": "https://reverseengineering.stackexchange.com/questions/14190/how-to-get-packet-structures",
  "content": "I'm trying to reverse engineer a game with the goal of creating an emulator.\n\nI want to know how to get the structure of a network packet of a game whether it is client or server.\nExample (Random) Client -> Server: XX XX XX XX XX XX XX XX XX XX XX XX XX \n\nStructure: uint16: 10 - byte: 3 - int16: 300 \n\nI just want to know how to get the type of each byte is.\n\nI already gathered a few packet structures from publically available repos.\nI want to know how everyone does this? Is there a tool out there that helps with getting structures?\n\n",
  "votes": "-3",
  "answers": 1,
  "views": "661",
  "tags": [
    "packet",
    "struct"
  ],
  "user": "Questone",
  "time": "Jan 15, 2017 at 19:00",
  "comments": [
    {
      "user": "Jongware",
      "text": "What are these \"packet structures\"? Network, in-game data?",
      "time": null
    },
    {
      "user": "Igor Skochinsky",
      "text": "Please use the edit link next time, don't post an \"answer\" with missing info",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "There is no automated way (as far as I know) for that. The most common approach is examining sender and receiver processes and their communications. Another thing is packet (or frame) doesn't matter if you don't mind about communication protocols. It is operating system's, hardware interface's and drivers' (or modules') business.Your interest is raw data communication that your game uses.\n\n",
      "votes": "3",
      "user": "Kerim Can Kalıpcıoğlu",
      "time": "Mar 3, 2018 at 12:01",
      "is_accepted": false,
      "comments": []
    }
  ]
}