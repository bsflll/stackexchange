{
  "title": "Malware in virtual machines",
  "link": "https://reverseengineering.stackexchange.com/questions/2513/malware-in-virtual-machines",
  "content": "Once I perform static analysis on a malware sample, I next run it in a virtual machine.\n\nI use VMwareW.\n\n",
  "votes": "13",
  "answers": 5,
  "views": "2k",
  "tags": [
    "malware",
    "virtual-machines"
  ],
  "user": "Higet",
  "time": "Jul 22, 2013 at 17:43",
  "comments": [
    {
      "user": "asheeshr",
      "text": "I edited your question to clarify the main point. I also attempted to make it less broad than it was before, otherwise it would have been closed. Have a look at the questions FAQ for more.",
      "time": null
    },
    {
      "user": "PSS",
      "text": "possible duplicate of How can I analyze a potentially harmful binary safely?",
      "time": null
    },
    {
      "user": "perror",
      "text": "Note also that the malware may detect the virtual machine and stop operate as usual. Then, you will need to install it on a real machine (or change your VM).",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The malware can propagate from the VM to the host in several circumstances:\n\nFor more on that topic, read https://security.stackexchange.com/questions/9011/does-a-virtual-machine-stop-malware-from-doing-harm and https://security.stackexchange.com/questions/12546/is-it-safe-to-install-malware-in-a-vm\n\nAll in all, most malware can be analyzed safely in a properly configured virtual machine. Disable all guest features and don't connect to the VM with any protocol that allows the server to influence the client. Firewall the VM as if it was hostile (it is); you should use a host-only network so that you can easily control what goes there.\n\nThere's another reason why you might prefer a physical machine to a virtual machine. There's quite a bit of malware that attempts to detect whether it's being analyzed, and doesn't behave maliciously when it is. Obvious, common things that malware tries to detect is signs that it's running under a debugger: check if it's being ptraced (or the Windows equivalent), check for sudden pauses in the execution, â€¦ And some malware looks for telltale signs of a VM, such as drivers for hardware that common VM software emulates, or CPU oddities that are inexistent or rare outside emulated CPUs. This isn't to say that you cannot analyze malware in a VM: sometimes you can, sometimes you can't, it depends on the malware. If you start in a VM and find nothing you need to be prepared to move to a physical machine.\n\nNote that there are risks with a physical machine too: malware could attempt to plant itself into one of the many pieces of firmware on the motherboard and peripherals. Toolkits for this are beginning to emerge, such as Rakshasa and Mebromi. So if you analyze some sophisticated malware on a physical machine, don't trust this physical machine any more, ever.\n\n",
      "votes": "12",
      "user": "Community",
      "time": "Mar 17, 2017 at 10:46",
      "is_accepted": true,
      "comments": [
        {
          "user": "Quonux",
          "text": ">That's even more unlikely but still not mathematically impossible, it is very real and dangerous, just check out the erretas from intel or AMD, the best bug i found was in a Core2 Series where the memory above 4GB wasn't secured completly",
          "time": null
        }
      ]
    },
    {
      "content": "There were a lot of saying in replays, but I'd like to stress on some answers from the practical point of view:\n\nHope this will help :)\n\n",
      "votes": "5",
      "user": "PhoeniX",
      "time": "Jul 27, 2013 at 7:22",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "if youre using VMWare I suggest using a host only connection. Typically when you create a VM it will use NAT or bridged, sharing the host computers IP and/or network adapter. Using Host-Only lets the VM only be locally connected to that particular adapter with no internet connectivity(It's assigned its own local IP and uses its own Gateway)\n\nTypically when running malware live you want to go with this setup. Your other solutions are using sandboxing software such as cuckoo sandbox or sandboxie. They have the added ability to log what the malware is doing and keeping it sandboxed ( It usually doesnt touch system files or infects the system in any way)\n\n",
      "votes": "4",
      "user": "gandolf",
      "time": "Jul 22, 2013 at 3:09",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "If the VM software has a bug a malware can also spread out of the VM and infect the host computer.\n\nThere is also the possibility that the underlying processor (if you are using hardware virtualization) has a bug which lets the malware escape the VM.\n\nIf you have a network connection it is possible that the malware can spread over the network. So to prevent this you have to choose a setup which may never have a network connection. Even disabling the network in the guest is not enough. The VM has to be setup so that no network connection is possible.\n\nTo prevent the spreading of malware you have to disconnect your testing device (the host) from the network and set it up for every malware newly. Also be aware that malware may use the MBR or the BIOS to nest into your computer.\n\n",
      "votes": "4",
      "user": "Uwe Plonus",
      "time": "Jul 22, 2013 at 6:12",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Use the latest and greatest version of VMWare. Monitor your real system. :)\nWhy? well I've seen malware that 'breaks' out Vmware. How? Ring -1 exploitation. It's not something you'll commonly seen. But it can happen, will it with your sample unlikely but, it might.\n\nSo, monitor your own system (ProcMon). Don't install VMware tools (easier detected by the sample and it might just be dormant). And try a number of VirtualSystems, Qemu, VirtualBox the works. \n\nHave fun :)\n\n",
      "votes": "3",
      "user": "Stolas",
      "time": "Jul 22, 2013 at 6:04",
      "is_accepted": false,
      "comments": []
    }
  ]
}