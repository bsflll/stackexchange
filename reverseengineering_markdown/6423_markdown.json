{
  "title": "LoadLibrary from memory",
  "link": "https://reverseengineering.stackexchange.com/questions/6423/loadlibrary-from-memory",
  "content": "I use http://www.joachim-bauch.de/tutorials/loading-a-dll-from-memory/ to loadlibrary from memory.\nbut when use in my code \"throw\" program crashing.\nWhat's the problem?\n\ncode i use like this:\n\n```\n#include <excpt.h>\n#include <windows.h>\n void func()\n{\n __try{\n  MessageBoxA(0,\"try\",\"try\",0);\n  if (1)\n  {\n   throw 10;\n  }\n }__finally{\n  MessageBoxA(0,\"finally\",\"finally\",0);\n }\n}\nvoid DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved)\n{\n try\n {\n  func();\n }\n catch(int a)\n {\n  MessageBoxA(0,\"catch\",\"catch\",0);\n }\n\n```\nwhen call \"throw 10;\" program crashing.\n\n",
  "votes": "0",
  "answers": 1,
  "views": "3k",
  "tags": [
    "c++",
    "dll",
    "pe"
  ],
  "user": "user2522767",
  "time": "Oct 11, 2014 at 6:55",
  "comments": [],
  "answers_data": [
    {
      "content": "The answer differs on x86 and x64, I'm only going to answer for x86.\n\nThere are various types of exception dispatching mechanisms. Your code uses SEH.\n\nAs SEH was abused in exploits(e.g. MS03-026) Microsoft decided to protect against that with SafeSEH introduced in Server 2003.  \n\nhttp://sota.gen.nz/veh/seh_xp.txt is an annotated decompiled version for XP.\nIt starts in RtlDispatchException(), the function that is of concern in this problem is RtlIsValidHandler().  \n\nFirstly it calls RtlLookupFunctionTable() which looks through the PEB to find the image the handler resides in. MemoryModule does NOT add your library to the PEB lists of loaded modules - so that won't find your DLL.\nBut after returning there is a further check - all handler must reside in memory pages marked as SEC_IMAGE. This value cannot be set by usermode code.\n\nThere are some ways around this: \n\n",
      "votes": "1",
      "user": "user45891",
      "time": "Oct 11, 2014 at 14:39",
      "is_accepted": false,
      "comments": []
    }
  ]
}