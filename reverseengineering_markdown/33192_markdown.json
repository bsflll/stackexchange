{
  "title": "In a Ghidra Loader in Java, how can I set the types of symbols or at addresses?",
  "link": "https://reverseengineering.stackexchange.com/questions/33192/in-a-ghidra-loader-in-java-how-can-i-set-the-types-of-symbols-or-at-addresses",
  "content": "I'm writing a bunch of Ghidra Loaders for retro platforms.\n\nI know how to use SymbolTable createLabel() and addExternalEntryPoint() but sometimes I know the types of certain fields, symbols, or addresses too.\n\nSo far I can't find how to add types from Java. For now I'm only thinking about basic data types like byte, word, dword, if that makes a difference.\n\n",
  "votes": "0",
  "answers": 1,
  "views": "28",
  "tags": [
    "ghidra",
    "symbols"
  ],
  "user": "hippietrail",
  "time": "Sep 2, 2024 at 4:07",
  "comments": [],
  "answers_data": [
    {
      "content": "I managed to figure it out by a combination of guesswork, fumbling around, and searching the Ghidra source on GitHub:\n\nThe term used by Ghidra is DataType and data types are set via the Listing, which you can obtain in your Loader's load() method:\n\n```\nListing listing = program.getListing();\n\n```\nAnd you can then set built-in types like so:\n\n```\nlisting.createData(address, UnsignedShortDataType.dataType);\nlisting.createData(address, PascalStringDataType.dataType);\n\n```\nIf you haven't used addresses before, you typically get them like this:\n\n```\nAddressSpace addressSpace = program.getAddressFactory().getDefaultAddressSpace();\nAddress loadAddress = addressSpace.getAddress(0x30000);\n\n```\nBy the way, strings and arrays are a little different:\n\n```\nlisting.createData(address, new StringDataType(), 2);\nlisting.createData(address.add(2), new ArrayDataType(UnsignedIntegerDataType.dataType, 4));\n\n```\n",
      "votes": "0",
      "user": "hippietrail",
      "time": "Sep 2, 2024 at 7:42",
      "is_accepted": true,
      "comments": []
    }
  ]
}