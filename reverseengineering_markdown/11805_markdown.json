{
  "title": "radare2 does not show reference to memory address",
  "link": "https://reverseengineering.stackexchange.com/questions/11805/radare2-does-not-show-reference-to-memory-address",
  "content": "I am debugging Challenge 6 from the 2014 FlareOn challenges.\nFor incorrect imput it displays the \"bad\" message.\nRunning /i bad returns 0x004f3bf2 hit0_0 \"bad\".\nps @ 0x004f3bf2 returns bad as expected.\nMy problem is that if I try to find reference to this memory address, axt @ 0x004f3bf2, radare2 does not return anything, but the address is surely referenced:\n\n```\npd 1 @ 0x43710c\n0x0043710c      bff23b4f00     movl $0x4f3bf2, %edi        ; \"bad\" @ 0x4f3bf2\n\n```\nI have written a simple application containig const char* bad=\"bad\"; printf(\"%s  \n\", bad);. In this case using the steps from above radare2 correctly identifies the line calling printf.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "1k",
  "tags": [
    "radare2"
  ],
  "user": "robert",
  "time": "Jan 20, 2016 at 13:17",
  "comments": [
    {
      "user": "PhantomThreads",
      "text": "Probably because you didn't analyze the file first. Use aaaa command after opening binary.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "This is because radare2 doesn't come with analysis by default, moreover, it doesn't have (yet?) great analysis capabilities. The reason why (beside the lack of time/interest/contributors of course) is explained in the previous link.\n\nAlso, please note that the string isn't referenced: during the disassembly, radare2 will detect strings and tell you about them, but this doesn't mean that it will add them to its internal database.\n\n",
      "votes": "0",
      "user": "jvoisin",
      "time": "Jan 20, 2016 at 22:13",
      "is_accepted": true,
      "comments": [
        {
          "user": "robert",
          "text": "I have read the article and I need further reading to understand the different configuration variables. Currently I have e file.analyze=true in my .radare2rc file. What I do not understand, why I get no result for axt @ 0x004f3bf2 in the challenge (www.flare-on.com/files/C6.zip), while doing the same steps in a simple helloworld applocation I get back the instruction which prepares the printf, with other words uses the address where the string is.",
          "time": null
        },
        {
          "user": "jvoisin",
          "text": "Because radare2 analysis is not super-great.",
          "time": null
        }
      ]
    }
  ]
}