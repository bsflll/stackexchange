{
  "title": "Encrypting text in binary files",
  "link": "https://reverseengineering.stackexchange.com/questions/1356/encrypting-text-in-binary-files",
  "content": "Text strings are usually easily read in a binary file using any editor that supports ASCII encoding of hexadecimal values. These text snippets can be easily studied and altered by a reverse engineer.\n\nWhat options does a developer have to encrypt these text snippets, and decrypt them, in runtime ?\n\n",
  "votes": "9",
  "answers": 1,
  "views": "4k",
  "tags": [
    "obfuscation",
    "c",
    "c++"
  ],
  "user": "Mellowcandle",
  "time": "Mar 29, 2013 at 1:48",
  "comments": [],
  "answers_data": [
    {
      "content": "Some options which may or may not be applicable depending on your needs:\n\nOf course if your strings do get decoded/decrypted at run time then a reverse engineer could just dump the process from memory in order to see the strings. For this reason it may be best to decode/decrypt individual strings only when needed (possibly storing the decoded string in a temporary location and zeroing it after use).\n\n",
      "votes": "8",
      "user": "QAZ",
      "time": "Mar 28, 2013 at 18:27",
      "is_accepted": true,
      "comments": [
        {
          "user": "amccormack",
          "text": "See this stackoverflow question for techniques that protect unencrypted strings from being dumped from memory.",
          "time": null
        },
        {
          "user": "Daniel W. Steinbrook",
          "text": "+1 for \"get creative.\" The best way to thwart attempts to understand your program is to use techniques not documented in online Q&A sites...",
          "time": null
        }
      ]
    }
  ]
}