{
  "title": "Segments start address is different in IDApython when invoked thrg cmd prompt",
  "link": "https://reverseengineering.stackexchange.com/questions/12945/segments-start-address-is-different-in-idapython-when-invoked-thrg-cmd-prompt",
  "content": "I am able to get Segments start address, end address and all functions of a DLL through follwoing ida python script:\n\n```\n# Get the segment's starting address\n    ea = ScreenEA()\n    print(ea)\n    print(SegStart(ea),SegEnd(ea))\n\n    callers = dict()\n    callees = dict()\n\n    # Loop through all the functions\n\n    for function_ea in Functions(SegStart(ea), SegEnd(ea)):\n\n        f_name = GetFunctionName(function_ea)\n        print(f_name)\n\n        # Create a set with all the names of the functions calling (referring to)\n        # the current one.\n        callers[f_name] = Set(map(GetFunctionName, CodeRefsTo(function_ea, 0)))\n\n        # For each of the incoming references\n        for ref_ea in CodeRefsTo(function_ea, 0):\n\n\n            # Get the name of the referring function\n            caller_name = GetFunctionName(ref_ea)\n\n            # Add the current function to the list of functions\n            # called by the referring function\n            callees[caller_name] = callees.get(caller_name, Set())\n            callees[caller_name].add(f_name)\n\n    # Get the list of all functions\n    functions = Set(callees.keys()+callers.keys())\n    total_callees=0\n\n    # For each of the functions, print the number of functions calling it and\n    # number of functions being called. In short, indegree and outdegree\n    for f in functions:\n        print('%d:%s:%d' % (len(callers.get(f, [])), f, len(callees.get(f, []))))\n        total_callees+=len(callees.get(f,[]))\n\n    print(\"  \nTotal callees of \\t\"+idaapi.get_root_filename()+\"\\t: \"+str(total_callees))\n\n```\nScript is working well when invoked inside IDA pro but if it is invoked through command prompt like below:\n\n```\nidaq.exe -A -S\"C:\\xxx\\segment.py\" \"C:\\fff\\yy.dll\"\n\n```\nThe output is different as below:\n\n```\n4294967295\n(4294967295L, 4294967295L)    \nTotal callees of    yy.dll  : 0\n\n```\n",
  "votes": "2",
  "answers": 1,
  "views": "2k",
  "tags": [
    "idapython",
    "dll",
    "command-line"
  ],
  "user": "user3264821",
  "time": "Jun 28, 2016 at 8:41",
  "comments": [],
  "answers_data": [
    {
      "content": "This happens because you are starting from the ScreenEA() return value - this function returns the current EA in the disassembly window. When you're running from the command line it really can behave different.\n\nTo iterate over segments you can use idautils.Segments() function (it allows iteration over all defined segments). If you want to get the first defined segment you can use idc.FirstSeg() which should return the start address of the first segment. If you want to limit the work of your script to one segment you can check segment name with function idc.SegName(ea), where ea is an address within the segment, for example, as follows:\n\n```\nimport idautils\nimport idc\n\nfor s in idautils.Segments():\n    if idc.SegName(s) == \"your_segment_name\":\n         #do you work here\n\n```\nBy the way, 4294967295 in hex is 0xffffffff which is numeric value of idc.BADADDR, which means invalid address or error.\n\n",
      "votes": "2",
      "user": "w s",
      "time": "Jun 28, 2016 at 12:46",
      "is_accepted": false,
      "comments": [
        {
          "user": "user3264821",
          "text": "Thanks! but unable to pass arguments to script...idaq64  -A -S\"myscrip.py outpath.txt\" \"bin_path\" gives idc.argv[0] argument error while running the script",
          "time": null
        },
        {
          "user": "w s",
          "text": "did you use it as idc.argv or as idc.ARGV ?",
          "time": null
        },
        {
          "user": "user3264821",
          "text": "idc.ARGV and its working :) last doubt ! how to find hanging instructions i.e those intructions which are not under any function module in a DLL using IDAPython?",
          "time": null
        },
        {
          "user": "w s",
          "text": "I'd suggest to ask it as different question.",
          "time": null
        }
      ]
    }
  ]
}