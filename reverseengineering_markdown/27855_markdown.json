{
  "title": "Reversing bit rotations",
  "link": "https://reverseengineering.stackexchange.com/questions/27855/reversing-bit-rotations",
  "content": "so I have a question regarding the assembly instructions ror and rol:\nIs it possible to properly reverse them?\nSo assuming I have something like\n\n```\nROR        EDX, 0x4\n\n```\nand know the contents of EDX after this instruction, is it mathematically possible to  find out the initial value of EDX? If so, can anyone explain to me how it's done?\nSadly I couldn't find any good answer to this so far, so I would be really happy if someone could help me with this :)\n\n",
  "votes": "1",
  "answers": 1,
  "views": "464",
  "tags": [
    "assembly"
  ],
  "user": "MrFluffy",
  "time": "Jun 17, 2021 at 18:48",
  "comments": [],
  "answers_data": [
    {
      "content": "For ror/rol you just use the reverse operation - rol/ror as bits are rotated - nothing is lost.\n\n0xdeadbeef rol 5 -> 0xd5b7ddfb\n\n0xd5b7ddfb ror 5 -> 0xdeadbeef\n\n",
      "votes": "3",
      "user": "Paweł Łukasik",
      "time": "Jun 17, 2021 at 19:53",
      "is_accepted": false,
      "comments": []
    }
  ]
}