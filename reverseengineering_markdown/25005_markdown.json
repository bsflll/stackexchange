{
  "title": "Help with decoding japanese text from binary",
  "link": "https://reverseengineering.stackexchange.com/questions/25005/help-with-decoding-japanese-text-from-binary",
  "content": "I'm building a fan website for a japanese mobile game. I'd like to have access to game data like character stats and ability names. I'll start by saying that this is the first time I have done something like this and could use any help. \n\nThis is what I have done so far. \n\nHere is an example of one of the smaller files, the japanese text are relevant and are not random.\n\n\nAs I said in the start, this is my first exposure to such things. I am stuck and welcome any help on what I can do next. \n\nFor reference, here are some of the files\n\n",
  "votes": "1",
  "answers": 0,
  "views": "425",
  "tags": [
    "game-hacking"
  ],
  "user": "tfu",
  "time": "May 13, 2020 at 19:32",
  "comments": [
    {
      "user": "hippietrail",
      "text": "How old is the game? Japanese has had strong resistance to UTF-8 Unicode because their older text encoding standards, of which there are several, take up less space for Japanese text. A lot of those Japanese characters just look like random gibberish. But then again I can see シメリア that looks like proper Japanese and indeed turns out to be some character from World of Warcraft. As UTF-8 is a multibyte encoding, which byte offset you start interpreting can make a difference, though the bit patterns of UTF-8 make it pretty much self-synchronizing.",
      "time": null
    },
    {
      "user": "hippietrail",
      "text": "I'd guess it's either text mixed with other binary data or it could be lightly compressed so some recognizable chunks still appear whole. RLE compression methods for example can lead to this.",
      "time": null
    }
  ],
  "answers_data": []
}