{
  "title": "OSX User level application Preferences (plist) are not loaded after binary modification",
  "link": "https://reverseengineering.stackexchange.com/questions/18124/osx-user-level-application-preferences-plist-are-not-loaded-after-binary-modif",
  "content": "I am working on a project that requires to modify an existing OSX application's dylib binary (few bytes to correct an obsolete URL). I do not have access to the application source code nor the code signing certificates. After patching the application everything works perfectly except it does not load its application plist file from ~/Library/Preferences. \n\nEven without patching/modifying the application if I do:\n\n```\ncodesign -s \"Local Codesign\" -f ./lib<name>.dylib\n\n```\nand execute the application it does not read its properties from\n\n```\n~/Library/Preferences/<application id>.plist\n\n```\nincluding previously opened files or connected servers. If I copy back the original (developer signed) dylib then everything works fine: properties are read back again.\n\nOne strange thing: even with my local signed binary which is unable to read the plist file if I change something the changes are written back. So if this is an OSX security related stuff seems it's only affects reads.\n\nNow my questions and assumptions:\n\nAny comments and feedbacks are welcome.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "125",
  "tags": [
    "osx",
    "patching",
    "binary-editing",
    "macos"
  ],
  "user": "Tamas Foldi",
  "time": "Apr 29, 2018 at 9:53",
  "comments": [
    {
      "user": "Igor Skochinsky",
      "text": "how did you determine that the application does not load the plist from that location and that it did before?",
      "time": null
    },
    {
      "user": "Tamas Foldi",
      "text": "If I change the signature of any of the libraries then the UI does not show \"Recent files\" and \"Recent connections\". If I change back the libraries to the original signed ones everything works well. Also, in case I change the libraries I see security exceptions in OSX Console: code requirement check failed (-67063), client is not Apple-signed.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I could find some hints by googling the error message, e.g.:\n\nhttps://stackoverflow.com/a/40705362/422797\n\nLooks like it's not related to the plist but possibly to some security APIs (e.g. keychain access or SecCodeCheckValidity) used by the program.\nApparently the OS caches signing info based on the file's vnode, and if you replace it in-place that invalidates the signature. The linked answer suggests some workarounds.\n\n",
      "votes": "0",
      "user": "Igor Skochinsky",
      "time": "May 2, 2018 at 8:40",
      "is_accepted": true,
      "comments": [
        {
          "user": "Tamas Foldi",
          "text": "This was one of the issue. After I changed the process flow to 1) move the file 2) sign it in /Application folder with a proper apple signed signature it was able to read the plist. Thanks!",
          "time": null
        }
      ]
    }
  ]
}