{
  "title": "False positives with conditional breakpoint in OllyDBG",
  "link": "https://reverseengineering.stackexchange.com/questions/9046/false-positives-with-conditional-breakpoint-in-ollydbg",
  "content": "I'm trying to remove a nag screen. Its window style is 16C80000, which should translate to WS_VISIBLE | WS_CLIPCHILDREN | WS_CLIPSIBLINGS | WS_CAPTION | WS_SYSMENU. So, in the call to CreateWindowExW() I set a conditional breakpoint at PUSH EAX, which determines the style. \nThe conditions I tried were [EAX] == 16C80000 and [EAX] == WS_VISIBLE | WS_CLIPCHILDREN | WS_CLIPSIBLINGS | WS_CAPTION | WS_SYSMENU. Both give the same results. \nWhat happens is that the conditional breakpoint pretty much acts as a normal breakpoint I think. I get breakpoints at Style = WS_POPUP, and many other styles which I didn't specify. What I'd like is to find out what I'm doing wrong so that I can find the call to that goddamn nag :)\n\n\n",
  "votes": "1",
  "answers": 1,
  "views": "469",
  "tags": [
    "ollydbg",
    "breakpoint"
  ],
  "user": "Nopslide__",
  "time": "Mar 10, 2017 at 9:42",
  "comments": [],
  "answers_data": [
    {
      "content": "if you are setting a breakpoint on the specific address 0x412d18 you must make sure that the specific address will be hit ( setting a breakpoint on a specific address and expecting it to break on CreateWindowCalls is not going to work )\n\nto set a common breakpoint to catch all CreateWindow Calls you should set a breakpoint on system dll  (user32.dll)\n\nyou should use a stack expression for the conditional break  [esp+XXX] == 0x16xxxxxx\n\nhere is a sample on winxpsp3 mspaint.exe \n\n```\nBreakpoints\nAddress    Module     Active                           Disassembly        Comment\n7E42D0A3   USER32     Log when [esp+10] == 44008200    MOV     EDI, EDI\n\n```\nthe bp is set on \n\n```\n7E42D0A3 USER32.CreateWindowExW [esp+10] == 44008200 /$ 8BFF MOV EDI, EDI\n\n```\nnever pause\nbreak on condition\nlog always\ncondition [esp+10] = xxxxxxxx\nexpression [esp+10]     \n\n\n\nresult as follows\n\n```\nLog data\nMessage\n\nCOND: style = = 88000000\n\nCOND: style = = 02CFC000\nCOND: style = = 52000000\nCOND: style = = 54000000\nCOND: style = = 5400014E\nCOND: style = = 56002800\nCOND: style = = 56008200\nCOND: style = = 56001400\nCOND: style = = 56004100\nCOND: style = = 44001430\nCOND: style = = 44008200  <------- broken and function args logged for my specific condition\nCALL to CreateWindowExW from MFC42u.5F811CB2\n  ExtStyle = 0\n  Class = \"AfxWnd42u\"\n  WindowName = \"Colors\"\n  Style = WS_CHILD|WS_CLIPSIBLINGS|8200  <------------\n  X = FFFFFEFD (-259.)\n  Y = FFFFFFCD (-51.)\n  Width = 103 (259.)\n  Height = 33 (51.)\n  hParent = 00080226 ('Paint',class='MSPaintApp')\n  hMenu = 0000E818\n  hInst = 01000000\n  lParam = NULL\n\n```\n",
      "votes": "2",
      "user": "blabb",
      "time": "Jun 2, 2015 at 11:40",
      "is_accepted": true,
      "comments": [
        {
          "user": "Nopslide__",
          "text": "Thanks. I'll try it out, I think this might work. I still don't quite understand why it's giving false positives though? In the screenshot you can see that I've set a conditional breakpoint at PUSH EAX. It made a breakpoint when EAX was 80000000, even though the condition was equal to [EAX] == 16C80000. Why?",
          "time": null
        },
        {
          "user": "blabb",
          "text": "your screenshot does not convey your breakpoint semantics if there is an error parsing or evaluating ollydbg will pause and an error maybe logged in log window though it may appear to be paused due to break or appear to be flase positive suppose eax == 0 then parsing [eax] will lead to unreadable memory error and ollydbg may pause [8000000] may be inaccessible kernel pointer i cant say for sure what is happening from the information and screenshot you provided",
          "time": null
        },
        {
          "user": "Nopslide__",
          "text": "What additional data do I need to provide for you to answer my question? :)",
          "time": null
        }
      ]
    }
  ]
}