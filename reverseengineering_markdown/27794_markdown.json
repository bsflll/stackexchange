{
  "title": "How to see the function definition of a function pointer in Ghidra",
  "link": "https://reverseengineering.stackexchange.com/questions/27794/how-to-see-the-function-definition-of-a-function-pointer-in-ghidra",
  "content": "i was wondering how to get to the function definition of a function pointer. Currently i have a function which is called in the following way:\n\n```\niVar = (*DAT)(param_2, PTR_s)\n\n```\nWhen i press on *DAT i see that it is referenced by several functions. What i am wondering know is what the function definition looks like because i am interested in what the function is doing. How do i get to the function definition from the pointer?\n\n",
  "votes": "0",
  "answers": 1,
  "views": "1k",
  "tags": [
    "ghidra",
    "pointer"
  ],
  "user": "Hakan",
  "time": "Jun 4, 2021 at 21:04",
  "comments": [
    {
      "user": "Rolf Rolles",
      "text": "Is DAT a global variable?",
      "time": null
    },
    {
      "user": "Hakan",
      "text": "Ehhh, i am quite new to ghidra. How can i see if this is the case?",
      "time": null
    },
    {
      "user": "0xC0000022L",
      "text": "@Hakan hi and welcome to RE.SE. Are you new to C also? You seem to be confused about the syntax here also.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Did you find this code in the decompile windows of Ghidra, right? \nIn my case, it can be like this format: DAT_00000a30.\nSo if you go to the address 00000a30 in the Assemble windows (press G, and input 0a30), you can find the DAT_00000a30 part.\n\n",
      "votes": "-1",
      "user": "three2zero",
      "time": "Jun 5, 2021 at 2:47",
      "is_accepted": false,
      "comments": []
    }
  ]
}