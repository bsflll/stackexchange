{
  "title": "IDA Strange exception before code is executed",
  "link": "https://reverseengineering.stackexchange.com/questions/14268/ida-strange-exception-before-code-is-executed",
  "content": "I am trying to reverse a PE executable (challenge tutorial). I am putting a breakpoint on the first instruction of the program, at the entry point. There is nothing executed before. \n\nI get a software breakpoint exception when I run the program. I think this is a debugger detection system. But I do not know where is the code that throws this exception, because I have not reach my program entry point. \n\nThe exception throws from ntdll.dll I want to understand how can code from ntdll.dll can be executed BEFORE the entry point of my binary\n\nThanks\n\n",
  "votes": "4",
  "answers": 2,
  "views": "4k",
  "tags": [
    "ida",
    "pe"
  ],
  "user": "Bob5421",
  "time": "Dec 28, 2016 at 23:25",
  "comments": [],
  "answers_data": [
    {
      "content": "One thing that runs before the entrypoint is TLS callbacks, so check if your binary has them.\n\n",
      "votes": "6",
      "user": "Igor Skochinsky",
      "time": "Dec 28, 2016 at 21:39",
      "is_accepted": true,
      "comments": [
        {
          "user": "blabb",
          "text": "To add to Igor's answer if your binary loads custom DLLs then their initialization code is run before you reach entry point of binary",
          "time": null
        }
      ]
    },
    {
      "content": "no offense intended but this question demonstrates some basic lack of understanding of how windows loads user-mode processes, how how user-mode code and executables are built.\n\nI'll list a few missing pieces:\n\nI would suggest you read the Peering Inside the PE, as it describes those processes really in-depth.\n\n",
      "votes": "2",
      "user": "NirIzr",
      "time": "Dec 28, 2016 at 23:25",
      "is_accepted": false,
      "comments": []
    }
  ]
}