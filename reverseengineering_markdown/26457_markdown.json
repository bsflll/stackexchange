{
  "title": "Function pointer reference",
  "link": "https://reverseengineering.stackexchange.com/questions/26457/function-pointer-reference",
  "content": "I need to hook 10/20 functions like these:\n\n```\nstatic void* __cdecl HookFunction1(char *FileName, int a2, int a3, int a4);\n\n\n __declspec(naked)  void HookFunction2(char  *Src, int pedx, int \n    \n    a3, int a4, int a5, int a6);\n    \n static BOOL HookFunction3(int a1, DWORD *a2, DWORD *a3, int a4, char a5, int a6);\n\n```\nand I use this code:\n\n```\nswitch (int iD)\n{\ncase 1\n\n    DetourAttach(&(LPVOID&)AddressOfHook, &HookFunction1);\n\ncase 2\n   DetourAttach(&(LPVOID&)AddressOfHook, &HookFunction2);\n\ncase 3\n   DetourAttach(&(LPVOID&)AddressOfHook, &HookFunction3);\n.....\n}\n\n```\nbut I like to not repeat x times \"DetourAttach\" and I like do to something like this:\n\n```\nswitch (int iD)\n{\ncase 1\n\n    HookFunction = &HookFunction1;\n\ncase 2\n    HookFunction = &HookFunction2;\n\ncase 3\n   HookFunction = &HookFunction3;\n.....\n}\n\nDetourAttach(&(LPVOID&)AddressOfHook, &HookFunction);\n\n```\nI ask if there is a easy way to do this becouse is more flexible.\n\nThanks !!\n\n",
  "votes": "1",
  "answers": 1,
  "views": "254",
  "tags": [
    "c++",
    "function-hooking",
    "pointer"
  ],
  "user": "user3449922",
  "time": "Dec 6, 2020 at 14:01",
  "comments": [],
  "answers_data": [
    {
      "content": "I have solved myself.\n\n```\nPVOID HookFunction;\n\nHookFunction = (PVOID)HookFunction1;\n\n```\nand\n\n```\nDetourAttach(&(LPVOID&)AddressOfHook, HookFunction);\n\n```\n",
      "votes": "1",
      "user": "sudhackar",
      "time": "May 2, 2022 at 11:23",
      "is_accepted": false,
      "comments": []
    }
  ]
}