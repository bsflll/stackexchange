{
  "title": "Calculate LEA operand",
  "link": "https://reverseengineering.stackexchange.com/questions/20424/calculate-lea-operand",
  "content": "I have those opcodes on 64 bits: \n\n```\n48 8D 35 45 CE FF FF >>> lea rsi, [rip - 0x31bb].\n\n```\nHow can I get the 0x31bb value from those opcodes and how can I know if I have a + sign or a - sign beetween operands ( rip - 0x31bb or rip + 0x31bb ) ?\n\n",
  "votes": "0",
  "answers": 1,
  "views": "384",
  "tags": [
    "ida",
    "assembly",
    "decompilation",
    "patch-reversing",
    "x86-64"
  ],
  "user": "Maco",
  "time": "Jan 20, 2019 at 14:15",
  "comments": [],
  "answers_data": [
    {
      "content": "You can get that value from the last 4 bytes of the opcode.\n\n```\n45 CE FF FF\n\n```\nYou need to reverse the order of bytes and the the value is written as 2's complement. Since the highest bit is 1 it will be negative. \n\n```\n(0xFFFFCE45) in 2's = -0x31BB\n\n```\n",
      "votes": "0",
      "user": "Paweł Łukasik",
      "time": "Jan 20, 2019 at 14:15",
      "is_accepted": true,
      "comments": []
    }
  ]
}