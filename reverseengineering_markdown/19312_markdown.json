{
  "title": "pintool add metadata like radare2",
  "link": "https://reverseengineering.stackexchange.com/questions/19312/pintool-add-metadata-like-radare2",
  "content": "Look at this very basic C program:\n\n```\n#include <stdio.h>\nint main()\n{\n    printf(\"Hello world  \n\");\n    return 0;\n}\n\n```\nNow look at this very basic pintool:\n\n```\n#include \"pin.H\"\n#include <stdio.h>\n\nVOID callback_instruction(INS ins, VOID *v)\n{\n    printf(\"%lx\\t%s  \n\", INS_Address(ins),INS_Disassemble(ins).c_str());\n}\n\nint main(int argc, char *argv[])\n{\n    if (PIN_Init(argc,argv))\n    {\n        printf(\"Erreur  \n\");\n        return 0;\n    }\n\n    INS_AddInstrumentFunction(callback_instruction, 0);\n    PIN_StartProgram();\n\n    return 0;\n}\n\n```\nHere is what is printed by this pintool:\n\n```\n....\n55ef42b84139    lea rdi, ptr [rip+0xec4]\n55ef42b84140    call 0x55ef42b84030\n...\n\n```\nHere is what i get in radare2:\n\n```\n|           0x00001135      55             push rbp\n|           0x00001136      4889e5         mov rbp, rsp\n|           0x00001139      488d3dc40e00.  lea rdi, str.Hello_world    ; 0x2004 ; \"Hello world\"\n|           0x00001140      e8ebfeffff     call sym.imp.puts           ; int puts(const char *s)\n|           0x00001145      b800000000     mov eax, 0\n|           0x0000114a      5d             pop rbp\n\\           0x0000114b      c3             ret\n\n```\nAs you can see, radare2 is able to display in comments the value of the strings (Hello world) and the imported function names (puts). My question is: Is it possible to do the same thing with pintool ?\n\nThanks\n\n",
  "votes": "2",
  "answers": 1,
  "views": "47",
  "tags": [
    "pintool"
  ],
  "user": "Bob5421",
  "time": "Sep 12, 2018 at 7:29",
  "comments": [],
  "answers_data": [
    {
      "content": "Sure, it’s possible but you’ll have to implement the logic for it yourself: check the instruction type/operands, fetch the referred memory, try to detect if it looks like a string and so on. For function names, you'll need to parse the symbol table of the binary.\n\nThere is no ready to use pintool that does this (AFAIK). \n\n",
      "votes": "3",
      "user": "Igor Skochinsky",
      "time": "Sep 12, 2018 at 9:22",
      "is_accepted": false,
      "comments": [
        {
          "user": "Bob5421",
          "text": "Okay for the strings, but how can i do for the functions names ?",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "@Bob5421: parse the symbol table",
          "time": null
        },
        {
          "user": "Bob5421",
          "text": "do you have any samples ? I have tried to read memory from pintool c function callback",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "Nope, maybe ask on SO since it’s an sw dev question.",
          "time": null
        },
        {
          "user": "sudhackar",
          "text": "for functions RTN_FindNameByAddress is a good option. Also check source/tools/SimpleExamples in your pin directory for API examples.",
          "time": null
        }
      ]
    }
  ]
}