{
  "title": "Declaration of a complex C expression",
  "link": "https://reverseengineering.stackexchange.com/questions/9157/declaration-of-a-complex-c-expression",
  "content": "I used IDA Pro and got the following expression from a produced C file:\n\n```\nv25 = (*(int (**)(void))(v22 + 464))();\n\n```\nI am trying to figure out the meaning of the above expression with the following links:\n\nhttp://www.unixwiz.net/techtips/reading-cdecl.html\n\nhttp://www.codeproject.com/Articles/7042/How-to-interpret-complex-C-C-declarations\n\nI start with (v22 + 464) and then go out of the parenthesis and to the left to the following *(int (**)(void)).\n\nBut, still can't understand. Any hints?\n\nEDIT: I guess this expression is not a declaration but a function call.\n\n(v22+464) is then cast to a pointer to a pointer to a function that takes void as an argument and returns an int. Then that pointer is dereference and the () operator is applied - the function is called.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "185",
  "tags": [
    "ida",
    "c",
    "functions"
  ],
  "user": "fred26",
  "time": "Jun 17, 2015 at 12:20",
  "comments": [],
  "answers_data": [
    {
      "content": "(*(int (**)(void))(v22 + 464))() is a function call (v22 is an object (perhaps a vtable) that contains a function pointer).\n\n",
      "votes": "3",
      "user": "Jason Geffner",
      "time": "Jun 17, 2015 at 1:32",
      "is_accepted": true,
      "comments": []
    }
  ]
}