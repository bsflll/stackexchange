{
  "title": "Why is the offset 16 bits?",
  "link": "https://reverseengineering.stackexchange.com/questions/26046/why-is-the-offset-16-bits",
  "content": "I was told that segment:offset pairs were used to represent 20 bits. The segment is 4 bit shifted, and the value plus the offset becomes the physical address. I don't have to worry anymore at 32-bit system, but I'm still curious.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "448",
  "tags": [
    "assembly",
    "register"
  ],
  "user": "ististyle",
  "time": "Oct 4, 2020 at 20:35",
  "comments": [],
  "answers_data": [
    {
      "content": "You are referring to the early 80s of the last century. The 8086 architecture used  this way of addressing 20-bit physical memory, the then tremendous amount of 1 (One!) MByte, or \"one million bytes of memory\", as Intel calls it in /1/, p.2-7.\n\nThese \"logical addresses\", as Intel called them in /1/, served primarily two purposes:\n\n\"Segmentation makes it easy to build relocatable and reentrant programs. ... (relocation means having the ability to run the same program in several different areas of memory without changing the adresses in the program itself)...\"\n\nThus, to answer your first question, offsets of four instead of 16 bits could not have been used to build the segments of 64kB each, intended to be relocated if necessary. 64kB segment size are a \"natural\" value in a 16-Bit system like the 8086.\n\nRegarding your second question, there might of course be a problem with overlapping segments if they are not treated carefully, e.g. when code and data overlap. But it was explicitly intended by Intel that segments could overlap in the most possible way, by giving them all the same value, allowing this segmented architecture be used in systems with only 64kByte of memory.\n\nAccording to Intel (/1/, p.2-8):\n\"In a system where the total amount of memory is 64K bytes or less, it is possible to set all segment registers equal and have fully overlapping segments.\"\n\n/1/: iAPX 86, 88, 168 and 188 User's Manual, Programmers Reference, Intel 1983\n\n",
      "votes": "2",
      "user": "josh",
      "time": "Oct 4, 2020 at 21:47",
      "is_accepted": true,
      "comments": []
    }
  ]
}