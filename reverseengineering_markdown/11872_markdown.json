{
  "title": "How would you protect this Crypter?",
  "link": "https://reverseengineering.stackexchange.com/questions/11872/how-would-you-protect-this-crypter",
  "content": "Imagine you are working in a kind of crypter that only works with the current function deciphered, rest of the code is ciphered by symmetric encryption. When a new function is about to be called, the current function is enciphered and the following is deciphered and called.\n\nMy assumption is that a analyst can easily dump the deciphered code (real code) each time a function is called, due to is the unique time where code is leaked/deciphered. Also, an analyst could easily repatch the executable in order to extract the protection, but it would need the symmetric key, once he has it, he just has to remove the encryption/decryption blocks and decipher the code.\n\nQuestion here is: How can I implement a secure system that accomplish:\n\nIt would be great to read some advices. Thanks!\n\n",
  "votes": "0",
  "answers": 1,
  "views": "248",
  "tags": [
    "binary-analysis",
    "encryption",
    "cryptography"
  ],
  "user": "kub0x",
  "time": "Jan 28, 2016 at 9:12",
  "comments": [
    {
      "user": "Jason Geffner",
      "text": "Even if you were able to keep the key \"hidden\" (using white-box cryptography or other means) and obfuscate the decryption algorithm well, one could still decrypt your program by calling your decryption function(s) on each encrypted function and dumping the output. I actually discussed this briefly @ youtube.com/watch?v=mWsT5M6rHWI#t=15m7s (it's about encrypted strings but the same approach could also be applied to encrypted functions).",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "There is a thing that might help you in modern crypto research, it is called white-box cryptography and relatively good Q&A article resides here .\n\nGenerally speaking if the key exists sometimes in the memory you can safely assume that sometimes it will be dumped and reused.\n\nHowever you can harden the problem by using the following techniques:\n\nGood luck.\n\n",
      "votes": "1",
      "user": "Community",
      "time": "Jun 17, 2020 at 9:54",
      "is_accepted": false,
      "comments": [
        {
          "user": "w s",
          "text": "Small remark: Encrypting the code by function boundaries leaks information about the code structure. You can divide your encryption blocks differently.",
          "time": null
        }
      ]
    }
  ]
}