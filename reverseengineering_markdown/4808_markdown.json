{
  "title": "Anti-debug techniques for MS-Windows?",
  "link": "https://reverseengineering.stackexchange.com/questions/4808/anti-debug-techniques-for-ms-windows",
  "content": "Is there any anti-debugger tricks used by malware other than interrupt INT 0x2D ? And, how do they work ? Working examples would be really nice !\n\n",
  "votes": "-3",
  "answers": 2,
  "views": "3k",
  "tags": [
    "windows",
    "malware",
    "debuggers"
  ],
  "user": "Ahmed",
  "time": "Aug 8, 2014 at 11:55",
  "comments": [],
  "answers_data": [
    {
      "content": "@peter-ferrie compiled a very good list of anti-debugging tricks at http://pferrie.host22.com/papers/antidebug.pdf\n\nThe server for the link above seems to be down right now, but there's a copy at https://tuts4you.com/request.php?3260\n\n",
      "votes": "5",
      "user": "Jason Geffner",
      "time": "Jul 8, 2014 at 18:29",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Here is a good starting point on Windows anti-reverse engineering covers anti-debugging and much more:\nhttp://www.codeproject.com/Articles/30815/An-Anti-Reverse-Engineering-Guide\n\nSince there are so many useful websites out there I'm going to link you to them instead of just telling you about tricks and how they work. If you do have any queries on how certain tricks work on anti-debugging feel free to ask.\n\nUseful websites / Articles:\n\nThat should be more than enough to get you going.\n\nYou could even go outside of the box and do API hooking on debugging APIs generally prefix with Dbg and located in EAT of NTDLL. There is plenty of APIs you could use. \n\nHigher level API will be easy to bypass since they are generic across windows versions. For example IsDebuggerPresent and CheckRemoteDebuggerPresent are useless since everyone knows how easy it is to bypass in varies ways such as hooking and so on.\n\nHere is useful website for all the internal APIs:\n\nSo, when you hook the API let's pretend you're doing memory detour just set the trampoline to LdrShutdownProcess.\n\n",
      "votes": "2",
      "user": "Paul",
      "time": "Jul 9, 2014 at 11:27",
      "is_accepted": false,
      "comments": [
        {
          "user": "Ahmed",
          "text": "X86 architecture windows 7 and + operating system c/c++ and assemble and i believe that there is no method to proctect against all debuggers so i want to protect my code against most debuggers",
          "time": null
        }
      ]
    }
  ]
}