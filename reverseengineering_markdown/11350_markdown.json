{
  "title": "Colorize and disassemble byte sequences with IDA Pro and IDAPython",
  "link": "https://reverseengineering.stackexchange.com/questions/11350/colorize-and-disassemble-byte-sequences-with-ida-pro-and-idapython",
  "content": "Maybe someone could help me with the following problem:\n\nI have an interesting byte sequence that I found within a MIPS ELF binary that exists on the hard drive. This byte sequence may be, for example, 9c 6c 3c 04 80 2d 24 84 85. Now I want to find this byte sequence with IDAPython. Therefore, I use the idc.FindBinary() function like so:\n\n```\naddress = idc.FindBinary(0, SEARCH_DOWN, byte_sequence)\n\n```\nwhich finds the first occurrence of the byte sequence at address. In general I want to achieve two things:\n\nCurrently there are two subproblems I want to solve:\n\nAny help would be greatly appreciated!\n\n",
  "votes": "3",
  "answers": 1,
  "views": "1k",
  "tags": [
    "ida",
    "disassembly",
    "idapython",
    "binary"
  ],
  "user": "metaphysicalmarty",
  "time": "Nov 18, 2015 at 9:25",
  "comments": [
    {
      "user": "Guntram Blohm",
      "text": "Not 100% sure, but i seem to remember that MIPS instructions are always exactly 4 bytes, so you can just do some modulo calculations. Otherwise, PrevHead and NextHead are probably what you want (idc.PrevHead and idc.NextHead in IdaPython).",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "You can easily do that using Sark:\n\n```\n# Get all the lines relevant to your bytes\nfor line in sark.lines(start=address, end=address + len(byte_sequence)):\n    # For each line, color it, and print the disasm and the instruction length\n    line.color = 0x123456\n    print 'Line Size: {}  \nLine Disasm: {}'.format(line.size, line.disasm)\n\n```\nYou might need to add handling for cases where there is no disassembly (the bytes are data-bytes and not code).\n\n",
      "votes": "3",
      "user": "tmr232",
      "time": "Nov 18, 2015 at 11:33",
      "is_accepted": true,
      "comments": []
    }
  ]
}