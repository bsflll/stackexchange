{
  "title": "How to find main() of Windows EXE with Ghidra?",
  "link": "https://reverseengineering.stackexchange.com/questions/28046/how-to-find-main-of-windows-exe-with-ghidra",
  "content": "I'm new to Ghidra, my goal is to add localizations for a small EXE program. The program was written in Visual Studio and has Russian dialogs, which I like to convert to English.\n\nI've loaded the EXE into Ghidra, it shows up a lot of information:\n\n```\n/* WARNING: Instruction at (ram,0x0045280e) overlaps instruction at (ram,0x0045280d)\n    */\n/* WARNING: Removing unreachable block (ram,0x004527db) */\n/* WARNING: Removing unreachable block (ram,0x00452823) */\n/* WARNING: Removing unreachable block (ram,0x004527a1) */\n\nulonglong entry(void)\n\n{\n  undefined8 uVar1;\n  ulonglong uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  \n  iVar4 = -1;\n  while (iVar4 != 0) {\n    iVar4 = 0;\n  }\n  uVar3 = 0;\n  iVar4 = -1;\n  while (iVar4 != 0) {\n    iVar4 = 0;\n  }\n  uVar1 = rdtsc();\n  iVar4 = 1;\n  do {\n    if (uVar3 == 0) {\n      uVar3 = 0;\n    }\n    else {\n      uVar3 = (uint)uVar1 | 2;\n    }\n    iVar5 = -1;\n    while (iVar5 != 0) {\n      iVar5 = 0;\n    }\n    iVar4 = iVar4 + -1;\n  } while (iVar4 != 0);\n  uVar2 = rdtsc();\n  uVar3 = (int)uVar2 - (uint)uVar1;\n  do {\n  } while (0x1000000 < uVar3);\n  iVar4 = -1;\n  while (iVar4 != 0) {\n    iVar4 = 0;\n  }\n  iVar4 = -1;\n  while (iVar4 != 0) {\n    iVar4 = 0;\n  }\n  return uVar2 & 0xffffffff00000000 | (ulonglong)uVar3;\n}\n\n```\nI don't get what this means, I somehow expected a whole function-tree with a lot of subs and stuff.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "3k",
  "tags": [
    "windows",
    "decompilation",
    "ghidra",
    "exe"
  ],
  "user": "T-Regex",
  "time": "Jul 26, 2021 at 9:15",
  "comments": [
    {
      "user": "Igor Skochinsky",
      "text": "Look at the disassembly, especially the mentioned removed blocks. It seems you canâ€™t trust this decompilation.",
      "time": null
    },
    {
      "user": "0xC0000022L",
      "text": "Wouldn't it be more logical to attempt and edit the dialog resources (provided the dialogs are embedded as resources) or additionally add English ones?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "that appears to be an antidebugging trick using rdtsc.\n(read date time stamp counter)  it is a monitonically increasing counter\n\nwhen the process is executing without any external interference like a debugger the difference between two successive readings will be small\n\nthe loops look like junk interspersed in between\n\nthis code block supposedly checks for that\n\n",
      "votes": "1",
      "user": "blabb",
      "time": "Jul 26, 2021 at 2:30",
      "is_accepted": false,
      "comments": []
    }
  ]
}