{
  "title": "Idapython: adding links where a function address is loaded into a register",
  "link": "https://reverseengineering.stackexchange.com/questions/20653/idapython-adding-links-where-a-function-address-is-loaded-into-a-register",
  "content": "I'm writing an Idapython loader script to help reverse-engineer the firmware on an embedded system with a 68000 processor.\n\nUnfortunately I can't get a copy of the original C compiler used in order to build FLIRT signatures, but I would like to use Idapython to give IDA hints about some of the optimisations it's done.\n\nAs an example - the compiler often does things like this:\n\n```\nMOVEA.L   #sub_1234, a4\n...\nJSR       (a4)\n\n```\nThe optimisation is, it's using an address register to hold the address of the function, which saves code space when one function is called several times.\n\nI think I can figure out how to search for these patterns in the code -- but how can I tell IDA that \"(a4)\" is really a reference to sub_1234?\n\n",
  "votes": "1",
  "answers": 2,
  "views": "196",
  "tags": [
    "idapython"
  ],
  "user": "philpem",
  "time": "Feb 19, 2019 at 1:34",
  "comments": [],
  "answers_data": [
    {
      "content": "Come to think of it, apart from my other answer, there's a feature of IDA that I forgot: put your cursor on the call and do Edit->Plugins->Change the callee address (Alt-F11).\n\n",
      "votes": "1",
      "user": "Rolf Rolles",
      "time": "Feb 21, 2019 at 17:29",
      "is_accepted": false,
      "comments": [
        {
          "user": "Igor Skochinsky",
          "text": "not for 68k alas.",
          "time": null
        }
      ]
    },
    {
      "content": "IDA doesn't accept \"hints\" along those lines, but you can create the cross-references manually via script. If you know the address of the destination, you can add an out-going cross-reference from the source address to the destination using add_cref. These will show up if you press ctrl-X at the destination, or X at the source. You can also add a comment at the call site with the target address, which will result in basically a \"hyperlink\" that you can double-click or press 'enter' with your cursor over.\n\n",
      "votes": "0",
      "user": "Rolf Rolles",
      "time": "Feb 20, 2019 at 5:10",
      "is_accepted": false,
      "comments": []
    }
  ]
}