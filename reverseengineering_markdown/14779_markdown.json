{
  "title": "How to SUCCESSFULLY add a code section to an executable file in Linux?",
  "link": "https://reverseengineering.stackexchange.com/questions/14779/how-to-successfully-add-a-code-section-to-an-executable-file-in-linux",
  "content": "I am in Linux, and I have seen this question a few times but never, nobody answered how to really make this work.\n\nI need to add a section to an already compiled binary. Lets say for a moment is an ELF file. I'm using objcopy so this should be generic for any format because objcopy uses libbfd that handles many formats.\n\nMy process is as follows.\n\nI create the bytecode for a section I want to append to an already compiled ELF file. Let's name this file bytecode.bin\n\nThen I do:\n\n```\nobjcopy --add-section .mysection=bytecode.bin \\\n--set-section-flags .mysection=code,contents,alloc,load,readonly \\\nmyprogram myprogram_edited\n\n```\nThen I adjust the VMA of the secition:\n\n```\nobjcopy --adjust-section-vma .mysection=$((16#XXXXX)) myprogram_edited myprogram_edited\n\n```\nWhere XXXXXX is the new VMA address for the section.\n\nI get the warning:\n\n```\nobjcopy: stIbZt3t: warning: allocated section `.mysection' not in segment\n\n```\nWhen I do:\n\n```\nobjdump -d myprogram_edited\n\n```\nI see:\n\n```\nDisassembly of section .mysection:\n\n0000000000201011 <.mysection>:\n...\n...\n\n```\nSo I see the section is created OK and the VMA adjusted. But the section is not mapped to segments, so it can't be loaded at runtime.\n\nHow can I solve this?\n\nEDIT:\n\nI opted for using Intel's PIN tool. Very useful and powerful for RI and binary injection.\n\n",
  "votes": "6",
  "answers": 3,
  "views": "10k",
  "tags": [
    "binary-analysis",
    "linux",
    "elf",
    "executable",
    "binary-format"
  ],
  "user": "0xfede7c8",
  "time": "May 11, 2018 at 15:16",
  "comments": [],
  "answers_data": [
    {
      "content": "libbfd is not a magic wand, it is in fact pretty limited (it's one of the reasons why GDB cannot debug files without a section table). In particular, objcopy won't add PHT entries for you, so you will have to extend or adjust the PHT manually. You can either do it manually with a hex editor or try using a library such as libelf (it gives you necessary primitives but you'll need to implement the logic yourself).\n\n",
      "votes": "6",
      "user": "Igor Skochinsky",
      "time": "Mar 1, 2017 at 9:18",
      "is_accepted": true,
      "comments": [
        {
          "user": "julian",
          "text": "\"it's one of the reasons why GDB cannot debug files without a section table\" - thats something I've been wondering about for a while. Thanks for mentioning this",
          "time": null
        },
        {
          "user": "0xfede7c8",
          "text": "The problem is, I need some generic tool that handles more executable file formats, not only ELF. But I think it is already a nice problem with ELF only.",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "Well, I'm not aware of any such tool so I guess you'll have to write your own.",
          "time": null
        }
      ]
    },
    {
      "content": "Maybe you can look at LIEF:\n\nGitHub page: https://github.com/lief-project/LIEF\n\nSite: https://lief.quarkslab.com\n\n",
      "votes": "2",
      "user": "x2d2",
      "time": "Apr 5, 2017 at 8:01",
      "is_accepted": false,
      "comments": [
        {
          "user": "perror",
          "text": "Your answer would be much more valuable if you can provide a basic example on how to code what is asked in LIEF.",
          "time": null
        }
      ]
    },
    {
      "content": "I ended up using Intel PIN\n\nEdit:\nI know this isn't actually an answer to the question. I was trying to change the behavior of a native executable and thought that I needed to change the binary on disk, when actually a binary instrumentation tool was enough for my purpuse.\n\n",
      "votes": "-1",
      "user": "0xfede7c8",
      "time": "Jan 18, 2023 at 17:44",
      "is_accepted": false,
      "comments": [
        {
          "user": "Igor Skochinsky",
          "text": "well, PIN doesn't \"add a section to an already compiled binary\", so this is not an answer to the question as it was stated.",
          "time": null
        },
        {
          "user": "0xfede7c8",
          "text": "Well, I was so ignorant back then I event didn't know what I needed.",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "Congratulations on discovering XY questions",
          "time": null
        }
      ]
    }
  ]
}