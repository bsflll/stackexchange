{
  "title": "What methods exist for adding new windows form controls into compiled assembly using dnSpy?",
  "link": "https://reverseengineering.stackexchange.com/questions/20670/what-methods-exist-for-adding-new-windows-form-controls-into-compiled-assembly-u",
  "content": "I am trying to add another button into windows form using dnSpy. Is it possible to add another?\n\nI want the end result be like this one.\n\n\nAny help will be highly appreciated.Thanks\n\n",
  "votes": "0",
  "answers": 1,
  "views": "774",
  "tags": [
    "c#",
    "visual-basic"
  ],
  "user": "Cloud Automation",
  "time": "Mar 10, 2019 at 16:30",
  "comments": [
    {
      "user": "Paweł Łukasik",
      "text": "Of course it is possible.",
      "time": null
    },
    {
      "user": "dingo_kinznerhook",
      "text": "It would be better to rephrase the question to ask specifically for the information you're looking for. For example, the title could be \"What methods exist for adding new windows form controls into compiled assembly using dnSpy?\" If you ask, \"is it possible to do X\" most likely the answer will be yes.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Yes, it is possible!\n\nYou'll have to do some trial and error for positioning though.\n\n\n\nAdding in a new control is fairly easy. We essentially need to do what the designer usually automatically does for us and create the new control and set up its properties ourselves. Luckily, we can use the button that's already there as a template. \n\nFirst order of business is declaring our new button. Right click inside the class and hit \"Edit Class\" to open the code editor. Scroll down to the bottom where the variables are declared and declare our new button like so:\n\n```\npublic Button button2;\n\n```\nOnce that's done, you should be able to find the designer auto-generated InitializeComponent() method for the form you want to modify. This is the function that does the initial setup for our form. it'll look something like this:\n\n```\nprivate void InitializeComponent()\n    {\n        this.button1 = new Button();\n        base.SuspendLayout();\n        this.button1.Location = new Point(189, 45);\n        this.button1.Name = \"button1\";\n        this.button1.Size = new Size(170, 53);\n        this.button1.TabIndex = 0;\n        this.button1.Text = \"ADD ANOTHER LIKE ME\";\n        this.button1.UseVisualStyleBackColor = true;\n        base.AutoScaleDimensions = new SizeF(6f, 13f);\n        base.AutoScaleMode = AutoScaleMode.Font;\n        base.ClientSize = new Size(563, 329);\n        base.Controls.Add(this.button1);\n        base.Name = \"Form1\";\n        this.Text = \"Form1\";\n        base.ResumeLayout(false);\n    }\n\n```\nWe can copy and paste the creation code for the button that already exists in this case and replace \"button1\" with \"button2\". You'll probably want to change the tab index too.\n\n```\nprivate void InitializeComponent()\n    {\n        this.button1 = new Button();\n        this.button2 = new Button();\n        base.SuspendLayout();\n        this.button1.Location = new Point(189, 45);\n        this.button1.Name = \"button1\";\n        this.button1.Size = new Size(170, 53);\n        this.button1.TabIndex = 0;\n        this.button1.Text = \"ADD ANOTHER LIKE ME\";\n        this.button1.UseVisualStyleBackColor = true;\n\n        this.button2.Location = new Point(189, 145);\n        this.button2.Name = \"button2\";\n        this.button2.Size = new Size(170, 53);\n        this.button2.TabIndex = 1;\n        this.button2.Text = \"I am Added\";\n        this.button2.UseVisualStyleBackColor = true;\n\n        base.AutoScaleDimensions = new SizeF(6f, 13f);\n        base.AutoScaleMode = AutoScaleMode.Font;\n        base.ClientSize = new Size(563, 329);\n        base.Controls.Add(this.button1);\n        base.Name = \"Form1\";\n        this.Text = \"Form1\";\n        base.ResumeLayout(false);\n    }\n\n```\nThen, to get your button to actually appear, you'll need to add the line base.Controls.Add(this.button2); under base.Controls.Add(this.button1);.\n\nWe're not done yet, as our new button will have the exact same properties as the original if we leave it like this, and will appear in the same place with the same text. Replacing the text is easy, simply change the value of this.button2.Text to your desired value. The position will take a little trial and error.\n\nYou'll need to edit this line:\n\n```\nthis.button2.Location = new Point(189, 45);\n\n```\nHere, the first argument of Point is the button's X position and the second is the button's Y position. To move the button downwards as seen in your question, you'll need to increase the Y position. How much you need to increase it depends on where you want the new button to be.\n\nTo save and test your changes, go to File -> Save Module. Your final code should look something like this:\n\n```\n// Token: 0x02000002 RID: 2\npublic class Form1 : Form\n{\n    // Token: 0x06000001 RID: 1\n    public Form1()\n    {\n        this.InitializeComponent();\n    }\n\n    // Token: 0x06000002 RID: 2\n    protected override void Dispose(bool disposing)\n    {\n        if (disposing && this.components != null)\n        {\n            this.components.Dispose();\n        }\n        base.Dispose(disposing);\n    }\n\n    // Token: 0x06000003 RID: 3\n    private void InitializeComponent()\n    {\n        this.button1 = new Button();\n        this.button2 = new Button();\n        base.SuspendLayout();\n        this.button1.Location = new Point(189, 45);\n        this.button1.Name = \"button1\";\n        this.button1.Size = new Size(170, 53);\n        this.button1.TabIndex = 0;\n        this.button1.Text = \"ADD ANOTHER LIKE ME\";\n        this.button1.UseVisualStyleBackColor = true;\n        this.button2.Location = new Point(189, 145);\n        this.button2.Name = \"button2\";\n        this.button2.Size = new Size(170, 53);\n        this.button2.TabIndex = 1;\n        this.button2.Text = \"I am Added\";\n        this.button2.UseVisualStyleBackColor = true;\n        base.AutoScaleDimensions = new SizeF(6f, 13f);\n        base.AutoScaleMode = AutoScaleMode.Font;\n        base.ClientSize = new Size(563, 329);\n        base.Controls.Add(this.button1);\n        base.Controls.Add(this.button2);\n        base.Name = \"Form1\";\n        this.Text = \"Form1\";\n        base.ResumeLayout(false);\n    }\n\n    // Token: 0x04000001 RID: 1\n    private IContainer components;\n\n    // Token: 0x04000002 RID: 2\n    private Button button1;\n\n    public Button button2;\n}\n\n```\nand my final form looked like this:\n\n\nI hope this helped!\n\n",
      "votes": "2",
      "user": "Jill Nesbit",
      "time": "Feb 22, 2019 at 20:10",
      "is_accepted": true,
      "comments": [
        {
          "user": "Cloud Automation",
          "text": "Which version of DnSpy you are using?. My DeCompiled code looks completely different. Your answer is technically correct but not working for me. If you have time can you help me with that?.",
          "time": null
        }
      ]
    }
  ]
}