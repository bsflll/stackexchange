{
  "title": "Ghidra rename variable below current line",
  "link": "https://reverseengineering.stackexchange.com/questions/21236/ghidra-rename-variable-below-current-line",
  "content": "I have been starting to use Ghidra and I find the decompiler view very useful. However, when I rename a variable, the name propagates through all uses of that register or stack pointer throughout the function. In most cases this is good, however often when the variable is stored in a register, the same register will be used to store a different variable later in the function.\n\nMy question is: Is there a way to only rename a variable in a function below the current line? This way, later uses of said register will have the correct variable name.\n\n",
  "votes": "8",
  "answers": 1,
  "views": "3k",
  "tags": [
    "ghidra"
  ],
  "user": "genghiskhan",
  "time": "Apr 28, 2019 at 17:23",
  "comments": [
    {
      "user": "Jeff Muizelaar",
      "text": "I've also run into this problem. I filed github.com/NationalSecurityAgency/ghidra/issues/975 on this topic.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "As of 2020.11.13 the 9.2 release is available which includes this feature.\n\n```\nFor registers you can do it:\n\nRight click in the Decompiler → Commit Locals.\nRight click on the variable → Split out as New Variable.\n\n```\nas per https://github.com/NationalSecurityAgency/ghidra/issues/975#issuecomment-593425470 in the issue that Jeff Muizelaar mentioned.\n\nAccording to https://github.com/NationalSecurityAgency/ghidra/issues/1510#issuecomment-582052718 this only really works well for registers currently, but should also work for Stack variables.\n\n",
      "votes": "8",
      "user": "Florian Magin",
      "time": "Nov 13, 2020 at 21:22",
      "is_accepted": false,
      "comments": []
    }
  ]
}