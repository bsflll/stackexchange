{
  "title": "What are the essential IDA Plugins or IDA Python scripts that you use? [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/59/what-are-the-essential-ida-plugins-or-ida-python-scripts-that-you-use",
  "content": "I'm a bit of a novice with IDA Pro, and have been discovering some of the excellent plugins available from the RE community as well as its vendors. My small list of plugins that I have found extremely valuable to me are:\n\nGranted, this is a very short list. What IDA Pro scripts/plugins do you find essential?\n\n",
  "votes": "17",
  "answers": 4,
  "views": "15k",
  "tags": [
    "tools",
    "ida",
    "idapython"
  ],
  "user": "Mick",
  "time": "12 years ago",
  "comments": [
    {
      "user": "Henry Heikkinen",
      "text": "This question is pretty subjective and more like a poll. However, there probably are many plugins and scripts that would be helpful to many so this could be a community wiki.",
      "time": null
    },
    {
      "user": "Gilles 'SO- stop being evil'",
      "text": "@HenryHeikkinen Using community wiki to shoehorn polls into a questions and answers platform turned out to be a mistake, it is no longer done. See The future of community wiki. Polls are not accepted on Stack Exchange, and I voted to close accordingly.",
      "time": null
    },
    {
      "user": "Jesper.Reenberg",
      "text": "Perhaps such a subjective list could be added to the tag wiki of [idapro].",
      "time": null
    },
    {
      "user": "Rolf Rolles",
      "text": "If we take StackExchange lore out of the equation, it seems very difficult to argue that such a question is in fact \"not constructive\".  So at best we should say \"closed as not conforming to the whims of the StackExchange metamoderation community.\"\"",
      "time": null
    },
    {
      "user": "asheeshr",
      "text": "This is not a constructive question in its current form and I dont think it should be reopened. If users do feel this is an important discussion, then I suggest dealing with this as discussed here  meta.reverseengineering.stackexchange.com/questions/53/â€¦ . The discussion should be moved to meta and the best/essential plugins can be added to the Tag Wiki based on agreement/votes.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "There are binary diffing plugins also that are very handy to analyse vulnerabilities: patchdiff2 and zynamics bindiff. They can help you analyse the patches that the binary had and very usefull to analyse i.e. why the application was vulnerable before the patch and how the vendor fixed it.\n\nBesides these two plugins for IDA there's DarunGrim, another excellent binary diffing tool.\n\n",
      "votes": "11",
      "user": "jyz",
      "time": "Mar 20, 2013 at 14:18",
      "is_accepted": true,
      "comments": [
        {
          "user": "Igor Skochinsky",
          "text": "Have you tried this one? I'd be interested in your opinion.",
          "time": null
        },
        {
          "user": "jyz",
          "text": "@IgorSkochinsky it sounds really interesting. I'll take a deep look at it. Thanks!",
          "time": null
        }
      ]
    },
    {
      "content": "Here's a few I use regularly:\n\n```\n#include <idc.idc>\nstatic main()\n{\n  auto s,e,f,name;\n  s = SelStart();\n  e = SelEnd();\n  if (s==BADADDR || e==BADADDR)\n    return;\n  name = form(\"dump_%08X.bin\", s);\n  f = fopen(name,\"wb\");\n  Message(\"Saving %a-%a to %s...\", s, e, name);\n  savefile(f,0,s,e-s);\n  Message(\"done.  \n\");\n  fclose(f);\n}\n\n```\nAlso, I often write small IDC or Python snippets that do something specific to the binary I'm reversing, e.g. parsing a custom symbol table, or converting some specific byte sequence to code. These are usually not reused much.\n\n",
      "votes": "9",
      "user": "Igor Skochinsky",
      "time": "Mar 20, 2013 at 13:51",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "For analysing RPC I use mIDA:\nmIDA is a plugin for the IDA disassembler that can extract RPC interfaces from a binary file and recreate the associated IDL definition. mIDA is free and fully integrates with the latest version of IDA (5.2 or later).\nThis plugin can be used to :\n\n```\n* Navigate to RPC functions in IDA\n* Analyze RPC function arguments\n* Understand RPC structures\n* Reconstruct an IDL definition file\n\n```\nThe IDL code generated by mIDA can be, most of the time, recompiled with the MIDL compiler from Microsoft (midl.exe).\n\nmIDA is freely distributed to the community by Tenable in the hope it will be useful to you and help research engineers to work more effectively on RPC programs. However, Tenable does not provide support for this tool and offers no guarantee regarding its use or output. Please read the end-user license agreement before using this program. \n\n\n\n",
      "votes": "7",
      "user": "0xC0000022L",
      "time": "Apr 17, 2013 at 5:07",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "I'd like to add collabREate - plugin, which allow to do reverse engineering in the small team, all share the same IDA session.\n\n",
      "votes": "4",
      "user": "Anton Kochkov",
      "time": "Mar 20, 2013 at 18:16",
      "is_accepted": false,
      "comments": []
    }
  ]
}