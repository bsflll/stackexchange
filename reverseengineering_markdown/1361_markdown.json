{
  "title": "How do you deobfuscate Java classes? [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/1361/how-do-you-deobfuscate-java-classes",
  "content": "What tools or methodology do you use to de-obfuscate Java classes?\n\n",
  "votes": "0",
  "answers": 2,
  "views": "7k",
  "tags": [
    "tools",
    "java",
    "deobfuscation"
  ],
  "user": "Ange",
  "time": "12 years ago",
  "comments": [
    {
      "user": "Jurriaan Bremer",
      "text": "I once wrote a bunch of python code to handle with java files.. but that was just for parsing, not writing new java files, so it's not really useful here :) I mean, as usual, if there are specific patterns which you can statically identify, then the easiest would be by writing some custom tools, imo.",
      "time": null
    },
    {
      "user": "Dougall",
      "text": "Do you mean \"modify compiled Java classes\"? Deobfuscating a Java class is completely separate from modifying it, recompiling it or changing the bytecode.",
      "time": null
    },
    {
      "user": "amccormack",
      "text": "Do you want a tool that can decompile, deobfuscate and recompile all in one, or would you settle for a tool that will just help you deobfuscate java class names. And could you give an example of how the java classes are obfuscated because some techniques will only apply to particular obfuscation patterns.",
      "time": null
    },
    {
      "user": "asheeshr",
      "text": "How about adding some more details and making the question more specific ?",
      "time": null
    },
    {
      "user": "Antimony",
      "text": "I've written a set of tools for working with obfuscated classes, that you can find here: github.com/Storyyeller/Krakatau",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I am not exactly a Java expert but a while ago I researched the firmware of a car navigation system. For the java bits of it I used the “Java Decompiler project” and it seemed to work well for decompilation.\n\n",
      "votes": "2",
      "user": "Remko",
      "time": "Mar 29, 2013 at 11:45",
      "is_accepted": true,
      "comments": [
        {
          "user": "Jurriaan Bremer",
          "text": "One can break JD-GUI without much hassle.For example, loading a class with a function with 50k return instructions would take 10 seconds to load in JD-GUI. Another example is jumping a bit around; I made a function which jumps to an offset, does some stuff, jumps to another offset, does some more stuff, and return. And all JD-GUI would show is \"label_7:\" for the entire function. This might be interesting to document sometime.. Note that JAD appeared much better in my simple tests - it did in fact decompile these two functions correctly.",
          "time": null
        }
      ]
    },
    {
      "content": "I use Dirty JOE's integrated python module and scripts to deobfuscate Constant Pool strings. However, that requires converting algorithms from Java to Python, by hand, and is limited to pool strings.\n\n",
      "votes": "1",
      "user": "Ange",
      "time": "Mar 28, 2013 at 20:28",
      "is_accepted": false,
      "comments": []
    }
  ]
}