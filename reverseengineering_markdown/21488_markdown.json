{
  "title": "How to prevent angr from taking dozens of hours and GB of memory solving a (seemingly) simple CTF problem",
  "link": "https://reverseengineering.stackexchange.com/questions/21488/how-to-prevent-angr-from-taking-dozens-of-hours-and-gb-of-memory-solving-a-seem",
  "content": "I was recently working on a (seemingly) simple CTF challenge where the input was a base64 encoded file and the binary would check for correctness in one function call. The catch is that the checking function was about 88k basic blocks long, but is entirely linear. So each block would check for a single byte and, if incorrect, would branch to a smaller block that would call an exiting function. The operation in each block is simple:\n\n```\nif(RANDOM_CONST0 == mem[i] ^ RANDOM_CONST1){\n    goto next_basic_block;\n}else{\n    exiting_function()    //no return\n}\n\n```\nThe constants used are different for each basic block. So, it seemed like a great target for angr!\n\nAttempts (using call_state):\n\n1)\n\n2)\n\nOther misc things:\n\nQuestions:\n\nI uploaded the CTF binary here for those interested.\n\n\n\n",
  "votes": "3",
  "answers": 0,
  "views": "1k",
  "tags": [
    "angr"
  ],
  "user": "sherrellbc",
  "time": "Jun 14, 2019 at 15:25",
  "comments": [
    {
      "user": "bart1e",
      "text": "This is probably not what you want, but if you simply wanted this function to accept any input, you could just patch the badboy function, so that it jumps to the accepting code.",
      "time": null
    },
    {
      "user": "sherrellbc",
      "text": "@bart1e The flag is not in the binary per-se. The flag is encoded as a base64 file that is fed as input. All this binary does is tell you whether or not the file you fed into it is 'correct'. So patching won't help here. So my intention was to use angr to symbolically derive what the necessary input condition was such that this check function returned success. It does technically work, it just take many hours and GB of RAM to get there.",
      "time": null
    },
    {
      "user": "0xec",
      "text": "Symbolic Execution is perhaps not the right approach here. Using a binary ninja script which just does pattern matching I was able to get the flag (I_reverse_all_this_and_all_I_got_is_this_flag) in ~5 minutes.",
      "time": null
    },
    {
      "user": "sherrellbc",
      "text": "@0xec I'd agree. I was considering doing the same with IDA and just pulled out the relevant parts of each block. But the intent was to solve this with angr, so I got something to work. Then, realizing it was impractical, wanted to see why so that I might better understand the underlying issue.",
      "time": null
    },
    {
      "user": "Jasen",
      "text": "what happen after  exiting_function() ? why is that not also a goto?",
      "time": null
    }
  ],
  "answers_data": []
}