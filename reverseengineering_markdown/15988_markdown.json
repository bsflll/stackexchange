{
  "title": "Manual unpacking petya ransom [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/15988/manual-unpacking-petya-ransom",
  "content": "I want to manually unpack red Petya ransomware. I used Ollydbg for unpacking and set breakpoint on VirtualAlloc to see the \"MZ\" header in memory dump, and saved it to a file. But the saved file is not valid, PEiD say it is not a valid file for example. I think it destroys its data directories. Is there any solution for repair this executable that I can try?\n\n",
  "votes": "0",
  "answers": 2,
  "views": "680",
  "tags": [
    "ollydbg",
    "malware",
    "unpacking"
  ],
  "user": "Arian",
  "time": "7 years ago",
  "comments": [
    {
      "user": "Sigtran",
      "text": "wouldnt it be nice if you provided the samples and the unpacking steps you used to get to whatever it is you got..",
      "time": null
    },
    {
      "user": "Arian",
      "text": "@Sigtran i followed this : paulslaboratory.blogspot.nl/2014/04/…",
      "time": null
    },
    {
      "user": "Sigtran",
      "text": "I dont think this blog describes the unpacking of petya. looking at the VT detections this is Fareit/zbot.. from  2013. is this the same sample you are trying to unpack?",
      "time": null
    },
    {
      "user": "Arian",
      "text": "@Sigtran No i want to unpack red petya, but Petya also uses virtual alloc.",
      "time": null
    },
    {
      "user": "Sigtran",
      "text": "well. if you say so..   it would be easier to answer your question if you..     - provided the sample.     - provided the steps to reproduce your issue.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "hasherezade from malwarebytes did an excellent analysis for Red Petya (version 1) including a step-by-step process on how to unpack it.\n\n",
      "votes": "2",
      "user": "adrián",
      "time": "Aug 7, 2017 at 10:39",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Generally, solution is to properly understand what the malware does instead of just breakpointing VirtualAlloc and waiting for a functioning PE to be handed to you on a silver platter.\n\nThis usually entails debugging the malware before PE file is being loaded and and after the VirtualAlloc call is made, and taking not on everything done on the file. It might be beneficial to use a more interactive debugger for that phase, such as IDA or radare2, so tracking manipulation of the file will be easier.\n\n",
      "votes": "1",
      "user": "NirIzr",
      "time": "Aug 6, 2017 at 23:03",
      "is_accepted": false,
      "comments": []
    }
  ]
}