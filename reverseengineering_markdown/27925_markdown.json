{
  "title": "Read and write to register with Frida",
  "link": "https://reverseengineering.stackexchange.com/questions/27925/read-and-write-to-register-with-frida",
  "content": "I have an instruction that looks like this in Ghidra:\n\n```\n       100168ff0 e9 13 00 32     orr        w9,wzr,#0x1f\n\n```\nUsing lldb I can set a breakpoint on the instruction after this, read w9 to confirm what value it is storing and modify it if needs be.\n\nI am trying to do something similar with Frida with the following script:\n\n```\nvar t_module = 'testApp';\nvar loadAddress = Module.getBaseAddress(t_module);\nvar instructionOffset = ptr(0x168ff4);\n\nvar toAtt = loadAddress.add(instructionOffset);\n\nInterceptor.attach(toAtt, {\n    onEnter: function(args) {\n        console.log(\"[+] Module base address found at \" + loadAddress)\n        console.log(\"[+] Found instruction at \" + toAtt)\n        console.log(\"[+] Attempting to read w9: \" + this.context.w9)\n    }\n});\n\n```\nhowever trying to read w9 just returns undefined.  It is defined here so is not that Frida is calling it something else.\n\nI can confirm the right address is being reached using:\n\n```\nMemory.readByteArray(ptr(\"0x102ab4ff0\"),4)\n\n```\nwhere 0x102ab4ff0 is the address printed by the script, and comparing it to the instruction at the beginning from Ghidra.\n\nI'm not sure if I've misunderstood something about Frida or where I should attach. This is the closest question I could find and that just says to use this.context.eax.\n\n",
  "votes": "2",
  "answers": 1,
  "views": "3k",
  "tags": [
    "ios",
    "register",
    "frida",
    "arm64",
    "aarch64"
  ],
  "user": "Jon",
  "time": "Jul 1, 2021 at 11:48",
  "comments": [
    {
      "user": "James W.",
      "text": "did you see any of your logs from onEnter? ( also, you don't need to .add a ptr, you can just add the offset using .add(0x11). there is no eax in arm64 ) to answer your question please print console.log(JSON.stringify(this.context))",
      "time": null
    },
    {
      "user": "Jon",
      "text": "Thank you very much @whoopdedoo! This suggestion helped me work out the problem.  The comment about eax was more to illustrate that that was what I understood to be the correct way to address a register as opposed to eax being used by arm64, I am a complete RE n00b though so it was a fair assumption to make.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The issue was that w9 is a 32-bit register and I was using a 64 bit device.  By calling this.context.x9 for the 64 bit register the Frida script worked perfectly.  Many thanks to @whoopdedoo, their suggestion to log this.context was what led me to search more about ARM registers and realise my mistake.\n\n",
      "votes": "1",
      "user": "Jon",
      "time": "Sep 10, 2021 at 15:01",
      "is_accepted": true,
      "comments": []
    }
  ]
}