{
  "title": "Implementation of mul x86 assembly instruction in python [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/9390/implementation-of-mul-x86-assembly-instruction-in-python",
  "content": "I'm trying to implement the mul x86 assembly instruction in python and would like your advise to do it in the most pythonic way.\n\nHere is what I've done so far:\n\n```\neax = 0x51EB851F\nedx = 0x5D0FCF\n\n# mul edx\n\n#EDX (higher part of result)\n>>> hex(0x5d0fcf * 0x51EB851F & 0xFFFFFFFF00000000)\n'0x1dc79e00000000L' # To be truncated (EDX=0x001DC79E)\n\n# EAX (lower part of result)\n>>> hex(0x5d0fcf * 0x51EB851F & 0xFFFFFFFF)\n'0x66807511'\n\n```\nIs there a cleaner/more pythonic way of doing this?\n\nMany thanks in advance for your inputs.\n\n",
  "votes": "1",
  "answers": 0,
  "views": "956",
  "tags": [
    "assembly",
    "x86",
    "python"
  ],
  "user": "Sebastien Damaye",
  "time": "9 years ago",
  "comments": [
    {
      "user": "perror",
      "text": "You forgot to update the flags of the EFLAGS register. It might lead to some quite big differences when executing this fake instruction in place of the real one. In fact, you cannot expect something that simple, you should really look at the Intel manual about the instructions in details.",
      "time": null
    },
    {
      "user": "Sebastien Damaye",
      "text": "Thank you for this 1st feedback. Is there any python library/code that already does that? I would like not to reinvent the wheel... :)",
      "time": null
    },
    {
      "user": "perror",
      "text": "From what I know, amoco might be the thing you are looking for. But, there must also others that I don't know.",
      "time": null
    },
    {
      "user": "joxeankoret",
      "text": "I recommend you to take a look to Pyvex github.com/angr/pyvex and use it instead of re-inventing the wheel.",
      "time": null
    }
  ],
  "answers_data": []
}