{
  "title": "breakpoint already hit 1 time",
  "link": "https://reverseengineering.stackexchange.com/questions/30124/breakpoint-already-hit-1-time",
  "content": "I'm following Erickson 2008 Hacking the art of exploitation. The program is very simple.\n\n```\n#include <stdio.h> \n#include <string.h>\nint main() {\n\nchar str_a[20];\nstrcpy(str_a, \"Hello, world!  \n\");\nprintf(str_a); \n} \n\n```\nI set a break at line 6\n\n```\n(gdb)break 6\n(gdb)break strcpy\n\n```\n...which prompts\n\n```\nFunction \"strcpy\" not defined.\nMake breakpoint pending on future shared library load? (y or [n]) y \nBreakpoint 2 (strcpy) pending.\n(gdb) break 8 \n\n```\nThen I should be able to step through the program. With run or start and cont. However the program skips the break point 2. \"info breakpoints\" says breakpoint already hit 1 time at start. How do I make GDB stop at breakpoints even after being reached once? I thought this was the answer.\n\n```\nenable -- Enable all or some breakpoints.\nenable breakpoints -- Enable all or some breakpoints.\nenable breakpoints count -- Enable some breakpoints for COUNT hits.\nenable breakpoints delete -- Enable some breakpoints and delete when hit.\nenable breakpoints once -- Enable some breakpoints for one hit.\nenable count -- Enable some breakpoints for COUNT hits.\n\n```\nGNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2\nI'll keep digging trying to find the solution but for now it seems a mystery.\n\nEdit:\nI believe the problem lies in gdb disabling my breakpoint at start. When I start the program, it disables breakpoint 2, then I run enable 2 check info breakpoints, and it's enabled, but it never stops there. I changed the addresses and \"What\" column for formatting.\n\n```\nNum     Type                 Disp Enb  Address          What.      .         .\n1       breakpoint             keep y   0x0005 in main at **7.\n        breakpoint already hit 1 time.                                .               .\n2       STT_GNU_IFUNC resolver keep y   0x0007 <strcpy_ifunc>.        .      .\n3       breakpoint             keep y   0x0005 in main at **8. \n        breakpoint already hit 1 time\n\n```\n",
  "votes": "1",
  "answers": 1,
  "views": "328",
  "tags": [
    "gdb",
    "breakpoint"
  ],
  "user": "Michael Hearn",
  "time": "Mar 8, 2022 at 21:46",
  "comments": [],
  "answers_data": [
    {
      "content": "If your output looks like this\n\n```\n(gdb) info breakpoints\nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   0x00005555554006c1 in main at x.c:6\n        breakpoint already hit 1 time\n2       breakpoint     keep y   0x00007ffff7a7f980 in strcpy_ifunc at ../sysdeps/x86_64/multiarch/ifunc-unaligned-ssse3.h:33\n\n```\nThis means that only breakpoint 1 - the one for line 6 has been hit once. Not the one for strcpy\n\n",
      "votes": "2",
      "user": "sudhackar",
      "time": "Mar 8, 2022 at 12:48",
      "is_accepted": true,
      "comments": []
    }
  ]
}