{
  "title": "Getting rid of a custom Shell on a LiteOS based outdoor camera",
  "link": "https://reverseengineering.stackexchange.com/questions/30004/getting-rid-of-a-custom-shell-on-a-liteos-based-outdoor-camera",
  "content": "I started reversing this camera in order to get rid of the unwanted traffic it constantly does towards Chinese servers.\nI have a serial access to it thanks to an obvious UART port (bottom left in the picture).\n\nThe camera is based on a Hi3518 chip and runs Huawei LiteOS 1.4.5:\n\n```\nSPI Nor(cs 0) ID: 0xef 0x60 0x17\nBlock:64KB Chip:8MB Name:\"W25Q64FW\"\nSPI Nor total size: 8MB\n\n\n********hello Huawei LiteOS ARM926********\n\nversion : Huawei LiteOS V200R001C10B017\nopen-version : Huawei LiteOS 1.4.5\nbuild data : May  2 2018 19:06:05\n\n**********************************\n********Hello Huawei LiteOS********\n\nversion : Huawei LiteOS V200R001C10B017\nopen-version : Huawei LiteOS 1.4.5\nbuild data : May  2 2018 19:06:05\n\n********\nHuawei LiteOS # Spi Nor ID:0xEF 0x60 0x17 0x00 0x00 0x00 0x00 0x00\nSpi Nor Flash Info:\nName:\"W25Q64FW\" Size:8MB Block:64KB\nosal_proc_mkdir - parent is NULL! proc=0x80976bd0\n<6>Hisilicon Media Memory Zone Manager\n\n```\nAnd once started it does not give a typical /bin/sh to the console, but instead a custom made CLI they call a shell.\nHere are the commands that this \"shell\" has:\n\n```\nHuawei LiteOS # help                                                            \n*******************shell commands:*************************                     \n                                                                                \nap_test       armbenv       arp           call          cat           cat_logmpp\n    cd            cp                                                            \ncpup          debug         dns           excInfo       findsym       format    \n    free          help                                                          \nhiddrs        himd          himm          hwi           i2c_read      i2c_write \n    ifconfig      lddrop                                                        \nlocal_alarm   ls            mclose        memcheck      mkdir         mopen     \n    mount         msgqueue                                                      \nnand_bad      netstat       ntpdate       partinfo      partition     ping      \n    pwd           readreg                                                       \nreset         rm            rmdir         sem           sendbps       shutdown  \n    sleep_device  ssp_read                                                      \nssp_write     sta_test      statfs        swtmr         sync          systeminfo\n    task          telnet                                                        \ntftp          touch         uart_close    uart_config   uart_read     uart_write\n    umount        uname                                                         \nwriteproc     writereg      \n\n```\nNote those commands are functions from this custom CLI, not actual UNIX/Linux/busybox commands.\n\nThose are documented, as is the whole LiteOS SDK, in a pretty well put documentation available on their Github, but nothing really give access to the underlying Linux system, unlike many Hi35xx based devices, looks like their build is configured with this shell enabled.\n\nThe most annoying thing is that they also seem to have disabled U-Boot access, even trying to brute force a keystroke during power up doesn't do anything. Nevertheless I think U-Boot is looking for something on the SD-Card as it initializes the SD slot when the camera is powered on with the reset button pressed:\n\n```\nBlock:64KB Chip:8MB Name:\"W25Q64FW\"\nSPI Nor total size: 8MB\n\nEMMC/MMC/SD controller initialization.\nMMC/SD Card:\n    MID:         0x3\n    Read Block:  512 Bytes\n    Write Block: 512 Bytes\n    Chip Size:   60906M Bytes (High Capacity)\n    Name:        \"SD64G\"\n    Chip Type:   SD\n    Version:     2.0\n    Speed:       25000000Hz\n    Bus Width:   4bit\n    Boot Addr:   0 Bytes\nInterface:  MMC\n  Device 0: Vendor: Man 035344 Snr e2cf5b82 Rev: 8.5 Prod: SD64G\n            Type: Removable Hard Disk\n            Capacity: 60906.0 MB = 59.4 GB (124735488 x 512)\nPartition 1: Filesystem: FAT32 \"NO NAME    \"\n\n```\nI tried to copy the obvious, uImage, update/uboot etc... doesn't trigger anything.\n\nI also tried to overflow the shell commands, messing with /jffs0/etc/init.d/rcS, nothing worked so far.\n\nI'd be very happy with some fresh ideas I didn't try yet!\n\nEdit\n\nThe flash serving as block device is a W25Q64.W, I dumped it using a brand new CH341a and a test clip, first time I did this, very cool. Now I have this dump but the binwalk analysis doesn't look promising:\n\n```\n\nDECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n102060        0x18EAC         CRC32 polynomial table, little endian\n5767168       0x580000        JFFS2 filesystem, little endian\n6512540       0x635F9C        gzip compressed data, from Unix, last modified: 1970-01-01 00:00:00 (null date)\n6512780       0x63608C        JFFS2 filesystem, little endian\n6512968       0x636148        Zlib compressed data, compressed\n6513460       0x636334        Zlib compressed data, compressed\n6513640       0x6363E8        gzip compressed data, from Unix, last modified: 1970-01-01 00:00:00 (null date)\n[hundreds of lines of those]\n8257536       0x7E0000        JFFS2 filesystem, little endian\n\n```\nHere's the entropy graph\n\nwhich seems to indicate a huge chunk of the firmware is either encrypted of compressed.\n\n",
  "votes": "1",
  "answers": 0,
  "views": "462",
  "tags": [
    "firmware",
    "hardware",
    "serial-communication"
  ],
  "user": "iMil",
  "time": "Feb 12, 2022 at 21:53",
  "comments": [
    {
      "user": "masterX244",
      "text": "No way to pull a flash dump of the bootflash in some way? Boot log tells that there is some sort of SPI flash on the board. Post a pic of the board backside, too if possible",
      "time": null
    },
    {
      "user": "iMil",
      "text": "Yes that's exact;y what I ordered, will update the post if I get further, thanks!",
      "time": null
    },
    {
      "user": "masterX244",
      "text": "Picture of reverse side of the PCB should be quick to do though since you only need to unscrew the 4 corner screws and then make the picture of whats at the back of the board. Knowing if there is useful stuff there helps massively",
      "time": null
    },
    {
      "user": "tv athome",
      "text": "would be interested if this goes any further as I'm working on a xshcam doorbell running the same OS (Huawei liteOs 1.4.6). Block:64KB Chip:8MB Name:\"W25Q64FW\" SPI Nor total size: 8MB Camera OV9732 I can Uboot but doesn't help if there are proprietary blobs for the drivers for camera module and wifi etc..",
      "time": null
    },
    {
      "user": "masterX244",
      "text": "Linux kernels are usually compressed and get uncompressed by a small stub. Possible to share the flashdump? Also: JFFS2 allows compressed files, too.",
      "time": null
    }
  ],
  "answers_data": []
}