{
  "title": "Z3 and If-logic",
  "link": "https://reverseengineering.stackexchange.com/questions/22301/z3-and-if-logic",
  "content": "Z3 is a fantastic tool which helped me a lot! But sometimes I'm stuck on the binary code which implements custom If-logic. Recursive factorial function is good example of it:\n\n```\ndef fact(x):\n    if x == 1:\n        return 1\n    else:\n        return x * fact(x - 1)\n\n```\nI'm aware of the fact Z3 python has If() function but it can only switch between two values.\n\nHere is example of simple keygen-me which I wrote to illustrate this problem. Is there a way to solve it cleanly with Z3?\n\n```\nimport sys\n\ndef fact(x):\n    if x == 1:\n        return 1\n    else:\n        return x * fact(x - 1)\n\ndef check_serial(s):\n\n    for i in range(len(s)):\n        if s[i] < 10:\n            print(\"[!] poor serial number\")\n            exit(0)\n\n    facts = [fact(s[i]) for i in range(len(s))]\n\n    xor = 0\n    for i in range(len(s)):\n        xor = xor ^ facts[i]\n\n    return xor\n\n\nif len(sys.argv) != 9:\n    print(\"[!] Usage: %s x x x x x x x x, where is number > 10\" % sys.argv[0])\n    exit(0)\n\n\nnums = [int(x) for x in sys.argv[1:]]\n\n\nif check_serial(nums) == 0x3fb4b7f405d4fb5e2a6740000:\n    print(\"[+] serial number is valid, congratz!\")\nelse:\n    print(\"[!] serial number is invalid\")\n\n```\n",
  "votes": "3",
  "answers": 0,
  "views": "175",
  "tags": [
    "python",
    "crackme"
  ],
  "user": "eXp",
  "time": "Oct 12, 2019 at 12:27",
  "comments": [
    {
      "user": "Paweł Łukasik",
      "text": "z3 is not very good with recursive function. You can find similar questions on SO",
      "time": null
    }
  ],
  "answers_data": []
}