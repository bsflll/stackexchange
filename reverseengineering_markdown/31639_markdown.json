{
  "title": "A few questions about reloc tables and base memory",
  "link": "https://reverseengineering.stackexchange.com/questions/31639/a-few-questions-about-reloc-tables-and-base-memory",
  "content": "A friend and I are poking around with some 32-bit Windows binaries and wanted to get some info about relocation tables.\n\n",
  "votes": "3",
  "answers": 1,
  "views": "154",
  "tags": [
    "memory",
    "relocations"
  ],
  "user": "Kalamalka Kid",
  "time": "Mar 7, 2023 at 22:09",
  "comments": [],
  "answers_data": [
    {
      "content": "Relocation tables exist to load a binary To a different Imagebase instead of the preferred Imagebase embedded in pe header\n\nImagebase relocation is mostly applicable to dlls as image base conflicts have more chances to happen in dlls\n\nExe is normally the first image to be loaded so it normally tends to get its preferred imagebase 0x400000 in x86\n\nYou can compile an exe without relocation table using /Fixed /DynamicBase:no linker options\n\nYou can rip out a relocation table and theoretically the binary should work alright at its preferred imagebase\n\n",
      "votes": "1",
      "user": "blabb",
      "time": "Mar 8, 2023 at 4:51",
      "is_accepted": true,
      "comments": [
        {
          "user": "peter ferrie",
          "text": "subject to ASLR restrictions, depending on the size of the stack and heap, which might end up occupying the place where the image wants to go.",
          "time": null
        },
        {
          "user": "blabb",
          "text": "@peterferrie  ðŸ˜€ yes theoratically i meant",
          "time": null
        }
      ]
    }
  ]
}