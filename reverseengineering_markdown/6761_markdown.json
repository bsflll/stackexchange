{
  "title": "Modify py2exe packed executable",
  "link": "https://reverseengineering.stackexchange.com/questions/6761/modify-py2exe-packed-executable",
  "content": "I have an application in Python compiled with py2exe.\nI have successfully extracted python scripts using Py2ExeDumper converted to .py using Easy Python Decompiler.\n\nI made some modification to the python code and recompiled .py files to .pyc files.\n\nQuestion : How can I rebuild the exe file using the new edited .pyc files ?\n\nThanks\n\n",
  "votes": "1",
  "answers": 2,
  "views": "3k",
  "tags": [
    "python",
    "patch-reversing"
  ],
  "user": "itseeder",
  "time": "Dec 4, 2014 at 17:04",
  "comments": [],
  "answers_data": [
    {
      "content": "Instead of trying to rebuild the EXE from the .pyc files, you can just use py2exe to build a new EXE from the modified .py files.\n\nAlternatively, if you really want to replace the library in the original EXE, you would need to extract the EXE's PYTHONSCRIPT resource with a resource editor, un-marshal the array of code objects, replace the code object of your choosing in the array, re-marshal the array of code objects, and replace the PYTHONSCRIPT resource data with this new marshaled stream. You can look at _create_script_data in http://sourceforge.net/p/py2exe/svn/HEAD/tree/trunk/py2exe-3/py2exe/runtime.py for more details.\n\n",
      "votes": "1",
      "user": "Jason Geffner",
      "time": "Dec 4, 2014 at 18:08",
      "is_accepted": true,
      "comments": [
        {
          "user": "itseeder",
          "text": "This project is very big and have a lot of .pyc files. That's the reason why i am searching to replace the entire library in exe. There is a way to make setup.py for py2exe automatically from directory?",
          "time": null
        },
        {
          "user": "itseeder",
          "text": "This point it's not clear: \"replace the code object of your choosing in the array, re-marshal the array of code objects\" can you explain more detailed please?",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "Questions related to writing Python code to handle arrays and marshal data should be asked on stackoverflow.com",
          "time": null
        }
      ]
    },
    {
      "content": "A py2exe generated executable basically consists of three main parts - PYTHONSCRIPT, the runtime python dll & library.zip.\n\nPYTHONSCRIPT can be modified with a decent resource editor. It is basically a marshalled array holding pyc files. The main script of the application is usually stored here.\n\nIn order to make changes you need to unmarshal the code objects, decompile it to py, make changes, recompile back to pyc, marshal it back to generate a new PYTHONSCRIPT and finally update the executable.\n\nModifying library.zip is easier as it is a standard zip file. It contains other pyc/pyo files. You can decompile them, make changes, recompile it back to pyc/pyo, and zip them up. Next replace the overlay in the executable with your new zip file and you are done.\n\nIn order to automate some of the above steps you can use a tool Py2Exe Binary Editor\nNote: I am the author of the above tool\n\n",
      "votes": "1",
      "user": "0xec",
      "time": "Dec 20, 2014 at 6:22",
      "is_accepted": false,
      "comments": []
    }
  ]
}