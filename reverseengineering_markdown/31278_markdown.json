{
  "title": "reverse engineering an APK file to find HTTP requests in the source code",
  "link": "https://reverseengineering.stackexchange.com/questions/31278/reverse-engineering-an-apk-file-to-find-http-requests-in-the-source-code",
  "content": "I've extracted an apk(react native) with dex2jar and jar to java through jd-qui and also with apktool, and I can view the source code but there is no clue where are the HTTP requests in the source code.\n\nWhen I intercept the apk traffic I can see all the requests to graphql endoint but I cannot see in the source code, where they are triggered or stored.\n\nI searched the extracted source code with some keywords such as grahpql endpoint name, and the server address but still no result.\n\nAnd the code seems not obfuscated to me, just some parts are like;\n\n```\n@Metadata(d1 = {\"\\000\\026  \n\\002\\030\\002  \n\\002\\020\\000  \n\\000  \n\\002\\020\\002  \n\\000  \n\\002\\030\\002  \n\\000\\bf\\030\\0002\\0020\\001J\\020\\020\\002\\032\\0020\\0032\\006\\020\\004\\032\\0020\\005H&\\006\\006\"}, d2 = {\"Lcom/x/z/E2EModule;\", \"\", \"launch\", \"\", \"intent\", \"Landroid/content/Intent;\", \"app_release\"}, k = 1, mv = {1, 7, 1}, xi = 48)\npublic interface E2EModule {\n  void launch(Intent paramIntent);\n}\n\n```\nIs there any way to reach where these requests are triggered or stored on the source code?\n\n",
  "votes": "1",
  "answers": 0,
  "views": "365",
  "tags": [
    "android",
    "apk"
  ],
  "user": "user42721",
  "time": "Dec 15, 2022 at 18:07",
  "comments": [
    {
      "user": "Andrew T.",
      "text": "Cross-posted from Android.SE: android.stackexchange.com/q/249656/44325",
      "time": null
    }
  ],
  "answers_data": []
}