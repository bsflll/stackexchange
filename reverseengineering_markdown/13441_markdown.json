{
  "title": "Suppress IDA welcome dialog in batch mode",
  "link": "https://reverseengineering.stackexchange.com/questions/13441/suppress-ida-welcome-dialog-in-batch-mode",
  "content": "I try to disassemble a bunch of PE files with the free version of IDA.\nHowever, I can't figure out how to suppress the beginning welcome message:\n\n\n\nMy batch command looks like this:\n\n```\n\"C:\\Program Files (x86)\\IDA Free\\idag\" -c -B target.exe\n\n```\nAdditionally, I also checked the C:\\Program Files (x86)\\IDA Free\\cfg folder, especially idagui.cfg.\n\nDo I consider the wrong version? Is it a limitation of the free IDA version?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "889",
  "tags": [
    "ida",
    "disassembly",
    "windows",
    "pe"
  ],
  "user": "knx",
  "time": "Sep 6, 2016 at 12:58",
  "comments": [
    {
      "user": "Nordwald",
      "text": "Please note batch mode refers to using ida in an automated fashion, utilzing a script which is run on startup like explained by @Nirlzr",
      "time": null
    },
    {
      "user": "knx",
      "text": "Thanks @Nordwald - executing the above command should however generate a meaningful target.asm file of the original target.exe? Correct? Or are there any drawbacks/errors when not supplying a script file during the process of ASM generation? I understand that a batch mode is normally only reasonable for advanced tasks, controlled by a script. But I only want to generate the ASM files for a bigger corpus of executables..",
      "time": null
    },
    {
      "user": "Nordwald",
      "text": "When using IDA Pro, the above command line works without welcome screen (using idaq).  This seems to be version dependant",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "the -A flag only works with -S (used for executing a script when IDA starts).\nWithout it, -A has no meaning: What will IDA do when the binary it is running? will it hang forever? will it save the IDB? will it exit afterwards? all of these questions are answered with a script, actually doing those things.\n\nLogically, You must suppliy a script for IDA to function autonomously.\n\nPlease also note these two hickups:\n\n",
      "votes": "3",
      "user": "NirIzr",
      "time": "Sep 6, 2016 at 10:19",
      "is_accepted": false,
      "comments": [
        {
          "user": "knx",
          "text": "Thank you for your answer! Just for clearification: my understanding so far was, that performing the above mentioned command (without -S), IDA will open the file, performing the autoanalysis and saves the ASM file to a location. Afterwards it closes the process and I can proceed with the next executable. So, of course there is no additionally processing, as my pure goal is the generation of the ASM file. So to reach this goal, the above mentioned processing should be right? As soon as I start supplying an additional script file, I HAVE to supply further commands (as you mentioned) - correct?",
          "time": null
        },
        {
          "user": "NirIzr",
          "text": "> \"IDA will open the file, performing the autoanalysis and saves the ASM file to a location.\" AFAIK this is incorrect. There's no default behavior for -A. If that's what you want to do, you'll have to write a small idc/ipython script that performs these operations.",
          "time": null
        },
        {
          "user": "knx",
          "text": "Okay - please forget about the -A - as I'm performing just the following command \"C:\\Program Files (x86)\\IDA Free\\idag\" -c -B target.exe. For me it seems to work fine (roughly inspected the generated ASM files). Sorry, I will delete the mentioned -A switch... it just causes confusion.",
          "time": null
        }
      ]
    }
  ]
}