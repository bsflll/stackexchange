{
  "title": "finding x86 hardware checks in vxworks 5.2",
  "link": "https://reverseengineering.stackexchange.com/questions/33316/finding-x86-hardware-checks-in-vxworks-5-2",
  "content": "I have a piece of old equipment that has an embedded x86 computer inside. I'd like to replace the hard drive before it fails, but so far it's hung with every replacement disk I've tried.\n\nThe hang occurs after VxWorks starts loading and before messages about loading the userland app, so I believe the OS itself is doing some sort of hardware check.\n\nSince it's an OS, it starts in one execution mode and switches modes one or more times. That complicates loading it into ghidra.\n\nI am able to partially boot the disk image using qemu; it hangs with the same text on the screen as the hardware does when a different physical disk is present. I dumped memory from qemu when it hung (IIRC by attaching gdb) and loaded that into ghidra, but wasn't sure where to go from there. Presumably the elf file I got from the memory dump includes PC, stack, registers, etc - but I don't know where to find that stuff.\n\nHow would you go about analyzing an os kernel and/or tracking down this hardware check logic?\n\nI'm open to using any tools that are open or at least free; the RE tool I'm most familiar with is ghidra.\n\nI've found a few ghidra extensions for vxworks, but when I try them on the files I have they don't recognize vxworks structs - I guess they don't work with this particular vxworks version.\n\nIf I can find the check(s), I hope to gain some understanding of their nature - do they only accept with a specific brand/model of drive, a specific capacity range, or something else. Once I understand that, I can locate matching hardware or attempt to patch the check to work with hardware I have.\n\n",
  "votes": "0",
  "answers": 0,
  "views": "45",
  "tags": [
    "x86",
    "ghidra",
    "embedded"
  ],
  "user": "Mark",
  "time": "Nov 25, 2024 at 4:43",
  "comments": [],
  "answers_data": []
}