{
  "title": "Deducing register contents through IDA scripting",
  "link": "https://reverseengineering.stackexchange.com/questions/11209/deducing-register-contents-through-ida-scripting",
  "content": "In some of my IDA scripts, it would be useful to be able to reason about which variables were stored in which registers at a given place in the program. One example is the following:\n\nmov     rdx, [rbp+client]\nmov     rax, [rbp+channel]\nmov     rsi, rdx\nmov     rdi, rax\ncall    sub_41002D\n\nIt would be useful if I could deduce that, at the time when sub_41002D is called, rdi contains the variable called \"channel\" and rsi contains the variable \"client\".\n\nIs there any IDA scripting feature which allows me to do this, or will I need to roll my own solution? If so, is there a name for what I'm trying to do? Do algorithms for this already exist? Any pointers would be appreciated.\n\n",
  "votes": "1",
  "answers": 0,
  "views": "167",
  "tags": [
    "ida",
    "idapython"
  ],
  "user": "TorbenB",
  "time": "Oct 29, 2015 at 17:42",
  "comments": [
    {
      "user": "Guntram Blohm",
      "text": "There was a user who wanted to do something similar, but not for IDA, a while ago. I'm not aware of anything existing like this for IDA, and the neccesary algorithms and data structures might be a bit complex for IDA's idc language, but my answer to that question might give you some ideas.",
      "time": null
    },
    {
      "user": "TorbenB",
      "text": "@GuntramBlohm thank you for the pointer. I was planning on using IDAPython.",
      "time": null
    }
  ],
  "answers_data": []
}