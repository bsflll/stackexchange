{
  "title": "How to find Xref to strings in proprietary binaries?",
  "link": "https://reverseengineering.stackexchange.com/questions/15359/how-to-find-xref-to-strings-in-proprietary-binaries",
  "content": "When I try to disassemble proprietary ARM binaries (no symbol), like Android phone's boot loaders, I find there are a bunch of strings that do not have any \"Xrefs to\" in IDA Pro.\n\nThe image has already been rebased, and some strings have the Xrefs, while others do not. IDA does not recognize some of them as strings or data. Also, I tried to search the address as byte sequence, there is no result too.\n\nAny good practices to find how these strings are referenced?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "2k",
  "tags": [
    "ida",
    "android",
    "arm",
    "binary",
    "kernel"
  ],
  "user": "WindChaser",
  "time": "May 17, 2017 at 7:21",
  "comments": [],
  "answers_data": [
    {
      "content": "There's really no standard way.\n\nIt's possible that the code that references them isn't recognized as code, which would make it just a matter of defining it.\n\nIt's possible that they're referenced indirectly, like to an array - is there a value somewhere before them that's referenced?\n\nIt's possible that they're referenced indirectly in some way that IDA doesn't recognize it.\n\nIt probably won't work great for Android, but I've had luck using a break-on-read watchpoint on a string like that to find out where it's referenced from.\n\n",
      "votes": "0",
      "user": "Ron Bowes",
      "time": "May 17, 2017 at 22:36",
      "is_accepted": true,
      "comments": [
        {
          "user": "WindChaser",
          "text": "If referenced indirectly, I can find the address as byte sequence in IDA or other tools like 010 Editor, right?",
          "time": null
        }
      ]
    }
  ]
}