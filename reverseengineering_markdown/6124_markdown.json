{
  "title": "Why was my memory breakpoint not triggered in OllyDbg?",
  "link": "https://reverseengineering.stackexchange.com/questions/6124/why-was-my-memory-breakpoint-not-triggered-in-ollydbg",
  "content": "I am currently battling this protection on an 32-bit executable. \n\nAt some point during it's runtime, the protection gets the address of DbgUiRemoteBreakin and writes a JMP to ExitProcess as an anti-attach technique. I decided to place a memory breakpoint on write(I also tried access) on that location figuring at the very least I'd find out what piece of code alters the code. Upon setting the breakpoint I hit F9 only for my memory bp to never be triggered, I tried multiple times. The code was altered, but my memory bp was not triggered. This is the first time that a memory breakpoint was not triggered for me. I am puzzled as to why this has happened. My only guess is that DbgUiRemoteBreakin is located in ntdll.dll and that is why guard pages don't work there.\nThere were also instances where I had a crash when I set a memory bp on that function.\n\nHowever I am hoping somebody has encountered this and can explain more in depth. My ollydbg version is 1.10.\n\n",
  "votes": "5",
  "answers": 1,
  "views": "4k",
  "tags": [
    "ollydbg",
    "pe",
    "anti-debugging",
    "protection"
  ],
  "user": "farmdve",
  "time": "Aug 26, 2014 at 2:58",
  "comments": [
    {
      "user": "0xec",
      "text": "Memory breakpoints in Ollydbg can be bypassed",
      "time": null
    },
    {
      "user": "0xec",
      "text": "Try using a newer version of Olly or x64dbg.",
      "time": null
    },
    {
      "user": "JamalS",
      "text": "As your executable is 32 Bit you can use the freeware version of IDA Pro. x64dbg is another good tool but still a work in progress and the disassembly is not even at Olly's standards. If you have a Mac or Linux machine you could also try Hopper disassembler; very user friendly and powerful. By the way, have you tried setting a hardware rather than software BP?",
      "time": null
    },
    {
      "user": "farmdve",
      "text": "The executable is heavily protected, only ollydbg has the plugins I need to run it correctly.",
      "time": null
    },
    {
      "user": "0xec",
      "text": "Try using some anti-debug plugins for Olly. -> ScyllaHide",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The most likely reason why your breakpoint didn't get hit is because the protected file removed it.\n\nEdit: If the breakpoint was hardware-based, then the protected file can use GetThreadContext(), erase the DR entries, SetThreadContext(). If the breakpoint was page-protection-based, then the protected file can use VirtualProtect().\n\n",
      "votes": "2",
      "user": "perror",
      "time": "Aug 29, 2014 at 6:45",
      "is_accepted": true,
      "comments": [
        {
          "user": "farmdve",
          "text": "I am sorry, but you are incorrect. Memory breakpoints are not Hardware breakpoints. Only hardware breakpoints can be removed/changed via Set/GetThreadContext.",
          "time": null
        },
        {
          "user": "peter ferrie",
          "text": "@farmdve, if Olly used VirtualProtect() to guard the page, then the protected file simply used VirtualProtect() to make it writable, removing the guard protection as a side-effect.  Try using the hardware break-on-write instead.  If that doesn't work, then it's because the protected file removed it.",
          "time": null
        },
        {
          "user": "zetavolt",
          "text": "The only problem with this theory is that subsequent VirtualProtect calls would break. In any case, testing this theory is much easier with the simple Ctrl-G for VirtualProtect / VirtualAlloc approach.",
          "time": null
        },
        {
          "user": "peter ferrie",
          "text": "@zv_, why would subsequent VirtualProtect calls break?  Anyway, I just confirmed my theory with a crafted file.  It calls VirtualProtect() which removes OllyDbg's memory breakpoint.  It behaves exactly like what farmdve is seeing.",
          "time": null
        },
        {
          "user": "zetavolt",
          "text": "break on, not break",
          "time": null
        }
      ]
    }
  ]
}