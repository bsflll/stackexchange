{
  "title": "windbg stopped after I set up a breakpoint, keeping busing",
  "link": "https://reverseengineering.stackexchange.com/questions/16964/windbg-stopped-after-i-set-up-a-breakpoint-keeping-busing",
  "content": "\nI'm studying reverse engineering, I wrote the following code to see how it is to pass struct variables in the disassembly.\n\n```\nstruct s {\n    int a;\n    int b;\n    int c;\n};\n\nstruct s get_some_values(int a)\n{\n    struct s rt;\n\n    rt.a = a + 1;\n    rt.b = a + 2;\n    rt.c = a + 3;\n\n    return rt;\n}\n\nint main()\n{\n    get_some_values(4);\n}\n\n```\n\nThe env is: \n\n\nSince then, at the left corner of windbg, its \"BUSY\", and not responding to any commands like 'g'.\n\nHere's the screenshot:\n\n\nAny idea what I'm facing now?\nThanks in advance!\n\n",
  "votes": "1",
  "answers": 0,
  "views": "216",
  "tags": [
    "x86",
    "windbg",
    "breakpoint"
  ],
  "user": "Michael",
  "time": "Dec 13, 2017 at 4:17",
  "comments": [
    {
      "user": "EWD-0-",
      "text": "Isn't that easier to use \"bu YourModuleName!main\"?",
      "time": null
    },
    {
      "user": "blabb",
      "text": "returnvalue!main does not appear to be a correct symbol  if you are looking to set a bp on functiion main of the exe it should be yourmodname!main where yourmodname is the actual modulename liike foo blah bar or whatever",
      "time": null
    }
  ],
  "answers_data": []
}