{
  "title": "Searching for a sequence of bytes in IDA",
  "link": "https://reverseengineering.stackexchange.com/questions/19807/searching-for-a-sequence-of-bytes-in-ida",
  "content": "Using an hardware breakpoint, I found with Ollydbg that a crackme was checking for the isDebuggerPresent flag. I'd like to find this part of the code using IDA now.\n\nI first looked in the import table, but couldn't find the function in the list and came to the conclusion that the crackme was doing it directly instead of using kernel32.dll. Then I tried to use the \"sequence of bytes\" search in IDA, using the bytes in OllyDbg's hex dump view corresponding to MOV EAX,DWORD PTR FS:[30] (64 A1 30 00 00 00), no chance here.\n\nI must be missing something very obvious here, this is the most basic anti-debugging technique so there must be a simple way to locate it using IDA, right?\n\nEdit: Screenshot in Ollydbg\n\n\nEdit: Where the check actually happens\n\n\n",
  "votes": "0",
  "answers": 1,
  "views": "987",
  "tags": [
    "ida",
    "anti-debugging"
  ],
  "user": "Stud",
  "time": "Nov 3, 2018 at 10:06",
  "comments": [
    {
      "user": "Stud",
      "text": "Yes it does. But my goal is to be able to find it using IDA too. The address where the code is in Ollydbg is not in the range of the code shown in IDA.",
      "time": null
    },
    {
      "user": "Stud",
      "text": "Sorry I though I uploaded a wrong screenshot. But this is actually where it breaks now.",
      "time": null
    },
    {
      "user": "joxeankoret",
      "text": "Can you share the binary? It's very hard to help only with that information.",
      "time": null
    },
    {
      "user": "Stud",
      "text": "Sure, here's the link to the crackme: crackmes.one/crackme/5b502da833c5d41c0b8ae514",
      "time": null
    },
    {
      "user": "user202729",
      "text": "@Biswapriyo Read crackmes faq...",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Of course you can't find it in the crackme, because the code isn't there. It's easy to determine which file the code belongs to:\n\n\n\nIt's KERNELBA, so it probably comes from a system dll (KERNELBASE.dll?). We expect to find code in module named crackme4 or similar.\n\nLooking at the stack, it's easy to find the address:\n\n\n\nThat one is not prefixed with <system_module_name>., so I guess it's code from the crackme.\n\nIn case the stack is corrupted, it's possible to use Alt+F9 (execute until user code).\n\nAbout finding the corresponding address in IDA, it's described at this question:\n\nand\n\n",
      "votes": "3",
      "user": "user202729",
      "time": "Nov 4, 2018 at 13:57",
      "is_accepted": true,
      "comments": []
    }
  ]
}