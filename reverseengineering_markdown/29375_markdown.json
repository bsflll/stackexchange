{
  "title": "How to find offset to a function address from the base address in decompiled image (IDA or Ghidra)",
  "link": "https://reverseengineering.stackexchange.com/questions/29375/how-to-find-offset-to-a-function-address-from-the-base-address-in-decompiled-ima",
  "content": "Let's say there is a default base address for the application image on both IDA and Ghidra and it is equal to 140 000 000.\n\nIf the function address is: 140 039 ea0\n\nDoes it mean that the offset from the base address to that function address is 0x39ea0?\n\nThe reason for asking is that when I am setting the hook like this:\n\nHookInfo{(void**)&gladius::get().gamemain, gamemainHooked}\n\nwhere HookInfo = std::pair<void**, void*>;\n\nThe gamemain address is derived from baseAddress of the main process + offset (I am sure it works as intended) is saying that there is read access violation at that address.\n\n",
  "votes": "2",
  "answers": 1,
  "views": "6k",
  "tags": [
    "decompilation",
    "address",
    "offset",
    "hexadecimal"
  ],
  "user": "Irbis77",
  "time": "Oct 6, 2021 at 16:44",
  "comments": [],
  "answers_data": [
    {
      "content": "Found of how it works.\n\nbaseAddress + Offset / (2*sizeof(pointerSize)),\ni.e.\n\n```\nDWORD_PTR* address = baseAddress + 0x39ea0 / (2*sizeof(DWORD))\n\n```\nNote: I don't quite know where why the size is twice as big in this case\n\nI.e. when simply doing something like: base_address = (DWORD_PTR)GetModuleHandle(NULL);\nyou will get back the address of the application you are currently building. So, if as in my case you are building the proxy dll, then you will get it's base address.\n\nWhile the function which I was trying to hook was in the .exe file of the program, which that dll will be hooked at.\nSo, what you really want is:\n\n```\nbaseAddressPtr = (DWORD_PTR*)GetModuleHandleA(\"<YourProgram>.exe\");\n\n```\n",
      "votes": "1",
      "user": "Irbis77",
      "time": "Oct 11, 2021 at 18:21",
      "is_accepted": true,
      "comments": []
    }
  ]
}