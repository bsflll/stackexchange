{
  "title": "Find out a Java class file's compiler version",
  "link": "https://reverseengineering.stackexchange.com/questions/1328/find-out-a-java-class-files-compiler-version",
  "content": "I have a java class file. How do I find out the version of the compiler used to compile this file? I'm on Ubuntu Server 12.04.\n\n",
  "votes": "8",
  "answers": 3,
  "views": "30k",
  "tags": [
    "compilers",
    "java"
  ],
  "user": null,
  "time": "Mar 27, 2013 at 16:24",
  "comments": [],
  "answers_data": [
    {
      "content": "The JDK includes a javap command. It gives a lot information, but you can use it like this:\n\n```\njavap -verbose yourClass | grep version\n\n```\nExample output:\n\n```\n  minor version: 0\n  major version: 51\n\n```\nThe major version tells you which version the compiler had:\n\n```\nJ2SE 8 = 52,\nJ2SE 7 = 51,\nJ2SE 6.0 = 50,\nJ2SE 5.0 = 49,\nJDK 1.4 = 48,\nJDK 1.3 = 47,\nJDK 1.2 = 46,\nJDK 1.1 = 45\n\n```\n",
      "votes": "22",
      "user": "Jules",
      "time": "Nov 10, 2015 at 10:22",
      "is_accepted": true,
      "comments": [
        {
          "user": "Antimony",
          "text": "for 45, the exact compiler version depends on the minor version. 45.3 would be 1.0.2 I beleive.",
          "time": null
        },
        {
          "user": "David Phillips",
          "text": "This actually tells you the version of the class file format, not the version of the compiler or other tool used to generate it. javac supports the -target or --release flag to generate class files targeted at earlier versions of the JDK.",
          "time": null
        },
        {
          "user": "Ayfri",
          "text": "Is there a way to get the version but in the code ?",
          "time": null
        }
      ]
    },
    {
      "content": "Again the file(1) utility and libmagic(3), on which it is based, can be your friend:\n\n```\n$ file Gwan.class\nGwan.class: compiled Java class data, version 50.0 (Java 1.6)\n\n```\n",
      "votes": "15",
      "user": "0xC0000022L",
      "time": "Mar 27, 2013 at 17:11",
      "is_accepted": false,
      "comments": [
        {
          "user": "avgvstvs",
          "text": "What if you're on Windows?",
          "time": null
        },
        {
          "user": "0xC0000022L",
          "text": "@avgvstvs: then you can still resort to something like Cygwin. Honestly, if you limit your own toolset by restricting your RCE efforts to a single host OS, that's your own fault. Simply put: know what tools to use when and don't be picky based on arbitrary and artificial limitations.",
          "time": null
        },
        {
          "user": "avgvstvs",
          "text": "Cygwin introduces an unnecessary dependency.  If you're reversing .class files, on *every JVM you're going to have access to javap.  I don't disagree with the rest of what you're saying, but I'm lazy and if I don't have to start a vm or d/l cygwin I'm happier.",
          "time": null
        }
      ]
    },
    {
      "content": "You're looking for this on the command line (for a class called MyClass):\n\nOn Unix/Linux:\n\n```\njavap -verbose MyClass | grep \"major\"\n\n```\nOn Windows:\n\n```\njavap -verbose MyClass | findstr \"major\"\n\n```\nYou want the major version from the results. Here are some example values:\n\n",
      "votes": "0",
      "user": "Sachin Kokate",
      "time": "Jul 27, 2017 at 8:55",
      "is_accepted": false,
      "comments": []
    }
  ]
}