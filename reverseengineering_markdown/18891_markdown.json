{
  "title": "grep -E with Radare2",
  "link": "https://reverseengineering.stackexchange.com/questions/18891/grep-e-with-radare2",
  "content": "With Radare2, I love the iI command.  \n\nI want to limit the output with grep or radare's own grep syntax.\n\nHow do I run a iI | grep -E 'bits | pic | stripped' against my binary?\n\n```\n[0x100001200]> iI\narch     x86\nbinsz    38688\nbintype  mach0\nbits     64\n....\n..\n.\n\n```\nMy intention is to run this command inside a python script using r2pipe.\n\n",
  "votes": "3",
  "answers": 1,
  "views": "2k",
  "tags": [
    "radare2"
  ],
  "user": "rustyMagnet",
  "time": "Jul 25, 2018 at 5:08",
  "comments": [],
  "answers_data": [
    {
      "content": "Radare's grep is done by using the ~ character.\n\n```\n ~?<br>\n|Usage: [command]~[modifier][word,word][endmodifier][[column]][:line]\n\n```\nSo to have the output you want just run:\n\n```\niI~bits,pic,stripped\n\n[0x100001200]> iI~bits,pic,stripped\nbits     64\npic      true\nstripped true\n\n```\nThe same command you should run in your script. There's a lot of more that this grep can do. To get the help of it just run the ~?\n\n",
      "votes": "6",
      "user": "Evan Carroll",
      "time": "Oct 27, 2018 at 11:05",
      "is_accepted": true,
      "comments": [
        {
          "user": "rustyMagnet",
          "text": "Thanks. Just what I was looking for. Next I will try and work out why the json flag + grep instruction doesn't work with: iIj~bits,pic,stripped. But I can do that solo. Thanks again.",
          "time": null
        },
        {
          "user": "Paweł Łukasik",
          "text": "json supports a limited grep in a form: iIj~{bits} but you would have to grep for the three things separately.",
          "time": null
        },
        {
          "user": "rustyMagnet",
          "text": "That actually gives me a better answer.  I can now use iIj~{stripped} as it return the value (true / false) instead of the Key Value Pair you get with iI~stripped (stripped true)",
          "time": null
        }
      ]
    }
  ]
}