{
  "title": "How to create function prototype that recognizes arguments passed by reference in IDA Pro",
  "link": "https://reverseengineering.stackexchange.com/questions/11305/how-to-create-function-prototype-that-recognizes-arguments-passed-by-reference-i",
  "content": "I have a function prototype generated by IDA that looks like this:\n\n\n\nHowever, it looks like there is a struct being referenced at the instruction lea edi, [esp+290h+var_240]. I would like IDA to reference this passed address as an argument in its function prototype.\n\nI have tried the approach below, but it is clear that it does not work.\n\n\n\nWhat I would like to see is something like this\n\n\n\nAny help or suggestions would be greatly appreciated!\n\n",
  "votes": "3",
  "answers": 1,
  "views": "4k",
  "tags": [
    "ida",
    "x86",
    "calling-conventions"
  ],
  "user": "itsbriany",
  "time": "Nov 11, 2015 at 2:44",
  "comments": [],
  "answers_data": [
    {
      "content": "My guess is that the function signature should be something like:\n\n```\nint __usercall Call_HTTP@<eax>(int x, int y, void* http_object@<edi>);\n\n```\nYou can change the type of the http_object by adding a proper structure for this object to the known IDA structures and pass the real type instead of void*.\n\nFor more information on function signature, see the IDA help on Set function/item type.\n\nEdit\n\nThe right signature should be:\n\n```\nint __userpurge Call_HTTP@<eax>(int x, int y, void* http_object@<edi>);\n\n```\nAs stated by @itsbriany:\n\n",
      "votes": "7",
      "user": "Neitsa",
      "time": "Nov 12, 2015 at 10:27",
      "is_accepted": true,
      "comments": [
        {
          "user": "itsbriany",
          "text": "Thanks, it works! I would also like to add that the calling convention would be _userpurge because the calling convention was originally _stdcall. This is because in _stdcall and _userpurge, the callee cleans up the stack. In _cdecl and _usercall, the caller cleans up the stack :)",
          "time": null
        },
        {
          "user": "Neitsa",
          "text": "@itsbriany Oops, sorry for the error... Nice catch! I'll edit my post.",
          "time": null
        }
      ]
    }
  ]
}