{
  "title": "Analyzing and deobfuscating complex JS code [duplicate]",
  "link": "https://reverseengineering.stackexchange.com/questions/19980/analyzing-and-deobfuscating-complex-js-code",
  "content": "I am looking to reverse engineer a very ugly piece of JS found here. \n\nAs far as I can tell, this script generates and sets some cookies on my browser that identify it on the site. Deobfuscating it seems extremely difficult as it is encrypted by Jscrambler and it is so large that seemingly no site such as https://beautifier.io/ can do anything with it.\n\nThe goal is to be able to generate these cookies manually and post them to the site so that I do not need a browser to access the site.\n\nMy questions are: \n\n1) Is there a way to debug this code in such a s way as to identify which lines generate and set the cookies? I have tried setting breakpoints on cookie set which did not seem to help.\n\n2) Can this be deobfuscated easily by a JS noobie such as myself and what tools should I be using?\n\nEDIT: If anyone can get involved I would be willing to compensate.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "2k",
  "tags": [
    "debugging",
    "obfuscation",
    "javascript"
  ],
  "user": "Joxrox",
  "time": "6 years ago",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "You could always attempt to instrument one of the open source JS engines (V8 comes to mind) and debug it there ... of course if the JS script in question relies on the DOM being available, you may have to improvise.",
      "time": null
    },
    {
      "user": "user202729",
      "text": "The easier way would be to actually use a browser. Even if it's in a script, there are headless browsers.",
      "time": null
    },
    {
      "user": "Johann Aydinbas",
      "text": "Are you still interested in this question?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "It requires only a huge amount of time, but there is no JavaScript code that cannot be deobfuscated.\n\nFor the first time here I see a piece of obfuscated js without any clear weakness.\n\nBut start point after beauty is to find basic var assignment and then accurately replace occurrences of the var with its value\n\nReiterate\n\nReplace every ; with ;  \n. To fo it, you must use an editor capable of regexp replacing, like VSCode or Sublime Text (and a lot of others)\nI got one and only one instruction per line\n\nLook at first assignment\n\n```\nT8jj.W4C=\"3421\";\n\n```\nI will replace every occurence of T8jj.h6C in the following code with the value \"3063\". But before, using regex search, I will ensure that there is only ONE occurrency of assignment, otherwise I will do a more delicate replacement.\n\nIn this case, only one assignment! Good, so use a regexp to replace\n\n```\n\\bT8jj\\.W4C\\b\n\n```\nwith \n\n```\n\"3421\"\n\n```\nThe first regexp avoid to change eventually future occurrency of new. Do not forget trailing \" because are syntattically important for js. 3421 is an integer, \"3421\" is a string.\n\nFor example, at roww 22233 this replaces\n\n```\nI(g9L.r3y(+T8jj.W4C));\n\n```\nwith\n\n```\nI(g9L.r3y(+\"3421\"));\n\n```\nSo string or numeric is very different !\n\nOnly 44042 rows remaining ! \n\n```\nbx8jj.h8C \n\n```\nhas more than one assignment, so must replace with \"3871\" only occurency before the next assignment, there same var receved assigned value of \"1964\"\n\n",
      "votes": "0",
      "user": "realtebo",
      "time": "Dec 1, 2018 at 12:08",
      "is_accepted": true,
      "comments": []
    }
  ]
}