{
  "title": "Reverse Engineer an ultrasonic cartridge communication with the station to bypass remaining uses",
  "link": "https://reverseengineering.stackexchange.com/questions/32803/reverse-engineer-an-ultrasonic-cartridge-communication-with-the-station-to-bypas",
  "content": "I Have an ultrasonic machine that has a cartridge with a set amount of uses. When that value gets to 0, the cartridge has to be disposed, and a new one bought. The thing is that with some maintenance before the cartridge runs out of uses, it's possible to prevent it from being damaged, and it's life can be extended (I don't know how true this is, I was just asked to believe).\n\nSo far, I was able to find that the cartridge uses an STC uC (100% impossible to read back), and that it's using UART at 19200bps. That's all I know, and I certainly can read the communication with the machine and the cartridge, so I think all the other things are OK. I was even able to replicate the cartridge with my computer, by re-sending recorded messages using docklight.\n\nThe thing now is that I can't figure out what is what on the communication. Here is a selected and filtered communication between both devices:\n\n```\nCART - FB 05 01 03 86 00 8E BF // 20100 uses left\nMACH + FB 03 85 95 A8 BF // subtract 1 use\nCART - FB 05 01 03 85 95 53 BF // 20099 uses left\nMACH + FB 03 85 94 AF BF // subtract 1 use\nCART - FB 05 01 03 85 94 54 BF // 20098 uses left\nMACH + FB 03 85 93 BA BF // subtract 1 use\nCART - FB 05 01 03 85 93 41 BF // 20097 uses left\nMACH + FB 03 85 92 BD BF // subtract 1 use\nCART - FB 05 01 03 85 92 46 BF // 20096 uses left\nMACH + FB 03 85 91 B4 BF // subtract 1 use\nCART - FB 05 01 03 85 91 4F BF // 20095 uses left\nMACH + FB 03 85 90 B3 BF // subtract 1 use\nCART - FB 05 01 03 85 90 48 BF // 20094 uses left\nMACH + FB 03 85 8F EE BF // subtract 1 use\nCART - FB 05 01 03 85 8F 15 BF // 20093 uses left\nMACH + FB 03 85 8E E9 BF // subtract 1 use\nCART - FB 05 01 03 85 8E 12 BF // 20092 uses left\nMACH + FB 03 85 8D E0 BF // subtract 1 use\nCART - FB 05 01 03 85 8D 1B BF // 20091 uses left\nMACH + FB 03 85 8C E7 BF // subtract 1 use\nCART - FB 05 01 03 85 8C 1C BF // 20090 uses left\nMACH + FB 03 85 8B F2 BF // subtract 1 use\nCART - FB 05 01 03 85 8B 09 BF // 20089 uses left\nMACH + FB 03 85 8A F5 BF // subtract 1 use\nCART - FB 05 01 03 85 8A 0E BF // 20088 uses left\nMACH + FB 03 85 89 FC BF // subtract 1 use\nCART - FB 05 01 03 85 89 07 BF // 20087 uses left\nMACH + FB 03 85 88 FB BF // subtract 1 use\nCART - FB 05 01 03 85 88 00 BF // 20086 uses left\nMACH + FB 03 85 87 D6 BF // subtract 1 use\nCART - FB 05 01 03 85 87 2D BF // 20085 uses left\nMACH + FB 03 85 86 D1 BF // subtract 1 use\nCART - FB 05 01 03 85 86 2A BF // 20084 uses left\nMACH + FB 03 85 85 D8 BF // subtract 1 use\nCART - FB 05 01 03 85 85 23 BF // 20083 uses left\nMACH + FB 03 85 84 DF BF // subtract 1 use\nCART - FB 05 01 03 85 84 24 BF // 20082 uses left\nMACH + FB 03 85 83 CA BF // subtract 1 use\nCART - FB 05 01 03 85 83 31 BF // 20081 uses left\nMACH + FB 03 85 82 CD BF // subtract 1 use\nCART - FB 05 01 03 85 82 36 BF // 20080 uses left\n\n```\nSome things to note:\n\nSo far, I think this is how things go:\n\nfor everything: FB opens the communication and BF closes it.\n\nfor the Identificacion string:\n\nfor the Subtract command:\n\nThat's where I'm currently sitting. I would like to know if there is some kind of program or website that could help me figure out if the supposedly \"checksum\" byte, is actually a checksum or not, and also figure out what operation is done to the number to convert it to those two or three bytes before the checksum\n\n",
  "votes": "2",
  "answers": 2,
  "views": "137",
  "tags": [
    "serial-communication",
    "protocol",
    "checksum"
  ],
  "user": "fpp",
  "time": "Mar 19, 2024 at 9:14",
  "comments": [],
  "answers_data": [
    {
      "content": "I think its pretty obvious it is my first time doing this.\n\nExample: FB 05 01 03 86 00 8E BF\n\nEDIT: Also figured out that by sending the supposedly \"subtract\" command, I'm able to rewrite the number of uses remaining. The structure is the next.\n\nExample: FB 03 86 00 75 BF\n\n",
      "votes": "2",
      "user": "fpp",
      "time": "Mar 30, 2024 at 16:25",
      "is_accepted": true,
      "comments": [
        {
          "user": "Yotamz",
          "text": "What does the machine/cartridge sends back if you replay a previous cartridge/machine message?",
          "time": null
        },
        {
          "user": "fpp",
          "text": "@Yotamz The machine is capable of only sending 2 commands, 8F 7F (Wich is the init response message I didn't talk about), and the subtract command. The cartridge instead is capable of sending 3 commands, 7F 8F (the init), the Identification string, and AA 01 (ACK). I can succesfully emulate the machine/cartridge with dock light if that is your question",
          "time": null
        },
        {
          "user": "Yotamz",
          "text": "If I understand correctly, you can emulate either side of the devices and communicate with the other (real) device, so you should be able to construct messages manually. If so, what happens if you send a \"subtract to 20099\" as in your second line of code? BTW, the second byte, right after FB seems to be the size in bytes of the data including checksum",
          "time": null
        },
        {
          "user": "fpp",
          "text": "Well, since I posted the answer, I started to mess a little bit more, and it shouldn't be called a \"subtract\" command, instead, it should be \"set remaining uses\" :). The cartridge does no verification if the number is bigger or smaller than the one already stored. The limit seems to be 20100 uses tho. Giving it a bigger number just has no effect. And also, good suggestion about the first data byte, I wouldn't have figured it out. I still have to figure out what the 01 03 means, but maybe playing with other cartridge models will help",
          "time": null
        },
        {
          "user": "Yotamz",
          "text": "So the answer is that sending FB 03 86 00 75 BF resets the counter to the max value. Please edit the answer above and add the solution you found, this is good information.",
          "time": null
        }
      ]
    },
    {
      "content": "Some general steps that might help you in your process are:\n\nMoreover, here are some websites you might find useful:\n\nAdditionally, some tools you might find helpful are:\n\n",
      "votes": "-2",
      "user": "Yotamz",
      "time": "Mar 26, 2024 at 13:37",
      "is_accepted": false,
      "comments": [
        {
          "user": "Yotamz",
          "text": "Obviously a GenAI answer. The OP already extracted information from the device before posting the question, and also found and posted an answer.",
          "time": null
        }
      ]
    }
  ]
}