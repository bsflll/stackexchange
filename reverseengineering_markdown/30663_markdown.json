{
  "title": "What does MOV RAX,qword ptr FS:[0x28] mean?",
  "link": "https://reverseengineering.stackexchange.com/questions/30663/what-does-mov-rax-qword-ptr-fs0x28-mean",
  "content": "I'm trying to understand what MOV RAX,qword ptr FS:[0x28] means. I get that FS:[0x28] is a stack canary. If my understanding is correct the data from RAX gets copied by MOV. Then there's a comma which separates the first operand MOV RAX from the second one qword ptr FS:[0x28]. What exactly does does qword ptr FS:[0x28] do?\n\n",
  "votes": "1",
  "answers": 2,
  "views": "2k",
  "tags": [
    "assembly",
    "x86"
  ],
  "user": "greg5678",
  "time": "Jul 20, 2022 at 0:39",
  "comments": [
    {
      "user": "Viktor",
      "text": "This question is already answered here. stackoverflow.com/questions/10325713/â€¦",
      "time": null
    },
    {
      "user": "greg5678",
      "text": "Yeah, I already looked at that post, but it wasn't very clear to me.",
      "time": null
    },
    {
      "user": "tkausl",
      "text": "This is intel syntax, so the value gets copied to RAX, not from. qword ptr FS:[0x28] just means it references a quadword at memory location 0x28 in the FS segment.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "It is not clear from the context of the question but it depends on the platform, if you are on Windows then fs:[0x28] is the field ArbitraryUserPointer according to the following data structure.\n\n```\nntdll!_NT_TIB\n   +0x000 ExceptionList    : Ptr64 _EXCEPTION_REGISTRATION_RECORD\n   +0x008 StackBase        : Ptr64 Void\n   +0x010 StackLimit       : Ptr64 Void\n   +0x018 SubSystemTib     : Ptr64 Void\n   +0x020 FiberData        : Ptr64 Void\n   +0x020 Version          : Uint4B\n   +0x028 ArbitraryUserPointer : Ptr64 Void\n   +0x030 Self             : Ptr64 _NT_TIB\n\n```\nYou can find some information about this field in the TEB here:\n\n",
      "votes": "3",
      "user": "rotem.salinas",
      "time": "Jul 21, 2022 at 13:15",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "The assembly you posted is in Intel syntax.\n\nMOV RAX, qword ptr FS:[0x28]\n\nThe sentinel value stored is being copied into RAX, not from it. This code is part of a setup for copying the value into a stack canary.\n\n",
      "votes": "0",
      "user": "shebaw",
      "time": "Jul 21, 2022 at 12:57",
      "is_accepted": false,
      "comments": []
    }
  ]
}