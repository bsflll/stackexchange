{
  "title": "Does MSVCXXX.dll means that the PE file is compiled by Microsoft Visual C?",
  "link": "https://reverseengineering.stackexchange.com/questions/5972/does-msvcxxx-dll-means-that-the-pe-file-is-compiled-by-microsoft-visual-c",
  "content": "While viewing the PE headers and imported functions of some programs designed with visual C. I found that they all include one of these functions:\n\nDoes this mean that any program (even malware) that imports any of these functions must be compiled by MSVC ?\n\n",
  "votes": "1",
  "answers": 2,
  "views": "384",
  "tags": [
    "disassembly",
    "c++",
    "c",
    "pe"
  ],
  "user": "Ahmed",
  "time": "Jul 29, 2014 at 17:15",
  "comments": [],
  "answers_data": [
    {
      "content": "While it's possible for something to be compiled with a compiler other than MSVC and \"manually\" import from an MSVC DLL, it's extremely unlikely and uncommon.\n\nChances are, yes, if you see something importing from an MSVC DLL, it was very likely compiled with MSVC.\n\nKeep in mind though that it's possible to have an executable compiled with MSVC that doesn't import functions from an MSVC DLL.\n\n",
      "votes": "2",
      "user": "Jason Geffner",
      "time": "Jul 29, 2014 at 15:34",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "\"Extremely unlikely and uncommon\" sounds exactly like something malware would try/strive for.  \n\nUsing normal WinAPI functions, as a distraction for the reverser or a time-wasting mechanism against an emulator, in malware packers is common .\nThere is no reason for not using msvcrt.dll functions (However one cannot count on Redistributable Packs for Visual Studio X being installed so the presence of msvcrt90.dll and similar is a flag against it being malware), so the presence of msvcrt* is not reliable at all.\n\nEntry-point signature, Rich signature or the debug directory would be better choices.\n\nJust quickly: Those with a D are the debug versions. \n\n",
      "votes": "-2",
      "user": "user45891",
      "time": "Jul 29, 2014 at 21:14",
      "is_accepted": false,
      "comments": [
        {
          "user": "Jason Geffner",
          "text": "\"'Extremely unlikely and uncommon' sounds exactly like something malware would try/strive for.\" -- Over the past eleven years of analyzing malware, I've never once seen non-MSVC-built malware import from an MSVC DLL. But even if malware did, so what? There's no real benefit to doing so.",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "\"Using normal WinAPI functions in packers is common, actually mandatory .\" -- No, it's not mandatory.",
          "time": null
        },
        {
          "user": "Jongware",
          "text": "Only slightly better obfuscation would be to add  imports of all major C compilers (Borland, Watcom, gcc). I see no point in doing so. It would be easier still to not use any external DLLs.",
          "time": null
        },
        {
          "user": "user45891",
          "text": "@JasonGeffner Ok I revise my word choice. It isn't mandatory per se but you need SOMETHING to waste time for the emulators. So either normal WinAPI functions or just plain junkcode like in old-timey polymorph engines (with the pointless math and stack movments). And the latter one has it's problems like: arxiv.org/ftp/arxiv/papers/1104/1104.3228.pdf  So, it isn't strictly mandatory but it is the most sensible and IMO only worthwhile approach",
          "time": null
        }
      ]
    }
  ]
}