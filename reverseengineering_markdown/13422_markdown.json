{
  "title": "Unkown Swap Encoding",
  "link": "https://reverseengineering.stackexchange.com/questions/13422/unkown-swap-encoding",
  "content": "I'm trying to figure out this encoding in malware.. All I have are the static strings..\n\nI was able to figure one out so there is plaintext on one:\n\n```\ne-snAetgrU$\n\n```\ntranslates to \n\n```\n$User-Agent\n\n```\nHere are some other strings from the same malware if it helps. I've tried 16/32 byte swaps and tried looking at the delta between the plaintext character index and the encoded one..\n\n```\nrdcTNIOemr$\nMyNonASUo\nuCoDL\nMaNOza$\n.eiCeShdPH$\nETSOHD$\nRRNIootP$\n\n```\n",
  "votes": "2",
  "answers": 1,
  "views": "94",
  "tags": [
    "obfuscation",
    "encryption",
    "binary-diagnosis"
  ],
  "user": "Chris Hall",
  "time": "Sep 5, 2016 at 21:18",
  "comments": [
    {
      "user": "NirIzr",
      "text": "A code snippet would help. Do you know where the \"swap decoding\" function is? Can you edit your question and add the code for that?",
      "time": null
    },
    {
      "user": "Chris Hall",
      "text": "The function is VB from a malicious macro. I was unable to decompile source",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "googling for e-snAetgrU yields the VBA Macros\njust copy paste the macros into a VBA module in word/excel/\ninsert a few Msgbox() and you can decrypt all the strings   \n\nthe unobfuscation is as follows\n\n```\nobf_str       = \"e-snAetgrU\"\nobf_str_len   = len(obf-str)   == 10\nredherr       = 1\ni = 0\n\nd(69, 43, obf_str)\n\nrand = arg1  == 69\n\nREPEAT:\n\nChar_Choice_num = ( arg1 - (obf_str_len * (arg1 \\ obf_str_len) )) ==\n(69,52 - (10 * (69,52\\10 == 6,5) == 60,50) ==) {9,2,5,8}\n\nunobf_str[i++] = obf_str[Char_Choice_num+redherr] == obf_str[10,3,6,9] = 'U,s,e,r'\n\nrand = Char_Choice_num+arg2  ==  52,45,48,51\n\ngoto REPEAT Until Len (obfxx) == len(unobfyy)\n\n```\n\n\n",
      "votes": "1",
      "user": "blabb",
      "time": "Sep 3, 2016 at 22:04",
      "is_accepted": true,
      "comments": []
    }
  ]
}