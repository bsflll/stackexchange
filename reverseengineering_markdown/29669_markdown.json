{
  "title": "idapython: type information with different prefixes",
  "link": "https://reverseengineering.stackexchange.com/questions/29669/idapython-type-information-with-different-prefixes",
  "content": "I checked how to get type information here - https://www.hex-rays.com/products/ida/support/idapython_docs/ida_typeinf.html\n\nAlthough, I am not sure what these different type prefixes mean. For e.g. BT_{type}, BTMT_{type}, BTF_{type}, etc. I couldn't find any information which distinguishes these  types.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "242",
  "tags": [
    "ida",
    "idapython"
  ],
  "user": "R4444",
  "time": "Dec 5, 2021 at 2:15",
  "comments": [],
  "answers_data": [
    {
      "content": "typeinf.hpp is the most complex header file in the IDA SDK. Although it's reasonably well-designed once you understand how to use it, there is likely to be a lot of difficulty in your near future. You probably want to start by ignoring the part of the header that your question asks about, and instead look at the class tinfo_t, which is the primary data structure that IDA uses to represent types. From there, look at its member functions. For example, here are a number of member functions:\n\nThat should get you started. Good luck! You'll need it!\n\n",
      "votes": "2",
      "user": "Rolf Rolles",
      "time": "Dec 5, 2021 at 5:10",
      "is_accepted": true,
      "comments": [
        {
          "user": "R4444",
          "text": "thanks so much for your comment, now I am using these functions for implementation. do you know the difference between decl_floating and floating?",
          "time": null
        },
        {
          "user": "Rolf Rolles",
          "text": "I can't fully answer this, unfortunately. tinfo_t has a notion of a \"declared type\" (decltype) and a \"real type\" realtype). The tinfo_t holds the decltype inside of it, so doing things with it is very fast. As for the realtype, operations have to ask IDA about it, which is slower. Speed aside, the difference has something to do with typedefs, \"type references\", and \"ordinals\". For example, the declared type of a typedef is BTF_TYPEDEF, but if you want information about the type that the typedef refers to, you'll need to use the realtype functions. Sorry my answer is bad!",
          "time": null
        },
        {
          "user": "R4444",
          "text": "no, thanks so much for your answer! that really helps. I appreciate that",
          "time": null
        }
      ]
    }
  ]
}