{
  "title": "Reversing serial RS485 half duplex bus protocol understanding",
  "link": "https://reverseengineering.stackexchange.com/questions/8237/reversing-serial-rs485-half-duplex-bus-protocol-understanding",
  "content": "I have a master & slaves setup in which the slaves only respond when spoken too.  I can snoop & record an existing master/slaves conversation.  I have an extra slave device that I would like to have my own conversation with, but have so far failed miserably.  I suspect that each device has its own unique ID, but have no idea what my extra slave devices ID is.\n\nWhat I know from a logic analyzer & days worth of studying:\n\nSuspicions:\n\nData sample from the bus during startup, I removed the start, crc & end bytes:\n\n```\n0xff020300010400\n0x09510000\n0xff01030002ffff\n0xff020300013c03\n0x01000000\n0x350d0000\n0xff01030002ffff\n0xff020300020200\n0x02007400...big packet with lots of text from a slave A...\n0x340d7400...big packet with lots of text from a/the master?...\n0xff010300010000\n0xff020300010800\n0x09510000\n0xff01030003ffff\n0xff020300030200\n0x02007400...big packet with lots of text from a slave A...  (exactly the same as prior 2 big packets)\n0x340d7400...big packet with lots of text from the master or yet a third slave?... (exactly the same as prior 2 big packets)\n0x0952040000000080\n0xff010300010000\n0xff02030001101000\n0x09510000\n0xff01030004ffff\n0xff020300040200\n0x02007400...big packet with lots of text from a slave B...\n0x340d7400...big packet with lots of text from the master or yet a third slave?...\n0x0952040000000080\n0xff010300010000\n0xff020300012000\n0x09510000\n0xff01030005ffff\n0xff020300050200\n0x02007400...big packet with lots of text from a slave B...  (exactly the same as prior 2 big packets)\n0x340d7400...big packet with lots of text from the master or yet a third slave?... (exactly the same as prior 2 big packets)\n0x0952040000000080\n0xff010300010000\n0xff020300010400\n0x09510000\n0xff01030002ffff\n0xff020300020200\n0x0952040000000080\n\n```\n",
  "votes": "3",
  "answers": 1,
  "views": "1k",
  "tags": [
    "hardware",
    "serial-communication",
    "protocol"
  ],
  "user": "Zac",
  "time": "Feb 14, 2015 at 6:46",
  "comments": [],
  "answers_data": [
    {
      "content": "Sounds a lot like my recent CAN bus sniffing. Ha! That's funny, RS485 is a popular alternative to CAN. :P \n\nA few quick thoughts:\n\nGoogling for RS485 half duplex bus protocol crc 0x1003 led me to a few interesting PDFs about protocols. Unless the makers are hideously paranoid, they'll be using something \"normal\" on the RS485 bus: \n\nI'd set up a chipKIT uC32 with multiple UARTs in the middle with a \"master\" side and a \"slave\" side. You'll probably need the \"driver\" or \"transceiver\" ICs for each circuit. Oh, an Arduino might work, but the 80MHz PIC32 in the chipKIT rocks. Once you can relay messages and the system keeps working, you'll know a lot more about what's going on. Physically and signal-wise.\n\n",
      "votes": "1",
      "user": "Krista K",
      "time": "Feb 16, 2015 at 3:52",
      "is_accepted": false,
      "comments": [
        {
          "user": "Zac",
          "text": "Thanks for the tips! I love the idea of relaying messages, that will let me know the direction the packets are traveling. Will dig into your other comments.",
          "time": null
        },
        {
          "user": "Zac",
          "text": "To answer a few questions: first packet in my listing is the first packet on the wire during startup. The big packets with the first byte matching are the same size; grouping all packets by the first byte makes it appear to be a fixed size packet protocol.",
          "time": null
        }
      ]
    }
  ]
}