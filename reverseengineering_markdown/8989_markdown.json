{
  "title": "Conditional instructions on ARM",
  "link": "https://reverseengineering.stackexchange.com/questions/8989/conditional-instructions-on-arm",
  "content": "I'm trying to understand the syntax of the IT instruction that is to be used to enable conditional execution of instructions on ARM, in Thumb2 mode.\n\nThe way I understand it, the bits in the CPSR register along with the IT instruction make conditional execution possible in Thumb mode. If I were writing some Thumb2 code perhaps I could go about following the process mentioned below.\n\nLets say I have 4 conditional instructions(the maximum limit suported by IT).\n\n",
  "votes": "2",
  "answers": 2,
  "views": "660",
  "tags": [
    "arm"
  ],
  "user": null,
  "time": "May 26, 2015 at 12:26",
  "comments": [
    {
      "user": "perror",
      "text": "Usually, when I am not sure about the semantics of an ARM instruction, I use this website. It always give you a good insight of what really does the instruction.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "As far as I understand you described the process of using IT instructions correctly. This is exactly how one of compilers I worked with works.\n\n[EDIT]\n\nAccording to (for example) ARM Architecture Reference Manual document conditions are not encoded in most of conditionally executed Thumb instructions (except of jumps and some others) and it is the thing that defines the reason for IT instruction and all its variants existence.\n\nUnfortunately I couldn't find exact Thumb 2 encoding reference, but I think that it behaves the same as in Thumb.\n\n[ONE MORE EDIT]\n\nYes, it is correct,both thumb and thumb II instructions I looked to does not have condition field (for example addition instructions and other ALU related things). The document I found it in is ARMv7-A -R Architecture Reference Manual, its download requires registration. So regarding your question number 3 - conditions in IT compliant operations are definitely not encoded in instruction itself. \n\n",
      "votes": "1",
      "user": "w s",
      "time": "May 27, 2015 at 9:26",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "The condition codes displayed after the instructions is a convenience feature of the disassembler (deduced from the preceding IT instruction), the individual Thumb-2 instructions do not encode the condition codes. Adding condition codes even if they're not encoded is also the practice recommended by ARM when writing UAL assembly. This serves two purposes:\n\n",
      "votes": "1",
      "user": "Community",
      "time": "May 23, 2017 at 12:37",
      "is_accepted": false,
      "comments": []
    }
  ]
}