{
  "title": "Disassembling MIPS Binaries",
  "link": "https://reverseengineering.stackexchange.com/questions/4040/disassembling-mips-binaries",
  "content": "I am searching for security vulnerabilities in the firmware of this router, its architecture is mips. I have successfully unpacked the file system. I would like to disassemble the http daemon, located at /usr/sbin/httpd. How can I disassemble this program and run it in spim?\n\n",
  "votes": "4",
  "answers": 4,
  "views": "12k",
  "tags": [
    "disassembly",
    "mips"
  ],
  "user": "0xcaff",
  "time": "Apr 13, 2017 at 12:49",
  "comments": [],
  "answers_data": [
    {
      "content": "I would like to second the suggestion of QEMU.\n\nCraig has a post describing how to debug a MIPS binary running in QEMU using IDA:\n\nhttp://www.devttys0.com/2011/09/exploiting-embedded-systems-part-3/\n\n(you can also use GDB or another debugger speaking the GDB protocol)\n\n",
      "votes": "5",
      "user": "Igor Skochinsky",
      "time": "Apr 8, 2014 at 21:02",
      "is_accepted": true,
      "comments": [
        {
          "user": "0xcaff",
          "text": "All of these are such good answers I don't know which one to accept! Thank you all for helping me out :D",
          "time": null
        },
        {
          "user": "w s",
          "text": "That's the best answer because it contains link to tutorial.",
          "time": null
        }
      ]
    },
    {
      "content": "You can give a try to radare2. It has a pretty complete support for MIPS, and provides a lot functionalities to help during the reversing process.\n\n",
      "votes": "5",
      "user": "jvoisin",
      "time": "Apr 8, 2014 at 19:31",
      "is_accepted": false,
      "comments": [
        {
          "user": "0xcaff",
          "text": "Can you please tell me how? I'm new to reversing.",
          "time": null
        },
        {
          "user": "6EQUJ5",
          "text": "I have been attempting to use radare2 for MIPS, and it was pretty dodgy (not analysing MIPSEL code, etc.) until I submitted several patches, so use a recent github version",
          "time": null
        }
      ]
    },
    {
      "content": "Are you sure that you need spim ? \n\nI'd suggest to use qemu instead of spim for emulation,\nradare2 for disassembly  as @jvoisin mentioned and\n\nretargetable decompiler for decompilation if you really need it.\n\n",
      "votes": "4",
      "user": "w s",
      "time": "Apr 8, 2014 at 19:52",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Regarding the disassembling part,  you may want to check JEB (version >= 2.3.0), which provides advanced disassembly and decompilation of MIPS 32-bit code.\n\nThe MIPS debugger is only available for Android Linux though, so you won't be able to debug your program using this tool.\n\nThere is a demo available on PNF Software's website.\n\n",
      "votes": "0",
      "user": "Nick",
      "time": "May 3, 2017 at 20:28",
      "is_accepted": false,
      "comments": []
    }
  ]
}