{
  "title": "Recovering original PE sections after Themida merges them",
  "link": "https://reverseengineering.stackexchange.com/questions/4257/recovering-original-pe-sections-after-themida-merges-them",
  "content": "Visual C++ produces binaries with .code, .rdata, and .data sections (in that order). Themida merges all three into a nameless section, which is detrimental to analysis. In particular, I want to run the Extra Pass plugin for IDA on a dump from memory of a Themida'd executable (imports not recovered), but it needs the real bounds of the .code section or it will aggressively convert a lot of actual data into code.\n\nHow could I go about recovering the base of the .rdata and .data sections?\n\n",
  "votes": "7",
  "answers": 1,
  "views": "1k",
  "tags": [
    "windows",
    "pe"
  ],
  "user": "higaki",
  "time": "May 4, 2014 at 19:13",
  "comments": [],
  "answers_data": [
    {
      "content": "Basically the best way to start doing this is to compile your own EXE (with the same compiler as the Themida protected file when possible) and try to merge the sections by yourself. I crafted an example for you (source code: http://codepad.org/RqNiH3Ly, download RAR (merged + directly compiled): https://mega.co.nz/#!aoAUALBJ!6riSM4VmT43Ywf_jxQAY73EsVXyjEAAhJ1rOSGaYdeI, just some executable I was working with at the moment, compiled with VS10).\n\nThe base of the .data section can basically be found by searching for references to every address aligned to 0x1000 in the code (VS10 uses data pointers in order, so just scroll up to the base of the first section and look for a pointer). For example:\n\nIn my case (the EXE also has relocations) the ImageBase was 0x1250000, so the RVA of the .data section would be 0x1253000 - 0x1250000 = 0x3000\n\nThe .rdata section is just the RVA aligned up to 0x1000 from the actual end of the code (you can learn this from the original file). In this case:\n\n0x12518EE - 0x1250000 = 0x18EE, rounded up 0x2000, so the original RVA of the .rdata section is 0x2000.\n\nSimilar calculations can be done for the .reloc section (search for the binary mask \"3? 3? 3? 3? 3?\" will get you pretty close on x86).\n\nJust learn to know the compiler structure and use it to recover something similar to the original (maybe Themida just appends the raw section data and changes all data pointers etc). Hope this helps a little :)\n\n",
      "votes": "3",
      "user": "mrexodia",
      "time": "May 14, 2014 at 18:19",
      "is_accepted": true,
      "comments": []
    }
  ]
}