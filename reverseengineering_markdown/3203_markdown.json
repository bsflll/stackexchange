{
  "title": "Recompile the asm file IDA pro created",
  "link": "https://reverseengineering.stackexchange.com/questions/3203/recompile-the-asm-file-ida-pro-created",
  "content": "currently I am trying to use IDA pro to generate assembly code from PE file and recompile it.\n\nbasically I know this way:\n\n```\nFile -> Produce File -> Create ASM File\n\n```\nand it seems the asm file it generated cannot be directly recompile.\n\nuse some IDC or Python script in the IDA to extract useful asm instructions, put them together in order and recompile,\nthis kind of solution can be seen from some academic paper, but non of them have given some detailed instructions about how to do this task...\n\nCould anyone give me some instructions about this issue..?\nThank you!\n\n",
  "votes": "4",
  "answers": 2,
  "views": "8k",
  "tags": [
    "disassembly",
    "ida",
    "idapython"
  ],
  "user": "lllllllllllll",
  "time": "Jun 17, 2020 at 9:54",
  "comments": [
    {
      "user": "ixje",
      "text": "Be more specific what step you're failing on. What tools do you try to use to compile the ASM? What edits have to made to fixup the ASM, and what errors are thrown?",
      "time": null
    },
    {
      "user": "0xec",
      "text": "The ASM file produced by IDA is not meant for direct recompiling, you have to make several changes, by fixing up the addresses, resolving the imports etc..",
      "time": null
    },
    {
      "user": "lllllllllllll",
      "text": "@ExtremeCoders Hello, could you please tell me is there any solution dealing with the \"change\" issue..? It seems so complicated.. on 32 bit x86 windows platform... thank you!",
      "time": null
    },
    {
      "user": "ixje",
      "text": "The solution to dealing with the \"change issue\" is putting in effort yourself. This site is not here for doing the work for you, but for helping with problems you run into after you've shown to put in effort yourself.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Many years ago I wrote a very crude script to dump the current (as defined by cursor location) function to the output window using mostly nasm compatible syntax. You could potentially modify to save output to a file and iterate over every function in your database. The script is available here: nasm dumper\n\n",
      "votes": "7",
      "user": "Chris Eagle",
      "time": "Jan 26, 2014 at 22:41",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "I would answer the part\n\nIf your decompilation contains function chunks, be aware using an assembler that accept code outside from a function environment and be aware, too, with the data prevention execution.\n\nFor more information about function chunks: Chunked function (discontinuous chunks of code comprising a function)\n\n",
      "votes": "0",
      "user": "Jos√© Manuel Ramos",
      "time": "Jan 8, 2018 at 11:16",
      "is_accepted": false,
      "comments": []
    }
  ]
}