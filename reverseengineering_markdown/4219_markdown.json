{
  "title": "What is the difference between step into and step over when debugging?",
  "link": "https://reverseengineering.stackexchange.com/questions/4219/what-is-the-difference-between-step-into-and-step-over-when-debugging",
  "content": "I am using EDB and stepping through the program but I do not even know what the difference in behavior is when doing this.  I feel like this is something I should know if I ever have hope of reverse engineering this program.\n\n",
  "votes": "11",
  "answers": 1,
  "views": "14k",
  "tags": [
    "ida",
    "disassembly",
    "debuggers",
    "gdb",
    "debugging"
  ],
  "user": null,
  "time": "Apr 30, 2014 at 19:51",
  "comments": [],
  "answers_data": [
    {
      "content": "The gdb terms (and commands) are step and next and the difference is that step continues to run until it changes line of source code, while next doesn't trace into a subroutine, but rather skips over it. The stepi and nexti commands are similar but operate at the machine instruction level rather than source code level. Read more in The Fine Manual.\n\nHere's an example that may help clarify.  Let's say you have a simple project with three simple files:\n\n```\n#include \"squareit.h\"\n#include <stdio.h>\n\nint main(void) {\n    int x = 5;\n    printf(\"%d squared is %d  \n\", x, squareit(x));\n}\n\n```\n```\n#ifndef SQUAREIT_H\n#define SQUAREIT_H\n// return the square of an integer\nint squareit(int x);\n#endif // SQUAREIT_H\n\n```\n```\n#include \"squareit.h\"\n\nint squareit(int x) {\n    return x*x;\n}\n\n```\nWe compile the program with debugging flags enabled (gcc -g main.c squareit.c -o simple) and then run gdb simple.  If we are sitting on the printf line and execute step, we will find ourselves in the squareit() function.  If instead at that same point we execute next, the squareit() function and the printf() functions will both execute and we will find ourselves on the last line of main().\n\nThe session follows:\n\n```\n(gdb) b main\nBreakpoint 1 at 0x40113d: file ./main.c, line 5.\n(gdb) run\nStarting program: ./simple \n\nBreakpoint 1, main () at ./main.c:5\n5       int x = 5;\n(gdb) step\n6       printf(\"%d squared is %d  \n\", x, squareit(x));\n(gdb) s\nsquareit (x=5) at ./squareit.c:4\n4       return x*x;\n(gdb) s\n5   }\n(gdb) s\n5 squared is 25\nmain () at ./main.c:7\n7   }\n(gdb) r\nThe program being debugged has been started already.\nStart it from the beginning? (y or n) y\nStarting program: ./simple \n\nBreakpoint 1, main () at ./main.c:5\n5       int x = 5;\n(gdb) s\n6       printf(\"%d squared is %d  \n\", x, squareit(x));\n(gdb) next\n5 squared is 25\n7   }\n\n```\nThe gdb commands used here are b to set a breakpoint, s which is an alias of step, next (has an alias of n) and run (has an alias of r).\n\n",
      "votes": "11",
      "user": "Edward",
      "time": "Mar 3, 2021 at 14:15",
      "is_accepted": true,
      "comments": []
    }
  ]
}