{
  "title": "Obtaining the decryption keys for Super Mario Run (Android/iOS Game)",
  "link": "https://reverseengineering.stackexchange.com/questions/16534/obtaining-the-decryption-keys-for-super-mario-run-android-ios-game",
  "content": "Super Mario Run is a il2cpp Unity game. Most of its assets are downloaded in-game through http requests. I particularly want the OGG files of the music. I can see the list of their names comes from this file.\n\nI know this because it appears before all the requests of the OGGs are made, sadly it and the OGGs are encrypted.\n\nSince Super Mario Run is an il2cpp game, the strings and function names and whatnot are contained in a different file -- \"global-metadata.dat\". Looking at this file I can see a function named get_OggEncryptionAesKey, as for where this function is and what it returns I cannot find out.\n\nI disassembled the \"libil2cpp.so\" with IDA, but did not seem to find this function or anything useful.\n\nI believe that the libraries that deal with the encryption might be \"libdeal.so\" or \"libDeALWrapper.so\".\n\nClosest I've came was pulling the ogg's from memory, but the best I got was some interface sounds.\n\nDoes anyone have any other ideas to decrypt these files?\n\n",
  "votes": "2",
  "answers": 0,
  "views": "1k",
  "tags": [
    "ida",
    "encryption",
    "decryption"
  ],
  "user": "Michael",
  "time": "Oct 11, 2017 at 18:47",
  "comments": [
    {
      "user": "Jevgeni Geurtsen",
      "text": "If you obtain the encrypted files through http requests on runtime I can imagine the related decryption is also send somewhere during this process. Did you try to sniff the network requests/responses?",
      "time": null
    },
    {
      "user": "Michael",
      "text": "I checked them all and didn't find anything that looked like an encryption key.",
      "time": null
    },
    {
      "user": "Jevgeni Geurtsen",
      "text": "I believe libdeal is just a library for dealing with algorithms and complex data structures in C++ (not sure though). Atleast we know they use AES encryption. Maybe you can try to find the Rijndael algorithm and work from there?",
      "time": null
    },
    {
      "user": "Jevgeni Geurtsen",
      "text": "Also, have you looked at github.com/nevermoe/unity_metadata_loader ?",
      "time": null
    },
    {
      "user": "Michael",
      "text": "@JevgeniGeurtsen I used that, but none of the files I've decompiled had the OggEncryptionAesKey function although they had all the other functions from the same class, very strange.",
      "time": null
    }
  ],
  "answers_data": []
}