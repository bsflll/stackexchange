{
  "title": "What is the meaning of *(_DWORD *)",
  "link": "https://reverseengineering.stackexchange.com/questions/9509/what-is-the-meaning-of-dword",
  "content": "I disassemble some code using IDA Pro and get the pseudo-code. It showed something like below.\n\n```\nfor ( i = 0; i < 6; ++i )\n{\n  v7 = (int)&val_253;                         \n  for ( k = 1; k < key[i]; ++k )\n    v7 = *(_DWORD *)(v7 + 8);\n  v4[i] = v7;\n}\n\n```\nI can't understand what is happening in v7 = *(_DWORD *)(v7 + 8); line. After executing this line the value of v7 changes from 0xC. I can't understand how it happens. I thought the value should change from 0x8.\n\nAnd I thought *(_DWORD *) should return a value. But instead, it returns another pointer. How is that happened (The both values of the memory, 0xc away from &val_253 and 0x8 away from &val_253 are zero).\n\n",
  "votes": "3",
  "answers": 1,
  "views": "14k",
  "tags": [
    "ida",
    "decompilation"
  ],
  "user": "Ramesh-X",
  "time": "Aug 3, 2015 at 19:27",
  "comments": [
    {
      "user": "Hackndo",
      "text": "Hi, not sure I fully understand your question. Maybe this will help stackoverflow.com/questions/2995251/â€¦  &   msdn.microsoft.com/en-us/library/cc230318.aspx",
      "time": null
    },
    {
      "user": "Ramesh-X",
      "text": "If someone can tell me what is happening in v7 = *(_DWORD *)(v7 + 8); codeline, it may resolve half of my problems..",
      "time": null
    },
    {
      "user": "blabb",
      "text": "*(DWORD *)    = DWORD    [ADDRESS]   = 0x13371337 *(char *)     = BYTE     [ADDRES]    = 0x7b *(sometype *) = SOMETYPE [ADDRESS]   = 0x1234567890123456badf00d",
      "time": null
    },
    {
      "user": "0xC0000022L",
      "text": "For starters this is C pseudo code - not disassembly as the tag suggests - and if you used IDA you likely used the Hex-Rays decompiler plugin. So thinking this through: you spend several thousand dollars or euros for something of which you seem to know little? It may solve half of your problems if you pick up a C book below a hundred dollars and learn to understand the target language of the decompiler plugin.",
      "time": null
    },
    {
      "user": "Ramesh-X",
      "text": "I know this is pseudocode. There is no tag called pseudocode here and I can't create one because I have low reputation. So I tagged disassembly so someone will see this. Here I did a mistake. The value of the memory 0x8 away from &val_253 is not zero. It points to another memory location which is located 0xC away from &val_253. I didn't see that before. Though I thought *(_DWORD *) should return a value, it returns a pointer. That's why after executing value of v7 changes from 0xC",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "```\nv7 = *(_DWORD *)(v7 + 8);\n\n```\nMeans :\n\n```\nv7 = *(v7 + 8)\n\n```\nOr in assembly \n\n```\nMOV v7, DWORD PTR [v7 + 0x8]\n\n```\n(This is only for understanding purpose, chances are that it's not really like above samples)\n\nv7 is assigned with the value located at address v7+8*sizeof(DWORD). For example, if v7 = 0xabcd0123 then v7 + 8*sizeof(DWORD)  = 0xabcd0143. Whatever is located at 0xabcd0143 will be assigned to v7.\n\n",
      "votes": "7",
      "user": "Hackndo",
      "time": "Aug 4, 2015 at 6:36",
      "is_accepted": true,
      "comments": [
        {
          "user": "Spl3en",
          "text": "Wrong. v7 won't be egal to 0xabcd012b, but 0xabcd0143 (in other words, 0xabcd0123 + sizeof(DWORD)*8). If you prefer, v7 = *(v7 + 8) <=> v7 = v7[8].",
          "time": null
        },
        {
          "user": "0xC0000022L",
          "text": "Uhm ... \"means, in C code\"? Some how implying that it's not already C ... which it is ...?!",
          "time": null
        },
        {
          "user": "Hackndo",
          "text": "Fixed. Silly mistakes :)",
          "time": null
        },
        {
          "user": "Roberto Andrade",
          "text": "So in summary this means read the contents of the 8th DWORD located after the address v7 is currently pointing to? How does it know how many bytes to read? does it read a single DWORD in this case? or does it depend on the type declared for v7?",
          "time": null
        },
        {
          "user": "Hackndo",
          "text": "No, it means \"Move the DWORD located at v7+0x8, and put it in v7\"",
          "time": null
        }
      ]
    }
  ]
}