{
  "title": "What is the difference between uintX_n (used in IDA Pro) and unitX_t types?",
  "link": "https://reverseengineering.stackexchange.com/questions/26682/what-is-the-difference-between-uintx-n-used-in-ida-pro-and-unitx-t-types",
  "content": "During debugging a binary in IDA Pro, I've noticed types of the form\n\n```\n30  uint16_n                            00000002                struct {uint16_t inner;}\n42  uint32_n                            00000004                struct {uint32_t inner;}\n\n```\nwhere the fields in each row from left to right correspond to Ordinal, name, size, description in the Local Types subview of IDA Pro. While the sizes seem to match the uintX_t counterparts, I would appreciate it if someone can explain the reasoning for introducing uintX_n types and the difference they have with the well known uintX_t types in which X=8,16,32.\n\n",
  "votes": "2",
  "answers": 1,
  "views": "152",
  "tags": [
    "ida",
    "struct",
    "type-reconstruction"
  ],
  "user": "Newbie",
  "time": "Jan 2, 2021 at 2:36",
  "comments": [],
  "answers_data": [
    {
      "content": "It seems these types are custom to the program youâ€™re analyzing and probably come from the debug information (e.g. DWARF).\n\nThe standard types from stdint.hare usually typedefs and not structs.\n\n",
      "votes": "3",
      "user": "Igor Skochinsky",
      "time": "Jan 2, 2021 at 11:14",
      "is_accepted": true,
      "comments": []
    }
  ]
}