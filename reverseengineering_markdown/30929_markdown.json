{
  "title": "Firmware Binary Reverse with Ghidra returns only few codelines decompiled with truncated code",
  "link": "https://reverseengineering.stackexchange.com/questions/30929/firmware-binary-reverse-with-ghidra-returns-only-few-codelines-decompiled-with-t",
  "content": "I have tried to decompile the firmware binary of a microcontroller that should be an STM32 (but I'm not sure about this).\n\nAfter the analysis I get only few codelines with a lot of similar messages:\n\n```\n                   /* WARNING: Bad instruction - Truncating control flow here */\n    halt_baddata();\n  }\n                    /* WARNING: Could not recover jumptable at 0x00000008. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)(unaff_r4 ^ unaff_r4 << 0xe))();\n\n```\nAnd the strings seems meaningless bunch of chars.\n\nI have tried also ARM aggressive instruction finder without success.\n\nI have also tried to set base address 0x08000000 that seems common for various STM32 with analogous bad results.\n\nI have also tried to use bot arm v7 little and big endian as trial and error.\n\nHow should I proceed considering that I don't know the datasheet of microcontroller used?\n\nHere The File\n\n",
  "votes": "2",
  "answers": 0,
  "views": "816",
  "tags": [
    "binary-analysis",
    "firmware",
    "ghidra",
    "binary",
    "firmware-analysis"
  ],
  "user": "AndreaF",
  "time": "Sep 28, 2022 at 14:02",
  "comments": [
    {
      "user": "dingo_kinznerhook",
      "text": "Do you have physical access to the microcontroller? Are there any serial numbers or other markings on it?",
      "time": null
    },
    {
      "user": "AndreaF",
      "text": "@dingo_kinznerhook I cannot access it at the moment.",
      "time": null
    },
    {
      "user": "Rok Tavčar",
      "text": "If it is stm mcu then binary starts with isr vector table where second entry is reset handler. Did you try to disassemble as thumb instructions?",
      "time": null
    },
    {
      "user": "AndreaF",
      "text": "@RokTavčar I'm not sure it is really an STM MCU. I haven't clear what do you mean, I tried to decompile a raw binary with the options ARM/thumb mode ARM v7. I have linked the file if someone here can give a look to suggest me the correct way to disassemble in such situation. It would be really appreciated.",
      "time": null
    },
    {
      "user": "Margaret Bloom",
      "text": "You can't simply throw binaries at Ghidra. You need to: 1) Read the uC manuals and get an extensive and complete understanding of its working (including the boot sequence and interrupts vectors); 2) inspect the binary to understand the format used, it is a blob of code? It's a firmware FS? It's proprietary? Where it's mapped and how? 3) Dissect code and data from metadata 4) disassemble the code. Without any of this, you can only make guesses.",
      "time": null
    }
  ],
  "answers_data": []
}