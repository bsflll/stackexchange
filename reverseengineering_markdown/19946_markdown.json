{
  "title": "idapython cfunc_t.treeitems always empty",
  "link": "https://reverseengineering.stackexchange.com/questions/19946/idapython-cfunc-t-treeitems-always-empty",
  "content": "I am using the hexray api to get all the items of the AST tree (the ctree) obtained by decompiling a function.\n\nUnfortunately, the treeitems vector is always empty. Specifically, the function paaaa in this code returns always '0' or 'E'.\n\n```\nfrom idautils import *\nfrom idaapi import *\nimport idc\nimport ida_hexrays as hexray\n\ndef load_hex_ray():\n    if not init_hexrays_plugin():\n        idc.RunPlugin(\"hexx64\", 0)\n    if not init_hexrays_plugin():\n        idc.RunPlugin(\"hexrays\", 0)\n    if not init_hexrays_plugin():\n        idc.RunPlugin(\"hexarm\", 0)\n\ndef paaaaa(address):\n        try:\n            cfun=hexray.decompile(address)\n            #if I print cfun it shows correct decompiled code.\n            cfun.refcnt=cfun.refcnt+1\n            cfun.build_c_tree()\n            return str((cfun.treeitems.size()))\n        except:\n            return 'E'\n\nload_hex_ray()\n#code that compute functions addresses and calls paaaaa\n\n```\nAny idea on what can be wrong?\nI am using an old version of IDA 7.0\n\n",
  "votes": "1",
  "answers": 1,
  "views": "265",
  "tags": [
    "ida",
    "idapython",
    "ast"
  ],
  "user": "user6537",
  "time": "Nov 22, 2018 at 16:38",
  "comments": [],
  "answers_data": [
    {
      "content": "I fixed the issue even if I do not fully understand why this solution work:\n\n```\ndef paaaaa(address):\n    try:\n        cfun=hexray.decompile(address)\n        print(cfun)\n        return str((cfun.treeitems.size()))\n    except:\n        return 'E'\n\n```\nprobably the print forces ida to correctly populate the ctree. I do not understand why the api cfun.build_c_tree() does not do the same.\n\nHowever, for now, I am good with this workaround.\n\n",
      "votes": "0",
      "user": "user6537",
      "time": "Nov 23, 2018 at 9:00",
      "is_accepted": true,
      "comments": []
    }
  ]
}