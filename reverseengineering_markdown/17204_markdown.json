{
  "title": "Need help with a PiWM encoding question",
  "link": "https://reverseengineering.stackexchange.com/questions/17204/need-help-with-a-piwm-encoding-question",
  "content": "I am working on reverse engineering a signal that I am fairly certain is a PiWM encoding. \n\nI think I have figured it out, but the data seems to be gibberish so I am looking for some help to confirm that I have in fact converted the raw capture to 1’s and 0’s. \n\nEssentially I did the following -\n1- capture using osmocom_fft on hackrf one\n2- using inspectrum I was able to find the symbol rate of the smallest message to be 2000 symbols per second\n3- exported the symbols \n4 - using iPython converted the symbols to 1’s and 0’s\nThe preamble has 0011 repeated 20 times which leads me to believe I am on the right track so far. \n5 - wrote a perl script to parse those 1’s and 0’s to concert anytime I see two 1’s or two 0’s in a row = 1, otherwise = 0\n\nIt is my understanding that in Pulse Interval Width Modulation the Mark / Space is the long gap, short gap. \n\nDoes this sound correct or am I lost ? \n\n",
  "votes": "2",
  "answers": 0,
  "views": "98",
  "tags": [
    "radio-interception"
  ],
  "user": "Adam Callis",
  "time": "Jan 15, 2018 at 21:37",
  "comments": [
    {
      "user": "cimarron",
      "text": "It might help out to publish some of the waveforms you are looking at and what you are demodulating it to. For DPIWM, you need to know how big the  alphabet is, i.e. how many bits are being used to encode the mark interval and how many are being used for the space interval. For a M-bit encoded input, you generally have M/2 bits used for mark and M/2 for space so the period of one frame is (mod(x/2^(M/2))+1) + (rem(x/2^(M/2))+1) time slots.",
      "time": null
    }
  ],
  "answers_data": []
}