{
  "title": "What are the differences between metamorphic, oligomorphic and polymorphic malware?",
  "link": "https://reverseengineering.stackexchange.com/questions/1696/what-are-the-differences-between-metamorphic-oligomorphic-and-polymorphic-malwa",
  "content": "Malware use several methods to evade anti-virus software, one is to change their code when they are replicating. I saw mainly three type of techniques in the wild which are: metamorphic malware, oligomorphic malware and polymorphic malware (I might have missed one). What are the main differences between theses techniques and what do they do ?\n\n",
  "votes": "9",
  "answers": 2,
  "views": "7k",
  "tags": [
    "obfuscation",
    "malware"
  ],
  "user": "perror",
  "time": "Apr 10, 2013 at 8:34",
  "comments": [
    {
      "user": "Ange",
      "text": "security.stackexchange.com/questions/4619/â€¦",
      "time": null
    },
    {
      "user": "perror",
      "text": "Are you sure we can't do better than this (short) answer ?",
      "time": null
    },
    {
      "user": "perror",
      "text": "Still the difference between metamorphic and polymorphic are unclear to me... If someone can come with a better definition, I take it.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "In order of increasing complexity: oligomorphic, polymorphic, metamorphic.\n\nThe first two terms are generally applied to decryptors.  We (anti-virus industry) define them this way: oligomorphic - decryptor with few variable elements, which does not affect the size or shape of the code.  It means that the variable elements are usually fixed-size instructions, but it can also apply to the register initialization.\n\n```\nstd ;fake, might be replaced by cld / nop / xchg ax, cx / ...\nmov cx, size\nmov ax, ax ;fake, might be replaced by mov bx, bx / or cx, cx / ...\nmov si, decrypt_src\ncld ;fake\nmov di, decrypt_dst\nor ax, ax ;fake\nmov bl, key\nand bp, bp ;fake\ndecrypt:\nxor [di], bl\nxchg dx, ax ;fake\ninc di\ncld ;fake\nloop decrypt\n\n```\nIn this case, the di register could be exchanged with si, for example.  Very simple replacement.\n\ndecryptor with potentially highly variable elements, which does affect the size and/or shape of the code.  It means that all kinds of changes can be applied, including subroutine creation, large blocks of garbage instructions, code \"islands\", or even algorithmic register initialisation (example here).\n\nhighly variable elements are applied directly to the body.  There is generally no decryptor in this case.  The same techniques for polymorphism are applied to the code itself.  The most famous example of this is the Simile virus from 2002 (details here).  There's a detailed paper on the subject with actual examples here)\n\n",
      "votes": "7",
      "user": "Community",
      "time": "Jun 17, 2020 at 9:54",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "",
      "votes": "5",
      "user": "Ange",
      "time": "Apr 10, 2013 at 19:02",
      "is_accepted": false,
      "comments": []
    }
  ]
}