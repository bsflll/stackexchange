{
  "title": "Step Over not working in GDB",
  "link": "https://reverseengineering.stackexchange.com/questions/20150/step-over-not-working-in-gdb",
  "content": "In the function below, let's say EIP is 0x400688. Now, I want to step over the call instead of stepping inside the subroutine.\n\n```\n    0x40067a <main+4>       sub    $0x20,%rsp                                                                                                         │\n   │0x40067e <main+8>       mov    $0x3c00,%edi                                                                                                       │\n   │0x400683 <main+13>      mov    $0x0,%eax                                                                                                          │\n  >│0x400688 <main+18>      callq  0x400560 <alarm@plt>                                                                                               │\n   │0x40068d <main+23>      mov    0x2009ac(%rip),%rax        # 0x601040 <stdout@@GLIBC_2.2.5>                                                        │\n   │0x400694 <main+30>      mov    $0x0,%ecx                                                                                                          │\n   │0x400699 <main+35>      mov    $0x2,%edx                                                                                                          │\n   │0x40069e <main+40>      mov    $0x0,%esi                       \n\n```\nI used the next command however it starts executing the main() function itself instead of just executing call and breaking at instruction: 0x40068d as shown below:\n\n```\n(gdb) next \nSingle stepping until exit from function main,\nwhich has no line number information.\n\n```\n",
  "votes": "2",
  "answers": 2,
  "views": "2k",
  "tags": [
    "linux",
    "gdb"
  ],
  "user": "Neon Flash",
  "time": "Dec 16, 2018 at 19:10",
  "comments": [
    {
      "user": "user202729",
      "text": "Possible duplicate of What's the difference between nexti and stepi in gdb?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "next will not work as intended unless there is source line information in the symbol table.\n\nFrom Next: Skipping Over Functions and Files:\n\n",
      "votes": "1",
      "user": "julian",
      "time": "Dec 16, 2018 at 19:25",
      "is_accepted": false,
      "comments": [
        {
          "user": "Neon Flash",
          "text": "Then what is the alternative? How do I step over the function call?",
          "time": null
        },
        {
          "user": "julian",
          "text": "@NeonFlash I typically set a breakpoint at the memory address of the instruction immediately following the function call. Then when I get to the function call I continue to skip the function code.",
          "time": null
        },
        {
          "user": "Neon Flash",
          "text": "Yes, that is one way but I was expecting a more convenient way instead of setting a breakpoint each time there is a call instruction.",
          "time": null
        }
      ]
    },
    {
      "content": "As said, next won't work if the source has not its symbol table. You can obtain such debug symbols with -g option from gcc.\n\nBut otherwise, I think you're looking for the command nexti that can be shortened to ni. \n\n",
      "votes": "1",
      "user": "Leath",
      "time": "Dec 17, 2018 at 23:59",
      "is_accepted": false,
      "comments": []
    }
  ]
}