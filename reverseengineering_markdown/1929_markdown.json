{
  "title": "How can I control the Hex-Rays decompiler plugin from IDA with scripts?",
  "link": "https://reverseengineering.stackexchange.com/questions/1929/how-can-i-control-the-hex-rays-decompiler-plugin-from-ida-with-scripts",
  "content": "I want to use IDA with the Hex-Rays decompiler plugin as part of automated static analysis, possibly on a large number of files without opening each one and telling it to produce a C file individually.  \n\nIdeally, I'd like to run IDA from the command line, and get the decompilation based on initial autoanalysis as output.  This way I can run it as part of Mastiff or grep for certain functions in a set of binaries.   By my reading of On batch analysis from the Hex Blog, what I need is an IDA script that interacts with the decompiler plugin, but I can't figure out how to actually do so. \n\nSo this leaves me with 2 subquestions:\n\n",
  "votes": "9",
  "answers": 1,
  "views": "6k",
  "tags": [
    "ida",
    "ida-plugin",
    "idapython"
  ],
  "user": "nopnopgoose",
  "time": "Apr 25, 2013 at 14:13",
  "comments": [],
  "answers_data": [
    {
      "content": "[Back in 2013] the decompiler did not have a scripting API. So you had these choices:\n\nIDA 6.6 (released in June 2014) added official Python bindings for the decompiler, so it now can be scripted from Python. For sample code, see vds*.py scripts in the IDAPython repository.\n\n",
      "votes": "6",
      "user": "Igor Skochinsky",
      "time": "May 19, 2016 at 11:35",
      "is_accepted": true,
      "comments": [
        {
          "user": "Igor Skochinsky",
          "text": "Comments are not for extended discussion; this conversation has been moved to chat.",
          "time": null
        }
      ]
    }
  ]
}