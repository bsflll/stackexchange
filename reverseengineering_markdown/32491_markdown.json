{
  "title": "Windows boot sequence operation",
  "link": "https://reverseengineering.stackexchange.com/questions/32491/windows-boot-sequence-operation",
  "content": "I am targeting at creating software for the Windows pre-boot environment but I have hard time finding conclusive information about how it operates. For background: this software will communicate with an external server in order to determine if the boot sequence should continue or not.\n\nMy current understanding is as follow\nUEFI/BIOS -> Pre-boot environment -> Windows(after booting)\n\nI found that the pre-boot environment operates using the so called \"mini kernel\". Is it true and is this mini-kernel the same Windows kernel with just limited stuff enabled?\n\n",
  "votes": "1",
  "answers": 0,
  "views": "61",
  "tags": [
    "windows",
    "bios",
    "uefi"
  ],
  "user": "Claude",
  "time": "May 3, 2024 at 16:03",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "To me it's not quite clear what exactly you mean exists supposedly between UEFI and Windows. Are you talking about bootmgfw.efi which to my understanding does run in the context of the UEFI ... or what is it you mean? There is something called minwin, but I think it's related to WinPE not the early boot stages.",
      "time": null
    },
    {
      "user": "Claude",
      "text": "No I am not talking about bootmgfw.efi, which indeed is present in the sequence but not relevant to my question, which is why I omitted it. I am talking about the phase that operates Bitlocker, which must run from a bare bone disk partition (unencrypted), with enough drivers to operate. Once it decrypted the main c: it \"pivots\" to the \"real\" Windows kernel (with full drivers). This is analogous to the initramfs booting step in Linux. But it is likely very different hence my request to find information.",
      "time": null
    }
  ],
  "answers_data": []
}