{
  "title": "Angr Use argv as initialstate",
  "link": "https://reverseengineering.stackexchange.com/questions/22517/angr-use-argv-as-initialstate",
  "content": "I am currently trying to use angr, and I need to find a string \"Done!\" which results in the \"good termination\" of the program. The input is 32 bits and I need to know the input which leads to the \"Done!\" being printed.\nI thought of using the following in my python script:\n\n```\nb = angr.Project('a.out')\narg1 = claripy.BVS('arg1', 32)\nb.factory.entry_state(args=['a.out', arg1])\npg = b.factory.simgr()\npg.explore(find=lambda x: b'Done!' in x.posix.dumps(1))\n\n```\nIn my current knowledge of angr, this should result in the path, wich leads to \"Done!\" being printed. Am I mistaken? With found[0] I could then access the result.\nBut angr leaves me with \n\n```\n<SimulationManager with 1 deadended>\n\n```\nas an output for my simulation manager. What am I doing wrong? Are there more requirements needed for this to work?\n\nApriciate any help.\n\nCheers\n\n",
  "votes": "1",
  "answers": 0,
  "views": "408",
  "tags": [
    "python",
    "angr"
  ],
  "user": "Scriptguy",
  "time": "Nov 11, 2019 at 23:36",
  "comments": [
    {
      "user": "sudhackar",
      "text": "Can you share the binary here?",
      "time": null
    }
  ],
  "answers_data": []
}