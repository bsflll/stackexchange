{
  "title": "Obtaining a relation between reads and writes with Pin",
  "link": "https://reverseengineering.stackexchange.com/questions/22707/obtaining-a-relation-between-reads-and-writes-with-pin",
  "content": "I'll be honest, Pin is confounding my intuition. Let's say, for the sake of argument, I have a line\n\n```\n a = b + c\n\n```\nand I wish to then store the addresses of b and c as a's dependencies, say, in a map, \n\n```\nm[address of a].append(address of b, address of c)\n\n```\nMy current understanding of this involves \n\n```\nif (INS_IsMemoryRead(ins)||INS_IsMemoryWrite(ins))\nfor(memOp=0;memOp<INS_MemoryOperandCount(ins);memOp++)\nINS_InsertPredicatedCall(ins, IPOINT_BEFORE, (AFUNPTR) AnalysisFunction, IARG_MEMORYOP_EA, memOp, IARG_THREAD_ID, IARG_END);\n\n```\nwhere AnalysisFunction would essentially take the memory address from the operation and somehow return it, or put it into a map. But I'm not entirely certain how to do that, or how to correlate the reads to writes properly.\n\nAny help would be appreciated\n\n",
  "votes": "1",
  "answers": 0,
  "views": "54",
  "tags": [
    "pintool"
  ],
  "user": "Lsk",
  "time": "Dec 10, 2019 at 3:41",
  "comments": [],
  "answers_data": []
}