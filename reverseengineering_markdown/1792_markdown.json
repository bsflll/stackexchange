{
  "title": "Is there any simple open source Windows packer?",
  "link": "https://reverseengineering.stackexchange.com/questions/1792/is-there-any-simple-open-source-windows-packer",
  "content": "There are great questions here about different types of packers and that is very interesting to me.  I would like to try my hand at reverse engineering one.  Since I am very new to this, I would like the source code as well.\n\nI am hoping that by continuously compiling and recompiling the source, I can learn to match it up in IDA Pro and gain a better understanding of both topics at once.\n\nI've checked out the source code for UPX but it is very complex as it handles many different platforms and types.  \n\nIs there an open source code packer that deals exclusively with Windows executables and is very simple to understand?\n\n",
  "votes": "18",
  "answers": 5,
  "views": "8k",
  "tags": [
    "windows",
    "packers"
  ],
  "user": "mikhailzhan",
  "time": "Apr 16, 2013 at 12:46",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "A packer isn't the best method to learn to correlate pseudo-C with the disassembly in front of you. You should instead focus on learning these skills separately. Once learned, it becomes a matter of training (experience) more than anything, so once you \"mastered\" the skills separately to an extent where you can use them, you can still go and combine them and will still learn a whole lot of new things.",
      "time": null
    },
    {
      "user": "mikhailzhan",
      "text": "@0xC0000022L Sure, I was hoping that that motivation to understand packers would help keep me focused.  Short-sighted and instant gratification-minded youth and all that.  I appreciate the suggestion, though.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "",
      "votes": "12",
      "user": "Ange",
      "time": "Apr 16, 2013 at 19:32",
      "is_accepted": true,
      "comments": [
        {
          "user": "mikhailzhan",
          "text": "Your minimalists packers in Python are fantastic.  Just reading the code for that makes the rest of this make more sense.  I'm curious though, I'm trying to use compressor.py on a calc.exe from Windows XP and aplib is failing to do the compression (assert >= 2 in line 91 of _bits).  Is this possibly a known bug?  Or (very likely) I'm just doing something wrong?",
          "time": null
        },
        {
          "user": "Ange",
          "text": "Thanks - it's no surprise they work badly though, they just had to work on my helloworld.exe program (the virt&mutaters only handle push/call) - they're PoCs skeletons to give an idea, for training, nothing more.",
          "time": null
        },
        {
          "user": "mrduclaw",
          "text": "@mikhailzhan I got a little further exchanging the lzss algorithm for a different one (quibble.googlecode.com/hg/dgreed/tools/lzss.py).  But now the application fails to start (side-by-side error. Depends.exe blows up at the lack of imports table).  Still, great work to build from.  Ange deserves much praise for writing very readable code.",
          "time": null
        },
        {
          "user": "mikhailzhan",
          "text": "@Ange Thank you for your response!  I'll try compiling just a hello world to play with, then.  Thank you very much!",
          "time": null
        },
        {
          "user": "Ange",
          "text": "I just added a link to binaries",
          "time": null
        }
      ]
    },
    {
      "content": "This looks like what you want: sePACK\n\n",
      "votes": "9",
      "user": "cb88",
      "time": "Apr 15, 2013 at 22:23",
      "is_accepted": false,
      "comments": [
        {
          "user": "mikhailzhan",
          "text": "I installed CodeBlocks (the suggested IDE in the ReadMe) and it fails to build sePack. Looks like a newer version of gcc broke it. :/",
          "time": null
        },
        {
          "user": "cb88",
          "text": "I suppose you could ask how to fix it on stackoverflow and if it is something pertaining to reversing here! Specific errors help of course... I would build it myself but haven't the time this week.",
          "time": null
        }
      ]
    },
    {
      "content": "I recommend you to take a look to Yoda's Protector. There is a version with source code. Unfortunately, it doesn't work on Windows 7 for some reason (but does work on Win XP). Apart from this, I don't know any other open source packer or protector (except UPX, as you mentioned).\n\n",
      "votes": "6",
      "user": "joxeankoret",
      "time": "Apr 15, 2013 at 22:21",
      "is_accepted": false,
      "comments": [
        {
          "user": "cb88",
          "text": "Yoda's looks a bit more complex for a beginner as it also includes encryption and optimisation as well as anti debugging. I guess it depends on if he wants to focus on one thing packing or bite off a bigger chunk and learn it all in one place.",
          "time": null
        },
        {
          "user": "mikhailzhan",
          "text": "@cb88 Yes, just the simplest please.",
          "time": null
        }
      ]
    },
    {
      "content": "Here are 4 open-source packers, written in Delphi (you can convert to C++ if you want):\n\nIf you don't have a copy of Delphi, you can use the open-source Lazarus IDE with the Free Pascal (FPC) compiler.\n\nLazarus + FPC can open Delphi project files and can usually compile Delphi projects without modification: http://sourceforge.net/projects/lazarus/\n\n",
      "votes": "5",
      "user": "Mick",
      "time": "Apr 16, 2013 at 15:11",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "You might be better off looking at a generic data packer first, such as LZ4.  It's a very simple packer written in C.  There are various unpackers in several languages, too, on the same site.  Jumping right into a runtime packer means lots of file format details that, really, no-one gets quite right in all cases.\n\n",
      "votes": "5",
      "user": "peter ferrie",
      "time": "Apr 16, 2013 at 17:18",
      "is_accepted": false,
      "comments": []
    }
  ]
}