{
  "title": "Enumerating (name, addresses) in PLT of an ELF file without elf.h",
  "link": "https://reverseengineering.stackexchange.com/questions/20204/enumerating-name-addresses-in-plt-of-an-elf-file-without-elf-h",
  "content": "I want to show users imported symbols of a given ELF file like this(#1) in a disassembler project.(Android app)\n\n```\n1d21a: f7fa e8e8 blx 173ec ; __android_log_print@plt ...\n\n```\nCurrently, I can only show like this(#2):\n\n```\n1d21a: f7fa e8e8 blx 173ec\n\n```\nTo show data like #1, I heard that I need to parse PLT or GOT or PLTGOT. However I don't know how to use them to show name of functions. (Of course I don't know how to parse it, yet)\n\nMy theoritical approach is to disassemble PLT and find the target offset and do something.\n\nExample;        \n\n```\n     000173ec __android_log_print@plt:\n     173ec:       e28fc600        add     ip, pc, #0, 12  ; ip!=pc?\n     173f0:       e28cca11        add     ip, ip, #69632  ; addr of got? \n     173f4:       e5bcf9f4        ldr     pc, [ip, #2548]!; index=2548\n         000173f8 sleep@plt:\n     173f8:       e28fc600        add     ip, pc, #0, 12\n     173fc:       e28cca11        add     ip, ip, #69632\n     17400:       e5bcf9ec        ldr     pc, [ip, #2540]!\n     ...\n\n```\nI think I may earn that #2548 or #2540 by disassembling PLT... but no confidence.\n\nIs there any way to parse PLT and show data like #1 in disassembly?\n\nThanks!\n\n",
  "votes": "3",
  "answers": 1,
  "views": "268",
  "tags": [
    "android",
    "arm",
    "elf",
    "disassemblers",
    "plt"
  ],
  "user": "Hyeonseo Yang",
  "time": "Dec 27, 2018 at 4:15",
  "comments": [],
  "answers_data": [
    {
      "content": "This information is available from the dynamic segment PT_DYNAMIC. This is an array of structure ElfXX_Dyn. You have to search for the type DT_REL or DT_RELA.\nThis is an array of ElfXX_Rel or ElfXX_Rela. The field r_offset is the offset to the GOT entry. And the name could be retrieved with the field r_info. It contains an index for ElfXX_Sym.\nYou probably want to use an external library to do that.\n\n",
      "votes": "4",
      "user": "wisk",
      "time": "Sep 10, 2019 at 5:15",
      "is_accepted": false,
      "comments": []
    }
  ]
}