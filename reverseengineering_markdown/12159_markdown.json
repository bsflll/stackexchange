{
  "title": "Unpacking NSPack v 2.9 based malware to get OEP",
  "link": "https://reverseengineering.stackexchange.com/questions/12159/unpacking-nspack-v-2-9-based-malware-to-get-oep",
  "content": "recently i am analyzing a malware which is packed with NSPack.\nwhen i am trying to unpack it using this blog link,i landed over two instruction PUSHFD,PUSHAD in ollydbg.\nso i put a breakpoint on the jmp instruction which will do unpack\n\n```\n004DF425                       9D              POPFD\n004DF426                      -E9 A5D4FFFF     JMP 5df0b1b0.004DC8D0\n\n```\nafter stepover, i have landed over below instruction which is not start of a pe file\n\n```\n004DC8D0                         60            DB 60                               ;  CHAR '`'\n004DC8D1                         BE            DB BE\n004DC8D2                         00            DB 00\n004DC8D3                         20            DB 20                               ;  CHAR ' '\n004DC8D4                         4C            DB 4C                               ;  CHAR 'L'\n004DC8D5                         00            DB 00\n004DC8D6                         8D            DB 8D\n004DC8D7                         BE            DB BE\n004DC8D8                         00            DB 00\n004DC8D9                         F0            DB F0\n004DC8DA                         F3            DB F3\n004DC8DB                         FF            DB FF\n004DC8DC                         57            DB 57                               ;  CHAR 'W'\n004DC8DD                         83            DB 83\n004DC8DE                         CD            DB CD\n\n```\nthe above instruction is very strange\ni should expect instruction like\n\n```\nPUSH EBP\nPUSH EBP,ESP\n\n```\nso how can i unpack the malware and where i am wrong during unpacking.Help will be appreciated\nHash of malware:59c661ba0c7c485f4480f7b142a9c084\n\n",
  "votes": "2",
  "answers": 2,
  "views": "797",
  "tags": [
    "obfuscation",
    "unpacking"
  ],
  "user": "Bikash Dash",
  "time": "Mar 6, 2016 at 18:36",
  "comments": [
    {
      "user": "Jason Geffner",
      "text": "You need to right-click on those bytes in the disassembly pane and select Analysis → Remove analysis from module. See Ollydbg - Remove analysis from module and Ollydbg Instructions Are Splitted.",
      "time": null
    },
    {
      "user": "Bikash Dash",
      "text": "Thanks JasonGeffner for the help.but even after doing \"Remove analysis\",i still can't reach OEP.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The blog post to which you linked has incorrect information. 0x004DC8D0 is not the OEP. Rather, 0x0041A4E3 is the OEP.\n\nAfter reaching 0x004DC8D0, right-click on the machine code in the disassembly pane and select Analysis → Remove analysis from module. Then scroll down a bit to 0x004DCA84; you'll see there's a JMP from that address to 0x0041A4E3, which is the correct OEP:\n\n\n\n",
      "votes": "2",
      "user": "Jason Geffner",
      "time": "Mar 6, 2016 at 19:48",
      "is_accepted": false,
      "comments": [
        {
          "user": "Bikash Dash",
          "text": "HI Jason,even after following (Remove code analysis from module),i got these instructions 004DC8D0      60                PUSHAD 004DC8D1      BE 00204C00       MOV ESI,5df0b1b0.00> 004DC8D6      8DBE 00F0F3FF     LEA EDI,DWORD PTR [> 004DC8DC      57                PUSH EDI 004DC8DD      83CD FF           OR EBP,FFFFFFFF 004DC8E0      EB 10             JMP SHORT 5df0b1b0.> 004DC8E2      90                NOP 004DC8E3      90                NOP 004DC8E4      90                NOP 004DC8E5      90                NOP 004DC8E6      90                NOP 004DC8E7      90                NOP",
          "time": null
        },
        {
          "user": "Bikash Dash",
          "text": "And also if i am going 0041A4E3,i am viewing these instruction which is not seems to be a start of a PE file.0041A4E3               0000            ADD BYTE PTR [EAX],AL 0041A4E5               0000            ADD BYTE PTR [EAX],AL 0041A4E7               0000            ADD BYTE PTR [EAX],AL 0041A4E9               0000            ADD BYTE PTR [EAX],AL etc",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "You have to let the code execute until 0x0041A4E3 is reached.",
          "time": null
        },
        {
          "user": "Bikash Dash",
          "text": "Thanks @jason .i got the instruction 0041A4E3             >  55            PUSH EBP 0041A4E4             ?  8BEC          MOV EBP,ESP 0041A4E6             ?  6A FF         PUSH -1",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "Great, feel free to accept my answer then.",
          "time": null
        }
      ]
    },
    {
      "content": "\nso ollydbg didn't understand the code put unnecessary code.so after doing \"Remove analysis\" from the assembly pane i got OEP\nNow NS based packed got unpacked\nThanks @jason Geffner\n\n",
      "votes": "0",
      "user": "Bikash Dash",
      "time": "Mar 8, 2016 at 14:22",
      "is_accepted": false,
      "comments": []
    }
  ]
}