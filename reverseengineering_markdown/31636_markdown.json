{
  "title": "IDA Processor Module: How to maintain register values if instruction doesn't modify them directly (ex. STATUS register, FLAGS, etc.)?",
  "link": "https://reverseengineering.stackexchange.com/questions/31636/ida-processor-module-how-to-maintain-register-values-if-instruction-doesnt-mod",
  "content": "I'm developing a processor module for a specific microcontroller. There are cases, when instruction modifies some register (lets call it STATUS) indirectly. By indirectly, I mean, that STATUS is not one of the operands for this instruction. As an example, let's take rlc instruction:\n\n```\nrlc A\n\n```\nIt basically rotates A left with Carry (C). C is part of STATUS register (just one bit). I cannot modify anything within the ev_ana_insn callback as per IDA Pro documentation, so it looks like that:\n\n```\ndef ev_ana_insn(self, insn):\n    if b == 0x67:  # rlc\n        insn.size = 1\n        insn.itype = self.itype_rlc\n        insn.Op1.type = ida_ua.o_reg\n        insn.Op1.reg = self.ireg_A\n\n```\nThat's fine. But in ev_emu_insn I don't understand how and where should I modify the STATUS register, since it is missing (and shouldn't be there in the first place) from insn.\n\nI had a couple of thoughts, but they are not good enough in my opinion:\n\nSo, any input is much appreciated.\n\n",
  "votes": "3",
  "answers": 0,
  "views": "181",
  "tags": [
    "ida",
    "idapython",
    "ida-plugin",
    "idapro-sdk"
  ],
  "user": "none32",
  "time": "Mar 8, 2023 at 9:50",
  "comments": [
    {
      "user": "Rolf Rolles",
      "text": "Do you actually need to do that? What negative effects are you experiencing by not modelling the changes to the STATUS register? This is common on other processors also, such as adc and sbb on x86, and I think the dependency and modifications to eflags are simply not modelled.",
      "time": null
    },
    {
      "user": "none32",
      "text": "Actually, I do. Some instructions with completely the same opcode have different mode of operation on operands (byte or word) based on flag in STATUS register. So, by not tracking this flag I don't know which instruction to display.",
      "time": null
    },
    {
      "user": "Rolf Rolles",
      "text": "Is it possible to track the value of the STATUS register statically? Suppose A is loaded with the result of calling a random number generator before invoking some instruction that modifies the STATUS register based upon the contents of A. How would you model the update to the STATUS register?",
      "time": null
    },
    {
      "user": "none32",
      "text": "Result of A is irrelevant. The only thing that could modify the STATUS register is a set of specific instructions, independent of the operand(s) contents. Also, it is being initialized during the RESET event to the predefined value. Therefore, it could be statically tracked.",
      "time": null
    },
    {
      "user": "Rolf Rolles",
      "text": "Suppose every possible instruction that could modify the STATUS register was in a switch statement, whose switch expression was the result of calling a randon number generator. How would you track the value of the STATUS register? (I realize this is probably not what's happening in your binary, but the questions are intended to be Socratic.)",
      "time": null
    }
  ],
  "answers_data": []
}