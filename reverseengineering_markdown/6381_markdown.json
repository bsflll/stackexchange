{
  "title": "How do I map the std::_Ios_Openmode passed to basic_fstream to an actual value?",
  "link": "https://reverseengineering.stackexchange.com/questions/6381/how-do-i-map-the-std-ios-openmode-passed-to-basic-fstream-to-an-actual-value",
  "content": "I am working on some ARM disassembly. A file is being operated on:\n\n```\n0000e550  sub  r3, r11, #0x2d0\n0000e554  mov  r0, r3        ; /tmp/MAC\n0000e558  ldr  r1, = 0x9a60c ; 0xec04 (sub_e3a8 + 0x85c)\n0000e55c  mov  r2, #0x8      ; std::basic_fstream<char,std::char_traits<char>>::basic_fstream(char const*,std::_Ios_Openmode)\n0000e560  bl   _ZNSt13basic_fstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode@PLT ; std::basic_fstream<char, std::char_traits<char> >::basic_fstream(char const*, std::_Ios_Openmode)\n\n```\nr0 is \"this\", r1 is the path (/tmp/MAC) and r2 is the mode. As can be seen, the mode is 0x8. \n\nThe mode is \"implementation defined\" according to several sources. I haven't got specifics of the implementation unfortunately. \n\nWhat is the typical implementation of this on ARM ?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "250",
  "tags": [
    "disassembly",
    "c++",
    "arm"
  ],
  "user": "Cybergibbons",
  "time": "Oct 13, 2014 at 10:53",
  "comments": [],
  "answers_data": [
    {
      "content": "You should try to find out which compiler/library is being used, then check the specs of that compiler.\n\nAssuming it's gcc with libstdc++ (this is quite probable if you're on android; less probable on Windows RT), googling for \"gcc libstd ios_base openmode\" yields https://gcc.gnu.org/onlinedocs/libstdc++/libstdc++-api-4.5/a00504.html, which tells it's defined in ios_base.h. Navigating there, you can find \n\n```\n00112   enum _Ios_Openmode \n00113     { \n00114       _S_app        = 1L << 0,\n00115       _S_ate        = 1L << 1,\n00116       _S_bin        = 1L << 2,\n00117       _S_in         = 1L << 3,\n00118       _S_out        = 1L << 4,\n00119       _S_trunc      = 1L << 5,\n00120       _S_ios_openmode_end = 1L << 16 \n00121     };\n\n```\nand\n\n```\nstatic const openmode in =      _S_in;\n\n```\nso the open mode is probably in.\n\nBut, unless you find out which compiler was used, this a guess, and we can only help you guessing.\n\n",
      "votes": "2",
      "user": "Guntram Blohm",
      "time": "Oct 5, 2014 at 10:44",
      "is_accepted": true,
      "comments": []
    }
  ]
}