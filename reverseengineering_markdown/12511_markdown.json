{
  "title": "Dump a child process created by malware with an ALTERNATIVE process hollowing process",
  "link": "https://reverseengineering.stackexchange.com/questions/12511/dump-a-child-process-created-by-malware-with-an-alternative-process-hollowing-pr",
  "content": "I'm reversing a malware which uses a variant of Process Hollowing to create a process which I can't dump. I don't know what I'm doing wrong. I always see the suggestion to stop at GetContextThread , but this process hollowing doesn't call to that Api.\n\nThis is the exactly what happens:\n\nKnowing this, and due english its my not maternal language and there are too much technical words... which call of the apis above should I have a look to find the EP? Probably the last NtMapViewOfSection ?\n\n",
  "votes": "3",
  "answers": 1,
  "views": "1k",
  "tags": [
    "ollydbg",
    "malware",
    "dumping"
  ],
  "user": "Peterlagunas",
  "time": "Apr 23, 2016 at 17:36",
  "comments": [],
  "answers_data": [
    {
      "content": "The technique you described above is known as \"dynamic forking\" or \"process hollowing\".\n\nYou can find the entry point of the child process by following the steps described in https://reverseengineering.stackexchange.com/a/8431/1562, though I'd recommend setting a breakpoint on NtSetContextThread() instead of on SetThreadContext() since the malware may skip the latter and instead directly call the former.\n\n",
      "votes": "2",
      "user": "Community",
      "time": "Apr 13, 2017 at 12:49",
      "is_accepted": false,
      "comments": [
        {
          "user": "Peterlagunas",
          "text": "I don't have any call to that API, what's more the process I have its like that appears in here: lexsi.com/securityhub/overview-kronos-banking-malware-rootkit/â€¦ After creating the process with CreateProcessInternalW there are calls to the API's I posted , and finally this ones: CreateThreadEx   Calling NtResumeThread() to run the new process.  maybe Im missing something ?",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "Great, then the \"entry point\" is likely the lpStartAddress parameter passed to CreateThreadEx().",
          "time": null
        },
        {
          "user": "Peterlagunas",
          "text": "Thank you for replaying. The 5th argument points me to nowhere As you can see here imgur.com/Nd3Iwze, those are the parameters and that direction doesn't even exist in my memory map. I'm sorry for failing over and over again and probably bugging you but I really need to get through this",
          "time": null
        },
        {
          "user": "Peterlagunas",
          "text": "Okay, about the last comment, I imaginated that I couldn't access cause of a kind of protection ? Because as I have readed again the post you told me , it appears as I have not rights to enter in the memory of the process. So my new question is some of the API's before could protect it? Where would you recommend me to take a look ? and thank you so much again",
          "time": null
        },
        {
          "user": "Peterlagunas",
          "text": "Thank you very much!!! I have dumped it already :) thank you again !",
          "time": null
        }
      ]
    }
  ]
}