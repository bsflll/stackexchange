{
  "title": "How to stop Hex Rays optimizations?",
  "link": "https://reverseengineering.stackexchange.com/questions/26908/how-to-stop-hex-rays-optimizations",
  "content": "I know it's not a bug, but a feature. Hex Rays found that there's a variable which is set to specific value, thus there's no need to display the branches where the code will never be run, so it warns me about the optimizations:\n\n```\nconditional instruction was optimized away because of '%var_8.1==0'\n\n```\nIs there any way to make it show all the code branches and stop optimizing it?\n\n",
  "votes": "1",
  "answers": 2,
  "views": "566",
  "tags": [
    "ida",
    "hexrays",
    "decompiler"
  ],
  "user": "Anton Kukoba",
  "time": "Jan 30, 2021 at 22:15",
  "comments": [],
  "answers_data": [
    {
      "content": "Try marking the variable as volatile\n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Jan 30, 2021 at 22:36",
      "is_accepted": false,
      "comments": [
        {
          "user": "Anton Kukoba",
          "text": "I can't, it was also optimized :)",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "@AntonKukoba maybe try doing it on the stack frame variable (Ctrl-K)",
          "time": null
        },
        {
          "user": "Anton Kukoba",
          "text": "I tried it too, it doesn't change anything",
          "time": null
        }
      ]
    },
    {
      "content": "Hope this will help other people face with this problem in the future.\nThe answer is: make all related-variables volatile. See the image bellow:\n\n\nEither code_compress_magic or Signature must be set as a volatile type. This will make Hexrays decompiler happy.\n\n",
      "votes": "0",
      "user": "Khanh Ta Quang",
      "time": "Oct 11, 2021 at 12:12",
      "is_accepted": false,
      "comments": []
    }
  ]
}