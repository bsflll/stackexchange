{
  "title": "Intel syntax - Meaning of jmp/call instruction with $+5 operand",
  "link": "https://reverseengineering.stackexchange.com/questions/13369/intel-syntax-meaning-of-jmp-call-instruction-with-5-operand",
  "content": "I'm currently parsing a lot of assembly files and don't understand a specific jmp or call with $+5 as operand:\n\n```\ncall $+5\n jmp $+5\n\n```\nTo provide more context I grepped some of the occurrences:\n\n```\nmov esp, [ebp+ms_exc.old_esp]\nand [ebp+ms_exc.registration.TryLevel], 0\nor [ebp+ms_exc.registration.TryLevel], 0FFFFFFFFh\ncall $+5\njmp sub_4493CA\n===== S U B R O U T I N E =======================================\npush esi\n\n[...]\n\nmov esp, [ebp+ms_exc.old_esp]\nand [ebp+ms_exc.registration.TryLevel], 0\nor [ebp+ms_exc.registration.TryLevel], 0FFFFFFFFh\ncall $+5\njmp sub_45746A\n===== S U B R O U T I N E =======================================\nmov eax, dword_4778F8\n\n[...]\n\nmov eax, ebx\ntest al, 2\njnz loc_100994B8\njmp $+5\n-----------------------------------------------------------------\nmov eax, [ebp+var_34]\nmov [ebp+var_40], eax\n\n```\nWhat is the meaning of the $+5 operand?\n\n",
  "votes": "0",
  "answers": 2,
  "views": "3k",
  "tags": [
    "disassembly",
    "x86",
    "call",
    "intel"
  ],
  "user": "knx",
  "time": "Aug 26, 2016 at 11:25",
  "comments": [],
  "answers_data": [
    {
      "content": "opcode for call $+5 is e8 00000000 so it calls the next instruction\nopcode for jmp  $+5 is e9 00000000 so it jumps to the next insturction\n\n```\n76E95FE0                        E8 00000000 CALL    76E95FE5         ;  <ntdll.call here>\n76E95FE5 <ntdll.call here>      00          DB      00\n76E95FE6                        E9 00000000 JMP     76E95FEB         ;  <ntdll.jmp_here>\n76E95FEB <ntdll.jmp_here>       00          DB      00\n76E95FEC                        EB 02       JMP     SHORT 76E95FF0   ;  <ntdll.jmp+4>\n76E95FEE                        00          DB      00\n76E95FEF                        00          DB      00\n76E95FF0 <ntdll.jmp+4>          00          DB      00\n\n```\n",
      "votes": "3",
      "user": "blabb",
      "time": "Aug 26, 2016 at 18:44",
      "is_accepted": true,
      "comments": [
        {
          "user": "peter ferrie",
          "text": "More likely E9 00 00 00 00.  EB 02 would be $+4.",
          "time": null
        }
      ]
    },
    {
      "content": "$ = Current position (beginning of the instruction)\n\n+5 = +5 bytes from the beginning of the instruction\n\njmp $+5  = jmp 3 bytes past the jmp instruction (short jmp takes 2 bytes + 3 bytes past that)\n\n",
      "votes": "2",
      "user": "Sigtran",
      "time": "Aug 26, 2016 at 11:54",
      "is_accepted": false,
      "comments": []
    }
  ]
}