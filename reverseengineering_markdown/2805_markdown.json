{
  "title": "Detecting an emulator using the windows api",
  "link": "https://reverseengineering.stackexchange.com/questions/2805/detecting-an-emulator-using-the-windows-api",
  "content": "I've been given a program that emulates the Windows API. I'm attempting to find flaws in this emulator where it either:\n\nInstead of writing functions to test the return values from various functions in the Windows API, I'm looking for a way to automate code generation (preferably in C/C++) to query a large number of functions provided by the WinAPI . Is anything like this possible or has it been done for other projects that I could leverage?\n\n",
  "votes": "10",
  "answers": 2,
  "views": "1k",
  "tags": [
    "winapi"
  ],
  "user": "drewb",
  "time": "Sep 18, 2013 at 4:55",
  "comments": [
    {
      "user": "Stolas",
      "text": "This should be on the StackOverflow, as it is a software engineering question.",
      "time": null
    },
    {
      "user": "ekse",
      "text": "I'm not sure I agree with Stolas' comment as the question is strongly related to reversing, see Rolf's answer.",
      "time": null
    },
    {
      "user": "Stolas",
      "text": "@ekse, it is related to Assembly not reverse engineering. Or maybe Security when you try to write a FUD-Virus (or something like that). Nevertheless the subject is interesting ;)",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I've done this same exercise with anti-virus engines on a number of occasions.  Generally the steps I use are:\n\n",
      "votes": "12",
      "user": "Rolf Rolles",
      "time": "Sep 18, 2013 at 8:00",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "Previous answer is good.  I would say this depends on machine and emulator.  There are many more tricks to recognize emulators.\n\nYou might look at the environment, is there an emultor in the file system?  Is the number of running applications indicating a virtual application?\n\nAsk the operating system whether the application is debugged; different methods exist, most are easily defeated.\n\nI have a program which measures the execution time between close instructions.  If the machine does not have hardware support for emulation, this is pretty reliable.\n\nUse google for anti-debug\n\nChris Jacobi\n\n",
      "votes": "-1",
      "user": "Chris Jacobi",
      "time": "Dec 27, 2013 at 2:34",
      "is_accepted": false,
      "comments": [
        {
          "user": "perror",
          "text": "This is more a comment than an answer. You do not give any effective way to detect emulation... Try to give at least some technicalities about emulation detection to improve your answer.",
          "time": null
        }
      ]
    }
  ]
}