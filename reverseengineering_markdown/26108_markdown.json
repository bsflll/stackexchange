{
  "title": "how do I calculate crc32 of a u-boot header in a modified firmware image?",
  "link": "https://reverseengineering.stackexchange.com/questions/26108/how-do-i-calculate-crc32-of-a-u-boot-header-in-a-modified-firmware-image",
  "content": "I'm trying to modify an openWRT frimware in order to be able to flash it in a router, these are the steps:\n\nStep 3 is the problem for me, I can't figure out how to calculate the new CRC32 of the u-boot header. I don't know where does it start and ends, I know it's a 64 bytes however.\nWhat do I use to calculate it? (I tried crc32 tool on Linux)\n\n",
  "votes": "1",
  "answers": 1,
  "views": "1k",
  "tags": [
    "firmware"
  ],
  "user": "AK_",
  "time": "Oct 13, 2020 at 12:00",
  "comments": [
    {
      "user": "palm",
      "text": "I don't understand step 3 and 4, can you guide me? Is there a clip to watch?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I figured it out:\n\nYou reset the checksum to ZEROs then you calculate CRC32 of the u boot header (from first byte to 64th byte)\n\n```\nAA XX YY ZZ 00 00 00 00 ....\n\n```\nthe first 4 bytes are for magic word; the next 4 bytes are the checksum.\n\n",
      "votes": "1",
      "user": "AK_",
      "time": "Oct 13, 2020 at 14:13",
      "is_accepted": false,
      "comments": []
    }
  ]
}