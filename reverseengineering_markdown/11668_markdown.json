{
  "title": "Patching Application on OSX (Memory Protection)",
  "link": "https://reverseengineering.stackexchange.com/questions/11668/patching-application-on-osx-memory-protection",
  "content": "I'm patching an executable on OSX. So far I know the patches have been applied successfully.\n\nSteps taken (via LLDB):\n\n```\nlldb /users/Brandon/Desktop/Test.app/Contents/MacOS/Test\nb start\nrun\nbr del 1\nmemory write 0x0006cc9f 0xB8\nmemory write 0x0006cc9f 0x01\nmemory write 0x0006cc9f 0x00\nmemory write 0x0006cc9f 0x00\nmemory write 0x0006cc9f 0x00\nprocess continue\n\n```\nEverything works fine. The above changes:\n\ncall testFunc to mov eax, 1. TestFunc is simple, it looks like:\n\n```\nbool testFunc()\n{\n    return 0;\n}\n\n```\nNow if I apply this patch via IDA-Pro/Hex-Rays, it does NOT run! I applied the patches via IDA-Pro and ran the executable but that function never seems to be executed.\n\nHowever, if I take the same patched executable and I run:\n\n```\nmemory read 0x0006cc9f\n\n```\nIt prints: 0xB8, 0x01, 0x00, 0x00, 0x00 which is my patch! So the patch is applied.\n\nNow if I run the same memory write code in lldb on the already patched executable, and then process continue the executable behaves correctly.\n\nI suspect it's because it's some sort of memory protection. How can I re-protect my executable after patching it?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "899",
  "tags": [
    "osx",
    "patching"
  ],
  "user": "Brandon",
  "time": "Jan 1, 2016 at 0:44",
  "comments": [],
  "answers_data": [
    {
      "content": "IDA Pro does not allow patching an image by default. When IDA Pro analyzes a binary, it is read into its on format; the original executable from that point forward doesn't need to be around. \n\nYou can however enable IDA Pro patching feature but you must be sure to have the original binary. With patching enabled in IDA Pro config, you select the following from their drop down menu: Edit > Patch Program > Apply Patch to ensure the change is committed.\n\nIt's is worth noting IDA Pro warns users to be cautious with this capability. Not sure it has ever been formally tested which could mean you will receive undefined behavior. If you have your doubts I suggest patching with some other utility (hex editor, debugger/disassembler).\n\n",
      "votes": "1",
      "user": "in70x",
      "time": "Jul 20, 2019 at 21:25",
      "is_accepted": false,
      "comments": [
        {
          "user": "Brandon",
          "text": "I actually solved it eventually.. It turns out when you patch an executable on Mac, it must be Re-Signed with a developer certificate or distribution certificate because its signature changed and it will no longer run. I'm not sure if IDA pro somehow fixes this.",
          "time": null
        },
        {
          "user": "in70x",
          "text": "Ah yes. You can also force it to load non-signed binaries. Jtool is great to work with things like that. It is like otool but a bit better.",
          "time": null
        }
      ]
    }
  ]
}