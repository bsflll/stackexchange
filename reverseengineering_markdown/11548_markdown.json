{
  "title": "Why is there no MFCxx.dll in the import table?",
  "link": "https://reverseengineering.stackexchange.com/questions/11548/why-is-there-no-mfcxx-dll-in-the-import-table",
  "content": "I have an exe which I'm confident uses MFC(I have seen the code and it heavily uses MFC) but when I see the Import Table why don't I see  MFCxx.dll entry... \n\n",
  "votes": "0",
  "answers": 1,
  "views": "73",
  "tags": [
    "disassembly",
    "malware"
  ],
  "user": "rebel87",
  "time": "Dec 16, 2015 at 12:41",
  "comments": [],
  "answers_data": [
    {
      "content": "One of three possibilities:\n\n",
      "votes": "1",
      "user": "Jason Geffner",
      "time": "Dec 16, 2015 at 14:09",
      "is_accepted": true,
      "comments": [
        {
          "user": "Guntram Blohm",
          "text": "4th possibility: The .exe uses MFC, but not directly; it might use a framework that builds on MFC. In this case, the .exe might just link in the framework dll, which then links the MFC dll. Dependency Walker is your friend in these cases.",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "\"(I have seen the code and it heavily uses MFC)\" - I had assumed rebel87 meant in the EXE module itself, but if rebel87 meant that MFC code was just seen in the process's address space in general, then yes, @guntram-blohm, that's a 4th possibility.",
          "time": null
        }
      ]
    }
  ]
}