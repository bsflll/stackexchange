{
  "title": "What type of function gets called using a register instead of address in the binary? how to find the address statically?",
  "link": "https://reverseengineering.stackexchange.com/questions/21154/what-type-of-function-gets-called-using-a-register-instead-of-address-in-the-bin",
  "content": "So I'm trying to write a reversing tool right now and trying to make a CALL graph\n\nthe problem I'm having is some calls are like Call *eax instead Call 'address' \n\nI can easily generate the call-graph with absolute calls, but not with these\n\nso i have three questions :\n\n",
  "votes": "1",
  "answers": 1,
  "views": "179",
  "tags": [
    "binary-analysis",
    "x86",
    "binary"
  ],
  "user": "Max",
  "time": "Apr 15, 2019 at 12:50",
  "comments": [],
  "answers_data": [
    {
      "content": "",
      "votes": "3",
      "user": "Community",
      "time": "Jun 17, 2020 at 9:54",
      "is_accepted": true,
      "comments": [
        {
          "user": "Max",
          "text": "So even IDA cannot include call *eax in their call graph therefore making it not a complete call-graph? and is this a common thing to happen inside the program and not in the initialization routines? meaning will i miss important calls if i dont include call *register inside my call graph?",
          "time": null
        },
        {
          "user": "Caroline",
          "text": "IDA does not resolve all of them, only some of them. It is common if you have a C++ code handling objects and calling methods on this object.",
          "time": null
        }
      ]
    }
  ]
}