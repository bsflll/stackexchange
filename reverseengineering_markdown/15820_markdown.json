{
  "title": "What are these extra members in this derived constructor?",
  "link": "https://reverseengineering.stackexchange.com/questions/15820/what-are-these-extra-members-in-this-derived-constructor",
  "content": "In Recon 2011: Practical C++ Decompilation there is this example where some fields are assigned before the derived class' virtual table pointer is:\n\n```\npublic: __thiscall CMachine::CMachine(void) proc near\n mov edi, edi\n push esi\n mov esi, ecx\n call CDataStoreObject::CDataStoreObject(void)\n and dword ptr [esi+24h], 0\n or dword ptr [esi+28h], 0FFFFFFFFh\n and dword ptr [esi+2Ch], 0\n or dword ptr [esi+30h], 0FFFFFFFFh\n mov dword ptr [esi], offset const CMachine::`vftable'\n mov eax, esi\n pop esi\n retn\npublic: __thiscall CMachine::CMachine(void) endp\n\n```\nIgor mentions that the assigning of those fields are not written by the programmer because they come before the virtual table pointer. Would someone mind explaining what these fields are and possibly what the values could represent?\n\n",
  "votes": "0",
  "answers": 1,
  "views": "77",
  "tags": [
    "vtables"
  ],
  "user": "Ci3",
  "time": "Jul 16, 2017 at 10:27",
  "comments": [],
  "answers_data": [
    {
      "content": "the c++ code is like:\n\n```\nCMachine *__thiscall CMachine::CMachine(CMachine\n*this)\n{\nCDataStoreObject::CDataStoreObject(&this->_);\nthis->dword24 = 0;\nthis->dword28 = -1;\nthis->dword2C = 0;\nthis->dword30 = -1;\nthis->_._vtable = (CMachine_vtable\n*)&CMachine::_vftable_;\nreturn this;\n}\n\n```\nthe class CMachine has a member or a super class CDataStoreObject.\nthe assigning of those fields should/could be the members of class CDataStoreObject. or for alignment.\n\ncompiler optimization in details might looks odd seeing from machine code.\nit depends on the optimization level and compiler type/version.\n\n",
      "votes": "0",
      "user": "yufeng",
      "time": "Jul 19, 2017 at 3:45",
      "is_accepted": true,
      "comments": []
    }
  ]
}