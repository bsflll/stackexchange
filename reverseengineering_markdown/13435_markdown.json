{
  "title": "Reverse Engineering a 16-bit CRC algortihm",
  "link": "https://reverseengineering.stackexchange.com/questions/13435/reverse-engineering-a-16-bit-crc-algortihm",
  "content": "I have a set of data bytes and their CRC values available to me. I want to know the CRC algorithm used by it.\n\nCRC is 16 bit long.\n\nfirstly I tried to find out using CRC RevEng but that is showing \"no model found message\".\n\nThen I followed CRC Reverse Engineeing paper written by Greg Ewing.\n\nThen I found that my data set is following the superposition principle\nso I came to the conclusion that it is using some standard algorithm to calculate CRC.\n\nAccording to Greg's paper: \n\nIn my case polynomial is not coming same every time.\n\nI have printed CRC values for different messages, their LSB and CRC value after right shift operation and polynomial value to be XORed in order to drive C1 from C2\n\n\n\nI have observed that I can get C1 from C2 by three polynomial values which are shown in above image 0x9008, 0x8000, 0x1008\n\nI don't know why it is coming different.\nI am stuck at this point\n\nI'm hoping that I can get more hints here on Reverse Engineering Stack Exchange.\n\nRoy\n\n",
  "votes": "3",
  "answers": 0,
  "views": "835",
  "tags": [
    "crc",
    "binary-diagnosis"
  ],
  "user": "Roy4u",
  "time": "Jun 17, 2020 at 9:54",
  "comments": [
    {
      "user": "NirIzr",
      "text": "You also forgot 0x0 as a value, which makes me wonder if you have any errors there. I also suggest taking a look at the messages and trying to predict their CRC. specifically very short messages, and ones that are similar to each other.",
      "time": null
    },
    {
      "user": "Roy4u",
      "text": "According to Grag william paperActually when LSB is zero we don't have need to XOR with any polynomial according to Grag Williams Paper but in my case sometimes there is a need to XOR with polynomial that's why i didn't mention zero as value.",
      "time": null
    }
  ],
  "answers_data": []
}