{
  "title": "IDA Python call func from idb names with specific arguments",
  "link": "https://reverseengineering.stackexchange.com/questions/19066/ida-python-call-func-from-idb-names-with-specific-arguments",
  "content": "I'm new in IDA Python, so the question is hard for me. I didn't find any solution in google, so I have to ask for the help there. During code analysis I found decryption function. There are about 1000 calls of this function with different arguments. The function takes one argument - encrypted string, which address is moved to eax before the calling.\nI'd like to write script for running the function for all encrypted strings. I find address of the function using idc.LocByName. Then I found all references to this function (using idautils.CodeRefsTo(addr, 1)). Now I to find the function's argument for each reference and call the function with this argument. \nCould you please advise the way I can do it?\nThanks.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "662",
  "tags": [
    "idapython"
  ],
  "user": "rudolfninja",
  "time": "Aug 14, 2018 at 22:16",
  "comments": [],
  "answers_data": [
    {
      "content": "In general you have 3 possibilities:\n\n1 - Recover arguments statically and use AppCall either with IDC or IDAPython in debug session\n\n2 - Rewrite decryption function in python, recover arguments statically and run the recovered function on each occurrence.\n\n3 - Use something like PyEmu for running functions.\n\nUsually I find variant 2 easier then others.\n\n",
      "votes": "0",
      "user": "w s",
      "time": "Aug 15, 2018 at 7:50",
      "is_accepted": true,
      "comments": [
        {
          "user": "rudolfninja",
          "text": "Thanks. Variant two looks like solution. I'll try to implement it.",
          "time": null
        }
      ]
    }
  ]
}