{
  "title": "how can I know if PE file has appended data or not?",
  "link": "https://reverseengineering.stackexchange.com/questions/21789/how-can-i-know-if-pe-file-has-appended-data-or-not",
  "content": "while doing this, I dont know the whole file size (pe size + appended data size)\nmy PE file is embeded in othe pe file, so I dont know if it has appended data or not and also dont know its total size.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "334",
  "tags": [
    "pe",
    "binary-format"
  ],
  "user": "Sanket Adkar",
  "time": "Jul 28, 2019 at 18:35",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "If the embedded PE file is in a resource, you can simply retrieve the size of the resource. Also, I think I remember that the Authenticode signatures are outside of the actual image, i.e. an overlay.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "As far as I know, you can't.\n\nWhile IMAGE_OPTIONAL_HEADER.SizeOfImage gives you the size of the whole PE file mapped to memory, it does not account for appended data.\n\nAppended data is commonly called \"overlay\" and tools actually detect if overlay data is present by checking if the file contains more data than accounted for by the SizeOfImage field.\n\nAs far as I know it is even more problematic - the PE loader does not load overlay data to memory. If an application wants to access overlay data it will have to access the file on disk, and if you take a memory dump only it will definitely lack any overlay data the application might have had.\n\n",
      "votes": "1",
      "user": "Johann Aydinbas",
      "time": "Jul 29, 2019 at 1:02",
      "is_accepted": false,
      "comments": []
    }
  ]
}