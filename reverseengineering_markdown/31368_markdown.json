{
  "title": "Decoding a list of integer values in unknown format",
  "link": "https://reverseengineering.stackexchange.com/questions/31368/decoding-a-list-of-integer-values-in-unknown-format",
  "content": "I'm attempting to reverse engineer a binary file format which is used to encode a list of integer values. I can't work out how this format works, as the number of bytes used to encode each value changes depending on the value itself, yet there's nothing I can see in the format which gives any indication of how many bytes each integer value contains!\n\nHere's a sample of binary file contents vs their expected integer list values:\n\nClearly the format starts with 0a total_size 0a list_size followed by the actual list of values, but I can't work out how the values could possibly be encoded!\n\nAny assistance or insights would be greatly appreciated...\n\n",
  "votes": "2",
  "answers": 2,
  "views": "98",
  "tags": [
    "binary-analysis",
    "file-format"
  ],
  "user": "ndawson",
  "time": "Jan 9, 2023 at 4:01",
  "comments": [],
  "answers_data": [
    {
      "content": "it is clear that if the high bit of the first byte is not set then it is just the value of the byte\n\nSo we can suspect that the high bit is a signal for extending the number\n\nchecking the lone 1428 value which in hex is 0x0594 we can see the sequence start with 94 (which has the high bit set) so it's in little endian followed by 0b and we can calculate 5<<1 | 1 = 0xb\n\nSo I presume the decoder code is\n\n```\nacc = 0\nshift = 0\nfor each byte \n   acc |= (byte & 0x7f) << shift\n   shift += 7\n   if high bit not set\n       emit acc\n       acc = 0\n       shift = 0\n\n```\nThis also works with the 824 in one of the givens which matches to b8 06 and (0xb8 & 0x7f) | (0x06 << 7) = 0x338 = 824\n\n",
      "votes": "2",
      "user": "ratchet freak",
      "time": "Jan 9, 2023 at 13:27",
      "is_accepted": true,
      "comments": [
        {
          "user": "ndawson",
          "text": "Works perfectly, thank you!",
          "time": null
        }
      ]
    },
    {
      "content": "The answer from @ratchet freak is correct.\n\nTo add a little more information, this format is known as LEB128.  It's not uncommon and pops up in various places. For example, DWARF3 debug info and android's dalvik executable files.\n\n",
      "votes": "1",
      "user": "Ian Cook",
      "time": "Jan 10, 2023 at 23:07",
      "is_accepted": false,
      "comments": []
    }
  ]
}