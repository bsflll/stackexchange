{
  "title": "Patching PLT entries",
  "link": "https://reverseengineering.stackexchange.com/questions/8520/patching-plt-entries",
  "content": "I was reading this CTF write up and wanted to know more than the author cared to explain. \n\nWhat I wanted to know is what's the best way of going about patching PLT or GOT entries directly into the binary? \n\n",
  "votes": "3",
  "answers": 3,
  "views": "894",
  "tags": [
    "elf",
    "got",
    "plt"
  ],
  "user": "movecx",
  "time": "Mar 22, 2015 at 15:26",
  "comments": [],
  "answers_data": [
    {
      "content": "You could use radare2 to do this. First open the binary in \"write\" mode.\n\n```\nradare2 -w ./binaryname\n\n```\nNow you need to seek to the address you wish to modify: \n\n```\ns 0x8048739\n\n```\nAssuming that you wished to write out, say 5 NOPs for whatever reason, you could do:\n\n```\nwx 9090909090\n\n```\nFinally to save and quit:\n\n```\nq\n\n```\n",
      "votes": "2",
      "user": "perror",
      "time": "Apr 27, 2015 at 10:21",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "You could use a hex editor like HxD or HIEW to modify the binary directly. Find the hex bytes that you want to change and lookup the opcodes that you want to change them to.  Also, you can patch directly from IDA if you want as well, which is made easier with the idapatcher plug in. \n\nhttps://thesprawl.org/projects/ida-patcher/\n\n",
      "votes": "2",
      "user": "tyh",
      "time": "Mar 23, 2015 at 0:00",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "You can do this pretty easily with Pwntools:\n\n```\nfrom pwn import *\n\nelf = ELF('./your-binary')\nelf.asm(elf.symbols.ptrace, 'xor eax, eax; ret')\nelf.save('./your-patched-binary')\n\n```\n",
      "votes": "1",
      "user": "sudhackar",
      "time": "Sep 29, 2020 at 5:50",
      "is_accepted": false,
      "comments": [
        {
          "user": "David",
          "text": "Is that a typo in max instead of eax?",
          "time": null
        }
      ]
    }
  ]
}