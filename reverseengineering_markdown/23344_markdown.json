{
  "title": "IDA Pro SDK APIs inf.is_64bit() and inf.is_32bit() are not working as expected!",
  "link": "https://reverseengineering.stackexchange.com/questions/23344/ida-pro-sdk-apis-inf-is-64bit-and-inf-is-32bit-are-not-working-as-expected",
  "content": "As per this already answered question How to get the CPU architecture via Idapython?, for reasons I'm unable to figure out, both inf.is_64bit() and inf.is_32bit() are not working for me. I'm using IDA C++ SDK v7.1. Even if the executable in the database is 64-bit, it still goes through the 32-bit check. Any idea why this is happening?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "410",
  "tags": [
    "idapro-sdk"
  ],
  "user": "Pocanatos",
  "time": "Feb 26, 2020 at 17:22",
  "comments": [
    {
      "user": "Robert",
      "text": "What CPU architectures have you tested? x86/amd64, ARMv7/ARMv8a, or something else?",
      "time": null
    },
    {
      "user": "Xigma",
      "text": "The sample I'm testing is a 64-bit Windows executable file loaded into the 64-bit version of IDA. So, if I run both APIs on it, they both return True!",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I figured it out. To determine if the binary is\n\nAs of IDA 8.x you can find the following in ida.hpp which clarifies the above (trimmed to be more concise):\n\n```\n// unfortunately the name inf_is_32bit was used in the past to mean inf_is_32bit_or_higher.\n// it was misleading, this is why we have more explicit names now.\nbool inf_is_32bit_or_higher(void);\nbool inf_is_32bit_exactly(void);\n\n```\n",
      "votes": "1",
      "user": "0xC0000022L",
      "time": "Jul 14, 2023 at 23:06",
      "is_accepted": false,
      "comments": [
        {
          "user": "0xC0000022L",
          "text": "I recall this breaking something in RetDec, saw a ticket for this on GitHub, IIRC.",
          "time": null
        }
      ]
    }
  ]
}