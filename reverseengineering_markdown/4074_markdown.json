{
  "title": "Any way to fix misinterpreted case jump tables in Ida Pro?",
  "link": "https://reverseengineering.stackexchange.com/questions/4074/any-way-to-fix-misinterpreted-case-jump-tables-in-ida-pro",
  "content": "I'm disassembling a function that seems to use a switch statement, resulting in an indexed indirect jump, in two different places (same function!):\n\n```\n0005FA58                 mov     al, [eax+112h]\n0005FA5E                 cmp     al, 4\n0005FA60                 ja      loc_5FBED\n0005FA66                 and     eax, 0FFh\n0005FA6B                 jmp     cs:off_5F98C[eax*4]\n0005FA73\n\n\n00060011                 mov     al, byte ptr unk_A4E30[eax]\n00060017                 cmp     al, 3\n00060019                 ja      short loc_60053\n0006001B                 and     eax, 0FFh\n00060020                 jmp     cs:off_5F9A0[eax*4]\n\n0005F98C off_5F98C       dd offset loc_5FBCC, offset loc_5FA73, offset loc_5FAC5, offset loc_5FB14, offset loc_5FB66\n0005F98C                                         ; DATA XREF: FunctionStart+BB\n0005F9A0 off_5F9A0       dd offset loc_60049, offset loc_6003E, offset loc_60031, offset loc_60028\n0005F9A0                                         ; DATA XREF: FunctionStart+670\n\n```\nThe first jump table has 5 entries, the second one 4. Unfortunately, the compiler placed them directly behind each other in memory. This seems to confuse IDA when calculating the graph connections for those nodes:\n\n\n\nEdit, as the the wording of the question was probably misleading\n\nThe graph node shows 9 outgoing connections. 5 of them are true connections, the next 4 are not - they belong to a different jump table that happens to be directly after this one in memory. I'd like to tell IDA \"This jump table has 5 valid entries, ignore the other ones when creating the graph node\". Is there any way to do this?\n\nThe original question was:\n\nI already tried defining the jump tables as arrays, then undefine the function and re-define it as code, but that didn't change anything.\n\n(I'm using IDA 5.0, as this is a hobby project, and i don't want to spend several hundred bucks on something i'll use a few times a year).\n\n",
  "votes": "7",
  "answers": 2,
  "views": "7k",
  "tags": [
    "ida",
    "disassembly"
  ],
  "user": "Guntram Blohm",
  "time": "Apr 15, 2014 at 17:48",
  "comments": [],
  "answers_data": [
    {
      "content": "It's possible, but not in the freeware version:\n\n",
      "votes": "7",
      "user": "Igor Skochinsky",
      "time": "Apr 15, 2014 at 22:39",
      "is_accepted": true,
      "comments": [
        {
          "user": "Guntram Blohm",
          "text": "Not what i wanted to hear, but probably the best answer i'll get.",
          "time": null
        }
      ]
    },
    {
      "content": "I'm not quite sure if I understand your problem, but how I configure jump tables is:\n\nEdit:\nI've been a bit too wordy.  What I think you need is to separate the jumps into one per line, and you do that with the array command {*} and uncheck all the checkboxes. And my experience with graph view is that it doesn't know how to handle jump tables, no matter how you configure them.\n\n",
      "votes": "3",
      "user": "perror",
      "time": "Apr 15, 2014 at 10:37",
      "is_accepted": false,
      "comments": [
        {
          "user": "Guntram Blohm",
          "text": "Sorry, i guess my question was misleading (\"remove the extra connections from the first table\"). My problem is that the graph node has nine outgoing connections, where it should have only five of them, so some of the links are just wrong, and the graph is more complex than it should be. I'd like to somehow tell IDA \"this jump table has 5 entries, even if it seems to be 9, because the last 4 belong to a different jump table\". Unfortunately, your \"doesn't know how to handle jump tables, no matter how you configure them\" means it's probably impossible.",
          "time": null
        },
        {
          "user": "Paddywhacker",
          "text": "Maybe I'm wrong about that, but I thought the graph view was broken by jump tables so I never pursued it.  It seems that you have to tell IDA that part of the jump table is within one function (proc) and part within another.",
          "time": null
        }
      ]
    }
  ]
}