{
  "title": "What does BindImageEx actually do?",
  "link": "https://reverseengineering.stackexchange.com/questions/22013/what-does-bindimageex-actually-do",
  "content": "Docs.\nIf I understand this correctly, this function pre-computes virtual addresses of imported DLLs and writes them to the IAT of an image (provided that BIND_NO_UPDATE is not set as parameter). My understanding is that you do this to an image (on file) to make it start faster.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "154",
  "tags": [
    "windows",
    "pe"
  ],
  "user": "Whosdatdev",
  "time": "Aug 31, 2019 at 21:32",
  "comments": [],
  "answers_data": [
    {
      "content": "Windows Loader Knows the import is bound because bind process also writes a timestamp of the bounded module    \n\nsuppose x.exe is bound to y.dll\ny.dll has a TimeDateStamp in it peheader\nwhen bound it writes the TimeDateStamp of y.dll in the\n_IMAGE_BOUND_IMPORT_DESCRIPTOR \n\n```\n0:000> dt ole32!_IMAGE_BOUND_IMPORT_DESCRIPTOR\n   +0x000 TimeDateStamp    : Uint4B\n   +0x004 OffsetModuleName : Uint2B\n   +0x006 NumberOfModuleForwarderRefs : Uint2B\n0:000>\n\n```\nThe Api in Question has a callback StatusRoutine that will be called during the Binding Process\nwhen you Pass noupdate the call back will still be called\nyou can do some inspection and may be take actions there but leave the exe un affected\n\nBIND_NO_BOUND_IMPORTS  does not write a new ImportTable \n\nQuoting From Docs \n\n",
      "votes": "1",
      "user": "blabb",
      "time": "Sep 1, 2019 at 21:26",
      "is_accepted": true,
      "comments": []
    }
  ]
}