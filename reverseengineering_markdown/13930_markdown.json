{
  "title": "Possible to get the full url behind javascript button?",
  "link": "https://reverseengineering.stackexchange.com/questions/13930/possible-to-get-the-full-url-behind-javascript-button",
  "content": "I am programming a little tool for patching. I found the microsoft update catalog, where all updates are stored, and I managed to look for some of them.\n\nBut my problem is now that the actual download link is behind a button, which opens a new window where I can't see the actual URL with the GET parameter.\n\nI already tried to intercept GET/POST requests through chrome but it didn't trigger the dev tools of chrome, since it opens a new window.\n\nThe button I am talking about is for example here: https://www.catalog.update.microsoft.com/Search.aspx?q=MS16-141\n\nCan anybody help me out on this one and give me a link with the parameter which https://www.catalog.update.microsoft.com/DownloadDialog.aspx uses?\n\n",
  "votes": "3",
  "answers": 1,
  "views": "3k",
  "tags": [
    "javascript",
    "websites"
  ],
  "user": "0x9E",
  "time": "Nov 14, 2016 at 16:42",
  "comments": [],
  "answers_data": [
    {
      "content": "If you want to get the whole listing of updates, first you should write an xpath to get the uids of each download button, you should get a bunch of uids like xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\nAfter that, POST to https://www.catalog.update.microsoft.com/DownloadDialog.aspx with [{\"size\":0,\"languages\":\"\",\"uidInfo\":\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\"updateID\":\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"}] should give you all the data you need.\n\nTo obtain this data, just open a chrome window of one of the download buttons and open dev-tools on it, then just inspect the network traffic and check the request headers, that should be enough.\n\n",
      "votes": "1",
      "user": "BPL",
      "time": "Nov 14, 2016 at 19:08",
      "is_accepted": false,
      "comments": []
    }
  ]
}