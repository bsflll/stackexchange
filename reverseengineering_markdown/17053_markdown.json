{
  "title": "Radare2: inspecting renamed variables",
  "link": "https://reverseengineering.stackexchange.com/questions/17053/radare2-inspecting-renamed-variables",
  "content": "I'm practicing with Radare2, latest commit.\n\n```\nradare2 2.3.0-git 16814 @ linux-x86-64 git.2.2.0-5-g61a903315\n\n```\nDuring my sessions, I need to rename local variables to a more understandable name, e.g.\n\n```\nvar int local_110h @ rbp-0x110\n:> afvn local_110h commandLine\n\n```\nIs there a command to inspect what's inside this variable and, eventually, what's pointing to?\n\nI was expecting this:\n\n```\npx @ commandLine\npx @ [commandLine]\n\n```\nBut it doesn't work:\n\n```\n:>px @ commandLine\nInvalid address (commandLine)\n|ERROR| Invalid command 'px @ commandLine' (0x70)\n\n```\nPassing through rbp works flawlessly.\n\n```\npx @ rbp-0x100\n\n```\n",
  "votes": "8",
  "answers": 1,
  "views": "2k",
  "tags": [
    "radare2"
  ],
  "user": "Kartone",
  "time": "Dec 27, 2017 at 20:09",
  "comments": [],
  "answers_data": [
    {
      "content": "You should use afvd.  \n\n```\n[0x00402a00]> afv?\n...\n...\n| afvd name     output r2 command for displaying the value of args/locals in the debugger\n...\n...\n\n```\nExecuting only afvd will print you the values of all the local variables in the function, and if you'll execute it with a variable name you'll get radare2 command as a result:\n\n```\n[0x00402a00]> afvn local_110h commandLine\n[0x00402a00]> afvd commandLine\npxr $w @rsp+0x110\n\n```\nyou'll get pxr $w @rsp+0x110, which is a radare2 command.\n\nYou can add a dot . before it to execute it:\n\n```\n[0x00402a00]> .afvd commandLine\n0x7fffdc9e9258  0x28ffedf4ccd19d64   d......(\n\n```\nIf, for example, you only want the address, you can use radare's internal grep.\n\n```\n[0x00402a00]> .afvd commandLine~[0]\n0x7fffdc9e9258\n\n```\nFor more information about radare's grep, execute ~?\n\n",
      "votes": "5",
      "user": "Megabeets",
      "time": "Dec 27, 2017 at 20:16",
      "is_accepted": true,
      "comments": []
    }
  ]
}