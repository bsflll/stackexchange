{
  "title": "extract opcodes using radare",
  "link": "https://reverseengineering.stackexchange.com/questions/17334/extract-opcodes-using-radare",
  "content": "When we have many binaries, there is a python base solution for disassemble and extract opcodes from binaries in IDA program.\nIs there any or similar solution to disassemble binaries for Radare2?\n\n",
  "votes": "-1",
  "answers": 2,
  "views": "964",
  "tags": [
    "ida",
    "radare2",
    "disassemblers",
    "assembly"
  ],
  "user": "hamid darabian",
  "time": "Jan 30, 2018 at 13:13",
  "comments": [
    {
      "user": "Paweł Łukasik",
      "text": "use r2pipe? but what output do you expect to get?",
      "time": null
    },
    {
      "user": "hamid darabian",
      "text": "I want disassembled opcodes of binaries. How can I use r2pipe?",
      "time": null
    },
    {
      "user": "Paweł Łukasik",
      "text": "'pd N' and you can specify as N whatever number you want and it will disassemble N instructions",
      "time": null
    },
    {
      "user": "Megabeets",
      "text": "I suggest you to read the radare2 book, it will teach you the basics.",
      "time": null
    },
    {
      "user": "Jongware",
      "text": "Are you sure you want to disassemble \"the whole file\"?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Radare2 uses capstone for disassembling, and capstone has a python API.\n\nExample from their website:\n\n```\nfrom capstone import *\n\nCODE = b\"\\x55\\x48\\x8b\\x05\\xb8\\x13\\x00\\x00\"\n\nmd = Cs(CS_ARCH_X86, CS_MODE_64)\nfor i in md.disasm(CODE, 0x1000):\n    print(\"0x%x:\\t%s\\t%s\" %(i.address, i.mnemonic, i.op_str))\n\n```\n",
      "votes": "2",
      "user": null,
      "time": "Jan 30, 2018 at 18:58",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": ":>radare2 -c \"aaa;fs functions;pdf @@ fcn.*;q\" x32dbg.exe > foo.txt\n\n:\n\n```\n\\>grep -i (fcn) foo.txt\n/ (fcn) fcn.004020f7 21\n/ (fcn) fcn.00401ff1 266\n/ (fcn) fcn.00402580 69\n/ (fcn) fcn.004020ee 9\n/ (fcn) fcn.004025c5 20\n xxxxxxxxxxxxxxxx\n\n```\na sample disassembled function\n\n```\n:\\>grep -A 18 -i \"(fcn) fcn.004025c5\" foo.txt\n/ (fcn) fcn.004025c5 20\n|   fcn.004025c5 ();\n|           ; var int local_10h @ ebp-0x10\n|              ; UNKNOWN XREF from 0x004020e5 (sub.KERNEL32.dll_DecodePointer_4e)\n|              ; CALL XREF from 0x0040242c (entry0)\n|              ; CALL XREF from 0x004020e5 (sub.KERNEL32.dll_DecodePointer_4e)\n|              ; CALL XREF from 0x00402647 (fcn.004025fc)\n|              ; CALL XREF from 0x004026c1 (fcn.0040266b)\n|           0x004025c5      8b4df0         mov ecx, dword [local_10h]\n|           0x004025c8      64890d000000.  mov dword fs:[0], ecx\n|           0x004025cf      59             pop ecx\n|           0x004025d0      5f             pop edi\n|           0x004025d1      5f             pop edi\n|           0x004025d2      5e             pop esi\n|           0x004025d3      5b             pop ebx\n|           0x004025d4      8be5           mov esp, ebp\n|           0x004025d6      5d             pop ebp\n|           0x004025d7      51             push ecx\n\\           0x004025d8      c3             ret\n\n:\\>\n\n```\n",
      "votes": "0",
      "user": "blabb",
      "time": "Jan 30, 2018 at 19:30",
      "is_accepted": false,
      "comments": []
    }
  ]
}