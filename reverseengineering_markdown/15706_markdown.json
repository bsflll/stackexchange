{
  "title": "IDA Pro - Applying function signatures",
  "link": "https://reverseengineering.stackexchange.com/questions/15706/ida-pro-applying-function-signatures",
  "content": "I have three files:\n\n#1 imports a number of functions from #2.\n\nIs there a way for me to leverage #3 to automatically apply signatures from #3 to:\n\n",
  "votes": "1",
  "answers": 2,
  "views": "2k",
  "tags": [
    "ida",
    "linux",
    "c",
    "elf"
  ],
  "user": "pandasauce",
  "time": "Jun 28, 2017 at 9:07",
  "comments": [],
  "answers_data": [
    {
      "content": "There are several functions in the SDK, in typeinf.hpp or ida_typeinf.py that could be of use here, with the python API being much easier to use.\n\nSo you could either parse the name from the function declaration yourself, and then use parse_decl to parse each declaration seperately.\n\nOr you could add typedef to the start of each declaration, so ida will store all your declarations, by name in a type libary.\n\n",
      "votes": "1",
      "user": "Willem Hengeveld",
      "time": "Sep 26, 2017 at 22:13",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Try using File -> Load File -> Parse C Header File (Ctrl+F9). You might need to tweak some things in the header file.\n\n",
      "votes": "0",
      "user": "joxeankoret",
      "time": "Jun 28, 2017 at 9:37",
      "is_accepted": false,
      "comments": [
        {
          "user": "pandasauce",
          "text": "Thank you for your response. I have tried this and it did not work. IDA successfully parses the file. I can manually fix function signatures by telling IDA what the arguments are, including custom structure pointers. However, this is very time consuming and feels unnecessary. Is there a way for it to automatically or semi-automatically apply signatures from the header file to functions matched by name?",
          "time": null
        },
        {
          "user": "NirIzr",
          "text": "Yes. that way is the feature described above. It does not parse complicated C constructs and as mentioned you may need to tweak the file to make it usable by IDA. You can write a script to do that.",
          "time": null
        },
        {
          "user": "pandasauce",
          "text": "I managed to get first scenario to work using tilib. What changes would I need to make to the header file to get the second scenario to work, i.e. apply function signatures to the library file?",
          "time": null
        }
      ]
    }
  ]
}