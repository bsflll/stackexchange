{
  "title": "How to make a reference to a different segment?",
  "link": "https://reverseengineering.stackexchange.com/questions/27127/how-to-make-a-reference-to-a-different-segment",
  "content": "I am reverse engineering a very old LE MS-DOS binary and have convinced Ghidra that there are two segments in the file, one is the code segment and another one is the data segment.\n\nNow when I look ad the disassembled code in a function of the code segment, I see this:\n\n```\n   cseg:00074b82 66 c7 05        MOV        word ptr [DAT_00002670],0x1a00\n                 70 26 00 \n                 00 00 1a\n\n```\nThe problem is that I can not work with DAT_00002670, because Ghidra thinks that it is a reference to the code segment, but in reality it is a reference to the data segment through the DS register, so ds:0x2670 instead of cs:0x2670.\n\nI tried to edit the reference with the references editor, but there is no option to set the destination segment.\n\nHow can I change the reference, so Ghidra recognize that it goes to the data segment?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "1k",
  "tags": [
    "ghidra",
    "address",
    "segmentation"
  ],
  "user": "Jens Mühlenhoff",
  "time": "Dec 6, 2021 at 5:15",
  "comments": [],
  "answers_data": [
    {
      "content": "You can override the address of a reference, for example the data segment starts at 0x90000 when the executable is loaded. I specified that in the memory map.\n\nWhen I set the address of the reference to 0x92670 instead of 0x2670 Ghidra figures out that the MOV is going to the data segment.\n\nHowever the decompiler does not seem to pick that up.\n\nEdit:\n\nI have now remapped my data segment to address 0x00000. That way the decompiler picks the references up :).\n\nI had to move the code segment somewhere else, but that doesn't seem to be a problem.\n\n",
      "votes": "1",
      "user": "Jens Mühlenhoff",
      "time": "Mar 4, 2021 at 15:57",
      "is_accepted": false,
      "comments": []
    }
  ]
}