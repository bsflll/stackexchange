{
  "title": "Reverse engineering zip file",
  "link": "https://reverseengineering.stackexchange.com/questions/4251/reverse-engineering-zip-file",
  "content": "Is it possible to reverse engineer ZIP file with password, and get the password or the data that is containing. I'm wondering because there is challenge in hacking lab which is to extract file from ZIP with passwd protection, and it's category is reverse engineering but when I look at the HEX dump I only see the file name.\n\n",
  "votes": "-1",
  "answers": 2,
  "views": "11k",
  "tags": [
    "disassembly"
  ],
  "user": "user4536",
  "time": "May 3, 2014 at 17:23",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "Password cracking is not reverse engineering.",
      "time": null
    },
    {
      "user": "Hagen von Eitzen",
      "text": "If you have the file name, you may guess the file type, and then may be able to make good assumptions on the initial bytes of the plain content (\"magic numbers\")",
      "time": null
    },
    {
      "user": "Ange",
      "text": "obviously a miss-categorization from them. unless you have extra files to get the password from.",
      "time": null
    },
    {
      "user": "ShHolmes",
      "text": "RE is the process, which purpose may differ. Password cracking is one of the possible uses of RE. In this particular case, you reverse engineer the zip file (learning file headers, magic numbers etc) to get the idea of how the file is organised IN ORDER to get something (change file contents, circumvent the file protection, like password etc). So, I don't understand the first comment here.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "From http://www.elcomsoft.com/archpr.html -\n\nIf those special cases don't apply, you'd need to apply standard brute-force techniques. Either way, you'd want to use Advanced Archive Password Recovery or a similar tool.\n\n",
      "votes": "4",
      "user": "Jason Geffner",
      "time": "May 3, 2014 at 17:37",
      "is_accepted": true,
      "comments": [
        {
          "user": "user4536",
          "text": "They don't apply. Also I had finish my dictionary attack on it(top 10000 use passwords). They only way I have is brute force which is extremely slow. I think there is other way to get the password via RE because the challenge is in the section or RE.",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "I assure you, if you're not given any other context (like password clues), then either the special cases apply or brute forcing applies :)",
          "time": null
        },
        {
          "user": "user4536",
          "text": "No, but too many peoples have solve it to be brute forcing. Anyway since you are the only one who answer I will give you \"best answer\". Thanks for trying to help.",
          "time": null
        }
      ]
    },
    {
      "content": "If this is a class competition, and it's filed under Reverse Engineering, the chances are the tutor has compiled this package themselves and has used techniques you've learnt in previous lessons to store the password somewhere within the executable.\n\nLook back on the techniques you've already learnt, and try those.\n\nJudging by the question I'll assume that you've not covered advanced Reverse Engineering techniques so the first place to start would be to view all the strings in the executable - provided no encryption is used, again I'm assuming not.\n\nIf you're using Windows you can use Sys Internals Strings (http://technet.microsoft.com/en-gb/sysinternals/bb897439.aspx). IDA Pro also allows you to do this.\n\nUse a PE viewer to check whether it's a valid zip file created with WinZip, WinRar etc. It could have been created with a different program that contains a vulnerability to extract/crack the password.\n\nFailing that, and not knowing the level of your experience or class the only option left is to brute force.\n\n",
      "votes": "2",
      "user": "James Jeffery",
      "time": "May 4, 2014 at 15:10",
      "is_accepted": false,
      "comments": []
    }
  ]
}