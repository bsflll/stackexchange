{
  "title": "How can I change the value of a variable while debugging?",
  "link": "https://reverseengineering.stackexchange.com/questions/6933/how-can-i-change-the-value-of-a-variable-while-debugging",
  "content": "I know that I can output the value of a variable using \n\n```\n(gdb) p var_name\n$1 = \"varvalue\"\n\n```\nIs there a way to set the value of a variable while debugging with gdb? The document that I'm using doesn't seem to have this command. \n\nEdit\n\nI've since learned that I can change the state of objects in memory by simply calling their functions! So to modify an object of type std::string, just call the assign function as follows:\n\n```\n(gdb) call str.assign(\"New Value\")\n\n```\nThank you.\n\n",
  "votes": "3",
  "answers": 2,
  "views": "10k",
  "tags": [
    "linux",
    "gdb"
  ],
  "user": "k170",
  "time": "Jan 2, 2015 at 5:08",
  "comments": [],
  "answers_data": [
    {
      "content": "Google is your friend:\n\n```\n\n(gdb) whatis width  \ntype = double   \n(gdb) p width $4 = 13  \n(gdb) set width=47  \nInvalid syntax in expression. \n\n```\n```\n\n(gdb) set var width=47\n\n```\nYou can find the needed information in the following document:\n\n",
      "votes": "6",
      "user": "jvoisin",
      "time": "Jan 2, 2015 at 15:12",
      "is_accepted": true,
      "comments": [
        {
          "user": "k170",
          "text": "Thank you for this answer! I just tried this with a double variable and it worked, however it didn't work with std::string objects. Is a similar technique to modify std::string objects as well?",
          "time": null
        },
        {
          "user": "PhoeniX",
          "text": "check those out: sepwww.stanford.edu/public/sep/claudio/Research/Prst_ExpRefl/â€¦",
          "time": null
        },
        {
          "user": "PhoeniX",
          "text": "and this one: rsquared.sdf.org/gdb/iacv.html",
          "time": null
        }
      ]
    },
    {
      "content": "A little bit later but to set a string variable you should try this>\n\ngdb set var string_variable = 'new_string_variable'\n\nCharacter numbers must be the same for the two variable definitions, in order to apply the change as appropriate. Quotes need to be applied to new variable.\n\n",
      "votes": "2",
      "user": "Humber",
      "time": "Dec 11, 2018 at 6:00",
      "is_accepted": false,
      "comments": []
    }
  ]
}