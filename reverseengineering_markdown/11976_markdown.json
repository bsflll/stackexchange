{
  "title": "Is MD5 hashing of files a valid method of creating an anti-virus program?",
  "link": "https://reverseengineering.stackexchange.com/questions/11976/is-md5-hashing-of-files-a-valid-method-of-creating-an-anti-virus-program",
  "content": "Is it a good way to create Virus signature in MD5 or it is better in SHA1 or SHA256 and why it is?  \n\n",
  "votes": "3",
  "answers": 8,
  "views": "4k",
  "tags": [
    "security",
    "hash-functions",
    "malware"
  ],
  "user": "Ashutosh Jha",
  "time": "Feb 9, 2016 at 13:01",
  "comments": [
    {
      "user": "ratchet freak",
      "text": "virus identification based on machine code is old and easily defeated with self modifying code.",
      "time": null
    },
    {
      "user": "Vitaly Osipov",
      "text": "Creating \"signatures\" to match specific instances of compiled malware is a very poor technique. Also check number 2 in ranum.com/security/computer_security/editorials/dumb",
      "time": null
    },
    {
      "user": "Paul",
      "text": "security.stackexchange.com/questions/113111/â€¦",
      "time": null
    },
    {
      "user": "joxeankoret",
      "text": "Not at all: a cryptographic hash only works for detecting uniquely one file. Unless you want to detect a single specific file with no variant, don't do that. Now, I can tell you one history about \"some known AV vendor\" that will remain anonymous. Somebody at the top decided that MD5 was the \"future\" of AVs and, as so, decided to detect almost everything via MD5 hashes. 1 year later they received a call from Akamai because they had to pay +$1 million as the signature files grown too much, as well as the invoice from Akamai web servers because of the deployed file size... So, in short: no.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "This paper shows why it is not the best choice using MD5 for virus signatures. You should avoid SHA-1 also, because practical collision may be possible within years. So, consider using SHA-256 or SHA-3.\n\n",
      "votes": "3",
      "user": "ebux",
      "time": "Feb 9, 2016 at 13:17",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Not in the long run.\n\nHashing of certain parts of files is still used to push data updates quickly when a new malicious sample shows up in the wild, to get the clients protected as soon as possible.\n\nBut malware nowadays is very polymorphic so hashing is easy to defeat.\n\nDetailed analysis of samples take a lot of time often weeks or months \nand after that more generic/heuristic detections will be made which can cover the samples detected by hashes previously, so the hash signatures are dropped from the database gradually.\n\n",
      "votes": "3",
      "user": "Calmarius",
      "time": "Apr 19, 2016 at 9:08",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "No form of hashing, when used alone, is a good way of developing an AV solution.  While hashes can be useful for finding instances of a known sample across a network, heuristic and behavioural AV systems are far more likely to protect the host from infection.\n\n",
      "votes": "1",
      "user": "Andy Dove",
      "time": "Apr 19, 2016 at 12:26",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "That is exactly how antivirus programs work. Well, part of it. Kindly check this answer.\n\nThe thing is, MD5 hashing, although fast, is broken and have already produced collisions (different inputs producing the same MD5 hash). SHA1 and SHA256 are better in the sense that it is so much harder (but possible, as stated in the previous answer) to find collisions, that is to find different files that produce the same SHA hash.\n\nLastly, hashing used for malware detection is a very bad approach since it is easily defeated (polymorphic malware, malware builders, etc). Although if you are just exploring things, then YES, that is a valid way of creating an antivirus program.\n\n",
      "votes": "0",
      "user": "Community",
      "time": "Apr 13, 2017 at 12:49",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Well, do you want it to be effective? Forget the fancy methods with hash collisions of my virus to a legitimate exectuable, it is much easier to circumvent all hash based Antiviruses.  \n\nThe PE file format on windows and the ELF file format on Linux are used for executables (like .exe, .dll, .so, ...). Both formats specify the end of the file - everything after that is not parsed. That means an attacker can append random data and the file still runs like it did before.\nAppending random data however changes the hash. If the attacker sends a different file to every victim that means that you would need to get each and every single one of those file to flag it as malicious.\n\nAnd with some botnets having a million infected PCs that means you database would need to grow to that size - at which point you probably should search for another method of identification.\n\n",
      "votes": "0",
      "user": "user45891",
      "time": "Feb 15, 2016 at 16:24",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "MD5 is used but, it's not the main method..\nthe Antivirus use special Algorithms in real-time protection.\nthe anti-virus Does not depend on one Method.\nBut, in my opening the antivirus Engine should use hashing to complete The mission Faster.\n-Translated by Google-\n\n",
      "votes": "0",
      "user": "LOYOUR",
      "time": "Feb 18, 2016 at 20:00",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Using hashes is not a good idea since today's malwares use crypters which will use a function called USG (unique-stub-generater). This makes every file different, this means your hash will only work on exactly that file!\nAlso new malwares have selfmodifying code which will make it harder, because the malware crypts itself every startup (or timeframe).\n\n",
      "votes": "0",
      "user": "ioncodes",
      "time": "Apr 19, 2016 at 13:17",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "One thing I didn't see mentioned here is we discussed matching a virus signature via some hash - you could also consider matching instead your executable target to a known good hash for that executable target - this method would then not be sensitive to pure polymorphic virus behaviours - but of course one could find a collision in hash such that it still has the correct hash - so then using a a more computationally complex hash could help\n\n",
      "votes": "0",
      "user": "Alex Novickis",
      "time": "Apr 22, 2016 at 1:12",
      "is_accepted": false,
      "comments": []
    }
  ]
}