{
  "title": "How to find what code created some data?",
  "link": "https://reverseengineering.stackexchange.com/questions/8446/how-to-find-what-code-created-some-data",
  "content": "I'd like to be able to point to a buffer in memory likely on the heap and have a tool tell me which part of the binary created the data in the file.\nWhat tools can do that for me?\n\n",
  "votes": "0",
  "answers": 2,
  "views": "243",
  "tags": [
    "tools",
    "binary-analysis"
  ],
  "user": "user1636717",
  "time": "Mar 11, 2015 at 17:14",
  "comments": [
    {
      "user": "Dominik Antal",
      "text": "If the data is always at the same address, you could use a breakpoint at that address trough a debugger (Olly, Immunity, Cheat engine) and see what function accesses that part of the memory. If it has a dynamic address I'ld examine what's in that memory location, and try to figure out when/what put's it there. Start with setting a global breakpoint on memory related APIs.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "If you are using a debugger like gdb, you could set a hardware breakpoint at the heap address. From the gdb manual:\n\nAfter setting a hardware breakpoint, the debugger will trap when the memory is accessed for a read or a write.\n\n",
      "votes": "1",
      "user": "Community",
      "time": "Jun 17, 2020 at 9:54",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "If you are debugging PE executable (Windows), you can use the !heap -p options of WinDbg. \n\nYou can read about it here.\n\nNote that you will have to enable it using gflags.exe - It's also mentioned in the document above.\n\n",
      "votes": "0",
      "user": "macro_controller",
      "time": "Feb 2, 2020 at 9:00",
      "is_accepted": false,
      "comments": []
    }
  ]
}