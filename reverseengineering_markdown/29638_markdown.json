{
  "title": "IDAPython: function parameters and return value",
  "link": "https://reverseengineering.stackexchange.com/questions/29638/idapython-function-parameters-and-return-value",
  "content": "I want to get a function's signature information: return type and parameters  from x64 binaries. I am able to achieve so, using\n\n```\ntif = idaapi.tinfo_t()\nida_nalt.get_tinfo(tif, ea)\nfunction_type = tif.get_rettype()\nmetadata[function][\"ret_type\"] = function_type\nfuncdata = ida_typeinf.func_type_data_t()\nfor i,v in enumerate(funcdata):\n        itype = ida_typeinf.print_tinfo('', 0, 0, idc.PRTYPE_1LINE, v.type, '', '')\n        metadata[function][\"parameter_list\"].append(tuple([i, v.name,itype]))\n\n```\nThis script works in a lot of cases, but fails in some simple cases, like for example\n\n```\ndouble retDouble()\n{\n  return 2.4;\n}\n\n```\nIn such case, I get an empty tif object, and thus I can't recover the return type â€” which is double in this case. I believe this happens in cases where there are no function parameters present (like in above case). In such case, How can I recover the return type (or at least recover the type, or is it not possible at all)? I want the type object and not the type as a string, the later can be achievable by parsing IDA disassembly and retrieving function signature by something like regex.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "1k",
  "tags": [
    "ida",
    "idapython"
  ],
  "user": "R4444",
  "time": "Nov 30, 2021 at 4:01",
  "comments": [],
  "answers_data": [
    {
      "content": "The return type is available in the rettype field of the func_type_data_t structure.\n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Nov 29, 2021 at 17:59",
      "is_accepted": true,
      "comments": [
        {
          "user": "R4444",
          "text": "thanks for your comment, but function_details = idaapi.func_type_data_t();     func_tinfo.get_func_details(function_details) still gives me black output",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "@R4444 check that the type is actually a function type (tif.is_func())",
          "time": null
        },
        {
          "user": "R4444",
          "text": "yes, I just checked. it gives me False for some functions and True for some",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "well, return type is only available for function types",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "Decomplier has its own type info which may be not present in the database. If you do Y, Enter in the function header in the decompiler then it will be stored in the database.",
          "time": null
        }
      ]
    }
  ]
}