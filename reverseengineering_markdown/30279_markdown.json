{
  "title": "Searching for strings only partially works in x64Dbg",
  "link": "https://reverseengineering.stackexchange.com/questions/30279/searching-for-strings-only-partially-works-in-x64dbg",
  "content": "Please note that I am new to x64dbg.\n\nAs you can be seen in the picture below, the error message has the string\n\n```\n[ebp+8]:L\"The information you have entered is invalid!  \n...\"\n\n```\n\n\nHowever, when I do\nSearch For > All Modules > String References, it does not pop up:\n\n\n\nI am wondering why this searching only works for some strings, not all strings.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "498",
  "tags": [
    "x64dbg"
  ],
  "user": "Mahmoud Maarouf",
  "time": "Apr 18, 2022 at 5:29",
  "comments": [],
  "answers_data": [
    {
      "content": "Just because a particular string is presented in your process memory during the execution of your program, it doesn't mean that it was prepared in advance (on disk) before you launch a program.\n\nThere are many other possibilities, how your program may load a \"non-existing\" string, for example:\n\nSearching for a particular string is one of the simplest method in reverse engineering, but in the same time one of the least reliable method.\n\n",
      "votes": "1",
      "user": "MarianD",
      "time": "Apr 18, 2022 at 6:01",
      "is_accepted": true,
      "comments": [
        {
          "user": "Mahmoud Maarouf",
          "text": "Great, thank you. How may I search a dynamically loaded string? As shown in my case above.",
          "time": null
        },
        {
          "user": "MarianD",
          "text": "@MahmoudMaarouf, searching for dynamically loaded strings has no meaning, you will have no success with this method.",
          "time": null
        }
      ]
    }
  ]
}