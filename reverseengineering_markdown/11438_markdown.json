{
  "title": "IDA cannot launch debugger for 64-bit exe files",
  "link": "https://reverseengineering.stackexchange.com/questions/11438/ida-cannot-launch-debugger-for-64-bit-exe-files",
  "content": "I want to launch IDA debugger for one 64-bit exe file and it fails, have tried with more samples, but result always the same. \n\nHere is that I do.\n\nIt happens all the time, have tried it on a few different VMs on my actual machine. I'm using full version of IDA v6.7.141229.\n\nI believe something has to be configured, as the last error says something about wrong parameters, can someone advice?\n\n",
  "votes": "4",
  "answers": 2,
  "views": "28k",
  "tags": [
    "ida",
    "x86-64"
  ],
  "user": "ST3",
  "time": "Nov 30, 2015 at 9:02",
  "comments": [
    {
      "user": "Guntram Blohm",
      "text": "I can't check this right now, but i think i remember that, for 64 bit programs, you have to start the 64 bit remote debugger and connect to that instead of debugging the file directly. So, \"Run -> local windows debugger\" is wrong. Start the win64_remotex64 server manually, then have IDA connect to it.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Since IDA is a 32 bit process, it can only debug x64 binaries remotely (source). \n\nTo do that, you need to use the IDA X.X/dbgsrv/win64_remotex64.exe file and start a debugger. Once the debugger is running, you can connect to it \"remotely\" and debug. You can check this tutorial for more specific details.\n\n",
      "votes": "8",
      "user": "tmr232",
      "time": "Nov 30, 2015 at 10:20",
      "is_accepted": true,
      "comments": [
        {
          "user": "ST3",
          "text": "The only thing that is also required is running IDA as administrator, otherwise it doesn't work, no matter if debugged program requires elevation or not.",
          "time": null
        },
        {
          "user": "c00000fd",
          "text": "What's also important to note is that the password for win64_remotex64 must be specified without any spaces after -P. I know, it's a very strange way of doing it. And also on the client machine make sure to start a 64-bit version of IDA. Also as administrator.",
          "time": null
        },
        {
          "user": "MaKiPL",
          "text": "If you are getting socket error make sure firewall doesn't block the connection and/or port is not already used. In my case I got an error and had to disable COMODO firewall entirely",
          "time": null
        }
      ]
    },
    {
      "content": "I write this mostly for myself as I'm tired of going thru this over and over again. Here's how you can debug x64 processes on a local machine with IDA Pro:\n\n(1) Create a .bat file with the following:\n\n```\n\"C:\\Program Files (x86)\\IDA 6.5\\dbgsrv\\win64_remotex64\" -Pnh8sy261\n\n```\nin this case it's the location of win64_remotex64 or remote debugger and nh8sy261 is just some random password. You pick it. Make sure though not to put any spaces after the -P parameter and the password.\n\n(2) Run batch file from (1) as admin.\n\n(3) Open 64-bit version of IDA Pro as admin. (File \"C:\\Program Files (x86)\\IDA 6.5\\idaq64.exe\")\n\n(4) Pick Go to work on your own. Then in the blank IDA Pro window, in the menu go to Debugger -> Run -> Remote Windows debugger. Then in the Application pick your application with the ... button. Specify debuggee parameters and directory, if needed. Then in the Hostname add 127.0.0.1, port as 23946 and password as what you typed above in the batch file:\n\n\n\nYou can also check to Save network settings as default for later access. Then click OK.\n\n(5) At this point the debugger should load the debuggee process and you should be able to step through it.\n\n",
      "votes": "8",
      "user": "c00000fd",
      "time": "Jun 27, 2017 at 7:38",
      "is_accepted": false,
      "comments": []
    }
  ]
}