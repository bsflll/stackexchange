{
  "title": "Hooking functions in a VMProtect'ed executable",
  "link": "https://reverseengineering.stackexchange.com/questions/13056/hooking-functions-in-a-vmprotected-executable",
  "content": "I'm trying to solve the Sharif CTF 2016 HI2.exe challenge. This challenge requires a specific (impossible to reach) environment (64 processors, 128GB RAM, ...) to display the flag. As the executable is packed with VMProtect, the best alternative seems to hook functions responsible for the environment specification checks, and modify their return values at run time. I'm using OllyDbg with the StrongOD plugin. I have documented all details here: https://www.aldeid.com/wiki/SharifCTF-2016/hi.\n\nI have achieved the first step (I have modified values of the SYSTEM_INFO structure manipulated by the GetSystemInfo function) but failed to reach my second breakpoint, set on the GlobalMemoryStatusEx function. The program displays the following error message before my 2nd BP is reached: A debugger has been found running on your system.\n\nI have tried to play with a few options from the StrongOD plugin (HidePEB, KernelMode, SkipSomeExceptions) but it either doesn't change anything or crashes the executable before the 2nd BP.\n\nHow can I achieve this goal? How should I configure OllyDbg and/or StronOD to prevent the program from knowing it's being debugged?\n\nMany thanks in advance for your help.\n\n",
  "votes": "4",
  "answers": 2,
  "views": "2k",
  "tags": [
    "ollydbg",
    "breakpoint",
    "packers",
    "vmprotect"
  ],
  "user": "Sebastien Damaye",
  "time": "Sep 24, 2018 at 22:35",
  "comments": [
    {
      "user": "NirIzr",
      "text": "You should try investigating what exacly the executable detects instead of blindly turning anti-debugging features on/off.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "StrongOD can have unexpected behaviour if you are using Win7 as your debugging environment. Try to use ScyllaHide plugin with the VMProtect profile on, ignore Invalid or privileged instruction exception in the debugging options.\n\n",
      "votes": "1",
      "user": "rustam Shirinov",
      "time": "Mar 4, 2018 at 21:28",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "If there's no way to debug it, use system mechanisms to load your DLL into protected process, then do whatever you like. \n\n",
      "votes": "1",
      "user": "Anton Kukoba",
      "time": "May 4, 2018 at 10:27",
      "is_accepted": false,
      "comments": []
    }
  ]
}