{
  "title": "Interpreting variable names in radare2",
  "link": "https://reverseengineering.stackexchange.com/questions/11845/interpreting-variable-names-in-radare2",
  "content": "I am reversing an ELF executable, and got the following:\n\n```\n0x080480ab      b880800408     movl $entry0, %eax          ; eip\n0x080480b0      bb23810408     movl $section_end.LOAD0, %ebx ; section_end.LOAD0\n\n```\nIt turned out that entry0 contains the beginning of the .text section and section_end.LOAD0 the end of it. However, this was not clear for immediately (entry0 is now clear, but I still do not know the origin of name section_end.LOAD0). Is there a documentation for these names? If not, can I ask radare2 to use memory addresses instead of these names?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "664",
  "tags": [
    "radare2"
  ],
  "user": "robert",
  "time": "Jan 26, 2016 at 18:04",
  "comments": [
    {
      "user": "Jongware",
      "text": "Typically, those are explicitly exported symbols, and your disassembler helpfully replaces the addresses with the exported name.",
      "time": null
    },
    {
      "user": "robert",
      "text": "How can I improve the question dear downvoter?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "entry0 is the first entrypoint of your binary, section_end.LOAD0 is likely the end of the first (hence the 0) LOADable section :)\n\n",
      "votes": "2",
      "user": "jvoisin",
      "time": "Jan 26, 2016 at 18:06",
      "is_accepted": false,
      "comments": []
    }
  ]
}