{
  "title": "What does a C++ identifier ending in $_## mean?",
  "link": "https://reverseengineering.stackexchange.com/questions/18597/what-does-a-c-identifier-ending-in-mean",
  "content": "In trying to understand a .so from an Android game made with Cocos2d-x, I've come across identifiers like the following (after demangling):\n\nSceneActionMap::updateTalkMode(float)::$_37\nSceneActionMap::onTouchEndedTalk(cocos2d::Touch*, cocos2d::Event*)::$_38\n\nI'm still a little shaky on ELF & the C++ ABI, but these names are found in .rodata and are referred to by some kind of structure in .data.rel.ro that seems RTTI related.\n\nWhat kind of entities are $_37 and $_38? Are these anonymous functions generated by the NDK, or are they some kind of metadata about other functions?\n\n",
  "votes": "4",
  "answers": 1,
  "views": "125",
  "tags": [
    "c++",
    "android",
    "elf",
    "shared-object"
  ],
  "user": "Squ",
  "time": "Jun 26, 2018 at 1:19",
  "comments": [],
  "answers_data": [
    {
      "content": "its a lambda function,\nas example stack trace in google https://github.com/Microsoft/vscode-cpptools/issues/2117\n\n",
      "votes": "3",
      "user": null,
      "time": "Jun 26, 2018 at 6:59",
      "is_accepted": true,
      "comments": []
    }
  ]
}