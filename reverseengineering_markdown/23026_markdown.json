{
  "title": "Is there a standard documentation format for file formats?",
  "link": "https://reverseengineering.stackexchange.com/questions/23026/is-there-a-standard-documentation-format-for-file-formats",
  "content": "I'm analysing an undocumented file format. Is there a standard documentation format for file formats I can write up? Something of this level of complexity and detail? What I have in my mind is,\n\n```\n!Global: Encoded in ASCII (unless specified otherwise)\nAddress: 0x12345670 - metadata, until the delimiter of \"|\"\nAddress: 0x12345670+, after delimiter of \"|\" - media container\n...\nAddress: 0x23456780 - 32-bit pointer to the splash image\netc etc\n\n```\nThe closest I could find is: creating your own syntax files in Vim (which is rather simple and editors-oriented, so the users could edit files  with comfort) and TrID headers (which are limited to the headers only)\n\n",
  "votes": "2",
  "answers": 1,
  "views": "103",
  "tags": [
    "binary-analysis",
    "binary"
  ],
  "user": "TAbdiukov",
  "time": "Jan 17, 2020 at 9:16",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "One thing that comes to mind is that you could use the Yara syntax to \"document\" (more like formalize) the description of the file format. Another option would be the C-like syntax used by 010 Editor to describe how to parse (and display) the file format. (And there are possibly many more such formats out there.) Yara is probably the more sustainable method because it's FLOSS and you could continue to maintain it even if the upstream ends up abandoning it. TrID would likely be similar to libmagic(3) in scope ...",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Kaitai use own format and has a good library, you can try it. \n\nWeb Ide for review: https://ide.kaitai.io/\n\n",
      "votes": "2",
      "user": "Axifive",
      "time": "Jan 17, 2020 at 17:07",
      "is_accepted": false,
      "comments": []
    }
  ]
}