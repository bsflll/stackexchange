{
  "title": "Debugging with radare2 using two terminals",
  "link": "https://reverseengineering.stackexchange.com/questions/16428/debugging-with-radare2-using-two-terminals",
  "content": "I have been trying to figure this out for quite some time now, and would really need some help. Firstly, some intro:\n\nI am running the newest version of radare2 from Github on a 64bit Ubuntu 16.04 and have the following sample program r2_test.cpp:\n\n```\n#include <cstdio>\n\nint main(int argc, char* argv[])\n{\n    int num;\n\n    while (1)\n    {\n        printf(\"Enter a number: \");\n        scanf(\"%d\", &num);\n        printf(\"You entered: %d  \n\", num);\n    }\n\n    return 0;\n}\n\n```\nWhat I am trying to achieve is to debug this program using radare2 and two terminals in a way that I run radare2 in terminal window T1 and have the programs input/output in terminal window T2. After some research I figured that this should probably be done with the help of rarun2 tool. \n\nSo, for my first try I read the man page for rarun2, specifically the part with redirecting IO to another terminal and after identifying the T2 terminal as /dev/pts/17 I created the following test.rr2 file:\n\n```\n#!/usr/bin/rarun2\nstdio=/dev/pts/17\n\n```\nIn T2 terminal I've then run sleep 999999 and in terminal T1 I run r2 -R test.rr2 -d a.out and when executing the command dc inside radare2, the programs input/output is in terminal T1 which is not what I wanted. I've also tried variations like making test.rr2 equal \n\n```\n#!/usr/bin/rarun2\nstdin=/dev/pts/17\nstdout=/dev/pts/17\n\n```\nor\n\n```\n#!/usr/bin/rarun2\nstdio=/dev/pts/17\nstdin=/dev/pts/17\nstdout=/dev/pts/17\n\n```\nbut the result was always the same.\n\nFor my second try, after some research and reading, I tried running the radare2 in the following way: r2 -d rarun2 program=a.out stdio=/dev/pts/17. With this I've achieved redirecting the IO to terminal T2, but the process which gets debugged inside radare2 is the rarun2 tool and since my knowledge of Linux and reverse engineering on it is not that good, I don't really know how to proceed to debugging the a.out process.\n\nSo, to summarize, I would really appreciate if someone could share here if this kind of debugging can be done with radare2 and, if it can, how to achieve it? I've also tried it with using nc, but I haven't made any progress to this topic with it.\n\n",
  "votes": "18",
  "answers": 1,
  "views": "5k",
  "tags": [
    "debugging",
    "linux",
    "radare2"
  ],
  "user": "ubnix",
  "time": "Sep 28, 2017 at 7:07",
  "comments": [],
  "answers_data": [
    {
      "content": "It is actually very simple and works for me just fine as you can see in the following gif:\n\n\n\nFirst you need to figure out the tty of the terminal you want to redirect the STDIO to (a.k.a Terminal 2, T2).\nYou can do this  by simply execute:\n\n```\n$ tty\n/dev/pts/2\n\n```\nThis tty will soon be used on the rarun2 profile file.\nMeantime, let's put T2 to sleep by using sleep 999999.  \n\nMoving to Terminal 1, let's create a simple rarun2 profile with the following content:\n\n```\n#!/usr/bin/rarun2\nstdio=/dev/pts/2\n\n```\nWe configured stdio to transfer the standard input and output to T2.\nNow let's execute our program with the profile we've just created:\n\n```\n$ r2 -e dbg.profile=profile.rr2 -d a.out  \nProcess with PID 14074 started...\n= attach 14074 14074\nbin.baddr 0x00400000\nUsing 0x400000\nAssuming filepath /tmp/re/a.out\nasm.bits 64\n -- Mind that the 'g' in radare is silent\n[0x7f9654e0fd80]>\n\n```\n(The same can be done using: r2 -r profile.rr2 -d a.out)\nThe program successfully loaded in debug mode. Now just for the example, let's put a breakpoint on the second call to printf and start the program using dc. In the gif I was not creating a breakpoint.\n\n```\n[0x7f9654e0fd80]> db 0x00400580\n[0x7f9654e0fd80]> dc\nSelecting and continuing: 14074\n\n```\nNow T2 gives us the output and asks for our input:\n\n```\nEnter a number:\n\n```\nAfter we send it a digit our breakpoint on T1 hit:\n\n```\nhit breakpoint at: 400580\n[0x00400580]>\n\n```\nWe can now continue the execution using dc, the loop would continue forever and the Standard Input and Output will be in T2.\n\n",
      "votes": "28",
      "user": "Megabeets",
      "time": "Nov 10, 2018 at 7:11",
      "is_accepted": true,
      "comments": [
        {
          "user": "ubnix",
          "text": "Ok, so the problem was that Sublime doesn't automatically add a \"newline\" character to my profile.rr2 file. Also, I only tried with the -R option and with it it doesn't work. I still don't understand why it doesn't work with -R but does with -e dbg.profile=...Anyway, I know now how to make it work and thanks a lot. If you have time, can you check if it will work for you with the -R.",
          "time": null
        },
        {
          "user": "Megabeets",
          "text": "It works just fine with -R as I mentioned in the post :) I checked it few times. Glad I was able to help!",
          "time": null
        },
        {
          "user": "zipizap",
          "text": "+1 for gif demo, very clarifying",
          "time": null
        }
      ]
    }
  ]
}