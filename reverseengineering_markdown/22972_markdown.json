{
  "title": "Python self decryption script, as mean of obfuscation",
  "link": "https://reverseengineering.stackexchange.com/questions/22972/python-self-decryption-script-as-mean-of-obfuscation",
  "content": "I have a software with an embedded python interpreter. The software can open upon startup a given .py script and execute it. Let's assume that in my python environment I can't open other files, and I can't use external tools like Cython \n\nI want to obfuscate the script. My only demand is that the payload part of the file (my custom business logic) could not be opened in a text editor and plain-text read. \n\nI could imagine the flow of the script will be de-obfuscation/decryption of a payload, that resides within the .py file as the first step and then executing it. \n\nI can store within the script any encryption key, and I don't care that the decryption part will be visible and that it can be easily reproduced.\n\nAny ideas how can I make that happen?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "412",
  "tags": [
    "encryption",
    "python",
    "obfuscation"
  ],
  "user": "macro_controller",
  "time": "Jan 12, 2020 at 13:13",
  "comments": [
    {
      "user": "Kennet Celeste",
      "text": "so basically you are writing a malware and you want people to help you.",
      "time": null
    },
    {
      "user": "macro_controller",
      "text": "If I wanted to write a malware, I wouldn't write it in python, and I would really care about the chance of it to be decrypted.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I did something similar on the past, here is the idea you need to carry:\n\nThis is not perfect but at least you have something to play with and explore. \n\n",
      "votes": "1",
      "user": "perror",
      "time": "Jan 13, 2020 at 17:02",
      "is_accepted": true,
      "comments": []
    }
  ]
}