{
  "title": "How to extract information from dll compiled in gcc with debug symbols?",
  "link": "https://reverseengineering.stackexchange.com/questions/3569/how-to-extract-information-from-dll-compiled-in-gcc-with-debug-symbols",
  "content": "I recently read that GCC annotates the source-code into the debug symbols it produces, although I haven't found any examples on how to retrieve this. \n\nIf this is true, how can I view the data in the debug symbols, mainly the code annotations.\n\nWhat would be the steps I need to complete starting with a gcc compiled dll with debug symbols.\n\n",
  "votes": "3",
  "answers": 1,
  "views": "2k",
  "tags": [
    "decompilation",
    "debuggers",
    "dll",
    "debugging",
    "compilers"
  ],
  "user": "user1632018",
  "time": "Jan 28, 2014 at 1:18",
  "comments": [],
  "answers_data": [
    {
      "content": "Use either readelf utility with -w (or --debug-dump) command line switch or nm utility with -a command line switch.\n\n",
      "votes": "1",
      "user": "w s",
      "time": "Jan 28, 2014 at 11:40",
      "is_accepted": true,
      "comments": [
        {
          "user": "user1632018",
          "text": "Thanks for the reply. I have been testing readelf, is there any way how to save the data into a file so I can actually view the the output?",
          "time": null
        },
        {
          "user": "w s",
          "text": "output redirection. Example: readelf -w {your binary name} >> required.log.file.name",
          "time": null
        }
      ]
    }
  ]
}