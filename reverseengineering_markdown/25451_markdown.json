{
  "title": "How can I practically approach VM-obfuscated code with symbolic analysis/execution?",
  "link": "https://reverseengineering.stackexchange.com/questions/25451/how-can-i-practically-approach-vm-obfuscated-code-with-symbolic-analysis-executi",
  "content": "Dealing with VM-obfuscated code and started learning about symbolic analysis but having a hard time wrapping my head around how to practically apply it to a problem. If someone can give me some pointers, I'd greatly appreciate it.\n\nOn top of the confusion, the binary I am looking at right now doesn't just have one obfuscated VM loop but multiple which is apparently not uncommon when using commercial VM obfuscation. A short trace gave me over 4 structures that look like a VM loop. Debugging it showed me that the VM stack/context/registers used for pointers of each machine is different and random. So now,\n\nMy understanding from it is something like this:\n\nAll in all, I am really confused. I read a handful of papers on it but security researchers don't really like releasing tools/code samples so it's all just theoretical and abstract.\n\n",
  "votes": "3",
  "answers": 0,
  "views": "1k",
  "tags": [
    "deobfuscation",
    "dynamic-analysis",
    "vms"
  ],
  "user": "patchrail",
  "time": "Jul 6, 2020 at 2:21",
  "comments": [
    {
      "user": "auspicious99",
      "text": "Would you mind listing the relevant papers you read, for context? Sometimes security researchers do provide tools/code samples, e.g., on github, but yes, they often don't.",
      "time": null
    },
    {
      "user": "patchrail",
      "text": "\"Deobfuscation of Virtualization-obfuscated Code through Symbolic Execution and Compilation Optimization\", \"A Generic Approach to Automatic Deobfuscation of Executable Code\", \"Symbolic Execution of Obfuscated Code\", \"Unpacking Virtualization Obfuscators\" and \"Symbolic deobfuscation: from virtualized code back to the original\" to name a few (the last one has code on GitHub)",
      "time": null
    },
    {
      "user": "julian",
      "text": "Practical examples: 1) Defeating Tigress with Triton 2) Defeating Zeus VM with Miasm 3) Advanced Binary Deobfuscation 4) Defeating opaque predicates in a virtualization obfuscator with ghidraPAL 5) FinSpy VM Devirtualization",
      "time": null
    },
    {
      "user": "patchrail",
      "text": "@julian thanks for these! I already know of the Zeus VM and tigress writeups but then others are new to me. Iâ€™ll read through them",
      "time": null
    },
    {
      "user": "sudhackar",
      "text": "Another  upcoming project to look at VTIL and post",
      "time": null
    }
  ],
  "answers_data": []
}