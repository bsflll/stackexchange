{
  "title": "How can I debug if the program closes directly?",
  "link": "https://reverseengineering.stackexchange.com/questions/32750/how-can-i-debug-if-the-program-closes-directly",
  "content": "I'm trying to debug a game and it's closing under few circumstances:\n\nTesting with x64dbg and cheat engine, I'm getting the same results with both tools\n\nI can debug some functions and put breakpoints in opcodes to see the program workflow (for example IsDebuggerPresent, I can set a breakpoint there and step in) but I'm not sure if I can do it everywhere\n\nThe final goal is learning to identify functions by checking what reads/writes on values\n\nHere are all breakpoints I've checked without results, the game closes directly:\n\n\n\nShould I trace who is closing the game to disable it? Or should I debug it differently?\nIf I have to trace, how can I do that if it doesn't hit the breakpoints when closing?\n\n",
  "votes": "0",
  "answers": 2,
  "views": "167",
  "tags": [
    "debugging",
    "c++",
    "x64dbg",
    "cheat-engine"
  ],
  "user": "kuhi",
  "time": "Feb 21, 2024 at 4:29",
  "comments": [
    {
      "user": "Yotamz",
      "text": "The code in your screenshot calls RtlQueryPerformanceCounter then some check, and then ExitProcess, which is a common anti-debugging technique. You are dealing with some anti-debugging features. If these anti-debugging attributes are of no interest to you, you can use a x64dbg plugins that try to bypass them. Have you tried hardware breakpoints?",
      "time": null
    },
    {
      "user": "kuhi",
      "text": "The code in my screenshot is the symbols tab of x64dbg... As I explain in my question when I set a breakpoint it closes directly... I've checked with ScyllaHide if that's the plugin you're refering to but it doesn't make any difference and my idea is to learn",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Possibilities worth checking:\n\nTry combinations of these and see if the behaviour changes:\n\n",
      "votes": "1",
      "user": "Yotamz",
      "time": "Feb 22, 2024 at 12:25",
      "is_accepted": false,
      "comments": [
        {
          "user": "kuhi",
          "text": "hi, sorry for late reply, not sure how to do 1 and 2 with x64dbg... hook set for 3 and 4 correctly... ok for 5... which debugger has that feature you mention in 6? It still closes when setting a breakpoint",
          "time": null
        }
      ]
    },
    {
      "content": "After testing several methods, the easiest ended up being TitanHide.\n\nWith TitanHide, setting only ThreadHideFromDebugger:\n\n\n\nAnd enabling my hook for isDebuggerPresent to return false always, I can breakpoint and debug the game normally.\n\nFor PatchGuard I've used EfiGuard.\n\n",
      "votes": "0",
      "user": "kuhi",
      "time": "Mar 23, 2024 at 18:36",
      "is_accepted": true,
      "comments": []
    }
  ]
}