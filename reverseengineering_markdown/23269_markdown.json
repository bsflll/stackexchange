{
  "title": "Add indirect branch target reference manually (xref, crossreference) in Cutter (radare2)?",
  "link": "https://reverseengineering.stackexchange.com/questions/23269/add-indirect-branch-target-reference-manually-xref-crossreference-in-cutter",
  "content": "How can I create a reference for an indirect branch instruction \n\n```\nblx r0\n\n```\nso that the call to the address stored in r0 shows up in the graph?\n\nI've tried flagging the target (function), but that does not get picked up automatically.\nDo I need to re-start analysis for the function somehow (how?)?\n\n",
  "votes": "1",
  "answers": 0,
  "views": "126",
  "tags": [
    "radare2"
  ],
  "user": "handle",
  "time": "Feb 16, 2020 at 13:00",
  "comments": [
    {
      "user": "Megabeets",
      "text": "Can you share the binary and the relevant offset so we can have a better look? :)",
      "time": null
    },
    {
      "user": "handle",
      "text": "@Megabeets Sorry, I mustn't... and I have put the project on hold for now. But isn't it kind of a general question anyway (telling radare2/Cutter explicitly how to interpret instructions/data)?",
      "time": null
    },
    {
      "user": "Megabeets",
      "text": "is it on debug mode? otherwise, if you want radar to figure what's the future value of a register it isn't trivial. But I think that some emulation configurations will be helpful. Try enabling \"asm.emu\" and \"emu.str\" and see if this data is available in the comments :)",
      "time": null
    },
    {
      "user": "Megabeets",
      "text": "Other than that, I suggest looking at the \"ax\" command and it's subcommands. For example \"ax [addr] [at]\" will define a code xref",
      "time": null
    },
    {
      "user": "handle",
      "text": "@Megabeets Thank you, if/when I revisit the project, I'll give that a try.",
      "time": null
    }
  ],
  "answers_data": []
}