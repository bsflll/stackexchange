{
  "title": "Can IDA Pro automatically deal with VM obfuscated binaries?",
  "link": "https://reverseengineering.stackexchange.com/questions/3969/can-ida-pro-automatically-deal-with-vm-obfuscated-binaries",
  "content": "VM packers like Code Virtualizer and VMProtect seem challenging to existing reverse engineering work, especially static approach like IDA Pro.\n\nAccording to this slides\n\nwww.hex-rays.com/products/ida/support/ppt/caro_obfuscation.ppt\n\nfrom Hex-rays, IDA Pro requires experienced reverse engineer to manually recognize the opcode array and understand the semantic, then decode the bytecode array..\n\nI myself use IDA Pro to deal with simple quicksort program using Code Virtualizer, and I can share two pics.\n\n\n\nSee, I use Code Virtualizer to protect this part and IDA Pro can not go to 0X599050h.\n\n\n\nSee, the size of relocation section has a significant growth.\n\nSo my questions:\n\nThank you!\n\n",
  "votes": "5",
  "answers": 2,
  "views": "5k",
  "tags": [
    "ida",
    "virtual-machines",
    "virtualizers"
  ],
  "user": "lllllllllllll",
  "time": "Mar 26, 2014 at 15:31",
  "comments": [],
  "answers_data": [
    {
      "content": "Regarding question #1, no IDA does not handle obfuscated binaries.\n\nYou might be interested by the Virtual Deofbuscator talk Jason Raber gave at Blackhat last year, he also released an IDA plugin and the source code is available.\n\n",
      "votes": "9",
      "user": "ekse",
      "time": "Mar 26, 2014 at 16:59",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "There's now (from 2020) a plugin for IDA Pro that helps in working with obfuscated binaries. It is called D810: Creating an extensible deobfuscation plugin for IDA Pro.\n\n",
      "votes": "1",
      "user": "auspicious99",
      "time": "Jan 6, 2021 at 15:20",
      "is_accepted": false,
      "comments": [
        {
          "user": "Orwellophile",
          "text": "That's a blatant misrepresentation.  D-810 helps deal with obfu in pseudo-decompiled functions, and isn't going to be a lick of help in decoding VMProtected or other kind of \"decrypt at loadtime\" protection.  All D-810 is going to do is make the psuedo-decompiled functions slightly easier to read.  Not that this isn't awesome, it's just not addressing the OPs concern.",
          "time": null
        }
      ]
    }
  ]
}