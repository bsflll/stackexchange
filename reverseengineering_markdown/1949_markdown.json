{
  "title": "Trying to reverse engineer C code that is 64bit assembly",
  "link": "https://reverseengineering.stackexchange.com/questions/1949/trying-to-reverse-engineer-c-code-that-is-64bit-assembly",
  "content": "This is the code I am looking at\n\n```\n0x0000000000401048 <+70>:   mov    0x401ba0(,%rax,4),%eax\n\n```\nThis is an array of 15 integers. Just wondering how I can access indices 0 to 15 in gdb\n\nThanks\n\n",
  "votes": "10",
  "answers": 3,
  "views": "1k",
  "tags": [
    "c",
    "assembly",
    "gdb"
  ],
  "user": null,
  "time": "Apr 28, 2013 at 3:46",
  "comments": [],
  "answers_data": [
    {
      "content": "GDB allows you to use C-style casts, so simply do this, if you know the address:\n\n```\n(gdb) print/x (int[15])(*0x401ba0)\n\n```\nAn example output would be:\n\n```\n$1 = {0x5241c031, 0x41535341, 0x41554154, 0x55574156, 0x48e58948, 0x31f0e483, 0x31f631ff, 0xe8c931d2, 0xfffffb08, 0xc0314850, 0x580f0174, 0x7c00f883, 0xec8948c7, 0x415f415d, 0x415d415e}\n\n```\nIf you have the address of your array in a register, you can also use the respective variable ($eax etc).\n\n",
      "votes": "13",
      "user": "0xC0000022L",
      "time": "Apr 28, 2013 at 15:44",
      "is_accepted": false,
      "comments": [
        {
          "user": "sandun dhammika",
          "text": "you are the guru.",
          "time": null
        }
      ]
    },
    {
      "content": "```\n(gdb) dump binary memory dump.raw 0x401ba0 0x401bdc\n\n```\ndump memory into file dump.raw from address 0x401ba0 until address 0x401bdc\n\nAnother option would be examine:\n\n```\nx/nfu <address>\nPrint memory.\nn: How many units to print (default 1).\nf: Format character (like „print“).\nu: Unit.\nUnit is one of:\nb: Byte,\nh: Half-word (two bytes)\nw: Word (four bytes)\ng: Giant word (eight bytes)).\n\n```\n",
      "votes": "8",
      "user": "0x90",
      "time": "Apr 28, 2013 at 4:06",
      "is_accepted": false,
      "comments": [
        {
          "user": "dbrank0",
          "text": "that would make: x/15w 0x401ba0",
          "time": null
        }
      ]
    },
    {
      "content": "For reading and writing to the 15 elements in the array:\n\n```\n(gdb) set variable $A = (int*)0x401ba0\n(gdb) p $A[0] = 1\n...\n(gdb) p $A[14]\n\n```\nFor examing their current value,\n\n```\n(gdb) x/15dw $A\n\n```\n",
      "votes": "4",
      "user": "scottt",
      "time": "Apr 28, 2013 at 21:15",
      "is_accepted": false,
      "comments": [
        {
          "user": "0xC0000022L",
          "text": "Under some circumstances set write (== set write on) may be needed.",
          "time": null
        }
      ]
    }
  ]
}