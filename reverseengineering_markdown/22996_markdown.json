{
  "title": "Attach one debugger to a DotNet application, and a second one to a loaded DLL",
  "link": "https://reverseengineering.stackexchange.com/questions/22996/attach-one-debugger-to-a-dotnet-application-and-a-second-one-to-a-loaded-dll",
  "content": "I'm trying to reverse an application that is using a DLL that i'm interested in.\n\nI can properly disassemble the application itself with DnSpy, as it is a .Net application, and I can disassemble the used DLL with IDA, as it's a native C shared library.\n\nI am using x64dbg as a debugger, and i would like to see the interactions between the application and the DLL. I can properly break on the DLL by loading the .Net app into x64Dbg, and waiting for a DLL call, and it's fine.\n\nBut the fact that x64dbg does not support .Net syntax make it very weird to play with when the flow came back from the DLL to the application, and i would like to do the following:\n\nBut i can't manage to do that, since the root process (the .Net application) cannot be debugged by two debugger at the same time.\n\nHow can i setup x64dbg to intercept the DLL without attaching it to the .Net process ?\n\nIs it even possible to do that ?\n\nOr maybe I'm unaware of some magic tools that would help me ?\n\nAny idea ?\n\nThanks :)\n\n",
  "votes": "1",
  "answers": 1,
  "views": "1k",
  "tags": [
    "ida",
    "dll",
    ".net"
  ],
  "user": "Guillaume",
  "time": "Jan 14, 2020 at 9:31",
  "comments": [
    {
      "user": "Paweł Łukasik",
      "text": "did you try windbg with sos for .NET support?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The best way to debug this in my opinion is to use WinDbg from Windows SDK or WinDbg Preview from Windows Store. In Windows it is not possible to attach two debuggers to the same process. WinDbg supports easily debugging .NET and native processes.\n\nTo access .NET functionality you can run commands:\n\n```\n.loadby sos clr\n\n```\nMore details of the .NET extensions here\nImproved .NET debugging with sosex 3rd party extension here\nCommon commands for WinDbg thematically grouped here \n\nThere is some learning curve to use it fully effectively but once learned it is extremely powerful debugger for .NET and native code.\n\nIf must use x64dbg then you would require a plugin that supports .NET, the currently available plugins are listed here: https://github.com/x64dbg/x64dbg/wiki/Plugins\n\n",
      "votes": "2",
      "user": "chentiangemalc",
      "time": "Jan 15, 2020 at 22:56",
      "is_accepted": true,
      "comments": []
    }
  ]
}