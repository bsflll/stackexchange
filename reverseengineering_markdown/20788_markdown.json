{
  "title": "Reversing Arris BGW210 firmware",
  "link": "https://reverseengineering.stackexchange.com/questions/20788/reversing-arris-bgw210-firmware",
  "content": "Trying to mount extracted ubi file system onto /dev/mtd0 gives me the error:\n\n```\nlibscan: scanning eraseblock 323 -- 100 % complete  \nubiformat: 324 eraseblocks are supposedly empty\nubiformat: error!: file \"340D04.ubi\" (size 42467348 bytes) is not multiple of eraseblock size (131072 bytes)\n           error 0 (Success)\n\n```\nHow do I get that thing flashed?\n\nI am looking to reverse the firmware for an Arris modem firmware, comparing older versions of the firmware to newer ones. I want to get access to the webroot of the little web server that runs the firmware because I think there is a bug in it.\n\nIn this older version, binwalk gives me this:\n\n```\n> binwalk spTurquoise210-700_1.6.9.bin\n\nDECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n544           0x220           Certificate in DER format (x509 v3), header length: 4, sequence length: 985\n1533          0x5FD           Certificate in DER format (x509 v3), header length: 4, sequence length: 1246\n3332          0xD04           JFFS2 filesystem, little endian\n3411204       0x340D04        UBI erase count header, version: 1, EC: 0x0, VID header offset: 0x800, data offset: 0x1000\n\n```\nExtracting this binwalk -e spTurquoise210-700_1.6.9.bin yields:\n\n```\ntotal 166M\ndrwxr-xr-x 3 root    root    4.0K Mar  5 16:10 .\ndrwxr-xr-x 4 michael michael 4.0K Mar  5 16:10 ..\n-rw-r--r-- 1 root    root     43M Mar  5 16:10 220.crt\n-rw-r--r-- 1 root    root     39M Mar  5 16:10 340D04.ubi\n-rw-r--r-- 1 root    root     43M Mar  5 16:10 5FD.crt\n-rw-r--r-- 1 root    root     43M Mar  5 16:10 D04.jffs2\ndrwxr-xr-x 3 root    root    4.0K Mar  5 16:10 jffs2-root\n\n```\nThe contents of jffs2-root don't reveal the webroot. I have mounted the D04.jffs2 image, and it appears to be identical to the extracted jffs2-root directory contents. It appears to be the upgrader that flashes the firmware.\n\nSo, I figure I'll check the 340D04.ubi image. To mount that and check it, I:\n\n```\n> rmmod mtdram\n> du -sk 340D04.ubi\n39812   340D04.ubi\n> modprobe mtdram total_size=39812\n> flash_erase /dev/mtd0 0 0\n> ubiformat /dev/mtd0 -f 340D04.ubi\n\n```\nThat's where I've hit a problem. The output of the ubiformat command is:\n\n```\nlibscan: scanning eraseblock 323 -- 100 % complete  \nubiformat: 324 eraseblocks are supposedly empty\nubiformat: error!: file \"340D04.ubi\" (size 42467348 bytes) is not multiple of eraseblock size (131072 bytes)\n           error 0 (Success)\n\n```\nI cannot figure out how to flash the ubi file system onto the mtd0 device so I can (later) mount it.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "1k",
  "tags": [
    "firmware"
  ],
  "user": "DrDamnit",
  "time": "Mar 5, 2019 at 21:55",
  "comments": [],
  "answers_data": [
    {
      "content": "ubireader_extract_files from https://github.com/jrspruitt/ubi_reader can extract the UBI if it is padded with zeroes to the expected size.\n\n",
      "votes": "2",
      "user": "booto",
      "time": "Mar 6, 2019 at 2:57",
      "is_accepted": true,
      "comments": []
    }
  ]
}