{
  "title": "Extracting files from google chrome offline installer",
  "link": "https://reverseengineering.stackexchange.com/questions/4618/extracting-files-from-google-chrome-offline-installer",
  "content": "I'm trying to extract the files from the Google Chrome offline installer as a reverse engineering exercise\n\nSo I tried extracting the data inside the installer PE. I tried pestudio which showed me two large embedded resources, however, pestudio had no option to dump them. Extracting the PE with 7-zip shows a file with the name ~102.\n\nHowever, 7zip cannot make out anything out of the ~102 file. Viewing this file with a hex editor shows that it is a tar archive with around 20 bytes of additional info prepended to it. Removing these 20 bytes does not make it extractable, however.\n\nHow can I extract the files from the binary?\n\nI'm a complete noob in reverse engineering, so please correct my mistakes instead of downvoting my question. I'd also be grateful if someone can tell me of a tool which can extract such data from PE executables (instead of my very questionable use of 7-zip for this purpose which also fails for a large number of executables).\n\n",
  "votes": "5",
  "answers": 2,
  "views": "5k",
  "tags": [
    "static-analysis",
    "pe"
  ],
  "user": null,
  "time": "Jun 16, 2014 at 12:14",
  "comments": [
    {
      "user": "ST3",
      "text": "Could you tell, what you want to achieve with this? Or is it just for trainings?",
      "time": null
    },
    {
      "user": "broadway",
      "text": "Is there a particular reason you don't just look at the code which extracts the file in the installer to figure it out if this is intended to be a RE exercise?",
      "time": null
    },
    {
      "user": "Synetech",
      "text": "ST3, blroadway, A lot of people (myself included) simply do not like installers. We prefer to extract the files of a program manually. This used to be easy with Chrome, but Google doesn’t like users having control over their own systems, so they obfuscated the installer to make it a little harder to install Chrome without running the installer.",
      "time": null
    },
    {
      "user": "Synetech",
      "text": "Unfortunately, Google has become quite the fascist over the years and they modified the installer to force the infamously notorious Google Update on users. They simply will not allow people to use Chrome without also letting Google dig the treacherous and intrusive roots of Google Update deep into your system. That said, it is possible to find copies of the Chrome installer sans-GU which contains a large 7-Zip file containing the Chrome files and no Google Update, but getting them is not easy. (Fun fact, the Google Update files have names like goopdate.dll—they’re admitting it’s goop. ☺)",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I ran the installer through an online EXE inspector which told me the 102 resource contained LZMA compressed data. Stupidly, I closed that window to look up what 'LZMA' is. I forgot to note the URL of this specific tool, and now I cannot find it anymore! Such a shame because this hint was crucial.\n\nI then ran it through PEdump.me, which allows one to download it separately. To unpack the LZMA compression, I used Stuffit Expander (for OS X), but you can probably use 7-Zip as well -- you may need to add the file extension .lzma to make it work.\n\nThis gave me a TAR-like file, containing a few more executables. My local tar was unable to unpack it any further (possibly it's some variant of the standard tar).\n\nThe TAR file format is a wrapper to concatenate multiple files into one; its headers contain the original file name and its size, amongst other data. TAR does not apply compression to the resulting file, so you only need a good hex editor to manually split it into the separate programs.\n\nBeing able to show the PE Sections of a Windows executable is a rather uncommon function for a general compressing/uncompressing program... That said: I have found no fault in 7-zip's handling of PE executables. It splits them up into their sections and does nothing more.\n\nYou can use a tool such as PE Studio to inspect the resources (are you sure it cannot extract them? It seems such a basic function); but after extracting them, you are on your own. There is no \"standard\" way of compressing or otherwise obfuscating resources; some programs may even contain custom code to extract their own data.\n\nRecognizing the format of a resource is then reduced to the more general \"recognize the file format\", which is an extremely broad topic on its own.\n\n",
      "votes": "3",
      "user": "Jongware",
      "time": "Aug 9, 2014 at 11:23",
      "is_accepted": true,
      "comments": [
        {
          "user": "0xec",
          "text": "Browser history would be helpful!",
          "time": null
        },
        {
          "user": "Jongware",
          "text": "@Extreme: Incredibly annoying. Safari has a \"History\" but it seems it only keeps this for your 'main' window, and I have the habit of opening links in a new window. So all it shows is me looking for the meaning of \"LZMA\". I also cannot recall the exact Google query I used to locate this particular EXE dumper. It's a shame because other tools I tried did not recognize the resource as \"LZMA packed\", so it really was a crucial hint.",
          "time": null
        },
        {
          "user": "mox",
          "text": "pestudio - www.winitor.com - can definitively extract / dump resources of executable files!",
          "time": null
        }
      ]
    },
    {
      "content": "If your goal is really just to recover the installer files from within the offline package, you could probably save yourself the trouble.\n\nOdds are that the resources are extracted on the fly into the %TEMP% directory on a Windows machine which isC:\\Users\\Troy\\AppData\\Local\\Temp for me.\n\nOn Unix/Linux/OSX, the files probably reside at /tmp.\n\nThe files will likely only be available while the installer is executing.\n\n",
      "votes": "0",
      "user": "TroyDowling",
      "time": "Jul 10, 2014 at 4:56",
      "is_accepted": false,
      "comments": [
        {
          "user": "Synetech",
          "text": "Odds are that the resources are extracted on the fly into the %TEMP% directory Yes, probably, but you still have to run the installer which is undesirable because it may do unwanted things like installing Google Update or even performing an unattended installation. Also, while it might not apply to the Chrome installer (right now?), this technique is not good for other things which might contain viruses. However, this technique is fine if you are using a disposable VM, then it is a relatively quick, easy, and safe way to quickly extract the files.",
          "time": null
        }
      ]
    }
  ]
}