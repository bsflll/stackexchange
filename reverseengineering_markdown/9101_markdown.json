{
  "title": "How to call DebugActiveProcessStop from disassembled code?",
  "link": "https://reverseengineering.stackexchange.com/questions/9101/how-to-call-debugactiveprocessstop-from-disassembled-code",
  "content": "I am debugging an application. Another process is debugged by this application.\n\nHere is the call \n\n```\n00705435  FF15 C0007500  CALL DWORD PTR DS [<&KERNEL32.ContinueDebugEvent>] \n\n```\nI want to change call to DebugActiveProcessStop, what should I do ?\n\n",
  "votes": "1",
  "answers": 0,
  "views": "212",
  "tags": [
    "disassembly",
    "ollydbg",
    "debugging",
    "windbg"
  ],
  "user": "ASD",
  "time": "Jun 9, 2015 at 23:30",
  "comments": [
    {
      "user": "Spl3en",
      "text": "What do you expect to do with those calls ? I mean, you can simply change the EIP to DebugActiveProcessStop whenever you want, or patch the IAT to a code cave that will take the ContinueDebugEvent parameters and use them to call DebugActiveProcessStop, or hook ContinueDebugEvent directly.",
      "time": null
    },
    {
      "user": "Jason Geffner",
      "text": "@ASD, what debugger are you using?",
      "time": null
    },
    {
      "user": "ASD",
      "text": "@JasonGeffner am using ollydbg",
      "time": null
    },
    {
      "user": "Spl3en",
      "text": "@ASD So... Problem solved ?",
      "time": null
    },
    {
      "user": "ASD",
      "text": "@Spl3en yes i solved it.",
      "time": null
    }
  ],
  "answers_data": []
}