{
  "title": "Can I step through a binary with IDA (eval version), reading registers step-wise?",
  "link": "https://reverseengineering.stackexchange.com/questions/17656/can-i-step-through-a-binary-with-ida-eval-version-reading-registers-step-wise",
  "content": "I am new to disassembly, and I'm trying to understand how a 32 bit binary is operating. I have the evaluation (free) version, 32 bit (Version 7.0.170920 macOS x86_64 (32-bit address size)). \n\nI'm used to debugging by stepping through a program, reading variables as necessary. I don't see an ability to do this in IDA, but I assume it must be there, and I'm simply missing it. (Having seen this question about python and this question about ARM, surely this must be an option for 32 bit binaries...)\n\nI'm also totally open to suggestions for a different disassembler than IDA, but I'm looking for something that is free - at least for an evaluation period of several days.\n\n",
  "votes": "2",
  "answers": 1,
  "views": "263",
  "tags": [
    "ida",
    "debugging",
    "disassemblers",
    "register"
  ],
  "user": "user3.1415927",
  "time": "Mar 11, 2018 at 15:57",
  "comments": [
    {
      "user": "blabb",
      "text": "i dont know if mac version 7 does debugging the old free version 5.0 had debugging capabilities in x86 windows not sure if there was a free mac 5 version",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I own an IDA license, so I have no use for the free one. I don't know with complete certainty whether the freeware version does debugging, but here's a quote from the freeware download page about the limitations of the freeware version:\n\n```\nlacks support for many processors, file formats, debugging etc...\n\n```\nYou might be out of luck trying to debug with the freeware version.\n\n",
      "votes": "2",
      "user": "Rolf Rolles",
      "time": "Mar 19, 2018 at 21:23",
      "is_accepted": false,
      "comments": [
        {
          "user": "NirIzr",
          "text": "IDA's eval version indeed does not support debugging.",
          "time": null
        }
      ]
    }
  ]
}