{
  "title": "edit instructions directly in visual mode",
  "link": "https://reverseengineering.stackexchange.com/questions/14223/edit-instructions-directly-in-visual-mode",
  "content": "I know we can edit opcodes in radare2's visual mode using i.\nBut is there any way to edit instructions directly in visual mode?\n\nIn my case, the instruction is:\n\n```\njae 0x8048450\n\n```\nAnd I want change it to:\n\n```\njnbe 0x8048450\n\n```\n",
  "votes": "2",
  "answers": 2,
  "views": "10k",
  "tags": [
    "radare2",
    "patching",
    "reassembly"
  ],
  "user": "ali",
  "time": "Oct 29, 2021 at 7:32",
  "comments": [],
  "answers_data": [
    {
      "content": "This is called assembling - the reverse of \"disassembling\".\n\nYou can do so with the command wa (presumably, \"write assembly\"). It can be found in the Radare2 cheat sheet:\n\n```\nwa jnz 0x400d24\n\n```\n",
      "votes": "3",
      "user": "Jongware",
      "time": "Dec 22, 2016 at 18:40",
      "is_accepted": true,
      "comments": [
        {
          "user": "ali",
          "text": "Thank you for answering, when i run wa jnbe 0x8048450, radare2 write ja 0x10090882. radare2 result: Written 6 bytes (jnbe 0x8048450) = wx 0f874a840408. why?",
          "time": null
        },
        {
          "user": "Jongware",
          "text": "@ali: because they are the same, and – apparently – radare2 defaults to the jnbe notation.",
          "time": null
        },
        {
          "user": "ali",
          "text": "But i think jnbe 0x8048450 and ja 0x10090882 are not same operations. I received SIGSEGV after this change!",
          "time": null
        },
        {
          "user": "Jongware",
          "text": "That's a bit confusing. Are you talking about the difference between ja and jnbe? Because they are exactly the same instruction (look at that web page I linked to–their codes are the same!). But the address in your examples are not the same, so it should not be surprising you get a different result. It also has nothing to do with the segfault–you changed the code, and so you probably broke something.",
          "time": null
        },
        {
          "user": "ali",
          "text": "I looked, thanks. Problem are addresses. 731c           jae 0x8048450 after wa ja 0x8048450 --> 0f8718000000   ja 0x8048450 and it's not true. And 731c           jae 0x8048450  after i + 771c --> 771c           jae 0x8048450 and it's true. wa ja 0x8048450 and i + 771c should be same. am i right?",
          "time": null
        }
      ]
    },
    {
      "content": "In visual mode, you can use the A command, to launch the interactive assembler, type your opcodes, and see in real time the corresponding hex code.\n\nYou could have found this command by typing ?, to get help, in visual mode.\n\n",
      "votes": "1",
      "user": "jvoisin",
      "time": "Dec 23, 2016 at 12:02",
      "is_accepted": false,
      "comments": [
        {
          "user": "ali",
          "text": "thanks, it's so useful! What is your idea about my commented issue?",
          "time": null
        }
      ]
    }
  ]
}