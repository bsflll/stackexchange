{
  "title": "What does 'test al, al' mean?",
  "link": "https://reverseengineering.stackexchange.com/questions/25188/what-does-test-al-al-mean",
  "content": "I'm trying to reverse engineer a program and i found the following instruction: \n\n```\ntest al, al\nje label \n\n```\nwhat does these two instruction do ? Can someone explain please ? \n\n",
  "votes": "3",
  "answers": 1,
  "views": "18k",
  "tags": [
    "assembly",
    "binary-analysis",
    "x86"
  ],
  "user": "Garde Des Ombres",
  "time": "Jun 1, 2020 at 17:46",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "test equals and but does not place the result in the target operand. However, like and it manipulates the zero flag (ZF).",
      "time": null
    },
    {
      "user": "Cody Gray",
      "text": "This is a standard idiom to test if the 8-bit value stored in AL (the register that is the low 8 bits of EAX) is zero. In other words, it's checking whether a Boolean is true or false, and branching accordingly.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "In x86 assembly, al is the least significant byte of eax register, which is typically used to return values from function calls.\n\nThe test al,al is a bitwise AND operation between al and itself.\n\nIf al & al == 0, the zero flag will be set to 1.\n\nje (or jz) instruction will jump to the address of label, if the zero flag is 1. Otherwise, the je will do nothing.\n\nIn short:\nIf eax == ######00 jump to label.\n\n",
      "votes": "13",
      "user": "Yotamz",
      "time": "Jun 1, 2020 at 18:22",
      "is_accepted": false,
      "comments": []
    }
  ]
}