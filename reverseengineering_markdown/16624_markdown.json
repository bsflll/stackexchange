{
  "title": "Solving method of DLL crackme",
  "link": "https://reverseengineering.stackexchange.com/questions/16624/solving-method-of-dll-crackme",
  "content": "I was given two DLL files (link) . The task is to get the flag from them. First what I've done - opened the first file (called original) in IDA and found the function called _GetFlag.\n\n\nAs I understood, I need to call that function from the DLL library somehow (that's the first question - I don't have any info about the function except its name, so I'd like to know how exactly I can call it).\nHowever, as wee see, even if I knew how to call it, we can't get the flag from original DLL, it says Sry, flag is in the patched version.\n\nOk, I opened patched DLL in IDA. First what we see that the file can be opened only as a binary:\n\n\nAs always, I opened the Strings window and we see the string \"0day is bring your own header day! Flag is: %s\" . It looks like a key for solution.\n\n\n\nHowever, I don't exactly know what to do after that. I'd really appreciate if somebody would explain me how to solve this.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "544",
  "tags": [
    "ida",
    "dll",
    "crackme"
  ],
  "user": "kekyc",
  "time": "Oct 25, 2017 at 22:17",
  "comments": [
    {
      "user": "sudhackar",
      "text": "This might give you a hint imgur.com/FELroA0 The patched file has been changed to not look like a dll. Patch the bytes properly so that it is a valid dll.",
      "time": null
    },
    {
      "user": "kekyc",
      "text": "@sudhackar thank you for your answer - I thought about it. Indeed, after I patched file signatures to MZ and PE it looks like a valid DLL. I see a functions like genFlag and getFlag - this is exactly what I need to call. What's the proper way to do that if we have only DLL file, in your opinion?",
      "time": null
    },
    {
      "user": "Paweł Łukasik",
      "text": "@kekyc: try LoadLibrary & GetProcAddress",
      "time": null
    },
    {
      "user": "kekyc",
      "text": "@PawełŁukasik Yep, it worked perfectly. Thank you!",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Once you have patched the malformed bytes to make the patched DLL proper, you can use something like this to call the GetFlag function.\n\n```\n#include <Windows.h>\n\ntypedef DWORD (__cdecl *_GetFlag)();\n_GetFlag GetFlag;\nHMODULE hDll = NULL;\n\nNTSTATUS main(int argc, char **argv) {\n    hDll = LoadLibrary(\"my_head_flew_away_patched.dll\");\n    GetFlag = (_GetFlag)GetProcAddress(hDll, \"GetFlag\");\n    GetFlag();\n}\n\n```\n",
      "votes": "4",
      "user": "ashish",
      "time": "Jul 1, 2018 at 14:05",
      "is_accepted": true,
      "comments": [
        {
          "user": "kekyc",
          "text": "You late just for ~2-3 minutes I did it myself using the same method. But thank you, anyway!",
          "time": null
        },
        {
          "user": "sudhackar",
          "text": "If you look at the time of the gist, it is about the same time as the earlier comment. I didn't want to spoil it for you. That's exactly what I wanted.",
          "time": null
        },
        {
          "user": "kekyc",
          "text": "Of course, I understand that.",
          "time": null
        }
      ]
    }
  ]
}