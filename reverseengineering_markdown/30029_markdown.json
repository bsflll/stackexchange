{
  "title": "Automatically propagate types in IDA pro when variables are assigned?",
  "link": "https://reverseengineering.stackexchange.com/questions/30029/automatically-propagate-types-in-ida-pro-when-variables-are-assigned",
  "content": "Let's say I have this code in the decompiler of IDA pro:\n\n```\nvar1 = var2; \n\n```\nAnd assume the type of var1 is X (for example X could be char array with size 5). Is there anyway that I can tell IDA that whenever you see such assignments, change the type of var2 to X as well?\n\nConsidering that var1 is type X, then obviously var2 should be type X as well, but right now I have to manually change the type every timeâ€¦ The problem is this is happening inside a large function thousands of times and I can't manually change every time, I need to somehow force IDA to do it. But how?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "636",
  "tags": [
    "ida",
    "idapython"
  ],
  "user": "OneAndOnly",
  "time": "Mar 27, 2022 at 6:44",
  "comments": [
    {
      "user": "Guillaume",
      "text": "If var1 is never re-assigned deeper in the function (meaning that it is just an exact copy of var2), you can try the \"=\" shortcut to merge the two variables. I know this is not exactely what you've asked, but it may same you some time :)",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "HexRaysPyTools has this feature, which it calls \"recasting\" (SHIFT-L, SHIFT-R). It's generally an excellent piece of software and I recommend it.\n\n",
      "votes": "2",
      "user": "Rolf Rolles",
      "time": "Mar 30, 2022 at 23:42",
      "is_accepted": true,
      "comments": []
    }
  ]
}