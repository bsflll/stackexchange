{
  "title": "I have control to EIP but no have idea when put the shellcode - not have any dll return adress",
  "link": "https://reverseengineering.stackexchange.com/questions/19296/i-have-control-to-eip-but-no-have-idea-when-put-the-shellcode-not-have-any-dll",
  "content": "for the practice i take some C code and compiled\ni try put shellcode open some calc\nand i not have idea which method i need to use\n\n\n\n\n```\n#include <stdio.h>\n#include <string.h>\n\nint main(void)\n\n\n{\nchar buff[120];\nint pass = 0;\n\nprintf(\"  \n Enter the password :   \n\");\ngets(buff);\n\nif(strcmp(buff, \"thegeekstuff\"))\n{\n    printf (\"  \n Wrong Password   \n\");\n}\nelse\n{\n    printf (\"  \n Correct Password   \n\");\n    pass = 1;\n}\n\nif(pass)\n{\n   /* Now Give root or admin rights to user*/\n    printf (\"  \n Buffer success   \n\");\n}\n\nreturn 0;\n\n```\n}\n\nwhat the problem ?\n\n",
  "votes": "-2",
  "answers": 1,
  "views": "203",
  "tags": [
    "buffer-overflow",
    "stack"
  ],
  "user": "Aviran Ben",
  "time": "Jun 17, 2020 at 9:54",
  "comments": [
    {
      "user": "sudhackar",
      "text": "You need to locate the address of the input first. Then you put the shellcode somewhere in the input. Calculate the effective address of the shellcode then and put in the packed address(\\x01\\xef\\xcd\\xab for 0xabcdef01) in place of BBBB. Follow the tutorial carefully which you're trying. Read on the materials suggested/provided.",
      "time": null
    },
    {
      "user": "Aviran Ben",
      "text": "@sudhackar  ok i find i can use kernel32.dll to return address  the address is \"77C6F8F7\"  i use this site to change hex2ascii iptuga.com/conversor.php  i input 136*A+F7F8C677+160*\"/x90\"  i do simple copy paste the output website and the program crash  i really wonder what the problem  i check the kernel address with another program , crush it and the calc open...  whats wrong?",
      "time": null
    },
    {
      "user": "Igor Skochinsky",
      "text": "can you please paste the code as text instead of a blurry screenshot?",
      "time": null
    },
    {
      "user": "Aviran Ben",
      "text": "@IgorSkochinsky the code is one line when i paste it  #include <stdio.h> #include <string.h>  int main(void) {     char buff[120];     int pass = 0;      printf(\"  \n Enter the password :   \n\");     gets(buff);      if(strcmp(buff, \"thegeekstuff\"))     {         printf (\"  \n Wrong Password   \n\");     }     else     {         printf (\"  \n Correct Password   \n\");         pass = 1;     }      if(pass)     {        /* Now Give root or admin rights to user*/         printf (\"  \n Buffer success   \n\");     }      return 0; }",
      "time": null
    },
    {
      "user": "Igor Skochinsky",
      "text": "Please edit the question and put the code instead of picture, thanks.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I don't know what you're trying to accomplish here, but you can overwrite* pass to correct second if statement as you did accidentally on the picture.\n\nIf you are determined to use shellcode, find a memory area you can continuously overflow your input and use that address to replace BBBB.  Another option is returning to a Windows API; then you must correctly set arguments before calling function and bypass ASLR.  \n\n* Since some compilers can place buffers immediately after return value, I assume pass variable stored higher addresses than buff and you overwrote it.\n\n",
      "votes": "1",
      "user": "Kerim Can Kalıpcıoğlu",
      "time": "Sep 12, 2018 at 9:14",
      "is_accepted": false,
      "comments": []
    }
  ]
}