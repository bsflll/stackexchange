{
  "title": "How to perform SIGTRAP emulation with GDB?",
  "link": "https://reverseengineering.stackexchange.com/questions/2978/how-to-perform-sigtrap-emulation-with-gdb",
  "content": "I am trying to analyze a crackme file.\n\nWhen I open it with gdb, I firstly set its SIGTRAP handler with, e.g., int80.SIGTRAP handler address 0x8011111.\n\nI caught it through catch syscall signal in gdb. And, there are some traps in the application, some int3 interactions.\n\n```\n0x80abcde - int3\n\n```\nMy gdbinit file is set like this:\n\n```\nb * 0x80abcde\ncommands 1\ncall (void)0x8011111(5)\ncontinue\nend\n\n```\nIs this okay for emulation or do I need to still push the calling address on the stack ?\n\n",
  "votes": "7",
  "answers": 1,
  "views": "977",
  "tags": [
    "disassembly",
    "gdb"
  ],
  "user": "Eren Yagdiran",
  "time": "Oct 29, 2013 at 17:51",
  "comments": [],
  "answers_data": [
    {
      "content": "You could use the handle command instead, to pass the signal to the application.\nMaybe with something like:\n\n```\nhandle SIGTRAP nostop print pass\n\n```\nGDB will:\n\n",
      "votes": "6",
      "user": "jvoisin",
      "time": "Oct 29, 2013 at 17:12",
      "is_accepted": false,
      "comments": [
        {
          "user": "Eren Yagdiran",
          "text": "i have 2 questions also.When i change the handle , how could i stop on my own breakpoints ? HW bps are ok for this ? When i changed the handle like you said , gdb prints \"Program terminated with SIGTRAP\" , what do you think about this ?",
          "time": null
        }
      ]
    }
  ]
}