{
  "title": "Reversing PYARMOR (?)",
  "link": "https://reverseengineering.stackexchange.com/questions/27731/reversing-pyarmor",
  "content": "I have already used ''https://github.com/nlscc/unpyarmor'' to try it, but could not figure it out how to use it correctly.\nI've searched a lot for some tutorial video but could only find ways to obfuscate it. Not the reverse process.\n\nThx guys!\n\n/ decompyle3 version 3.3.2\n\n/ Python bytecode 3.8 (3413)\n\n/ Decompiled from: Python 3.8.3\n\n",
  "votes": "0",
  "answers": 0,
  "views": "2k",
  "tags": [
    "python"
  ],
  "user": "Kyogin",
  "time": "May 27, 2021 at 21:02",
  "comments": [
    {
      "user": "Elian Kamal",
      "text": "Hello @Kyogin, It would be more helpful if you'd extend the question to include more details if possible (how you tried using unpyarmour, original binary etc..). As currently the question is too broad.",
      "time": null
    },
    {
      "user": "Kyogin",
      "text": "I was trying to reverse pyarmor of an .exe that i brought to .py but it says:  # decompyle3 version 3.3.2 # Python bytecode 3.8 (3413) # Decompiled from: Python 3.8.3 [MSC v.1924 64 bit (AMD64)] # Embedded file name: dist\\obf\\main.py from pytransform import pyarmor_runtime pyarmor_runtime() pyarmor__(__name, file, b'PYARMOR\\x00\\x00\\......  I tried usin unpyarmor but i think i can't use this tool correctly ( lmao )... i would get a good job on my university solving this (lol) but i have no ideia what i have to do to get the source code...  Thxxx",
      "time": null
    }
  ],
  "answers_data": []
}