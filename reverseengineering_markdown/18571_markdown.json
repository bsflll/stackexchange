{
  "title": "x86 Assembly Data Types [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/18571/x86-assembly-data-types",
  "content": "For the code below can anyone help with these questions? \n\n```\nxor eax, eax\nmov ecx, 5\nlea edi, [edx]\nrep stosd\nmov al, 0xFF\nstosw\nstosb\nstosb\n\n```\n",
  "votes": "-2",
  "answers": 1,
  "views": "488",
  "tags": [
    "assembly",
    "x86"
  ],
  "user": "Michael Truro",
  "time": "6 years ago",
  "comments": [
    {
      "user": "julian",
      "text": "Is this a homework assignment?",
      "time": null
    },
    {
      "user": "Michael Truro",
      "text": "No, I am trying to teach myself x86 for Malware analysis and the book that I am using does not come with the answers to their questions.",
      "time": null
    },
    {
      "user": "josh",
      "text": "Why not just run in a debugger and see what happens?",
      "time": null
    },
    {
      "user": "0xC0000022L",
      "text": "@josh if it's live malware I'd rather that the inquirer uses some emulator to step through just those opcodes. It'd be better than executing the live malware up to that point :) ... sounds suspiciously like a homework/assignment, though. This should help.",
      "time": null
    },
    {
      "user": "josh",
      "text": "@0xC0000022L Anyone dealing with suspected malware should take appropriate precautions, of course you are right! Emulators, sandboxes, whatever... (I did not downvote, btw). Nothing against questions for homeworks, but an answer to \"What have you tried?\" from a previous comment, that would be great...",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "You can do this yourself! Instead of explaining it all, I'm going to give you some resources to read through.\n\n",
      "votes": "1",
      "user": "dsasmblr",
      "time": "Jun 21, 2018 at 16:10",
      "is_accepted": false,
      "comments": []
    }
  ]
}