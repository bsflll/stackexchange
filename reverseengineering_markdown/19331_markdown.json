{
  "title": "someone can help me recognize the vulnerability",
  "link": "https://reverseengineering.stackexchange.com/questions/19331/someone-can-help-me-recognize-the-vulnerability",
  "content": "I get this code and I can not find the vulnerability.\nI think this code may be vulnerable to buffer overflow. How do I prove it? \n\n```\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\ntypedef struct _AC_DATA\n{   \n    int the;\n    int fan;\n    bool rec;\n} AC_DATA, *PAC_DATA;\n\ntypedef struct _RADIO_DATA\n{\n    char speakers_volume[4];\n    int station;\n} RADIO_DATA, *PRADION_DATA;\n\ntypedef struct _GLOBAL_DATA\n{\n    AC_DATA ac_data;\n    RADIO_DATA radio_data;\n}GLOBAL_DATA, *PGLOBAL_DATA;\n\nvoid good()\n{\n    printf(\"Good!  \n\");\n}\n\nint update_volume(PGLOBAL_DATA pglobal_data, int index, int new_volume)\n{\n    char arr[100];\n\n    if(index > 4)\n    {\n        printf(\"error invalid speaker.  \n\");\n        return -1;\n    }\n    printf(\"updating the speaker %d to volume %d  \n\", index, new_volume);\n    pglobal_data -> radio_data.speakers_volume[index] = new_volume;\n}\n\nvoid hacked()\n{\n    printf(\"Hacked!  \n\");\n}\n\n\nint main () {\n\n    GLOBAL_DATA global_data = {0};\n    int index;\n    int new_volume;\n    printf(\"address of main: 0x%X.  \n\", main);\n    printf(\"enter volume index:\");\n    scanf(\"%d\", &index);\n    printf(\"enter new volume:\");\n    scanf(\"%d\", &new_volume);\n    update_volume(&global_data, index, new_volume);\n\n    return 0;\n}\n\n```\n",
  "votes": "3",
  "answers": 1,
  "views": "404",
  "tags": [
    "buffer-overflow",
    "vulnerability-analysis"
  ],
  "user": "d.buff",
  "time": "Sep 16, 2018 at 14:53",
  "comments": [
    {
      "user": "Paweł Łukasik",
      "text": "add code as text",
      "time": null
    },
    {
      "user": "d.buff",
      "text": "@PawełŁukasik I add code",
      "time": null
    },
    {
      "user": "julian",
      "text": "is this a homework exercise? are the values of all inputs to the program (index and new_volume) checked prior to being used in the program logic? have you been able to trigger an overflow, segfault, bug, error, unexpected behavior? what have you done to analyze this program for potential vulnerabilities? what is your approach to this problem? what is your reasoning?",
      "time": null
    },
    {
      "user": "d.buff",
      "text": "hey @SYS_V I input to program (index and new_volume)  index = 102030405060708090 volume = 90   the program crush, the output is -504445190 to volume 90 the EIP= 004014C1",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The bug is in update_volume.\n\n```\npglobal_data -> radio_data.speakers_volume[index] = new_volume;\n\n```\nindex is an int, it can take negative values too. Ideally you should not be able to access -ve indices in an array as it gives you read/write over memory area preceding the array. Here we just have a check to limit its max value to 4 but you can use negative integers to INT_MIN and overwrite a byte.\n\nFor exploitation, global_data belongs to main's stack frame. Accessing negative indices you can overwrite a byte in return address of update_volume (somewhere in main) on the stack. This gives you the primitive to jump to maybe hacked or good functions.\n\nResources: Use ASAN to verify your claims while fuzzing with inputs.\n\nHere is the ASAN dump for this case.\n\n```\nASAN_SYMBOLIZER_PATH=/usr/lib/llvm-6.0/bin/llvm-symbolizer ./test\naddress of main: 0xCA77FE6F.\nenter volume index:-36\nenter new volume:65\nupdating the speaker -36 to volume 65\n=================================================================\n==27759==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffebfb3ff98 at pc 0x55f1ca77fe6f bp 0x7ffebfb3fed0 sp 0x7ffebfb3fec0\nWRITE of size 1 at 0x7ffebfb3ff98 thread T0\n    #0 0x55f1ca77fe6e in update_volume /tmp/re.c:39\n    #1 0x55f1ca78004b in main /tmp/re.c:57\n    #2 0x7f237a433b96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)\n    #3 0x55f1ca77fcf9 in _start (/tmp/test+0xcf9)\n\nAddress 0x7ffebfb3ff98 is located in stack of thread T0 at offset 136 in frame\n    #0 0x55f1ca77fe7e in main /tmp/re.c:47\n\n  This frame has 3 object(s):\n    [32, 36) 'index'\n    [96, 100) 'new_volume'\n    [160, 180) 'global_data' <== Memory access at offset 136 underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /tmp/re.c:39 in update_volume\nShadow bytes around the buggy address:\n  0x100057f5ffa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100057f5ffb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100057f5ffc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100057f5ffd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100057f5ffe0: 00 00 f1 f1 f1 f1 04 f2 f2 f2 f2 f2 f2 f2 04 f2\n=>0x100057f5fff0: f2 f2 f2[f2]f2 f2 00 00 04 f2 00 00 00 00 00 00\n  0x100057f60000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100057f60010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100057f60020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100057f60030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100057f60040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==27759==ABORTING\n\n```\nPlease specify while posting if this a homework problem. We are happy to help but won't do all the job for you if you don't show any progress made/research done as @SYS_V mentioned in comments.\n\n",
      "votes": "3",
      "user": "sudhackar",
      "time": "Sep 13, 2018 at 18:06",
      "is_accepted": true,
      "comments": [
        {
          "user": "d.buff",
          "text": "why when I try insert the volume_index -10 and the new_volume 65 I get \"updating the speaker -10 to volume 65\" ? if I do like the example -36 and 65 I get \"updating the speaker -36 to volume 65 Segmentation fault\"",
          "time": null
        }
      ]
    }
  ]
}