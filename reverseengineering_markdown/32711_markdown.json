{
  "title": "Help Extracting a CramFS filesystem from .img binary",
  "link": "https://reverseengineering.stackexchange.com/questions/32711/help-extracting-a-cramfs-filesystem-from-img-binary",
  "content": "I'm trying to extract a CramFS filesystem from a firmware binary for the FVS318Gv2. It downloads as a .zip file that can be decompressed to reveal a firmware .img file and a readme.htm. Running binwalk -I firmware.img provides\n\n```\n--------------------------------------------------------------------------------\n43            0x2B            Intel x86 or x64 microcode, sig 0x00000020, pf_mask 0x80a30145, 00B0-00-00, rev 0x-78ee0000, size 3\n64            0x40            CramFS filesystem, big endian, size 27492352, version 2, sorted_dirs, CRC 0x0C576106, edition 0, 14673 blocks, 1925 files\n\n```\nI've used DD to isolate the cramfs system mentioned on there with dd bs=1 skip=64 count=27492352 if=firmware.img of=firmware.cramfs status=progress and that returns a file where the output of binwalk -I firmware.cramfs returns\n\n```\n--------------------------------------------------------------------------------\n0             0x0             CramFS filesystem, big endian, size 27492352, version 2, sorted_dirs, CRC 0x0C576106, edition 0, 14673 blocks, 1925 files\n\n```\nAfterwards, I've tried running fsck.cramfs to decompress the file and the only thing returned is fsck.cramfs: unsupported filesystem features which I can only assume is because the shifted root filesystem flag is set in the superblock. At this point I do not know what that means or how to resolve it. I've tried swapping the endianess of it but the shifted root fs error still occurs with cramfsswap. Can anybody help?\n\n",
  "votes": "1",
  "answers": 0,
  "views": "143",
  "tags": [
    "binary-analysis",
    "linux",
    "firmware-analysis"
  ],
  "user": "cdbrunow",
  "time": "Feb 7, 2024 at 14:38",
  "comments": [],
  "answers_data": []
}