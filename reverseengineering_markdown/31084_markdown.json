{
  "title": "Function pointer as struct field in IDA",
  "link": "https://reverseengineering.stackexchange.com/questions/31084/function-pointer-as-struct-field-in-ida",
  "content": "I have following function:\n\n```\nvoid __thiscall ParsePackage_v5(package_t *package, stream_t *stream)\n{\n  (*(*package->stream + 8))(package->stream, package, 4);\n}\n\n```\n```\n.text:0069F5A0 ; void __thiscall ParsePackage_v5(package_t *package, _DWORD stream)\n.text:0069F5A0 ParsePackage_5  proc near               ; CODE XREF: ParsePackageHeader+FBâ†“p\n.text:0069F5A0\n.text:0069F5A0                 push    ebp\n.text:0069F5A1                 mov     ebp, esp\n.text:0069F5A3                 sub     esp, 134h\n.text:0069F5A9                 push    ebx\n.text:0069F5AA                 push    esi\n.text:0069F5AB                 push    edi\n.text:0069F5AC                 mov     esi, ecx\n.text:0069F5AE                 mov     ecx, [esi+4]\n.text:0069F5B1                 mov     eax, [ecx]\n.text:0069F5B3                 push    4\n.text:0069F5B5                 push    esi\n.text:0069F5B6                 call    dword ptr [eax+8]\n\n```\nstream_t defines as:\n\n```\n00000000 stream_t        struc ; (sizeof=0x14, align=0x4, mappedto_136)\n00000000 unknown         db ?\n00000001                 db ? ; undefined\n00000002                 db ? ; undefined\n00000003                 db ? ; undefined\n00000004 hFile           dd ?                    ; offset\n00000008 ReadBytes       db ?\n00000009                 db ? ; undefined\n0000000A                 db ? ; undefined\n0000000B                 db ? ; undefined\n0000000C field_C         db ?\n0000000D                 db ? ; undefined\n0000000E                 db ? ; undefined\n0000000F                 db ? ; undefined\n00000010 field_10        db ?\n00000011                 db ? ; undefined\n00000012                 db ? ; undefined\n00000013                 db ? ; undefined\n00000014 stream_t        ends\n\n```\n(*(*package->stream + 8)) supposed to be converted into package->stream->ReadByte but it wont. How can i do this properly and declare function pointer as field type of ReadByte?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "557",
  "tags": [
    "ida"
  ],
  "user": "Redplcs",
  "time": "Nov 4, 2022 at 23:16",
  "comments": [],
  "answers_data": [
    {
      "content": "The first problem in your example is that the fields are defined as bytes, not dwords. Press D twice on those fields to turn them into dwords.\n\nThe second problem is that the fields don't have proper function pointer types applied to them. Highlight the fields and press Y to set the type. Enter something like void (__thiscall *ReadBytes)(stream_t *this, package_t *package, size_t size) to create a function pointer type.\n\n",
      "votes": "1",
      "user": "Rolf Rolles",
      "time": "Nov 4, 2022 at 23:24",
      "is_accepted": true,
      "comments": [
        {
          "user": "Redplcs",
          "text": "Big thanks! Unfortunatelly, now i have (*(package->stream->unknown + 8))(package->stream, package, 4); instead of package->stream->ReadBytes(package->stream, package, 4); What's the problem?",
          "time": null
        },
        {
          "user": "Rolf Rolles",
          "text": "Ultimately you're going to need two structs. On the line ending in -AE, the code loads the stream_t pointer from the package_t object. On the next line, it loads *stream_t into eax, and the call to [eax+8] finally takes place on line -B6. This is a virtual function call. Your definition of stream_t is incorrect; the dword at +0 needs to be a pointer to a VTable struct that contains the function pointers.",
          "time": null
        },
        {
          "user": "Redplcs",
          "text": "But how can I define vtable structure? Same as stream_t but each field is byte size? Then how (*(package->stream->unknown + 8)) knows that there are function and it needs to be invoked?",
          "time": null
        },
        {
          "user": "Rolf Rolles",
          "text": "No, it's a separate structure. I can't tell you what the structure looks like because all I have is a few lines of assembly, but you're going to want a struct called something like stream_t_vtbl which contains dword-sized members whose types are function pointers. The first element of stream_t needs to be a pointer to that structure. As for what the rest of stream_t looks like, I have no idea; the code snippet doesn't show any fields other than its VTable pointer at +0.",
          "time": null
        },
        {
          "user": "Redplcs",
          "text": "I figured it out. Big thanks for helping! You saved my nerves :)",
          "time": null
        }
      ]
    }
  ]
}