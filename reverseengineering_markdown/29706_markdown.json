{
  "title": "A tutorial or docs to unpack a custom packed PE",
  "link": "https://reverseengineering.stackexchange.com/questions/29706/a-tutorial-or-docs-to-unpack-a-custom-packed-pe",
  "content": "I am facing an odd situation. I have a licensed game that's doing odd actions on the system. I isolated it as I could and observed the behavior both network and so forth, and I suspect it's a custom-made malware. Till now, it wasn't discovered by any antivirus.\n\nWhile trying to load it with IDA, I observed that I couldn't get it to analyze at all more than first few offsets â€“ meaning most probably it was packaged with custom packager. I have never tried such a thing until now, and I would need a tutorial in this regard. Or some possible ways to improve my skills, or any documentation for this purpose.\n\nI have also tried to find a loader to start my program and just dump the PE from a certain address, but unfortunately there's no such thing anymore, or I haven't found the right tool.\n\nThank you very kindly.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "835",
  "tags": [
    "ida",
    "disassembly",
    "assembly",
    "x64dbg"
  ],
  "user": "Jcknsz",
  "time": "Dec 12, 2021 at 10:58",
  "comments": [],
  "answers_data": [
    {
      "content": "This answer covers the entire analysis process that you can perform when you want to analyse a potentially malicious sample. If you are interseted only in unpacking, see Manual unpacking subsection.\n\nAdvantages:\n\nDisadvantages:\n\nFirst thing to do is setting the analysis lab. I will not cover the details here, since it is described in many places (try to search \"setting malware analysis lab\" for details), but I will emphasise the most important things:\n\nAs the first step, you probably want to make some dynamic analysis to check whether something suspicious is done - you may use for example regshot for that purpose (do the first regshot snapshot before you run the sample and the second one after your run it - then compare them to see for the changes made in the system). If the file is malicious, in many cases this step will reveal it and you won't need any further analysis. If nothing strange happens, it's time to analyse the file statically. You may follow the following steps:\n\nFor process dumping you can use LordPE. Possibly x64dbg supports dumping as well (I'm not sure, I know OllyDbg had such a plugin). For imports reconstruction you can use Scylla.\n\nNote that these methods work often but will not work every time - there are protectors using more sophisticated techniques than just packing and do not have unpacked file in their memory at any time of execution. Several packers also encorporate ani-debugging techniques. These things may happen in your case, since licensed game can be heavily protected.\n\n",
      "votes": "2",
      "user": "bart1e",
      "time": "Dec 12, 2021 at 21:02",
      "is_accepted": false,
      "comments": [
        {
          "user": "Jcknsz",
          "text": "Thank you very kindly for the answer! First thing i did was the lab analysis, of course - I thought of that in the first place so we're all covered. Now, when I started to analyze the executable a bit and verify it, it seems it's not recognized by any of Detect It Easy or PEiD, so it's most probably a custom-packed and custom-encrypted(?) executable. This was the bad news for me. I used x64dbg to try to find any answers, and i dumped a section of memory in order to find a executable, but my .data, .text, .reloc are obfuscated for some reason. How do I manage that?",
          "time": null
        },
        {
          "user": "Jcknsz",
          "text": "By obfuscated I mean that I do not even see them as .data, .text, so forth. I presume they are there.",
          "time": null
        },
        {
          "user": "bart1e",
          "text": "Did you try second and third unpacking technique I described (breakpoint at LoadLibrary and dump after some time of execution? Third technique should reveal something, and if not, it may be more complicated to unpack the file.",
          "time": null
        },
        {
          "user": "Jcknsz",
          "text": "I think I might have found the EntryPoint, the program mentions it starts another instance of itself but unprotected (it named it notprotected for some reason). After I found this entrypoint, what would be the best course of action?",
          "time": null
        },
        {
          "user": "Jcknsz",
          "text": "I could unpack it and fix it manually, but so far I haven't seen any PE format. This sequence I discovered based on your advice is somewhat after the .rsrc, but in a unknown memory area. Would it be valid even if it would be after the .rsrc area? Does it make sense? Thank you again.",
          "time": null
        }
      ]
    }
  ]
}