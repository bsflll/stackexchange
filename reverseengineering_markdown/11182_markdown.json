{
  "title": "Disassembling output of searches radare2",
  "link": "https://reverseengineering.stackexchange.com/questions/11182/disassembling-output-of-searches-radare2",
  "content": "```\n[0x00402079]> / valid\nSearching 5 bytes from 0x00401000 to 0x0040561e: 76 61 6c 69 64\n# 3 [0x401000-0x40561e]\nhits: 5\n0x00401695 hit6_0 \"valid\"\n0x00401fca hit6_1 \"valid\"\n0x00402095 hit6_2 \"valid\"\n0x004029ca hit6_3 \"valid\"\n0x004037ca hit6_4 \"valid\"\n\n[0x00402079]> / valid~[0]\nSearching 5 bytes from 0x00401000 to 0x0040561e: 76 61 6c 69 64\n# 3 [0x401000-0x40561e]\nhits: 5\n0x00401695\n0x00401fca\n0x00402095\n0x004029ca\n0x004037ca\n\n[0x008040f2]> ? {/ valid~[0]}\nRNum ERROR: Division by Zero\n0\n\n[0x008040f2]> ? 0x00401695\n4200085 0x401695 020013225 4M 40000:0695 4200085 10010101 0.0 0.000000f 0.000000\n\n```\nHow can i Disassemble OR work with the output of one search ? \n\nI agree other methods to automated job with search results, \nThanks. \n\n",
  "votes": "2",
  "answers": 1,
  "views": "299",
  "tags": [
    "radare2"
  ],
  "user": "user3684326",
  "time": "Oct 27, 2015 at 11:30",
  "comments": [
    {
      "user": "w s",
      "text": "The simplest way to use radare 2 in automated manner is using r2pipe python module.",
      "time": null
    },
    {
      "user": "user3684326",
      "text": "i know, i need dont use r2pipe",
      "time": null
    },
    {
      "user": "grc",
      "text": "hit6_0 will give you the address of the first match. Is that what you're looking for?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "```\n[0x01012475]> / calc\nSearching 4 bytes from 0x01001000 to 0x0101e960: 63 61 6c 63\n# 3 [0x1001000-0x101e960]\nhits: 3\n0x0100161c hit1_0 \"calc\"\n0x01015079 hit1_1 \"\\\\u00ff\\\\u00ff\\\\u00ff\\\\u00ff\"\n0x01016679 hit1_2 \"calc\"\n[0x01012475]> pdi 4 @ hit1_0\n0x0100161c    hit1_0:\n0x0100161c           63616c  arpl word [ecx + 0x6c], sp\n0x0100161f             632e  arpl word [esi], bp\n0x01001621             7064  jo 0x1001687\n0x01001623             6200  bound eax, qword [eax]\n[0x01012475]> pdi 4 @ hit1_1\n0x01015079    hit1_1:\n0x01015079               ff  invalid\n0x0101507a               ff  invalid\n0x0101507b               ff  invalid\n0x0101507c               ff  invalid\n[0x01012475]> pdi 4 @ hit1_2\n0x01016679    hit1_2:\n0x01016679           63616c  arpl word [ecx + 0x6c], sp\n0x0101667c             6322  arpl word [edx], sp\n0x0101667e       0d0a202020  or eax, 0x2020200a\n0x01016683           207072  and byte [eax + 0x72], dh\n[0x01012475]>\n\n```\nor use regular expression\n\n```\n:>radare2 c:\\WINDOWS\\system32\\calc.exe\n -- Nothing to see here. Move along.\n[0x01012475]> / calc\nSearching 4 bytes from 0x01001000 to 0x0101e960: 63 61 6c 63\n# 3 [0x1001000-0x101e960]\nhits: 3\n0x0100161c hit0_0 \"calc\"\n0x01015079 hit0_1 \"\\\\u00ff\\\\u00ff\\\\u00ff\\\\u00ff\"\n0x01016679 hit0_2 \"calc\"\n[0x01012475]> pdi 4 @@ hit*\n0x0100161c    hit0_0:\n0x0100161c           63616c  arpl word [ecx + 0x6c], sp\n0x0100161f             632e  arpl word [esi], bp\n0x01001621             7064  jo 0x1001687\n0x01001623             6200  bound eax, qword [eax]\n0x01015079    hit0_1:\n0x01015079               ff  invalid\n0x0101507a               ff  invalid\n0x0101507b               ff  invalid\n0x0101507c               ff  invalid\n0x01016679    hit0_2:\n0x01016679           63616c  arpl word [ecx + 0x6c], sp\n0x0101667c             6322  arpl word [edx], sp\n0x0101667e       0d0a202020  or eax, 0x2020200a\n0x01016683           207072  and byte [eax + 0x72], dh\n[0x01012475]>\n\n```\nYou could also use an iterator: pid 4 @@ `/ ls`.\n\nThanks jvoisin for the edit \n\n```\n[0x01012475]> px @@ `/ calc`\nSearching 4 bytes from 0x01001000 to 0x0101e960: 63 61 6c 63\n# 3 [0x1001000-0x101e960]\nhits: 2\n- offset -   0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF\n0x0100161c  6361 6c63 2e70 6462 0000                 calc.pdb..\n- offset -   0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF\n0x01016679  6361 6c63 220d 0a20 2020                 calc\"..\n[0x01012475]>\n\n```\n",
      "votes": "1",
      "user": "blabb",
      "time": "Oct 29, 2015 at 18:56",
      "is_accepted": true,
      "comments": [
        {
          "user": "blabb",
          "text": "@jvoisin what is the second hit pointing to (hit0_1) is that a bug (ff ff ff ff in place of calc ?? any ideas",
          "time": null
        }
      ]
    }
  ]
}