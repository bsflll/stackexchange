{
  "title": "How can I convert the following assembly code to pseudo code?",
  "link": "https://reverseengineering.stackexchange.com/questions/20933/how-can-i-convert-the-following-assembly-code-to-pseudo-code",
  "content": "I got the following disassembly code in IDA pro. I really find it hard to convert it into pseudo code.\n\n```\npush ebp\nmov ebp, esp\nsub esp, 14h\nmov dword ptr [ebp-14h], 1\nmov dword ptr [ebp-10h], 2\nmov dword ptr [ebp-0Ch], 3\nmov dword ptr [ebp-4], 0\n\nloc_401022:\n cmp dword ptr [ebp-4], 3\n jge loc_40103D\n mov eax, [ebp-4]\n mov ecx, [ebp+eax*4-14h]\n mov [ebp-8], ecx\n mov edx, [ebp-4]\n add edx, 1\n mov [ebp-4], edx\n jmp loc_401022\n\nloc_40103D:\n xor eax, eax\n mov esp, ebp\n pop ebp\n ret\n\n```\n",
  "votes": "0",
  "answers": 1,
  "views": "744",
  "tags": [
    "disassembly",
    "x86",
    "decompilation",
    "c"
  ],
  "user": "adam",
  "time": "Mar 20, 2019 at 18:12",
  "comments": [
    {
      "user": "wisk",
      "text": "Please, format your code (CTRL+K).",
      "time": null
    },
    {
      "user": "Bruce Abbott",
      "text": "\"I really find it hard to convert it into pseudo code\" - what are you finding hard about it?",
      "time": null
    },
    {
      "user": "zxxc",
      "text": "As @wisk mentioned you can convert all those [ebp-XX] into stack variables. Either Ctrl+K or individually by clicking on the instruction parameter and pressing K to make a local variable. You can also name them, e.g. [ebp-4] could be idx. The code will become much clearer.",
      "time": null
    },
    {
      "user": "wisk",
      "text": "@zxxc I was talking about the code in the post before it was edited. :)",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I'll only add you some comments to make it easier for you to solve it:\n\n```\npush ebp\nmov ebp, esp\n\n// Reserve space for local variables on the stack - in your case is array\nsub esp, 14h\n// Initialize local variables - local array\nmov dword ptr [ebp-14h], 1\nmov dword ptr [ebp-10h], 2\nmov dword ptr [ebp-0Ch], 3\nmov dword ptr [ebp-4], 0\n\n// We have a loop here\nloc_401022:\n cmp dword ptr [ebp-4], 3     // Index variable\n jge loc_40103D               // Exit from the loop\n\n// Think what is happening here :-)\n mov eax, [ebp-4]\n mov ecx, [ebp+eax*4-14h]\n mov [ebp-8], ecx\n\n// Update the index variable\n mov edx, [ebp-4]\n add edx, 1\n mov [ebp-4], edx\n jmp loc_401022\n\n// Function ending\nloc_40103D:\n xor eax, eax\n mov esp, ebp\n pop ebp\n ret\n\n```\n",
      "votes": "1",
      "user": "PhoeniX",
      "time": "Mar 23, 2019 at 19:20",
      "is_accepted": false,
      "comments": []
    }
  ]
}