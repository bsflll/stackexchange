{
  "title": "API calls documentations in ida pro (fortran)",
  "link": "https://reverseengineering.stackexchange.com/questions/9400/api-calls-documentations-in-ida-pro-fortran",
  "content": "I am reversing an application and found that it has many calls like:\nfor_write_int_fmt_xmit((__int64)&v1041, 9069724LL, (char *)&v707, v166);\n\nresult = for_write_seq_lis((unsigned __int64)&v46);\nfor_dealloc_allocatable(*(void **)(retaddr - 296));\n\nI am using ida pro however I would like to know what these functions do and their api documentation.\nCan anyone help me please?\nThere are a lot of them in the application and I think they should be in one manual but failed to find\n\nfor_close\nfor__close_args\nfor__close_default\nfor__close_proc\nfor__desc_ret_item\nfor__key_desc_ret_item\nfor__desc_test_item\nfor__desc_zero_length_item\nfor__this_image_number_or_zero\nfor__io_return\nfor__issue_diagnostic\nfor__get_msg\nfor_emit_diagnostic     \n\n",
  "votes": "1",
  "answers": 2,
  "views": "499",
  "tags": [
    "ida"
  ],
  "user": "schrodinger",
  "time": "Jul 19, 2015 at 14:59",
  "comments": [],
  "answers_data": [
    {
      "content": "Guntram's answer identifies that these are library functions from the Intel Fortran Compiler. And as he said, they're internal functions and thus not publicly documented. However, that doesn't mean we can't find the code behind these functions.\n\nYou can download the Intel Fortran Compiler from https://software.intel.com/en-us/fortran-compilers/try-buy\n\nYou can then extract the .obj files from the IFCORE library to find the code behind the functions you listed above. For example, the code for for__key_desc_test_item() is in for_desc_item.obj in libifcore.lib:\n\n\n\nDecompiling with Hex-Rays yields:\n\n\n\n",
      "votes": "1",
      "user": "Jason Geffner",
      "time": "Jul 20, 2015 at 20:09",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "These seem to be internal library routines from the intel fortran compiler. There is some online documentation available, which lists some for_* functions (check Language Reference/A-Z Reference in the menu, then Miscellaneous Run-Time Routines to the right), but this doesn't include your functions.\n\nI'd assume they're used by the run time library, internally, and not documented for general use.\n\n",
      "votes": "0",
      "user": "Guntram Blohm",
      "time": "Jul 20, 2015 at 3:22",
      "is_accepted": false,
      "comments": []
    }
  ]
}