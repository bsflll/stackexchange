{
  "title": "Analyzing a use-after-free bug (taint analysis?)",
  "link": "https://reverseengineering.stackexchange.com/questions/8701/analyzing-a-use-after-free-bug-taint-analysis",
  "content": "I'm analyzing a use-after-free bug in IDA Pro by hand. Basically, I control the content of an object (pointed by a register) and I want to force a write at an arbitrary address. For instance, I might find a mov [ebx], eax, where I can control both eax and ebx.\n\nIs there a way to automate this task at least in part?\n\nHere's a simple example. Let's say we control the data pointed by ecx and we have this code:\n\n```\n  mov eax, [ecx]\n  test dword ptr [ecx+8], 8\n  jz skip\n  mov ebx, [ecx+4]\n  mov [eax], ebx    <---- arbitrary write\nskip:\n\n```\nAs you can see, by choosing the values at [ecx], [ecx+4] and [ecx+8] carefully, we can perform an arbitrary write. In reality, the code is much more complex, so it's hard to keep track of what we control and find a suitable instruction.\n\n",
  "votes": "3",
  "answers": 1,
  "views": "789",
  "tags": [
    "ida",
    "vulnerability-analysis"
  ],
  "user": "Kiuhnm",
  "time": "Apr 14, 2015 at 22:52",
  "comments": [
    {
      "user": "perror",
      "text": "Are you speaking about a ROP gadget or am I totally confused ?",
      "time": null
    },
    {
      "user": "Kiuhnm",
      "text": "@perror No, it's not about ROP. The application frees an object by mistake and keep using it (through a dangling pointer). If you succeed in allocating some data you control at the same address where the freed object was, you can compromise the application. For instance, you can force the application to write 0x20 at a particular address which may modify the length of a javascript array so that you can now read beyond the real end of the array, etc... The problem is that you need to find an asm instruction that you can control.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I would agree with you in that you need to implement some kind of taint tracing, what is tricky statically. Moreover, you need to know whether there are any constraints applied to your controlled values. Also, we land in the symbolic execution domain (warning, there be dragons).\n\nAnyway, maybe this project can be helpful to you. It even has IDA Pro integration in the latest version.\n\nGood luck!\n\n",
      "votes": "5",
      "user": "Carlos Garcia",
      "time": "Apr 15, 2015 at 7:18",
      "is_accepted": true,
      "comments": []
    }
  ]
}