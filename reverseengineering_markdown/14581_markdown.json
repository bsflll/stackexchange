{
  "title": "What to do with ILSpy error \"This file does not contain a managed assembly\"?",
  "link": "https://reverseengineering.stackexchange.com/questions/14581/what-to-do-with-ilspy-error-this-file-does-not-contain-a-managed-assembly",
  "content": "I'm trying to decompile an unknown Win32 executable using ILSpy. However, it only answers by giving me the useless message: \nThis file does not contain a managed assembly.\n\nI have also tried to use other tools like dotPeek64 and Teleirik without success. Virustotal tell me that it is using: \n\n```\n[+] COMCTL32.dll\n[+] ComMgr.dll\n[+] KERNEL32.dll\n[+] MSVCP90.dll\n[+] MSVCR90.dll\n[+] OLEAUT32.dll\n[+] SHLWAPI.dll\n[+] USER32.dll\n[+] mfc90.dll\n\n```\nI'm pretty sure it is made with .NET, since this XML is present in the code:\n\n```\n<assembly xmlns=\"urn:schemas-microsoft-com:asm.v1\" manifestVersion=\"1.0\">\n  <trustInfo xmlns=\"urn:schemas-microsoft-com:asm.v3\">\n    <security>\n      <requestedPrivileges>\n        <requestedExecutionLevel level=\"asInvoker\" uiAccess=\"false\"></requestedExecutionLevel>\n      </requestedPrivileges>\n    </security>\n  </trustInfo>\n  <dependency>\n    <dependentAssembly>\n      <assemblyIdentity type=\"win32\" name=\"Microsoft.VC90.CRT\" version=\"9.0.21022.8\" processorArchitecture=\"x86\" publicKeyToken=\"removed\"></assemblyIdentity>\n    </dependentAssembly>\n  </dependency>\n  <dependency>\n    <dependentAssembly>\n      <assemblyIdentity type=\"win32\" name=\"Microsoft.VC90.MFC\" version=\"9.0.21022.8\" processorArchitecture=\"x86\" publicKeyToken=\"removed\"></assemblyIdentity>\n    </dependentAssembly>\n  </dependency>\n</assembly>\n\n```\nAlso note that I'm using Win8 and do not have VS installed. So my questions are: \n\nEDIT: I'm now thinking it was made with plain C++...\n\n",
  "votes": "3",
  "answers": 1,
  "views": "26k",
  "tags": [
    "windows",
    "decompilation",
    ".net"
  ],
  "user": "not2qubit",
  "time": "Feb 6, 2017 at 14:40",
  "comments": [],
  "answers_data": [
    {
      "content": "This looks like a Win32 executable, .NET executables typically imports _CorExeMain from mscoree.dll. You can use an identification tool like PEiD or Detect It Easy to confirm it.\n\n",
      "votes": "3",
      "user": "ekse",
      "time": "Feb 6, 2017 at 14:25",
      "is_accepted": true,
      "comments": [
        {
          "user": "not2qubit",
          "text": "It is a Wn32 exec, but it's probably not a .NET as I first thought, but plain C++. Then what to do?",
          "time": null
        },
        {
          "user": "Paweł Łukasik",
          "text": "@not2qubit use appropriate tools, like IDA pro",
          "time": null
        },
        {
          "user": "not2qubit",
          "text": "@PawełŁukasik Because that's a $2000+ piece of software. Surely there must be some free alternatives, that is also capable of decompiling unmanaged Win32 code into C-like code.",
          "time": null
        },
        {
          "user": "Paweł Łukasik",
          "text": "@not2qubit 30 seconds with search: reverseengineering.stackexchange.com/questions/1817/…",
          "time": null
        },
        {
          "user": "not2qubit",
          "text": "@PawełŁukasik I know of all those and more, but I explicitly need a decompiler. As the tools I already mentioned doesn't seem to be able to handle (decompile) anything not made with .NET, I guess I can assume they are useless for my case.",
          "time": null
        }
      ]
    }
  ]
}