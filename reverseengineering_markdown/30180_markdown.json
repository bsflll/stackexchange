{
  "title": "How to have arrays in IDA's IDC",
  "link": "https://reverseengineering.stackexchange.com/questions/30180/how-to-have-arrays-in-idas-idc",
  "content": "So to cut straight to the chase - I'm lazy, IDA is mysterious, I need to use IDA arrays in\nmy IDC code for convenience. Because IDC is like C(++) in its syntax I figured I could do:\n\n```\nauto lala[4] = {0,1,2,3};\n\n```\nBut that doesn't work. Neither do round or square brackets.\nTrying to do lala[0] produces this output:\n\n```\nCannot use [] operator on scalars\n\n```\nWhat gives?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "630",
  "tags": [
    "ida",
    "idc"
  ],
  "user": "swaggg",
  "time": "Mar 25, 2022 at 12:19",
  "comments": [],
  "answers_data": [
    {
      "content": "IDC is closer to C than C++ but both limited in some ways and more flexible in others than C. It supports several variable types but arrays is not one of them:\n\nHowever, you can use slice syntax with objects to simulate arrays:\n\n```\nauto x = object();\nx[0] = value1;\nx[1] = \"value2\";\n\n```\n",
      "votes": "2",
      "user": "Igor Skochinsky",
      "time": "Mar 25, 2022 at 15:46",
      "is_accepted": true,
      "comments": [
        {
          "user": "swaggg",
          "text": "Thanks! I actually needed an easy way to initialise these arrays. Given a list of bytes, I wanted to be able to just put them inside braces et voila but I guess that isn't possible. I ended up using regex instead.",
          "time": null
        },
        {
          "user": "swaggg",
          "text": "I looked up your profile. It's really cool you work for Hex Rays. Maybe you guys could implement arrays at some point too ;).",
          "time": null
        }
      ]
    }
  ]
}