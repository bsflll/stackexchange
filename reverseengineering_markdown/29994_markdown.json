{
  "title": "How do I make Ghidra propagate modified functon signatures to other programs in that project?",
  "link": "https://reverseengineering.stackexchange.com/questions/29994/how-do-i-make-ghidra-propagate-modified-functon-signatures-to-other-programs-in",
  "content": "I have imported several programs to my Ghidra project and retyped a few function parameters in one of them.\n\nNow I am working on a different program, which imports these functions.\nHowever, the imported functions still have their original, unmodified signatures.\n\nHow do I tell Ghidra to propagate the changes?\n\n",
  "votes": "0",
  "answers": 1,
  "views": "606",
  "tags": [
    "ghidra"
  ],
  "user": "asym",
  "time": "Feb 6, 2022 at 17:10",
  "comments": [],
  "answers_data": [
    {
      "content": "One way that should work is using the \"Capture Function Prototypes\" context menu action on the Project Datatype Archive while in the binary that defines those functions, then applying them in the binary that imports them.\n\n",
      "votes": "0",
      "user": "Florian Magin",
      "time": "Feb 6, 2022 at 23:57",
      "is_accepted": true,
      "comments": [
        {
          "user": "asym",
          "text": "what if function names collide? for example on overloaded operators.",
          "time": null
        },
        {
          "user": "Florian Magin",
          "text": "huh, good question. Aren't those function names typically mangled in some way that encodes type information? Are you just wondering in general, or do you have a concrete case where Ghidra does something unexpected?",
          "time": null
        },
        {
          "user": "asym",
          "text": "i have a concrete case whith overlaoded functions. apparently ghidra identifies the function types by their unmangled names. it looks similar to this: github.com/NationalSecurityAgency/ghidra/issues/â€¦",
          "time": null
        },
        {
          "user": "Florian Magin",
          "text": "Sounds like it's worth opening an issue for Ghidra",
          "time": null
        }
      ]
    }
  ]
}