{
  "title": "Find changes between two UEFI firmware versions?",
  "link": "https://reverseengineering.stackexchange.com/questions/15929/find-changes-between-two-uefi-firmware-versions",
  "content": "I have saved a copy of the UEFI firmware currently running on my motherboard through the built-in flash utility. Now I want to compare the firmware dump with the newest firmware update from the manufacture to find out what have changed between the two versions. Both files are of the type Intel serial flash for PCH ROM.\n\nI want to make sure the new version isn't malicious and I'm unable to verify the integrity in any other way, as the manufacture doesn't provide any checksums and the update is only available over plain HTTP. However, I'm not sure how to get started with this.\n\nThe built-in flash utility must add system specific data to the firmware dump, because everytime I save the firmware it has a different hash. I guess this should be stripped somehow to prevent it from complicating the process...\n\nAny tips, suggestions etc. on how I can get started is highly appreciated.\n\n",
  "votes": "3",
  "answers": 1,
  "views": "2k",
  "tags": [
    "firmware",
    "patch-reversing",
    "bios"
  ],
  "user": "Ken Hansen",
  "time": "Jul 28, 2017 at 1:33",
  "comments": [],
  "answers_data": [
    {
      "content": "The dump is likely different due to NVRAM data (basically settings which need to be saved between boots or even BIOS updates, such as boot device, RAM timings, serial number/MAC address and so on). The contents of the firmware volumes containing code should not change between boots.\n\nThere are at least two options I know of to check for differences between UEFI ROM dumps:\n\nThe module can generate a list of EFI executables from (U)EFI firmware file or\nextracted from flash ROM, and then later check firmware image in flash ROM or\nfile against this list of [expected/whitelisted] executables\n\n```\nUsage:\n\n  ``chipsec_main -m tools.uefi.whitelist [-a generate|check,<json>,<fw_image>]``\n\n    - ``generate``  Generates a list of EFI executable binaries from the UEFI\n\n                        firmware image (default)\n\n    - ``check``     Decodes UEFI firmware image and checks all EFI executable\n\n                        binaries against a specified list\n\n    - ``json``      JSON file with configuration of white-listed EFI\n\n                        executables (default = ``efilist.json``)\n\n    - ``fw_image``  Full file path to UEFI firmware image. If not specified,\n\n                        the module will dump firmware image directly from ROM\n\n\n\nExamples:\n\n\n\n>>> chipsec_main -m tools.uefi.whitelist\n\n\n\nCreates a list of EFI executable binaries in ``efilist.json`` from the firmware\n\nimage extracted from ROM\n\n\n\n>>> chipsec_main -i -n -m tools.uefi.whitelist -a generate,efilist.json,uefi.rom\n\n\n\nCreates a list of EFI executable binaries in ``efilist.json`` from ``uefi.rom``\n\nfirmware binary \n\n\n\n>>> chipsec_main -i -n -m tools.uefi.whitelist -a check,efilist.json,uefi.rom\n\n\n\nDecodes ``uefi.rom`` UEFI firmware image binary and checks all EFI executables\n\nin it against a list defined in ``efilist.json``\n\n```\nNote that a BIOS update by its nature will mean some modules will change (due to bugfixes/new features etc.) but this should at least let you know which specific parts changed and maybe even inspect them in detail.\n\n",
      "votes": "2",
      "user": "Igor Skochinsky",
      "time": "Jul 28, 2017 at 9:35",
      "is_accepted": true,
      "comments": [
        {
          "user": "Ken Hansen",
          "text": "Thanks. chipsec was exactly what I needed. I now have a clear overview of what modules have been added/removed/modified. It has also made it clear to me that I won't be able to verify that the changes aren't malicious, as there are over 200 modified modules that would have to be reverse engineered. However, only a few new modules have been added and as far as I know, a malicious modification of UEFI firmware will usually be in the form of an added module, so if I can just verify the new modules I think it's unlikely that my firmware update has been modified.",
          "time": null
        },
        {
          "user": "Alex V",
          "text": "Both methods are incorrect. Executable modules of the format PE+ contain the field \"TimeDateStamp\". Even two identical Firmware clones repeatedly created from source will be different. In \"PEIM\" modules, the \"ImageBase\" field is equal to their position in Firmware (almost always). Changing position of this module reduce Relocs changing. Chipsec current version 1.3.2 calculates hashes using the same field (not clear). \"WhiteList\" now is a big pile of garbage and nothing more. Public tools for compare two \"Firmware\" absent now. More in detail I can write in Russian (if interested)",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "@AlexV: you really think each new BIOS release is rebuilt from scratch? I really doubt that; I expect that only the modules which need changes are updated. Anyway, if you think chipsec's whitelist feature is flawed, I invite you to make an issue on their tracker and explain the problems, this is a wrong place to discuss it. However, it was obviously useful to Ken. P.S. if you have a better idea of how to compare the differences, please post a proper answer, don't misuse answer box for comments.",
          "time": null
        }
      ]
    }
  ]
}