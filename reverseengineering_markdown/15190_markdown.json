{
  "title": "How to get the address of a function definition?",
  "link": "https://reverseengineering.stackexchange.com/questions/15190/how-to-get-the-address-of-a-function-definition",
  "content": "So im wondering how i can retrieve the adress of the definition instead of the adress of the declaration via dereferencing the startaddress of a c++ function.\n\nTo be more concrete:\n\nMy function to retrieve the address of the function:\n\n\n\nI have this function i want to hook:\n\n\n\nSo to retrieve the address of whereHookGoes i did :\n\n\nwhich returns:\n\n\n\nWhich is the declaration of whereHookGoes .\n\n\nBut i want the address of the definition so i can hook a call instruction within the function.\n\nIs there anyway how i can retrieve the address of the definition from here?\n\nIf you need any more information please tell me and i will provide.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "362",
  "tags": [
    "disassembly",
    "c++",
    "function-hooking"
  ],
  "user": "Jurriaan Buitenweg",
  "time": "Apr 20, 2017 at 14:06",
  "comments": [],
  "answers_data": [
    {
      "content": "The address you get is the function definition from the compiler's point of view. It seems you're dealing with an executable compiled with incremental linking enabled (default in Debug builds). When incremental linking is on, the linker generates jump stubs for all functions and refers to them instead of \"real\" function bodies; this allows it to replace just the jump to point to the new/updated function body on next link and to not have to update all other references to the function (since they all go to the jump) which speeds up linking, especially with big projects.\n\nSo, you have the following options:\n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Apr 20, 2017 at 15:52",
      "is_accepted": true,
      "comments": []
    }
  ]
}