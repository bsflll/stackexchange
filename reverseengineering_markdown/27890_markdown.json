{
  "title": "Configuring Ghidra to use the Keil 8051 ABI for analysis",
  "link": "https://reverseengineering.stackexchange.com/questions/27890/configuring-ghidra-to-use-the-keil-8051-abi-for-analysis",
  "content": "I am trying to reverse engineer a raw binary image from an nrf24le1 SoC that (I think) has been compiled with the Keil toolchain.  Specifically, I see that C functions in this image usually expect their arguments in r7/r5/r3 as described here and that the return value lives in r7.  The behavior I'm seeing is:\n\nI have to manually override this for every function.  I would like for Ghidra to automatically figure out when a function has arguments based on the Keil ABI.\n\nBy contrast, when I run Ghidra on a raw arm32 binary, it notices when a function looks for arguments in r0/r1/r2/... and it adjusts the function declaration accordingly.  So Ghidra behaves correctly for arm32, but incorrectly for 8051.\n\nIs there a way to fix this (or is there a better tool I should be using instead of Ghidra)?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "968",
  "tags": [
    "ghidra",
    "8051"
  ],
  "user": "Jason",
  "time": "Jun 24, 2021 at 4:17",
  "comments": [],
  "answers_data": [
    {
      "content": "You need to use the mx51 variant of the 8051 processor when loading the binary.\n\nThe file in the link uses the calling convention found in your link.\n\n",
      "votes": "2",
      "user": "mumbel",
      "time": "Jun 24, 2021 at 11:48",
      "is_accepted": false,
      "comments": []
    }
  ]
}