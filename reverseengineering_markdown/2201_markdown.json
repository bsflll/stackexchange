{
  "title": "How do I get ring0 code coverage?",
  "link": "https://reverseengineering.stackexchange.com/questions/2201/how-do-i-get-ring0-code-coverage",
  "content": "I wonder, whether there is a way to get a code coverage of a r0 code? PIN tool is designed for usermode, if i'm right. \nThough i've seen on twitter somebody mentioned such a tool, that's why i'm sure it exists.\n\n",
  "votes": "1",
  "answers": 2,
  "views": "777",
  "tags": [
    "kernel-mode"
  ],
  "user": "fasmotol",
  "time": "Jun 8, 2013 at 9:31",
  "comments": [
    {
      "user": "perror",
      "text": "I guess you need to get a kernel module loaded that will give you the needed access to kernel-space. It would be better if you could give the name of the OS that you are targeting.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "If you just want a simple analysis such as code coverage or path coverage, consider using a dynamic emulation framework such as Bochs or QEMU.  This has the advantage over Jason's solution that it does not require the user to provide the addresses ahead of time (which is subject to undecidability, and placing a single breakpoint incorrectly can corrupt code or data and result in the system crashing), instead discovering such addresses dynamically as the target executes.  \n\nThe tool you are referring to might be BochsPwn.\n\n",
      "votes": "7",
      "user": "Rolf Rolles",
      "time": "Jun 8, 2013 at 19:37",
      "is_accepted": false,
      "comments": [
        {
          "user": "fasmotol",
          "text": "I'll take a look on it, but it seems to be the right thing.",
          "time": null
        }
      ]
    },
    {
      "content": "Assuming you're talking about Windows, the least invasive way would likely be to write an IDC script to statically generate a list of all basic block addresses, and write a WinDbg script that sets a one-shot logging breakpoint on each of those addresses. You can then run the WinDbg script and diff the breakpoint logs with the full basic block list to see which basic blocks were executed and which were not.\n\n",
      "votes": "2",
      "user": "Jason Geffner",
      "time": "Jun 8, 2013 at 15:21",
      "is_accepted": false,
      "comments": [
        {
          "user": "fasmotol",
          "text": "I don't think it's a good idea. WinDbg scripts work so slow, so tracing using it's scripts is just nightmare , imho.",
          "time": null
        }
      ]
    }
  ]
}