{
  "title": "Re-analyzing pseudocode IDA Pro",
  "link": "https://reverseengineering.stackexchange.com/questions/23352/re-analyzing-pseudocode-ida-pro",
  "content": "While I was reversing a binary I noticed that IDA Pro had adjusted the pseudocode that initially was generated. This happened after I started reversing the binary and renamed functions and variables to more appropriate names. IDA Pro had then \"prettified\" or re-analyzed the pseudocode somehow. \n\nI am not sure what keys I pressed or options I clicked to achieve this, but it was extremely useful. \n\nHow can I replicate this?\n\n",
  "votes": "0",
  "answers": 2,
  "views": "2k",
  "tags": [
    "hexrays"
  ],
  "user": "Nicolai Prebensen",
  "time": "Feb 28, 2020 at 7:53",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "Hi and welcome to RE.SE. Please be more specific. Also, since you mentioned pseudo-code (which IDA does not generate), I replaced ida by hexrays. The latter is the plugin for IDA providing decompilation (and generating pseudo-code).",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "While in the pseudocode view pressing F5 will re-decompile the current function.\n\n",
      "votes": "3",
      "user": "Avery3R",
      "time": "Feb 28, 2020 at 20:43",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Coming back to answer this question with the actual answer I was looking for now that I have some more experience and figured out what happened.\n\nWhen opening a binary in IDA Pro that has the Hex-Rays decompiler plugin you may open the pseudocode view using the hotkey F5, and also re-analyze the current function by pressing F5 again as @Avery3R posted in his answer.\n\nHowever, if you work your way through the binary by double-clicking functions\nyou can go back to one of the functions you already have decompiled and re-analyze it. The pseudocode will then change to reflect the changes you have done (or simply the optimizations done by the Hex-Rays decompiler). Typical changes you will see are the number of function arguments that will be adjusted to be more correct.\n\nUsually what I do if I encounter pseudocode that seems incorrect in terms of function arguments, I will click around and \"peek\" into the different problematic functions before I go back to the initial function I started with and re-analyze it. The pseudocode will then look way better and be easier to work with.\n\nAnd if you would like to re-analyze the whole binary you coud always do that by going to Options -> General -> Analysis -> Reanalyze program, and Ctrl+F5 to decompile all functions.\n\n",
      "votes": "0",
      "user": "Nicolai Prebensen",
      "time": "Jan 27, 2024 at 15:16",
      "is_accepted": true,
      "comments": []
    }
  ]
}