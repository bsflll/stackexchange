{
  "title": ".dll file pull source from compiled study?",
  "link": "https://reverseengineering.stackexchange.com/questions/26773/dll-file-pull-source-from-compiled-study",
  "content": "Forgive me, I’m new, and not a programmer, but I am needing to see if this is possible.\n\nI have a study in my trading platform I had built a long time ago, lost the original, but have the compiled .dll file.\n\nIs there anyway to go about extracting the code, so I can update my study?\n\nIt’s a .dll file that’s compiled, as a study.  Basically in my program, I load the .dll, and it loads the study to do what the code it programmed to do.\n\nBasically, I have a stock chart, with a custom .dll to plot lines at certain levels etc., the platform supports .dll compiled studies (like a plugin to do something within a program) they do this, so traders can write custom strategies/stuff for their own trading.\n\nThe guy I hired a long time ago to code this study, is now gone, so I don’t have the source code to update the study with new stuff, just the compiled .dll.\n\nThanks in advance for your help, I will appreciate it!\n\n",
  "votes": "0",
  "answers": 1,
  "views": "119",
  "tags": [
    "windows"
  ],
  "user": "Heyugly",
  "time": "Oct 29, 2021 at 7:31",
  "comments": [
    {
      "user": "Igor Skochinsky",
      "text": "What’s “a study”? Assume we know nothing about trading platforms.",
      "time": null
    },
    {
      "user": "Robert",
      "text": "Do you remember the programming language and compiler you used? For a dll there is the chance that it was created by a .Net language and in this case you could use a .Net decompiler for recovering large parts of the code.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Yes, it is possible to recover the source of a DLL.\n\nFor that, you need to find out which language is used in its development. Keep in mind that some languages like in the case of .NET use IL (a type of bytecode) that can facilitate when retrieving the source code, just as if it was developed in VS, GCC, or — simplifying — a language that works with the operating system's API is relatively easy for an experienced programmer to retrieve the source for you.\n\nAnother factor to consider is the use of virtualized codes or protections that can hinder the reverse process by less experienced people, to help in your studies I recommend books like Practical Reverse Engineering, it will give you the basic concepts to start and understand the concepts necessary for a good analysis, as well as it will also present tools that will assist in your learning, this is the safest and most guided way for you to study.\n\n",
      "votes": "-1",
      "user": "MarianD",
      "time": "Aug 2, 2021 at 11:11",
      "is_accepted": false,
      "comments": []
    }
  ]
}