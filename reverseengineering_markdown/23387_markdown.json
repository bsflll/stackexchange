{
  "title": "Detouring function cause exception access violation",
  "link": "https://reverseengineering.stackexchange.com/questions/23387/detouring-function-cause-exception-access-violation",
  "content": "i am learning to detouring functions, but i run into one that i cannot be resolved.\n\nI use the Detour lib from microsoft, and a custom method. \nBoth cause the same problem, the function is hooked and returns to the original, but continuing the program crashes with error.\n\nMy code using Detours lib:\n\nFunction definition:\n\n```\ntypedef int(__stdcall* itemPos) ( int param_1, float param_2, float param_3, float param_4, float param_5, float param_6, float param_7);\nitemPos originalItemPos;\nint __stdcall hkItemPos(int param_1, float param_2, float param_3, float param_4, float param_5, float param_6, float param_7) {\n    return originalItemPos(param_1, param_2, param_3, param_4, param_5, param_6, param_7);\n}\n\n```\nInitialice detours to hook:\n\n```\nDetourTransactionBegin();\nDetourUpdateThread(GetCurrentThread());\nDWORD offset = Scanner.FindPattern(\"program.exe\", \"\\x55\\x8B\\xEC\\x83\\xE4\", \"xxxxx\");\noriginalItemPos = (itemPos)offset;\nDetourAttach(&(LPVOID&)originalItemPos, &hkItemPos);\nif (DetourTransactionCommit() != NO_ERROR)\n    printf(\"Detoured error in sub_CCD440  \n\");\n\n```\nThe function looks like this in IDA\n\nThe way it is called\n\nError image\n\nI have code to hook the function without using a library, but the error i get is the same, so i guess something is being overlooked.\nIf necessary i will add it.\n\nThank you very much in advance.\n\n",
  "votes": "0",
  "answers": 0,
  "views": "282",
  "tags": [
    "ida",
    "c++",
    "function-hooking"
  ],
  "user": "Israel",
  "time": "Mar 5, 2020 at 2:30",
  "comments": [
    {
      "user": "mumbel",
      "text": "how are you verifying that function is the correct function being being hooked?  It could just be calling the original.  Do you have prints in the hkItemPos() or anything to verify?   Does the offset value make sense for the binary? That looks like a very very common search string I would guess you're hooking something else and when that gets called you crash",
      "time": null
    },
    {
      "user": "Israel",
      "text": "Hi mumbel, i have added a printf inside the method, in addition to using breakpoints using IDA and the method hooks correctly. I have cut the search string so that the code was not very extensive. But definitely yes, it hooks to the right function.",
      "time": null
    },
    {
      "user": "Yennefer",
      "text": "Have you tried attaching the debugger or dumping the process to verify that the trampoline is correctly placed, that the stack is correctly preserved between calls and that the calling convention is correct?",
      "time": null
    }
  ],
  "answers_data": []
}