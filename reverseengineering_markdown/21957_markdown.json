{
  "title": "Info on ProcMon from SysInternals",
  "link": "https://reverseengineering.stackexchange.com/questions/21957/info-on-procmon-from-sysinternals",
  "content": "I need help. I am reversing Procmon64.exe file. \nIt drops procmon.Sys filesystem minifilter driver which does monitoring.\n\nQuestion:\nI need to know if filtering of events is done in user-mode or kernel-mode.\n\nMy hypothesis is that all events are sent to user-mode application and then are filtered and displayed.\n\nFor now i breakpointed procedure that calls FilterGetMessage but can't figure out if it returns all events or just filtered events.\n\nThank You.\n\n",
  "votes": "0",
  "answers": 1,
  "views": "473",
  "tags": [
    "windows",
    "driver"
  ],
  "user": "guest",
  "time": "Aug 22, 2019 at 9:31",
  "comments": [
    {
      "user": "Biswapriyo",
      "text": "Here is the docs about FilterGetMessage function.",
      "time": null
    },
    {
      "user": "guest",
      "text": "Thanks. Have read that. According to that article FltSendMessage sends message to FilterGetMessage, still don't have clue if user-mode sends the driver filtering conditions. If it does it should happen in FilterConnectCommunicationPort  or FilterSendMessage no?",
      "time": null
    },
    {
      "user": "0xC0000022L",
      "text": "Hi and welcome to RE.SE. There are dozens of ways to communicate something between user and kernel mode in Windows. I concur with your hypothesis, but only actual reverse engineering will tell. It makes sense for user mode to do the filtering for two reasons: 1. user mode doesn't have the memory limitations (NonPagedPool in particular) kernel mode code has and 2. the way the filtering works, most driver developers in their right mind would opt to run that in user mode rather than risk doing these operations in kernel mode. Obviously it can be done, but not everything possible is a good idea.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Most likely the driver only monitors events and send messages to user mode. This approach is used in Microsoft  driver samples.\nIf I remember correctly - that it is:\nhttps://github.com/microsoft/Windows-driver-samples/blob/master/filesys/miniFilter/scanner\n\nI think it is good example to understand mini-filter driver and user mode app communication.\n\n",
      "votes": "0",
      "user": "slinkin",
      "time": "Aug 22, 2019 at 16:17",
      "is_accepted": true,
      "comments": [
        {
          "user": "guest",
          "text": "Yeah, probably.",
          "time": null
        }
      ]
    }
  ]
}