{
  "title": "How can an IA-32 program seemingly compiled with MSVC send its sole argument via EAX? [duplicate]",
  "link": "https://reverseengineering.stackexchange.com/questions/16911/how-can-an-ia-32-program-seemingly-compiled-with-msvc-send-its-sole-argument-via",
  "content": "A C++ program I'm looking at appears to have been compiled with MSVC. It links to MSVCR100.dll, contains MSVC's security cookie code and uses the Microsoft mangling scheme. However, one of the functions I've hit sends its only argument in the EAX register, which is immediately passed as an argument to LoadLibraryW (after BP frame initialisation).\n\nLooking at the code, there are sequences and strings referenced in other functions (evidence of inlining), so I don't think it's a direct assembly code job.\n\nTo my knowledge and according to my sources, MSVC doesn't have a calling convention that sends arguments via EAX. Watcom and Delphi have options, but not MSVC. Is it possible that the compiler optimised the function into a register call? Or is there another, undocumented calling convention in MSVC?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "179",
  "tags": [
    "c++",
    "register",
    "calling-conventions",
    "msvc"
  ],
  "user": "Ben Jaguar Marshall",
  "time": "7 years ago",
  "comments": [
    {
      "user": "Igor Skochinsky",
      "text": "we can't see your screen from here, so show the code!",
      "time": null
    },
    {
      "user": "Igor Skochinsky",
      "text": "next time just edit the original question instead of posting a new one",
      "time": null
    },
    {
      "user": "Ben Jaguar Marshall",
      "text": "@IgorSkochinsky I felt that the new information changed the nature of the original question enough to warrant a new question.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "We can see from this list that IA-32's Delphi/Free Pascal calling convention is the register calling convention. My guess is you're dealing with a binary that's the result of something like this: How to call a function using Delphi's register calling conventions from Visual C++?\n\nTo partially quote the top-voted answer:\n\nSome additional reading that may help paint a clearer picture of what you're looking at:\n\n",
      "votes": "2",
      "user": "dsasmblr",
      "time": "Dec 5, 2017 at 15:02",
      "is_accepted": true,
      "comments": [
        {
          "user": "Ben Jaguar Marshall",
          "text": "I may need to amend my question. After posting, I found a function that passes the first argument in EAX, then pushes the second argument. I'll say that your answer here is correct for the posed question and ask a new question.",
          "time": null
        }
      ]
    }
  ]
}