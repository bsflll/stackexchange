{
  "title": "C166/C167 code analyzing",
  "link": "https://reverseengineering.stackexchange.com/questions/25747/c166-c167-code-analyzing",
  "content": "Recently I try to reverse piece of assembly code that written for C166/C167 Arch.\nBut I have a problem with some places for convert to C code, such as:\n\n```\nloc_1892:\nmov     r9, #4\nadd     r9, r0\nmov     r12, #0FFFFh\nmov     r4, r9\nadd     r4, #2\ncalls   0, sub_37C2\nmov     r13, r4\nmov     r14, r5\nmov     r15, #6\ncalls   0, CRC_16_Calculate\n\n```\nand in sub_37C2 :\n\n```\nsub_37C2:\nmov     r5, r4\nshr     r5, #14\nshl     r5, #1\nmov     r5, [r5+0FE00h] ; ==> Or DPP0\nbmov    r4.14, r5.0\nbmov    r4.15, r5.1\nshr     r5, #2\nrets\n\n```\nalso in CRC_16_Calculate:\n\n```\nloc_29A4:\nmov     r4, r13\nmov     r5, r14\nadd     r13, #1\naddc    r14, #0\nexts    r5, #1\nmovb    rl3, [r4]\nmovbz   r7, rl3\n\n```\nI guess in sub_37C2 code try to convert the near address to far. But I can't convert this to C code correctly.\nMy CRC16 implementation shown below:\n\n```\nstatic uint16_t Crc16(uint8_t* cBuffer, uint16_t iBufLen, uint16_t wPreset)\n{\n    uint16_t temp;\n    while (iBufLen--)\n    {\n        temp = *cBuffer++;\n        for (uint8_t j = 0; j < 8; ++j)\n        {\n            if ((wPreset ^ temp) & 0x01) wPreset = (wPreset >> 1) ^ 0xA001;\n            else wPreset >>= 1;\n            temp >>= 1;\n        }\n    }\n    return wPreset;\n}\n\n```\nAs you see, I convert loc_29A4 to temp = *cBuffer++ where temp is uint16 but cBuffer is uint8_t\n\n",
  "votes": "1",
  "answers": 0,
  "views": "774",
  "tags": [
    "ida",
    "disassembly",
    "c++",
    "c",
    "c166"
  ],
  "user": "Unicornux",
  "time": "Aug 26, 2020 at 7:20",
  "comments": [
    {
      "user": "Igor Skochinsky",
      "text": "What is your question?",
      "time": null
    },
    {
      "user": "Unicornux",
      "text": "Actually, I wanna to calculate the first address of an array that [r5+DPP0] pointing them.",
      "time": null
    }
  ],
  "answers_data": []
}