{
  "title": ".NET Method Tracing with Parameters",
  "link": "https://reverseengineering.stackexchange.com/questions/20478/net-method-tracing-with-parameters",
  "content": "Is there a tool which can profile the .NET binaries (32-bit and 64-bit) during execution to generate an API trace providing details of the methods called and the parameters passed to each method?\n\nSince .NET is JIT based, I think it should be feasible to do.\n\nAn API trace in the following format would be desirable:\n\n```\n<Address 1> <Method 1> <Parameter 1, Parameter 2>\n<Address 2> <Method 2> <Parameter 1, Parameter 2>\n....\n<Address N> <Method N> <Parameter 1, Parameter 2>\n\n```\nAnd an extension of this question. Is there a tool which can provide the similar information for each Windows API called by the .NET Binary as well?\n\n",
  "votes": "1",
  "answers": 0,
  "views": "71",
  "tags": [
    ".net"
  ],
  "user": "Neon Flash",
  "time": "Jan 26, 2019 at 18:14",
  "comments": [
    {
      "user": "Paweł Łukasik",
      "text": "having a trace with the first parameter (an address) is easier as one can do that in pure .NET before code is compiled to native. In order to have an address you would probably need to go one layer lower to get that.",
      "time": null
    }
  ],
  "answers_data": []
}