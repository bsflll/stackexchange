{
  "title": "Determining RS232 bus settings",
  "link": "https://reverseengineering.stackexchange.com/questions/291/determining-rs232-bus-settings",
  "content": "I have a device with two chips without part numbers. It looks like their using RS232 for serial communication (proper setup, right voltage), but I do not know the bus settings (speed, parity, etc.). Is there any way to determine the bus settings without brute force (trying everything)? \n\nI have a multimeter and an oscilloscope on my workbench.\n\n",
  "votes": "8",
  "answers": 2,
  "views": "2k",
  "tags": [
    "communication",
    "serial-communication"
  ],
  "user": null,
  "time": "Mar 27, 2013 at 17:47",
  "comments": [
    {
      "user": "asheeshr",
      "text": "Communication is too general a tag and can have many meanings.",
      "time": null
    },
    {
      "user": "user187",
      "text": "@AshRj I disagree. serial-communication is a good idea, but communication should do it as well. We have a communication tag on EE as well.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "If you have an oscilloscope, it should be pretty easy to determine at least the baud rate. Then you just need to play with the parity and stop bits.\n\nIf you don't have it, there's no real way around bruteforce. However, usually you don't have to try all combinations.\n\n",
      "votes": "8",
      "user": "Igor Skochinsky",
      "time": "Mar 26, 2013 at 17:09",
      "is_accepted": true,
      "comments": [
        {
          "user": "Igor Skochinsky",
          "text": "@CamilStaps Um, that's what I describe in the second part of my answer. Or did you mean something else?",
          "time": null
        },
        {
          "user": "Remko",
          "text": "9600-N-8-1 is very common as well. My approach is usually to start there and work up if that works since many devices support multiple speeds.",
          "time": null
        },
        {
          "user": "ixje",
          "text": "As said above try 9600-8-N-1 and 115200-8-N-1 and you've hit 98% of the cases in my experience.",
          "time": null
        },
        {
          "user": "cb88",
          "text": "19200-8N1 is also quite common...",
          "time": null
        }
      ]
    },
    {
      "content": "A simple logic analyzer, such as the Saleae is invaluable for finding simple transmit serial pins. Receive serial pins are harder due to them being silent. \n\nAre you sure that this is RS232 and not just serial? It's pretty rare to see RS232 on embedded systems unless they're industrial. RS232 goes way above TTL levels.\n\n",
      "votes": "4",
      "user": "Peter Andersson",
      "time": "Mar 26, 2013 at 18:07",
      "is_accepted": false,
      "comments": [
        {
          "user": "user187",
          "text": "I'm sure, the voltage level actually is why I thought it to be RS232. There are some modules, GPS e.g., that use the full RS232 protocol. But they are rare indeed.",
          "time": null
        }
      ]
    }
  ]
}