{
  "title": "Can someone please help me reverse engineer this assembly code to C please! [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/19747/can-someone-please-help-me-reverse-engineer-this-assembly-code-to-c-please",
  "content": "I am really bad at understanding assembly code and the way it works. I have little problems given to me in Assembly code and I have to reverse engineer it to C, but I have been doing really bad job at it so far. Can someone tell me what this code translates to in C. \n\n```\n    .file   \"hw4.c\"\n    .text\n    .p2align 4,,15\n    .globl  p1\n    .type   p1, @function\n\n.LFB14:\n    .cfi_startproc\n    movl    (%rdi), %eax\n    addl    (%rsi), %eax\n    ret\n    .cfi_endproc\n.LFE14:\n    .size   p1, .-p1\n    .p2align 4,,15\n    .globl  p2\n    .type   p2, @function\n\n```\n",
  "votes": "-2",
  "answers": 1,
  "views": "346",
  "tags": [
    "disassembly",
    "assembly",
    "c"
  ],
  "user": "taho",
  "time": "6 years ago",
  "comments": [
    {
      "user": "sudhackar",
      "text": "Welcome to RE.SE. Is this your homework? Translating asm to pseudo C is not actually reverse engineering. Start by reading on the directives in your code, flags, registers and instructions. You can't offload your homework to SE unless you show some research done/understanding.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "It is just a function that perform a simple addition:\n\n```\nint add(int *i, int *j)\n{\n  return *i + *j;\n}\n\n```\n",
      "votes": "1",
      "user": "perror",
      "time": "Oct 30, 2018 at 9:43",
      "is_accepted": false,
      "comments": [
        {
          "user": "sudhackar",
          "text": "rdi and rsi are addresses to the actual numbers being added.",
          "time": null
        },
        {
          "user": "perror",
          "text": "RIght. I fixed this on the code,my bad.",
          "time": null
        }
      ]
    }
  ]
}