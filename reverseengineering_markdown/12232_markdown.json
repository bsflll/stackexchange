{
  "title": "Trying to replicate a serial protocol",
  "link": "https://reverseengineering.stackexchange.com/questions/12232/trying-to-replicate-a-serial-protocol",
  "content": "Spent the last few weeks reading, typing, testing, rinse & repeat to no avail in solving a problem. \n\nProblem: Trying to reverse engineer a serial protocol at work.  Instrument is currently being sold.  Speaks exclusively to a GUI that was 'written' in Labview and is old and buggy.  I can't navigate the Labview 'code' for the life of me and the old SW engineer is gone.  I have the firmware code - but I'm not a firmware guy and I can't seem to find any kind of communications protocol in the firmware (I'm looking for read functions in the UART routines with input compare logic.. can't find anything).\n\nI've been using Busdog and some other serial monitors to read USB port communications between GUI and instrument.  I try to mimic what the GUI is saying, but I get different responses from instrument.  I've tried every common baud rate and I can't get the instrument to respond in the same manner (I'm seeing 57600 in firmware and software code but still can't get that baud rate to work).  Language I'm using is C# if that matters. Instrument also uses USB adapter for old style D-Sub serial cable, really not sure if that matters either. \n\nHere's the GUI/Instrument startup log:\n\nHere's my program/instrument log @ 57600 baud:\n\nNot sure why I can't match the startup routine.  Or match anything else.  I assume I'm missing something big.. I just don't know what.  Any insight helps.  Thanks.\n\n",
  "votes": "1",
  "answers": 0,
  "views": "192",
  "tags": [
    "serial-communication",
    "protocol",
    "usb"
  ],
  "user": "j_thompson",
  "time": "Mar 16, 2016 at 23:29",
  "comments": [],
  "answers_data": []
}