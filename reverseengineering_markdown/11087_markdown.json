{
  "title": "How to dynamically load address of USER32.DLL in shellcode?",
  "link": "https://reverseengineering.stackexchange.com/questions/11087/how-to-dynamically-load-address-of-user32-dll-in-shellcode",
  "content": "Assuming I'm injecting a shellcode into a Windows GUI application, I know I could:  \n\nThis is the classic way and that's what I would do, however I'd like to know if there's a better/improved/faster/clever/different/smaller or simpler way to do this.\n\nAny ideas?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "2k",
  "tags": [
    "windows",
    "shellcode"
  ],
  "user": "jyz",
  "time": "Oct 12, 2015 at 16:46",
  "comments": [],
  "answers_data": [
    {
      "content": "If user32.dll is already loaded in the process's address space (and I assume it is given that you said it's a Windows GUI application), you can walk the PEB_LDR_DATA structure in order to find the base address of user32.dll:\n\n",
      "votes": "3",
      "user": "Community",
      "time": "Apr 13, 2017 at 12:49",
      "is_accepted": true,
      "comments": [
        {
          "user": "jyz",
          "text": "Do you have sample code? I'm not sure I understood know to identify user32.dll base address",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "masm32.com/board/index.php?topic=4479.msg47967#msg47967",
          "time": null
        },
        {
          "user": "jyz",
          "text": "Excelent code, well documented. Thank you",
          "time": null
        }
      ]
    }
  ]
}