{
  "title": "Where can I find the QRC and QML files used for a QT gui application when reverse engineering?",
  "link": "https://reverseengineering.stackexchange.com/questions/22973/where-can-i-find-the-qrc-and-qml-files-used-for-a-qt-gui-application-when-revers",
  "content": "I'm currently working on a crackme exercise for a GUI application using QT as practice. The application uses a server login authentication. \n\nI can see from the logs that the application output that there should be some QML files, and some of the messages seem to be coming from QML objects. \n\nI have no prior experience working with QT before. There is qmldir provided which lists some QML files under qrc://. After googling I know know that the QRC should be a resource file that will contain the QML files, however I have no idea where this is. How should I go about finding this? \n\nAlso I seem to be finding snippets of java code in the dll files itself which is very confusing. Is this somehow related to how QT works? Do my questions even make sense?\n\nFYI I am using Ghidra and x96dbg to reverse the program\nAny pointers are greatly appreciated\n\n",
  "votes": "2",
  "answers": 1,
  "views": "543",
  "tags": [
    "crackme",
    "qt"
  ],
  "user": "ackbar03",
  "time": "Jan 12, 2020 at 14:29",
  "comments": [],
  "answers_data": [
    {
      "content": "Qt resources are stored in a pseudo-filesystem in the program itself as binary blobs of data. I'm not aware of any ready-made project to extract them from a compiled binary but you can exploit the fact that they are usually stored using zlib compression and use something like offzip to extract all zlib-compressed streams in the binary.\n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Jan 13, 2020 at 9:01",
      "is_accepted": false,
      "comments": []
    }
  ]
}