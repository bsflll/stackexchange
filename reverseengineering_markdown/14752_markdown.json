{
  "title": "IDA pro and function names/showing names",
  "link": "https://reverseengineering.stackexchange.com/questions/14752/ida-pro-and-function-names-showing-names",
  "content": "Excuse any ignorance, I'm new to IDA/re.\n\nI'm following this tutorial here: https://ketansingh.net/hacking-games-with-dll-injection/\n\nIn the tutorial when he checks the functions with IDA they are all named with actual names, but when I check the functions they are all named seg_address. Can anyone tell me what the reason for this is? Can I get a plugin? Or is there some setting that is the reason? I've done some googling but haven't really found anything.\n\nThanks in advance for any help.\n\n",
  "votes": "1",
  "answers": 2,
  "views": "9k",
  "tags": [
    "ida"
  ],
  "user": "tree",
  "time": "Feb 25, 2017 at 3:44",
  "comments": [],
  "answers_data": [
    {
      "content": "Most real-world programs on Windows do not include symbols in the binary, so IDA is not able to show function names (except for imports from other DLLs which have names, or compiler library functions identified by FLIRT). However, most of the binaries shipped with Windows do have separate symbols available on Microsoft's public symbol servers. So in cases where such symbols exist on the symbol server, IDA may be able to download them and recover names. If this is a non-Microsoft program or the symbols are missing for whatever reason, you won't get names and will have to reverse-engineer the functionality of the program by studying its code.\n\n",
      "votes": "3",
      "user": "Igor Skochinsky",
      "time": "Feb 25, 2017 at 12:19",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "When opening Minesweeper inside of IDA from the directory C:\\Program Files\\Microsoft Games\\Minesweeper IDA should display a dialog asking to grab PDB files. Click 'Yes' and you'll get the names of most of the functions.\n\nIf however the PDB is not found, an alternative method for finding the PDB file is to use Microsoft's SymChk tool which downoads the appropriate PDB for a given file. It's available with the Window debugging tools.\n\nMore Information: https://en.wikipedia.org/wiki/Program_database\n\n",
      "votes": "2",
      "user": "Michael Kiros",
      "time": "Feb 25, 2017 at 18:28",
      "is_accepted": false,
      "comments": [
        {
          "user": "tree",
          "text": "Thanks a lot for your time and help. I figured the pdb was probably why, but in the repo that the tutorial uses it isn't included. So is it just that the author didn't include it? I also tried what you said but IDA can't find the pdb so it asks for me to locate the file, which I don't believe is included. So I'm basically out of luck? Thanks again.",
          "time": null
        },
        {
          "user": "kennytm",
          "text": "Please edit your question for the additional information, answers should be used for answers.",
          "time": null
        },
        {
          "user": "perror",
          "text": "This does not provide an answer to the question. Once you have sufficient reputation you will be able to comment on any post; instead, provide answers that don't require clarification from the asker. - From Review",
          "time": null
        },
        {
          "user": "Michael Kiros",
          "text": "@tree As Igor said, it depends on the binary. Assuming this is an original binary from Microsoft, the PDB file should be available on their servers. Check out my edit detailing another way of finding PDB files.",
          "time": null
        }
      ]
    }
  ]
}