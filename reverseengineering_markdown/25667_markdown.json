{
  "title": "Encrypted firmware, need some hints",
  "link": "https://reverseengineering.stackexchange.com/questions/25667/encrypted-firmware-need-some-hints",
  "content": "I'm relatively new to firmware reverse engineering but it has been a very interesting journey, loved it!\n\nI am currently trying to crack open the firmware of my Panasonic Lumix DC-G9 camera to see if I can bypass a recording limit. However, it seems like they did a great job of encrypting the firmware.\n\nYou can download the .bin firmware file here.\n\nI tried Binwalk, but the output only shows one entry, which might be a false positive:\n\n```\nDECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n26453361      0x193A571       gzip compressed data, has header CRC, has 28967 bytes of extra data, last modified: 2052-10-14 16:14:25 (bogus date)\n\n```\nI tried extracting that, but gunzip only reports that the header checksum is not equal to the computed checksum. So could still be a false positive.\n\nI also tried to plot out the entropy of the firmware:\n\n\n\nSeems encrypted to me? Next step was to check if I could read any hints of the basic strings command:\n\n```\nMC471\npanasonic\nMC471\nloader1\nloader2\nloader3\nprogram\nstorage\npostboot1\npostboot2\npostboot3\npostboot4\npostboot5\ndram_sleep\neep_ow_a\neep_ow_b\neep_adj\neep_fix\nmusic\nosdover\nosddata\nkoutei_kao\navchd_info\neep_net_a\neep_net_b\neep_act_a\neep_act_b\nzboot\nzimage\nrootfs1\nrootfs2\napu0_data_i\napu0_data_e\napu0_code_i\napu0_code_e\nusbcharge\nipu_data\nipu_code\nrc_data\nrc_code\nnr_data\nnr_code\nhm_c_prog\n\n```\nSeems like zboot is the bootloader?\n\nSince I'm still pretty new, are there any hints on how I could progress on this? I really hope it's not cracking open the camera and trying to debug any hardware ROM which stores the keys!\n\n",
  "votes": "2",
  "answers": 1,
  "views": "825",
  "tags": [
    "firmware",
    "encryption"
  ],
  "user": "Johnny Verbeek",
  "time": "Aug 13, 2020 at 10:01",
  "comments": [],
  "answers_data": [
    {
      "content": "Assuming this is a firmware file, a good first step would be to identify where execution starts. You could do this by:\n\nThis would enable analysis of the overall code structure, which is likely compressed or encrypted if your entropy graph is correct.\n\nDepending on how firmware updates are delivered it’s possible this file is encrypted and would be decrypted by the microcontroller.\n\nThis could happen:\n\nIn both of these cases it’s much harder to analyse the system. You’d typically need a combination of hardware hacking and firmware reverse engineering to make progress.\n\n",
      "votes": "1",
      "user": "David",
      "time": "Aug 15, 2020 at 15:54",
      "is_accepted": false,
      "comments": []
    }
  ]
}