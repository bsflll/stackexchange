{
  "title": "Android (4.4+) SSL wireless sniffing without certificate changing",
  "link": "https://reverseengineering.stackexchange.com/questions/11431/android-4-4-ssl-wireless-sniffing-without-certificate-changing",
  "content": "I wish to analyze the unencrypted data sent of SSL by an Android APK that uses certificate pinning.\n\nThis suspicious APK is used to configure a wireless device.  \n\nI need to determine two things:  \n\nThe configuration process is:  \n\nThe HTTPS sessions to the Internet server use a fixed certificate, attempting to proxy results in a certificate error.\n\nIdeally I would like to use an emulation environment, and hook the library calls (similar to what \"Droidbox\" appeared to do), but I can't find a more recent version.\n\n",
  "votes": "3",
  "answers": 3,
  "views": "1k",
  "tags": [
    "android",
    "apk",
    "https-protocol"
  ],
  "user": "Just Asking",
  "time": "Feb 2, 2016 at 15:28",
  "comments": [],
  "answers_data": [
    {
      "content": "iSEC Partner's Android SSL TrustKiller utilizes hooks that Cydia substrate can provide in order to defeat certificate pinning. \n\n",
      "votes": "2",
      "user": "Coeus",
      "time": "Feb 2, 2016 at 14:03",
      "is_accepted": false,
      "comments": [
        {
          "user": "43.52.4D.",
          "text": "I would be eternally grateful if you shared details about how you got it to work for you? I've tried using Android SSL TrustKiller with Cydia substrate on both the Genymotion virtual machine, and the default Android virtual machine, and I've also tried with different versions of android, and even my physical phone, but I continue to ONLY pick up traffic from apps that don't use Certificate pinning. Please share what setup you are using?",
          "time": null
        }
      ]
    },
    {
      "content": "(Copy of an answer I gave on Stack Overflow)\n\nYou could try injecting code into the Android app to sniff and dump SSL traffic. Take a look at https://github.com/5alt/ssl_logger (5alt's fork works with Android). Note that you need root for this.\n\nThis works by hooking functions inside OpenSSL so that the raw traffic can be dumped before encryption/after decryption.\n\nYou have to install Frida Android server: https://www.frida.re/docs/android/\n\nTutorials for using Frida on Android:  https://11x256.github.io/\n\n",
      "votes": "2",
      "user": "CherryDT",
      "time": "Mar 8, 2020 at 20:49",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "For sniffing https calls I use Charles proxy, when you install Charles certifiate on the device you'll be able to sniff whole apk<->server traffic.\n\n",
      "votes": "0",
      "user": "perror",
      "time": "Jan 26, 2016 at 12:27",
      "is_accepted": false,
      "comments": [
        {
          "user": "Cybergibbons",
          "text": "The question specifically mentions that the certificate is pinned, so this will not work.",
          "time": null
        }
      ]
    }
  ]
}