{
  "title": "Linked list in IDA",
  "link": "https://reverseengineering.stackexchange.com/questions/13877/linked-list-in-ida",
  "content": "I debug a program with IDA, it have a part of code that i don't understand \n\n```\nloc_8048E30:                            ; CODE XREF: phase_6+9Ej\n.text:08048E30 mov     esi, [esi+8]\n.text:08048E33 inc     ebx\n.text:08048E34 cmp     ebx, eax\n.text:08048E36 jl      short loc_8048E30   \n\n```\nline 1: mov esi, [esi+8] when I debug address of esi is 0x804B260 so esi+8 is 0x804B268.\n\nThe value in [esi+8] is 60h so after mov esi, [esi+8], the value in esi is 60h but it really is 0x804B260. Why it is 0x804B260? \n\nAnd when esi is named .data:node2, it is linked link?\n\n\n\n\n",
  "votes": "0",
  "answers": 1,
  "views": "453",
  "tags": [
    "ida",
    "x86"
  ],
  "user": "QChí Nguyễn",
  "time": "Nov 11, 2016 at 17:15",
  "comments": [],
  "answers_data": [
    {
      "content": "The instruction mov esi, [esi + 8] copies 4 bytes (DWORD) of data at the location pointed to by esi + 8to register esi. \n\nIn your case esi is 0804B260 so it copies 4 bytes from 0804B268. Since x86_64 is little endian the least significant byte as per the screenshot 1 is 0x60. The remaining three bytes are located below (not in the picture).\n\nIt is named node2 as it is an exported symbol.\n\n",
      "votes": "2",
      "user": "0xec",
      "time": "Nov 7, 2016 at 8:38",
      "is_accepted": true,
      "comments": []
    }
  ]
}