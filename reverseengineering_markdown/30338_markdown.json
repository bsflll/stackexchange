{
  "title": "how to get indirect callsite function return type and arguments",
  "link": "https://reverseengineering.stackexchange.com/questions/30338/how-to-get-indirect-callsite-function-return-type-and-arguments",
  "content": "I am using idapython to get function return type and arguments @ an indirect call instruction.\n\nI was able to sync ida disassembler with hexrays decompiler as asked here and I can now get decompiled output for specific instruction. For e.g.\n\nfor instruction:\n\n```\ncall    rdx\n\n```\nI can get:\n\n```\nv4 = ((__int64 (__fastcall *)(_QWORD))fn2)(b) + v3;\n\n```\nMy final goal is to get function return type for e.g. in above case it could be the type of variable v4 and argument types, for e.g. type of variable b. So, say the function can possibly be:\n\n```\nreturn type: int\narg1 type: int\n....\n\n```\nI want to get these for indirect callsites.\n\nI checked the hexrays api but I believe there isn't any function which can give me return type and argument types/ count at a certain callsite.\n\nOne way to achieve this may be to extract arguments using regex for e.g. in above case b and then hunt their type by searching through lvars method from decompiled object. But, it seems like a lot of work (and maybe error prone) for seemingly easier problem using some internal ida functions.\n\nCould you please give many any directions on how to solve this? really appreciated.\n\n",
  "votes": "2",
  "answers": 1,
  "views": "564",
  "tags": [
    "ida",
    "idapython",
    "hexrays"
  ],
  "user": "R4444",
  "time": "Apr 28, 2022 at 3:03",
  "comments": [],
  "answers_data": [
    {
      "content": "Don't use regular expressions. Generally speaking, never use regular expressions to solve problems in IDA. All of the text you'd be operating upon is available as data via the API, which provides a normalized form and can resolve ambiguities. Anyway, your rough plan of attack here is as follows:\n\n\n\n",
      "votes": "2",
      "user": "Rolf Rolles",
      "time": "Apr 28, 2022 at 5:20",
      "is_accepted": true,
      "comments": [
        {
          "user": "R4444",
          "text": "this is perfect! thank you!",
          "time": null
        }
      ]
    }
  ]
}