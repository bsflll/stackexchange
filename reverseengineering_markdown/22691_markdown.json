{
  "title": "submitting input into AFL fuzzer",
  "link": "https://reverseengineering.stackexchange.com/questions/22691/submitting-input-into-afl-fuzzer",
  "content": "I have some questions about the AFL Fuzzer:\n\n",
  "votes": "2",
  "answers": 0,
  "views": "203",
  "tags": [
    "disassembly",
    "binary-analysis",
    "linux",
    "fuzzing"
  ],
  "user": "Logan",
  "time": "Dec 9, 2019 at 10:19",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "Hi and welcome to RE.SE. As far as I understand AFL, it mutates whatever input is provided and is able to generate input which triggers faulty behavior. The way it does that is by exploiting the fact that fork() keeps the full state of the program prior to the fork() and so it's relatively cheap to follow different execution paths simply by mutating the input as it goes. The author of AFL even provides a corpus of image files generated by AFL \"from thin air\" simply by fuzzing some image processing tool and generating/mutating input for it.",
      "time": null
    }
  ],
  "answers_data": []
}