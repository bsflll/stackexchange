{
  "title": "Issues rewriting portions of DOS app's assembly",
  "link": "https://reverseengineering.stackexchange.com/questions/14359/issues-rewriting-portions-of-dos-apps-assembly",
  "content": "I am working on editing an old DOS program's assembly, but I'm running into some odd issues.\n\nI'm using IDA Pro 6.4 and a hex editor to patch. I'm code-caving the new data by removing old stuff never used.\n\nJust changing the assembly code does nothing, in the sense that it just exits, no errors or nothing. The code properly disassembles and looks right, but it doesn't do anything. The code is 100% right as I'm basing it off another application. There is no protection as I explain below, other changes work. However anything that involves \"call\" or variables other than what was originally used...don't work.\n\nHere is an example of what I'm doing:\n\nCode presently reads a ISA card for some data. I am making it fread a file instead. \n\nThe program is compiled using Watcom 9.5 and uses Causeway extender. It uses fastcall not stdcall.\n\nI'm starting to pull my hair out because I need to rework the logic so it does some other stuff (write to file for example).\n\nIt's odd because simple changes to the logic work as I've made many other micro changes (jnz to jz for example).\n\nAny advise? Is there something in the file I'm missing? If you need more info, let me know. \n\nHere is an example of a change I've tried to make (this is the NEW code):\n\n```\npush    ebx\npush    ecx\npush    edx\npush    esi\npush    edi\npush    ebp\nmov     ebp, esp\nsub     esp, 4\nmov eax, offset pathname\npush eax\ncall printf_\npop     ebp\npop     edi\npop     esi\npop     edx\npop     ecx\npop     ebx\n\n```\n",
  "votes": "0",
  "answers": 2,
  "views": "241",
  "tags": [
    "disassembly",
    "assembly",
    "dos",
    "dos-exe"
  ],
  "user": "Thomas",
  "time": "Jan 10, 2017 at 2:09",
  "comments": [
    {
      "user": "Vladislav Ivanov",
      "text": "Can you debug your target? How do you test if your changes work?",
      "time": null
    },
    {
      "user": "Thomas",
      "text": "real hard ware and dosbox. i cant understand why simple changes don't work. it seems as if its executing because if i dont have the pops in there, it crashes.",
      "time": null
    },
    {
      "user": "nrz",
      "text": "Have you updated the relocation table?",
      "time": null
    },
    {
      "user": "Igor Skochinsky",
      "text": "Well, then I can only suggest to step through it in debugger and figure out what's going wrong with the patched code.",
      "time": null
    },
    {
      "user": "Thomas",
      "text": "@nrz YES! Just verified it was the relocation table (fixup table). I can now finally put some effort into this. I found a tool called \"lxdump\" that REALLY helped me.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "In case of Watcom fastcall uses eax, edx, ebx, ecx for the first 4 arguments, however your code is pushing eax and is not restoring the stack afterwards. You should probably either add another pop (e.g. pop eax) after the call or an add esp, 4, OR use the esp value you saved in ebp, i.e. mov esp, ebp. \n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Jan 10, 2017 at 22:59",
      "is_accepted": false,
      "comments": [
        {
          "user": "Thomas",
          "text": "I've done that too, same result. I'll rewrite the patch and post it. I wanna figure this out so any help is MUCH appreciated.",
          "time": null
        },
        {
          "user": "Thomas",
          "text": "Also, shouldn't the edit ATLEAST produce the printf result?",
          "time": null
        }
      ]
    },
    {
      "content": "In the end, the issue was due to the fixup tables. I wrote custom code to read the LE structure and thanks to some documents, figured out what offsets were being fixed up.\n\nPlease note, you need to parse the Fixup Page table and then loop through checking positions. Then read the record data. \n\n",
      "votes": "1",
      "user": "Thomas",
      "time": "Jan 23, 2017 at 4:17",
      "is_accepted": true,
      "comments": []
    }
  ]
}