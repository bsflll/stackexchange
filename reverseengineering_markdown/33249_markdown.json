{
  "title": "Register flags abbreviations in Windbg",
  "link": "https://reverseengineering.stackexchange.com/questions/33249/register-flags-abbreviations-in-windbg",
  "content": "I used trace (t) command in Windbg but I don't see the flag values, except this:\n\nnv up ei pl nz na pe nc\n\nI suppose these are some abbreviations of flag states but I cannot find what they mean. Is there some reference of this?\n\nThanks in adv,\nAdi\n\n",
  "votes": "1",
  "answers": 1,
  "views": "52",
  "tags": [
    "windbg"
  ],
  "user": "Uddie",
  "time": "Oct 6, 2024 at 22:22",
  "comments": [
    {
      "user": "blabb",
      "text": "check x86 flags registers",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "in x86 the flag is denoted by EFLAGS\nin x64 the flag is denoted by RFLAGS\n\nBit 0 is Carry Flag\nCF  and can be either NC (No Carry) or CY (Carry)\n\nBit 1 is reserved Flag and is normally set to 1\n\nBit 2 is Parity Flag\nPF and can be either PE (Parity EVEN) or PO (Parity Odd)\n\nBit 3 is reserved Flag\n\nBit 4 is Auxillary Carry\nAF and can be either AC (Aux Carry) or NA (No Aux Carry)\n\nBit 5 is reserved Flag\n\nBit 6 is Zero Flag\nZF and can be either ZR (Zero) or NZ (Not Zero)\n\nBit 7 is Sign Flag\nSF and can be either NG (Negative ) or PL (Positive)\n\nBit 8 is Trap Flag\nTF and is used for single Step Trap\n\nBit 9 is Interrupt Enable\nIF and can be either EI (Enable Interrupt) or DI (Disable Interrupt)\n\nBit 10 is Direction Flag\nDF and can be either DN (DOWN ) or UP (UP)\n\nBit 11 is OverFlow Flag\nOF and can be either OV (OverFlow ) or NV (No OverFlow)\n\nBit 12 & 13 is IOPL Flag\nused for Privilege level  (user privileges and kernel privileges)\n\nin windbg you can set the efl to 0 and check the register display as below\n\n```\n0:000> r efl =0\n0:000> r\niopl=0         nv up di pl nz na pe nc\nefl=00000000\n\n```\nsince all bits are 0  the display shows\n\n```\nnc = No Carry\npe = Parity Even\nna = No Auxillary Carry\nnz = Not Zero\npl = Positive\ndi = Disable Interrupt\nup = Direction Up\nnv = No Overflow\n\n```\nand then set each flag individually to check the display\nsetting carry flag changes nc to cy\n\n```\n0:000> r cf =1\n0:000> r\niopl=0         nv up di pl nz na pe cy\n\n```\nsetting the parity flag changes pe to po\n\n```\n0:000> r pf =1\n0:000> r\niopl=0         nv up di pl nz na po cy\n\n```\nand so on\n\n```\n0:000> r af =1\n0:000> r zf =1\n0:000> r sf =1\n0:000> r tf =1\n0:000> r if =1\n0:000> r df =1\n0:000> r of =1\n0:000> r\niopl=0         ov dn ei ng zr ac po cy\n\n```\nfor other esetoric flags check the link as commented or wikipedia here\n\n",
      "votes": "2",
      "user": "blabb",
      "time": "Oct 7, 2024 at 12:20",
      "is_accepted": true,
      "comments": [
        {
          "user": "Uddie",
          "text": "Thank you very, very much! Your answer exceeds what I wanted to know :-)",
          "time": null
        }
      ]
    }
  ]
}