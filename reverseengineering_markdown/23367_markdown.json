{
  "title": "How to retrieve generically memory reads of an input and determine all relevant offsets?",
  "link": "https://reverseengineering.stackexchange.com/questions/23367/how-to-retrieve-generically-memory-reads-of-an-input-and-determine-all-relevant",
  "content": "I would like to record all memory read operations that are performed by an application on a given input file, to help infer which specific parts of an input are relevant for the specific execution that opens the input. \n\nI'm trying to achieve this for Windows applications, whereas the applications itself can be x86 or x64, and the input is not of a specific format (e.g. solution should not only work with JPG, but also PNG or XYZ). The solution is intended to work for applications without access to the source code (binaries only, no symbols).\n\nAn example\n\nInput foo.bar:\n\nProgram n:\n\nPotential problems I can think of:\n\nAs per my current understanding, what I could do as a start is to:\n\n1) Research the specific Windows APIs for file opening/handling\n\n2) Set a breakpoint on them and retrieve the parameters\n\n3) From here on, how can I determine or map the specific offsets within an input and the program access on it?\n\nIs there any script or tool that already does something like this, e.g. by relying on WinDbg or DBI frameworks like DynamoRIO or PIN?\n\nIf not, I'd really appreciate if someone can point me towards specific resources or key words that would help me in better understand how to approach this problem and come up with a pratical solution. Any help would be much appreciated.\n\n",
  "votes": "3",
  "answers": 0,
  "views": "86",
  "tags": [
    "debugging",
    "dynamic-analysis"
  ],
  "user": "MmM",
  "time": "Mar 1, 2020 at 17:59",
  "comments": [
    {
      "user": "macro_controller",
      "text": "I think a general concept you are talking about called taint analysis.",
      "time": null
    }
  ],
  "answers_data": []
}