{
  "title": "Can one modify a program by \"wrapping\" its binary? What tools exist?",
  "link": "https://reverseengineering.stackexchange.com/questions/8018/can-one-modify-a-program-by-wrapping-its-binary-what-tools-exist",
  "content": "(This question is related to How do I add functionality to an existing binary executable?).\n\nI too would like to add functionality to an existing application, but I do not want to modify the original binary.\n\nI imagine that, for some \"well-behaved\" compiled code, it ought to be possible to create a \"wrapper\" program that:\n\nFor example, suppose that loading the original binary would place void origfunction(int, int) at location 0x1234; my thought is that loading the wrapper might cause that function's machine code (from the original binary) to be loaded at 0x5678 with void newfunction(int, int) loaded at 0x1234 in its place.  newfunction could then make a call to origfunction before/after performing its modifications.\n\nIs this approach feasible?  If not, why not?\n\nIf it is feasible, are there any tools that can assist in automating the generation of such a wrapper program?  Generic answers would be most useful for future readers, but the original binary that I am working with right now is a fairly typical OS X one (Mach-O format, compiled from Objective-C).\n\n",
  "votes": "2",
  "answers": 2,
  "views": "1k",
  "tags": [
    "tools",
    "c",
    "executable",
    "osx",
    "mach-o"
  ],
  "user": "eggyal",
  "time": "Apr 13, 2017 at 12:49",
  "comments": [],
  "answers_data": [
    {
      "content": "Dynamic instrumentation tools like Frida or DynomoRIO are probably your best bet. Traditional code injection approaches like mach_inject on os x or detours on windows are things you could look into as well.\n\n",
      "votes": "3",
      "user": "broadway",
      "time": "Jan 27, 2017 at 18:38",
      "is_accepted": false,
      "comments": [
        {
          "user": "ikaerom",
          "text": "I suppose mentioning pin (which does not seem to be available anymore on MacOSX) and DynomoRIO, one could also add cycript to that list. It works remarkably well, though seems mostly undocumented.",
          "time": null
        }
      ]
    },
    {
      "content": "Some of the tools i know of:\n\nBackdoor Factory support a varity of binaries such as ELF, Mach-O, PE.\n\n",
      "votes": "1",
      "user": "Jonas Lejon",
      "time": "Jan 15, 2015 at 10:33",
      "is_accepted": false,
      "comments": [
        {
          "user": "eggyal",
          "text": "Unless I've misunderstood, both those solutions appear to statically modify the underlying binary (which is something that I do not want to do).  I am looking for tools through which one can create an executable that will dynamically load the original binary yet intercept its function calls.  Or have I missed something?",
          "time": null
        },
        {
          "user": "Jonas Lejon",
          "text": "@eggyal: You are correct. I misunderstood the question, sorry.",
          "time": null
        }
      ]
    }
  ]
}