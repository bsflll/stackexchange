{
  "title": "Any idea how to decode this binary data?",
  "link": "https://reverseengineering.stackexchange.com/questions/1971/any-idea-how-to-decode-this-binary-data",
  "content": "I have binary data representing a table.\n\nHere's the data when I print it with Python's repr():\n\\xff\\xff\\x05\\x04test\\x02A\\x05test1@\\x04\\x03@@\\x04\\x05@0\\x00\\x00@\\x05\\x05test2\\x03\\x05\\x05test1\\x06@0\\x00\\x01@\\x00\n\nHere's what the table looks like in the proprietary software.\n\n        test1        \n        test1test1\ntest          test1\ntest1                \ntest1test2        \n                        \n                        \ntest1                \ntest1                \ntest1                \n        test1        \n        test1        \n                        \n                        \ntest1                \ntest1                \n\nI was able to guess some of it:\n\nAnyone knows if the data is following a standard or have any tips how to decode it?\n\nThanks!\n\nHere's an example with python :\n\n```\nfrom struct import unpack\n\n\ndef DecodeData(position):\n    print \"position\", position\n    firstChar = data[position:][:1]\n    size_in_bytes = unpack('B', firstChar)[0]\n    print \"firstChar: {0}. size_in_bytes: {1}\".format(repr(firstChar), size_in_bytes)\n    return size_in_bytes\n\n\ndef ReadWord(position, size_in_bytes):\n    word = unpack('%ds' % size_in_bytes, data[position:][:size_in_bytes])[0]\n    print \"word:\", word\n\ndata = \"\\xff\\xff\\x05\\x04test\\x02A\\x05test1@\\x04\\x03@@\\x04\\x05@0\\x00\\x00@\\x05\\x05test2\\x03\\x05\\x05test1\\x06@0\\x00\\x01@\\x00\"\n\nposition = 0\n\nprint \"\"\nposition += 1\nDecodeData(position)\nprint \"\\\\xff - ?\"\n\nprint \"\"\nposition += 1\nDecodeData(position)\nprint \"\\\\x05 - ?\"\n\nprint \"\"\nposition += 1\nsize_in_bytes = DecodeData(position)\nposition += 1\nReadWord(position, size_in_bytes)\n\n\nprint \"\"\nposition += size_in_bytes\nDecodeData(position)\nposition += 1\nDecodeData(position)\nprint \"\"\"'2A' : could be to say that \"test\" has 2 empty cells before it\"\"\"\n\nprint \"\"\nposition += 1\nsize_in_bytes = DecodeData(position)\nposition += 1\nword = unpack('%ds' % size_in_bytes, data[position:][:size_in_bytes])[0]\nprint \"word:\", word\n\nposition += size_in_bytes\n\nDecodeData(position)\nprint \"\"\"@: mean that there's another \"test1\" cell\"\"\"\n\nprint \"\"\nposition += 1\nDecodeData(position)\nposition += 1\nDecodeData(position)\nprint \"\\\\x04\\\\x03 - Could be that the next value is 3 cells down\"\n\nprint \"\"\nposition += 1\nDecodeData(position)\nprint \"\"\nposition += 1\nprint \"@@ - Seems to mean 3 repetitions\"\n\nprint \"\"\nposition += 1\nDecodeData(position)\nposition += 1\nDecodeData(position)\nprint \"\\\\x04\\\\x05 - Could be that the next value is 5 cells down\"\n\nprint \"\"\nposition += 1\nDecodeData(position)\nprint \"@ - repetition\"\n\nprint \"\"\nposition += 1\nDecodeData(position)\n\nprint \"\"\nposition += 1\nDecodeData(position)\nposition += 1\nDecodeData(position)\nprint \"\\\\x00\\\\x00 - That could mean to move to the first cell on the next column\"\n\nprint \"\"\nposition += 1\nDecodeData(position)\nprint \"@ - repetition\"\n\nprint \"\"\nposition += 1\nDecodeData(position)\nprint \"\\\\x05 - ?\"\n\nprint \"\"\nposition += 1\nsize_in_bytes = DecodeData(position)\nposition += 1\nword = unpack('%ds' % size_in_bytes, data[position:][:size_in_bytes])[0]\nprint \"word:\", word\nposition += size_in_bytes\n\nprint \"\"\nDecodeData(position)\nprint \"\\\\x03 - Could be to tell that the pervious word 'test2' is 3 cells down\"\n\nprint \"\"\nposition += 1\nDecodeData(position)\nprint \"\\\\x05 - ?\"\n\nprint \"\"\nposition += 1\nsize_in_bytes = DecodeData(position)\nposition += 1\nword = unpack('%ds' % size_in_bytes, data[position:][:size_in_bytes])[0]\nprint \"word:\", word\nposition += size_in_bytes\n\nprint \"\"\nDecodeData(position)\nprint \"\\\\x06 - Could be to tell that the pervious word 'test1' is 6 cells down\"\n\nprint \"\"\nposition += 1\nDecodeData(position)\nprint \"@ - repetition\"\n\nprint \"\"\nposition += 1\nDecodeData(position)\nprint \"\\\\0 - ?\"\n\nprint \"\"\nposition += 1\nDecodeData(position)\nposition += 1\nDecodeData(position)\nprint \"\\\\x00\\\\x01 - Seems to mean, next column second cell\"\n\nprint \"\"\nposition += 1\nDecodeData(position)\nprint \"@ - repetition\"\n\nprint \"\"\nposition += 1\nDecodeData(position)\nprint \"\\\\x00 - end of data or column\"\n\n```\n",
  "votes": "7",
  "answers": 1,
  "views": "5k",
  "tags": [
    "unpacking",
    "file-format"
  ],
  "user": "bbigras",
  "time": "May 1, 2013 at 18:00",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "Do you have the module itself? It would be almost trivial to disassemble the repr function, assuming this is registered the normal way it is in C extension modules.",
      "time": null
    },
    {
      "user": "bbigras",
      "text": "I'm not sure I understand what you mean by \"module\". But here's the data in HEX 0xFFFF050474657374024105746573743140040340400405403000004005057465737432030505746573743106403000014000. I'm using repr() only to get rid of the 'Decode error - output not utf-8' message in python so you can ignore that.",
      "time": null
    },
    {
      "user": "0xC0000022L",
      "text": "The data belongs to some kind of object and that usually belongs to a module, such as the ones you import in Python ;)",
      "time": null
    },
    {
      "user": "bbigras",
      "text": "The data is from a [varbinary](max) field in a MSSQL database which is used by a proprietary and uncooperative software.",
      "time": null
    },
    {
      "user": "0xC0000022L",
      "text": "It would make sense to have the software that processes the data. See here. Basically too little info to help you.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Here's an explanation for what I think the individual symbols mean. I'm basing this around the presumption that a little selector is going through the cells, one by one.\n\nSo here's my interpretation of the data you're giving us:\n\nExplanation: My method was to look for a pattern, check if the pattern withstood further scrutiny - the first pattern I checked seemed to - and clear up any minor issues I had with it. Seems to have worked.\n\n",
      "votes": "7",
      "user": "0xC0000022L",
      "time": "May 4, 2013 at 2:34",
      "is_accepted": true,
      "comments": [
        {
          "user": "asheeshr",
          "text": "Please format your answers properly. @0xC0000022L did it for you this time.",
          "time": null
        }
      ]
    }
  ]
}