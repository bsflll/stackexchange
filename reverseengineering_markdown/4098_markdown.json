{
  "title": "Need to extend the list of libraries that a shared (.so) library uses",
  "link": "https://reverseengineering.stackexchange.com/questions/4098/need-to-extend-the-list-of-libraries-that-a-shared-so-library-uses",
  "content": "I have a number of shared libraries calling each other (.so, ARM, Android), binary-only.\n\nI want to add logging to some functions, funcA(), ..., funcZ() defined in libsomething.so.\nThe functions are called from libstuff1.so, ..., libstuffN.so.\nI can rename a function in the original library (keeping the name in the same bucket is a bit tricky, but possible).\n\nI want to either:\n\nHow can I do any of these?\n\n",
  "votes": "3",
  "answers": 3,
  "views": "612",
  "tags": [
    "linux",
    "android",
    "arm",
    "libraries"
  ],
  "user": "18446744073709551615",
  "time": "Apr 21, 2014 at 6:57",
  "comments": [],
  "answers_data": [
    {
      "content": "The required shared libraries are stored as DT_NEEDED entries in the dynamic section of the executable. This entry, in turn, points into the dynamic string table. So, to add another library, you will need to do something like this:\n\n",
      "votes": "3",
      "user": "Igor Skochinsky",
      "time": "Apr 20, 2014 at 18:25",
      "is_accepted": false,
      "comments": [
        {
          "user": "18446744073709551615",
          "text": "Is there a library that can read the .so into memory, converting it into some data structures (like DOM parsers read XML), so that I could add one element to the list and write it back?",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "Haven't seen any.",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "Update: it seems PatchELF implements at least some of the necessary functionality, so you can try extending it, or submit a feature request.",
          "time": null
        }
      ]
    },
    {
      "content": "A simple way there is. readelf -d libxyz.so all dependencies lists. One of these libraries extend or substitute you can.\n\n",
      "votes": "1",
      "user": "18446744073709551615",
      "time": "Apr 24, 2014 at 12:22",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "I know it's not a direct answer to your question, but would something like LD_PRELOAD mechanism allow you to achieve what you want?\n\nWith LD_PRELOAD you can specify your library which is to be loaded and functions from that library will be used instead of ones in the original library. This is a common and simple way of doing function hooking on Linux systems. \n\nHere is an example of using LD_PRELOAD to hook functions. \n\n",
      "votes": "1",
      "user": "perror",
      "time": "Apr 25, 2014 at 15:38",
      "is_accepted": false,
      "comments": []
    }
  ]
}