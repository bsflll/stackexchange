{
  "title": "Fujifilm Firmware Checksum",
  "link": "https://reverseengineering.stackexchange.com/questions/28033/fujifilm-firmware-checksum",
  "content": "I'm working on reverse engineering the firmware for my Fujifilm HS20EXR.\n\nI've figured out most of it, but I am currently stuck on what I am fairly certain is a checksum. If I modify it, the camera says the firmware is broken. Of course, the same thing happens when I modify the firmware payload. I've tried CRC32, CRC16, MD5sum, but I can't figure out how to reproduce the checksum.\n\nHere's a brief layout of the firmware file:\n\n```\nSize in bytes  Description\n4              Hardware or OS version\n512            Model information (consistent on firmware updates for same model)\n8              Firmware version\n4              Checksum (different on all firmwares) In this case, `8A 73 D8 D4`, or 0xd4d8738a.\n4              Checked several firmwares, generally just \"1\".\nvariable       Payload (bit flipped)\n\n```\n(I've gotten the payload disassembled, but I haven't been able to\nget the strings correctly referenced to the code.)\n\nAny advice or recommendations would help greatly.\n\nI've stored my code over at https://github.com/petabyt/fujifilm. If you want to try it out, you should be able to run:\n\n```\nwget https://dl.fujifilm-x.com/support/firmware/hs20WAkw7ifA/FPUPDATE.DAT -O hs20exr.DAT\nmake t=u f=hs20exr.DAT\n\n```\n",
  "votes": "3",
  "answers": 1,
  "views": "234",
  "tags": [
    "firmware",
    "ghidra"
  ],
  "user": "PTB",
  "time": "Jul 27, 2021 at 20:52",
  "comments": [],
  "answers_data": [
    {
      "content": "I've figured it out. One of my earlier tests had been done wrong, it turns out it is just a simple case of \"add up all the firmware bytes and make sure it equals X\".\n\n",
      "votes": "4",
      "user": "PTB",
      "time": "Jul 23, 2021 at 21:04",
      "is_accepted": false,
      "comments": []
    }
  ]
}