{
  "title": "Android - capture screen with the lowest latency via android native code",
  "link": "https://reverseengineering.stackexchange.com/questions/26071/android-capture-screen-with-the-lowest-latency-via-android-native-code",
  "content": "I'm trying to catch small fragment of screen during working some Android app which I'm currently reversing. I've tried screencap with various calls but minimum latency which I was able to achieve was 0.8s. I would like to go below 0.1s to get at least 10 FPS. For me it's enough to develop small bin tool in android native code which I'll push on the phone and then run via adb shell.\n\nI've digged a little into screencap.cpp source code and found following callstack:\nscreencap -> ScreenshotClient::update -> ComposerService->captureScreen -> remote()->transact\n\nAnyway any useful include in sources above are not visible anywhere in android ndk.\n\nDoes anybody good in native android code could give me any advice which ndk lib/include can return current screen buffer? I've tried to get buffer from /dev/graphics/fb0 but it's blocked in my phone.\n\nThanks in advance!\n\n",
  "votes": "0",
  "answers": 0,
  "views": "227",
  "tags": [
    "android"
  ],
  "user": "voldi",
  "time": "Oct 6, 2020 at 15:39",
  "comments": [
    {
      "user": "diff",
      "text": "If you're truly reversing an app and need to record the graphic rendering - you can try to utilize GAPID github.com/google/gapid  If you're attempting to make a video downloader to distribute for sale, like many folks asking the questions, just ask that since the answer would be different :)",
      "time": null
    },
    {
      "user": "voldi",
      "text": "Hi, sorry for late response but in the meantime I somehow solved my issue. What I wanted to do was to automate certain game which was testing user reflex, therefore I wanted to achieve the shortest possible delay between rendered video frame, then send it to my code on PC and generate press touchscreen event. Eventually I run that game in emulator and created some emulator macros for my goals. Anyway thanks for help :)",
      "time": null
    }
  ],
  "answers_data": []
}