{
  "title": "Reversing Checksum of serial protocol",
  "link": "https://reverseengineering.stackexchange.com/questions/8097/reversing-checksum-of-serial-protocol",
  "content": "I'm trying to reverse engineer a serial protocol of a compressor, but i've no luck calculation the checksum.\n\ne.g. here are some messages including the 16-bit checksum at the end of the message.\n\n```\n\nff 02 ff 01 10 00 10 00 41 9e e2\nff 02 ff 01 10 00 10 00 42 9d e3\n02 fe 03 00 00 00 00 00 00 fd c1\n00 fe 02 83 01 10 00 00 00 00 6c c1\n\n```\nBy now i know following octets\n\n```\n\n00  target addr\nfe  seems like a seperator\n02  own addr\n83  register addr\n01  value1 high\n10  value1 low\n00  value2 high\n00  value2 low\n00  value3 high\n00  value3 low\n6c  Checksum\nc1  Checksum\n\n```\nI've tried to calculate the Checksum with different 16-Bit CRC's and brute-forcing with \"reveng\", but sadly i had no luck.\n\nAlso there is no way to put own Bits into the checksum function, but i can provide additional messages.\n\nCan anybody help?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "293",
  "tags": [
    "deobfuscation",
    "decryption",
    "cryptanalysis"
  ],
  "user": "Hannibal",
  "time": "Jan 26, 2015 at 19:43",
  "comments": [
    {
      "user": "Jason Geffner",
      "text": "Why not reverse engineer the code that produces the checksum?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The first byte is a simple checksum variant.  In C:\n\n```\nuint8_t firstbyte( uint8_t const *data, size_t bytes )\n{\n    uint8_t sum;\n    for (sum = 0; bytes; --bytes)\n        sum -= *data++;\n    return sum;\n}\n\n```\nThe second byte is a shift and add thing something like the BSD checksum:\n\n```\nuint8_t secondbyte( uint8_t const *data, size_t bytes )\n{\n    uint8_t sum;\n    for (sum = 0; bytes; --bytes) {\n        sum = (sum << 1) | ((sum & 0x80) ? 1 : 0);\n        sum += *data++;\n    }\n    return sum;\n}\n\n```\n",
      "votes": "1",
      "user": "Edward",
      "time": "Jan 27, 2015 at 17:44",
      "is_accepted": true,
      "comments": []
    }
  ]
}