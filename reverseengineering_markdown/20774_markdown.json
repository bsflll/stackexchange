{
  "title": "debugging with radare2",
  "link": "https://reverseengineering.stackexchange.com/questions/20774/debugging-with-radare2",
  "content": "I am using radare2 for disassemble an x86 binary:\n\n```\n$ r2 ./mynbinary\n[0x00001000]> aaa\n...\n[0x00001000]> pdf\n            ;-- section..text:\n            ;-- section.LOAD1:\n            ;-- rip:\n/ (fcn) entry0 53\n|   entry0 ();\n|           ; UNKNOWN XREF from 0x00001000 (entry0)\n|           0x00001000      e800000000     call loc.suite              ; [15] m-r-x section size 53 named LOAD1\n            ;-- suite:\n|           ; CALL XREF from 0x00001000 (entry0)\n|           0x00001005      48b968656c6c.  movabs rcx, 0x3332316f6c6c6568\n...\n\n```\nAs you can see it works great.\n\nNow, i am doing the same thing, on the same binary but with -d option in order to debug the binary\n\n```\n[0x7ff5a7183210]> aaa\n...\n[0x7ff5a7183210]> pdf\np: Cannot find function at 0x7ff5a7183210\n\n```\nI don't know why it does not work in debuging...\n\nThanks\n\n",
  "votes": "1",
  "answers": 1,
  "views": "800",
  "tags": [
    "x86",
    "radare2"
  ],
  "user": "Bob5421",
  "time": "Mar 4, 2019 at 14:29",
  "comments": [],
  "answers_data": [
    {
      "content": "The issue is that address 0x7ff5a7183210 is not part of your binary but rather part of the kernel code that will run your code. So running aaa will not create any functions there. What you need to create a breakpoint in your code (i.e running db main) and only when your breakpoint is hit you could run pdf and it should should show you the disassembly.\n\n",
      "votes": "2",
      "user": "Paweł Łukasik",
      "time": "Mar 4, 2019 at 20:22",
      "is_accepted": true,
      "comments": []
    }
  ]
}