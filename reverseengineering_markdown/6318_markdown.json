{
  "title": "Idapython - undefining an instruction",
  "link": "https://reverseengineering.stackexchange.com/questions/6318/idapython-undefining-an-instruction",
  "content": "I have an instructions defined from address+1 onward and a byte at address. I'd like to undefine the instructions from address+1 onward and redefine them from address using MakeCode or something similar.\n\nSo far I have not found any functions to undefine instructions. Any pointers on where I should be looking?\n\n",
  "votes": "6",
  "answers": 1,
  "views": "4k",
  "tags": [
    "ida",
    "idapython"
  ],
  "user": null,
  "time": "Sep 26, 2014 at 9:52",
  "comments": [
    {
      "user": "Guntram Blohm",
      "text": "MakeUnkn() (see offensivecomputing.net/papers/IDAPythonIntro.pdf page 48) is probably what you're looking for.",
      "time": null
    },
    {
      "user": "user3238415",
      "text": "In versions > 7.4 of IDA some functions have been moved (hex-rays.com/products/ida/support/â€¦). The MakeUnkn function has been moved/renamed to ida_bytes.del_items",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Here is a POC from some code I wrote a while back. \n\n```\ndef fixTheJmpCalls():\n    # kind of slow to loop through all the functions and instructions but it works \n    # flaw: only defined functions will be traversed.this. \n    for funcea in Functions( SegStart( here() ), SegEnd( here() ) ):\n        for eai in FuncItems(funcea):\n            if GetMnem(eai) == \"jmp\" or GetMnem(eai) == \"call\":\n                if GetDisasm(eai)[-2:-1] == \"+\" and GetDisasm(eai)[-1:].isdigit():\n                    print \"Broken Instruction: %X\"%eai, GetDisasm(eai)\n                    code_addr = GetOperandValue(eai, 0) \n                    fix_addr = code_addr -1 \n                    MakeUnkn(fix_addr,1)\n                    MakeCode(code_addr)\n\n```\n",
      "votes": "5",
      "user": "alexanderh",
      "time": "Sep 26, 2014 at 21:44",
      "is_accepted": false,
      "comments": []
    }
  ]
}