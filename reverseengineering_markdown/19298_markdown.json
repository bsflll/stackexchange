{
  "title": "Where can I find documentation for the name mangling scheme used by SunPro CC",
  "link": "https://reverseengineering.stackexchange.com/questions/19298/where-can-i-find-documentation-for-the-name-mangling-scheme-used-by-sunpro-cc",
  "content": "I have a few SPARC binaries that have been compiled with what seems to be the SunPro CC compiler. The symbols in the binary are referring to a very early C++ implementation (pre-namespaces) and look like this:\n\n```\n__0oHistreamrsRUl.\n__0oHistreamrsRi.\n__0oHistreamrsRf.\n__0oKistrstreamdtv.\n__0oHistreamrsPc.\n__0oKistrstreamctPCc.\n__0oNIostream_initdtv.\n__0oNIostream_initctv.\n\n```\nLooking at these, I'm guessing that they correspond to the following methods:\n\n```\nistream::operator >>(unsigned long);\nistream::operator >>(int);\nistream::operator >>(float);\nistream::~istream();\nistream::operator >>(char *);\nistream::operator(const char *);\nostream_init::~ostream_init();\nostream_init::ostream_init();\n\n```\nTo make further progress, I want to understand the mangling scheme used here, but my Google-fu is too weak. Where can I find documentation on the name mangling scheme used here?\n\n",
  "votes": "5",
  "answers": 2,
  "views": "197",
  "tags": [
    "c++",
    "sparc",
    "name-mangling"
  ],
  "user": "John Källén",
  "time": "Sep 9, 2018 at 11:44",
  "comments": [
    {
      "user": "fpmurphy",
      "text": "No namespace support?  That has to be back in the Sun Workshop days.",
      "time": null
    },
    {
      "user": "John Källén",
      "text": "The binary is over 15 years old. I can make some guesses as to the mangling scheme (__0 prefix, H = symbol of 7 chars follows, etc) but it would be nice to have a reference. I've searched open source repositories hoping to find a demangler but haven't found one that understands this particular demangling scheme.",
      "time": null
    },
    {
      "user": "Igor Skochinsky",
      "text": "I wonder if someone on Retrocomputing can find the info...",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I found the following documentation on archive.org, as part of Sun WorkShop™ for Solaris 2.x\n\nmangling.ps\n\n",
      "votes": "2",
      "user": "Smx",
      "time": "Jun 4, 2020 at 22:18",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "You should be able to use c++filt directly. Pay attention to not use the one from binutils. Make sure to use the right install path, eg:\n\n",
      "votes": "2",
      "user": "tibar",
      "time": "Sep 10, 2018 at 7:54",
      "is_accepted": false,
      "comments": [
        {
          "user": "Igor Skochinsky",
          "text": "while this helps with the specific problem, it does not actually address the question as asked; are there any docs on the mangling scheme used?",
          "time": null
        },
        {
          "user": "tibar",
          "text": "@IgorSkochinsky That's an actual pretty good exercise to do then ! If OP has access to compiler, it should be possible to write the documentation (eg. itanium-cxx-abi.github.io/cxx-abi/abi.html#mangling)",
          "time": null
        }
      ]
    }
  ]
}