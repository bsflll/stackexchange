{
  "title": "Adding ltrace information to gdb",
  "link": "https://reverseengineering.stackexchange.com/questions/29540/adding-ltrace-information-to-gdb",
  "content": "I'd like to run gdb (or gdb-peda) with ltrace like info on each syscall.  How can I do that?\n\nI know that, as per ltrace and gdb attach to same process , you can't actually attach ltrace and gdb to the same process.  But, once a process is under gdb, it should be fairly straightforward to catch each lib call and print out its args and return vals, just like ltrace does.\n\nIn fact, it would be possible, and valuable, to go a step further: run gdb or gdb-peda, and print out every call (not just lib calls, with params and return val.  How can I do this?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "194",
  "tags": [
    "debugging",
    "gdb",
    "dynamic-analysis",
    "call",
    "trace"
  ],
  "user": "SRobertJames",
  "time": "Nov 13, 2021 at 4:22",
  "comments": [],
  "answers_data": [
    {
      "content": "If you really want to use GDB to do this, the best option may be scripting it via its Python API.\n\nExamples:\n\n",
      "votes": "1",
      "user": "julian",
      "time": "Nov 12, 2021 at 2:17",
      "is_accepted": false,
      "comments": []
    }
  ]
}