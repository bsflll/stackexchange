{
  "title": "Formatting output of objdump -sj .text filename.exe",
  "link": "https://reverseengineering.stackexchange.com/questions/12552/formatting-output-of-objdump-sj-text-filename-exe",
  "content": "I am hoping to get the contents of the .text section, of a Microsoft PE file using a linux command.  When I use\n\n```\nobjdump -sj .text filename.exe\n\n```\nthe output consists of the offset, in hexadecimal format, on the far left, followed by the content, in hexadecimal format, in the middle and a mixture of dots and ASCII characters on the right.  I don't know if the dots represent unprintable characters.\n\nIs there a way to adjust the format of the output?  Ideally, I am hoping to get the printable strings without the hexadecimal numbers.  I have looked through the objdump man page but could not see a way to do this.\n\n",
  "votes": "-1",
  "answers": 2,
  "views": "2k",
  "tags": [
    "linux",
    "pe"
  ],
  "user": "OtagoHarbour",
  "time": "Apr 28, 2016 at 18:18",
  "comments": [
    {
      "user": "Jason Geffner",
      "text": "Hi @otagoharbour, this question would likely be better asked on superuser.com",
      "time": null
    },
    {
      "user": "OtagoHarbour",
      "text": "I tried posting it there but the only appropriate tag they had was linux and maybe hexdump.  Thanks,",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Igor's answer is correct, but a bit short.\n\nFirst, get the size and file offset of the .text segment using objdump -h:\n\n```\n$ objdump -h /path/to/Windows/System32/calc.exe\n....\nIdx Name          Size      VMA               LMA               File off  Algn\n  0 .text         00060cc9  0000000100001000  0000000100001000  00000600  2**4\n                  CONTENTS, ALLOC, LOAD, READONLY, CODE\n  1 .rdata        00010ec4  0000000100062000  0000000100062000  00061400  2**4\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n\n```\nNow you know the text section starts at 0x600 and ends at 0x61400.\n\nThen, use strings and have it print the file offsets:\n\n```\n$ strings -a -t x -e l  /path/to/Windows/System32/calc.exe\n  620e0 Edit\n  62128 Button\n  62138 SysDateTimePick32\n  62160 ComboBox\n  ...\n\n```\nIn this particular file, as you see, there are no strings in the text segment; the first string (Edit) is already in the .rdata section. With most versions of strings, you don't need the -a, and you can select the character encoding with -e, 16 bit little endian in this case. See the manual page for other encodings.\n\nYou can use some of the Linux text utilities to further postprocess the output, but as @JasonGeffner said, superuser.com is a better place to ask about them.\n\n",
      "votes": "1",
      "user": "Guntram Blohm",
      "time": "Apr 28, 2016 at 23:04",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "If you want just printable strings from the binary, a better tool is the strings command. \n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Apr 28, 2016 at 18:55",
      "is_accepted": false,
      "comments": [
        {
          "user": "OtagoHarbour",
          "text": "I don't think strings can specifically select the .text section from a PE file.  What would be ideal, as output, would be the individual bytes in extended ASCII format.  Thanks,",
          "time": null
        }
      ]
    }
  ]
}