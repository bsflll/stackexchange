{
  "title": "How to hook to a system function",
  "link": "https://reverseengineering.stackexchange.com/questions/29707/how-to-hook-to-a-system-function",
  "content": "How to hook to external library function, such as OpenGL for example.\n\nI have a function used by the program I am trying to change behaviour of. The function is:\n\n```\nlVar17 = glfwCreateWindow(uVar22,uVar25,pplVar29,uVar30,0);\n\n```\nNow, I want to change that function without changing the caller function. I.e. the caller function and the call above will remain exactly the same, but the glfwCreateWindow will return something different, i.e. it will be re-written like this:\n\n```\nglfwCreateWindow (uVar22,uVar25,pplVar29,uVar30,0) {\n\n    GLFWwindow* window = glfwCreateWindow(uVar22,uVar25,pplVar29,uVar30,0);\n    HWND hwnd = FindWindow(NULL, WindowName);\n    GLFWwindow* atchdHwd = glfwAttachWin32Window(hwnd, window); \n    return atchdHwd;\n}\n\n```\nAny way of doing this?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "524",
  "tags": [
    "c++",
    "dll",
    "function-hooking",
    "dll-injection"
  ],
  "user": "Irbis77",
  "time": "Dec 11, 2021 at 15:42",
  "comments": [],
  "answers_data": [
    {
      "content": "Two possibilities:\n\n",
      "votes": "4",
      "user": "Rolf Rolles",
      "time": "Dec 11, 2021 at 19:41",
      "is_accepted": true,
      "comments": []
    }
  ]
}