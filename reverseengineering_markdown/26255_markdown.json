{
  "title": "How to turn .pyd files generated by pyinstaller into source?",
  "link": "https://reverseengineering.stackexchange.com/questions/26255/how-to-turn-pyd-files-generated-by-pyinstaller-into-source",
  "content": "I have decompiled a pyinstaller exe and then decompiled the .pyc source inside it. only problem is the source is this\n\n```\nimport secretmodule\nsecretmodule.main()\n\n```\nAnnoying, I know. i found secretmodule but it is a .pyd and the decompiler I use only decompiles pyo or pyc. I searched how to decompile a pyd but it said it was almost impossible and I assumed pyinstaller makes pyd's differently so I continued.\n\nHow do I decompile a pyd file made specifically by pyinstaller\n\n",
  "votes": "1",
  "answers": 1,
  "views": "17k",
  "tags": [
    "python"
  ],
  "user": "user14118720",
  "time": "Nov 5, 2020 at 20:20",
  "comments": [],
  "answers_data": [
    {
      "content": "This could prove to be much harder than converting pyc to equivalent python code\n\nAccording to python docs\n\nSo you now have to reverse the native code in the pyd file assuming its a DLL and start from the exports.\n\n",
      "votes": "2",
      "user": "sudhackar",
      "time": "Nov 11, 2020 at 11:30",
      "is_accepted": false,
      "comments": [
        {
          "user": "not2qubit",
          "text": "Here is another interesting answer. Not sure what he suggests though.",
          "time": null
        }
      ]
    }
  ]
}