{
  "title": "Compiling plugins for use with IDA 5.0 free?",
  "link": "https://reverseengineering.stackexchange.com/questions/8084/compiling-plugins-for-use-with-ida-5-0-free",
  "content": "Is there a tutorial somewhere on how to make plugins work with IDA 5.0 free?\n\nPlugins built against the normal SDK libs don't work because the WLL of free IDA exports everything by ordinal and not by name. I wrangled with Microsoft's LIB tool to make a suitable import lib from a .def file for a few functions but now IDA says 'not IDA DLL file'...\n\nAlso, is there a .DEF file or a VC++ import lib for IDA 5.0 free?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "2k",
  "tags": [
    "ida",
    "ida-plugin",
    "idapro-sdk"
  ],
  "user": "DarthGizka",
  "time": "Jan 23, 2015 at 14:17",
  "comments": [
    {
      "user": "DarthGizka",
      "text": "Would the people who keep voting down this question please indicate what the problem is that they're having with it? I have done due diligence by Googling high and wide, and the question is clearly on topic (both because IDA is the reversing tool par excellence, and because reverse engineering is required to build plugins for free IDA).",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I found the reason why the plugin didn't work: the PLUGIN symbol wasn't exported from the dll (.plw). \n\nIn headers prior to version 5.1 the symbol isn't declared __declspec(dllexport), meaning it has to be exported via a .DEF file or a workaround has to be used so that the symbol definition can be made __declspec(dllexport) despite the wrong declaration in the header:\n\n```\n#define PLUGIN  sCaPeGoAt_PLUGIN\n#include \"loader.hpp\"             // plugin_t, PLUGIN_KEEP etc.\n#undef  PLUGIN\n\nextern \"C\"                        \n__declspec(dllexport)\nplugin_t PLUGIN = \n{\n   IDP_INTERFACE_VERSION,\n   ...\n};\n\n```\nWith the scapegoat soaking up the wrong declaration, VC++ accepts the __declspec(dllexport) on the definition and compiles it. Now the plugin works perfectly fine in IDA 5.0 free... Without the fix, the build stops with the following message:\n\n```\nerror C2370: 'PLUGIN' : redefinition; different storage class\n\n```\nThe problem of obtaining a decent .DEF or .LIB still remains, though. Reversing the WLL to identify the functions behind the ordinals is a bit cumbersome and slow going... There are plugins for IDA free around, so the libs must be out there somewhere (unless they were got under a gag agreement).\n\nUPDATE: for VC++ there's a much easier way to accomplish the same thing, without evil macro trickery:\n\n```\n#pragma comment (linker, \"/export:PLUGIN=_PLUGIN\")\n\n```\nor simply\n\n```\n#pragma comment (linker, \"/export:_PLUGIN\")\n\n```\nsince the leading underscore seems to get stripped automatically.\n\n",
      "votes": "3",
      "user": "DarthGizka",
      "time": "Jan 24, 2015 at 9:10",
      "is_accepted": false,
      "comments": []
    }
  ]
}