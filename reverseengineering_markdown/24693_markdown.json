{
  "title": "Windows or Linux x86 Scheduler instructions",
  "link": "https://reverseengineering.stackexchange.com/questions/24693/windows-or-linux-x86-scheduler-instructions",
  "content": "I want to understand how multi process scheduler works on x86 CPU with Linux or Windows kernels.\n\nI have read there is a kind of \"timer\" inside CPU. This timer gives \"time slices\" to each process.\n\nWhat i want to understand is what really happens when a time slice is finished. Does an interrupt fire ? or something else ? I suppose kernel code is runned between 2 slices but how...\n\nThanks\n\n",
  "votes": "1",
  "answers": 0,
  "views": "138",
  "tags": [
    "kernel-mode",
    "kernel"
  ],
  "user": "Bob5421",
  "time": "Apr 12, 2020 at 16:45",
  "comments": [
    {
      "user": "bart1e",
      "text": "Yes, the interrupt happens and the process context is saved, the next process' context is loaded and that second process is run. See this question.",
      "time": null
    },
    {
      "user": "macro_controller",
      "text": "@bart1e it's on a thread level, not process",
      "time": null
    },
    {
      "user": "Bob5421",
      "text": "@macro_controller: Do you mean this is not the same thing for process and threads ?",
      "time": null
    },
    {
      "user": "macro_controller",
      "text": "@Bob5421I mean that the actual entities that are being scheduled are threads, not processes",
      "time": null
    }
  ],
  "answers_data": []
}