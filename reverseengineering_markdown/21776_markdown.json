{
  "title": "unpacking Download.img firmware for alcatel mw40",
  "link": "https://reverseengineering.stackexchange.com/questions/21776/unpacking-download-img-firmware-for-alcatel-mw40",
  "content": "Hello i'm trying to unpack file Download.img from alcatel mw40 (based on qualcomm 9x07) firmware but it seems i can't do it with 7zip or mount the img file . someone already extracted the file which will give partition images like this : \n\n```\nappsboot_fastboot.mbn\nappsboot.mbn\nb.vhd\nconfig.xml\ncustom_info.xml\nefs.mbn\nENPRG9x07.mbn\njrdresource.ubi\nmdm9607-boot.img\nmdm9607-sysfs.ubi\nNON-HLOS.ubi\nNPRG9x07.mbn\npartition.mbn\nrpm.mbn\nsbl1.mbn\ntz.mbn\n\n```\nunder linux the format of the file is : \n\n```\nfile Download.img \nDownload.img: dBase III DBT, version number 0, next free block index 65545, 1st item \"D\\343\\006\"\n\n```\nanyone can show how to unpack this file to get the list of mentioned files above\nthanks for help , i'm trying to learn how.\nfile link  Download.img\n\n",
  "votes": "2",
  "answers": 1,
  "views": "2k",
  "tags": [
    "firmware",
    "unpacking"
  ],
  "user": "coolirc",
  "time": "Jul 26, 2019 at 21:27",
  "comments": [
    {
      "user": "Martin",
      "text": "Can You help please? I have same problem I use command C:\\Python27\\python.exe code.py Download.img but I get error: IOError: [Errno 2] No such file or directory: \"('Download.img.out/', u'NPRG9x07.mbn')wb\" any one can suggest what I'm doing wrong? NPRG9x07.mbn it's one of the files but somehow is not extracting anything. Thanks in advance",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The file format consists of a file table starting at 0xC8 with each entry being:\n\nWhere position indicates the position in the archive and size the archived file's size.\n\nRun code.py Download.img to extract the files and place them into Download.img.out/:\n\n```\nfrom __future__ import print_function\nimport os\nimport sys\nimport struct\n\nif len(sys.argv) <= 1:\n    print('usage: {} file'.format(sys.argv[0]))\n    exit(1)\n\npath = '{}.out/'.format(sys.argv[1])\n\nif not os.path.exists(path):\n    os.makedirs(path)\n\nwith open(sys.argv[1], 'rb') as f:\n    i = 0\n    while True:\n        f.seek(0xC8 + i*0x50)\n        name = f.read(0x48).decode('ascii').split('\\x00')[0]\n        if (len(name) == 0): break\n        if struct.calcsize('II') == 0x08:\n            v = struct.unpack('II', f.read(0x08))\n        elif struct.calcsize('LL') == 0x08:\n            v = struct.unpack('LL', f.read(0x08))\n        else:\n            print(\"Unsupported platform\")\n            exit(1)\n        f.seek(v[0])\n        out = open('{}{}'.format((path, name), 'wb'))\n        out.write(f.read(v[1]))\n        out.close()\n        i += 1\n    f.close()\n\n```\n",
      "votes": "4",
      "user": "ljrk",
      "time": "Nov 29, 2019 at 20:02",
      "is_accepted": true,
      "comments": [
        {
          "user": "coolirc",
          "text": "Hi Thanks for your answer , i'm getting this error :  python code.py Download.img Traceback (most recent call last):   File \"code.py\", line 20, in <module>     v = struct.unpack('LL', f.read(0x08)) struct.error: unpack requires a string argument of length 16",
          "time": null
        },
        {
          "user": "coolirc",
          "text": "also if i add a print(f) right after name = ... and after v = struct.unpack  i get same value : the output of print(f) is same twice  <open file 'Download.img', mode 'rb' at 0x7fda9c519780> <open file 'Download.img', mode 'rb' at 0x7fda9c519780>",
          "time": null
        },
        {
          "user": "coolirc",
          "text": "Thanks actually i tried the script on a windows machine with python version 2.7 and this script actually worked as expected , i don't know why it did not work on linux ubuntu machine , maybe the python version is not compatible i'll look for it later . thanks",
          "time": null
        },
        {
          "user": "RoyalPanda",
          "text": "Doesn't work because of parenthesis in the out=open. Here is the good one : out = open('{}{}'.format(path, name), 'wb')",
          "time": null
        },
        {
          "user": "AtomX",
          "text": "Does this also works for Alcatel MW40V?",
          "time": null
        }
      ]
    }
  ]
}