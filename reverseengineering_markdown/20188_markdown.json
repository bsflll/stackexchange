{
  "title": "Explenation about opcode and operand",
  "link": "https://reverseengineering.stackexchange.com/questions/20188/explenation-about-opcode-and-operand",
  "content": "I need an explanation about the term \"opcode\". I have found this : \n\nIf I understand correctly the definition, for instance :\n\n```\n6A 03  push 3\n\n```\n6A is the opcode et 03 the operand. But in several posts on different forums, people talk about 03 as if it was an opcode (for instance this \n\n).\n\nDoes 03 is an opcode and an operand? \n\n",
  "votes": "1",
  "answers": 1,
  "views": "582",
  "tags": [
    "assembly"
  ],
  "user": "Valala",
  "time": "Dec 24, 2018 at 13:48",
  "comments": [
    {
      "user": "0xec",
      "text": "An instruction is composed of many parts which are not necessarily byte sized.",
      "time": null
    },
    {
      "user": "0xec",
      "text": "To reduce confusion, it's better to refer 6A 03 as the instruction with opcode and operand being 6A and 03 respectively. The mnemonic would be push 3.",
      "time": null
    },
    {
      "user": "Jongware",
      "text": "Compare 0xCC INT 3 â€“ an opcode and its operand, in a single byte.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Regarding this specific push and according to the Intel SDM (Page can be identified by searching Vol. 2B 4-507) 03 is both a part of the opcode and the \"argument\". The full opcode of \"push 03\" is \"6A 03\"\n\nAs far as I know Intel SDM consistently uses the term opcode as \"all the content of the assembly command, including operands\".\n  \n\n",
      "votes": "1",
      "user": "w s",
      "time": "Dec 24, 2018 at 14:27",
      "is_accepted": false,
      "comments": []
    }
  ]
}