{
  "title": "In Pintool, How to find the name of an routine's caller?",
  "link": "https://reverseengineering.stackexchange.com/questions/31869/in-pintool-how-to-find-the-name-of-an-routines-caller",
  "content": "I want to trace the mutex variables in my rust program(e.g. which mutex called lock() and unlock() methods). And I think there're static methods.\n\n",
  "votes": "2",
  "answers": 1,
  "views": "80",
  "tags": [
    "dynamic-analysis",
    "instrumentation",
    "pintool",
    "multi-process"
  ],
  "user": "roo jack",
  "time": "May 15, 2023 at 2:28",
  "comments": [
    {
      "user": "sudhackar",
      "text": "Why not instrument every call instruction and see if the call target is your function of choice?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "In instruction instrumentation function, you can check if the instruction is indeed a call instruction. Something like -\n\n```\nif (INS_IsCall(ins))\n    {\n        if (INS_IsDirectCall(ins))\n        {\n\n```\nThen get the name of the routine:\n\n```\nif (RTN_FindNameByAddress(INS_DirectBranchOrCallTargetAddress(ins)) \n== \"yourfavouritefun\")\ndo something;\n        }\n}\n\n\n```\nAnd you can obviously log the caller.\n\n```\nVOID Instruction(INS ins, VOID *v) {\nADDRINT insaddress = INS_Address(ins);\nif (RTN_FindNameByAddress(insaddress))\n  do something more;\n....\n\n```\n",
      "votes": "1",
      "user": "R4444",
      "time": "May 16, 2023 at 5:08",
      "is_accepted": false,
      "comments": [
        {
          "user": "roo jack",
          "text": "So how to find the callers of instruction (i.e., how to distinguish different callers of the same instruction)?",
          "time": null
        }
      ]
    }
  ]
}