{
  "title": "Run a python command with \"run\" on GDB",
  "link": "https://reverseengineering.stackexchange.com/questions/18552/run-a-python-command-with-run-on-gdb",
  "content": "Hi I'd like to run a python command python -c 'print \"\\x90\"*52' when the program start in GDB, as I would do when I execute : python -c 'print \"\\x90\"*52' | ./myProg . Does anyone knows any way to acheive this?\n\nWhat I've tried so far : \n\n\nI really apologies if I'm not asking on the right StackExchange forum. Thanks.\n\nhere is a useful link I found talking about input payloads redirection : Managing inputs for payload injection?\n\n",
  "votes": "6",
  "answers": 2,
  "views": "18k",
  "tags": [
    "gdb",
    "python"
  ],
  "user": "Nark",
  "time": "Oct 31, 2019 at 13:31",
  "comments": [
    {
      "user": "user22970",
      "text": "i ususally save the output to a file and execute \"r < /file\"",
      "time": null
    },
    {
      "user": "Nark",
      "text": "@Amirag I just tried this. Looks like it work just fine, thanks a lot ! Please create an answer on this topic so I can mark this topic as \"answered\".",
      "time": null
    },
    {
      "user": "perror",
      "text": "See this answer.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "You do not have to use another file, it is just redundant\n\nYou can do this by using \"Here strings\". \nIn your example you can do :\n\n```\nr <<< $(python -c \"print '\\x90'*52\")\n\n```\nYou can read about \"Here strings\" here\n\n",
      "votes": "10",
      "user": "yehuda corsia",
      "time": "Feb 9, 2019 at 22:22",
      "is_accepted": true,
      "comments": [
        {
          "user": "NirIzr",
          "text": "Although this answer does provide a solution, I would love seeing an edit that takes us through the anwer and actually explain it. Naturally, there's no need to explain the python command itself. Thanks!",
          "time": null
        }
      ]
    },
    {
      "content": "I don't know of any way to run a script as a run argument.\nA common solution is to redirect your input from a file.\n\nYou first need to run the script and save the result:\n\n```\npython -c \"print 'A'*50\" > my_file\n\n```\nand redirect it to gdb run.  \n\n```\nr < my_file\n\n```\nalso, from the help run command:\n\nwhich means you can also redirect output if needed.\n\n",
      "votes": "7",
      "user": null,
      "time": "Jun 18, 2018 at 22:42",
      "is_accepted": false,
      "comments": []
    }
  ]
}