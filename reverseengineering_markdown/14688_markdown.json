{
  "title": "Add new subroutine using IDA for ARM binary",
  "link": "https://reverseengineering.stackexchange.com/questions/14688/add-new-subroutine-using-ida-for-arm-binary",
  "content": "I am trying to recreate a patch for an ARM binary. As it shows in attached picture, I have provided the before and after sections of file. In patched file, a new subroutine is added in a cave, and then it branches to an existing subroutine that has changed to an instruction.\n\nMy question is, how do you recreate such a patch? I know how to edit bytes in IDA, but not sure how to add new ones.\n\n\n\n",
  "votes": "0",
  "answers": 2,
  "views": "1k",
  "tags": [
    "ida",
    "disassembly",
    "arm",
    "ios",
    "function-hooking"
  ],
  "user": "abuhun",
  "time": "Feb 18, 2017 at 11:04",
  "comments": [],
  "answers_data": [
    {
      "content": "I realized this is done first by determining a code cave. Afterwards, just patch the binary using an application like Hex Fiend. The rest will show in IDA\n\n",
      "votes": "0",
      "user": "abuhun",
      "time": "Feb 26, 2017 at 14:16",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "You can perform the task you're looking for using either one of the following approaches:\n\n",
      "votes": "0",
      "user": "Michael Kiros",
      "time": "Feb 27, 2017 at 20:35",
      "is_accepted": false,
      "comments": []
    }
  ]
}