{
  "title": "is it possible to get code out of chipset through reverse engineering?",
  "link": "https://reverseengineering.stackexchange.com/questions/29168/is-it-possible-to-get-code-out-of-chipset-through-reverse-engineering",
  "content": "for example, encryption/decryption mechanism was inbuilt in a chip, to get the code that performs this mechanisms, is there some ways you can get this code through reverse engineering? what tools and techniques do I need to do this?\n\n",
  "votes": "0",
  "answers": 0,
  "views": "68",
  "tags": [
    "debugging",
    "hardware",
    "encryption",
    "decryption",
    "software-security"
  ],
  "user": "hanan",
  "time": "Aug 21, 2021 at 8:25",
  "comments": [
    {
      "user": "Igor Skochinsky",
      "text": "What kind of chip are we talking about?",
      "time": null
    },
    {
      "user": "hanan",
      "text": "for those that are embedded in the devices? like smart cameras, and so on",
      "time": null
    },
    {
      "user": "Robert",
      "text": "Some people has reversed engineered chips by abrade the chip micrometer by micrometer and made a photo of each \"layer\" using a microscope. Then they have used some tools to identify the structures and what logical elements that may be and how they are connected.",
      "time": null
    },
    {
      "user": "hanan",
      "text": "@Robert, well I see that info. In my day long research, I learnt that I had to take apart the device and find JTAG and so on and then dump firmware and other code but I still feel some stuck and I posted another question if both of you could help me about this. Here is the question link : reverseengineering.stackexchange.com/questions/29171/â€¦",
      "time": null
    },
    {
      "user": "mumbel",
      "text": "I'd say it depends on your level of access and known things about (previous firmware dumps or does it load other bins, if so do other versions vary in which code is located on chip or bin).  For example I had firmware from a previous device, it would print register context on crashes, I was able to find an exploit from the first to exploit the second, eventually dumping all memory through the crash info by repeating",
      "time": null
    }
  ],
  "answers_data": []
}