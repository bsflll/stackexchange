{
  "title": "How to load a library at a specific address in IDA and re-analyze the program statically?",
  "link": "https://reverseengineering.stackexchange.com/questions/22686/how-to-load-a-library-at-a-specific-address-in-ida-and-re-analyze-the-program-st",
  "content": "I have a dumped PE that has calls like\n\n```\ncall    ds:dword_4010B4\n\n```\nnow these are actually addresses of APIs in kernel32.dll\n\nmy problem is IDA doesn't know that these are kernel32 APIs and therefore in the decompiler all i see is stuff like \n\n```\nMEMORY[address](&v1, \"explorer.exe %s\", &v2);\n\n```\nwhich are API calls without names\n\nso how can i sync these API calls with their actual names? is there any way i can tell IDA that for example kernel32.dll is loaded at address x so it can therefore load it there statically or  dynamically and resolve these names ? \n\n",
  "votes": "1",
  "answers": 0,
  "views": "376",
  "tags": [
    "ida",
    "debugging",
    "idapython",
    "unpacking",
    "ida-plugin"
  ],
  "user": "OneAndOnly",
  "time": "Dec 7, 2019 at 16:25",
  "comments": [
    {
      "user": "Biswapriyo",
      "text": "Does that dumped PE resolves that called function at runtime? If yes look for any GetProcAddress. Then attach a debugger, set a breakpoint there and investigate...",
      "time": null
    }
  ],
  "answers_data": []
}