{
  "title": "Java reverse engineering tool [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/22110/java-reverse-engineering-tool",
  "content": "I'm getting started on Java reverse engineering but I can't find a great tool. I'm currently using JD-Gui to decompile it.\n\nI've tried PNF's JEB which is really perfect but it's only for Android stuff. Is there anything similar for standard Java ? Preferably free because JEB costs a lot for someone who doesn't use it a lot...\n\nSome features I'd like would be decompilation of course but also class / variable renaming, find usage, and standard features you could find in IDEs..\n\n",
  "votes": "2",
  "answers": 2,
  "views": "2k",
  "tags": [
    "decompilation",
    "java",
    "byte-code"
  ],
  "user": "Nathan J",
  "time": "5 years ago",
  "comments": [],
  "answers_data": [
    {
      "content": "I develop Recaf, a free Java bytecode editor. Recaf currently supports most of what you're looking for in the current release (Decompile via CFR, class/member renaming, a verbose search feature, and contextual actions on the decompiled code). Right now it's going through a rewrite which will include even more of the features you're looking for. \n\nIf you have any questions / feedback I'd appreciate if you'd check out the project.\n\nAlso if you're reverse engineering obfuscated samples check out Java-Deobfuscator. \n\n",
      "votes": "3",
      "user": "Col-E",
      "time": "Sep 14, 2019 at 3:04",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "The Bytecode viewer is a great tool because it has different decompiler that you can try to use.\n\nhttps://bytecodeviewer.com/\n\n",
      "votes": "1",
      "user": "ismael_akez",
      "time": "Sep 12, 2019 at 20:15",
      "is_accepted": false,
      "comments": []
    }
  ]
}