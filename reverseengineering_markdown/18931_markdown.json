{
  "title": "What is the difference between xrefs and stack trace?",
  "link": "https://reverseengineering.stackexchange.com/questions/18931/what-is-the-difference-between-xrefs-and-stack-trace",
  "content": "In IDA, I can see what calls a specific function by looking at the xrefs to it, or by looking 1 step back on stack trace.\n\nWhat are the differences between them?\n\nHow does IDA know what the stack trace is? And how does IDA know what the xrefs to a specific function are?\n\n",
  "votes": "0",
  "answers": 1,
  "views": "95",
  "tags": [
    "ida",
    "functions",
    "stack",
    "callstack",
    "call"
  ],
  "user": "Jonert6544",
  "time": "Jul 30, 2018 at 19:53",
  "comments": [],
  "answers_data": [
    {
      "content": "x-refs is just a static cross-reference in the binary that can be identified during static-analysis. \n\nSo if you main call funcA you could tell that by looking at x-refs on funcA. But you can't be sure that it will be in fact called during runtime - there might be some conditional jumps that only call funcA in a certain state.\n\nStacktrace presents the actual calls at a given point so it's dynamic and might change after another instruction execution.\n\nStack trace information is gathered by looking at EBP on the stack ref. x-refs are done by analyzing the binary.\n\n",
      "votes": "2",
      "user": "Paweł Łukasik",
      "time": "Jul 30, 2018 at 19:57",
      "is_accepted": false,
      "comments": []
    }
  ]
}