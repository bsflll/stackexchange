{
  "title": "How to reverse engineer simple usb device [windows -> linux]",
  "link": "https://reverseengineering.stackexchange.com/questions/2416/how-to-reverse-engineer-simple-usb-device-windows-linux",
  "content": "I'd like to reverse engineer my usb beer-can refrigurator, which does connect via USB on windows and via simple GUI tray-tool can set/query temperature.\n\nI was thinking about running virtualboxed driver and capturing usb communications via wireshark and usbmon interface.\n\nAnyone know of handy guide/tools that would help me reverse engineer this and possibly write simple userspace tool / driver?\n\n",
  "votes": "23",
  "answers": 2,
  "views": "15k",
  "tags": [
    "windows",
    "linux",
    "usb"
  ],
  "user": "AoeAoe",
  "time": "Jul 6, 2013 at 0:14",
  "comments": [
    {
      "user": "Jason Geffner",
      "text": "It's not quite the same as your question, but you may want to look at reverseengineering.stackexchange.com/questions/1786/â€¦",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "VMWare can capture USB traffic between the device and the VM. A VMWare engineer even made an open-source tool for analyzing and visualizing USB logs - Virtual USB analyzer.\n\n\n\nAlternatively, a tool for converting VMWare logs to .pcap for analyzing in Wireshark is available from Sogeti.\n\n",
      "votes": "28",
      "user": "Igor Skochinsky",
      "time": "Jul 6, 2013 at 1:51",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Matt Cutts wrote a series of blog posts outlining the general approach of reverse-engineering a USB device and getting it working with linux, and explaining how he did this for a USB controlled toy missile launcher. You may find them a useful starting point.\n\n",
      "votes": "19",
      "user": "Jason Geffner",
      "time": "Jul 7, 2013 at 22:44",
      "is_accepted": false,
      "comments": []
    }
  ]
}