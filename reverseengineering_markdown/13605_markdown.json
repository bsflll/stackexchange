{
  "title": "Immunity Debugger - !mona suggest",
  "link": "https://reverseengineering.stackexchange.com/questions/13605/immunity-debugger-mona-suggest",
  "content": "I have been going through some tutorials for exploit development that use the !pvefindaddr command to help with creating unique patterns and discovering the offset.\n\nI know that mona has replaced pvefindaddr - but from what I can see in the examples I am following the !pvefindaddr suggest command gives you an exploit suggestion in perl, while !mona suggest basically writes you a metasploit module.\n\nI looked at the options with:\n\n!mona help suggest\n\nAnd there don't seem to be many options available. Is it possible to get suggest to offer you exploits written in any format other than a metasploit module? I couldn't seem to get pvefindaddr working in immunity - I'm assuming it doesn't really work anymore as mona has replaced it, so I wondered if mona had any flexibility?\n\nI tried asking this in security stack exchange and was pointed here!\n\n",
  "votes": "2",
  "answers": 1,
  "views": "2k",
  "tags": [
    "exploit",
    "immunity-debugger",
    "metasploit"
  ],
  "user": "user3046771",
  "time": "Sep 28, 2016 at 10:35",
  "comments": [],
  "answers_data": [
    {
      "content": "mona.py only supports automatically generating Metasplpoit modules. You can't get it to output the exploitation code in any other form.\n\nThis is probably partially because in order to function, the suggest command uses the findmsp command which requires a \"Metasploit pattern\" (hence the name \"find msp\"), a textual pattern that uses a sequence of characters in a way that never repeats the same 4 bytes offset, making it extremely easy to identify the offset of each part of the pattern. This pattern is extensively used in the Metasploit Framework to ease exploit development.\n\nThere are a few things you can do:\n\n",
      "votes": "3",
      "user": "NirIzr",
      "time": "Sep 28, 2016 at 10:32",
      "is_accepted": true,
      "comments": [
        {
          "user": "user3046771",
          "text": "Hey, thanks for the comprehensive answer! Tells me everything I need to know :-)",
          "time": null
        }
      ]
    }
  ]
}