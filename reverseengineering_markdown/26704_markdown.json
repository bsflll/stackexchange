{
  "title": "Assuming x is a number smaller than 0xff what happens to x after the assignment LOBYTE(x)=x-1?",
  "link": "https://reverseengineering.stackexchange.com/questions/26704/assuming-x-is-a-number-smaller-than-0xff-what-happens-to-x-after-the-assignment",
  "content": "I understand that LOBYTE is an IDA macro for retrieving the lower byte of a variable. My question is what is the difference between the result of x=x-1 and LOBYTE(x)=x-1 when x is smaller than or equal to 0xff? I should add that I'm implicitly assuming that x>0. Thank you!\n\n",
  "votes": "0",
  "answers": 1,
  "views": "118",
  "tags": [
    "ida",
    "assembly",
    "c"
  ],
  "user": "Newbie",
  "time": "Jan 4, 2021 at 23:16",
  "comments": [],
  "answers_data": [
    {
      "content": "```\nQuote From Link     \n#define LOBYTE(x)   (*((_BYTE*)&(x))) \n\n```\nis that a hypothetical query x is treated as address\nso x-1 will be a 32 bit type on a x86 machine so theoretically\nyou cannot assign a 32 bit type to an 8 bit type\nLOBYTE(x) will be a byte and not an address so again\ntheoretically you cannot assign a byte to a byte\n\nLOBYTE(x) is an AND operation that extracts the unsigned byte from a specific address\n\n```\nx as address    contents         LOBYTE(x)     (byte *)&x = LOBYTE(x)-1\n0x00400000      0xffffffff       0x000000ff    byte[0x004000000] = 0x000000ff -1 =0x000000fe\n\n```\nso if you look as a DWORD 0x400000 will now contain 0xfffffffe\n\ndemo using a python script\n\n```\n:\\>cat LOBYTE.py\nimport ctypes\n\ndef LOBYTE(arg):\n    return arg.value & 0x000000ff\n\nx = ctypes.c_ulong(0xffffffff)\nprint( \"x as address\" , ctypes.byref(x))\nprint( \"x holds\"  , hex(x.value))\nprint(\"result of LOBYTE(x)\", LOBYTE(x))\nx.value = ( (x.value & 0xffffff00 ) | LOBYTE(x)- 1 )\nprint( \"x holds\"  , hex(x.value))\n\n\n:\\>python LOBYTE.py\nx as address <cparam 'P' (017CA098)>\nx holds 0xffffffff\nresult of LOBYTE(x) 255\nx holds 0xfffffffe\n\n```\n",
      "votes": "1",
      "user": "blabb",
      "time": "Jan 5, 2021 at 17:02",
      "is_accepted": true,
      "comments": []
    }
  ]
}