{
  "title": "Program with no dependencies",
  "link": "https://reverseengineering.stackexchange.com/questions/2092/program-with-no-dependencies",
  "content": "while reading the answers to Can I statically link (not import) the Windows system DLLs? I came up with another question. So: \n\nDuring run-time, I mean using the PEB structure.\n\n",
  "votes": "7",
  "answers": 4,
  "views": "2k",
  "tags": [
    "windows",
    "malware",
    "development",
    "winapi"
  ],
  "user": "PhoeniX",
  "time": "Apr 13, 2017 at 12:49",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "Keep in mind that the rules about kernel32.dll only apply to the NT platform. Not that I expect anyone to still use 9x/Me, but just in case ;)",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "If you're asking about PE files, and by \"no dependencies\" you mean \"no statically imported DLLs\", then yes.\n\nSee \\yoda\\NoImports.exe in https://corkami.googlecode.com/files/BinaryCorpus_v2.zip as an example.\n\n",
      "votes": "9",
      "user": "Jason Geffner",
      "time": "May 24, 2013 at 22:22",
      "is_accepted": true,
      "comments": [
        {
          "user": "PhoeniX",
          "text": "Thanks, this is nice and interesting solution and he indeed assumes that the stack has return address into somewhere in kernel32 space (which he explored here) and from there the way is \"straightforward\" :)",
          "time": null
        },
        {
          "user": "peter ferrie",
          "text": "the more common way these days to resolve the base address of kernel32.dll is to walk the InMemoryOrderModuleList list, since the DLL order hasn't changed even in Windows 7.  Technically, you don't need to resolve anything but GetProcAddress(), if you have an export table, because you can use forwarded references to the DLLs of interest, and GetProcAddress() on your own exports will cause Windows to load the DLLs for you.",
          "time": null
        }
      ]
    },
    {
      "content": "This isn't a very portable trick, but kernel32.dll is always loaded at the same address when the executable is launched, that means LoadLibraryA and GetProcAddress are always at the same address. You could hard-code those offsets and go from there.\n\n",
      "votes": "3",
      "user": "Avery3R",
      "time": "May 24, 2013 at 22:02",
      "is_accepted": false,
      "comments": [
        {
          "user": "PhoeniX",
          "text": "So, kernel32.dll will be always loaded into the processes event if the PE image does not reference it anywhere in the code?",
          "time": null
        },
        {
          "user": "Avery3R",
          "text": "@ph0sec yep, the windows loader always loads in kernel32.dll as well, and always at the same address.",
          "time": null
        },
        {
          "user": "PhoeniX",
          "text": "@MMavipc regarding the same address is not always right as in the Vista and Win 7 family, the ASLR was introduced to brake this assumption.",
          "time": null
        },
        {
          "user": "peter ferrie",
          "text": "@MMavipc that behavior was introduced in Windows XP, to avoid the crashing problem when a process did not import from kernel32.dll, and so it was not loaded explicitly.@ph0sec that's not exactly correct, either - ASLR applies only to the first time that kernel32.dll (and ntdll.dll, too) is loaded.  After that, it is at a common address across all processes.",
          "time": null
        },
        {
          "user": "PhoeniX",
          "text": "@peter ferrie of cause as it is loaded only once and mapped to other processes after that. The thing I was referring here is that you cannot (should not) hard code the kernel32.dll base address into the executable itself.",
          "time": null
        }
      ]
    },
    {
      "content": "Yes, a program that has no dependencies is possible. \n\nTo imports APi, it needs first to locate kernel32 (via stack+MZ scanning, or PEB) then locate exports (via exports parsing or hard-coded values).\n\n",
      "votes": "2",
      "user": "Ange",
      "time": "May 25, 2013 at 16:33",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Yes.  \n\n",
      "votes": "2",
      "user": "perror",
      "time": "May 26, 2013 at 8:18",
      "is_accepted": false,
      "comments": []
    }
  ]
}