{
  "title": "Given a heap address, can gdb show which function allocated the heap at this address?",
  "link": "https://reverseengineering.stackexchange.com/questions/14855/given-a-heap-address-can-gdb-show-which-function-allocated-the-heap-at-this-add",
  "content": "In windbg, we can use \"!heap -p -a [address]\" to show the stacktrace when the heap was allocated.\n\nIn gdb, especially for kernel debugging, there is any way to achieve the same thing in linux?\n\n",
  "votes": "0",
  "answers": 1,
  "views": "792",
  "tags": [
    "gdb"
  ],
  "user": "pchgtls",
  "time": "Mar 8, 2017 at 17:18",
  "comments": [
    {
      "user": "Kerim Can Kalıpcıoğlu",
      "text": "I really looked hard to find what you want but, i couldn't find any close thing to your question. I don't know how WinDBG support that feature, maybe because Windows NT specific kernel structure. Edit: I saw Igor's answer now. You must find another way.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "AFAIK Windbg relies on the user-mode stack trace database provided by the kernel/ntdll. I think there is nothing similar built-in into Linux, but you can try some third-party tools, e.g. heaptrack\n\n",
      "votes": "0",
      "user": "Igor Skochinsky",
      "time": "Mar 9, 2017 at 12:44",
      "is_accepted": true,
      "comments": []
    }
  ]
}