{
  "title": "Adding my own logging function in Smali",
  "link": "https://reverseengineering.stackexchange.com/questions/23046/adding-my-own-logging-function-in-smali",
  "content": "I am trying to logcat the parameters of a function in smali with my own function. I made a new Android studio project and wrote the function then used APKtool to retrieve the Smali file.\n\nThis is my function:\n\n```\n.method public userFunction(II)V\n    .locals 2\n    .param p1, \"a\"    # I\n    .param p2, \"b\"    # I\n\n    .line 28\n    invoke-static {p1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;\n\n    move-result-object v0\n\n    const-string v1, \"Message\"\n\n    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n\n    return-void\n.end method\n\n```\nAs you can see, it takes two integers and then logs one (forget for now that the other integer is unused).\n\nThis is the Android studio code I used to write the above function in Java.\n\n```\n    public void sendMessage(View view)\n    {\n        userFunction(3,2);\n    }\n\n    public void userFunction(int a, int b)\n    {\n        Log.d(\"Message\", Integer.toString(a));\n    }\n\n```\nNow what I can't make sense of, is how to call this function in Smali. My problem may be that I am testing this within a button. The sendMessage is an Onclick method for testing purposes and all it does is perform the userfunction.\n\nMy reasoning behind this is that the method call in Smali ends up being\n\n```\ninvoke-virtual {p0, v0, v1}, Lcom/example/froggyfresh/MainActivity;->userFunction(II)V\n\n```\nFrom what I read, I believe the p0 to be the object calling the function. So I'm not sure how to call the function from within another method that is in the project I am trying to debug.\n\nIs there a work around for this, to create some generic function to log the values?\n\nThe issue I get when using p0 in the APK I am trying to debug is APKtool gives me this error:\n\nI know that the p0 is a parameter register and that the parameters are stored in the final v(insertnumberhere) register. So I can make sense of the error but not sure how to go about fixing the issue.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "3k",
  "tags": [
    "android"
  ],
  "user": "Kippet",
  "time": "Sep 28, 2020 at 15:32",
  "comments": [],
  "answers_data": [
    {
      "content": "Just make your helper method a static method, and invoke it using invoke-static\n\n```\ninvoke-static {v0, v1}, Lcom/example/froggyfresh/MainActivity;->userFunction(II)V\n\n```\nRegarding the register out of range thing, you would need to do some register value shuffling using the move instructions to get the values you need into the lower 16 registers.\n\ne.g., say that you have a register, v23 that is unused. You could move the value from one of the lower registers into v23, and then move the value of p0 into that lower register.\n\n```\nmove-object v2, v23\nmove-object p0, v2\n\n```\nand then after the call, you would need to shuffle the original value of v2 back\n\n```\nmove-object v23, v2\n\n```\n",
      "votes": "3",
      "user": "JesusFreke",
      "time": "Jan 18, 2020 at 20:10",
      "is_accepted": false,
      "comments": [
        {
          "user": "Kippet",
          "text": "Why are the 17-28th registers out of bounds?  I was going off what you wrote here: github.com/JesusFreke/smali/wiki/Registers  And from what I understand from what you wrote you make it seem like these registers can be referenced.",
          "time": null
        },
        {
          "user": "JesusFreke",
          "text": "Each instruction has a certain number of bits to encode each register. Different instructions have different numbers of bits. the non-range invoke instructions have 4 bits to encode each register. You can only encode from 0 to 15 with 4 bits. If you look at the instruction reference, it shows the number of bits allocated for each register in each instruction. (source.android.com/devices/tech/dalvik/dalvik-bytecode)",
          "time": null
        }
      ]
    }
  ]
}