{
  "title": "Sharing variable between scripts",
  "link": "https://reverseengineering.stackexchange.com/questions/27839/sharing-variable-between-scripts",
  "content": "I wrote some Python scripts to help me disassemble one given file (only one), and I'd like to share some variables between differents scripts (or between 2 different executions of the same script).\n\nIs there a way to do that with Ghidra, better than save shared variables in a temp file ?\n\n",
  "votes": "3",
  "answers": 1,
  "views": "304",
  "tags": [
    "ghidra",
    "python"
  ],
  "user": "T. Tournesol",
  "time": "Jun 13, 2021 at 21:11",
  "comments": [
    {
      "user": "T. Tournesol",
      "text": "May I know why this question was downvoted ?",
      "time": null
    },
    {
      "user": "Guillaume",
      "text": "I don't think that you can save things outside of your script's context. You either have to recalculate the variable's content that you want to share in your 2nd script, or to save them in a temp file (which is a bit ugly to be honest)",
      "time": null
    },
    {
      "user": "T. Tournesol",
      "text": "Thanks for the answer. Unfortunately, the first option is not really convenient here, so I'll go with a temp file.",
      "time": null
    },
    {
      "user": "Guillaume",
      "text": "I suggest that you use python pickle objects to save your data. You can serialize the variables that you want to save with pickle.dump() and deserialize them from the 2nd script with pickle.load()",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "if I understand the question correctly, then analyzeHeadless documentation will help you.\n\nAlso see:\n\nhttps://ghidra.re/ghidra_docs/analyzeHeadlessREADME.html#scripting_headlessScripts_multipleScripts\n\n",
      "votes": "4",
      "user": "R4444",
      "time": "Jun 14, 2021 at 14:23",
      "is_accepted": false,
      "comments": [
        {
          "user": "T. Tournesol",
          "text": "I read the documentation, and unfortunately it's unlikely it applies in my precise situation. So I went with JSON (I could have chosen Pickle) and for now, it works.",
          "time": null
        }
      ]
    }
  ]
}