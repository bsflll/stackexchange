{
  "title": "Is there a way to identify compression algorithm used in exe file?",
  "link": "https://reverseengineering.stackexchange.com/questions/23288/is-there-a-way-to-identify-compression-algorithm-used-in-exe-file",
  "content": "I'm trying to find a compression method used in executable file. I tried decompiling it with IDA Pro found a pseudocode of decompression but couldn't compile and use it in my program.\n\nHere's pseudocode:\n\n```\nchar __cdecl decompress(char *buffer, int a2 /* a2 argument is always 0x989680 */)\n{\n  unsigned __int8 v2; // al\n  unsigned __int8 v3; // al\n  unsigned __int8 v4; // al\n  unsigned __int8 v5; // al\n  FILE *v6; // eax\n  char *v7; // esi\n  int v8; // edi\n  char v9; // al\n  char v10; // bl\n  int v11; // ebx\n  int v12; // ebx\n  int v13; // ebx\n  int v14; // ebx\n  char v16; // [esp+12h] [ebp-Ah]\n  char v17; // [esp+13h] [ebp-9h]\n  int v18; // [esp+14h] [ebp-8h]\n  int v19; // [esp+14h] [ebp-8h]\n  int v20; // [esp+14h] [ebp-8h]\n  int v21; // [esp+14h] [ebp-8h]\n  int v22; // [esp+14h] [ebp-8h]\n  int v23; // [esp+18h] [ebp-4h]\n\n  --tempFile->_cnt;\n  v23 = 0;\n  if ( tempFile->_cnt < 0 )\n    v2 = _filbuf(tempFile);\n  else\n    v2 = *tempFile->_ptr++;\n  --tempFile->_cnt;\n  v18 = v2 << 24;\n  if ( tempFile->_cnt < 0 )\n    v3 = _filbuf(tempFile);\n  else\n    v3 = *tempFile->_ptr++;\n  --tempFile->_cnt;\n  v19 = (v3 << 16) + v18;\n  if ( tempFile->_cnt < 0 )\n    v4 = _filbuf(tempFile);\n  else\n    v4 = *tempFile->_ptr++;\n  --tempFile->_cnt;\n  v20 = (v4 << 8) + v19;\n  if ( tempFile->_cnt < 0 )\n    v5 = _filbuf(tempFile);\n  else\n    v5 = *tempFile->_ptr++;\n  v21 = v5 + v20;\n  if ( --tempFile->_cnt < 0 )\n    v17 = _filbuf(tempFile);\n  else\n    v17 = *tempFile->_ptr++;\n  --tempFile->_cnt;\n  LOBYTE(v6) = (_BYTE)tempFile;\n  if ( tempFile->_cnt < 0 )\n  {\n    LOBYTE(v6) = _filbuf(tempFile);\n    v16 = (char)v6;\n  }\n  else\n  {\n    v16 = *tempFile->_ptr++;\n  }\n  v22 = v21 - 10;\n  if ( v22 <= 0 )\n    return (char)v6;\n  v7 = buffer;\n  v8 = a2; // a2 used here\n  while ( 1 )\n  {\n    if ( !(v23 % 2000) )\n      sub_48F780(); // ignore this line\n    ++v23;\n    if ( --tempFile->_cnt < 0 )\n      v9 = _filbuf(tempFile);\n    else\n      v9 = *tempFile->_ptr++;\n    --v22;\n    v10 = v9;\n    v6 = (FILE *)(v9 & 0xC0);\n    if ( v6 == (FILE *)192 )\n    {\n      v11 = v10 & 0x3F;\n      if ( v11 >= 0 )\n      {\n        while ( 1 )\n        {\n          if ( --tempFile->_cnt < 0 )\n          {\n            LOBYTE(v6) = _filbuf(tempFile);\n            *v7 = (char)v6;\n          }\n          else\n          {\n            *v7 = *tempFile->_ptr;\n            v6 = tempFile;\n            ++v6->_ptr;\n          }\n          ++v7;\n          if ( !--v8 )\n            return (char)v6;\n          --v22;\n          if ( --v11 < 0 )\n            goto LABEL_50;\n        }\n      }\n      goto LABEL_50;\n    }\n    if ( v6 == (FILE *)128 )\n    {\n      v12 = v10 & 0x3F;\n      if ( v12 >= 0 )\n      {\n        while ( 1 )\n        {\n          LOBYTE(v6) = v16;\n          ++v7;\n          --v8;\n          *(v7 - 1) = v16;\n          if ( !v8 )\n            return (char)v6;\n          if ( --v12 < 0 )\n            goto LABEL_50;\n        }\n      }\n      goto LABEL_50;\n    }\n    if ( v6 != (FILE *)64 )\n      break;\n    v13 = v10 & 0x3F;\n    if ( v13 >= 0 )\n    {\n      do\n      {\n        LOBYTE(v6) = v17;\n        ++v7;\n        --v8;\n        *(v7 - 1) = v17;\n        if ( !v8 )\n          return (char)v6;\n      }\n      while ( --v13 >= 0 );\n    }\nLABEL_50:\n    if ( v22 <= 0 )\n      return (char)v6;\n  }\n  v14 = v10 & 0x3F;\n  if ( --tempFile->_cnt < 0 )\n    LOBYTE(v6) = _filbuf(tempFile);\n  else\n    LOBYTE(v6) = *tempFile->_ptr++;\n  --v22;\n  if ( v14 < 0 )\n    goto LABEL_50;\n  while ( 1 )\n  {\n    *v7++ = (char)v6;\n    if ( !--v8 )\n      return (char)v6;\n    if ( --v14 < 0 )\n      goto LABEL_50;\n  }\n}\n\n```\nAlso I tried signsrch, but it didn't really help. It says:\n\n```\n0055ad05 3051 compression algorithm seen in the game DreamKiller [32.be.12&]\n0055ad08 3050 compression algorithm seen in the game DreamKiller [32.le.12&]\n\n```\nIs there a way to compile this pseudocode and use it in my program?\n\nMaybe there's a tool that can determine algorithm by comparing input and output streams?\n\n",
  "votes": "1",
  "answers": 0,
  "views": "403",
  "tags": [
    "ida",
    "decompress"
  ],
  "user": "Ovidzikas",
  "time": "Apr 6, 2023 at 6:55",
  "comments": [
    {
      "user": "Robert",
      "text": "Why do you want't to compile the function? You already have the compiled version. Just load the executable in your self-developer program and call the existing function.",
      "time": null
    },
    {
      "user": "Ovidzikas",
      "text": "How can I do it? Is there a way to somehow export this function to DLL or whatever?",
      "time": null
    },
    {
      "user": "Robert",
      "text": "read Stackpoverflow, there are enough examples like this. Note sample assumes that the method is exported. As your question doe snot include any details I can't say if it is applicable or not in your case.",
      "time": null
    },
    {
      "user": "Ovidzikas",
      "text": "This method is not exported I wonder if I load the exe into memory as a byte array and call the function in that address will it work?",
      "time": null
    },
    {
      "user": "Avery3R",
      "text": "Unless it's position independent code you're going to have problems. I think you're better off getting the pseudocode to compile. What problems were you having with that?",
      "time": null
    }
  ],
  "answers_data": []
}