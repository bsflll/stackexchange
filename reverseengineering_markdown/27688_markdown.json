{
  "title": "Open unknown image format (probably a RAW image)",
  "link": "https://reverseengineering.stackexchange.com/questions/27688/open-unknown-image-format-probably-a-raw-image",
  "content": "I copy image files here from a linux based system which ends with .bin.\n\nUnfortunately I don't know how to open it. The goal is to convert images to this format later.\n\nWhat I have already tried:\n\nThis is how it looks on the device:\n\n\n\nI have uploaded the two files here.\n\nhttps://drive.google.com/file/d/1WXbuqT7B-_1OdHZjScmWMKHKxfEUzta7/view?usp=sharing https://drive.google.com/file/d/1YN_TbwWevuNQ3_Ha6MikOA_5JX8h1Pu1/view?usp=sharing\n\n--UPDATE--\n\n//---------------------------------------------------------------//\n\nHere I have cloned some other flags from the device:\n\nEspanol:\n\nhttps://drive.google.com/file/d/18FE-nT7DMDmNvPtT3lMzARdjcUItpUSu/view?usp=sharing\n\nEnglish:\n\nhttps://drive.google.com/file/d/1Qqr-ZKyT1M5ichLXBKRRBJzxaPDEpSGg/view?usp=sharing\n\nPortugues:\n\nhttps://drive.google.com/file/d/13DYM1-Di7bI_KXvT4Eo9zC6x-jIwX0jX/view?usp=sharing\n\nHere also two random pictures of the GUI:\n\nhttps://drive.google.com/file/d/1oulgopsKGIkpUQ12_94twBaNlVkToKxI/view?usp=sharing\nhttps://drive.google.com/file/d/1E9Tx2S86tP2B_z84Fe_6LWO-RZxSEVtD/view?usp=sharing\n\nThis should be these images (once highlighted and once normal):\n\n\n\n\n\n//---------------------------------------------------------------//\n\nHere are 2 copies of the 2 files from a hex editor\n\nimg_togglelanguage_ru_ovg.bin:\n\n```\nFF FF FF FF 00 FF FF FF FF 00 E2 FF FF FF 00 01 1A 1A 1A 2D 1A 1A 1A C3 99 1A 1A 1A FF 01 1A 1A 1A C0 1A 1A 1A 2D 88 FF FF FF 00 00 1A 1A 1A CF 9B 1A 1A 1A FF 00 1A 1A 1A CF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF FF FF FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF FF FF FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF FF FF FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF FF FF FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF FF FF FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 00 00 FF FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 00 00 FF FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 00 00 FF FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 00 00 FF FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 00 00 FF FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 00 00 FF FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 00 1A 1A 1A D2 9B 1A 1A 1A FF 00 1A 1A 1A CF 88 FF FF FF 00 01 1A 1A 1A 39 1A 1A 1A D2 99 1A 1A 1A FF 01 1A 1A 1A C9 1A 1A 1A 2D FF FF FF FF 00 FF FF FF FF 00 E3 FF FF FF 00\n\n```\nimg_togglelanguage_de_ovg.bin:\n\n```\nFF FF FF FF 00 FF FF FF FF 00 E2 FF FF FF 00 01 1A 1A 1A 2D 1A 1A 1A C3 99 1A 1A 1A FF 01 1A 1A 1A C0 1A 1A 1A 2D 88 FF FF FF 00 00 1A 1A 1A CF 9B 1A 1A 1A FF 00 1A 1A 1A CF 88 FF FF FF 00 81 1A 1A 1A FF 99 00 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 00 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 00 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 00 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 00 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 DE 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 DE 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 DE 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 DE 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 DE 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 DE 00 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF CF 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF CF 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF CF 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF CF 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF CF 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 81 1A 1A 1A FF 99 FF CF 00 FF 81 1A 1A 1A FF 88 FF FF FF 00 00 1A 1A 1A D2 9B 1A 1A 1A FF 00 1A 1A 1A CF 88 FF FF FF 00 01 1A 1A 1A 39 1A 1A 1A D2 99 1A 1A 1A FF 01 1A 1A 1A C9 1A 1A 1A 2D FF FF FF FF 00 FF FF FF FF 00 E3 FF FF FF 00\n\n```\nMaybe someone knows more than me.\n\n",
  "votes": "0",
  "answers": 2,
  "views": "670",
  "tags": [
    "binary-analysis",
    "file-format",
    "binary",
    "binary-diagnosis",
    "binary-editing"
  ],
  "user": "Alonia",
  "time": "May 29, 2021 at 10:23",
  "comments": [
    {
      "user": "Ian Cook",
      "text": "To get answers it helps to (a) tell us what you've already tried, (b) don't use images for hexdumps, use text, and (c) share what you know about the images already (e.g. sizes) or even the images themselves.",
      "time": null
    },
    {
      "user": "Alonia",
      "text": "@IanCook  I made a few changes to my question, thanks for pointing it out.",
      "time": null
    },
    {
      "user": "Robert",
      "text": "For an unknown file the first action should be to execute the Linux tool file on it.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Based on those images, this appears to be a fairly straight-forward run-length encoded 32-bits-per-pixel bitmap format.\nThe general structure seems to consist of number of records each with a single 'tag' byte followed by a multiple of 4 bytes of RGBA data.  These records appear to encapsulate pixel data only, with no dimensions or other metadata.\n\nThe structure of these pixel records appears to be as follows -\n\n```\ntag  data\nbyte bytes\n==== ===========\n// literal pixel records\n 00  RR GG BB AA                      => specifies colour of the next single RGBA pixel \n 01  RR GG BB AA  RR GG BB AA         => specifies colours of the next 2 RGBA pixels\n 02  RR GG BB AA  RR GG BB AA  .. etc => specifies colours of the next 3 RGBA pixels\n 03  ..\n ..\n 19  RR GG BB AA  RR GG BB AA  .. etc => specifies colours of the next 26 RGBA pixels\n ..\n// run-length encoded pixel records\n 81  RR GG BB AA              => colour RGBA is used for the next 2 pixels\n 82  RR GG BB AA              => colour RGBA is used for the next 3 pixels\n 83  RR GG BB AA              => colour RGBA is used for the next 4 pixels\n ...\n 88  RR GG BB AA              => colour RGBA is used for the next 9 pixels\n ...\n 99  RR GG BB AA              => colour RGBA is used for the next 26 pixels    \n 9A  RR GG BB AA              => colour RGBA is used for the next 27 pixels    \n 9B  RR GG BB AA              => colour RGBA is used for the next 28 pixels    \n ...\n E2  RR GG BB AA              => colour RGBA is used for the next 99 pixels \n ...   \n FF  RR GG BB AA              => colour RGBA is used for the next 128 pixels    \n\n```\nThe image dimensions need to worked out by inspection.\nThe flag images you provided are all 39 x 39.\nThe other 2 images have dimensions 172x207 and 148x186.\nThe flag images especially have borders and do use the RGBA alpha channel.\n\nHere's what the images look like -\n\n\n\n\n\n",
      "votes": "3",
      "user": "Ian Cook",
      "time": "Jun 1, 2021 at 11:30",
      "is_accepted": true,
      "comments": [
        {
          "user": "Alonia",
          "text": "I have edited my post and uploaded a few more files that I just cloned from the device. Also copied and uploaded some other menu images. These should also be larger than the flags.",
          "time": null
        },
        {
          "user": "Alonia",
          "text": "I still can't figure out what the E2 or E3 does. The other additional files I uploaded look completely different.",
          "time": null
        },
        {
          "user": "Ian Cook",
          "text": "I've updated the answer based on the additional images.",
          "time": null
        }
      ]
    },
    {
      "content": "I've further looked at this format and made a decoder here:\n\nhttps://github.com/cr3ative/rcd_330g_logo_utilities/blob/master/ovg_to_png.py\n\nThe tag byte Ian describes in the other answer is detailed here:\n\nhttps://www.nxp.com.cn/docs/en/application-note/AN4339.pdf\n\n\n\n",
      "votes": "0",
      "user": "Paul Curry",
      "time": "Jun 22, 2021 at 17:46",
      "is_accepted": false,
      "comments": [
        {
          "user": "Ian Cook",
          "text": "Good find on that NXP Application Note!",
          "time": null
        }
      ]
    }
  ]
}