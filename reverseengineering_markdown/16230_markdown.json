{
  "title": "DLL Injection does not work twice",
  "link": "https://reverseengineering.stackexchange.com/questions/16230/dll-injection-does-not-work-twice",
  "content": "I created a program that performs DLL injection. It does that by opening the process with OpenProcess, writes the DLL path to the process and creates a remote thread with CreateRemoteThread with the dll as a parameter.(The DLL just spawns a messagebox). It works just fine but the problem is the second time i can't see the messagebox. The functions OpenProcess, CreateRemoteThread, VirtualAllocEx, WriteProcessMemory all return true but i can't see the thread being created and the DLL does not run.\n\nThanks.\n\n",
  "votes": "2",
  "answers": 1,
  "views": "1k",
  "tags": [
    "dll",
    "dll-injection",
    "thread",
    "process"
  ],
  "user": "rustam Shirinov",
  "time": "Sep 1, 2017 at 8:40",
  "comments": [
    {
      "user": "Igor Skochinsky",
      "text": "second time during the same run or another one?",
      "time": null
    },
    {
      "user": "rustam Shirinov",
      "text": "second time i try to inject the same dll to the same process, the dll does not run @IgorSkochinsky",
      "time": null
    },
    {
      "user": "Igor Skochinsky",
      "text": "are you  calling LoadLibrary in the injected thread?",
      "time": null
    },
    {
      "user": "rustam Shirinov",
      "text": "yes i get a handle to the LoadLibrary function and pass it as a parameter to the CreateRemoteThread @IgorSkochinsky",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Calling LoadLibrary twice with the same DLL name only increases the load counter but does not cause DLL entrypoint to be called again. From the doc (emphasis mine):\n\nSo if you need to execute your code again you'll have to do it explicitly, LoadLibrary won't do it for you. \n\nEDIT:\n\nOne possible solution could be to use the address of the function in your (already loaded) DLL instead of LoadLibrary as the address of the second dinjected thread.\n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Sep 1, 2017 at 14:34",
      "is_accepted": true,
      "comments": [
        {
          "user": "rustam Shirinov",
          "text": "I am sorry but i did not understand how exactly i am going to do it explicitly. This is the code: remote_dll_path= (LPVOID)VirtualAllocEx(hProcess, &RemoteAddress, size, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE); WriteProcessMemory(hProcess, remote_dll_path, full_dll_path, size, NULL); hKernel32 = GetModuleHandleA(\"kernel32.dll\"); LoadLibraryAddress = GetProcAddress(hKernel32, \"LoadLibraryA\"); CreateRemoteThread(hProcess, 0, 0, (LPTHREAD_START_ROUTINE)LoadLibraryAddress, remote_dll_path, 0, &threadId); VirtualFreeEx(hProcess, (LPVOID)remote_dll_path, size, MEM_DECOMMIT)",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "you'll need to add some shellcode which would call the necessary function from the DLL. Just LoadLibraryA by itself is not enough if you need to run it twice.",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "also see my edit.",
          "time": null
        }
      ]
    }
  ]
}