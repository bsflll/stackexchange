{
  "title": "Frida class constructor hook not called while there do exist instances of the class",
  "link": "https://reverseengineering.stackexchange.com/questions/30068/frida-class-constructor-hook-not-called-while-there-do-exist-instances-of-the-cl",
  "content": "I have an (obfuscated) app with a certain class from which I would like to hook the constructor. The class has only 1 constructor defined and so I hooked the class as follows:\n\n```\nvar Aclass = Java.use('com.Aclass');\nAclass.$init.implementation =\nfunction(argument) {\n    console.log(\"class instance made! \" + String(argument));\n    return this.$init(argument);\n};\n\n```\nBut no console logs get printed but also no errors so it seems no objects of the class are being made.\n\nThough if I implement the following and call checkinstances() when the app is loaded I get several instances.\n\n```\n\nfunction checkinstances() {\n    Java.perform(function () { \n        Java.choose(\"com.Aclass\", {\n            onMatch: function (instance) {\n               console.log(\"Found instance: \" + instance);\n            },\n            onComplete: function () { }\n        });\n    });\n}\n\n// exporting the function to python so we can call it whenever we want...\nrpc.exports = {\n    checkinstances: checkinstances,\n};\n\n```\nHow is this possible?\n\nMaybe relevant: I think the app initiates some object by using java reflection because I see classnames and functionnames in string format as argument for some obfuscated functions. Would this result in a normal constructor hook not working?\n\n",
  "votes": "3",
  "answers": 0,
  "views": "1k",
  "tags": [
    "android",
    "frida"
  ],
  "user": "Niya",
  "time": "Feb 25, 2022 at 13:57",
  "comments": [
    {
      "user": "Robert",
      "text": "Even if an object instance is created using reflection at least one constructor have to be called. Are you sure that the object instances are not already created when you start the Frida script?",
      "time": null
    }
  ],
  "answers_data": []
}