{
  "title": "brute force remote nop sled memory address",
  "link": "https://reverseengineering.stackexchange.com/questions/17029/brute-force-remote-nop-sled-memory-address",
  "content": "ELF x64 binary on a remote server communicates via simple socket server in C.\n\nAfter overflowing the buffer (total buffer is 2000, password buffer is less), overwriting the RIP, filling with NOP sled (512 nops), inserting a reverse bind shellcode on the top of that, finding out a perfect address (without \\x00) in middle of nop sled which after sliding it will execute the shellcode.\n\nI understand the many outcomes but if I decide to brute force the remote server to find the NOP-sled address.\nAny good practice for that ?\n\n",
  "votes": "0",
  "answers": 1,
  "views": "816",
  "tags": [
    "crackme",
    "x86-64"
  ],
  "user": "James W.",
  "time": "Jul 30, 2020 at 10:39",
  "comments": [
    {
      "user": "Kerim Can Kalıpcıoğlu",
      "text": "Correct me if I'm wrong but, I don't think brute-forcing memory addresses on remote server -especially for 64-bit address space- is not feasible. Maybe restricting searching space to certain stack addresses or leaking addresses someway could help your problem. I don't heard any other intelligent search method for this type of problem.",
      "time": null
    },
    {
      "user": "James W.",
      "text": "take a look github.com/Naetw/CTF-pwn-tips#leak-stack-address",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Brute force is not the way you should look to in anything unless its your last resort. The address space of x64 is too large to get brute force to work. Look up on this technique called ROP(Return Oriented Programming). Currently you're bruteforcing the RIP, what if there's some code in the binary that will help you jump to your shellcode without bruteforcing and plus no PIE means that address is constant. When your control is getting transferred at ret, look at what other registers contain. You might find code such as call eax in the binary.\n\n",
      "votes": "3",
      "user": "sudhackar",
      "time": "Dec 25, 2017 at 9:03",
      "is_accepted": true,
      "comments": [
        {
          "user": "James W.",
          "text": "I can share the ROPgadget output, I have stack pivot but no rop chain, I do have \"call rax\" gadget but how do I populate rax to jump to nop sled ?",
          "time": null
        },
        {
          "user": "sudhackar",
          "text": "What are the contents of the registers? Do they refer to the buffer?",
          "time": null
        },
        {
          "user": "James W.",
          "text": "registers & stack hastebin.com/raw/axalohimur if you like I can edit the main question with the content",
          "time": null
        },
        {
          "user": "sudhackar",
          "text": "Can you share ROPgadget's output too?",
          "time": null
        },
        {
          "user": "James W.",
          "text": "ROPgadget & ropper output hastebin.com/raw/ehadepohod",
          "time": null
        }
      ]
    }
  ]
}