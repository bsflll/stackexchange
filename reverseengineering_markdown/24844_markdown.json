{
  "title": "Need some help and advices as regards as reverse engineering IoT devices",
  "link": "https://reverseengineering.stackexchange.com/questions/24844/need-some-help-and-advices-as-regards-as-reverse-engineering-iot-devices",
  "content": "Hi everyone, I saw this video on youtube as regards as reversing IPTV cameras and finding security vulnerabilities: Black Hat 2013 - Exploiting Network Surveillance Cameras Like a Hollywood Hacker\n\nI have a basic knowledge of C, C++ and Python.\n\nI have some other questions related to this field:\n\nI've seen that the speaker reverses CGI programs, is this the only filetype involved in reversing MIPS?\nif someone who has a lot of experience could give me some advices on what to do, where to start, books to buy and courses I would be very very grateful;\nthe assembly code that I get disassembling a MIPS binary has something in common as the one I get when disassembling a x86 program? (I thought that I might learn first x86 assembly and then move on learning MIPS assembly since the former is much more covered on the internet and in textbooks);\nI would like to know if there are ad-hoc crackmes (I can only find some related to x86 and x86_64) for MIPS architecture;\nare routers and other IoT devices such as IPTV cameras and so on based exclusively on the MIPS architecture? Or there are other architectures as well?\nwhat about obfuscated binaries, of course I don't want to rush and everything but I would like to know more;\nif I decompile a MIPS firmware on my Intel-powered computer and let's say, in the future I buy an AMD-powered computer, the output of the disassembled program will be the same? With output I mean instruction names and so on;\nI'm not trying to be a script kiddie but, from what I know, when talking about disassembling tools play a fundamental role. I've seen that IDA PRO is a good choice, however going to their webpage their price is just too much for a student, but there are other free alternatives such as Radare; the other night I tried to emulate a router's firmware using QEMU but I failed and I gave up; I hate copying and pasting things because you never learn anything and sometimes it doesn't work; are there some tools (other than Radare and Qemu) that may aid in reversing and disassembling MIPS firmware and related documentation?\nlast but not least, I'm not trying to be the \"hollywood hacker\" or be the \"bad guy\", I'm just trying to expand my knowledge.\n\n\nI know that these questions might be completely dumb, but everyone has been there. I googled everything I could but there are a lot of things and I always get lost. Just to point out, it's not the first time that I try to do reversing in general but I always get demotivated given how hard it is so I though about asking here and getting some advice.\n\nThanks for your time and everything!\n\n",
  "votes": "0",
  "answers": 1,
  "views": "109",
  "tags": [
    "disassembly",
    "assembly",
    "binary-analysis",
    "firmware",
    "mips"
  ],
  "user": null,
  "time": "Apr 27, 2020 at 13:05",
  "comments": [
    {
      "user": "multithr3at3d",
      "text": "2. Sometimes the best way to start is to jump into the deep end. Pick a device, and start working on it. Yes, it'll be challenging, but you'll learn a ton. Decompilers make it a bit easy to work on different architectures, but knowing the assembly helps a lot too.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "",
      "votes": "0",
      "user": "Yotamz",
      "time": "Apr 27, 2020 at 14:24",
      "is_accepted": true,
      "comments": [
        {
          "user": "user32648",
          "text": "Thanks for the reply, appreciated!",
          "time": null
        }
      ]
    }
  ]
}