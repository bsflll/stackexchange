{
  "title": "Get friendly disassemble hex file",
  "link": "https://reverseengineering.stackexchange.com/questions/31608/get-friendly-disassemble-hex-file",
  "content": "I'd like to know if there is a way to have a more friendly way to get disassemble hex file coming from Adafruit board.\n\nLet me explain actually I'm working with Adafruit feather 32u4 running with ATmega32u4 with avr-dude I got an hex file. After that I disassembled the file with avr-objdump but I got no friendly file, here is an example what I got\n\n```\n  b8:   11 24           eor     r1, r1\n  ba:   1f be           out     0x3f, r1        ; 63\n  bc:   cf ef           ldi     r28, 0xFF       ; 255\n  be:   d8 e0           ldi     r29, 0x08       ; 8\n  c0:   de bf           out     0x3e, r29       ; 62\n  c2:   cd bf           out     0x3d, r28       ; 61\n  c4:   21 e0           ldi     r18, 0x01       ; 1\n  c6:   a0 e0           ldi     r26, 0x00       ; 0\n  c8:   b1 e0           ldi     r27, 0x01       ; 1\n  ca:   01 c0           rjmp    .+2             ;  0xce\n\n```\nMy question : there is a way to have a more friendly disassemble file ? With label or something else ? Or with an hex file only brut assembly is available ?\n\nCan I create object file from my disassemble hex file ?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "737",
  "tags": [
    "disassembly",
    "hex"
  ],
  "user": "simon",
  "time": "Mar 2, 2023 at 8:49",
  "comments": [],
  "answers_data": [
    {
      "content": "You need to run the hex file through a tool like IDA Pro (paid) or Ghidra as a more intelligent disassembler/decompiler. those tools try to generate pseudocode from the assembly, too and also try to detect where functions start and end.\n\n",
      "votes": "1",
      "user": "masterX244",
      "time": "Mar 2, 2023 at 9:01",
      "is_accepted": false,
      "comments": [
        {
          "user": "simon",
          "text": "I'll try Ghidra, but when I imported my hex file, for the langugage what should I select, I've multiple AVR8 available, maybe default AVR8 with gcc ?",
          "time": null
        },
        {
          "user": "masterX244",
          "text": "yes, thats a good try for first. GCC is most common AVR compiler",
          "time": null
        }
      ]
    }
  ]
}