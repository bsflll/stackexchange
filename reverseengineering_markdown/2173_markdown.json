{
  "title": "What is MSR Tracing?",
  "link": "https://reverseengineering.stackexchange.com/questions/2173/what-is-msr-tracing",
  "content": "I was reading a old blog post on OpenRCE that mentions MSR tracing in the context of binary only profiling and coverage. The only Google hits for this term are a few emails on the Xen mailing list that I am not able to understand. What is MSR tracing?\n\n",
  "votes": "9",
  "answers": 1,
  "views": "3k",
  "tags": [
    "dynamic-analysis"
  ],
  "user": "user2142",
  "time": "Jun 2, 2013 at 19:01",
  "comments": [
    {
      "user": "Brendan Dolan-Gavitt",
      "text": "I suspect Rolf will be along shortly to give a detailed answer, but in the meantime I found this post on OpenRCE to be quite helpful: openrce.org/blog/view/535/…",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "MSR tracing generally refers to using the Intel Model-Specific Registers (MSRs) to obtain trace information from the CPU. Because modern (post-Pentium 4, generally) processors have hardware support for debugging, this can be faster than software-only solutions. There are a few ways this can be done:\n\nSo, to sum up, MSR tracing is a way of doing tracing faster using hardware support in Intel processors. It's very appealing theoretically, but there isn't (yet) a lot of support for it in commonly available tools.\n\nSources:\n\n",
      "votes": "14",
      "user": "Community",
      "time": "May 23, 2017 at 12:37",
      "is_accepted": true,
      "comments": [
        {
          "user": "Rolf Rolles",
          "text": "Good answer.  I'd add this article as a source for perusal: codeproject.com/Articles/517466/…",
          "time": null
        }
      ]
    }
  ]
}