{
  "title": "PUSHing a lot of hexadecimal numbers",
  "link": "https://reverseengineering.stackexchange.com/questions/6368/pushing-a-lot-of-hexadecimal-numbers",
  "content": "I have the following two lines:\n\n```\n  ....\n  push 401150h\n  call sub_401253\n  ....\n\n```\nSo, when I click on push 401150h IDA PRO shows:\n\n```\n  seg0001 : 00401120 dword_401120  dd  6F662F3Ch, 3C3E746Eh, 3E702Fh, 253A4E52h, 54522073h\n  dd 2073253Ah, 73253A55h, 253A5020h, 656C774h, 616223Dh, 72676B63h, 646E756Fh\n  dd 0D73h, 7320703Ch, 335504h, 7265464h, 5484531h 55E4ADEh, A585B5448h, \n  .....(and so on)\n\n```\nSo, my first question would be : what is this? what it can be?\n\nMy own results: that thing which I mentioned above is a string because in the function sub_401253 they copy it using lstrcpy() into a buffer:\n\n```\n ...\n lea eax, [esp+1FC + Buffer]\n ...\n mov edi, [esp+208+arg_0]\n push edi, \n push eax, \n call lstrcpy\n ...\n\n```\nAfter that, in a next block the content of the buffer(which are the hexadecimal numbers now) is XORed in a loop. I assume that they encrypt or decrypt it (but that is not so importan for me right now.)\n\nI only want to know what IDA PRO try to depict with push 401150h which represents the hexadecimal numbers.\nThats it. I hope you can help me.\n\nbest regards,\n\n",
  "votes": "1",
  "answers": 1,
  "views": "356",
  "tags": [
    "ida",
    "assembly",
    "hexadecimal"
  ],
  "user": "user3097712",
  "time": "Oct 3, 2014 at 15:04",
  "comments": [],
  "answers_data": [
    {
      "content": "The data at 00401120 is ASCII-encoded text:\n\n```\n3C 2F 66 6F 6E 74 3E 3C 2F 70 3E 00 52 4E 3A 25        </font></p>.RN:%\n73 20 52 54 3A 25 73 20 55 3A 25 73 20 50 3A 25        s RT:%s U:%s P:%\n77 6C 65 00 3D 22 62 61 63 6B 67 72 6F 75 6E 64        wle.=\"background\n73 0D 00 00                                            s...\n\n```\nYou can tell IDA to decode those bytes as text by clicking on the data at 00401120 and pressing the A key\n\n",
      "votes": "8",
      "user": "Jason Geffner",
      "time": "Oct 3, 2014 at 15:26",
      "is_accepted": true,
      "comments": [
        {
          "user": "user3097712",
          "text": "ok, since I know that the XOR-key is 0A1h, then I must XOR 0A1h with 3C and so on to get the decrypted info...right?",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "The data above is already in plaintext (not encrypted), so the XOR would apparently be used to encrypt that data. But yes, if it's a single byte key of A1, then you'd XOR each byte in the string with A1 to see what the XOR'ed result would be.",
          "time": null
        },
        {
          "user": "user3097712",
          "text": "ok, thx for your perfect answer.",
          "time": null
        },
        {
          "user": "Paddywhacker",
          "text": "You would have spotted this if you had looked at the Hex+ASCII display of your code.",
          "time": null
        }
      ]
    }
  ]
}