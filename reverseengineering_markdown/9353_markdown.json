{
  "title": "Automating a custom QGraphicsObject control in an external QT based process",
  "link": "https://reverseengineering.stackexchange.com/questions/9353/automating-a-custom-qgraphicsobject-control-in-an-external-qt-based-process",
  "content": "I have injected a DLL into an external application that is based on the QT framework. I, then, use the method QApplication::allWidgets() and iterate through the list of widgets to find a QGraphicsView that represents the window I want to interact with. \n\nThe buttons and other controls in the scene are all derived from QGraphicsObject. But, I don't have the source. So, I can only cast to QGraphicsObject and not to the actual type. \n\nThe list of methods from the meta-object is incomplete, which is to be expected, because I cast to a QGraphicsObject. I can find the method names using IDA though. \n\nIs it possible to call a particular method, and how would you do it?\n\n",
  "votes": "3",
  "answers": 0,
  "views": "129",
  "tags": [
    "automation",
    "injection",
    "qt"
  ],
  "user": "pokerguy",
  "time": "Jul 15, 2015 at 7:51",
  "comments": [
    {
      "user": "fileoffset",
      "text": "I would probably try and walk the objects vtable (don't cast it to QGraphicsObject).",
      "time": null
    },
    {
      "user": "Jason Geffner",
      "text": "As an aside, are you sure the functions you're calling are thread-safe?",
      "time": null
    },
    {
      "user": "pokerguy",
      "text": "@fileoffset I will try this, but I am not familiar with how to find the method in the vtable. I will do some research, but if you have a link to a relevant article, please post it.",
      "time": null
    },
    {
      "user": "pokerguy",
      "text": "@JasonGeffner I am not sure if it is. Is there anyway to determine this without having the source?",
      "time": null
    },
    {
      "user": "fileoffset",
      "text": "Unfortunately there is no standard for vtables, each compiler can implement it how it likes. Can you determine which compiler&version was used to create the binary? If it was MSVS, what you can do is install that version of MSVS, and then write a small test program with a basic class that inherits from QGraphicsObject. Then you can compile it with some special flags (see answer #2 here: stackoverflow.com/questions/302446/â€¦) and MSVS will output the format of the object, including the vtable.",
      "time": null
    }
  ],
  "answers_data": []
}