{
  "title": "IDA: Changing type of arguments to local type",
  "link": "https://reverseengineering.stackexchange.com/questions/18141/ida-changing-type-of-arguments-to-local-type",
  "content": "I have functions \n\n```\nfoo_0(...,_ v0,...)\nfoo_1(...,_ v1,...)\n...\n\n```\nAnd, for each (foo_x, _ v_x) pair, I would like to change the type of v_x in the declaration to ANIMAL *, where ANIMAL is a local type. \n\nI recycled some code from this question, as follow:\n\n```\nfrom idaapi import *\n\ntif = tinfo_t()\nget_tinfo2(ea, tif)\n\nfuncdata = func_type_data_t()\ntif.get_func_details(funcdata)\n\n```\nAfter this I was stuck, as funcdata[i].type is a tinfo_t object which I could not find a way to create/modify easily. \n\nMy last resort would be to use GuessType/GetType and modify the string before SetType, but this might be a tad complicated since some arguments are pointers to functions themselves.\n\nAny suggestions would be most welcome!\n\n",
  "votes": "4",
  "answers": 1,
  "views": "3k",
  "tags": [
    "ida",
    "idapython"
  ],
  "user": "Pororo",
  "time": "May 1, 2018 at 10:10",
  "comments": [],
  "answers_data": [
    {
      "content": "This worked for me (checks might be needed on guess_tinfo and get_func_details)\n\n```\ntif = idaapi.tinfo_t()\nida_typeinf.guess_tinfo(ea,tif)                     \nfuncdata = idaapi.func_type_data_t()\ntif.get_func_details(funcdata)\ntif2 = idaapi.tinfo_t()\ntif2.get_named_type(idaapi.get_idati(),\"ANIMAL\")       #tif2 = ANIMAL\ntif3 = tinfo_t()\ntif3.create_ptr(tif2)                                  #tif3 = ANIMAL *\nfuncdata[argnum].type = tif3                           #replace corresponding argument\nfunction_tinfo = idaapi.tinfo_t()\nfunction_tinfo.create_func(funcdata)\nidaapi.apply_tinfo2(ea, function_tinfo, idaapi.TINFO_DEFINITE)\n\n```\n",
      "votes": "4",
      "user": "Pororo",
      "time": "Nov 29, 2018 at 7:40",
      "is_accepted": true,
      "comments": [
        {
          "user": "Mohd Shahril",
          "text": "For IDA SDK >= 7.4, the parameter order of the guess_tinfo is switched. It should be guess_tinfo(tif,ea).",
          "time": null
        }
      ]
    }
  ]
}