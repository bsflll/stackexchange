{
  "title": "What does byte_407030[ecx] mean?",
  "link": "https://reverseengineering.stackexchange.com/questions/13729/what-does-byte-407030ecx-mean",
  "content": "I came across the following instruction in IDA:\n\n```\nmovsx edx, byte_407030[ecx]\n\n```\nbyte_407030 is 25h. Is it trying to access some memory location? I know that ecx is storing a counter in a for loop.\n\n",
  "votes": "0",
  "answers": 1,
  "views": "282",
  "tags": [
    "ida",
    "assembly"
  ],
  "user": "mrQWERTY",
  "time": "Oct 16, 2016 at 4:44",
  "comments": [],
  "answers_data": [
    {
      "content": "Lets go step by step:\n\n```\nmovsx\n\n```\nThis is a specialized move instruction it moves a value from source of a smaller size (in your case, a byte) to a destination of a potentially larger size (in your case, a double word), preserving the sign bit by an operation called sign-extending.\n\nThis means that if the byte was a negative integer then the destination will also be a negative integer. This is a bit more complex then simply copying the last bit because of the way negative integers are encoded (which is called two's complement). \n\n```\nedx \n\n```\nThe first operand of a mov instruction is the destination target. In this case it's the double-word register edx. This is were the data is moved to.\n\n```\nbyte_407030[ecx]\n\n```\nThe second operand is the source operand. This is where the data is moved from. Please note that although the instruction is mov, the value also remains in the source location. Calling it \"copy\" might have been a better idea ;).\n\nIDA's syntax here is similar to C's syntax. This will dereference the memory region at address 0x407030 plus the value of ecx and fetch a byte from there. In case ecx is 11h, the final address would be 0x407041.\n\nsummary\nThis instruction will take the byte value at memory address of 0x407030+ecx, sign extend it to dword (4 bytes in most architectures) and assign that final value into register edx\n\n",
      "votes": "3",
      "user": "NirIzr",
      "time": "Oct 16, 2016 at 4:43",
      "is_accepted": true,
      "comments": []
    }
  ]
}