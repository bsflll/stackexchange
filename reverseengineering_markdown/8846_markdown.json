{
  "title": "PinTool catches instrumented application exceptions",
  "link": "https://reverseengineering.stackexchange.com/questions/8846/pintool-catches-instrumented-application-exceptions",
  "content": "How can I catch the exceptions generated by an instrumented application in Intel PIN?\n\nI know about PIN_AddInternalExceptionHandler. This is not what I mean, this catches exceptions generated by the PinTool itself (if I understood correctly)\n\nI found this resource. Although it is a clever solution (check EIP against KiUserExceptionDispatcher) I can not instrument every instruction in my case. \n\nIs there a simple way to achieve this?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "398",
  "tags": [
    "pintool"
  ],
  "user": "Carlos Garcia",
  "time": "May 8, 2015 at 11:42",
  "comments": [],
  "answers_data": [
    {
      "content": "Use PIN_AddContextChangeFunction, and from callback (CONTEXT_CHANGE_CALLBACK) you may see exception\n\n",
      "votes": "1",
      "user": "anon",
      "time": "May 8, 2015 at 13:00",
      "is_accepted": true,
      "comments": []
    }
  ]
}