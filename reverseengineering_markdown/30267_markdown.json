{
  "title": "IDA Free: How to patch a memory address",
  "link": "https://reverseengineering.stackexchange.com/questions/30267/ida-free-how-to-patch-a-memory-address",
  "content": "I have a disassembly line showing:\n\n```\nlea rcx, Format\n\n```\nIn which Format is a memory address named by IDA. The address is at 0x1400132E0 and points to a C-String \"hello, my dear  \n\".\n\nWhat I want to do is to patch the address of Format to 0x1400132E1 so that the string would become \"ello, my dear  \n\". However, Edit->Patch Program->Assembly does not allow operand such as [0x1400132E1]. What can I do?\n\n",
  "votes": "1",
  "answers": 2,
  "views": "446",
  "tags": [
    "ida"
  ],
  "user": "Nicholas Humphrey",
  "time": "Apr 16, 2022 at 4:34",
  "comments": [],
  "answers_data": [
    {
      "content": "I have never used IDA free but the documentation I found is mostly pointed towards supporting only IBM PC\n\nSo your option is only to assemble and patch bytes since IDA Free doesn't support plugins.\n\nExample\n\n```\n.text:000000000000063A                      ; int __cdecl main(int argc, const char **argv, const char **envp)\n.text:000000000000063A                      public main\n.text:000000000000063A                      main proc near\n.text:000000000000063A 55                   push    rbp\n.text:000000000000063B 48 89 E5             mov     rbp, rsp\n.text:000000000000063E 48 8D 3D 9F 00 00 00 lea     rdi, s          ; \"hello, my dear\"\n.text:0000000000000645 E8 C6 FE FF FF       call    _puts           ; Call Procedure\n.text:000000000000064A B8 00 00 00 00       mov     eax, 0\n.text:000000000000064F 5D                   pop     rbp\n.text:0000000000000650 C3                   retn                    ; Return Near from Procedure\n.text:0000000000000650                      main endp\n\n```\nIt shows that the actual instruction bytes are\n\n```\n48 8D 3D 9F 00 00 00\n\n```\nwhich translate to\n\n```\n48 8d 3d 9f 00 00 00     lea    rdi,  [rip+0x9f]\n\n```\nYou can then select the instruction you want to edit and then go to Hex-View > Press F2 to edit bytes and change to\n\n```\n48 8d 3d a0 00 00 00     lea    rdi,  [rip+0xa0]\n\n```\nPress F2 again to apply changes to db which would take disassembly to\n\n```\n.text:000000000000063E 48 8D 3D A0 00 00 00 lea     rdi, s+1        ; \"ello, my dear\"\n\n```\nThen Edit>Patch Program> Apply patches to input file to push changes back to original file.\n\nTLDR : Assemble using other tool and change bytes in IDA Free. I use rasm or pwntools asm for quick testing  otherwise keystone\n\n```\n[/tmp] rasm2 -a x86 -b 64 \"lea rdi, [rip+0xa0]\"\n488d3da0000000\n[/tmp] asm -c amd64 \"lea rdi, [rip+0xa0]\"\n488d3da0000000\n\n```\n",
      "votes": "2",
      "user": "sudhackar",
      "time": "Apr 16, 2022 at 11:03",
      "is_accepted": true,
      "comments": [
        {
          "user": "Nicholas Humphrey",
          "text": "Thanks! I think I need to learn how to translate opcode to assembly language, but this is a good start.",
          "time": null
        }
      ]
    },
    {
      "content": "Edit -> Patch Program -> Assembly is not the best choice because it does not work for all processors and all instructions.\nI agree with sudhackar, but you can also use Edit -> Patch Program -> Change byte... to change the relative address (in your case it will 4th byte).\n\n",
      "votes": "2",
      "user": "0xC0000022L",
      "time": "Apr 21, 2022 at 21:08",
      "is_accepted": false,
      "comments": []
    }
  ]
}