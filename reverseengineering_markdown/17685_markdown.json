{
  "title": "How to find CLSID from CoCreateInstance in IDA?",
  "link": "https://reverseengineering.stackexchange.com/questions/17685/how-to-find-clsid-from-cocreateinstance-in-ida",
  "content": "I've find a CoCreateInstance() in IDA disassembly (after CoInitializeEx()). Here are the assembly:\n\n```\nloc_18000499D:          ; pUnkOuter\nxor     edx, edx\nmov     [rsp+68h+ppv], rbx ; ppv\nlea     r9, riid        ; riid\nlea     rcx, rclsid     ; rclsid\nlea     r8d, [rdx+4]    ; dwClsContext\ncall    cs:CoCreateInstance\nmov     ebx, eax\nmov     eax, 8007019Eh\ncmp     ebx, 80040154h\ncmovz   ebx, eax\ntest    ebx, ebx\njns     short loc_1800049D7\n\n```\nAnd the pseudocode is:\n\n```\nCoCreateInstance(&rclsid, 0i64, 4u, &riid, v4 + 1);\n\n```\nWhen I click the rclsid it is redirected to read-only data segment. Here is the .rdata section:\n\n```\n.rdata:0000000180007930 ; IID rclsid\n.rdata:0000000180007930 rclsid          dd 4F476546h            ; Data1\n.rdata:0000000180007930                                         ; DATA XREF: f_CoInitialize+A7↑o\n.rdata:0000000180007930                 dw 0B412h               ; Data2\n.rdata:0000000180007930                 dw 4579h                ; Data3\n.rdata:0000000180007930                 db 0B6h, 4Ch, 12h, 3Dh, 0F3h, 31h, 0E3h, 0D6h; Data4\n.rdata:0000000180007940 ; IID riid\n.rdata:0000000180007940 riid            dd 536A6BCFh            ; Data1\n.rdata:0000000180007940                                         ; DATA XREF: f_CoInitialize+A0↑o\n.rdata:0000000180007940                 dw 0FE04h               ; Data2\n.rdata:0000000180007940                 dw 41D9h                ; Data3\n.rdata:0000000180007940                 db 0B9h, 78h, 0DCh, 0ACh, 2 dup(0A9h), 0B5h, 0B9h; Data4\n\n```\nSo, How can I find the CLSID? I tried to change the data type with D key but can't understand it.\n\n",
  "votes": "1",
  "answers": 2,
  "views": "3k",
  "tags": [
    "ida",
    "disassembly"
  ],
  "user": "Biswapriyo",
  "time": "Mar 13, 2018 at 16:13",
  "comments": [
    {
      "user": "blabb",
      "text": "clsid is guid  which is a structure either create the struct and apply it or create a 16 bytel long array with numpad * button",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "CLSID is a GUID and although a GUID can be represented as a string, it's really a struct that looks like this:\n\n```\ntypedef struct _GUID {\n  DWORD Data1;\n  WORD  Data2;\n  WORD  Data3;\n  BYTE  Data4[8];\n} GUID;\n\n```\nAlthough there is no way to display the GUID as a string in Ida you can convert it to a struct like this:\n\nSelect the 16 bytes that represent your CLSID, right click and select Structure from the Popup Menu. Then from the Sub menu select _GUID:\n\n\nThis is the result showing the Data1, Data2, Data3 and Data4 members\n\n\nIf you want to convert it to string you would need to create an idc script that does something like this: sprintf(szGuid, \"{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}\", guid.Data1, guid.Data2, guid.Data3, guid.Data4[0], guid.Data4[1], guid.Data4[2], guid.Data4[3], guid.Data4[4], guid.Data4[5], guid.Data4[6], guid.Data4[7]);\n\n",
      "votes": "6",
      "user": "Community",
      "time": "Jun 17, 2020 at 9:54",
      "is_accepted": true,
      "comments": [
        {
          "user": "Remko",
          "text": "An IID is a globally unique identifier (GUID) value, so they are the same.",
          "time": null
        }
      ]
    },
    {
      "content": "From @Remko's idea, I made a IDC script to convert the GUID data to a sting. Here is the script:\n\n```\n#include <idc.idc>\n\nstatic MakeGuid(ea)\n{\n    auto string = sprintf(\"{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}  \n\", \n        Dword(ea), Word(ea+4), Word(ea+6), Byte(ea+8), Byte(ea+9),\n        Byte(ea+10), Byte(ea+11), Byte(ea+12), Byte(ea+13), Byte(ea+14), Byte(ea+15)\n    Message(string);\n    return 0;\n}\n\n```\nMake a text file in any text editor. Add .IDC extension. Paste the above code. Load the IDC script file in IDA with Alt+F7 (or File > Load Script menu). Open the output window with Alt+0 (zero). Type MakeGuid(variable_name); below of that window and the GUID will be shown as string. For example, as in my question, type MakeGuid(rclsid);. Always put a semicolon after the function.\n\n",
      "votes": "2",
      "user": "Biswapriyo",
      "time": "Sep 19, 2018 at 15:26",
      "is_accepted": false,
      "comments": []
    }
  ]
}