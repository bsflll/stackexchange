{
  "title": "Mapping a high level statement back in assembly dump",
  "link": "https://reverseengineering.stackexchange.com/questions/10967/mapping-a-high-level-statement-back-in-assembly-dump",
  "content": "Say, I have compiled a large code base, e.g. gzip/gmp/python/php etc. on Linux. Is there any means to map a high level C construct, e.g. assignment/if-else/for/while/Math expression back in the assembly dump produced by objdump or something similar? Please let me know how far it is possible in both the cases when debug information is present and absent.\n\n",
  "votes": "0",
  "answers": 1,
  "views": "336",
  "tags": [
    "disassembly",
    "decompilation",
    "c",
    "objdump"
  ],
  "user": "sherlock",
  "time": "Sep 26, 2015 at 12:15",
  "comments": [
    {
      "user": "w s",
      "text": "Do you want to decompile the code or map assembly to original source ?",
      "time": null
    },
    {
      "user": "Jason Geffner",
      "text": "It sounds like what you're asking is, \"is it possible to reverse engineer software?\" So if I'm understanding you correctly, the answer is, \"yes.\"",
      "time": null
    },
    {
      "user": "Jongware",
      "text": "Note that just about any of your original \"ssignment/if-else/for/while/Math expression\" in the C source may be optimized beyond recognition, or even entirely be omitted. I.e., even with the lowest compiler optimization settings, you won't find the \"5\" of a statement i = 100/5; back in your executable. (Assuming any 21st century compiler was used.)",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I'll try to outline a possible ways you can go:\n\nAlso, you can generate this in AT&T syntax as well as in Intel syntax: gcc -S -masm=att code.c gcc -S -masm=intel code.c\n\nFrankly, I've digested the info from here. Hope it will help.\n\nEDIT: some useful links:\n\nThe info that's more specific to your question\n\nLooks very promising except that the project is abandoned\n\n",
      "votes": "1",
      "user": "Community",
      "time": "May 23, 2017 at 12:37",
      "is_accepted": false,
      "comments": []
    }
  ]
}