{
  "title": "Strange GDB behavior in OSX",
  "link": "https://reverseengineering.stackexchange.com/questions/1958/strange-gdb-behavior-in-osx",
  "content": "I'm reversing some malware on an OSX VM when I noticed something peculiar. While stepping through the instructions, the instruction just after a int 0x80 gets skipped i.e. gets executed without me stepping through this.\n\nExample:\n\n```\n int 0x80\n inc eax ; <--- this gets skipped\n inc ecx ; <--- stepping resumes here\n\n```\nWhy does this happen? Have you encountered something similar to this?\n\n",
  "votes": "6",
  "answers": 1,
  "views": "253",
  "tags": [
    "malware",
    "gdb",
    "osx",
    "x86",
    "mach-o"
  ],
  "user": null,
  "time": "Apr 29, 2013 at 17:14",
  "comments": [],
  "answers_data": [
    {
      "content": "When single-stepping through code, the T flag is set so that the CPU can break after the instruction completes execution.  When an interrupt occurs, the state of the T flag is placed on the stack, and used when the iret instruction is executed by the handler.  However, the iret instruction is one of a few instructions that causes a one-instruction delay in the triggering of the T flag, due to legacy issues relating to the initialization of the stack.\n\nSo the skipped instruction is executing but you can't step into it (but if you set a breakpoint at that location and run to that point instead, then you will get a break).\n\n",
      "votes": "12",
      "user": "perror",
      "time": "Apr 29, 2013 at 17:25",
      "is_accepted": true,
      "comments": [
        {
          "user": "0xC0000022L",
          "text": "+1. Didn't sound like the OP was interested in those low-level details, but now I understand why you were arguing that my answer didn't contain the information asked for. But it turns out I misread the question. Thanks for pointing it out.",
          "time": null
        },
        {
          "user": "perror",
          "text": "Do we observe the same behavior in other OSes ? *BSD, Linux, OpenSolaris, ... ?",
          "time": null
        },
        {
          "user": "0xC0000022L",
          "text": "@perror: should for all practical purposes whenever an interrupt handler is used and therefore iret is used.",
          "time": null
        }
      ]
    }
  ]
}