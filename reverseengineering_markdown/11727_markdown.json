{
  "title": "Get DLL name with PyDBG and System_dll.py?",
  "link": "https://reverseengineering.stackexchange.com/questions/11727/get-dll-name-with-pydbg-and-system-dll-py",
  "content": "Is it possible to get the name and path of a DLL that is loaded by the application using PyDBG and System_dll.py? I have a script and PyDBG handles loaded dlls with just:\ndbg.set_callback(LOAD_DLL_DEBUG_EVENT, handler_print_dll_loaded)\n\nIs there a way to get the loaded DLL's using tools in pydbg to return somthing similar to Immunity Debuggers Log Data window:\n\n67EE0000   Module C:\\windows\\SYSTEM32\\OLEPRO32.DLL\n 69E20000   Module C:\\windows\\SYSTEM32\\oledlg.dll\n 6F5E0000   Module C:\\windows\\SYSTEM32\\WINMMBASE.dll\n 6F7F0000   Module C:\\windows\\SYSTEM32\\WINMM.dll\n etc...\n\n",
  "votes": "0",
  "answers": 1,
  "views": "179",
  "tags": [
    "debugging",
    "debuggers",
    "dll",
    "python"
  ],
  "user": "Starwarsfan2099",
  "time": "Jan 9, 2016 at 1:45",
  "comments": [],
  "answers_data": [
    {
      "content": ":>type ENUMMODS.PY \n\n```\nimport sys\nfrom pydbg import * \nfor modules in pydbg().attach(int(sys.argv[1])).enumerate_modules():\n    print modules\npydbg().detach()\n\n```\n:>ENUMMODS.PY\n\n```\n('calc.exe', 12517376L)\n('ntdll.dll', 1999765504L)\n('kernel32.dll', 1970733056L)\n('KERNELBASE.dll', 1968111616L)\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n('oleacc.dll', 1836253184L)\n\n```\n",
      "votes": "3",
      "user": "blabb",
      "time": "Jan 9, 2016 at 11:38",
      "is_accepted": true,
      "comments": []
    }
  ]
}