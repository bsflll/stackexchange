{
  "title": "What does this multi mov instruction do? [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/2974/what-does-this-multi-mov-instruction-do",
  "content": "I came across the following multi mov instruction:\n\n```\nmov eax, 1, 2, 3\n\n```\nWhat does this instruction do? Where can I find the correct documentation for this instruction?\n\n",
  "votes": "4",
  "answers": 0,
  "views": "482",
  "tags": [
    "assembly",
    "x86-64"
  ],
  "user": "bread",
  "time": "11 years ago",
  "comments": [
    {
      "user": "Igor Skochinsky",
      "text": "Where did you see that? It's not a valid x86 instruction.",
      "time": null
    },
    {
      "user": "Igor Skochinsky",
      "text": "Can you paste the fragment of disassembly with this line?",
      "time": null
    },
    {
      "user": "peter ferrie",
      "text": "@alexanderh, there is no such x64 instruction.  You are mistaken and your comment is a distraction.",
      "time": null
    },
    {
      "user": "alexanderh",
      "text": "@peterferrie, I'm not mistaken. I never stated the instruction or the use of more than two arguments for MOV exists. The answer can be found between those pages because it shows that MOV has a single source and a single destination. I read through those pages to verify the usage when I saw bread's question. Thought it would be helpful.",
      "time": null
    },
    {
      "user": "peter ferrie",
      "text": "@alexanderh, it's not helpful to suggest that the answer can be \"found\" there.  The answer can be \"found\" by looking out the window, too, but by choosing that manual, you imply that the instruction exists.  It's more likely that the OP was mistaken about the output in some way, and thus has not returned to comment.",
      "time": null
    }
  ],
  "answers_data": []
}