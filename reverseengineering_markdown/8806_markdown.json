{
  "title": "How to call idc function with idapython",
  "link": "https://reverseengineering.stackexchange.com/questions/8806/how-to-call-idc-function-with-idapython",
  "content": "I want to script a x86Emu plugin (an IDA emulator) with IdaPython. It's registered idc functions. Below is function names from the plugin source code.\n\n```\n/* add IDC functions for interacting with the emulator\nEmuRun();\nEmuTrace();\nEmuStepOne();\nEmuTraceOne();\nEmuSync();\nEmuGetReg(regno);\nEmuSetReg(regno, value);\nEmuAddBpt(addr);\n*/\n\n```\nThis functions works well in idc. I found a class calling idc function in idaapi.py.\n\n```\nclass _IdcFunction(object):\n\"\"\"\nInternal class that calls pyw_call_idc_func() with a context\n\"\"\"\ndef \\_\\_init\\_\\_(self, ctxptr):\n    self.ctxptr = ctxptr\n    # Take a reference to the ctypes callback\n    # (note: this will create a circular reference)\n    self.cb   = _IDCFUNC_CB_T(self)\nfp_ptr = property(lambda self: ctypes.cast(self.cb, ctypes.c_void_p).value)\ndef \\_\\_call\\_\\_(self, args, res):\n    return call_idc_func__(self.ctxptr, args, res)\n\n```\nWhen I type this:\n\n```\nimport ctypes\nidaapi._IdcFuntion( ctypes ).\\_\\_call\\_\\_( 'EmuStepOne', ctypes.c_voidp ) \n\n```\nI get the following error:\n\n```\nctypes.ArgumentError: argument 1: <type 'exceptions.TypeError'>: Don't know how to convert parameter 1\n\n```\nI don't know why I get this error, has anyone an idea ?\n\n",
  "votes": "3",
  "answers": 1,
  "views": "2k",
  "tags": [
    "ida",
    "idapython"
  ],
  "user": "names",
  "time": "May 4, 2015 at 15:31",
  "comments": [
    {
      "user": "names",
      "text": "If not need, call the idaapi.run_statements( IDC_SCRIPT_HERE ) it's returned bool",
      "time": null
    },
    {
      "user": "tmr232",
      "text": "idc.Eval(\"Some IDC Expression\") is another option.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "You get these errors because you're trying to use ctypes, which calls native functions from python using conversions from python objects to low-level C-like types.\n\nObviously, a python exception is not something ctypes can convert to native representation, so it fails.\n\nThere's a really simple way to call IDC code from within IDAPython, using idc.Eval, like the following:\n\n```\nidc.Eval(\"EmuStepOne();\")\n\n```\n",
      "votes": "2",
      "user": "NirIzr",
      "time": "Sep 11, 2016 at 23:57",
      "is_accepted": false,
      "comments": []
    }
  ]
}