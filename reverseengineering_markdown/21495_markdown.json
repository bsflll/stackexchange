{
  "title": "Template code with 0xcccccccc in every ghidra decompiled function for some executables",
  "link": "https://reverseengineering.stackexchange.com/questions/21495/template-code-with-0xcccccccc-in-every-ghidra-decompiled-function-for-some-execu",
  "content": "I often have some code like this on the beginning of every function of a decompiled program:\n\n```\niVar1 = 0x42;\n  puVar2 = local_10c;\n  while (iVar1 != 0) {\n    iVar1 = iVar1 + -1;\n    *puVar2 = 0xcccccccc;\n    puVar2 = puVar2 + 1;\n  }\n\n```\n0xcccccccc in web search seems related to \"uninitialized memory\" but I don't see the link with this blanket code.\n\nWhat is it? What purpose does it have?\nWhy is it there as \"template\" for every function?\n\n",
  "votes": "2",
  "answers": 2,
  "views": "578",
  "tags": [
    "decompiler",
    "ghidra"
  ],
  "user": "Phil L.",
  "time": "Jun 16, 2019 at 6:25",
  "comments": [],
  "answers_data": [
    {
      "content": "0xCC stands for int 3 in x86 architecture, that is a special interrupt used to implement software breakpoint by debuggers.\n\nSo, this code sets the memory to int 3 interrupts for debugging purposes. Imagine that the code accidentally jumps to some random location. If some garbage bytes are there, the behaviour is undefined. \n\nHowever, in case where such a jump accesses int 3 instruction, it will just cause software breakpoint in the debugger thus preventing udefined behaviour from happening and showing you that some strange jump happened and stopping the execution at this point, exectly as in the case you set a breakpoint there.\n\nNote: Moving 0xCCCCCCCC just sets 4 contiguous bytes to 0xCC.\n\n",
      "votes": "3",
      "user": "bart1e",
      "time": "Jun 16, 2019 at 8:27",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "This is probably code compiled by Visual C++ in debug build setting. In such case, the compiler generates code which fills all stack variables with the byte 0xCC, so that any uninitialized value is clearly visible during debugging. \nSee also https://stackoverflow.com/a/11865164\n\n",
      "votes": "3",
      "user": "Igor Skochinsky",
      "time": "Jun 16, 2019 at 11:06",
      "is_accepted": false,
      "comments": [
        {
          "user": "bart1e",
          "text": "It's worth mentioning that int 3 invokes a software breakpoint, while the answer you gave a link to says that it invokes a hardware one.",
          "time": null
        }
      ]
    }
  ]
}