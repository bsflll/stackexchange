{
  "title": "When can trapping be used?",
  "link": "https://reverseengineering.stackexchange.com/questions/20633/when-can-trapping-be-used",
  "content": "This is the beginning of one of the functions inside NTDLL of Windows XP:\n\n```\nMOV EDI,EDI\nPUSH EBP\nMOV EBP,ESP\n...\n\n```\nThe book on reverse engineering I am reading(Eldad Eilam - Reversing: Secrets of Reverse Engineering) says this about the first line:\n\nCan you show me how exactly can trapping be used in practice? I assume that trapping is just calling a function with trapping instruction inside the other function, but I don't realize how the outside function can get \"notified\" about the call... Is it possible the author meant by \"some external component\" the debugger? It can make sense because if I set a breakpoint for some strange assembly insruction like MOV EDI, EDI, I'll get to where trapped function is... \n\n",
  "votes": "1",
  "answers": 1,
  "views": "112",
  "tags": [
    "disassembly",
    "windows",
    "binary-analysis",
    "dll"
  ],
  "user": "M. Kalter",
  "time": "Feb 19, 2019 at 19:50",
  "comments": [
    {
      "user": "M. Kalter",
      "text": "Eldad Eilam - Reversing: Secrets of Reverse Engineering",
      "time": null
    },
    {
      "user": "Igor Skochinsky",
      "text": "@CuriousOne please edit the question with this info.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "mov edi, edi is an instruction that is called hotpatch point \n\nthere are several articles about it on the internet, notable among them are: \n\nThe main utility for this instruction is to enable a third party app or Windows update to patch an existing function to a newer function  with minimal side effects when obscure race conditions become a reality  (hard patching any function with a detour will work most of the time or as raymond puts will work 99% of the time \n\nquoting from the article linked\n\nthe mov edi, edi is used in conjunction with five space holders emitted by the compiler before the mov edi, edi like 0xcc or 0x90 \n\nso the patching software can patch in an atomically replaceable short jump and a long jump to a control area\n\n",
      "votes": "1",
      "user": "NirIzr",
      "time": "Feb 19, 2019 at 20:16",
      "is_accepted": true,
      "comments": []
    }
  ]
}