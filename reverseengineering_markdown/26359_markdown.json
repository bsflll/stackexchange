{
  "title": "Name other than \".text\" for the main code section",
  "link": "https://reverseengineering.stackexchange.com/questions/26359/name-other-than-text-for-the-main-code-section",
  "content": "Is it safe to assume that, in the general case, the name of the section containing the user code (not the compiler generated code) is .text? I spot-checked several ARM, x86 and MIPS binaries (PE and ELF) and it seems to be the case.\n\nI suppose the compiler/linker can be configured to chose a different name. In which cases would one want to change it? Are there known examples (CPU arch, compiler, etc.) where there is no .text section? What are other frequently used names? Can user code be put in other sections than the .text section?\n\nOr is the name .text required to be a valid PE / ELF and thus always chosen? The ELF specification for example mentions the name .text several times, so does the PE specification.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "122",
  "tags": [
    "pe",
    "elf",
    "binary-format",
    "compilers"
  ],
  "user": "langlauf.io",
  "time": "Nov 24, 2020 at 15:22",
  "comments": [
    {
      "user": "morsisko",
      "text": "Delphi 7 linker sets the name of code section to CODE",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The section name can be anything, the OS loader only uses section flags to set up permissions when mapping the file into memory. For example, Delphi compiler uses CODE, and various packers use custom names (UPX00 etc.) or even garbage.\n\nAFAIK the only section name that is somewhat enforced is .rsrc - I think Explorer may not show the file icon if resources section is renamed.\n\n",
      "votes": "4",
      "user": "Igor Skochinsky",
      "time": "Nov 25, 2020 at 8:14",
      "is_accepted": true,
      "comments": [
        {
          "user": "David",
          "text": "And itâ€™s not impossible to have more than one code section.",
          "time": null
        }
      ]
    }
  ]
}