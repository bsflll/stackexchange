{
  "title": "Can Ghidra show me the p-code generated for an instruction?",
  "link": "https://reverseengineering.stackexchange.com/questions/21297/can-ghidra-show-me-the-p-code-generated-for-an-instruction",
  "content": "I'm trying to verify the correctness of a custom processor module in Ghidra. The instruction that I am currently analyzing does some fancy stuff with its p-code. Specifically, it uses a bunch of tables that end up forming a p-code tree that is several levels deep when it disassembles that instruction. Since p-code trees are walked in a depth-first order, that means the p-code of the child nodes will be emitted first before their parents. This could result in the p-code of the instruction not working in the order that you might expect.\n\nI would like to be able to have Ghidra (or SLEIGH, or whatever affiliated tool) spit out the full generated p-code after it has walked the tree so I can verify that things are happening in the order that I think they are.\n\n",
  "votes": "4",
  "answers": 2,
  "views": "5k",
  "tags": [
    "disassembly",
    "ghidra"
  ],
  "user": "A. Levy",
  "time": "May 9, 2019 at 7:24",
  "comments": [],
  "answers_data": [
    {
      "content": "For an individual instruction, yes, sure. See this recent blog post of mine and search for \"Jenga\". If you're talking about inspecting the pcode after the decompiler has done its business with it, there's a couple of scripts that user d-millar has repeatedly linked on the Ghidra GitHub that demontrate how to use that form of the pcode from the API, as well as providing some code for output.\n\n",
      "votes": "6",
      "user": "Rolf Rolles",
      "time": "May 9, 2019 at 18:07",
      "is_accepted": false,
      "comments": [
        {
          "user": "A. Levy",
          "text": "This worked for me. I'd like to ask that you update your answer a little before I mark it as the accepted answer. In addition to linking to your blog post, please add an excerpt from the relevant section of the post that describes the steps to display the PCode so that this answer will remain useful in case your blog is down or moved some time in the future. Also, it would be very nice if you included the screenshots from your blog that show how this is done.",
          "time": null
        },
        {
          "user": "Rolf Rolles",
          "text": "Are you familiar with the English expression \"beggars can't be choosers\"? I don't intend to put any more effort into answering your question.",
          "time": null
        }
      ]
    },
    {
      "content": "As Rolf Rolles already mentioned there are two distinct kinds of P-Code that can be displayed and accessed.\n\nThe first kind is the lifted instruction information. You can display it by opening by clicking the \"Edit the Listing Fields\" button at the top of the Listing:\n\n\n\nand then right click the PCode bar and Enable Field:\n\n\nOnce this is enabled you can then also click on some PCode statement, and then run currentLocation in any kind of GhidraScript or shell to access the PCode object associated with it.\n\n\n\nThe second kind of PCode is the one returned by the decompiler. The easiest way to access this is by clicking on the token you are interested in inside the Decompile window, and then run currentLocation.token.pcodeOp inside a shell or script:\n\n\n\n```\n>>> currentLocation.token.pcodeOp\n(register, 0x4000, 2) CALL (ram, 0x10031f898, 8) , (unique, 0x12580, 4)\n\n```\n",
      "votes": "3",
      "user": "Florian Magin",
      "time": "Mar 9, 2021 at 19:57",
      "is_accepted": false,
      "comments": []
    }
  ]
}