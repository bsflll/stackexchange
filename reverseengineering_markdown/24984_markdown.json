{
  "title": "Ghidra Python - cancel decompilation task",
  "link": "https://reverseengineering.stackexchange.com/questions/24984/ghidra-python-cancel-decompilation-task",
  "content": "The way to decompile a function in Ghidra Python is:\n\n```\n    decomp = DecompInterface()\n    decomp.openProgram(currentProgram)\n\n    decompile = decomp.decompileFunction(func, 1000, monitor)\n\n```\nHowever, in some cases, probably due to an error or corner case situations, the decompilation takes much more than expected. \n\nAny ideas on how is it possible to cancel a decompilation task, using any kind of timeout, in Ghidra Python? I know that it's possible in the  GUI. \n\n",
  "votes": "2",
  "answers": 1,
  "views": "249",
  "tags": [
    "decompilation",
    "python",
    "ghidra"
  ],
  "user": "macro_controller",
  "time": "May 11, 2020 at 16:00",
  "comments": [],
  "answers_data": [
    {
      "content": "You are already passing 1000 to a decompileFunction so according to the documentation an exception should be thrown if it takes more time than that. Though, the timeout is in seconds and you set it to pretty high value - probably assuming it's in ms. Change to 1 and check if it will be cancelled with an exception if the time has passed.\n\nAlternatively, you use the monitor object that you are passing also to the decompileFunction method. It contains cancel() function that can cancel the action it has been passed to. You can read more about this object here.\n\n",
      "votes": "3",
      "user": "Paweł Łukasik",
      "time": "May 11, 2020 at 20:18",
      "is_accepted": true,
      "comments": []
    }
  ]
}