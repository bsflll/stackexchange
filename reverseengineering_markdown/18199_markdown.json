{
  "title": "How to reverse engineer mobile app image?",
  "link": "https://reverseengineering.stackexchange.com/questions/18199/how-to-reverse-engineer-mobile-app-image",
  "content": "Scenario\n\nOn my phone I have an app. When I login into the app and goto my profile there is an profile picture of me. I want to that picture because I need it. Simple way is just goto an local shop an take an picture but the cool way would be to get that image from the app.\n\nQuestion\n\nHow can I get the image from the app on my mobile?\n\nHow I think it could be done:\n\nUse wireshark listen to the mobile traffic from the app and somehow try to get the image. Is this the right way or are there better ones?\n\nInformation\n\nAndroid 8.1.1\n\n",
  "votes": "1",
  "answers": 2,
  "views": "859",
  "tags": [
    "android",
    "wireshark"
  ],
  "user": "Timon Post",
  "time": "May 7, 2018 at 7:54",
  "comments": [
    {
      "user": "Pepernoot",
      "text": "Why not just make a print screen?",
      "time": null
    },
    {
      "user": "Timon Post",
      "text": "Because the image size is to small and the image is put in an round shape, I need a bigger rectangle version.",
      "time": null
    },
    {
      "user": "Biswapriyo",
      "text": "You can use thisPacket Capture App or add view-source before the URL of that page and find the direct link of that picture in HTML.",
      "time": null
    },
    {
      "user": "Timon Post",
      "text": "I managed to get to the url, I found encoded test. I have to figure out how to decode it. Maybe decompiling the app is an option. Thanks.",
      "time": null
    },
    {
      "user": "Timon Post",
      "text": "I managed to get my image. The only thing I had to do was creating an script to get the response of that page whits where raw bytes and than convert that to an image. Thanks for the help @Biswapriyo",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Wireshark will be ok, if the traffic is not encrypted. Otherwise you'll have to setup a proxy which will do sniffering of SSL traffic. Also the picture may be sent encoded in some application specific way, so you wouldn't be able to just save it as JPG.\n\nThe most thorough way is to decompile the application and find how exactly it gets the picture from the server.\n\nIf your device is rooted you may try to search the /mnt/sdcard/Android/data/ for folder where the application stores its temporary data. Most likely your profile picture is cached. But it may be stored as BLOB in some database file. So, there are a lot of possibilities... \n\n",
      "votes": "1",
      "user": "Anton Kukoba",
      "time": "May 7, 2018 at 13:30",
      "is_accepted": false,
      "comments": [
        {
          "user": "Timon Post",
          "text": "Rooting my phone is not an option for me. I first have to see if the app uses SSL. Also decompiling is an good option to look at thanks for the help.",
          "time": null
        }
      ]
    },
    {
      "content": "To get an image from an mobile app you first want to know if it is stored on your device or if it is loaded when you log in to your account. In my case it was an profile picture witch will be loaded when you login into your app. In that case you can do the following:\n\nNow you have the image link it depends on the current situation what you want to do.\n\nIn my case it was an API call. Before I created a script to make that API call I wanted to check the source code of the app and see if there are any descriptions or decoding needs to be done. The following steps are not necessary, but if there is some encryption is encoding you can do the following.\n\nNow I know where I can get my image from I can create an C# program to get the bytes from the API and convert that to an image.\n\n```\n// Create a request for the URL.   \nWebRequest request = WebRequest.Create(\n            \"weburl/to/the/api\");\n\n// Get the response.  \nWebResponse response = request.GetResponse();\n\n// Get the stream containing content returned by the server.  \nStream dataStream = response.GetResponseStream();\n\nvar bitmap = Bitmap.FromStream(dataStream);\n\nresponse.Close();\n\nbitmap.Save(\"mypicture.png\");\n\n```\nIf your device is rooted you may try to search the /mnt/sdcard/Android/data/ for folder where the application stores its temporary data. Most likely your profile picture is cached. But it may be stored as BLOB in some database file. Actualy you don't always need root access to access the cache of an app. Go to the folder: /mnt/sdcard/Android/data//Cache. If this folder is not located it can be that the app has made the cache invisible in this case you need to root you phone. \n\n",
      "votes": "1",
      "user": "Timon Post",
      "time": "May 9, 2018 at 6:42",
      "is_accepted": true,
      "comments": [
        {
          "user": "Biswapriyo",
          "text": "Does SDcard require root access? In my Redmi 5A it can be browsed normal folder.",
          "time": null
        },
        {
          "user": "Timon Post",
          "text": "maybe, actualy you do not need always root access to access the cache of an app. Go to the folder: /mnt/sdcard/Android/data/<App>/Cache. If this folder is not located it can be that the app has made the cache invisible in this case you need to root you phone.",
          "time": null
        }
      ]
    }
  ]
}