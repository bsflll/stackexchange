{
  "title": "Decompressing zImage",
  "link": "https://reverseengineering.stackexchange.com/questions/14587/decompressing-zimage",
  "content": "I have a firmware that I've dumped from a phone. I found a uImage header and a zImage after running binwalk. The header says that the image is uncompressed, however I've read that zImages are usually compressed with lzma, xz, gzip, etc. Does this mean the zImage is uncompressed and I can work with it directly, without decompressing it?\n\n```\n352768        0x56200         uImage header, header size: 64 bytes, header CRC: 0xFAAD7908, created: 2015-09-01 19:12:03, image size: 1283768 bytes, Data Address: 0xC8008000, Entry Point: 0xC8008000, data CRC: 0xB0AF08F8, OS: Linux, CPU: ARM, image type: OS Kernel Image, compression type: none, image name: \"Linux-3.4.20-rt31-dvf-v1.2.6.1-r\"\n352832        0x56240         Linux kernel ARM boot executable zImage (little-endian)\n\n```\n",
  "votes": "4",
  "answers": 1,
  "views": "27k",
  "tags": [
    "ida",
    "firmware",
    "decompress"
  ],
  "user": "Dylan Leggio",
  "time": "Feb 6, 2017 at 22:29",
  "comments": [
    {
      "user": "julian",
      "text": "A very common practice (e.g. the typical Linux kernel Makefile) is to use a zImage file. Since a zImage file is self-extracting (i.e. needs no external decompressors), the wrapper would indicate that this kernel is \"not compressed\" even though it actually is.",
      "time": null
    },
    {
      "user": "phk",
      "text": "What does binwalk's entropy analysis tell you?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "the zImage kernel is \"uncompressed\" in the meaning that it can be just copied to some place in RAM and run from there as-is, without additional decompression step. The bulk of the kernel is still compressed (most often with gzip), however there is a small uncompressed stub prepended to it which does the decompression in-place. So, depending on your goals, you can either just disassemble the start of the file to look at the decompressor code, or find the compressed data (searching for 1F 8B is a good starting point), decompress it and then disassemble that.\n\nhttps://acassis.wordpress.com/2015/06/04/how-to-recover-and-decompress-a-linux-kernel-dumped-mtd-partition/\n\nYou can also try the extract-vmlinux script which tries to automate these steps: https://github.com/torvalds/linux/blob/master/scripts/extract-vmlinux\n\n",
      "votes": "5",
      "user": "Igor Skochinsky",
      "time": "Feb 7, 2017 at 13:36",
      "is_accepted": false,
      "comments": []
    }
  ]
}