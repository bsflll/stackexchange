{
  "title": "What does this combination SCAS and STOS?",
  "link": "https://reverseengineering.stackexchange.com/questions/9439/what-does-this-combination-scas-and-stos",
  "content": "I have a simple snippet with several instructions:\n\n```\n01:    mov   edi, [ebp+8]\n02:    mov   edx, edi\n03:    xor   eax, eax\n04:    or    ecx, 0FFFFFFFFh\n05:    repne scasb\n06:    add   ecx, 2\n07:    neg   ecx\n08:    mov   al, [ebp+0Ch]\n09:    mov   edi, edx\n10:    rep   stosb\n11:    mov   eax, edx\n\n```\nI should explain:\n\n",
  "votes": "2",
  "answers": 2,
  "views": "822",
  "tags": [
    "assembly",
    "x86",
    "decompile"
  ],
  "user": "Roman Kiselenko",
  "time": "Jul 25, 2015 at 16:36",
  "comments": [],
  "answers_data": [
    {
      "content": "So what this function does is overwrite a null-terminated string of unknown length (parameter 1) with a sequence of identical bytes (parameter 2).\n\n",
      "votes": "3",
      "user": "Guntram Blohm",
      "time": "Jul 25, 2015 at 8:56",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "emulating the sequence with powershell\n\n```\ncat scasb.ps1\n$edx=$edi=$args[0];  $eax=0; $ecx=-1;\nwhile($edi[$ecx--]){}; $ecx+=2;  $ecx=-$ecx;\n\"length of string using .net method \"+$edi.length;\n\"length of string using repne scasb \"+$ecx;\n$edi=$edx.tochararray()\nwhile($ecx){$edi[--$ecx]=$args[1]};  $ofs=\"\"; $edx;[string]$edi\n\n```\nresult\n\n```\npowershell -f scasb.ps1 \"abracadabra gili gili choo\" r\nlength of string using .net method 26\nlength of string using repne scasb 26\nabracadabra gili gili choo\nrrrrrrrrrrrrrrrrrrrrrrrrrr\n\n```\n",
      "votes": "0",
      "user": "blabb",
      "time": "Jul 27, 2015 at 14:06",
      "is_accepted": false,
      "comments": []
    }
  ]
}