{
  "title": "Passing hex strings to Radare2",
  "link": "https://reverseengineering.stackexchange.com/questions/21086/passing-hex-strings-to-radare2",
  "content": "I can quickly test hex string arguments in gdb like this:\n\n```\nr $'\\x61\\x61\\x61\\x61'\n\n```\nI'd like to do something similar in radare2 but all I can figure out is regular strings:\n\n```\ndoo aaaa\n\n```\nI tried this but the argument isn't interpreted as a hex string\n\n```\ndoo $'\\x61\\x61\\x61\\x61'\n\n```\nHow can I format a hex string argument and pass it to doo?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "549",
  "tags": [
    "radare2",
    "hex"
  ],
  "user": null,
  "time": "Apr 8, 2019 at 23:54",
  "comments": [],
  "answers_data": [
    {
      "content": "There most be a better way than the one I going to show you but this is how I do it:\n\nI make a rarun2 profile. I'm going to call it \"tmp.rr2\" and it will contain this:\n\n```\n #!/usr/bin/rarun2\n arg1=\\x6f\\x60\\x72\\x72\\x76\\x6e\n\n```\nNote: arguments from arg1..arg[N]\n\nThen in the command line type:\n\n```\n $ r2 -r tmp.rr2 -d crackme02\n\n```\nNote: You can update the file and run ood/doo\n\nUPDATE:\nI found a better way so you don't have to make a rarun2 profile: \nRun r2 as normal and type:\n\n```\n> dor arg1=\\x6f\\x60\\x72\\x72\\x76\\x6e\n> doo\n\n```\n",
      "votes": "1",
      "user": "Ricardo",
      "time": "Apr 10, 2019 at 7:27",
      "is_accepted": false,
      "comments": [
        {
          "user": "user28086",
          "text": "+1. the rarun2 profile works! the dor + doo combo isn't working for me.",
          "time": null
        }
      ]
    }
  ]
}