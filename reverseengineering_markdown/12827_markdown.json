{
  "title": "Reverse engineering Android device framework",
  "link": "https://reverseengineering.stackexchange.com/questions/12827/reverse-engineering-android-device-framework",
  "content": "I'm trying to get to an Android device framework source to perform static analysis on it. I'm specifically looking at a Samsung Galaxy S6 device with Android 5.1.1. I downloaded the firmware image, mounted the system partition, and I'm able to see the framework directory with a bunch of jars and sub-directories with arm/arm64 odex files. I managed to convert services.odex to DEX format using oat2jar, and then look at the source using jadx. However, it appears the decompilation or the conversion from odex to dex wasn't complete, as there are references to several missing packages. I have the package names, but how do I get to the relevant jar/odex/dex files?\n\nThanks.\n\n",
  "votes": "3",
  "answers": 1,
  "views": "799",
  "tags": [
    "decompilation",
    "android",
    "jar"
  ],
  "user": "user1118764",
  "time": "Jun 9, 2016 at 3:24",
  "comments": [
    {
      "user": "Vitaly Osipov",
      "text": "All code is on the phone. Most likely in the same location as the framework",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Found it in the boot.oat file.\n\n",
      "votes": "0",
      "user": "user1118764",
      "time": "Jun 12, 2016 at 8:24",
      "is_accepted": true,
      "comments": [
        {
          "user": "NirIzr",
          "text": "You should consider providing more details such as how you found the file, for example.",
          "time": null
        }
      ]
    }
  ]
}