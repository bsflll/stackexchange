{
  "title": "Determine Encryption Algorithm",
  "link": "https://reverseengineering.stackexchange.com/questions/1423/determine-encryption-algorithm",
  "content": "I'm analyzing some software that appears to encrypt its communications over the network, but it does not appear to be SSL.  How can I easily determine what encryption algorithm its using, and maybe find the key?\n\n",
  "votes": "19",
  "answers": 4,
  "views": "22k",
  "tags": [
    "tools",
    "cryptography"
  ],
  "user": "omghai2u",
  "time": "Mar 31, 2013 at 5:37",
  "comments": [
    {
      "user": "perror",
      "text": "Just to make it clear. Do you want to identify the encryption algorithm based on the assembly code of the encryption algorithm or based only on the encrypted packets ?",
      "time": null
    },
    {
      "user": "omghai2u",
      "text": "@perror I have access to the binaries and its resulting network traffic.  So which ever is easier.  Using the IDA plugins suggested fixed my immediate problem, but is there an easier way, for future reference, to do it based solely on network traffic?  I would have assumed that since the traffic had no header or identifiable information that it would not be possible.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Maybe check out this IDA plugin.  \n\nAfter you locate the crypto functions, doing a cross-reference in IDA should allow you to see where the functions are called and likely the key is nearby.  If you can set a break-point on those functions and see what is being passed in for the key, this, of course, would be the easiest way.\n\n",
      "votes": "13",
      "user": "mrduclaw",
      "time": "Mar 31, 2013 at 3:14",
      "is_accepted": true,
      "comments": [
        {
          "user": "0xea",
          "text": "I this there is an updated version, FindCrypt2 hexblog.com/?p=28",
          "time": null
        }
      ]
    },
    {
      "content": "For a bit more advanced way of automatic crypto identification see Felix Gröbert's work on\nAutomatic Identification of Cryptographic Primitives in Software . He uses a pintool to dynamically instrument the code which can allow to even recover keys. The code is also available. The repository contains other tools used in comparison , such as PeID and OllyDBG plugins.\n\n",
      "votes": "9",
      "user": "0xea",
      "time": "Mar 31, 2013 at 10:26",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "I have not used it but there is an open source tool called Aligot that may help when the encryption algorithms have been obfuscated. According to its authors, Aligot can idenfity TEA, MD5, RC4 and AES.\n\nAligot does have an important disclaimer: \n\nDespite the disclaimer, the results indicated in the paper suggest that Aligot  is worth looking into.\n\n",
      "votes": "7",
      "user": "amccormack",
      "time": "Mar 31, 2013 at 3:39",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "A nice combination of findcrypt2 by HexRays and the work done by Felix Gröbert is IDAScope. It's very useful for searching for and identifying encryption algorithms. For more information on IDAScope's Crypto Identification I'd recommend the following link. \n\n",
      "votes": "5",
      "user": "alexanderh",
      "time": "Apr 2, 2013 at 16:49",
      "is_accepted": false,
      "comments": [
        {
          "user": "Lizz",
          "text": "How does it improve on findcrypt2 and HexRays? What makes it better, faster, etc.?",
          "time": null
        }
      ]
    }
  ]
}