{
  "title": "Emulation Project - GameGuard Protected Client",
  "link": "https://reverseengineering.stackexchange.com/questions/16616/emulation-project-gameguard-protected-client",
  "content": "I'm not new to MMO Server Emulation, but I am new to working with a protected Client, and have very basic RCE skills. I would appreciate some direction, and maybe this won't be possible, given the requirements.\n\nThe target is Uncharted Waters Online, now published by Papaya Play, utilizing GameGuard (instead of X-Trap, as the previous publisher).\n\nTwo Priorities:\n\nMy Questions:\n\nThanks all. All I'm looking for is an approach. I can research on my own how to achieve that, but at this point, I don't know enough about GameGuard and Reversing Packet Encryption to know where to start.\n\n",
  "votes": "1",
  "answers": 2,
  "views": "1k",
  "tags": [
    "encryption"
  ],
  "user": "Lokked",
  "time": "Oct 24, 2017 at 19:32",
  "comments": [
    {
      "user": "Lokked",
      "text": "Thanks to the 2 answers and some help from another, I was able to bypass GameGuard, discover the crypt routines (Blowfish) and now I have a stream of unencrypted packets to analyze. Thank you, all! I know this is old, but I just wanted to show my appreciation.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Game hacker here.\n\nTo address your first question, forums like ElitePVPers, OwnedCore, UnknownCheats, MPGH, etc. are going to be your absolute best friend. The people you'll find in those places are steeped in exactly this type of reversing, so starting with a Google search like UnknownCheats GameGuard will yield results like this. That alone should give you a well-rounded summary of the technology and some of its current exploits (meaning you may not have to do very much heavy lifting on your own).\n\nAs for your second question, yes, that's a viable approach, but it can be extremely tough to find your way to decrypted data depending on how well-guarded they keep it (whether through odd Assembly instruction/sub-routine obfuscation, VMs, ridiculous looping, etc., etc.). Once again, those forums should really take you far. It sounds like you already have a good grasp on the language of reversing, so you positing questions around those places should be taken to by the more intelligent and experienced folks.\n\nFinally, I highly recommend the book Attacking Network Protocols if that's one of the key areas that interests you with reversing.\n\nGood luck!\n\n",
      "votes": "2",
      "user": "dsasmblr",
      "time": "Oct 25, 2017 at 20:43",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "I don't think this question will get much traction here given it's a very specific, while still being quite broad. That being said some input for general game hacking: \n\n",
      "votes": "1",
      "user": null,
      "time": "Oct 25, 2017 at 13:45",
      "is_accepted": false,
      "comments": [
        {
          "user": "Lokked",
          "text": "Can you point me to what win32 APIs could possibly be used to either load (LoadLibrary?) or Stream (just Send/Recv?)?",
          "time": null
        },
        {
          "user": "user15338",
          "text": "This is where the actual reversing comes in as the game could use any number of library functions to achieve these tasks. Although it is common for games to use third party networking libraries rather than roll their own (compress/encryption is complicated). Check the games import table, and function calls for clues. Two common networking libraries are Raknet, and Oodle Network, although it could be any number of other libraries - as a general rule of thumb, if you don't know what a DLL or function does, google it.",
          "time": null
        }
      ]
    }
  ]
}