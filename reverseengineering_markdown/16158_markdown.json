{
  "title": "How can I resolve dynamic addresses (for APIs,DLLs etc.) to disassemble in IDA Pro?",
  "link": "https://reverseengineering.stackexchange.com/questions/16158/how-can-i-resolve-dynamic-addresses-for-apis-dlls-etc-to-disassemble-in-ida-p",
  "content": "I have memory dump of injected process. But the malware load libraries/functions dynamically and I need to resolve this. For example, If malware will use createThread, first get address of this function with getprocaddress then kept the pointer into a variable. To call function use variable.\n\nSo I need to resolve dynamic addresses to disassemble. How can I do it?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "1k",
  "tags": [
    "ida",
    "dynamic-linking",
    "memory-dump"
  ],
  "user": "Pasazade",
  "time": "Aug 22, 2017 at 7:03",
  "comments": [],
  "answers_data": [
    {
      "content": "you could write a script which will get all xref's toGetProcAddressthen go one by one to checkGetProcAddress second parametes lpProcName next follow disassembly trace return value eax to first memory write e.g. mov dword ptr [unknown_ptr], eax and rename the pointer.\n\nFor inspiration look at IDAscope plugin:\nhttps://hex-rays.com/contests/2012/index.shtml#idascope\nor funcap\nhttps://hex-rays.com/contests/2013/index.shtml#funcap\n\n",
      "votes": "1",
      "user": "krusty",
      "time": "Aug 22, 2017 at 12:00",
      "is_accepted": false,
      "comments": [
        {
          "user": "the_endian",
          "text": "Is this still possible to do statically even if a custom loader or calls to GetProcAddress itself is generated dynamically?",
          "time": null
        },
        {
          "user": "krusty",
          "text": "yes but more work and the results might be not that good",
          "time": null
        }
      ]
    }
  ]
}