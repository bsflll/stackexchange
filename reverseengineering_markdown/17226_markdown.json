{
  "title": "Difference between 'readelf' and 'radare2' addresses",
  "link": "https://reverseengineering.stackexchange.com/questions/17226/difference-between-readelf-and-radare2-addresses",
  "content": "I have an MIPS binary file that I want to analyze. I am having a little trouble understanding the way elfread and r2 interpret the adressing scheme from a binary. \n\nFor example, r2 finds a function named bcmVlan_setDefaultAction at the location 0x0800d318:\n\n```\n[0x0800fbb8]> s sym.bcmVlan_setDefaultAction  \n[0x0800d318]>\n\n```\nWhile as per the .symtab table, this function is located at 0x0000d2c8\n\n```\n$ readelf -a bcmvlan.ko | grep bcmVlan_setDefaultAction\n123: 0000d2c8   616 FUNC    GLOBAL DEFAULT    2 bcmVlan_setDefaultAction\n\n```\nI tried some other functions too. It seems the addresses shown by readelf and r2 are corelated, but I can't find why this difference is there.\n\nRegards.\n\n",
  "votes": "5",
  "answers": 1,
  "views": "921",
  "tags": [
    "elf",
    "radare2",
    "address"
  ],
  "user": "Fulcrum",
  "time": "Jan 17, 2018 at 17:24",
  "comments": [
    {
      "user": "Megabeets",
      "text": "If the addresses are correlated, it might be because of different base addresses. Please compare the output of readelf -l <filename> | grep LOAD to the output of f~LOAD0 from radare2. You can also check radare's base address using e bin.baddr. To rebase, use r2 -B <0xaddr> <filename>.",
      "time": null
    },
    {
      "user": "Fulcrum",
      "text": "No instance of 'LOAD' found by r2 or readelf. It seems the base address used by r2 is 0x0800000. This explains part of the problem. BTW I found your posts about 'Gameboy' and 'Simple Crackme' to be very helpful and interesting.",
      "time": null
    },
    {
      "user": "Megabeets",
      "text": "Thanks! Mind to share the binary? It will help us understand better.",
      "time": null
    },
    {
      "user": "Fulcrum",
      "text": "That file is actually a linux kernel module (.ko) for MIPS architecture. I pulled it from my router. 'modinfo' shows that the file license is 'proprietary'. I'm not sure if I am allowed to share it. Any idea?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The symbol table of readelf (.symtab) shows you the offset of each symbol from the base of the section the symbol is in.\n\nAs you showed us, when you listing the table you get something like that:\n\n```\n$ readelf --symbols <filename>\nSymbol table '.symtab' contains 471 entries:\n   Num:    Value  Size Type    Bind   Vis      Ndx Name\n     0: 00000000     0 NOTYPE  LOCAL  DEFAULT  UND\n     1: 00000000     0 SECTION LOCAL  DEFAULT    2\n     2: 00000000     0 SECTION LOCAL  DEFAULT    4\n     3: 00000000     0 SECTION LOCAL  DEFAULT    6\n     4: 00000000     0 SECTION LOCAL  DEFAULT    8\n     5: 00000000     0 SECTION LOCAL  DEFAULT   10\n     6: 00000000     0 SECTION LOCAL  DEFAULT   12\n       ...    ... Truncated for readability ...   ...\n   462: 0000d2c8   616 FUNC    GLOBAL DEFAULT    2 bcmVlan_setDefaultAction\n\n```\nOne column is interested us especially, which is the Ndx column. readelf identifies each section by an integer index. This is what Ndx stands for. The output of the .symtab shows us that our function bcmVlan_setDefaultAction belongs to Ndx number 2.\n\nTo see which section has index number \"2\" you should execute:\n\n```\n$ readelf --sections <filename>\n\n```\nWhen you'll execute it you'd probably see something like this:\n\n```\nThere are ?? section headers, starting at offset 0x????:\nSection Headers:\n\n  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al\n  [ 0]                   NULL            00000000 000000 000000 00      0   0  0\n  [ 1] <section name>    <type>          00000000 0000?? 0000?? ??   A  0   0  4\n  [ 2] .text             <type>          00000000 000050 00???? 00  AX  0   0 16\n\n```\nYou function will probably be in the .text section which its base address (Off column) is 0x000050, i.e 0x50 bytes from the beginning of the file.\n\nThen, it should all make sense since it is what you get when subtracting the address you got from readelf from the one you got from radare2:\n\n```\n0x0d318 - 0x0d2c8 = 0x50. \n\n```\n",
      "votes": "5",
      "user": "Megabeets",
      "time": "Jan 18, 2018 at 9:10",
      "is_accepted": true,
      "comments": []
    }
  ]
}