{
  "title": "How to attach debugger to app if it has protection against attaching?",
  "link": "https://reverseengineering.stackexchange.com/questions/3057/how-to-attach-debugger-to-app-if-it-has-protection-against-attaching",
  "content": "Sometimes I've tried to attach Ollydbg to applications those have some protection against debuggers, but I have never coded any of these applications and did not see this protection in many applications... So it looks like it is not hard to bypass this, however I am curious and never tried it before. How do you do it guys? (at least some examples on some simple program).\n\nThanks in advance.\n\n",
  "votes": "6",
  "answers": 1,
  "views": "9k",
  "tags": [
    "anti-debugging"
  ],
  "user": "Wiggler Jtag",
  "time": "Nov 19, 2013 at 20:14",
  "comments": [
    {
      "user": "perror",
      "text": "What kind of anti-debug protection are you refering to ? Testing ptrace can only be done with a test which will be localized in the code. And, I am not sure that attaching to a running software will cause a 0xcc to be written (does it?). So, self-check routine to detect modification of the source code will fail as wel.. My guess is that you just need to be lucky when you attach you debugger to the program and to stop it in a safe mode.",
      "time": null
    },
    {
      "user": "newgre",
      "text": "Completely platform dependent. On windows, a common trick is to patch certain routines (in ntdll) that are invoked by the kernel as soon as the debugger is attached. A solution to this is to simply restore ntdll in memory right before attaching. I think this question is pretty borad, can you be more specific?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Anti-attaching depends heavily on the fact that windows creates a remote thread in the target\nprocess. What is specific about this thread is usually used to detect attaching.\n\nFor example: \nThe entry point Windows chooses for the attaching thread is by default the \"DbgUiRemoteBreakin\" function. Anti-attaching tricks usually hook this function or its\nsibling, the \"DbgBreakPoint\" function.\n\nAlso, The fact that the attaching thread (like most normal threads) will have\nthe associated TLS callbacks called is also exploited to detect attaching.\n\nDebug blocks, NtContinue, ThreadHideFromDebugger etc.\n\nhttp://waleedassar.blogspot.de/2011/12/debuggers-anti-attaching-techniques.html\nhttp://waleedassar.blogspot.de/2011/12/debuggers-anti-attaching-techniques_11.html\nhttp://waleedassar.blogspot.de/2011/12/debuggers-anti-attaching-techniques_13.html\nhttp://waleedassar.blogspot.de/2012/02/debuggers-anti-attaching-techniques_15.html\nhttp://waleedassar.blogspot.de/2012/11/sizeofstackreserve-as-anti-attaching.html\n\n",
      "votes": "8",
      "user": "waliedassar",
      "time": "Nov 19, 2013 at 22:07",
      "is_accepted": true,
      "comments": []
    }
  ]
}