{
  "title": "Where can I learn about code instrumentation?",
  "link": "https://reverseengineering.stackexchange.com/questions/8577/where-can-i-learn-about-code-instrumentation",
  "content": "Currently I am learning about profiling parallel programs. All the profilers heavily use all kinds of instrumentations but this topic is not well explained. Do you know any good sources from which I could learn about instrumentation (static, binary, dynamic)?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "282",
  "tags": [
    "binary-analysis",
    "static-analysis",
    "dynamic-analysis",
    "instrumentation"
  ],
  "user": "Kris",
  "time": "Mar 27, 2015 at 16:01",
  "comments": [],
  "answers_data": [
    {
      "content": "Before jumping straight to interesting articles and sources I'll start by defining the key words, just in case.\n\nBoth of these analyses can be applied to a binary file (meaning an executable program), and that's what we call binary analysis.\nOn the other hand, static analysis can be applied on source code as well as binary. Lint, for example, performs static analysis in order to find buggy code constructs.\n\nThere aren't many detailed references I can cite, rather a set of scientific publications which span the use and benefits of those techniques, along with some interesting algorithms. \n\nFor static analysis I would recommend this collection of articles : Static Analysis 20th International Symposium, SAS 2013, Seattle, WA, USA, June 20-22, 2012, Proceedings. \n\nFor dynamic analysis I would recommend you going through the publications around of MAQAO, DynInst, ScoreP, and TAU \n\n",
      "votes": "4",
      "user": "yaspr",
      "time": "Mar 28, 2015 at 6:21",
      "is_accepted": true,
      "comments": []
    }
  ]
}