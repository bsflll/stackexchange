{
  "title": "IDApro subroutine analysis",
  "link": "https://reverseengineering.stackexchange.com/questions/4694/idapro-subroutine-analysis",
  "content": "I am using IDA to find out parameters of a routine in a DLL. I browsed to the routine in question and saw that IDA has automatically done that job for me and put a comment like this:\n\n```\n ; =============== S U B R O U T I N E =======================================\nCODE:0048E5BC\nCODE:0048E5BC ; Attributes: bp-based frame\nCODE:0048E5BC\nCODE:0048E5BC ; int __stdcall Active(int, double, double, double, char, char, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, double, double, char)\n\n```\nI want to know how much reliable this info is if I want to call this function in C# (using p/invoke)?\n\n",
  "votes": "3",
  "answers": 1,
  "views": "2k",
  "tags": [
    "ida",
    "dll",
    "functions",
    "c#"
  ],
  "user": "user6918",
  "time": "Jun 25, 2014 at 6:42",
  "comments": [],
  "answers_data": [
    {
      "content": "It's not very reliable. IDA can't determine types beyond analyzing the size and type of loads and stores. For instance IDA doesn't tell the difference between a pointer to a type and an integer, given that they're the same size, as far as I know. Other than that all it can do is propagate type information entered by the user. I believe the Hex-Rays decompiler does a bit more advanced argument analysis but it's also not able to extract correct function signatures in many cases.\n\nArgument counts can be guessed from stack pushes and stack accesses on x86 but it's important to remember that there's no requirement that the calling convention use the stack at all. On less register starved architectures, determining argument counts is bit harder due to more efficient calling conventions using registers instead of the stack.\n\nIf you want to actually call that function it's extremely likely that you'll want to analyze it in more detail than what IDA gives you automatically.\n\n",
      "votes": "6",
      "user": "Peter Andersson",
      "time": "Jun 25, 2014 at 9:40",
      "is_accepted": true,
      "comments": [
        {
          "user": "Dominik Antal",
          "text": "Analyze it with olly, put a INT3 breakpoint on the function and observe the stack :)",
          "time": null
        }
      ]
    }
  ]
}