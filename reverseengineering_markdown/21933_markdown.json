{
  "title": "Understanding (pseudo-)C function from a video game [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/21933/understanding-pseudo-c-function-from-a-video-game",
  "content": "I recently found a function using IDA within a game that creates a CRC from a string. I don't understand much of the code or how the game takes in the string as data.\n\n```\n__int64 __fastcall ITF::StrToCRC_Template<1u>(unsigned __int8 *a1, unsigned int a2)\n{\n  unsigned int v2; // w8\n  int v3; // w10\n  unsigned int v4; // w11\n  int v5; // w9\n  int v6; // w12\n  int v7; // w13\n  int v8; // w14\n  unsigned int v9; // w12\n  int v10; // w13\n  int v11; // w15\n  unsigned int v12; // w12\n  int v13; // w14\n  int v14; // w12\n  int v15; // w13\n  int v16; // w9\n  int v17; // w12\n  int v18; // w15\n  unsigned int v19; // w14\n  int v20; // w15\n  unsigned int v21; // w14\n  int v22; // w13\n  int v23; // w14\n  int v24; // w15\n  int v25; // w8\n  int v26; // w9\n  unsigned int v27; // w12\n  unsigned __int8 v28; // w13\n  int v29; // w15\n  unsigned int v30; // w12\n  unsigned __int8 v31; // w13\n  unsigned int v32; // w10\n  int v33; // w9\n  unsigned int v34; // w8\n  unsigned int v35; // w10\n  int v36; // w9\n  unsigned int v37; // w8\n  unsigned int v38; // w10\n  unsigned int v39; // w10\n  int v40; // w11\n  int v41; // w11\n  int v42; // w11\n  int v43; // w11\n  int v44; // w11\n  int v45; // w11\n  int v46; // w11\n  int v47; // w11\n  int v48; // w11\n  int v49; // w11\n  int v50; // w11\n  int v51; // w9\n  unsigned int v52; // w8\n  unsigned int v53; // w10\n  int v54; // w9\n  unsigned int v55; // w8\n  unsigned int v56; // w10\n  int v57; // w9\n\n  v2 = -1640531527;\n  v3 = 0;\n  v4 = a2;\n  v5 = -1640531527;\n  if ( a2 >= 0xC )\n  {\n    do\n    {\n      v6 = *a1;\n      v7 = a1[1];\n      if ( (unsigned int)(v6 - 97) <= 0x19 )\n        v6 += 224;\n      v8 = a1[2];\n      if ( (unsigned int)(v7 - 97) <= 0x19 )\n        LOBYTE(v7) = v7 - 32;\n      v9 = v6 & 0xFFFF00FF | ((unsigned __int8)v7 << 8);\n      v10 = a1[3];\n      if ( (unsigned int)(v8 - 97) <= 0x19 )\n        LOBYTE(v8) = v8 - 32;\n      if ( (unsigned int)(v10 - 97) <= 0x19 )\n        LOBYTE(v10) = v10 - 32;\n      v11 = a1[4];\n      v12 = v9 & 0xFF00FFFF | ((unsigned __int8)v8 << 16);\n      v13 = v11 + 224;\n      v14 = v12 & 0xFFFFFF | ((unsigned __int8)v10 << 24);\n      v15 = a1[6];\n      v16 = v14 + v5;\n      v17 = a1[8];\n      if ( (unsigned int)(v11 - 97) > 0x19 )\n        v13 = a1[4];\n      v18 = a1[5];\n      if ( (unsigned int)(v18 - 97) <= 0x19 )\n        LOBYTE(v18) = v18 - 32;\n      v19 = v13 & 0xFFFF00FF | ((unsigned __int8)v18 << 8);\n      if ( (unsigned int)(v15 - 97) <= 0x19 )\n        LOBYTE(v15) = v15 - 32;\n      v20 = a1[7];\n      v21 = v19 & 0xFF00FFFF | ((unsigned __int8)v15 << 16);\n      if ( (unsigned int)(v20 - 97) <= 0x19 )\n        LOBYTE(v20) = v20 - 32;\n      if ( (unsigned int)(v17 - 97) <= 0x19 )\n        v17 += 224;\n      v22 = a1[9];\n      v23 = v21 & 0xFFFFFF | ((unsigned __int8)v20 << 24);\n      v24 = a1[10];\n      v25 = v23 + v2;\n      v26 = v16 - v25;\n      if ( (unsigned int)(v22 - 97) <= 0x19 )\n        LOBYTE(v22) = v22 - 32;\n      v27 = v17 & 0xFFFF00FF | ((unsigned __int8)v22 << 8);\n      v28 = v24 - 32;\n      if ( (unsigned int)(v24 - 97) > 0x19 )\n        v28 = a1[10];\n      v29 = a1[11];\n      a1 += 12;\n      v30 = v27 & 0xFF00FFFF | (v28 << 16);\n      if ( (unsigned int)(v29 - 97) <= 0x19 )\n        v31 = v29 - 32;\n      else\n        v31 = v29;\n      v32 = (v30 & 0xFFFFFF | (v31 << 24)) + v3;\n      v33 = (v26 - v32) ^ (v32 >> 13);\n      v34 = (v25 - v32 - v33) ^ (v33 << 8);\n      v35 = (v32 - v33 - v34) ^ (v34 >> 13);\n      v36 = (v33 - v34 - v35) ^ (v35 >> 12);\n      v37 = (v34 - v35 - v36) ^ (v36 << 16);\n      v38 = (v35 - v36 - v37) ^ (v37 >> 5);\n      v5 = (v36 - v37 - v38) ^ (v38 >> 3);\n      v2 = (v37 - v38 - v5) ^ (v5 << 10);\n      v3 = (v38 - v5 - v2) ^ (v2 >> 15);\n      v4 -= 12;\n    }\n    while ( v4 > 0xB );\n  }\n  v39 = v3 + a2;\n  switch ( v4 )\n  {\n    case 1u:\n      goto LABEL_59;\n    case 2u:\n      goto LABEL_56;\n    case 3u:\n      goto LABEL_53;\n    case 4u:\n      goto LABEL_50;\n    case 5u:\n      goto LABEL_47;\n    case 6u:\n      goto LABEL_44;\n    case 7u:\n      goto LABEL_41;\n    case 8u:\n      goto LABEL_38;\n    case 9u:\n      goto LABEL_35;\n    case 0xAu:\n      goto LABEL_32;\n    case 0xBu:\n      v40 = a1[10];\n      if ( (unsigned int)(v40 - 97) <= 0x19 )\n        v40 += 224;\n      v39 += v40 << 24;\nLABEL_32:\n      v41 = a1[9];\n      if ( (unsigned int)(v41 - 97) <= 0x19 )\n        LOBYTE(v41) = v41 - 32;\n      v39 += (unsigned __int8)v41 << 16;\nLABEL_35:\n      v42 = a1[8];\n      if ( (unsigned int)(v42 - 97) <= 0x19 )\n        LOBYTE(v42) = v42 - 32;\n      v39 += (unsigned __int8)v42 << 8;\nLABEL_38:\n      v43 = a1[7];\n      if ( (unsigned int)(v43 - 97) <= 0x19 )\n        v43 += 224;\n      v2 += v43 << 24;\nLABEL_41:\n      v44 = a1[6];\n      if ( (unsigned int)(v44 - 97) <= 0x19 )\n        LOBYTE(v44) = v44 - 32;\n      v2 += (unsigned __int8)v44 << 16;\nLABEL_44:\n      v45 = a1[5];\n      if ( (unsigned int)(v45 - 97) <= 0x19 )\n        LOBYTE(v45) = v45 - 32;\n      v2 += (unsigned __int8)v45 << 8;\nLABEL_47:\n      v46 = a1[4];\n      if ( (unsigned int)(v46 - 97) <= 0x19 )\n        LOBYTE(v46) = v46 - 32;\n      v2 += (unsigned __int8)v46;\nLABEL_50:\n      v47 = a1[3];\n      if ( (unsigned int)(v47 - 97) <= 0x19 )\n        v47 += 224;\n      v5 += v47 << 24;\nLABEL_53:\n      v48 = a1[2];\n      if ( (unsigned int)(v48 - 97) <= 0x19 )\n        LOBYTE(v48) = v48 - 32;\n      v5 += (unsigned __int8)v48 << 16;\nLABEL_56:\n      v49 = a1[1];\n      if ( (unsigned int)(v49 - 97) <= 0x19 )\n        LOBYTE(v49) = v49 - 32;\n      v5 += (unsigned __int8)v49 << 8;\nLABEL_59:\n      v50 = *a1;\n      if ( (unsigned int)(v50 - 97) <= 0x19 )\n        LOBYTE(v50) = v50 - 32;\n      v5 += (unsigned __int8)v50;\n      break;\n    default:\n      break;\n  }\n  v51 = (v5 - v2 - v39) ^ (v39 >> 13);\n  v52 = (v2 - v39 - v51) ^ (v51 << 8);\n  v53 = (v39 - v51 - v52) ^ (v52 >> 13);\n  v54 = (v51 - v52 - v53) ^ (v53 >> 12);\n  v55 = (v52 - v53 - v54) ^ (v54 << 16);\n  v56 = (v53 - v54 - v55) ^ (v55 >> 5);\n  v57 = (v54 - v55 - v56) ^ (v56 >> 3);\n  return (v56 - v57 - ((v55 - v56 - v57) ^ (v57 << 10))) ^ (((v55 - v56 - v57) ^ (v57 << 10)) >> 15);\n}\n\n```\nThis is the code, I am trying to convert this to a Python function so I can integrate it into a program I am making. Could anyone help me start converting this? Or make the code more understandable?\n\n",
  "votes": "-1",
  "answers": 1,
  "views": "188",
  "tags": [
    "c",
    "hexrays"
  ],
  "user": "mzkoops56",
  "time": "5 years ago",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "Hi and welcome to RE.SE. How about renaming some of the variables to make the code more readable? Unless Hexrays has lost that functionality, that should be easily doable. It's the inherited interactive trait from the acronym IDA.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "v2 = -1640531527; \n\nC:>python -c \"print hex(0x100000000-1640531527)\"\n0x9e3779b9L  \n\ngoogle  0x9e3779b9L \n\nfirst hit TEA algorithm\n\ngoogle python tea\n\nfirst hit pytea quoting from the site below\n\n```\nfrom pytea import TEA\nkey = os.urandom(16)\nprint('key is', key)\ncontent = 'Hello, 你好'\ntea = TEA(key)\ne = tea.encrypt(content.encode())\nprint('encrypt hex:', e.hex())\nd = tea.decrypt(e)\nprint('decrypt:', d.decode())\n\n```\ni would suggest check pytea output with the functions output before moving further to understand if the algo is modified or used differently\n\n",
      "votes": "2",
      "user": "blabb",
      "time": "Aug 19, 2019 at 22:10",
      "is_accepted": false,
      "comments": [
        {
          "user": "mzkoops56",
          "text": "I believe they modified the function because the value that comes out of the function is normally a 32 bit integer. TEA encrypts the whole message and because of this the value doesn't match.",
          "time": null
        }
      ]
    }
  ]
}