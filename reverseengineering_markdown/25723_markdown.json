{
  "title": "what means \"ilegal use of registers\"?",
  "link": "https://reverseengineering.stackexchange.com/questions/25723/what-means-ilegal-use-of-registers",
  "content": "I read pe program using a Pe Reader to view all sections, the .text section starts is \"0x0001000\":\n\nWhat is in the pe program reader:\n\n\n\nAnd is this what i see on the debugguer :\n\n\n\n",
  "votes": "0",
  "answers": 1,
  "views": "174",
  "tags": [
    "assembly",
    "ollydbg",
    "disassemblers",
    "decompile",
    "immunity-debugger"
  ],
  "user": "Loliconaoquadrado",
  "time": "Aug 22, 2020 at 16:37",
  "comments": [],
  "answers_data": [
    {
      "content": "As you can see here, 0xFF is a “jump far indirect” opcode and this version of jump requires operand to be a memory address.\n\nWhile using this type of jump, you cannot use register as an operand and hence the error message you see.\n\nAnd I don’t think the snippet you provided contains the actual code - it rather looks like data, though OllyDbg still tries to disassemble it.\n\nYou will find the code at offset 0x1000 relative to the image base which will likely be 0x400000 in case of exe and 0x10000000 in case of dll.\n\n",
      "votes": "1",
      "user": "bart1e",
      "time": "Aug 22, 2020 at 21:59",
      "is_accepted": true,
      "comments": []
    }
  ]
}