{
  "title": "Find functions signatures in Ida?",
  "link": "https://reverseengineering.stackexchange.com/questions/24874/find-functions-signatures-in-ida",
  "content": "I didn't understand the subject of find function in Ida via signature.\n\nIf I understand well that way helps to recognize libraries functions in static binary(in dynamic binary I can see the functions name) , and there is a database that contain lot of known functions with signatures, right?\n\nSo how can I use that? Is that build-in in Ida? Or is there any plugin that I need to use?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "4k",
  "tags": [
    "ida",
    "static-analysis",
    "ida-plugin"
  ],
  "user": "yfr24493AzzrggAcom",
  "time": "Apr 30, 2020 at 21:23",
  "comments": [],
  "answers_data": [
    {
      "content": "IDA works with FLIRT (Fast Library Identification and Recognition Technology) signatures. These “signatures” are basically sequences of assembly instructions that are found in functions. IDA has built-in signatures for common libraries. You can find signatures for other libraries, or create your own for functions you identify.\n\nIDA also reads given names from debugging symbols and exports that are part of the binary and can read .pdb files with symbols for matching binaries.\n\n",
      "votes": "2",
      "user": "Yotamz",
      "time": "May 2, 2020 at 22:08",
      "is_accepted": false,
      "comments": [
        {
          "user": "yfr24493AzzrggAcom",
          "text": "I didn't understand the using of FLIRT , if it is dynamic binary, you can see the function name, so IDA using FLIRT in static binary? Is that identify function automatically? Or do I need to do something?",
          "time": null
        },
        {
          "user": "Yotamz",
          "text": "IDA scans the binary using FLIRT signatures as part of its auto analysis. As anything, it could fail. You can force running the signature search, or change the FLIRT signature files in the file menu: File > Load > FLIRT signature file. If the code changes during dynamic execution (unpacking, etc.), run the signature search again.",
          "time": null
        }
      ]
    }
  ]
}