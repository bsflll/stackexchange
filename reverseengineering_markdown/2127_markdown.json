{
  "title": "How to identify function calls in IDA Pro's disassembly?",
  "link": "https://reverseengineering.stackexchange.com/questions/2127/how-to-identify-function-calls-in-ida-pros-disassembly",
  "content": "I am reverse engineering some code from which IDA has generated the following disassembly. These specific lines of code are just for illustrative purposes. Notice that the third line does not call a specifc function by its name but rather by its address.\n\n```\nmov rcx, [rsp+128h+var_D8]    // reg CX gets the address at stack pointer+128h+var_D8 bytes \nmov r8, [rcx]                 // the address at reg CX is stored to reg r8\ncall qword ptr [r8 + 18h]     // at address rax+18h, call function defined by qword bytes\n\n```\nI'm interested in determining which function is being called. What mechanisms, tools, tricks, etc. can I use to determine which function in the dissassembly a call qword ptr <address> is referring to? I'm up for trying other disassembler programs.\n\nFrom an answer to my previous question, this is known as an \"indirect call\" or (perhaps a \"virtual function call\"). The disassembly has many of these, so how do I resolve them? In addition, IDA has identified hundreds of functions. How do I go about figuring out which one was actually being called during any given indirect call (or virtual call)? \n\n",
  "votes": "10",
  "answers": 1,
  "views": "15k",
  "tags": [
    "ida",
    "disassembly",
    "virtual-functions"
  ],
  "user": "clark",
  "time": "Apr 13, 2017 at 12:49",
  "comments": [],
  "answers_data": [
    {
      "content": "The easiest way to find out the function in question would probably be by dynamic analysis. You can easily do this by placing a breakpoint on that instruction in a debugger and examining the registers. \n\nA more general solution would probably involve some scripting to record all calls and add that information to the IDA database. Funcap plugin does something similar if not exactly what you are looking for:\n\n",
      "votes": "11",
      "user": "0xea",
      "time": "May 28, 2013 at 16:52",
      "is_accepted": true,
      "comments": []
    }
  ]
}