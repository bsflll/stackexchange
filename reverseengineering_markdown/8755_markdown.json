{
  "title": "How was the Zero Flag implemented on Z80 ALU?",
  "link": "https://reverseengineering.stackexchange.com/questions/8755/how-was-the-zero-flag-implemented-on-z80-alu",
  "content": "Z80 was a popular 8-bit processor with a 4-bit ALU.\n\n\n\nImplementing a zero flag for a register should be straight forward, it would be a logical NOR of all the bits on the register.\n\n\n\nSomething like that would work for a small number of inputs. As for a 64-bit processor you cannot make one gigantic NOR gate with 64 inputs. The fan-in would be too high. 8 transistors would be in series. The circuit capacitance would be high thus slowing down everything else.\n\nI can see some other options.\n\n\n\n\n\n\n\n\nKen Shirriff wrote a nice article about reverse engineering the Z80 ALU. However when it comes to the zero flag he states:\n\nSo, although they are simple circuits I would like to know exactly how they were implemented and if they used any of the implementations proposed above or something else completely different.\n\n",
  "votes": "8",
  "answers": 1,
  "views": "1k",
  "tags": [
    "hardware"
  ],
  "user": "GabrielOshiro",
  "time": "Apr 27, 2015 at 20:25",
  "comments": [
    {
      "user": "caskey",
      "text": "Your assertion that the \"fan in would be too high\" has hidden assumptions that may not be valid.",
      "time": null
    },
    {
      "user": "Jason Geffner",
      "text": "Please ask instead at electronics.stackexchange.com",
      "time": null
    },
    {
      "user": "GabrielOshiro",
      "text": "@JasonGeffner The question is about reverse engineering. I want to know exactly how something was implemented. I have no doubts on how the electronics behind it work.",
      "time": null
    },
    {
      "user": "Spektre",
      "text": "@GabrielOshiro nice images but you forget the simplest one: wired or + single negator. The zero flag can be located anywhere (ALU,Register file,any of the data BUS,...)  and also would need some gating because not all operations change ZF. The truth can be found only by examinaning the DIE (which is time consuming) or ask someone that created the Z80 circuitry/die masks inside Zilog Company ...or the clones copies like U880A ...",
      "time": null
    },
    {
      "user": "Jason Geffner",
      "text": "For reference, here's the question on the Electrical Engineering Stack Exchange.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Well if you want to know how it was done exactly\n\nThen download the Z80 die shot of model you want to investigate, crop the ALU part and identify all the gates you can until you dig to Zero flag your self (sorry for indirect answer).\n\nHere my Z80 ALU post processed die shot\n\n\n\nTry to identify all gates and buses you can (and mark them to the image)\n\n\n\nWhen found familiar structure like Wire OR, (N)OR cascade, ... then you will know for sure. Just try to find the basic components like:\n\n\n\nform the circuit schematics and make some sense of it.\n\n",
      "votes": "13",
      "user": "Spektre",
      "time": "Jun 8, 2016 at 11:55",
      "is_accepted": true,
      "comments": [
        {
          "user": "Jason C",
          "text": "Of course Spektre is telling you how to reverse engineer it, you did ask on a site called Reverse Engineering! :)",
          "time": null
        },
        {
          "user": "GabrielOshiro",
          "text": "@Spektre Thanks for you answer! You got the reward :P",
          "time": null
        }
      ]
    }
  ]
}