{
  "title": "Using NAND flash dump with OOB data",
  "link": "https://reverseengineering.stackexchange.com/questions/22125/using-nand-flash-dump-with-oob-data",
  "content": "I have NAND flash memory dump, as a separate MTD partitions copied from NAND flash chip use built-in nanddump commands. I need to reflash some corrupted MTD partitions. In order to reflash partitions properly, should I use the partition dump that contain only the actual data, cleaned first from OOB data dummy chunks?\n\n",
  "votes": "1",
  "answers": 2,
  "views": "1k",
  "tags": [
    "binary-analysis",
    "firmware",
    "flash",
    "memory-dump"
  ],
  "user": "minto",
  "time": "Sep 14, 2019 at 14:02",
  "comments": [],
  "answers_data": [
    {
      "content": "This depends very much on how exactly you plan to write the data back; some options would accept only \"payload\", others may need OOB too. \n\nIf you use U-Boot's nand write, it seems it accepts data without OOB but you need to erase target pages manually first.\n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Sep 16, 2019 at 9:50",
      "is_accepted": false,
      "comments": [
        {
          "user": "minto",
          "text": "I used U-boot built-in commands nand erase and nand write. Before flashing I used python script to process dump and separate the actual data from OOB data. The test was unsuccessful, when I tried write data, an error was shown Attempt to write non page aligned data. 13548080 bytes written: ERROR. Before this I tried also write raw partition dump (with OOB), but linux kernel didn't loaded, not sure what was wrong with my dump.",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "@minto maybe this will help e2e.ti.com/support/legacy_forums/embedded/linux/f/354/t/â€¦",
          "time": null
        },
        {
          "user": "minto",
          "text": "Cleaned dump is 13548080 bytes in size. NAND device have Block size 16384, page size 512, OOB size 16 bytes. 13548080 bytes is incomplete 26462 pages. A complete 26462 pages is 26462 x 512 = 13548544 bytes. The difference is 464 bytes: so need I append these 464 bytes for the complete page?",
          "time": null
        }
      ]
    },
    {
      "content": "It depends. For example Samsung XSR stores information about the blocks in spare area, thus you need to have to dump both data and spare.\n\n",
      "votes": "1",
      "user": "Anton Kukoba",
      "time": "Oct 16, 2019 at 10:34",
      "is_accepted": false,
      "comments": []
    }
  ]
}