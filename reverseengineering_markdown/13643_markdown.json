{
  "title": "Intel PIN: How to log the value of the fs and gs registers at every instruction?",
  "link": "https://reverseengineering.stackexchange.com/questions/13643/intel-pin-how-to-log-the-value-of-the-fs-and-gs-registers-at-every-instruction",
  "content": "I modified the pinatrace pintool example and managed to log all values of the \"regular\" registers:\n\n```\nVOID Instruction(INS ins, VOID *v)\n{\n ...\n // Instrument REGISTER writes using a predicated call, i.e.\n // the call happens iff the register store will be actually executed\n UINT32 maxNumWRegs;\n maxNumWRegs = INS_MaxNumWRegs(ins);\n for (UINT32 i=0; i<maxNumWRegs; i++)\n {\n     // --> BEFORE\n     INS_InsertPredicatedCall(\n        ins, IPOINT_BEFORE, (AFUNPTR)SaveRegWrite,\n        IARG_INST_PTR,\n        IARG_UINT32,\n        INS_RegW(ins, i),\n        IARG_END);\n    \n    if (INS_HasFallThrough(ins))\n    {\n        // --> AFTER\n        INS_InsertCall(\n            ins, IPOINT_AFTER, (AFUNPTR)LogRegWrite,\n            IARG_INST_PTR,\n            IARG_UINT32,\n            INS_RegW(ins, i),\n            IARG_CONTEXT, // to access the register value\n            IARG_END);\n    }\n    if (INS_IsBranchOrCall(ins))\n    {\n        INS_InsertCall(\n            ins, IPOINT_TAKEN_BRANCH, (AFUNPTR)LogRegWrite,\n            IARG_INST_PTR,\n            IARG_UINT32,\n            INS_RegW(ins, i),\n            IARG_CONTEXT, // to access the register value\n            IARG_END);\n    }        \n}\n\n```\nI read here that\n\nI am not sure how to get the value using this virtual register.\n\nRelated info from the official manual:\n\nHow do I print the value of the fs and gs regsiters after every instruction execution?\n\n",
  "votes": "1",
  "answers": 1,
  "views": "2k",
  "tags": [
    "x86",
    "pintool",
    "register",
    "segmentation",
    "amd64"
  ],
  "user": "langlauf.io",
  "time": "Jun 17, 2020 at 9:54",
  "comments": [
    {
      "user": "joxeankoret",
      "text": "Are you using probe mode (aka hooking)? If not, doesn't this work for you?    auto reg = PIN_GetContextReg(ctx, REG_SEG_FS);",
      "time": null
    },
    {
      "user": "mrexodia",
      "text": "Are you on x64 because there you cannot change segment registers.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "```\nconst CONTEXT *ctx; (from the arguments of LogRegWrite...)\nPIN_REGISTER regval;\nPIN_GetContextRegval(ctx, REG_SEG_GS, reinterpret_cast<UINT8*>(&regval));\nPIN_GetContextRegval(ctx, REG_SEG_FS, reinterpret_cast<UINT8*>(&regval));\nPIN_GetContextRegval(ctx, REG_SEG_GS_BASE, reinterpret_cast<UINT8*>(&regval));\nPIN_GetContextRegval(ctx, REG_SEG_FS_BASE, reinterpret_cast<UINT8*>(&regval));\n\n```\nYou use use PIN_GetContextRegval API to get register value of fs/gs. As mentioned in a question on the Pinheads Yahoo group [1], REG_SEG_GS will only get the value of fs/gs, in other word, the index to GDT, REG_SEG_GS_BASE will get the base address of the corresponding entry of GDT.\n\n[1] https://beta.groups.yahoo.com/neo/groups/pinheads/conversations/topics/5444, retrieved through Wayback machine\n\n",
      "votes": "1",
      "user": "canihavesomecoffee",
      "time": "Apr 1, 2021 at 15:00",
      "is_accepted": false,
      "comments": []
    }
  ]
}