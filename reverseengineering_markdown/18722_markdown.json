{
  "title": "How to unpack(carve) files from a camera firmware .bin file? [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/18722/how-to-unpackcarve-files-from-a-camera-firmware-bin-file",
  "content": "Would anyone be willing to help me with carving/extracting files from a firmware file? I've tried to extract with binwalk, but it didn't extract everything. I checked it out with ent to see if there's any encryption and there doesn't appear to be any from what I can tell. \n\nIt's firmware for Insta360 One camera and I want to inspect the file system/code to see how it works. Binwalk enumerates a unix filesystem, and I'm pretty sure the thing just runs on an ARM processor. Any help would be appreciated.\n\nHere's a link to the .bin file\n\nhttps://www.dropbox.com/s/ut9is9k1t6ih0gf/Insta360FW.bin?dl=0\n\n",
  "votes": "0",
  "answers": 1,
  "views": "4k",
  "tags": [
    "firmware",
    "unpacking"
  ],
  "user": "FakeHelicopterPilot",
  "time": "6 years ago",
  "comments": [
    {
      "user": "realtebo",
      "text": "And what tell you that is not extracted at all",
      "time": null
    },
    {
      "user": "julian",
      "text": "Can you narrow your question down to a specific problem? The strings command and a binwalk signature scan reveal a tremendous amount of information. If you can locate the firmware image entry point you can disassemble the code in the firmware.",
      "time": null
    },
    {
      "user": "FakeHelicopterPilot",
      "text": "Biswaprio - The best I can provide is the dropbox link there. You just have to click download and direct download in the top right corner.  The camera is the Insta 360 one 360 cam. ----------------------   SYS_V - When I use the -Me flags to auto extract any found archives with binwalk, I end up with some empty folders and empty archives in the resulting extracted folder. I've tried using dd to copy and then extract specific areas, but I'm having a hard time locating a solution.",
      "time": null
    },
    {
      "user": "julian",
      "text": "@FakeHelicopterPilot If nothing is compressed then there is nothing to extract. The signatures corresponding with compression are probably false positives, hence the empty folders. Looking at an entropy scan of the file shows that there are very few regions of high entropy and that these regions are very small. That means there is no compressed kernel or file system to extract.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "From brief analysis of the file it looks that the Insta360 One camera is based on or variant of the Ambarella A9 SoC. So lets assume for the moment that we are dealing with Ambarella camera itself and its firmware as it's pretty hard IMO to develop your own HD camera HW and SW stack from scratch. There are some substantial evidence for that if one check strings in the firmware file:\n\nSome further googling revealed that this SoC is also used in other products, among which is DJI Mavic drone. Following that lead, the following repo popped up with the tools that could be of help with your research:  dji-firmware-tools\n\nBefore going further into file extraction, some words about the bin file itself. It is divided into several parts because I think of how the camera SoC loads things into RAM. Some parts are actually ELF files (part 00) and others are UBIFS partitions which you can inspect with the help of ubi_reader. So moving on to examples.\n\nBy using amba_fwpak.py, amba_romfs.py, arm_bin2elf.py it was possible to:\n\nAnd UBI partition looks similar to the following:\n\n```\n/ubidump # ubireader_display_info /Research/insta/Insta360FW_part_04.a9s\nUBI File\n---------------------\n    Min I/O: 2048\n    LEB Size: 126976\n    PEB Size: 131072\n    Total Block Count: 99\n    Data Block Count: 97\n    Layout Block Count: 2\n    Internal Volume Block Count: 0\n    Unknown Block Count: 0\n    First UBI PEB Number: 0\n\n    Image: 891379931\n    ---------------------\n        Image Sequence Num: 891379931\n        Volume Name:linux\n        PEB Range: 0 - 98\n\n        Volume: linux\n        ---------------------\n            Vol ID: 0\n            Name: linux\n            Block Count: 97\n\n            Volume Record\n            ---------------------\n                alignment: 1\n                crc: '0xeae44dff'\n                data_pad: 0\n                errors: ''\n                flags: 0\n                name: u'linux'\n                name_len: 5\n                padding: u'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n                rec_index: 0\n                reserved_pebs: 389\n                upd_marker: 0\n                vol_type: 'dynamic'\n\n```\nSo I think this should be enough for you to get started. \nGood luck and have fun!\n\n",
      "votes": "7",
      "user": "PhoeniX",
      "time": "Jul 9, 2018 at 11:44",
      "is_accepted": false,
      "comments": [
        {
          "user": "FakeHelicopterPilot",
          "text": "Wow, PhoeniX. I really appreciate all the trouble you went to with this. Thanks so much for the detailed breakdown.",
          "time": null
        }
      ]
    }
  ]
}