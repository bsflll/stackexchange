{
  "title": "Reverse engineer obfuscated Android SDK files (DJI Mobile SDK)",
  "link": "https://reverseengineering.stackexchange.com/questions/33087/reverse-engineer-obfuscated-android-sdk-files-dji-mobile-sdk",
  "content": "For a hobby project, I would like to be able to control the DJI Mini 3 drone with my PC. Ideally, I would love if I were able to just use the DJI Tello, but it does not have a long enough battery lifetime for it to be useful. While the Tello was easy to control, because of the Windows SDK and the community-created Python wrappers, the Mini 3 needs to be controlled through the remote controller, which is a pain for me.\n\nI have downloaded the Android SDK from their Git and used Android Studio with Gradle to extract the .so files and the Java class files from Gradle's cache folder, but there is so much code and much of it is obfuscated, so I can't for the life of me, figure out how the SDK would communicate with the RC through a USB C cable.\n\nI have tried starting by finding function I assume would require communications like RequestPairing and SendAdvancedVirtualStickCommand and tracing their steps through the different files, but it always leads to a dead end or a decompiled file with no functions.\n\nI am using bytecode-viewer to decompile and view the code.\n\nAny help on how to dig through a big SDK package and find functional code would be greatly appreciated.\n\n",
  "votes": "1",
  "answers": 0,
  "views": "50",
  "tags": [
    "android",
    "deobfuscation",
    "usb",
    "libraries"
  ],
  "user": "Martin Pedersen",
  "time": "Jul 16, 2024 at 11:12",
  "comments": [
    {
      "user": "Robert",
      "text": "Astatic analysis of a large SDK can be very time consuming especially if you don't exactly know what o search for. As it seems that you can execute the code you can try to perform a dynamic analysis with frida.re. I would focus on frida-trace as it allows you to select and trace Java and C methods based on their name. Even more you can edit the generated trace-scripts and enhance it with other frida API methods like printing the stack trace at that point.",
      "time": null
    }
  ],
  "answers_data": []
}