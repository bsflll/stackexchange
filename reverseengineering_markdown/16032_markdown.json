{
  "title": "Reverse Packet Encryption with server side checks",
  "link": "https://reverseengineering.stackexchange.com/questions/16032/reverse-packet-encryption-with-server-side-checks",
  "content": "I made a DLL that hooks the send function of an MMORPG game. When the send() function is called, it will send the packet in a loop until I stop it instead of just sending the packet one time.\n\nMy problem is the packets are encrypted. And, the server checks every packet sent from the client. If the packet that the server expect does not match from what the client sent, the server will disconnect you. So, even if you disable the encryption code in the client, it will still get verified on the server side.\n\nI manage to disable the encryption of the packet by modifying the binary but I still get disconnected because of the above statement. And, I can't send it in an infinite loop because each packet should be different.\n\nInfo:\n\nDecryption Function\n\n```\nunsigned short clif_decrypt_cmd( int cmd, struct map_session_data *sd ) {\n  if (sd) {\n    return (cmd ^ ((sd->cryptKey >> 16) & 0x7FFF));\n  }\n  return (cmd ^ ((((clif->cryptKey[0] * clif->cryptKey[1]) + clif->cryptKey[2]) >> 16) & 0x7FFF));\n}\n\n```\nQuestion:\n\n",
  "votes": "0",
  "answers": 1,
  "views": "2k",
  "tags": [
    "ida",
    "disassembly",
    "assembly",
    "ollydbg",
    "debugging"
  ],
  "user": "Noob Programmer",
  "time": "May 7, 2020 at 11:15",
  "comments": [
    {
      "user": "Igor Skochinsky",
      "text": "why do you need to send the same packet in a loop? are you trying to DDoS the server?",
      "time": null
    },
    {
      "user": "Igor Skochinsky",
      "text": "add the disassembly of the function which \"generates the dynamic key used to encrypt the first 2 bytes\"",
      "time": null
    },
    {
      "user": "Igor Skochinsky",
      "text": "so you want to cheat yourself but not let others cheat? I'm not sure I want to go along with that...",
      "time": null
    },
    {
      "user": "Michael Pittino",
      "text": "@NoobProgrammer I guess anyone who is able to write game cheats isn't dependent on your asm snippet.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "First of all the statement \n\nmakes no sense.  \n\nHow would the server know what you are going to send to him?\nMaybe you ment that the server disconnects you if you malform the packet (change the structure of the packet - or, for example, by disabling the packet encryption - in this case the server would try to decrypt it and would get non interpretable results).\n\nSo to answer your question:\n\nIMO you have two possible ways to achieve your goal:\n\nI'd suggest you use the first option since it's the simpler one. While the second option provides you more flexibility I don't think it's feasable for you since you said but I don't know how to translate them into a higher level language like c++..\n\nI can only provide you with general instructions since you didn't post much information about your target (name, some assembly snippets, if it uses TCP or UDP, ..):\n\nHope that helps!\n\n",
      "votes": "3",
      "user": "Michael Pittino",
      "time": "Aug 13, 2017 at 11:12",
      "is_accepted": true,
      "comments": [
        {
          "user": "Michael Pittino",
          "text": "Well, as Mr. Skochinsky already said, it's very hard to help you without any asm snippets. Please consider adding some more information to you question so I can update my answer. BTW if you use x64dbg, why is the question tagged with ollydbg?",
          "time": null
        },
        {
          "user": "Noob Programmer",
          "text": "Sorry, but I can't find the x64dbg tag. So I tagged it with ollydbg and IDA. I edited the question and added the decryption code on the server side. BTW, thank you for the time give an answer to my question.",
          "time": null
        }
      ]
    }
  ]
}