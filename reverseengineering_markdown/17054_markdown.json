{
  "title": "Pointer disassembly",
  "link": "https://reverseengineering.stackexchange.com/questions/17054/pointer-disassembly",
  "content": "I'm using the Capstone engine to develop an ELF disassembler. I have implemented a linear sweep algorithm as the most basic version.\n\nMy goal is to implement the recursive traversal now.\n\nConsider some disassembly (it does not really matter what it does): \n\n```\n0x4005b6:   xor ebx, ebx         \n0x4005b8:   nop dword ptr [rax + rax]         \n0x4005c0:   mov rdx, r13         \n0x4005c3:   mov rsi, r14         \n0x4005c6:   mov edi, r15d         \n0x4005c9:   call    qword ptr [r12 + rbx*8]         \n0x4005cd:   add rbx, 1         \n0x4005d1:   cmp rbx, rbp         \n\n```\nUsing recursive traversal, am I correct in thinking that it would not be possible to disassemble what is at the below address (or any branch instruction with pointers as a target for that matter)?\n\n```\n0x4005c9:   call    qword ptr [r12 + rbx*8]         \n\n```\np.s. if it is of any interest, the value of r12 is computed as\n\n```\n0x40058b:   lea r12, qword ptr [rip + 0x20087e]\n\n```\nthe rip and r12 register is not referenced anywhere else in the wider disassembly that the code snipped belongs to.\n\nThanks\n\n",
  "votes": "1",
  "answers": 0,
  "views": "332",
  "tags": [
    "disassembly",
    "x86",
    "capstone"
  ],
  "user": "Marius.pharoe",
  "time": "Dec 27, 2017 at 18:52",
  "comments": [
    {
      "user": "barnaby-b",
      "text": "You are correct. You may be able to backtrace where the registers have been referenced, however these registers contain addresses often obtained from some library, or e.g., an array of listeners, comparison functions etc. and backtracing ranges from hard to impossible. IDA solves the problem by trying to disassemble everything that might look like a subroutine, while Olly or x64 will try to dissasemble everything. That's why they have the \"Analyze selection\" or \"Remove analysis\" options - in case they guess wrong about the location of data/code.",
      "time": null
    }
  ],
  "answers_data": []
}