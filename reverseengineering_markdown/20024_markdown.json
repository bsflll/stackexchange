{
  "title": "mprotect syscall not working",
  "link": "https://reverseengineering.stackexchange.com/questions/20024/mprotect-syscall-not-working",
  "content": "I want to modify the protection of the .text segment to RWX using a shellcode. In the shellcode, I can issue the syscall for mprotect however it's not working.\n\nPer the sys_mprotect definition, it takes the parameters as shown below:\n\n```\nrdi -> start_address\nrsi -> length\nrdx -> protection\n\n```\nNote: I have corrected the parameters above. The issue is not related to the parameter sequence.\n\nso, I'm issuing the syscall as shown below:\n\n```\npush 0xA\npop rax\npush 0x7\npop rdx\nmov rdi, start_address\nmov rsi, 0x1000\nsyscall\n\n```\nAt the time of syscall, I verified that the registers are set properly.\n\nstart_address points to the main() subroutine inside the .text section which I want to modify.\n\nHowever, the syscall does not modify the protection to RWX after execution. I verified the protection by viewing segments in IDA Pro.\n\nPer the syscall_mprotect definition, the other registers don't have to be configured specifically for this syscall. So, I am not sure why this syscall is not working?\n\nUpdate: I modified the start_address so that it's page aligned.\n\n```\nstart_address = start_address - (start_address % 4096)\n\n```\nNow, syscall_mprotect does not return a negative value. It returns 0. However, the .text segment still doesn't show the writable flag.\n\n",
  "votes": "2",
  "answers": 2,
  "views": "1k",
  "tags": [
    "linux",
    "shellcode",
    "syscall"
  ],
  "user": "Neon Flash",
  "time": "Dec 2, 2018 at 4:13",
  "comments": [],
  "answers_data": [
    {
      "content": "Your parameters for mprotect are not correct. Here's the correct order\n\n```\nstart: rdi\nlen:   rsi\nprot:  rdx\n\n```\nThe shellcode that works is\n\n```\npush 0xA\npop rax\npush 0x7\npop rdx\ncall x\nx:pop rdi\nand rdi, 0xfffffffffffff000\nmov rsi, 0x1000\nsyscall\n\n```\nThe call x x: pop rdi is used to get the current rip. Assuming the code is in .text this should work.\nLink for reference on syscalls x86 x64\n\n",
      "votes": "1",
      "user": "sudhackar",
      "time": "Dec 2, 2018 at 3:58",
      "is_accepted": false,
      "comments": [
        {
          "user": "Neon Flash",
          "text": "I made an error while writing the post. So, that's not the issue here. I was using the correct parameters while executing the code. And in my case, the shellcode is not executing in the .text section. It is executing in another mapped region of the process. I'll check again. As I mentioned in the update of my post, if I align start address to page boundary, then mprotect returns 0x0 (success) instead of an error. However, the \"W\" flag for the .text segment is still not shown enabled in the program segments section of IDA Pro.",
          "time": null
        },
        {
          "user": "sudhackar",
          "text": "can you check /proc/pid/maps ?",
          "time": null
        },
        {
          "user": "Neon Flash",
          "text": "Yes, I'll check that. The syscall does work properly, it seems that IDA Pro does not update the protection flags for program segments in real time.",
          "time": null
        }
      ]
    },
    {
      "content": "IDA does not update memory map after each step since it can potentially take a long time. You can try to either use “run to”(F4) instead of stepping or force refresh by calling refresh_debugger_memory() IDC function. \n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Dec 27, 2019 at 8:58",
      "is_accepted": false,
      "comments": []
    }
  ]
}