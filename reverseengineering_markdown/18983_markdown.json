{
  "title": "Passing a (string) argument via the return address?",
  "link": "https://reverseengineering.stackexchange.com/questions/18983/passing-a-string-argument-via-the-return-address",
  "content": "I'm debugging an old PC BIOS and it has most of its constant strings interspersed directly with the code, like this:\n\n\n\nAs the comment notes, the function putsc will take the string as its argument, finding it via the return address! After iterating over the string, it actually patches the stack to make a proper return.\n\n\n\nMy question, and I hope it's not too vague:\n\nIs or was passing constant arguments like this, sticking them right after the call, in any way a common technique for low-level (hand-written?) code such as this?\n\nWhy would you even prefer to do it this way rather than using a table of strings elsewhere?\n\n",
  "votes": "5",
  "answers": 1,
  "views": "124",
  "tags": [
    "disassembly",
    "x86",
    "bios"
  ],
  "user": "pesco",
  "time": "Aug 5, 2018 at 11:57",
  "comments": [
    {
      "user": "julian",
      "text": "Out of curiosity, which PC BIOS specifically? Additionally, depending on how old the BIOS is, there is a StackExchange site focused on retrocomputing you could check out",
      "time": null
    },
    {
      "user": "pesco",
      "text": "It is BIOS version 3F for a Toshiba T3200SX by Phoenix, which identifies itself as \"T3200SX V3.30\" and also contains the string \"80386 ROM BIOS PLUS Version 1.10 07\". Thanks for the pointer!",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "This technique allows the code to be position-independent, since there are no explicit references to the specific address that holds the string.  Instead, the call instruction will push onto the stack whatever address was current at the time.  Depending on the assembler (if any) that was used to produce the code, this might simplify some things.  If the code was entirely hand-crafted by typing in hex values, then having position-independence allows other instructions to be inserted without having to recalculate addresses.\n\n",
      "votes": "4",
      "user": "peter ferrie",
      "time": "Aug 13, 2018 at 15:05",
      "is_accepted": true,
      "comments": []
    }
  ]
}