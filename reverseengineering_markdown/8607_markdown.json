{
  "title": "Working with multi-threaded program but can not find created thread",
  "link": "https://reverseengineering.stackexchange.com/questions/8607/working-with-multi-threaded-program-but-can-not-find-created-thread",
  "content": "i am analyzing a piece of code in which the main thread does the following steps:\n\nFirst, it calls CreateProcess() to create a a process in suspended state. Then it changes the starting address of the thread by using a combination of GetThreadContext & SetThreadContext. The new start address of the thread is now 00401E1D. And at the end, it calls ResumeThread() start the thread.\n\nSo, what I did was: I set a BP at ResumeThread(), let it run, after hitting the BP I step over the ResumeThread()-function and open the window where all threads are listed by clicking on the big \"T\"-button in Ollydbg.\n\nBut there is only the main thread, not the newly started thread. \nAnd now I have a couple of questions:\n\n```\n 1st question: Why it is not in the list ?\n\n 2nd question: How can I find it?\n\n 3th question: \n In the main thread, I can not step to 00401E1D \n (starting address of the new thread) because ollydbg somehow \n  terminates itself. Maybe there is some anti-debugging tricks or \n  things like that. I do not know, because I did not analyze it yet\n  in detail. So, the question is: Is there a way to analyze the \n  new thread starting at 00401E1D in a separate ollydbg-session ?\n  Is it possible ?\n\n```\nbest regards, \n\n",
  "votes": "0",
  "answers": 1,
  "views": "2k",
  "tags": [
    "ollydbg",
    "thread",
    "process"
  ],
  "user": "user3097712",
  "time": "Mar 31, 2015 at 15:31",
  "comments": [
    {
      "user": "user45891",
      "text": "The newly created thread is in another process - do you debug that one too? Also that technique is at least very similar to RunPE, so the usual techniques should apply.",
      "time": null
    },
    {
      "user": "user3097712",
      "text": "No, I have not debugged the other process. How can I do that?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "In addition to creating the child process, CreateProcess() also causes the creation of the child process's primary thread. Your post makes it sound like the calls to GetThreadContext(), SetThreadContext(), and ResumeThread() all act on that primary thread.\n\nAs you said in your post, you are seeing the process's main (primary) thread, on which the *Thread*() API functions above acted. No additional threads are created so you shouldn't expect to see additional threads in OllyDbg's view.\n\nN/A\n\nYes -- check the \"Debug child processes\" checkbox in OllyDbg's options:\n\n\n\n",
      "votes": "2",
      "user": "Jason Geffner",
      "time": "Mar 31, 2015 at 15:39",
      "is_accepted": true,
      "comments": [
        {
          "user": "user3097712",
          "text": "wow, what an answer. But which version of ollydbg do you use? I go to Options -> Debugging Options -> Events, but I have only the following options (see picture before your answer)",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "ollydbg.de/odbg201.zip",
          "time": null
        },
        {
          "user": "blabb",
          "text": "ollydbg 1,10 does not have  debug child process option if you want that options you can try using modified command line plugin (openrce downloads)",
          "time": null
        },
        {
          "user": "user3097712",
          "text": "ok, thank you. But first, i will try to work with ollydbg v2.01. Now, I have the following problem: when i open the sample with ollydbg v2.01, then I get the following message: \"Debugged application has modified the debugging registers. Maybe it called ZwContinue() or SetDebugContext(). The modifications are saved to the log.\" . What does that mean? how can I solve this problem ?",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "That's a separate question for a separate post. One question per post, please.",
          "time": null
        }
      ]
    }
  ]
}