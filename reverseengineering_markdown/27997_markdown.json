{
  "title": "uncompyle6 gives success message but output is not readable",
  "link": "https://reverseengineering.stackexchange.com/questions/27997/uncompyle6-gives-success-message-but-output-is-not-readable",
  "content": "I am trying to use uncompyle6 to decompile a .pyc code. I even tried --verify option. It says\n\nbut the output only contains strings like \\xe0\\xb3\\x0bh\\x90.\n\nWhat should I do?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "321",
  "tags": [
    "python",
    "decompile"
  ],
  "user": "pythonde",
  "time": "Oct 29, 2021 at 7:33",
  "comments": [
    {
      "user": "MarianD",
      "text": "Try it with your own .pyc file (obtained from your own valid .py file) to be sure that the output in your question is not a consequence of the invalid .pyc file.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Something is wrong with your input .pyc file — probably it isn't a valid Python bytecode file (obtained from a valid .py source file).\n\n\\xe0,  \\xb3, \\x0b, \\x90 are hexadecimal codes for bytes which have no printable ASCII representation — mainly above 0x7F (127 decimal), but also the control character \\x0b (VT - Vertical Tabulation).\n(The letter h after \\xb3 is an ASCII character.)\n\nIt's standard Python output for non-ASCII characters in binary sequence types (bytes / bytearrays / memoryview):\n\n```\n>>> bytes((33, 50, 65, 97))                  # ASCII chars\nb'!2Aa'\n\n```\n```\n>>> bytes((224, 179, 11, 144))               # non-ASCII (4 of \"your\" 5 bytes)\nb'\\xe0\\xb3\\x0b\\x90'\n\n```\nThe same for your byte sequence with non-ASCII and ASCII codes\n(now for a change in hexadecimal):\n\n```\n>>> bytes((0xe0, 0xb3, 0x0b, 0x68, 0x90))    # \"your\" byte sequence\nb'\\xe0\\xb3\\x0bh\\x90'\n\n```\n",
      "votes": "2",
      "user": "MarianD",
      "time": "Jul 15, 2021 at 5:16",
      "is_accepted": false,
      "comments": []
    }
  ]
}