{
  "title": "Turbo Debugger - output cpu pane to file",
  "link": "https://reverseengineering.stackexchange.com/questions/8540/turbo-debugger-output-cpu-pane-to-file",
  "content": "I was asked for a special debugger which prints out the name of original calls used by author. I know the original exe was packed with Borland Turbo C (v.3) and the only debugger which output function calls is Turbo Debugger from '90 era. The author used function name like call gocheckdate, call gettimepassedfromlastsave, for example. Other debuggers list call sub_ or _loc but I don't need those kind of outputs. So, for short: how can I output the entire Cpu pannel (code) from Turbo Debugger to a file without the method to capture screen, copy/dump to log, because this is a long time consuming job. I just need to output in a step (well 2 or 3 steps) all cpu pane window (starting from top or program entry point and ending at the bottom of listing- that is, at the end of scrolling), not to copy,paste,dump only the portion of code displayed at a moment on screen. (MS-DOS 16 bit exe, btw). If there is another disassembler who can indeed presents the original procedure/function name used by original author and can save entire code (assembler) to file please let me know. I also am aware about IDA but due different output it will be a more consuming time job to identify function/procedure names in Turbo Debugger (from Borland) and rewrite/replace IDA output. And I am also aware IDA output is different from TD output.\n\n",
  "votes": "0",
  "answers": 1,
  "views": "813",
  "tags": [
    "debuggers"
  ],
  "user": "ares777",
  "time": "Mar 24, 2015 at 8:18",
  "comments": [
    {
      "user": "broadway",
      "text": "I would imagine that Turbo Debugger only provides symbolic information if you have the associated TDS file. IDA can load those files as well via file > load file > tds file.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "td.exe that's way back don't have it handy to do a trial\nanswer pertains to td32 but i remember similar option available in td too\ni see a log of an old lode runner game LR.com in the folder with pane dumps\n\n```\nalt+v->l->alt+f10-> open log file default is <prog_name>.log->ok\nenable logging yes \ndump the pane to log file using\nalt+e->d->page down\niirc td macros can record macros to repeat keystrokes or \nautoit can be used to script findwindow() sendmessage()\n\n```\n\n\nmacro to reduce keystrokes to one charecter \n\n```\nalt+o -> create macro -> assign key (i assign 'z')     \nalt+e -> d -> page down -> alt + hyphen to stop recording\n\njust keep z pressed till all is dumped :)\n\n```\ncompile the code below and dump N number of panes to previously opened log file (alt+v->L->alt+f10->browse->ok) using the above mentioned macro 'z'\n\n```\n#include <stdio.h>\n#include <windows.h>\n#pragma comment(lib , \"user32.lib\")\nunsigned long numtopaste = 1;\nBOOL CALLBACK EnumWindowsProc( HWND hWnd, LPARAM lParam )  {\n    UNREFERENCED_PARAMETER(lParam);\n    PCHAR Temp = (PCHAR) calloc(64,sizeof(char));\n    if (Temp != NULL)    {\n        GetClassName(hWnd, Temp, 64);\n        if ( strcmp ( Temp , \"ConsoleWindowClass\" ) == 0 ) {\n            PCHAR Wind = (PCHAR) calloc(64,sizeof(char));\n            if (Wind != NULL) {\n                GetWindowText(hWnd,Wind,64);\n                if ((strstr(Wind,\"TD32.EXE\")) != NULL) {\n                    printf(\"found TD32.EXE ConsoleWindowClass  \nHandle = %p  \n\"\n                        \"Command Line =%s  \n pasting %c Number of Times %d   \n\", \n                        hWnd, Wind,'z',numtopaste ); \n     // blogs.msdn.com/b/bill copy to clipboard 'z' and paste to Console\n                    for(ULONG i = 1; i < numtopaste ; i++) {\n                        SendMessage(hWnd, WM_COMMAND, 0xfff1, 0);\n                    }\n                }\n                free(Wind);\n            }\n        }\n        free(Temp);\n    }\n    return TRUE;\n}\nint main(int argc , char * argv[]) {\n    if(argc !=2) { printf (\"usage %s NUM\",argv[0]); return 0;}\n    numtopaste = strtoul(argv[1],NULL,10);\n    EnumWindows(EnumWindowsProc,NULL);\n    return 0;\n}\n\n```\n",
      "votes": "1",
      "user": "blabb",
      "time": "Mar 24, 2015 at 21:23",
      "is_accepted": false,
      "comments": [
        {
          "user": "ares777",
          "text": "I know this kind of save /dump one by one screen to log. Imagine this: my code pane has over 1000000 lines (just an example). It is time consuming to press f10, [e], [d], page down. Thanks anyway for the answer, I will vote up for the details.",
          "time": null
        },
        {
          "user": "blabb",
          "text": "i added a macro sequence try that you don't. have to press  several keys and pressing that single key can also be automated",
          "time": null
        },
        {
          "user": "ares777",
          "text": "Tried macro sequence it is better anyway than previous. :D Thanks.",
          "time": null
        },
        {
          "user": "blabb",
          "text": "compile the edited code to foo.exe and run it like foo 10 will dump 10 panes to log file  (code assumes you have setup z macro )",
          "time": null
        }
      ]
    }
  ]
}