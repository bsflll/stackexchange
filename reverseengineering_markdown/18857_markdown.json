{
  "title": "Detect interesting testcases",
  "link": "https://reverseengineering.stackexchange.com/questions/18857/detect-interesting-testcases",
  "content": "Suppose I have a ton of test cases and my target is closed-source. Well, I need to know which test cases discover new path in the execution of my target and which are duplicated. I know I have to use DBI frameworks such as DynamoRIO, Intel Pin and others. But, I cannot figure out how to use them, in the other words, I got confused to how I should save trace map and check them for a ton of test cases!?\n\nAnother question is, how can we figure out a test case is good and interesting during fuzzing test? Just discovering new path?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "100",
  "tags": [
    "binary-analysis",
    "dynamic-analysis",
    "instrumentation",
    "fuzzing"
  ],
  "user": "alex",
  "time": "Nov 20, 2018 at 9:31",
  "comments": [],
  "answers_data": [
    {
      "content": "If you want to discover new test cases (or check that a test case is valuable) on a binary, the good way to go is to use tools such as KLEE (see this small tutorial).\n\nThe point is too use symbolic execution to try to cover a maximum of the possible execution paths which are in the binary.\n\nSo, I would advise you to take a deeper look at the symbolic execution approach.\n\n",
      "votes": "1",
      "user": "perror",
      "time": "Jul 21, 2018 at 17:53",
      "is_accepted": false,
      "comments": [
        {
          "user": "NirIzr",
          "text": "Although symbolic execution is one way of measuring the value of test cases, it is not the only one. For example, coverage measures are also a valid approach (that fits OPs intentions of using a dynamic instrumentation tools).",
          "time": null
        },
        {
          "user": "0xC0000022L",
          "text": "AFL comes to mind ...",
          "time": null
        },
        {
          "user": "perror",
          "text": "yes, definitely!",
          "time": null
        }
      ]
    }
  ]
}