{
  "title": "How to skip on int 3 when ida debug?",
  "link": "https://reverseengineering.stackexchange.com/questions/18118/how-to-skip-on-int-3-when-ida-debug",
  "content": "I tried to debug a windows application, but when I debug it with Ida, it stopped on int 3 instruction.\n\nI read that int 3 catch debugger so I cant debug.\n\nHow can I cancel this int 3?\n\nHow call to int 3?\n\nIf I change this hex to nop will it be cancel?\n\n",
  "votes": "1",
  "answers": 2,
  "views": "9k",
  "tags": [
    "ida",
    "anti-debugging"
  ],
  "user": "Keystone",
  "time": "Apr 28, 2018 at 14:30",
  "comments": [],
  "answers_data": [
    {
      "content": "Well int 3 is opcode that it's especially meant for the purpose to call debugger. \n\nIt is used i.e. for software breakpoint. You could replace them with nop's and you should be good to go. I would though find out why they are being executed in the first place and maybe there is some condition to avoid them being exec'd.\n\n",
      "votes": "1",
      "user": "Paweł Łukasik",
      "time": "Apr 28, 2018 at 14:24",
      "is_accepted": false,
      "comments": [
        {
          "user": "Keystone",
          "text": "How does it work?  I saw when I tried to debug with ida I go to int 3 ,is there any function that call to int 3 ?   This int 3 it 1 byte, how can I replace it with nop?",
          "time": null
        },
        {
          "user": "Paweł Łukasik",
          "text": "nop is also one byte - 0x90",
          "time": null
        },
        {
          "user": "Keystone",
          "text": "Can you please explain me how it works?  The anti debugger add to code int3 soveach time I attach to process I came to int 3? Why?   And if I just replace with hex editor the int3 with nop  the anti debugger will not catch me?",
          "time": null
        },
        {
          "user": "Paweł Łukasik",
          "text": "I think you need to understand how this anti-debugging works in the first płace",
          "time": null
        },
        {
          "user": "Keystone",
          "text": "Where can I learn it well?",
          "time": null
        }
      ]
    },
    {
      "content": "How you could start to tackle this problem. I assume that you are able to start the program under Ida and and find in memory the int3 location. If this is not the case, you should describe in some more detail what exactly happens.\n\nThis is just an example how to start. There are of course other possible ways to tackle the problem. For instance, when Ida breaks at your int3, try to trace back to find from where the code sequence containing the int3 is called. This should be connected to the anti-debug code, because I assume your int3 is not called when running without debugger.\n\nThe most important with this stuff: Don't give up, even if it totally frustrates you (That's the sole purpose of anti-debug).\n\n",
      "votes": "1",
      "user": "josh",
      "time": "May 1, 2018 at 9:54",
      "is_accepted": false,
      "comments": []
    }
  ]
}