{
  "title": "Can a MSVC class have a deletion destructor without a vftable?",
  "link": "https://reverseengineering.stackexchange.com/questions/29947/can-a-msvc-class-have-a-deletion-destructor-without-a-vftable",
  "content": "I'm reversing the following smart pointee-like MSVC class Buffer : public Referencable with IDA / Hexrays:\n\n```\nstruct Referencable\n{\n    int m_refs;\n};\nstruct Buffer : Referencable\n{\n    void* m_pData;\n};\n\n```\nThis class apparently has no vftable, which I deduce from its (base) constructor not storing any vftable-like structure:\n\n```\nBuffer *__thiscall Buffer::ctor(Buffer *this)\n{\n    Referencable::ctor(this);\n    this->m_pData = NULL;\n    return this;\n}\nReferencable *__thiscall Referencable::ctor(Referencable *this)\n{\n    // <-- no vftable assignment here or anywhere -->\n    this->m_refs = 0;\n    return this;\n}\n\n```\nWhen this object is being deleted, I see the following method:\n\n```\nBuffer *__thiscall Buffer::ddtor(Buffer *this, char flags)\n{\n    Buffer::dtor(this);\n    if ( (flags & 1) != 0 )\n        operator delete(this);\n    return this;\n}\nvoid __thiscall Buffer::dtor(Buffer *this)\n{\n    free(this->m_pData);\n    Referencable::dtor(this);\n}\nvoid __thiscall Referencable::dtor(Referencable *this)\n{\n    ; // nop\n}\n\n```\n(I can assure that this is indeed the deletion method belonging to this class due to how the capturing smart pointer calls it)\n\nAccording to igorsk's Reversing Microsoft Visual C++ Part II: Classes, Methods and RTTI article, Buffer::ddtor seems to be a deletion destructor, which however are only available to classes with virtual destructors:\n\nThus my class seems to contradict another statement in that article, mentioning a virtual deletion destructor call which does not exist in my assembly (the deletion destructor above is called directly by the smart pointer logic):\n\nNow I am a little confused.\n\nOn a postscriptum note I know this assembly quite well otherwise and never noticed any kind of code optimizations (lucky me); I wonder how a vftable could've been optimized out anyway.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "232",
  "tags": [
    "c++",
    "hexrays",
    "msvc",
    "virtual-functions"
  ],
  "user": "Ray",
  "time": "Jan 28, 2022 at 17:44",
  "comments": [],
  "answers_data": [
    {
      "content": "Apparently I was confused over the articles wording due to initially seeing deletion destructors as virtual destructors. I analyzed a small scratchpad program and realized the following:\n\nThere are probably exceptions to these observations but so far I haven't seen them. Feel free to expand my knowledge here!\n\n",
      "votes": "1",
      "user": "Ray",
      "time": "Jan 28, 2022 at 18:17",
      "is_accepted": true,
      "comments": []
    }
  ]
}