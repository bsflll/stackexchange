{
  "title": "Why is function in kernel32.dll jumping into a api-ms-win-core stub",
  "link": "https://reverseengineering.stackexchange.com/questions/31400/why-is-function-in-kernel32-dll-jumping-into-a-api-ms-win-core-stub",
  "content": "I was trying to look into the implementation of GetVersion function in kernel32.dll.\n\nI was surprised to see that the GetVersion thunk is issuing a jump to API-MS-WIN-CORE-SYSINFO-L1-1-0.DLL::GetVersion, and in turn API-MS-WIN-CORE-SYSINFO-L1-1-0.DLL::GetVersion is pointing(forwarder) back to KERNEL32.DLL::GetVersion\n\n\n\nAny idea why is it so? So where is the real implementation of GetVersion?\n\n\n\n\n\n",
  "votes": "5",
  "answers": 1,
  "views": "379",
  "tags": [
    "windows",
    "winapi",
    "windows-10"
  ],
  "user": "caramel1995",
  "time": "Jan 13, 2023 at 17:19",
  "comments": [
    {
      "user": "blabb",
      "text": "to make universal crt possible most implementation were shifted to other dlls and a version agnostic stub which knows where to redirect the backward compatible and present apis were introduced  which is contained in a resource only dll file named APISETSCHEMEA.dll  you may check here for some internals of that here",
      "time": null
    },
    {
      "user": "0xC0000022L",
      "text": "What @blabb said! Plus, you may want to read this and this and this as well as the code in this and this. Enjoy. Oh and my answer on the Q&A blabb linked also offers details about this topic.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "GetVersion() was deprecated in 8.1 - https://learn.microsoft.com/en-us/windows/win32/sysinfo/targeting-your-application-at-windows-8-1\n\nSo I would guess that they've left the function stub there to catch and redirect calls in code that hasn't been updated.\n\n",
      "votes": "1",
      "user": "Mega Tonnage",
      "time": "Jan 13, 2023 at 22:48",
      "is_accepted": false,
      "comments": [
        {
          "user": "caramel1995",
          "text": "I did tried to create a dummy program to test out GetVersion and it's working fine.",
          "time": null
        },
        {
          "user": "caramel1995",
          "text": "Besides that there are also some function that is not deprecated that has the same footprint.",
          "time": null
        },
        {
          "user": "0xC0000022L",
          "text": "Deprecated means you shouldn't use it, not you can't. However, GetVersion() does anyway lie all the time unless your application happens to run with a manifest that proclaims full compatibility with the Windows release on which it runs. For the truth use RtlGetVersion or consult KUSER_SHARED_DATA. Either way, what you encountered is more about API sets than about whether GetVersion is deprecated.",
          "time": null
        },
        {
          "user": "0xC0000022L",
          "text": "@MegaTonnage: I think in this question it's more about the API Sets rather than about why it's deprecated or so.",
          "time": null
        }
      ]
    }
  ]
}