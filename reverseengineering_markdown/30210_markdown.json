{
  "title": "Changing the jne to je instruction causes program to generate error",
  "link": "https://reverseengineering.stackexchange.com/questions/30210/changing-the-jne-to-je-instruction-causes-program-to-generate-error",
  "content": "I'm trying to change the instruction from jne to je\n\n\n\nI've change an instruction\n\n```\n75 0c        jne [some_location]\n\n```\n75 0c is a 2 jump instruction.\n\nSo, I've a chaged it to from 75 0c to 74 0c which is also a 2 byte jcc instruction.\n\nThe error:\n\n```\n./binary: 1: 00000000:: not found\n/* Repeat of the same error but instead of 0000000X where is X is some number */\n\n```\nEDIT: The problem was the hex editor was filtering lines and corrupting data? I was using nvim as the hex edior\n\n",
  "votes": "1",
  "answers": 2,
  "views": "669",
  "tags": [
    "binary-analysis",
    "radare2",
    "binary",
    "patching"
  ],
  "user": "user40683",
  "time": "Apr 6, 2022 at 2:59",
  "comments": [
    {
      "user": "Rolf Rolles",
      "text": "Your question doesn't indicate what tool you're using when the error occurs.",
      "time": null
    },
    {
      "user": "user40683",
      "text": "@RolfRolles It should be tool agnostic, right? Nothing here is really dependent on the tool I use. I use a disassembler to view the assembly and use a hex editor to edit the instruction.",
      "time": null
    },
    {
      "user": "Rolf Rolles",
      "text": "Oh, I misread. The program that you patched is generating this error, not the tool that did the patching. In any case, this question is impossible to answer. We have 3 lines of assembly code and the knowledge that if you invert a jump, the program spits out a message that it didn't produce before you patched it. What answer are you looking for beyond \"you altered the logic of the program, and its behavior changed as a result\"?",
      "time": null
    },
    {
      "user": "sudhackar",
      "text": "We can help you better with more info on the binary - maybe attach it? Additionally any more details on the crash/error in the patched binary - maybe run it under a debugger?",
      "time": null
    },
    {
      "user": "user40683",
      "text": "@RolfRolles The problem was the hex editor was filtering lines and corrupting data? I switched do a new hex editor. I was using nvim and it was filtering liines",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "You do not need to use an hexadecimal editor with radare2. r2 is a reverse engineering framwork. It does everything.\n\nFirst ensure radare2 is updated with the latest version:\n\n```\ngit clone https://github.com/radareorg/radare2\nsh radare2/sys/install.sh\n\n```\nThen open your program in write mode, replace NAMEOFYOURPROGRAM by the name of the program that you want to patch. Then you can overwrite the instruction:\n\n```\nradare2 -a x86 -b 32 -w NAMEOFYOUREXECUTABLE\n=> s 0x1343\n=> \"wa jn 0x1351\"\n\n```\n",
      "votes": "2",
      "user": "ultimate-anti-reversing",
      "time": "Apr 18, 2022 at 20:26",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "If you want to swap a conditional jump you can use the wao command like this: r2 -qc 'wao recj @ 0x1343' -w YOURPROGRAM.\n\nBut you can also use:\n\n(there are many other ways to achieve the same, pick the one you like more)\n\n",
      "votes": "2",
      "user": "pancake",
      "time": "Jul 1, 2022 at 13:28",
      "is_accepted": false,
      "comments": []
    }
  ]
}