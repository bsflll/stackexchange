{
  "title": "How do I read this decompiled code?",
  "link": "https://reverseengineering.stackexchange.com/questions/23069/how-do-i-read-this-decompiled-code",
  "content": "I want to know what command line arguments are accepted by an application. I have decompiled it using Ghidra and found a function called ParseCommandLine, but I don't understand what it is doing. I expected it to compare each option to some strings to determine what it is, but it looks like gibberish.\n\nHow can I figure out what the below code is doing? Or is there a better way to figure out what command line options are available?\n\nAdditional context: I'm using a Macbook, and the application is the first Jackbox Party Pack. I want to see if I can launch one of the games directly without opening their game selector.\n\nCode:\n\n```\n/* WARNING: Could not reconcile some variable overlaps */\n/* Scaleform::Platform::Args::ParseCommandLine(int, char**) */\n\nundefined8 __thiscall ParseCommandLine(Args *this,int param_1,char **param_2)\n\n{\n  int *piVar1;\n  uint uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  char *pcVar5;\n  long lVar6;\n  bool bVar7;\n  ulong *puVar8;\n  long *plVar9;\n  byte bVar10;\n  int iVar11;\n  char *pcVar12;\n  undefined *puVar13;\n  undefined *puVar14;\n  ulong uVar15;\n  undefined8 *puVar16;\n  RefCountImpl *this_00;\n  long lVar17;\n  long *plVar18;\n  undefined8 uVar19;\n  long *plVar20;\n  uint **ppuVar21;\n  char *pcVar22;\n  char **ppcVar23;\n  char **ppcVar24;\n  long lVar25;\n  ulong local_78;\n  char **local_70;\n  int local_68;\n  uint local_64;\n  char **local_60;\n  char **local_58;\n  char **local_50;\n  char **local_48;\n  ulong local_40;\n  long *local_38;\n\n  local_40 = (ulong)(param_1 - 1U);\n  local_38 = (long *)this;\n  if (param_1 - 1U != 0 && 0 < param_1) {\n    pcVar12 = PTR_vtable_10094f650 + 0x10;\n    puVar13 = PTR_vtable_10094f710 + 0x10;\n    puVar14 = PTR_vtable_10094f648 + 0x10;\n    local_68 = 0;\n    do {\n      ppcVar24 = param_2 + 1;\n      pcVar22 = param_2[1];\n      if (*pcVar22 == '-') {\n        ppcVar23 = (char **)(pcVar22 + 1);\n        local_60 = param_2;\n        iVar11 = _prompt_string(ppcVar23,\"psn_\",4);\n        param_2 = ppcVar24;\n        if (iVar11 != 0) {\n          local_50 = ppcVar23;\n          String((String *)&local_78,(char *)ppcVar23);\n          local_58 = (char **)((ulong)local_58 & 0xffffffff00000000 | (ulong)(uint)param_1);\n          if (((long *)this)[6] != 0) {\n            uVar15 = BernsteinHashFunctionCIS\n                               ((void *)((long)(ulong *)(local_78 & 0xfffffffffffffffc) + 0xc),\n                                *(ulong *)(local_78 & 0xfffffffffffffffc) & 0x7fffffffffffffff,\n                                0x1505);\n            lVar17 = ((long *)this)[6];\n            uVar15 = uVar15 & *(ulong *)(lVar17 + 8);\n            if ((*(long *)(lVar17 + 0x10 + uVar15 * 0x28) != -2) &&\n               (*(ulong *)(lVar17 + 0x18 + uVar15 * 0x28) == uVar15)) {\n              puVar8 = (ulong *)(lVar17 + 0x10 + uVar15 * 0x28);\n              local_48 = (char **)((local_78 & 0xfffffffffffffffc) + 0xc);\n              uVar3 = puVar8[1];\n              uVar4 = uVar15;\n              while ((uVar3 != uVar15 ||\n                     (iVar11 = _default_RAND_meth((puVar8[2] & 0xfffffffffffffffc) + 0xc,local_48),\n                     iVar11 != 0))) {\n                uVar4 = *puVar8;\n                if (uVar4 == 0xffffffffffffffff) goto LAB_1006b2610;\n                puVar8 = (ulong *)(lVar17 + 0x10 + uVar4 * 0x28);\n                uVar3 = puVar8[1];\n              }\n              if (-1 < (long)uVar4) {\n                lVar25 = *(long *)(lVar17 + 0x28 + uVar4 * 0x28);\n                local_48 = *(char ***)(lVar17 + 0x30 + uVar4 * 0x28);\n                bVar7 = true;\n                goto LAB_1006b261b;\n              }\n            }\n          }\nLAB_1006b2610:\n          lVar25 = 0;\n          local_48 = (char **)0x0;\n          bVar7 = false;\nLAB_1006b261b:\n          LOCK();\n          piVar1 = (int *)((local_78 & 0xfffffffffffffffc) + 8);\n          *piVar1 = *piVar1 + -1;\n          if (*piVar1 == 0) {\n            (**(code **)(*pGlobalHeap + 0x68))();\n          }\n          if (!bVar7) {\n            __ZN9Scaleform6Render2GLL53ShaderDesc_FS_GLSL150_FInstancedYUVACxformAcEAlphaInvE\n                      (*(undefined8 *)__ZN9Scaleform6Render2GLL34ShaderDesc_FS_GLSL150_FBatchYUVMulE\n                       ,\"Unknown option : %s   \n\",local_50);\n          }\n          uVar2 = *(uint *)(*local_38 + 0x10 + lVar25 * 0x28);\n          bVar10 = (byte)uVar2 & 0xf;\n          if (bVar10 == 1) {\n            local_40._0_4_ = (int)local_58 - 2;\n            if ((uint)local_40 == 0 || SCARRY4((int)local_58,-2) != (int)(uint)local_40 < 0) {\n              __ZN9Scaleform6Render2GLL53ShaderDesc_FS_GLSL150_FInstancedYUVACxformAcEAlphaInvE\n                        (*(undefined8 *)\n                          __ZN9Scaleform6Render2GLL34ShaderDesc_FS_GLSL150_FBatchYUVMulE,\n                         \"Option \\\"%s\\\" must have arguments.  \n\",local_50);\n              this = (Args *)local_38;\n            }\n            else {\n              lVar17 = CreateValue(local_60[2],uVar2);\n              plVar9 = local_38;\n              ppcVar24 = local_48;\n              plVar20 = (long *)(local_38[3] + (long)local_48 * 8);\n              this_00 = *(RefCountImpl **)(local_38[3] + (long)local_48 * 8);\n              plVar18 = plVar20;\n              if (this_00 != (RefCountImpl *)0x0) {\n                Release(this_00);\n                plVar18 = (long *)((long)ppcVar24 * 8 + plVar9[3]);\n              }\n              param_2 = local_60 + 2;\n              *plVar20 = lVar17;\n              this = (Args *)local_38;\n              if (*plVar18 == 0) {\n                __ZN9Scaleform6Render2GLL53ShaderDesc_FS_GLSL150_FInstancedYUVACxformAcEAlphaInvE\n                          (*(undefined8 *)\n                            __ZN9Scaleform6Render2GLL34ShaderDesc_FS_GLSL150_FBatchYUVMulE,\n                           \"Cannot parse parameter for \\\"%s\\\"   \n\",local_50);\n                this = (Args *)local_38;\n              }\n            }\n          }\n          else {\n            if (bVar10 == 4) {\n              if ((int)local_58 < 3) {\n                uVar19 = *(undefined8 *)\n                          __ZN9Scaleform6Render2GLL34ShaderDesc_FS_GLSL150_FBatchYUVMulE;\nLAB_1006b29ad:\n                __ZN9Scaleform6Render2GLL53ShaderDesc_FS_GLSL150_FInstancedYUVACxformAcEAlphaInvE\n                          (uVar19);\n                this = (Args *)local_38;\n              }\n              else {\n                local_58 = (char **)(**(code **)(*pGlobalHeap + 0x50))(pGlobalHeap,0x28,0);\n                *(uint *)(local_58 + 1) = 1;\n                *(undefined *)((long)local_58 + 0xc) = 0;\n                *local_58 = pcVar12;\n                local_58[4] = (char *)0x0;\n                local_58[3] = (char *)0x0;\n                local_58[2] = (char *)0x0;\n                if ((1 < (int)local_40) && (pcVar22 = local_60[2], *pcVar22 != '-')) {\n                  local_70 = local_58 + 2;\n                  ppcVar23 = local_60 + 2;\n                  local_64 = uVar2;\n                  do {\n                    local_50 = ppcVar23;\n                    this_00 = (RefCountImpl *)CreateValue(pcVar22,local_64);\n                    ppcVar24 = local_58;\n                    ResizeNoConstruct((\n                                       ArrayDataBase<Scaleform--Ptr<Scaleform--Platform--ArgValue>,Scaleform--AllocatorGH<Scaleform--Ptr<Scaleform--Platform--ArgValue>,2>,Scaleform--ArrayDefaultPolicy>\n                                       *)local_70,local_70,(ulong)(local_58[3] + 1));\n                    pcVar22 = ppcVar24[2];\n                    pcVar5 = ppcVar24[3];\n                    if (this_00 == (RefCountImpl *)0x0) {\n                      *(undefined8 *)(pcVar22 + (long)pcVar5 * 8 + -8) = 0;\n                    }\n                    else {\n                      AddRef(this_00);\n                      *(RefCountImpl **)(pcVar22 + (long)pcVar5 * 8 + -8) = this_00;\n                      Release(this_00);\n                    }\n                    ppcVar24 = local_50;\n                    if ((int)((uint)local_40 + -2) < 1) {\n                      ppuVar21 = (uint **)((long)local_48 * 8 + local_38[3]);\n                      local_40 = (ulong)((uint)local_40 - 1);\n                      goto LAB_1006b2b76;\n                    }\n                    pcVar22 = local_50[1];\n                    ppcVar23 = local_50 + 1;\n                    local_40 = (ulong)((uint)local_40 - 1);\n                  } while (*pcVar22 != '-');\n                }\n                ppuVar21 = (uint **)((long)local_48 * 8 + local_38[3]);\n                if (local_58 == (char **)0x0) {\n                  bVar7 = true;\n                }\n                else {\nLAB_1006b2b76:\n                  AddRef((RefCountImpl *)local_58);\n                  bVar7 = false;\n                }\n                if (*ppuVar21 != (uint *)0x0) {\n                  Release((RefCountImpl *)*ppuVar21);\n                }\n                *(char ***)ppuVar21 = local_58;\n                param_2 = ppcVar24;\n                this = (Args *)local_38;\n                if (!bVar7) {\n                  Release((RefCountImpl *)local_58);\n                  this = (Args *)local_38;\n                }\n              }\n            }\n            else {\n              this = (Args *)local_38;\n              if (bVar10 == 2) {\n                if ((uVar2 & 0xf0) != 0x10) {\n                  uVar19 = *(undefined8 *)\n                            __ZN9Scaleform6Render2GLL34ShaderDesc_FS_GLSL150_FBatchYUVMulE;\n                  goto LAB_1006b29ad;\n                }\n                puVar16 = (undefined8 *)(**(code **)(*pGlobalHeap + 0x50))(pGlobalHeap,0x20,0);\n                *(undefined4 *)(puVar16 + 1) = 1;\n                *(undefined *)((long)puVar16 + 0xc) = 0;\n                *(undefined **)puVar16 = puVar13;\n                String((String *)(puVar16 + 2),\"\");\n                *(undefined *)((long)puVar16 + 0xc) = 1;\n                *(undefined **)puVar16 = puVar14;\n                *(undefined *)(puVar16 + 3) = 1;\n                operator=((String *)(puVar16 + 2),\"true\");\n                *(undefined *)((long)puVar16 + 0xc) = 1;\n                lVar17 = local_38[3];\n                this_00 = *(RefCountImpl **)(lVar17 + (long)local_48 * 8);\n                if (this_00 != (RefCountImpl *)0x0) {\n                  Release(this_00);\n                }\n                *(undefined8 **)(lVar17 + (long)local_48 * 8) = puVar16;\n                this = (Args *)local_38;\n              }\n            }\n          }\n        }\n      }\n      else {\n        uVar15 = (ulong)(ushort)local_68;\n        if ((ulong)((long *)this)[8] < uVar15 || ((long *)this)[8] == uVar15) {\n          __ZN9Scaleform6Render2GLL53ShaderDesc_FS_GLSL150_FInstancedYUVACxformAcEAlphaInvE\n                    (*(undefined8 *)__ZN9Scaleform6Render2GLL34ShaderDesc_FS_GLSL150_FBatchYUVMulE,\n                     \"Unknown positional value \\\"%s\\\"  \n\",pcVar22);\n        }\n        else {\n          ppcVar23 = (char **)(uVar15 * 0x10);\n          uVar2 = *(uint *)(*(long *)this + 0x10 +\n                           *(long *)(((long *)this)[7] + (long)ppcVar23) * 0x28);\n          if ((uVar2 & 0xf) == 4) {\n            local_58 = (char **)(*(long *)this + 0x10 +\n                                *(long *)(((long *)this)[7] + (long)ppcVar23) * 0x28);\n            local_70 = ppcVar23;\n            local_60 = (char **)(**(code **)(*pGlobalHeap + 0x50))(pGlobalHeap,0x28,0);\n            *(undefined4 *)(local_60 + 1) = 1;\n            *(undefined *)((long)local_60 + 0xc) = 0;\n            *local_60 = pcVar12;\n            local_48 = local_60 + 2;\n            local_60[4] = (char *)0x0;\n            local_60[3] = (char *)0x0;\n            local_60[2] = (char *)0x0;\n            do {\n              if (**ppcVar24 == '-') break;\n              uVar15 = (ulong)((int)local_40 - 1);\n              local_50 = ppcVar24;\n              this_00 = (RefCountImpl *)CreateValue(*ppcVar24,*(uint *)local_58);\n              ppcVar24 = local_60;\n              ResizeNoConstruct((\n                                 ArrayDataBase<Scaleform--Ptr<Scaleform--Platform--ArgValue>,Scaleform--AllocatorGH<Scaleform--Ptr<Scaleform--Platform--ArgValue>,2>,Scaleform--ArrayDefaultPolicy>\n                                 *)local_48,local_48,(ulong)(local_60[3] + 1));\n              pcVar22 = ppcVar24[2];\n              pcVar5 = ppcVar24[3];\n              local_40 = uVar15;\n              if (this_00 == (RefCountImpl *)0x0) {\n                *(undefined8 *)(pcVar22 + (long)pcVar5 * 8 + -8) = 0;\n              }\n              else {\n                AddRef(this_00);\n                *(RefCountImpl **)(pcVar22 + (long)pcVar5 * 8 + -8) = this_00;\n                Release(this_00);\n              }\n              ppcVar24 = local_50 + 1;\n            } while (0 < (int)(uint)local_40);\n            lVar17 = local_38[3];\n            lVar25 = *(long *)(local_38[7] + 8 + (long)local_70);\n            if (local_60 != (char **)0x0) {\n              AddRef((RefCountImpl *)local_60);\n            }\n            this_00 = *(RefCountImpl **)(lVar17 + lVar25 * 8);\n            if (this_00 != (RefCountImpl *)0x0) {\n              Release(this_00);\n            }\n            local_40._0_4_ = (uint)local_40 + 1;\n            local_40 = (ulong)(uint)local_40;\n            ppcVar24 = ppcVar24 + -1;\n            *(char ***)(lVar17 + lVar25 * 8) = local_60;\n            this = (Args *)local_38;\n            if (local_60 != (char **)0x0) {\n              Release((RefCountImpl *)local_60);\n              this = (Args *)local_38;\n            }\n          }\n          else {\n            uVar19 = CreateValue(pcVar22,uVar2);\n            lVar17 = ((long *)this)[3];\n            lVar25 = *(long *)(((long *)this)[7] + 8 + (long)ppcVar23);\n            this_00 = *(RefCountImpl **)(lVar17 + lVar25 * 8);\n            if (this_00 != (RefCountImpl *)0x0) {\n              Release(this_00);\n            }\n            *(undefined8 *)(lVar17 + lVar25 * 8) = uVar19;\n            this = (Args *)local_38;\n          }\n        }\n        local_68 = local_68 + 1;\n        param_2 = ppcVar24;\n      }\n      local_40 = (ulong)((uint)local_40 - 1);\n      param_1 = (uint)local_40;\n    } while ((uint)local_40 - 1 != 0 && 0 < (int)(uint)local_40);\n  }\n  lVar17 = ((long *)this)[6];\n  if (lVar17 == 0) {\n    return 0;\n  }\n  plVar20 = (long *)(lVar17 + 0x10);\n  uVar15 = 0;\n  do {\n    if (*plVar20 != -2) break;\n    uVar15 = uVar15 + 1;\n    plVar20 = plVar20 + 5;\n  } while (uVar15 < *(ulong *)(lVar17 + 8) || uVar15 == *(ulong *)(lVar17 + 8));\n  lVar17 = ((long *)this)[6];\n  do {\n    do {\n      if (lVar17 == 0) {\n        return 0;\n      }\n      if (*(long *)(lVar17 + 8) < (long)uVar15) {\n        return 0;\n      }\n      if (*(long *)(((long *)this)[3] + *(long *)(lVar17 + 0x30 + uVar15 * 0x28) * 8) == 0) {\n        lVar25 = *(long *)(lVar17 + 0x28 + uVar15 * 0x28);\n        lVar6 = *(long *)this;\n        uVar2 = *(uint *)(lVar6 + 0x10 + lVar25 * 0x28);\n        if ((uVar2 & 0x100) != 0) {\n          __ZN9Scaleform6Render2GLL53ShaderDesc_FS_GLSL150_FInstancedYUVACxformAcEAlphaInvE\n                    (*(undefined8 *)__ZN9Scaleform6Render2GLL34ShaderDesc_FS_GLSL150_FBatchYUVMulE,\n                     \"Mandatory option \\\"%s\\\" or \\\"%s\\\" is not found   \n\",\n                     *(undefined8 *)(lVar6 + lVar25 * 0x28),\n                     *(undefined8 *)(lVar6 + 8 + lVar25 * 0x28));\n          return 2;\n        }\n        uVar19 = CreateValue(*(char **)(lVar6 + 0x18 + lVar25 * 0x28),uVar2);\n        lVar17 = *(long *)(lVar17 + 0x30 + uVar15 * 0x28);\n        lVar25 = ((long *)this)[3];\n        this_00 = *(RefCountImpl **)(lVar25 + lVar17 * 8);\n        if (this_00 != (RefCountImpl *)0x0) {\n          Release(this_00);\n        }\n        *(undefined8 *)(lVar25 + lVar17 * 8) = uVar19;\n        lVar17 = local_38[6];\n        this = (Args *)local_38;\n      }\n    } while ((long)*(ulong *)(lVar17 + 8) < (long)uVar15);\n    plVar20 = (long *)(lVar17 + 0x38 + uVar15 * 0x28);\n    do {\n      uVar15 = uVar15 + 1;\n      if (*(ulong *)(lVar17 + 8) < uVar15) break;\n      lVar25 = *plVar20;\n      plVar20 = plVar20 + 5;\n    } while (lVar25 == -2);\n  } while( true );\n}\n\n```\n",
  "votes": "1",
  "answers": 1,
  "views": "3k",
  "tags": [
    "decompilation",
    "ghidra",
    "command-line"
  ],
  "user": "Trevin Avery",
  "time": "Jan 21, 2020 at 19:42",
  "comments": [
    {
      "user": "Olvin Roght",
      "text": "You can rename variables, write comments, etc. Usually it's not fast..",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "1) you demangle the function names for these which are called within the function\n\n2) you learn the arguments of these functions and apply the names to local variables which are passed as arguments to the functions\n\n3) you learn the structures and apply them to stack variables, so that you can name more stack variables which are assigned to the structure fields\n\n4) you learn what is returned from the function and name the error code variable or return value variable\n\n5) you learn how arguments of the function are processed\n\n6) you name the rest of the local variables\n\n7) you look at the whole function again and learn what it actually does\n\n",
      "votes": "5",
      "user": "Anton Kukoba",
      "time": "Jan 22, 2020 at 10:46",
      "is_accepted": false,
      "comments": []
    }
  ]
}