{
  "title": "E Ink display interface protocol",
  "link": "https://reverseengineering.stackexchange.com/questions/2143/e-ink-display-interface-protocol",
  "content": "I am particularly interested in the ED060XC3 that is in the kindle paperwhite (I think that is the right one anyway).\n\nI can't find a freely available datasheet. Would it be possible to reverse engineer a driver from the kindle firmware?\n\nThere are acutally 3 interfaces (display, backlight , touchscreen) but the display interface would be the most important and interesting. I intend to purchase one for use with an FPGA if I can determine if it is possible to operate it first.\n\nFrom what I understand the module itself may not contain a controller but I would have to implement an EPD controller in my FPGA like this.\n\nYou can see images of the screen here: aliexpress\n\n",
  "votes": "15",
  "answers": 4,
  "views": "14k",
  "tags": [
    "hardware"
  ],
  "user": "cb88",
  "time": "Apr 19, 2022 at 12:04",
  "comments": [],
  "answers_data": [
    {
      "content": "I don't have an actual answer but here's a few leads.\n\nFreescale has some chips in the i.MX6 family with the EPD interface:\n\nhttps://community.freescale.com/docs/DOC-93622\n\nI think the signals are described in the CPU datasheet, but not the protocol. Even with the older devices when a dedicated controller had to be used, its datasheet would describe only the controller and not the panel.\n\nApollo controller datasheet (first generation, used in Sony PRS-500), made by Philips (later PVI):\nhttp://openinkpot.org/raw-attachment/wiki/Device/V3/Screen/Apollo_eInk_screen_controller_datasheet.pdf\n\nThe second generation controller (Metronome) was made by E-Ink but they in fact used an Actel ProASIC3 FPGA as can be seen on my photos of PRS-505 innards:\n\nhttp://www.flickr.com/photos/21729510@N03/2111017270/in/set-72157603454047408\n\nSo in theory you might be able to extract the bitstream and RE it or just reuse in your own FPGA. However, it would work only with the first-gen Vizplex panels and probably not with the current ones.\n\nThird generation controller was a dedicated chip made by Epson (S1D13521B, codename Broadsheet). Baidu has a copy of internal training from E-Ink which describes some low-level details on how develop with it (but again, not much on the panel itself):\n\nhttp://wenku.baidu.com/view/187d53956bec0975f465e245.html\n\nIn the end, driving EPD panel is even trickier business than driving a generic LCD. So, unless you know this area very well, I would recommend to stick to a proven solution such as Freescale's chips or a dedicated controller.\n\nIf you're not dead set on the hi-res screen, you may be interested in this collection of kits with small resolution and segmented E-Ink screens:\n\nhttp://www.the-digital-reader.com/2013/05/23/e-ink-dives-into-the-diy-market/\n\n",
      "votes": "8",
      "user": "Igor Skochinsky",
      "time": "May 31, 2013 at 0:00",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Kindle is based on embedded Linux. Thus Amazon is forced to distribute the source code. You might find the actual driver sources there.\n\nYou can find the sources here.http://www.amazon.com/gp/help/customer/display.html?nodeId=200203720\n\n",
      "votes": "5",
      "user": "Mellowcandle",
      "time": "May 30, 2013 at 23:05",
      "is_accepted": false,
      "comments": [
        {
          "user": "cb88",
          "text": "hmm :/ not if they did it in userspace though you have a point there. And if they are using a EPD controller I still won't know how to control the LCD.",
          "time": null
        },
        {
          "user": "Mellowcandle",
          "text": "Always worth a try...",
          "time": null
        }
      ]
    },
    {
      "content": "Looking at the kernel source for the kindle touch (mx50_yoshi.c, see here) it seems to me that the epd configuration, init sequence and so on is all there.\n\nI only checked for the touch cause the touch eink seems to be currently the cheapest. (ED060SCG)\n\n```\nstatic struct fb_videomode e60_v220_mode = {\n.name = \"E60_V220\",\n.refresh = 85,\n.xres = 800,\n#ifdef CONFIG_FRAMEBUFFER_CONSOLE\n.yres = 800,\n#else\n.yres = 600,\n#endif\n.pixclock = 32000000,\n.left_margin = 8,\n.right_margin = 166,\n.upper_margin = 4,\n.lower_margin = 26,\n.hsync_len = 20,\n.vsync_len = 4,\n.sync = 0,\n.vmode = FB_VMODE_NONINTERLACED,\n.flag = 0,\n};\n\nstatic struct fb_videomode e60_v220_wj_mode = {\n  .name = \"E60_V220_WJ\",\n  .refresh = 85,\n  .xres = 800,\n#ifdef CONFIG_FRAMEBUFFER_CONSOLE\n.yres = 800,\n#else\n.yres = 600,\n#endif\n  .pixclock = 32000000,\n  .left_margin = 17,\n  .right_margin = 172,\n  .upper_margin = 4,\n  .lower_margin = 18,\n  .hsync_len = 15,\n  .vsync_len = 4,\n  .sync = 0,\n  .vmode = FB_VMODE_NONINTERLACED,\n  .flag = 0,\n};\n\nstatic struct mxc_epdc_fb_mode panel_modes[] = {\n{\n    &e60_v220_wj_mode,\n    4,  /* vscan_holdoff */\n    10, /* sdoed_width */\n    20, /* sdoed_delay */\n    10, /* sdoez_width */\n    20, /* sdoez_delay */\n    425,    /* gdclk_hp_offs */\n    20, /* gdsp_offs */\n    0,  /* gdoe_offs */\n    17, /* gdclk_offs */\n    1,  /* num_ce */\n},\n};\n\n```\nI'm also thinking about using an imx6 duallite to drive such a panel.\n\n",
      "votes": "5",
      "user": "Community",
      "time": "Jun 17, 2020 at 9:54",
      "is_accepted": false,
      "comments": [
        {
          "user": "Igor Skochinsky",
          "text": "This only helps with the software protocol to the controller. The asker is interested in the hardware interface to the E-Ink panel itself (pinout, signaling etc.).",
          "time": null
        },
        {
          "user": "b.g.",
          "text": "thank you, I have also checked the source code but there are many files. How did you prune out your way into deciding to the \"mx50_yoshi.c\" file, in other words, how did you arrive to that file?",
          "time": null
        }
      ]
    },
    {
      "content": "Petteri Aimonen has figured out how to drive the panel and Sprite_tm made a wireless display out of one\n\n",
      "votes": "4",
      "user": "Igor Skochinsky",
      "time": "Feb 17, 2015 at 23:08",
      "is_accepted": false,
      "comments": [
        {
          "user": "cb88",
          "text": "He's using a different panel than ED060XC3 but perhaps the display interface is the same. I think the backlight is probably just PWMed LEDs.",
          "time": null
        },
        {
          "user": "cb88",
          "text": "Also the ED060XD4 is the updated paperwhite 2 screen ... just for reference.",
          "time": null
        }
      ]
    }
  ]
}