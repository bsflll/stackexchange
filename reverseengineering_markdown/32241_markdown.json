{
  "title": "IDA python API set function chunk end",
  "link": "https://reverseengineering.stackexchange.com/questions/32241/ida-python-api-set-function-chunk-end",
  "content": "I’m trying to set a function chunk end at a certain EA in a function using my Ida python plugin, but I can’t find any API which lets me do just that. set_func_end appear not to work (keeps returning false.).\nBasically I’m trying to simulate the action of pressing “E” at a certain EA. Appreciate any help, thanks in advance!\n\n",
  "votes": "1",
  "answers": 1,
  "views": "117",
  "tags": [
    "ida",
    "idapython"
  ],
  "user": "Tomer Attali",
  "time": "Aug 31, 2023 at 0:10",
  "comments": [],
  "answers_data": [
    {
      "content": "```\nimport ida_funcs\nimport ida_auto\n\nfuncEa = 0x08054FE1\nnewEndEa = 0x08054FF7\n\nf = ida_funcs.get_func(funcEa)\nf.end_ea = newEndEa\nida_funcs.update_func(f)\nida_funcs.reanalyze_function(f)\nida_auto.auto_wait()\n\n```\nIn response to your edit, perhaps some basic safety precautions would help, as in:\n\n```\nf = ida_funcs.get_func(funcEa)\nif f is not None:\n    nChunk = ida_funcs.func_contains(f,newEndEa)\n    if nChunk >= 0:\n        if nChunk > 0:\n            f = ida_funcs.getn_fchunk(nChunk)\n        f.end_ea = newEndEa\n        ida_funcs.update_func(f)\n        ida_funcs.reanalyze_function(f)\n        ida_auto.auto_wait()\n\n```\n",
      "votes": "0",
      "user": "Rolf Rolles",
      "time": "Aug 31, 2023 at 16:32",
      "is_accepted": true,
      "comments": [
        {
          "user": "Tomer Attali",
          "text": "Does'nt seem to work. causes IDA to crash",
          "time": null
        },
        {
          "user": "Tomer Attali",
          "text": "The thread tried to read from or write to a virtual address for which it does not have the appropriate access.",
          "time": null
        },
        {
          "user": "Tomer Attali",
          "text": "Seems like its working on other views, i cant seem to set this line:  .text:00007FF7179EEDE5                 jnb     short near ptr loc_7FF7179EEE06+5 as function end.",
          "time": null
        },
        {
          "user": "Rolf Rolles",
          "text": "See edit for a solution with safety checking and which explicitly takes chunking into account.",
          "time": null
        }
      ]
    }
  ]
}