{
  "title": "Reverse Engineering Temperatures (RS485 Bus)",
  "link": "https://reverseengineering.stackexchange.com/questions/21606/reverse-engineering-temperatures-rs485-bus",
  "content": "I have the following hex byte data. Can someone help me reverse engineer the temperatures calculation?\n\n```\nID\n||\n81 00 8c 00 \n82 00 aa 00 \n83 00 04 01 \n84 00 ff 00 \n85 00 21 04 \n\n```\nThe first byte is the id! 81-84=1-4\n\nOne of the data is 14,0 C° and another one is 17,0 C°.\n\nMy tries:\n- (Second Byte * 10) + (Third Byte *10/256)\n- (Second Byte - 0x80) / 2\n- (Second Byte / 2) - 0x80\n- Second Byte * 100\n- (Second Byte / 2) - 20\n\n",
  "votes": "1",
  "answers": 1,
  "views": "90",
  "tags": [
    "decryption"
  ],
  "user": "Schack",
  "time": "Jul 8, 2019 at 20:49",
  "comments": [],
  "answers_data": [
    {
      "content": "I would guess that this is raw (unencoded) data and every row is consisted of two 16 bit integers stored in little-endian order. This means that\n\n```\ntemperature = (float)(b[3] << 8 + b[2]) / 10;\n\n```\nwhere b[2] is the third byte and b[3] is the fourth.\n\nSo using the above formula, the data would yield the following temperatures:\n\n```\n81 00 8c 00; #Measurement 0x0081 - 14.0\n82 00 aa 00; #Measurement 0x0082 - 17.0\n83 00 04 01; #Measurement 0x0083 - 26.0\n84 00 ff 00; #Measurement 0x0084 - 25.5\n85 00 21 04; #Measurement 0x0085 - 105.7\n\n```\nUpdate:\n\nHere is a Python snippet which does the conversion given a string with space-separated hex values:\n\n```\ninput = \"81 00 8c 00\"\nbyte_arr = input.split(\" \")\n\nfor i in range(len(byte_arr)):\n    byte_arr[i] = int(byte_arr[i], 16)\n\nmeasurement_id = byte_arr[1] << 8 | byte_arr[0]\ntemperature = (byte_arr[3] << 8 | byte_arr[2]) / 10.0\n\nprint(\"Measurement: %d\" % measurement_id)\nprint(\"Temperature: %.2f C°\" % temperature)\n\n```\n",
      "votes": "4",
      "user": "Anton Angelov",
      "time": "Aug 9, 2019 at 8:16",
      "is_accepted": true,
      "comments": [
        {
          "user": "Schack",
          "text": "Thanks for your answer, Anton. Sorry for my delay. Can you explain this more for me. Specially \"<<\" I would like to use the code in python. If I use this I get 0.0 for \"81 00 8c 00\".",
          "time": null
        },
        {
          "user": "Anton Angelov",
          "text": "The << operator refers to bit-wise left shifting. I added an example how to use the formula in Python.",
          "time": null
        }
      ]
    }
  ]
}