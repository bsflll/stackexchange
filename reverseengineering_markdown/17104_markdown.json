{
  "title": "Working backwards from window API's [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/17104/working-backwards-from-window-apis",
  "content": "My program often ends up at the kernel32.TerminateProcess API, now I've tried looking at the callstack in x32dbg but there's nothing. I've tried looking intermodular calls from my module and I've put a breakpoint on all of the calls, but yet it still ends up there.\n\nI've also tried to look at all the intermodular calls to terminate process but they're are way too many, any tips to find it's origin? \n\n",
  "votes": "-1",
  "answers": 2,
  "views": "124",
  "tags": [
    "debugging"
  ],
  "user": "Ayazasker",
  "time": "7 years ago",
  "comments": [
    {
      "user": "mrexodia",
      "text": "Did you check the stack directly for possible return addresses? Sometimes the callstack cannot be retrieved properly.",
      "time": null
    },
    {
      "user": "Ayazasker",
      "text": "There are no addresses on the stack, I dont know why",
      "time": null
    },
    {
      "user": "mrexodia",
      "text": "Is EIP perhaps set to an invalid memory location?",
      "time": null
    },
    {
      "user": "Ayazasker",
      "text": "Uh yeah, that could be it",
      "time": null
    },
    {
      "user": "Peanut",
      "text": "What's the actual issue you're having? This feels like an XY problem. Question could definitely use more detail and explanation.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "From your comments it seems like you're having an exception which was thrown due to failure of access to a memory address. This might happen because of Access Violation or trying to access a non-existent address. \n\nHere's TerminateProcess() syntax:  \n\n```\nBOOL WINAPI TerminateProcess(\n  _In_ HANDLE hProcess,\n  _In_ UINT   uExitCode\n);\n\n```\nCheck for the ExitCode of the program to understand more what caused the failure:\n\nYou should be able to find the exit code on the stack, or in the failure message.\n\n",
      "votes": "1",
      "user": "Megabeets",
      "time": "Jan 3, 2018 at 12:39",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "I'd suggest Rohitab's API Monitor. This will allow you to monitor every API call made by an application, and easily inspect parameters passed to each API (and the data returned). One of my favorite tools.\n\n\n\n",
      "votes": "1",
      "user": "Mick",
      "time": "Jan 4, 2018 at 20:27",
      "is_accepted": false,
      "comments": []
    }
  ]
}