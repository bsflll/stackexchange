{
  "title": "turning decompiled C++ code into writable C++",
  "link": "https://reverseengineering.stackexchange.com/questions/31301/turning-decompiled-c-code-into-writable-c",
  "content": "Here's my scenario I currently have a DLL that was made in like 2003 archived that has data and functions I still need to use and I'm also 90% sure the DLL doesn't work correctly as its too outdated. (Don't worry this is free software not under any license anymore).\n\nI already decompiled the code to C++ code (I got the assembly code to work as well but then I have no idea how to call the functions I need from C++ so I'm choosing to work with the decompiled C++ code).\n\nHow do I convert the decompiled C++ code to writable C++ code as the decompiled C++ code is practically machine C++ code. I know there have been similar questions but no clear solutions.\n\n(outdated)DLL > Disassembled ASM > Disassembled C++ nearly 85% writable but uses Qword Dword, precision integers like int32 or int64. > convert to writable C++ code\n\nIf you know any software that can translate decompiled C++ code into writable C++ that would be helpful as I have gotten too close to making this work.\n\n",
  "votes": "2",
  "answers": 2,
  "views": "3k",
  "tags": [
    "c++",
    "dll"
  ],
  "user": "DB_Coding",
  "time": "Dec 25, 2022 at 4:25",
  "comments": [],
  "answers_data": [
    {
      "content": "there is absolutely no software that would immediately generate a writable C/C++ listing, just as there is no such software that would replace or do the work of a reverse engineer.\n\nHex-Rays decompiler does not create a writable C/C++ listing. It creates pseudocode that the reverse engineer must KNOW and BE ABLE to translate into a writable listing.\n\n",
      "votes": "1",
      "user": null,
      "time": "Dec 24, 2022 at 20:26",
      "is_accepted": false,
      "comments": [
        {
          "user": "DB_Coding",
          "text": "Look man I'm not happy doing this I actually got the assembly code to recompile no problem at this point I'm forced to use C++ as there no command for C++ to read assembly data for functions unless you heard of one as then I would be done with this conversation this would be a complete 1 off for me.",
          "time": null
        }
      ]
    },
    {
      "content": "I completely agree with previous answer of @rce, but would like to provide a bit more details regarding why is it really so.\n\nLet's assume that the initial code of this DLL was wrote in C++ and then was compiled as DLL. During the compilation the following information was completely and almost unrecoverably lost (if you don't have the corresponding .pdb file with debug information or RTTI inside):\n\nReverse engineering of C++ code is recovering this information from the usage context.\n\nhere means that you can not automatically generate the lost information out of nothing, so you'll need to perform some reverse engineering manually.\n\n",
      "votes": "0",
      "user": "w s",
      "time": "Dec 25, 2022 at 9:32",
      "is_accepted": false,
      "comments": []
    }
  ]
}