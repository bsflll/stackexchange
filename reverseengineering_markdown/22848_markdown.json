{
  "title": "reverse engineering hi3516ev200",
  "link": "https://reverseengineering.stackexchange.com/questions/22848/reverse-engineering-hi3516ev200",
  "content": "I am new to reverse engineering and will describe my situation thus far. In short, I am looking for some tips on what to do next to gain access to a piece of hardware I am playing with. I bought a Chinese made ip camera online. What I have done so far to it is I have taken it apart, found the serial port, and have been able to get into u-boot by connecting to it from my PC. \n\nOther guides I have found online have had the author be luckier than I am, namely that the devices they hacked do not have a root password set. I tried all sorts of standard passwords, including no password, but I cannot log in as root. I am stuck working with a limited U-Boot that does not have all the commands compiled into it. Luckily I did manage to transfer a small file to the devices RAM using tftp, but I did not yet determine if the bootm command will actually try to run what I upload to the device.\n\nMy hope is not yet lost though, I have some ideas, and this is where I need guidance. The first step I will take is to see if I can construct a small ARMv7 assembly program that I can upload to the device and run on its processor. If this works, and I can verify it worked, then I can construct a program in assembly that can do various things, such as navigate the ROM and wipe the root password, or something like that.\n\nAnother option I have is to search through the ROM using the md command, which IS available! I tried using an online disassembler website to deconstruct the byte code, but I am not producing anything that looks like it could be code, so I may not be dealing with the parameters properly\n\nJust as a heads up, I tried various tricks I found online to disable the root password via u-boot, but nothing works. They seem to have locked down this camera pretty well.\n\nMY end goal is to ultimately extract the image from the camera onto my PC, and run it through some sort of emulator(if such a thing exists for ARM which I am sure it must), and then trace the firmware on the camera to see how it works, possibly even replacing it with my own.\n\nNone of this is for profit, its just a learning experience. Thanks in advance for any guidance you can give me\n\n",
  "votes": "2",
  "answers": 1,
  "views": "406",
  "tags": [
    "disassembly",
    "linux",
    "arm",
    "embedded"
  ],
  "user": "yemista",
  "time": "Dec 28, 2019 at 0:16",
  "comments": [],
  "answers_data": [
    {
      "content": "If you have U-Boot shell, changing bootargs environment variable to add the single keyword and then issuing the boot command should drop you into a root shell. Use printenv to see current args and the boot command. \n\n",
      "votes": "2",
      "user": "Igor Skochinsky",
      "time": "Dec 28, 2019 at 0:44",
      "is_accepted": false,
      "comments": []
    }
  ]
}