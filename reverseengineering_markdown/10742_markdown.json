{
  "title": "Can I set a basic block's parent in IDA?",
  "link": "https://reverseengineering.stackexchange.com/questions/10742/can-i-set-a-basic-blocks-parent-in-ida",
  "content": "I got a function whose control flow is kinda screwed... like this:\n\n\n\nAs you can see, the basic blocks at the top left aren't connected to anything; however, if I check the text disasm, this is what I see:\n\n\n\nAs you can see, IDA believes that the call doesn't ever return, puts the discontinued line there, and the control flow gets broken (as the next basic block doesn't have a parent).\n\nIs there any way I can manually link the basic blocks, or better, make IDA stop believing that the call doesn't return?\n\nEDIT:\nThe function does return, and doesn't break the rest of places it's used:\n\n\n\n",
  "votes": "8",
  "answers": 4,
  "views": "1k",
  "tags": [
    "ida"
  ],
  "user": "rev",
  "time": "Aug 29, 2015 at 14:30",
  "comments": [
    {
      "user": "NirIzr",
      "text": "Could you give trying to reanalyze program a go? That's at options -> General -> Analysis -> reanalyze program",
      "time": null
    },
    {
      "user": "Krypton",
      "text": "have you figured this out?",
      "time": null
    },
    {
      "user": "rev",
      "text": "@Krypton haven't done it myself but I heard it can be done with the cpp SDK",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The following picture shows a similar case (Ida V6.3):\n\n\n\nwith the corresponding useless graph view:\n\n\nObviously, Ida is completely disturbed.\nWhat worked for me in this case, was the following simple procedure:\n\nThre resulting graph view now looks decent:\n\n\nThis helped here, it might however not be a remedy in all similar cases.\n\nRemark: In this particular case, undefining and re-defining the function without undefining the code as well did NOT work.\n\n",
      "votes": "2",
      "user": "Community",
      "time": "Jun 17, 2020 at 9:54",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "It is possible to define a function as \"return\" or \"no return\".\n\nTo do it you should find your called function, right click on it, choose \"edit function\" and unmark \"Does not return\" checkbox.\n\n",
      "votes": "1",
      "user": "w s",
      "time": "Aug 29, 2015 at 14:26",
      "is_accepted": false,
      "comments": [
        {
          "user": "rev",
          "text": "Sorry, I forgot to add that, but the function isn't marked as 'Does not return'. I edited the post btw",
          "time": null
        },
        {
          "user": "w s",
          "text": "May be it is one of functions which is called by your not returning function ?",
          "time": null
        },
        {
          "user": "rev",
          "text": "But the function does return, it's just a printf like function which returns a pointer to a formatted string instead of printing it to stdout, so I'm really sure it can't be that it's 'not returning'",
          "time": null
        },
        {
          "user": "w s",
          "text": "I'd be glad to see a binary if possible. It is really strange.",
          "time": null
        },
        {
          "user": "w s",
          "text": "BTW, do you get something interesting if you patch this call with nops ?",
          "time": null
        }
      ]
    },
    {
      "content": "Uhm... you could do the other way around. Try this: in the address of the basic block that should be connected from that call statement you say, press Alt+F11 (change callee) and put the address where the call statement is.\n\n",
      "votes": "1",
      "user": "joxeankoret",
      "time": "Aug 25, 2016 at 16:44",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "You can try to set the type of function va(using hotkey Y). Then if that has no effect, you can try to undefine the function, and re-define that func to force IDA re-analyse.\n\nIf you have HexRays decompiler, you can call the decompiler in this function and then click into function va, and then return to the original function.\n\nThose above are tricks for IDA to force the analysis to be launched.\nI have testeds them on binaries of different CTFs. And in most siturations they worked.\n\nP.S.:Sorry for my poor English\n\n",
      "votes": "0",
      "user": "Misty",
      "time": "May 26, 2016 at 4:48",
      "is_accepted": false,
      "comments": []
    }
  ]
}