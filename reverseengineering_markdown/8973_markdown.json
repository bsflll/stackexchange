{
  "title": "What are the some of the special usecases of general purpose registers",
  "link": "https://reverseengineering.stackexchange.com/questions/8973/what-are-the-some-of-the-special-usecases-of-general-purpose-registers",
  "content": "Some of the general purpose registers are used for some specific reasons. For example EAX is used as an accumulator and to store return values, ECX is used as a counter, ESI and EDI are used to store the src and dst address, respectively. similarly, ESP and EBP.\n\nIs there any specific use case forEBX register? and Is there anything else that I have missed special use cases of general purpose registers?\n\nThank you.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "231",
  "tags": [
    "disassembly",
    "assembly"
  ],
  "user": "Maggie",
  "time": "May 24, 2015 at 8:00",
  "comments": [
    {
      "user": "phuclv",
      "text": "Implicit uses and special-ness for each register",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "• AX/EAX/RAX: Accumulator\n\n• BX/EBX/RBX: Base index (for use with arrays)\n\n• CX/ECX/RCX: Counter\n\n• DX/EDX/RDX: Data/general\n\n• SI/ESI/RSI: Source index for string operations.\n\n• DI/EDI/RDI: Destination index for string operations.\n\n• SP/ESP/RSP: Stack pointer for top address of the stack.\n\n• BP/EBP/RBP: Stack base pointer for holding the address of the current stack frame.\n\n• IP/EIP/RIP: Instruction pointer. Holds the program counter, the current instruction address.\n\nSegment registers:\n\n• CS: Code Segment (used for IP)\n\n• DS: Data Segment (used for MOV)\n\n• SS: Stack Segment (used for SP)\n\n• ES: Destination Segment (used for MOVS, etc.)\n\n• FS: local store\n\n• GS: local store\n\n",
      "votes": "4",
      "user": "Sigtran",
      "time": "May 24, 2015 at 8:29",
      "is_accepted": true,
      "comments": [
        {
          "user": "Guntram Blohm",
          "text": "Note that the original 8086 design had a lot more limitations on what you could do with which register that current processors have. There's still stuff like loop which works on cx or its extensions, but most instructions that needed a specific (set of) register(s) on 8086 work with any, or almost any, register now.",
          "time": null
        },
        {
          "user": "peter ferrie",
          "text": "specific case for [E/R]BX: xlat.",
          "time": null
        },
        {
          "user": "phuclv",
          "text": "RIP is not a general purpose register. R11 also has a special purpose in kernel code. And even the above registers have a lot more special purposes than what you listed",
          "time": null
        }
      ]
    }
  ]
}