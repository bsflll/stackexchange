{
  "title": "How to dump PHP backtrace on live running script in lldb?",
  "link": "https://reverseengineering.stackexchange.com/questions/9576/how-to-dump-php-backtrace-on-live-running-script-in-lldb",
  "content": "I'm trying to print PHP backtrace of the live running script using the following 2 simple steps:\n\nAbove worked, however the process stopped with the following warning:\n\n```\nWarning: sleep() expects at most 2 parameters, 1606408648 given in Command line code on line 1\nCall Stack:\n    0.0016     235152   1. {main}() Command line code:0\n    0.0021     235248   2. sleep(1000) Command line code:1\n\n```\nWhy the script stopped and how to prevent that? Is it possible to print PHP backtrace during live run without affecting the script?\n\nIs it because I should specify some return address? If so, which one?\n\nBtw. The same happening when calling zif_debug_print_backtrace() and when calling custom_backtrace() it is showing: Backtrace null function called. I'm using xdebug if that change anything.\n\nMaybe I need to call a different function like zend_fetch_debug_backtrace (see: image dump symtab)? Or use the right arguments, if so, which one?\n\nI'm interested either in lldb or gdb solutions.\n\n",
  "votes": "1",
  "answers": 0,
  "views": "218",
  "tags": [
    "debugging",
    "gdb",
    "callstack",
    "lldb",
    "php"
  ],
  "user": "kenorb",
  "time": "Aug 7, 2015 at 19:36",
  "comments": [],
  "answers_data": []
}