{
  "title": "How to obtain x86-64 pseudocode in IDA Pro?",
  "link": "https://reverseengineering.stackexchange.com/questions/2549/how-to-obtain-x86-64-pseudocode-in-ida-pro",
  "content": "Does anyone know about obtaining pseudocode for x86-64 in IDA Pro? I already tried the Hex-Rays plugin to obtain pseudocode, but when I try it, the following error pops up: \"only 32bit code is supported\".\n\n",
  "votes": "11",
  "answers": 3,
  "views": "114k",
  "tags": [
    "ida",
    "x86",
    "decompilation",
    "disassemblers",
    "x86-64"
  ],
  "user": "john",
  "time": "Nov 12, 2016 at 17:20",
  "comments": [
    {
      "user": "0xea",
      "text": "well, what kind of binary do you have? x86, x86_64 , ARM ... ?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "The two other answers here are outdated.\n\nFrom hex-rays website, in the page about the the hex-rays decompiler:\n\nOn 2014/06/04, with the release of IDA 6.6 hex-rays officially released their 64bit x86 decompiler, and it has been steadily improved since then. The official release can be seen on IDA 6.6 page as the first new feature as well as on their changelog.\n\nIt is a separate product and sold apart from their x86 32bit decompiler, and is currently quoted at the same price as the other decompilers (see price quotes page for named licenses).\n\nMore than two years after the first release, the decompiler is fully featured and is considered high-grade.\n\nTwo images of using IDA's 64 bit x86 disassembly and decompilation (from hex-ray's IDA 6.6 page):\n\n\n(source: hex-rays.com)\n\n\n\nThere are, however, other solutions that provide an IDA plugin for decompilation. Although not precisely what you were looking for, those provide another possible way to achieve your desired goal:\n\n",
      "votes": "10",
      "user": "Glorfindel",
      "time": "Jan 5, 2021 at 20:42",
      "is_accepted": false,
      "comments": [
        {
          "user": "w s",
          "text": "There is also a plugin from  retdec.com/idaplugin . It supports Intel x86, ARM, ARM+Thumb, MIPS, PIC32, PowerPC in ELF, PE, COFF, AR (archive) and Intel HEX formats. Please note that the decompilation process happens at their server, not locally.",
          "time": null
        },
        {
          "user": "Elmue",
          "text": "Snowman does not work at all. Look which garbage it creates: _memset(ecx, edi79, 0, 0x13c, \"p\", 0, 0, 1, v6, 0x130b, 0, 0, v5, edi7, esi8, ebx9, v82, v18, 0, v80, v83, v84, v11); and  MessageBoxW_CWnd_QAEHPB_W0I_Z(ecx, \"o\", 0, 0, edi66, eax68, 3, v60, 1, v6, 0x130b, 0, 0, v5, edi7, esi8, ebx9, v85, v18, v21, v24, v86, v87, v11, v42); Better use Ghidra",
          "time": null
        }
      ]
    },
    {
      "content": "As far as I know, IDA Hex-ray plugin supports only x86 and ARM decompiling (if you have a licence for ARM). It doesn't work on x86_64.\n\nHowever, if you need something that will work on x86_64 take a look at ida-decompiler:\n\nObviously, it's not as advanced as Hex-Rays, but it's a good step toward a good, open decompiler.\n\n",
      "votes": "8",
      "user": "Community",
      "time": "Jun 17, 2020 at 9:54",
      "is_accepted": false,
      "comments": [
        {
          "user": "NirIzr",
          "text": "This was correct at original time of writing but is no longer so. Please take a look at my answer.",
          "time": null
        }
      ]
    },
    {
      "content": "If you absolutely want pseudo-code and are out of luck with IDA Pro, you might want to give a try to demo version of hopper : it can generates pseudo-code for x86, x86-64, and ARM.\n\n",
      "votes": "3",
      "user": "jvoisin",
      "time": "Aug 1, 2013 at 13:49",
      "is_accepted": false,
      "comments": []
    }
  ]
}