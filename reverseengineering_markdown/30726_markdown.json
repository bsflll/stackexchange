{
  "title": "Automatically name class methods in IDA",
  "link": "https://reverseengineering.stackexchange.com/questions/30726/automatically-name-class-methods-in-ida",
  "content": "Let's say I have:\n\n```\nmov ecx, [g_pMyClassObj] ; type CMyClass\ncall sub_B00BA ; a thiscall function\n\n```\nIs there a feature/plugin/script to automatically rename all subroutine occurrences to:\n\n```\nmov ecx, [g_pMyClassObj] ; type CMyClass\ncall CMyClass__B00BA\n\n```\n",
  "votes": "3",
  "answers": 1,
  "views": "476",
  "tags": [
    "ida",
    "disassembly",
    "static-analysis"
  ],
  "user": "Maxim van Dijk",
  "time": "Aug 2, 2022 at 11:38",
  "comments": [
    {
      "user": "w s",
      "text": "Which Ida version are you using? Do you have HexRays decompiler?",
      "time": null
    },
    {
      "user": "Maxim van Dijk",
      "text": "I am using IDA version 7.7, And yes I have HexRays Decompiler and use it.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "As far as IDA is concerned it's programmable in almost every manner thanks to the scripting engine. When it comes to renaming a subroutine in IDA it can be achieved either using idc scripts or by using idapython.\n\nAlthough renaming class methods in IDA automatically can be a tough task because you have to provide much more information to IDA such as object-name, calling conventions etc. However, a more general occurrence of a subroutine can easily be renamed using idc script.\n\nI have provided a script below which can solve this problem. Although it can be modified to extract the subroutine offset B00BA from sub_B00BA and rename (or rather append) to a name of your liking, but I left that approach so that this script can more flexible (i.e you can change to any name and not just SomeSubName_Offset).\n\nidc script: rename_method.idc\n\n```\n#include <idc.idc>\n\nstatic main(void)\n{\n    auto ea, fncname, fstatus=-1;\n    auto findsub=\"sub_B00BA\";           // [1] Subroutine to find\n    auto newsubName=\"CMyClass__B00BA\" ; // [2] New name for the subroutine \n    for (ea=MinEA(); ea != BADADDR; ea=NextFunction(ea))\n    {\n        fncname = GetFunctionName(ea);                \n        if (fncname == findsub) \n        {\n            auto errcode = MakeNameEx(ea, newsubName, SN_PUBLIC|SN_CHECK|SN_NOWARN);\n            if (errcode)\n            {\n                Refresh();\n                RefreshLists();\n                Message(\"[*] disassembly/subroutine-list refreshed..ok  \n\");\n            }\n            fstatus=1;\n            return;\n        }\n    }\n        if (fstatus == -1)  // if we don't have such function in disassembly\n        {\n            Message(\"[*] subroutine:\" + findsub +\n            \" not found.  \nplease check name of the subroutine/method again.  \n\");\n        }\n}\n\n```\nPlease make sure you change subroutine name at [1] and [2]. I have tested this script using IDA 6.6 and it will definitely work with IDA 7.x.\n\n",
      "votes": "2",
      "user": "tripleee",
      "time": "May 16, 2023 at 13:39",
      "is_accepted": false,
      "comments": [
        {
          "user": "Maxim van Dijk",
          "text": "This is one piece of the puzzle. Thank you for your contribution!",
          "time": null
        },
        {
          "user": "Rolf Rolles",
          "text": "You don't need to loop over every function comparing its name against the one you want. You can use get_name_ea instead. (In earlier versions of IDA like 6.6, it was known as LocByName.)",
          "time": null
        }
      ]
    }
  ]
}