{
  "title": "Is there a way to get the headers with the Radare output?",
  "link": "https://reverseengineering.stackexchange.com/questions/17388/is-there-a-way-to-get-the-headers-with-the-radare-output",
  "content": "When I use a command like fs, I get output like \n\n```\n0    0 * strings\n1    6 * symbols\n2   14 * sections\n3    0 * relocs\n\n```\nIt's clear to me on the left is an incrementing number that represents the flagspace. It's not clear to me what the number on the right is; fs is defined as \n\n```\nUsage: fs [*] [+-][flagspace|addr] # Manage flagspaces\n\n```\n",
  "votes": "1",
  "answers": 2,
  "views": "829",
  "tags": [
    "radare2"
  ],
  "user": "Evan Carroll",
  "time": "Feb 4, 2018 at 22:47",
  "comments": [],
  "answers_data": [
    {
      "content": "As @blabb said, this number represents the amount of flags in each flagspace.\n\nSo for your example:\n\n```\n0    0 * strings\n1    6 * symbols\n2   14 * sections\n3    0 * relocs\n\n```\nBut more generally, the title of your question asks whether there's \"a way to get the headers with the Radare output?\", the answer for this is yes.\n\nGetting the headers\n\nSome of radare's informative commands (which print information) shows you a key-value output. Take for example the ie command to print the entrypoints of the program:\n\n```\n[0x00400530]> ie\n[Entrypoints]\nvaddr=0x00400530 paddr=0x00000530 baddr=0x00400000 laddr=0x00000000 haddr=0x00000018 type=program\n\n1 entrypoints\n\n```\nYou can see that each value is printed with its key (vaddr, paddr, type and so on).\n\nOther commands would not show you the headers, just as your example with the fs command. So what can you do to show this information? Simply, use the JSON representation of the output. Most of radare2's informative commands can be appended with a j to format the output as JSON.\n\nSo, for example, printing fsj will show you the flagspaces in JSON. I'll add ~{} to format the output with JSON indention for readabilty:\n\n```\n[0x00400530]> fsj~{}\n[\n  {\n    \"name\": \"strings\",\n    \"count\": 5,\n    \"selected\": true\n  },\n  {\n    \"name\": \"symbols\",\n    \"count\": 36,\n    \"selected\": false\n  },\n  {\n    \"name\": \"sections\",\n    \"count\": 82,\n    \"selected\": false\n  },\n  {\n    \"name\": \"relocs\",\n    \"count\": 6,\n    \"selected\": false\n  },\n  {\n    \"name\": \"imports\",\n    \"count\": 6,\n    \"selected\": false\n  }\n]\n\n```\nAs you can see, radare presents us with a simple JSON output that contains the headers (keys) for each value. This way you can easily spot the \"count\" header which is corresponding to the output without j.\n\n",
      "votes": "3",
      "user": "Megabeets",
      "time": "Feb 5, 2018 at 17:39",
      "is_accepted": true,
      "comments": [
        {
          "user": "Evan Carroll",
          "text": "Heh nice trick. Love it",
          "time": null
        }
      ]
    },
    {
      "content": "Are you querying about The Count of Specific flagspace  ?\n\n```\n[0x01012d6c]> fs\n0 2105 . strings\n1    1 . symbols\n2    8 * sections\n3  381 . relocs\n4  381 . imports\n5    0 . resources\n[0x01012d6c]> fs symbols; f| wc -l\n1\n[0x01012d6c]> fs sections  ; f | wc -l\n8\n[0x01012d6c]> fs imports  ; f | wc -l\n381\n[0x01012d6c]>\n\n```\n",
      "votes": "0",
      "user": "blabb",
      "time": "Feb 5, 2018 at 4:27",
      "is_accepted": false,
      "comments": []
    }
  ]
}