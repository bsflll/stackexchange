{
  "title": "Renaming a local stack variable with IDAPython",
  "link": "https://reverseengineering.stackexchange.com/questions/30622/renaming-a-local-stack-variable-with-idapython",
  "content": "I am trying to write an IDAPython script that renames some local variables (in the disassembly window) according to some logic, unfortunately I am unable/failing to use the API to do so...\n\nIn my searches I found that set_member_name should be used since the stack frame is treated like a structure from IDA's POV, but again the documentation is not clear about how I can name a variable in a certain stack frame (or any structure for that matter)...\n\nI will appreciate any help.\n\n",
  "votes": "1",
  "answers": 2,
  "views": "374",
  "tags": [
    "ida",
    "idapython",
    "stack-variables",
    "idc"
  ],
  "user": "rotem.salinas",
  "time": "Jul 13, 2022 at 8:45",
  "comments": [
    {
      "user": "vmallet",
      "text": "Can you precise if this is for the disassembly window or for the pseudocode window (decompiler)?",
      "time": null
    },
    {
      "user": "rotem.salinas",
      "text": "For Disassembly.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I managed to write a function that is doing what I was looking for...\nsharing my code below:\n\n```\ndef rename_stack_variable(func_addr, var_name, new_var_name):\n    func = idaapi.get_func(func_addr)\n    frame = idaapi.get_frame(func)\n\n    offset = 0x0\n\n    for i in range(0, len(list(frame.members))):\n        if var_name == get_member_name(frame.id, offset):\n            break\n        offset = i * 4\n\n    set_member_name(frame.id, offset, new_var_name)\n\n```\n",
      "votes": "2",
      "user": "rotem.salinas",
      "time": "Jul 14, 2022 at 10:49",
      "is_accepted": true,
      "comments": [
        {
          "user": "rotem.salinas",
          "text": "** a small comment on my code above is that I assumed that all the stack variables are 4 bytes, which is not necessarily true but worked on my case, so if you/someone has a better solution I would be happy to hear :)",
          "time": null
        }
      ]
    },
    {
      "content": "```\n    my_rename <- function(df, varname) {\n  varname <- ensym(varname)\n  \n  df %>% \n    rename(!!varname := cyl) %>% \n    group_by(!!varname) %>%\n    summarize(mean_mpg = mean(mpg))\n}\n\nmy_rename(mtcars, cylinder)\n\n# A tibble: 3 x 2\n  cylinder mean_mpg\n     <dbl>    <dbl>\n1        4     26.7\n2        6     19.7\n3        8     15.1\n\n```\n",
      "votes": "-2",
      "user": "MusaPekel",
      "time": "Jul 16, 2022 at 16:12",
      "is_accepted": false,
      "comments": []
    }
  ]
}