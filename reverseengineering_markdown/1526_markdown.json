{
  "title": "Open source GUI tool for decomposing a PDF",
  "link": "https://reverseengineering.stackexchange.com/questions/1526/open-source-gui-tool-for-decomposing-a-pdf",
  "content": "I've been looking for an open-source GUI tool to extract PDF's in an automated way on Windows systems. I've used Didier Steven's tools with great interest for a while, but cannot make sense of how to use his PDF decomposing/analyzing tools, even after watching some of his videos. They seem to require significant understanding of the underlying PDF construction, and possibly much more.\n\nFor SWF files, the tool SWFScan is the kind I'm looking for: you load the file in question into the tool. From there, you can explore the links, scripts, and images. It even auto-analyses code and shows which parts may have security issues and what the issue is for each one, then gives a webpage reference with more information.\n\nDoes anyone know of a good open-source GUI for Windows that can load a PDF and not execute it but extract all the scripts, compiled code, text, links, images, etc.? Ideally, it would show the relation of each, like when you click on a certain image, it would tell you what script(s) are run, which URL it goes to, and let you see the image on its own.\n\nPDF's are so common, next to SWF, that this kind of tool seems like it would already be common. I may have overlooked it/them.\n\n",
  "votes": "34",
  "answers": 5,
  "views": "31k",
  "tags": [
    "decompilation",
    "tools",
    "windows"
  ],
  "user": "Lizz",
  "time": "Apr 3, 2013 at 3:18",
  "comments": [
    {
      "user": "amccormack",
      "text": "Didier Stevens tools are widely used, but you're right, you do need an understanding of the PDF file format if you want to understand it.  I have a (somewhat lengthy) blog post that walks through a PDF file line by line to explain the basics of the structure, but none of it uses any GUI tools.  Didier also has a template for 010 Editor. 010 has a strong reputation and you can try it free for 30 days",
      "time": null
    },
    {
      "user": "Lizz",
      "text": "@amccormack Great comment, tag edit, and great writeup - I'm reading it now. Interestingly, it's convincing me that the tool I'm looking for should exist - even if only commercially, which I'd pay for if it was good. I used to think great tools usually are text/command-line based, but cases like this make me realize a picture is sometimes worth more than 1,000 words. Even with greater complexity than SWF files, there's still a structure which could benefit from such a tool.",
      "time": null
    },
    {
      "user": "Willem Hengeveld",
      "text": "Unmaintained since 2006, but still an interesting tool: multivalent.sourceforge.net",
      "time": null
    },
    {
      "user": "Willem Hengeveld",
      "text": "Also, github.com/qpdf/qpdf may help, it can convert the pdf to a more human readable format, at the source level.",
      "time": null
    },
    {
      "user": "michaeljt",
      "text": "I can no longer access @amccormack's blog post under the link in his comment; I do find it here, with a slightly changed URL: amccormack.net/2012-01-22-anatomy-of-a-pdf-document.html Thank you!",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Sogeti's Origami framework comes with a GTK based GUI.\n\n\n\nHere is how I installed it on my Windows 7 system:\n\ngem install origami\n\ngem install gtk2\n\ngem install pdfwalker\n\nFinally, simply run pdfwalker from a cmd prompt.\n\nIf this doesn't work for you, I'd suggest trying the above steps from Cygwin, where you can essentially follow instructions for installing on *nix.\n\nIf you're installing it on Ubuntu/Debian\n\nInstall ruby with the following command:\n\napt install ruby-full\n\nAfterwards install origami as listed above:\n\ngem install origami\n\nIf you want to use the GUI you will probably need to install libgtk2.0-dev and get the rake gem installed for you to be able to install gtk2:\n\n```\napt install libgtk2.0-dev\ngem install rake\ngem install gtk2\n\n```\nSince pdfwalker also needs libcanberra, it's a good idea to install it now:\n\napt install libcanberra-gtk-module\n\nAfterwards install pdfwalker, since it was moved to a separate gem:\n\ngem install pdfwalker\n\nAnd it should run from the commandline as described above.\n\n",
      "votes": "30",
      "user": "Mick",
      "time": "May 16, 2021 at 20:45",
      "is_accepted": true,
      "comments": [
        {
          "user": "Lizz",
          "text": "This would be great, but I can't seem to get the GUI 'pdfwalker' installed/running. Looking at the webpage, I'm not seeing Windows support. Can you point me to how I can get this app's GUI running on Windows?",
          "time": null
        },
        {
          "user": "Mick",
          "text": "I updated my answer with steps to install on Windows. I have it running on my Windows 7 system now.",
          "time": null
        },
        {
          "user": "sshine",
          "text": "Update for Ruby 2.2., gtk2-2.2.5: You need a whole lot of Cygwin packages to make this work. Besides gcc and make, the list of libraries is not obvious and involves running gem install origami and [superuser.com/questions/923190/… the mkmf.log) to see which libraries it fails on. It also requires installing an X server, starting it, export DISPLAY=:0.0 and even I get: /usr/share/rubygems/rubygems/core_ext/kernel_require.rb:54:in require': superclass mismatch for class Date (TypeError)`",
          "time": null
        },
        {
          "user": "Max Barraclough",
          "text": "The Origami website seems to no longer exist.",
          "time": null
        },
        {
          "user": "Mick",
          "text": "@MaxBarraclough - update link. web.archive.org/web/20190914234428/esec-lab.sogeti.com/pages/…",
          "time": null
        }
      ]
    },
    {
      "content": "To extract malicious content mostly, like scripts and exploits, You may look on online tools:\n\nWepawet - online toolkit for analysis of js\\pdf\\flash files.  \n\nJsunpack - online toolkit for analysis of files, that may contain packed\\encoded JavaScript code, like PDF\\HTML\\JS. also work with .pcap files\n\nIn addition - offline tool for linux (well, not GUI, but good tool) to extract shellcodes and hidden fields:\n\nPdfextract - An offline command-line tool and library that can extract various areas of text from a PDF. \n\n",
      "votes": "8",
      "user": "Denis Laskov",
      "time": "May 8, 2013 at 5:34",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Perhaps PdfStreamDumper is close enough to what you want, but you're still going to need some knowledge of PDF to use it effectively.\n\n",
      "votes": "6",
      "user": "perror",
      "time": "Apr 3, 2013 at 13:14",
      "is_accepted": false,
      "comments": [
        {
          "user": "asheeshr",
          "text": "Please add a short description about the link and/or the relevant matter. Link-only answers are not considered answers.",
          "time": null
        }
      ]
    },
    {
      "content": "I highly recommend Cerbero Profiler! \n\nYou might also want to check out my open source file-dissect tool. I wrote a PDF parser for it, but haven't committed it yet. Sorry, I know that doesn't help much. I will eventually push it up though.\n\n",
      "votes": "5",
      "user": "0xC0000022L",
      "time": "Apr 5, 2013 at 14:24",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "While there is no GUI, I believe it's worth mentioning command lines tools that will help with the in an automated way part of your question. I've personally used the mupdf associated command line tool: mutool.\n\nFor example working on the following PDF file, here is what you would do to extract the encapsulated JPX stream:\n\n```\n$ mutool info Bug691816.pdf \nBug691816.pdf:\n\nPDF-1.5\nInfo object (49 0 R):\n<</ModDate(D:20101122114310-08'00')/CreationDate(D:20101122114251-08'00')/Title(ID1561x.indd)/Creator(Adobe InDesign 1.5.2)/Producer(Adobe PDF Library 4.16)>>\nPages: 1\n\nRetrieving info from pages 1-1...\nMediaboxes (1):\n    1   (54 0 R):   [ 0 0 612 792 ]\n\nImages (1):\n    1   (54 0 R):   [ JPX ] 300x161 8bpc Idx (58 0 R)\n\n```\nSo you simply need to:\n\n```\n$ mutool show -be -o obj58.jp2 Bug691816.pdf 58\n\n```\nYou can verify:\n\n```\n$ file obj58.jp2\nobj58.jp2: JPEG 2000 Part 1 (JP2)\n\n```\nSee documentation:\n\nFor PDF/A-3: EmbeddedFile (as in this file) you can even run:\n\n```\n$ mutool portfolio ZUGFeRD_1p0_BASIC_Einfach.pdf x 0 ZUGFeRD-invoice.xml\n$ head ZUGFeRD-invoice.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- \n\nNutzungsrechte \nZUGFeRD Datenformat Version 1.0, 25.6.2014\nBeispiel Version 29.09.2014\n\nZweck des Forums für elektronische Rechnungen bei der AWV e.V („FeRD“) ist u.a. die Schaffung und Spezifizierung \neines offenen Datenformats für strukturierten elektronischen Datenaustausch auf der Grundlage offener und nicht \ndiskriminierender, standardisierter Technologien („ZUGFeRD Datenformat“)\n\n```\nSee documentation:\n\n",
      "votes": "2",
      "user": "tibar",
      "time": "Nov 17, 2017 at 7:44",
      "is_accepted": false,
      "comments": [
        {
          "user": "Paweł Łukasik",
          "text": "OP asks for GUI tool",
          "time": null
        },
        {
          "user": "tibar",
          "text": "Indeed I missed that, this conflicts with in an automated way imho",
          "time": null
        },
        {
          "user": "Paweł Łukasik",
          "text": "in most cases yes, but doesn't have to",
          "time": null
        }
      ]
    }
  ]
}