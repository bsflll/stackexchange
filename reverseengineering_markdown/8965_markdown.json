{
  "title": "How can I change the a port a program listens on?",
  "link": "https://reverseengineering.stackexchange.com/questions/8965/how-can-i-change-the-a-port-a-program-listens-on",
  "content": "I want to change the port number a program listens on. The program is a proprietary linux binary, Plex, that always listens to tcp port 32400 (hard-coded).  Since I want to run this on a shared server, another person may already be using this port.  I do not have root access on the server.  The VPS provider is OK with Plex running on their servers.\n\nWould it be possible to use something like LD_PRELOAD to change the port number? If so, how would I go about doing this?  If not, how else might I accomplish this?\n\nIssues changing default port from 32400 on VPS\n\n",
  "votes": "1",
  "answers": 2,
  "views": "992",
  "tags": [
    "linux",
    "c"
  ],
  "user": "jftuga",
  "time": "May 23, 2015 at 1:25",
  "comments": [],
  "answers_data": [
    {
      "content": "You have a couple of options:\n\n",
      "votes": "3",
      "user": "Frederik Deweerdt",
      "time": "May 23, 2015 at 1:48",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Probably the easiest way to do this, if you don't have any special tools, is run plex under the control of gdb, with the input of gdb comping from a script. To do that, you need to find the address where 32400 is hardcoded.\n\n```\nobjdump -D plex | grep -i 7e90\n\n```\nshould give you something like\n\n```\n40090b: bf 90 7e 00 00          mov    $0x7e90,%edi\n\n```\nStart gdb, set a breakpoint there, run the program until it hits the breakpoint.\n\n```\ngdb plex\nbreak *0x40090b\nrun\n\n```\nStep one instruction, change the register value, and continue running the program:\n\n```\nstepi\n>> 0x0000000000400910 in main ()             <-- address of next instruction\ninfo registers                               <-- just to make sure\n>> rdi            0x7e90    32400\nset $rdi=0x7e91                              <-- patch the value\ninfo registers                               <-- again, just to make sure\n>> rdi            0x7e91    32401\ncont\n\n```\nIn a different window, check if plex really listens on the other port:\n\n```\nnetstat -ntap | grep plex\ntcp   0      0 0.0.0.0:32401     0.0.0.0:*     LISTEN      22018/plex \n\n```\nyes it did!\n\nNow automate this in a script:\n\n```\ngdb plex <<EOF\nbreak *0x400910      <-- note this is the instruction AFTER the load, not the one we breaked on last time\nrun\nset $rdi=0x7e91\ncont\nEOF\n\n```\nand run that script instead of plex everytime you want to start it on a different port.\n\nOf course, you could also use a hex editor to change the value in the binary directly. You'll even have to do this if the routine that sets up the listening port gets called repeatedly (so you can't predict which exact input gdb needs). However, in many cases, this might be the easiest method, since it doesn't require changing the binary or programming a LD_PRELOAD handler, and changing the port number later is super-easy.\n\n",
      "votes": "3",
      "user": "Guntram Blohm",
      "time": "May 23, 2015 at 8:18",
      "is_accepted": false,
      "comments": [
        {
          "user": "jftuga",
          "text": "I found rdx  0x7e90   32400 in gdb and changed it.  It is now running on a different port number.  In a hex editor, what would I look for to make the change permanent?",
          "time": null
        },
        {
          "user": "jftuga",
          "text": "I found rdx  0x7e90   32400 in gdb and changed it.  It is now listening on both 32400 and 32401.  I also checked the registers a 6 other breakpoints as that it what objump|grep returned.  Any ideas as to why it would be doing this?",
          "time": null
        },
        {
          "user": "jftuga",
          "text": "Ah, it looks like Plex uses both 32400 and 32401 by default.  I will try changing the register to another value.",
          "time": null
        }
      ]
    }
  ]
}