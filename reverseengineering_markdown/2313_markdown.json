{
  "title": "Attaching GDB to a specific fork",
  "link": "https://reverseengineering.stackexchange.com/questions/2313/attaching-gdb-to-a-specific-fork",
  "content": "I am trying to reverse engineer a Linux binary that makes several fork() calls. I am using GDB 7.5 on Ubuntu. What I am trying to do with GDB is attach to a certain fork() (say the second call). Is the only way to do this to set follow-fork-mode to child and catch all calls to fork and manually switch it each time?\n\n",
  "votes": "10",
  "answers": 2,
  "views": "3k",
  "tags": [
    "linux",
    "gdb",
    "multi-process"
  ],
  "user": "Compster",
  "time": "Jun 22, 2013 at 1:27",
  "comments": [],
  "answers_data": [
    {
      "content": "You can also use set detach-on-fork off, as said in the documentation:\n\nThe documentation says also this:\n\n",
      "votes": "5",
      "user": "jvoisin",
      "time": "Jul 15, 2013 at 10:17",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "What you describe is how I've typically approached this.  Setting a breakpoint on fork itself provides a nice spot to change this mode, if necessary.\n\nOr, if the child threads / processes are \"stable\", you can switch to them after the fact with the inferior command.\n\nhttp://sourceware.org/gdb/onlinedocs/gdb/Forks.html\n\n",
      "votes": "2",
      "user": "Jonathon Reinhart",
      "time": "Jun 28, 2013 at 5:48",
      "is_accepted": false,
      "comments": []
    }
  ]
}