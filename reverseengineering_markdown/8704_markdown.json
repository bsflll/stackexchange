{
  "title": "Can PowerPC64 ELF file have 32-bit pointers?",
  "link": "https://reverseengineering.stackexchange.com/questions/8704/can-powerpc64-elf-file-have-32-bit-pointers",
  "content": "I've been given an ELF binary file which self describes as PowerPC 64-bit. The e_entry field of the ELF header points to the beginning of a section called .opd. According to this specification, it is supposed to point to a function descriptor. The same specification states that a function descriptor consists of three doublewords (64-bit words). \n\nHowever, the binary in question (available here) appears to have only two 32-bit words for each function descriptor. \n\nSo the question is, why are there 32-bit pointers in this 64-bit binary? \n\n",
  "votes": "1",
  "answers": 1,
  "views": "318",
  "tags": [
    "elf",
    "powerpc"
  ],
  "user": "John Källén",
  "time": "Apr 15, 2015 at 12:39",
  "comments": [],
  "answers_data": [
    {
      "content": "PS3 (cell) ABI used 64-bit registers but 32-bit pointers. Maybe this sample is from there.\n\nP.S. section names .sceStub.text and .rodata.sceResident definitely point to Sony code (SCE= Sony Computer Entertainment)\n\n",
      "votes": "4",
      "user": "Igor Skochinsky",
      "time": "Apr 15, 2015 at 16:17",
      "is_accepted": true,
      "comments": [
        {
          "user": "John Källén",
          "text": "Is there any (preferrably documented) way to tell that a file is a PS3 executable, as opposed to a \"regular\" PPC ELF file with 64-bit pointers? I see no clues in the standard ELF headers. Are there any other ways to determine this, apart from looking at those section names?",
          "time": null
        },
        {
          "user": "Igor Skochinsky",
          "text": "check e_ident[EI_OSABI].",
          "time": null
        }
      ]
    }
  ]
}