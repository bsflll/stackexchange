{
  "title": "Can one binary use both lazy binding and non-lazy binding?",
  "link": "https://reverseengineering.stackexchange.com/questions/33292/can-one-binary-use-both-lazy-binding-and-non-lazy-binding",
  "content": "I inspected /bin/rm binary on macOS with the next command:  otool -l /bin/rm  | grep symbol_ptr -A5 and I've got the next output:\n\n```\n   segname __DATA\n      addr 0x0000000100004000\n      size 0x0000000000000008\n    offset 16384\n     align 2^3 (8)\n--\n  sectname __la_symbol_ptr\n   segname __DATA\n      addr 0x0000000100004028\n      size 0x0000000000000148\n    offset 16424\n     align 2^3 (8)\n\n```\nI know the following:\n__nl_symbol_ptr: Non lazy (bind at load) symbol pointer\n__la_symbol_ptr: Lazy (bind on use) symbol pointer\n\nDoes it mean that /bin/rm binary uses both Lazy and Non lazy bindings?\n\n",
  "votes": "0",
  "answers": 0,
  "views": "41",
  "tags": [
    "debugging",
    "binary-analysis",
    "binary",
    "binary-format",
    "macos"
  ],
  "user": "pacman",
  "time": "Oct 28, 2024 at 8:26",
  "comments": [],
  "answers_data": []
}