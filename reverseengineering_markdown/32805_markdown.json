{
  "title": "Dynamic analysis of cmd dependent software",
  "link": "https://reverseengineering.stackexchange.com/questions/32805/dynamic-analysis-of-cmd-dependent-software",
  "content": "There is a PE file, which can't run by itself, and can only be called from cmd.exe, it doesn't create independent processes, and can be launched independently only with .bat scripts, which without \"pause\" just execute themselves and self-destruct. Trying to attach debugger to cmd, only debugs the cmd.exe process. So am I doing something very wrong, or there is no real way to dynamically analyze this PE file?\n\n",
  "votes": "0",
  "answers": 0,
  "views": "45",
  "tags": [
    "binary-analysis",
    "windbg",
    "x86-64"
  ],
  "user": "flying_meatball",
  "time": "Mar 29, 2024 at 9:37",
  "comments": [
    {
      "user": "Robert",
      "text": "You forgot to include the command that is required to call that PE files from cmd. That would allow us to better understand what you are talking about.",
      "time": null
    },
    {
      "user": "flying_meatball",
      "text": "My bad. First you need to drop down into folder with our program.exe, and then just call it by name, so it's like  cd C:/Users/User/Programs/Program1 program.exe arg1 arg2",
      "time": null
    },
    {
      "user": "Robert",
      "text": "Then you just execute the PE file and get a separate process. May be the process only exists for some milliseconds and then injects itself in a different process? Using Sysinternals ProcessMonitor I am sure you will see that there is a process and how long it lives.",
      "time": null
    }
  ],
  "answers_data": []
}