{
  "title": "Why Ghidra doesn't load the disassembly correctly while radare2 does?",
  "link": "https://reverseengineering.stackexchange.com/questions/22974/why-ghidra-doesnt-load-the-disassembly-correctly-while-radare2-does",
  "content": "I'm trying to get the disassembly of a very small binary file available here. This file is cropped from part of another executable binary. \n\nWhen I open it with r2 it automatically recognizes the architecture and can provide me with the diassembly: \n\n\n\nWith Ghidra however, it cannot find the architecture automatically and I have to manually specify the language: \n\n\n\nEven then, I'm getting the following as the disassembly:\n\n\n\nI'm very surprised by how poor NSA's Ghidra is performing in such scenario compared to the open source radare2. Can someone describe what's going on and how can I fix it? \n\n",
  "votes": "4",
  "answers": 2,
  "views": "4k",
  "tags": [
    "disassembly",
    "ghidra"
  ],
  "user": "Kennet Celeste",
  "time": "Jan 12, 2020 at 17:03",
  "comments": [],
  "answers_data": [
    {
      "content": "When you have just raw bytes without proper headers tools might not know how to process as the code might not start from offset 0. They could try to analyze the bytes to detect if there's code, data or something else but you might also get some false-positives.\n\nIn your case, you instruct r2 to display those bytes as code (pd - print disassembly) and it does not recognize any architecture as it has x86 by default. You would get the same when you open no file (r2 - and then e asm.arch)\n\nIn Ghidra you selected the architecture manually and to \"force\" the tool to do the same as your pd in radare2 just press D.\n\n",
      "votes": "6",
      "user": "Paweł Łukasik",
      "time": "Jan 13, 2020 at 9:02",
      "is_accepted": true,
      "comments": []
    },
    {
      "content": "Paweł Łukasik is correct.\n\nDisassembling the code fragment using Ghidra can be done in 3 steps:\n\n\n\n\n\n",
      "votes": "4",
      "user": "julian",
      "time": "Jan 12, 2020 at 21:18",
      "is_accepted": false,
      "comments": []
    }
  ]
}