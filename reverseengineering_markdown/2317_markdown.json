{
  "title": "Setting GDB watchpoint on a string",
  "link": "https://reverseengineering.stackexchange.com/questions/2317/setting-gdb-watchpoint-on-a-string",
  "content": "I am attempting to reverse engineer a 32-bit stripped, dynamically linked ELF executable. I want to know when a specific string is printed to the console. I ran the following command:\n\n```\nroot@testbox> strings -a --radix=x binfile | grep -i reset\nd38c4  RESET\n\n```\nThis is the string I want to know when is being printed to the console. This could either be happening with printf or puts (which are called many many times during the flow of execution)\n\nWhat is the appropriate way to use the string's memory address to tell when its being read (thus printed to the screen)?\n\n",
  "votes": "7",
  "answers": 1,
  "views": "2k",
  "tags": [
    "gdb"
  ],
  "user": "Compster",
  "time": "Mar 7, 2014 at 16:50",
  "comments": [],
  "answers_data": [
    {
      "content": "You can find the load address of a pattern in a simpler way\n\n```\nobjdump -s \"executable\" | grep -i \"pattern\"\n\n```\nConfirm it with gdb by \n\n```\nx/s \"*(returned address from objdump)\"\n\n```\n",
      "votes": "3",
      "user": "asheeshr",
      "time": "Jun 28, 2013 at 2:45",
      "is_accepted": false,
      "comments": []
    }
  ]
}