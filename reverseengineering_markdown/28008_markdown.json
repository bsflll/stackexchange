{
  "title": "Inserting two digits into binary per Hex - without making EXE corrupt",
  "link": "https://reverseengineering.stackexchange.com/questions/28008/inserting-two-digits-into-binary-per-hex-without-making-exe-corrupt",
  "content": "I dont have much knowledge with assemblers. I beg ur pardon in advance.\n\nI need to change an IP address in a win-binary (Net) where the IP its hard-coded.\nJust changing the IP with an Hex Editor would be that easy.\nBut the new IP has longer Octet - e.g.\n\n\n\nI want to change the 123.12.12.123 to 123.123.123.123\nJust inserting some digits per Hex Editor makes the file corrupt (adresses from routines etc. are moving I guess).\n\nWhat would be the \"easiest\" way to do that?\nThanks.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "157",
  "tags": [
    "patching",
    ".net",
    "hex",
    "strings"
  ],
  "user": "TefoD",
  "time": "Jul 26, 2021 at 9:16",
  "comments": [
    {
      "user": "Guillaume",
      "text": "When you speak about a \"win-binary (Net)\", are you referring to a .Net (dot net) application ?",
      "time": null
    },
    {
      "user": "TefoD",
      "text": "I guess so. In Ghidra I can see that \"mscoree.dll\" is been imported.",
      "time": null
    },
    {
      "user": "Guillaume",
      "text": "You can then use 'dnSpy' to edit the method/class you want to, and recompile your application when you are done",
      "time": null
    },
    {
      "user": "TefoD",
      "text": "@Guillaume.. Wow, that was a great hint.. dnSpy is a great piece of software with intuitive operation.. I am just amazed, how easy this was possible, Thank you very much. btw: I can't accept a comment as a solution - if you dont mind, just post it as answer; I will accept.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Since you are dealing with a dot Net application, this will be super easy.\n\nAs dot Net application are 'compiled' using an Intermediate Language (IL), you may be able to recover something very close to the original source code. If the binary is not obfuscated/protected, you just have to open-up your application in a .NET editor.\n\nDnSpy is the one that I find the most complete. Other software can be used, like ILSpy for instance.\n\nTheses tools allows you to edit the decompiled code, then to re-compile it.\n\nIn your case, you have to find where this IP is being declared, change it to whatever you want, then recompile the binary.\n\nThis is not allays that easy, but you are lucky: you found the easier reverse-engineering case :)\n\n",
      "votes": "2",
      "user": "Guillaume",
      "time": "Jul 16, 2021 at 14:47",
      "is_accepted": true,
      "comments": []
    }
  ]
}