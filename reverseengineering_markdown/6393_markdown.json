{
  "title": "How to include these exception handle symbols in x86 assembly code?",
  "link": "https://reverseengineering.stackexchange.com/questions/6393/how-to-include-these-exception-handle-symbols-in-x86-assembly-code",
  "content": "The test is on 32bit x86 Linux, with g++ 4.6.3.\n\nSo basically I use a IDA pro script to recover the .gcc_excpt_table and .eh_frame sections from binary compiled from C++ language.\n\nBasically I want to reuse the dumped information of these two exception handling tables in a new assembly code disassembled from this C++ ELF binary.\n\nI put these two tables into the assembly code produced by disassembler, solving all intra-module address issue (basically translate concrete addresses into symbols) and re-compile it like this:\n\n```\ng++ final.s\n\n```\nHowever, there are three symbols that can not be found or I just don't know how to define it.\n\n",
  "votes": "2",
  "answers": 0,
  "views": "286",
  "tags": [
    "disassembly",
    "x86",
    "c++",
    "reassembly",
    "exception"
  ],
  "user": "lllllllllllll",
  "time": "Apr 13, 2017 at 12:49",
  "comments": [],
  "answers_data": []
}