{
  "title": "How to read canary value in gdb?",
  "link": "https://reverseengineering.stackexchange.com/questions/15344/how-to-read-canary-value-in-gdb",
  "content": "In a program I am debugging, the canary value is read to eax from gs:0x14 memory location. I am attaching gdb to the process late enough to break on the mov reading the canary to eax. Therefore, reading eax is not an option to me. How can I read (x/w) the canary location (gs:0x14) in gdb?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "6k",
  "tags": [
    "gdb"
  ],
  "user": "sherlock",
  "time": "May 14, 2017 at 16:59",
  "comments": [
    {
      "user": "julian",
      "text": "very similar questions have been asked and answered here and here",
      "time": null
    },
    {
      "user": "Igor Skochinsky",
      "text": "@SYS_V I'm not sure either one was really \"answered\" (well, maybe if you count \"you can't\" as an answer)",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "It seems it's not possible to do this using built-in GDB functionality but I found a blog post which explains how to get the gs base from a core dump:\n\nhttps://www.technovelty.org/linux/debugging-__thead-variables-from-coredumps.html\n\nYou should be able to generate a core using generate-core-file command then inspect it outside of GDB.\n\n",
      "votes": "3",
      "user": "Igor Skochinsky",
      "time": "May 14, 2017 at 19:04",
      "is_accepted": false,
      "comments": [
        {
          "user": "sherlock",
          "text": "Ah! I see. Every time I learn something new from you. Thanks. Will try that.",
          "time": null
        }
      ]
    }
  ]
}