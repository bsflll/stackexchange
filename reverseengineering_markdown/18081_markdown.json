{
  "title": "FThunks when trying to get IAT",
  "link": "https://reverseengineering.stackexchange.com/questions/18081/fthunks-when-trying-to-get-iat",
  "content": "Pretty new to RE so sorry if this is a dumb question. \n\nI'm trying to manually unpack an executable and I believe I've found the OEP. However, when I use Scylla to try to fix the import table of the dumped .exe I get some invalid/missing results, and I couldn't find any information on how to determine the correct function to assign. I tried running the tool Universal Import Fixer, which seems to fix all the invalid imports but I would be unable to fix my dumped file. Any help would be appreciated!\n\nHere is a screenshot of what I see:\n\n\n",
  "votes": "1",
  "answers": 3,
  "views": "3k",
  "tags": [
    "unpacking",
    "x64dbg",
    "iat",
    "import-reconstruction"
  ],
  "user": "TacticalCheerio",
  "time": "Apr 24, 2018 at 16:14",
  "comments": [],
  "answers_data": [
    {
      "content": "the pointer you are pointing to in your screen shot contains ascii strings \n\ndo the app use some dll like BCMenu or Windows Classic Theme etc \n\n```\nOffset(h) 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\n\n00000000  42 43 4D 65 6E 75 00 00 57 69 6E 64 6F 77 73 20  BCMenu..Windows \n00000010  43 6C 61 73 73 69 63 2E 74 68 65 6D 65           Classic.theme\n\n```\ngoogle says BCMenu is some cool class by one brent that does owner drawn thingamagic   in mfc\n\nthe original site of brent corkum has gone defunct since 2015 but wayback has got several snapshots \n\n",
      "votes": "1",
      "user": "blabb",
      "time": "Apr 24, 2018 at 17:25",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "As it said above, 419030 points to some data, not the code. So you may just remove this FThunk. \n\n",
      "votes": "1",
      "user": "Anton Kukoba",
      "time": "Apr 25, 2018 at 10:11",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Look in the disassembly listing, you see lots of OUTS which is a sign of junk generated by trying to disassemble random data/bytes => this thunk at RVA 00013800 should be safe to be \"cut thunk\".\n\nYou could also follow the virtual address (00400000 + 00013800 = 00413800) of this thunk in the Dump pane of OllyDbg with Long -> Address mode or the dump view of x64dbg with Address mode to check the content at that position.\n\n",
      "votes": "1",
      "user": "Minh-Triet Pham Tran",
      "time": "Oct 13, 2020 at 15:52",
      "is_accepted": false,
      "comments": []
    }
  ]
}