{
  "title": "Protection of the source code of an ML model",
  "link": "https://reverseengineering.stackexchange.com/questions/32870/protection-of-the-source-code-of-an-ml-model",
  "content": "I wanted to know how it would be possible to run an ML model in an offline setting securely? What I mean is, if the Python files and libraries are bundled as an .exe file (using libraries like py2exe or PyInstaller) for distribtion, is it possible to decompile the executable and obtain the source code if reverse engineered properly?\n\nFrom the research I've done, I've seen packages like uncompyle6 get a lot of praise for being able to decompile executables properly. However, I have observed lesser decomplilation facilities for newer versions of Python, (specifically 3.8 and above). I tried to decompile the .pyc files which are just bytecode and they were decompiled pretty easily. However, I'm facing a harder time decompiling .pyd files. \nWhat practices does the industry follow for this, to make reverse engineering really hard? Realistically, what measures can I take to make sure that the code does not get leaked/stolen? Thank you!\n\n",
  "votes": "0",
  "answers": 1,
  "views": "60",
  "tags": [
    "python",
    "protection"
  ],
  "user": "woka",
  "time": "Apr 5, 2024 at 10:59",
  "comments": [],
  "answers_data": [
    {
      "content": "If I understand your requirements correctly what you need is pyarmor or something similar such as oxyry or pyobfuscate. These packages are able to obfuscate the code, which makes reversing harder. Pyarmor is also able to \"pack\" the obfuscated code with PyInstaller. This means that after decompiling resulting executable the reverser will get obfuscated scripts, which are harder to comprehend. Please note that pyarmor is licensed, and costs in a range of approximately $[50:160], depending on features you need.\n\nIt should be noticed, that if the computer is able to execute some sequence of instructions, then this sequence is readable, so the only thing the obfuscation provides you is a time until your script is reversed.\n\n",
      "votes": "1",
      "user": "w s",
      "time": "Apr 6, 2024 at 10:06",
      "is_accepted": false,
      "comments": []
    }
  ]
}