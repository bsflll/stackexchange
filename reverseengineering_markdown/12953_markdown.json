{
  "title": "is it possible to use ROP without buffer overflow [closed]",
  "link": "https://reverseengineering.stackexchange.com/questions/12953/is-it-possible-to-use-rop-without-buffer-overflow",
  "content": "i try to write ROP attack , but it need buffer overflow function. is there any way to write ROP to exploite normal binary.\n\n",
  "votes": "0",
  "answers": 1,
  "views": "470",
  "tags": [
    "disassembly"
  ],
  "user": "RKS",
  "time": "8 years ago",
  "comments": [],
  "answers_data": [
    {
      "content": "Sure, the only necessary thing here is to control the return address of the current stack-frame and be able to build a 'stack-pivot'. Once you have that you can write your ROP approximately anywhere in memory (as long as you can reach it from the return address that you control). For example, you have some attacks that write their ROP in the heap (not in the stack) or in newly allocated memory pages.\n\nSo, the usual ways to control the return addresses are:\n\nThere might be others but these are the ones I consider as 'classics' to control return address of a function.\n\n",
      "votes": "1",
      "user": "perror",
      "time": "Jun 29, 2016 at 13:50",
      "is_accepted": false,
      "comments": []
    }
  ]
}