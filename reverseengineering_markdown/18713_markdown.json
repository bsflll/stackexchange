{
  "title": "Figuring out where 2 executions of the same process differ",
  "link": "https://reverseengineering.stackexchange.com/questions/18713/figuring-out-where-2-executions-of-the-same-process-differ",
  "content": "I have a process that runs and does it's job sometimes (takes some files and does some work). However when I feed it some incorrect files, it fails. I'd like, if possible, to record every step the process goes through, twice and then compare them to see where the two runs diverge.\n\nMy end game here is to force the process to work with the incorrect files; it doesn't really matter what then happens, assuming I can get past this issue - it's become more of a quest for an answer than any real usable outcome at this point.\n\nI'm tentatively OK with using IDA Pro Free, and reasonable comfortable using cheat engine. I'm happy to learn a new program, if there is one that does this task specifically that'd be great! If there's a program that can record the steps for one iteration and save them to a file I can read, I'm happy to write my own program to compare and find the differences!\n\n",
  "votes": "0",
  "answers": 1,
  "views": "155",
  "tags": [
    "ida",
    "process"
  ],
  "user": "FraserOfSmeg",
  "time": "Jul 6, 2018 at 18:29",
  "comments": [],
  "answers_data": [
    {
      "content": "The terms you are looking at , when you want to do a search on this site to answer your question are \"Differential Debugging\", Runtime \"Trace Analysis\" and \"Trace Recording\".  \n\nThis link answers your question: https://reverseengineering.stackexchange.com/a/2567/18402 .\n\nAlso read this: https://reverseengineering.stackexchange.com/a/16020/18402.\n\nIf you want to use IDA (not sure if it's available in te free version though) you can do an Instruction or Function Trace and even REPLAY,  as described in this answer here : https://reverseengineering.stackexchange.com/a/2488/18402\n\n",
      "votes": "1",
      "user": "TechLord",
      "time": "Jul 7, 2018 at 3:11",
      "is_accepted": false,
      "comments": []
    }
  ]
}