{
  "title": "IDA PRO decompiler expression last question (pseudocode)",
  "link": "https://reverseengineering.stackexchange.com/questions/29195/ida-pro-decompiler-expression-last-question-pseudocode",
  "content": "```\nmemory=VirtualAlloc(lpAddress, 3*v48, flAllocationType, 16*v19);\n\n                 .....\n\nshellcode=(int (__stdcall *)(_DWORD, _DWORD))memory;\n\n                 .....\n\nshellcode(&hkernel32, 0)\n\n```\nIf function pointer, for each parameter (_DWORD, _DWORD) is\n\nlpAddress = _DWORD = &hkernel32\n\nflAllocationType = _DWORD=0\n\nIs it right?\n\n",
  "votes": "2",
  "answers": 2,
  "views": "281",
  "tags": [
    "ida",
    "decompiler",
    "pointer"
  ],
  "user": "hoshia1234",
  "time": "Mar 2, 2022 at 4:43",
  "comments": [],
  "answers_data": [
    {
      "content": "```\nmemory=VirtualAlloc(lpAddress, 3*v48, flAllocationType, 16*v19);\n\n```\nmemory will hold the allocated address\n\n```\n(int (__stdcall *)(_DWORD, _DWORD))\n\n```\nprototype of a function that takes two arguments of type DWORD  (can be anything ida cannot know it arbitrarily chose DWORD based on size of parameter )\n\n```\nso  this line \n\n```\nshellcode=(int (__stdcall *)(_DWORD, _DWORD))memory;\n\nmeans\n\nshellcode = memory\n\nthe next call is calling this addresss by trreating this address as a function pointer\n\nso if you single step this line you will land on the allocated address\n\nand execute shell code\n\nit has nothing to do with flwhatever or &hkernel\n\nfrom the looks of it it is a shell code that takes the base of kernel and tries to scan some thing in the shell code\n\n",
      "votes": "1",
      "user": "blabb",
      "time": "Jan 24, 2022 at 10:48",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "It means that memory is treated as a function pointer, of a function with stdcall calling conventions, that receives 2 arguments and returns int value.\n\n",
      "votes": "0",
      "user": "macro_controller",
      "time": "Aug 26, 2021 at 16:00",
      "is_accepted": false,
      "comments": [
        {
          "user": "hoshia1234",
          "text": "Thanks and I've one question.",
          "time": null
        }
      ]
    }
  ]
}