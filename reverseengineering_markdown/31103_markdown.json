{
  "title": "How to make pseudocode in IDA more human readable",
  "link": "https://reverseengineering.stackexchange.com/questions/31103/how-to-make-pseudocode-in-ida-more-human-readable",
  "content": "Some codes in IDA are not clear enough. Especially when they do reference after calculation\n\n```\nwhile ( dx33[rdi24] );\n  if ( rax35 != &WPP_GLOBAL_Control && (*((_BYTE *)rax35 + 68) & 2) != 0 && *((_BYTE *)rax35 + 65) >= 4u )\n  {\n    WPP_SF_sd(\n      (unsigned int)rax35[7],\n      22,\n      (unsigned int)&WPP_b7e02e4f98cc3b1bbc566e561d210229_Traceguids,\n      (_DWORD)dx33,\n      rdi24 - 1);\n    dx33 = Str;\n  }\n  if ( (_DWORD)rdi24 != 1 && dx33[(int)rdi24 - 1] == 46 && dx33[(int)rdi24 - 2] == 46 )\n  {\n    dx33[(int)rdi24 - 1] = 0;\n    dx33 = Str;\n  }\n\n```\nFor some parts like\n\nCan I change it to a more human-readable form? I remember changing the function argument type like int a1 to JNIEnv* can make the pointer reference more readable because it recovers some JNI function names so that\n\nwill become something like\n\nBut I'm not sure how to do this for other types.\n\n",
  "votes": "5",
  "answers": 2,
  "views": "1k",
  "tags": [
    "ida"
  ],
  "user": "anonymous bear",
  "time": "Nov 9, 2022 at 2:09",
  "comments": [
    {
      "user": "0xC0000022L",
      "text": "Quite frankly in this particular case you may want to look at WPP Software Tracing and ETW in general for the first if condition. I am almost certain that this is pretty much some idiomatic way of how the respective WPP macros get expanded. The GUIDs will vary across different pieces of software (or even within a single software). I.e. this would be a piece you don't want to reverse engineer normally. Is this KM or UM?",
      "time": null
    },
    {
      "user": "anonymous bear",
      "text": "@0xC0000022L It's a piece of code in dns.exe. I think it's UM because when I used Windbg the function in dns.exe didn't appear in all the kernel files",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "To make the listing more human-readable, you just need to add structure definitions,\nfor example:\ntype of variable rax35 - obviously not unsigned int\n\nthere should be a pointer to the structure you need to define.\n\nThe first thing you need is to find the size of this struct or class. To do this, you need to find its constructor.\n\nAfter the size of the structure or class is found, it's time to add it to Local Types in IDA Pro.\n\nTo simplify static analysis as much as possible, you should:\n\n",
      "votes": "3",
      "user": "0xC0000022L",
      "time": "May 1, 2023 at 20:20",
      "is_accepted": true,
      "comments": [
        {
          "user": "anonymous bear",
          "text": "But how do I know which structure should I define",
          "time": null
        }
      ]
    },
    {
      "content": "There’s no single solution for every case but basically you need to use the decompiler’s interactive features:\n\nJust looking at small parts of the function and renaming a few variables to some name which makes sense can go a long way. Start small and keep making changes until things start to make sense. Sometimes you may need yo visit multiple functions to see how a specific variable is used to figure out its type.\n\n",
      "votes": "2",
      "user": "Igor Skochinsky",
      "time": "Apr 28, 2023 at 13:23",
      "is_accepted": false,
      "comments": []
    }
  ]
}