{
  "title": "Reverse engineering unknown RS232/UART binary protocol",
  "link": "https://reverseengineering.stackexchange.com/questions/15705/reverse-engineering-unknown-rs232-uart-binary-protocol",
  "content": "For couple of days I'm trying to crack the protocol used the old medical device, in order to collect data for a research in an automated way.\n\nThe device in question is Novametrix CO2SMO Plus, model 8100. Manufacturer of this device was bought, long time ago, by Respironics and than Respironcis was bought by Philips. Their website doesn't exists for last 12-14 years and archived copy doesn't have any useful information. Since device was designed before 2000 there's no software over the Internet - it was distributed on floppy disks so as software updates.\n\nDevice is very similar to model 7100, which was released ~3 years prior to the 8100. Devices mainly differ in software - the one in 8100 is much more sophisticated.\n\nAt first I stared from obvious things like determining physical layer of the connection - that went easy, since service manual actually lists all signals in DB25, located on the back of the device. \n\nAt the beginning I hoped 8100 will use similar, well documented by manufacturer, ASCII protocol (called NOVACOM1) as 7100 used. Unfortunately it's not the case. My device uses newer protocol called NOVACOM3 - there's zero information about it in the Internet; it seems like NOVACOM2 was never released.\n\nI don't own oscilloscope (and I don't have an access to electronics labs on my college), so I determined baudrate of the port just observing the traffic with different baudrates with debugging mode enabled on device (more on that later). With high confidence I can say it's 9600 8N1 (like in previous model).\n\nDevice uses NXP MC68332 MCU, which according to the data sheet is a rugged 32 bit core with quite a few subunits useful in an automotive applications. It also seems to be a secure one - since I have almost no experience in EE I quickly dismissed any possibilities to attempt of physically attacking the CPU.\n\nAccording to the service manual, manufacturer had developed PC software used for communication with the device - \"CO2SMO Plus! for Windows\". Unfortunately it was sold as a separate package and it's nowhere to be found now.\n\nThe device has two Novametrix protocols - NOVACOM3 and SATDIAG. Since diagnostic protocols are usually simpler I started from the later one:\n\nIn summary SATDIAG seems to be more like a debugger dumping some performance metrics or resources usage.\n\nNext I started playing with the protocol used to talk to the PC software - NOVACOM3:\n\nI wasn't able to force device to start streaming - if I would manage to do that figuring out parameters shouldn't be that hard, since I have the display on the unit and I know which parameters to expect. Until than... I have no idea how to progress further. I also tried contacting Philips division which bought the company - no response whatsoever.\n\nAny ideas?\n\n",
  "votes": "3",
  "answers": 0,
  "views": "2k",
  "tags": [
    "hardware",
    "embedded",
    "serial-communication",
    "protocol"
  ],
  "user": "kiler129",
  "time": "Jun 28, 2017 at 5:03",
  "comments": [
    {
      "user": "Igor Skochinsky",
      "text": "are the flash chips soldered or socketed? I would suggest dumping them to extract the firmware, from which you can RE the protocol details.",
      "time": null
    },
    {
      "user": "kiler129",
      "text": "@IgorSkochinsky: I just opened the device. Besides the fact it's built like a tank everything is in sockets (even polyfuses!). It has two 2Mbit AT29C020-12JC memory chips, and according to ten service manual they're both occupied by the software. However I have no idea how to read them (without breaking the bank) nor how to analyze the software for this CPU.",
      "time": null
    },
    {
      "user": "Antonio Quevedo",
      "text": "I found out your question while searching for the CO2SMO protocol. In the next few days, I will try and run it with the original software, while running a serial data logger in the computer. Then I will check the results, and maybe we can crack the protocol together. Cheers Antonio",
      "time": null
    }
  ],
  "answers_data": []
}