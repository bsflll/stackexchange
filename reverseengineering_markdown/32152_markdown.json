{
  "title": "Bresser Water Leakage sensor checksum algorithm",
  "link": "https://reverseengineering.stackexchange.com/questions/32152/bresser-water-leakage-sensor-checksum-algorithm",
  "content": "I am trying to decode the Bresser Water Leakage sensor, the current state of work can be found in https://github.com/matthias-bs/rtl_433/blob/master/src/devices/bresser_leakage.c\n\nI have also created an issue with some background information for integrating the decoder in the rtl_433 project.\n\nDecoding the payload works fine, but I did not find out how the checksum is calculated. The data layout and samples are provided in bresser_leakage.c.\n\nI have already tried the following:\n\nNone of these attempts were successful.\n\nI would be happy if anyone could help.\n\nThank you very much in advance!\n\nMatthias\n\n",
  "votes": "2",
  "answers": 1,
  "views": "51",
  "tags": [
    "crc",
    "checksum"
  ],
  "user": "Matthias",
  "time": "Aug 9, 2023 at 19:22",
  "comments": [],
  "answers_data": [
    {
      "content": "The checksum has been found!\nIt's a CRC16/xmodem covering the 5 bytes following the CRC.\n\nSee https://github.com/merbanan/rtl_433/issues/2576#issuecomment-1751134478\n\n",
      "votes": "1",
      "user": "Matthias",
      "time": "Oct 27, 2023 at 12:17",
      "is_accepted": false,
      "comments": []
    }
  ]
}