{
  "title": "Find where a routine pointer is loaded and called",
  "link": "https://reverseengineering.stackexchange.com/questions/10733/find-where-a-routine-pointer-is-loaded-and-called",
  "content": "I'm reverse engineering the Final Fantasy XIV 1.0 protocol to bring back the now dead game (not ARR). I'm trying to find where an error message handler is called (specifically \"This character name is already in use\"), and work backwards to send the correct packet. Using the timeout error message, I found the routine that causes this message to load, but the routine is never called as a constant, rather loaded into EDX and then called. A error code is passed in which defines what message to show, as well as what action to take (for example, putting in the \"Bad chara name\" code will actually cause the UI to switch to the \"enter name\" screen).\n\nI'm using ollydbg and normally I'd just use the \"find references to command\" option, but since this routine is loaded then called, that won't work. Any ideas how to find where this routine is called? Then I can work backwards to find what is read from the packet to go to that code.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "773",
  "tags": [
    "ollydbg"
  ],
  "user": "Ioncannon",
  "time": "Aug 28, 2015 at 14:19",
  "comments": [
    {
      "user": "s3c",
      "text": "Add a breakpoint at the beginning of this function and then look at the call stack when it fires?",
      "time": null
    },
    {
      "user": "Guntram Blohm",
      "text": "@s3c: Since he says the game is now dead, i assume the OP doesn't have a server to connect to, so he can't trigger this specific error message in the client, just different error messages, so dynamic analysis won't help much.",
      "time": null
    },
    {
      "user": "Ioncannon",
      "text": "Yup, as Guntram said, I can't test against a server to see what causes said messages to appear. Was able to get most of the character creation stuff working though.   When the game timeouts, it loads a constant value (30001 in hex into ESP+0x70 iirc), loads the routine address into EDX, then does a CALL. The value is index in one of the game's data tables storing all the error messages. Some I can find, but it seems the \"Character name in use\" id comes from the server.",
      "time": null
    },
    {
      "user": "rev",
      "text": "do you have IDA? it'd make the analysis much simpler",
      "time": null
    },
    {
      "user": "Ioncannon",
      "text": "I do have an old copy but only tried it once. Will give it a go again and see if I can find where the code branches.   Any features I should specifically lookout for?",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "You must set hardware breakpoint on execute in that address:\n\nfirst find your tracing routine and flow in dump:\n\n\n\nthen create hwbp:\n\n\n\nset on execute on the first byte of this routine :\n\n\n\nnow when call to this function ollydbg show the call:\n\n \n\n",
      "votes": "0",
      "user": "A1Gard",
      "time": "Sep 8, 2015 at 6:30",
      "is_accepted": true,
      "comments": []
    }
  ]
}