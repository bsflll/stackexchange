{
  "title": "Creating stack variables when they are addressed by non-SP register",
  "link": "https://reverseengineering.stackexchange.com/questions/26477/creating-stack-variables-when-they-are-addressed-by-non-sp-register",
  "content": "So, I have ARM code which uses R7 as the register to access the stack variables:\n\n\nIn the first basic block IDA successfully identified R7 as stack pointer and created the variables. But then, after 40123C, there's still code which references stack variables via R7, and IDA didn't create the variables. If I press K on [R7,#4] it creates the stack variable at +4 offset:\n\n\n\nWhere in fact, it should have created the variable at -0x14.\n\nIs there any way I can make IDA create stack variable at those LDR R3, [R7,#4] properly?\n\n",
  "votes": "2",
  "answers": 0,
  "views": "35",
  "tags": [
    "ida",
    "stack"
  ],
  "user": "Anton Kukoba",
  "time": "Dec 8, 2020 at 9:01",
  "comments": [],
  "answers_data": []
}