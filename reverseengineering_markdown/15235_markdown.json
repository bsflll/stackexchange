{
  "title": "Netgear n300 auth bypass vulnerability",
  "link": "https://reverseengineering.stackexchange.com/questions/15235/netgear-n300-auth-bypass-vulnerability",
  "content": "I was looking at writeup on Netgear N300 authentication bypass vulnerability and I have found some inconsistencies in the article with my understanding of it. I want a second opinion on this because I'm not very good at reading MIPS disassembly. \n\nI have problem with two statements from article\n\nAs far as I can tell the nvram_set function sets the first variable \"need_not_login\" to '0' (ascii) taken from asc_40B7A8, but I think the second one \"start_in_blankstate\" is set to '1'. Because the $a1 is set to value from aGate_interf+0x18. I think this is some sort of compiler optimization. aGate_interf starts at 0x40BCA8 when we add 0x18 we get 0x40BCC0 which points to char '1'. Here is the disassembly that shows this:\n\n\nand aGate_interf+0x18:\n\n\nThe second mistake is also related to this. The author claims that when value of 'start_in_blankstate' is different from '1' then login is bypassed. \n\nBut that doesn't make sense to me. As I understand it nvram_get loads the value of 'start_in_blankstate' to $v0 then it's copied to $v1 and $v0 is loaded with '1'. They are compared at 0x403940. There is bne instruction so if they don't equal it's true (take green) if they equal it's false (take red) and bypass authentication. It can be seen here:\n\n\nAlso this rather fits the variable name \"start_in_blankstate\" that when this is set to 1 the router was not started yet and is in blank state, so bypass login and user can set his password. Is my understanding of this correct or was the author right?\n\n",
  "votes": "3",
  "answers": 1,
  "views": "285",
  "tags": [
    "disassembly",
    "firmware",
    "mips"
  ],
  "user": "J91321",
  "time": "Apr 27, 2017 at 9:52",
  "comments": [],
  "answers_data": [
    {
      "content": "As far as I can see given the data you provided you're right on both accounts, If I understand you correctly.\n\nTwo things to note, though:\n\nThis might be a patched version, or some error in the article. It does look a bit like it was copied from someplace else or that the link to the firmware download was added later on without validation.\n\n",
      "votes": "1",
      "user": "NirIzr",
      "time": "Apr 27, 2017 at 10:54",
      "is_accepted": true,
      "comments": [
        {
          "user": "J91321",
          "text": "It should be the vulnerable version. To make it clearer aGate_interf starts at 0x40BCA8 IDA correctly identified it as ascii string. I undefined it to clearly see what char is on 0x40BCA8+0x18. It's '1'. (Don't know why it's used like this) Don't know what those strcmp checks do (not password that is checked elsewhere I believe). strcmp returns 0 if strings match and there is beqz instruction. So I assume it's more likely that whatever is compared there won't match so the syslog branch is executed. And that bypasses the login.",
          "time": null
        }
      ]
    }
  ]
}