{
  "title": "Access RTTI class hierarchy along with offsets from IDAPython",
  "link": "https://reverseengineering.stackexchange.com/questions/31416/access-rtti-class-hierarchy-along-with-offsets-from-idapython",
  "content": "Starting with 7.0, IDA Pro parses and annotates exception handling information and RTTI.\n\nWhen you double-click on a RTTI Complete Object Locator right above the start of the vtable and then double-click on reference to type description, you are presented with a comment nicely presenting the full class hierarchy along with all the mdisp, pdisp and vdisp offsets, like this:\n\n```\n.data:00000001400080F0 ; public class E /* mdisp:0 */ :\n.data:00000001400080F0 ;   public class D /* mdisp:0 */ :\n.data:00000001400080F0 ;     public class B /* mdisp:0 */ :\n.data:00000001400080F0 ;       public virtual class A /* mdisp:0 pdisp:8 vdisp:4 */,\n.data:00000001400080F0 ;     invisible private protected class C /* mdisp:24 */ :\n.data:00000001400080F0 ;       public virtual class A /* mdisp:0 pdisp:8 vdisp:4 */\n.data:00000001400080F0 ; class E `RTTI Type Descriptor'\n.data:00000001400080F0 ??_R0?AVE@@@8   dq offset ??_7type_info@@6B@\n.data:00000001400080F0                                         ; DATA XREF: .rdata:E::`RTTI Base Class Descriptor at (0,-1,0,64)'↑o\n.data:00000001400080F0                                         ; .rdata:00000001400059B4↑o ...\n.data:00000001400080F0                                         ; reference to RTTI's vftable\n.data:00000001400080F8                 dq 0                    ; internal runtime reference\n.data:0000000140008100 aAve            db '.?AVE@@',0          ; type descriptor name\n\n```\nSince IDA seems to have parsed that hierarchy for you already, is it possible to access it with IDAPython and get access to both the hierarchy and the Xdisp values without parsing everything yourself?\n\nWhile one could always parse the auto-generated comment itself, this looks like a crude workaround for me.\n\n",
  "votes": "1",
  "answers": 0,
  "views": "537",
  "tags": [
    "ida",
    "idapython"
  ],
  "user": "overflo",
  "time": "Jan 16, 2023 at 16:53",
  "comments": [],
  "answers_data": []
}