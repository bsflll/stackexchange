{
  "title": "What does this line of assembly do ? how am i to interpret it?",
  "link": "https://reverseengineering.stackexchange.com/questions/17504/what-does-this-line-of-assembly-do-how-am-i-to-interpret-it",
  "content": "ive started studying reverse engineering, and in a binary i am trying to reverse i stumbled upon an unusual(to me) line of assembly in IDA PRO. and it looks like this\n\n```\n.text:00000000008A1C21                 mov     r8d, ds:(off_8A40FC - 400000h)[rcx+rax*4]\n\n```\nso i know that it moves something into the r8 register which is the size of a dword, but i do not understand what it moves into it ? something from the data segment, but im clueless as of how to interpret it, any help would be great.\n\n",
  "votes": "-1",
  "answers": 1,
  "views": "157",
  "tags": [
    "assembly"
  ],
  "user": "Flauen",
  "time": "Feb 20, 2018 at 15:10",
  "comments": [
    {
      "user": "julian",
      "text": "in general, it is good to provide additional information about the context an instruction is found in, not just the instruction itself.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "What the assembly is doing is subtracting 0x400000 from the offset 0x8A40FC giving 0x4A40FC, then using the new address at memory address [rcx+rax*4]. I recommend studying the assembly more, this is a bad question as its not giving full detail on what rcx, and rax is.\n\nHappy hacking! :-)\n\n",
      "votes": "1",
      "user": "Graham Best",
      "time": "Feb 20, 2018 at 17:43",
      "is_accepted": true,
      "comments": [
        {
          "user": "Flauen",
          "text": "Yeah im still pretty new to this and understand basic assembly, this particular instruction was early on in a function i am reversing so i don't know what rcx and rax is.",
          "time": null
        },
        {
          "user": "Flauen",
          "text": "so another way of writing this could be [rcx + rax * 4 + 0x4A40FC] ?",
          "time": null
        },
        {
          "user": "Graham Best",
          "text": "No, that index is at that specific point. With the code you provided you would be at that index, not [rcx+rax*4] . And no problem!! I'm happy to see you learning :-)",
          "time": null
        },
        {
          "user": "Graham Best",
          "text": "Also, I suggest marking this answer as the accepted answer as it solved your problem (hopefully)",
          "time": null
        }
      ]
    }
  ]
}