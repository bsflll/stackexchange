{
  "title": "Does anybody know which tools allow to get (pseudo) code from a Moscow ML executable?",
  "link": "https://reverseengineering.stackexchange.com/questions/10784/does-anybody-know-which-tools-allow-to-get-pseudo-code-from-a-moscow-ml-execut",
  "content": "I've decompiled Win32 executable that is the result of compilation of a program written in Moscow ML language. \n\nThe resulting listing contains standard C main function that contains the call to caml_main that (as I understand) calls bytecode interpreter which interprets the bytecode containing in the executable.\n\nSo my questions are:\n\nAny help is appreciated.\n\n",
  "votes": "0",
  "answers": 1,
  "views": "217",
  "tags": [
    "binary-analysis",
    "decompilation",
    "byte-code"
  ],
  "user": "Anton Danilov",
  "time": "Sep 3, 2015 at 13:23",
  "comments": [],
  "answers_data": [
    {
      "content": "As per https://github.com/kfl/mosml/blob/master/src/runtime/main.c#L62, the last 20 bytes of the EXE make up an exec_trailer structure:\n\n```\nstatic int read_trailer(int fd, struct exec_trailer * trail)\n{\n  unsigned char buffer[TRAILER_SIZE];\n\n  lseek(fd, (long) -TRAILER_SIZE, 2);\n  if (read(fd, (char*)buffer, TRAILER_SIZE) < TRAILER_SIZE) \n    return TRUNCATED_FILE;\n  trail->code_size = read_size(buffer);\n  trail->data_size = read_size(buffer+4);\n  trail->symbol_size = read_size(buffer+8);\n  trail->debug_size = read_size(buffer+12);\n  trail->magic = read_size(buffer+16);\n  if (trail->magic == EXEC_MAGIC) return 0; else return BAD_MAGIC_NUM;\n}\n\n```\nAnd as per https://github.com/kfl/mosml/blob/master/src/runtime/main.c#L229, the bytecode begins at (20 + trail.code_size + trail.data_size + trail.symbol_size + trail.debug_size) bytes before the end of the file.\n\nThe bytecode interpreter is defined here: https://github.com/kfl/mosml/blob/master/src/runtime/interp.c#L87\n\nHowever, even if you were to leverage the parser in that interpreter, the best you'd get is an intermediate representation of the code (consisting of the instructions in https://github.com/kfl/mosml/blob/master/src/runtime/instruct.h), not the decompiled ML code itself.\n\nIf you want to convert the intermediate instructions to an actual decompilation, that question would probably be better asked at https://stackoverflow.com/.\n\n",
      "votes": "1",
      "user": "Community",
      "time": "May 23, 2017 at 12:37",
      "is_accepted": true,
      "comments": []
    }
  ]
}