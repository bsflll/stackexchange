{
  "title": "Call Eax in IDA PRO",
  "link": "https://reverseengineering.stackexchange.com/questions/6870/call-eax-in-ida-pro",
  "content": "My situation: \n\nI analyze some piece of code and I have the following line:\n\n```\n         ...\n         call eax\n         ...\n\n```\nI am using IDA PRO. My problem is that I can not go to the place where eax points. I mean: normally, I have something like \n\n```\n        ...\n        call sub_xxxxxx\n        ...\n\n```\nand when I click on sub_xxxxxx, then IDA PRO shows me the code at sub_xxxxxx. Sometimes, there is also an offset. \nBut now, I have that register, and when I click on that then IDA PRO is not going to that location. It opens a window where I can rename the register. \nI guess, IDA does not know where to go or something like that.\n\nI also try to open it with ollydbg, but since the file is a .bin file, I could not open it(in the search window, before opening, the .bin file was not listed) \n\nHow can I handle that problem ?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "2k",
  "tags": [
    "ida",
    "assembly"
  ],
  "user": "user3097712",
  "time": "Dec 16, 2015 at 17:06",
  "comments": [
    {
      "user": "gandolf",
      "text": "To address the Olly issue, you could just rename the bin file to .exe so Olly sees it.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "You would need to statically determine what the value(s) of eax could be by statically reverse engineering the surrounding code, or (if you can run the target in a debugger) set a breakpoint on that call eax instruction and see what value of eax is used at runtime.\n\nNote that for the dynamic approach, different runtime scenarios may cause eax to hold different values at that instruction address at runtime.\n\n",
      "votes": "5",
      "user": "Jason Geffner",
      "time": "Dec 21, 2014 at 22:34",
      "is_accepted": false,
      "comments": [
        {
          "user": "user3097712",
          "text": "ok, thx. Is there a way to open the .bin file using ollydbg?",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "If the .bin file is actually a PE EXE or PE DLL, then yes. Just manually specify the full file path of the file in OllyDbg's open-file dialog box. Or drag-and-drop the file into OllyDbg's MDI client window.",
          "time": null
        }
      ]
    }
  ]
}