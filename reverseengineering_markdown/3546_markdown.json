{
  "title": "Extracting dynamically constructed strings in IDA [duplicate]",
  "link": "https://reverseengineering.stackexchange.com/questions/3546/extracting-dynamically-constructed-strings-in-ida",
  "content": "Sometimes strings are dynamically constructed in programs due to compiler optimization or simply to hide the strings (e.g. in malware). For example :\n\n\n\nWhen displaying the bytes as chars we can see the string 'INVALID FILE SIZE'.\n\n\n\nDoes anyone know a script to extract those strings in IDA? I will write one if it does not exist but I figured I would ask first.\n\n",
  "votes": "7",
  "answers": 2,
  "views": "2k",
  "tags": [
    "ida"
  ],
  "user": "ekse",
  "time": "11 years ago",
  "comments": [
    {
      "user": "ekse",
      "text": "Sorry for the duplicate question, my google skills failed me this time. Thanks for the answers, the script ASERT does exactly what I was looking for.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Select the block of code you would like to convert and then run the following IDAPython function. Comment out the call to MakeComm if you don't want a comment added.\n\n```\ndef convert_to_char():\n    current = SelStart()\n    end = SelEnd()\n    tmp = ''\n    while current < end:\n        OpChr(current,1)\n        try:\n            tmp += chr(GetOperandValue(current, 1))\n        except:\n            tmp += '_'\n        current = NextHead(current)\n    MakeComm(PrevHead(current), tmp)\n\n```\nAdding some logic to verify the operand might be useful if other instruction are also in the selected region. \n\n",
      "votes": "4",
      "user": "alexanderh",
      "time": "Jan 25, 2014 at 0:30",
      "is_accepted": false,
      "comments": []
    },
    {
      "content": "Finding Byte Strings Using IDAPython \n\nThis is exactly what you were looking for from Assert MindshaRE\nEffectively this script will go through instruction by instruction to find moves of ASCII characters into a memory location. It gets fancy and used QT to create an interactive table however you can gut out that part and just have it place a comment at the instruction that gets used.\n\n",
      "votes": "3",
      "user": "jbh",
      "time": "Jan 25, 2014 at 16:26",
      "is_accepted": false,
      "comments": []
    }
  ]
}