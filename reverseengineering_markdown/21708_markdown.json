{
  "title": "write radare2 output to a file",
  "link": "https://reverseengineering.stackexchange.com/questions/21708/write-radare2-output-to-a-file",
  "content": "I am trying to write all the write logs of a binary program into a file for further analysis. I am using radare2 for it. I don't know what's the issue, I am not able to write the 'dte' output to a file. It prints on the console but doesn't write to a file even after redirection. 'dtd' is working fine and writing to the file. Here in the below code log2.txt comes up empty.\n\n```\nimport r2pipe\n\nr = r2pipe.open('simpleAES', flags=['-d'])\nr.cmd('aei')\nr.cmd('dc')\nr.cmd('e dbg.trace=1')\nr.cmd('des 100') \n\noutput1 = r.cmd('dtd')\noutput2 = r.cmd('dte')\n\nf = open(\"log1.txt\", \"w\")\nf.write(output1)\nf.close()\n\nf = open(\"log2.txt\", \"w\")\nf.write(output2)\nf.close()\n\n```\nI am using a simple C code for analysis and using raise(SIGINT); for setting breakpoint in the C program. Do you have any idea how I can write the 'dte' output to a file.\n\nCode that I am debugging: \n\n```\n#include <signal.h>\n#include<stdio.h>\nint main (void)\n{\n    printf(\"loop started\");\n    raise(SIGINT);\n    int i = 0;\n    for (i = 0; i < 10; ++i) {\n      printf(\"Hello \");\n    }\n    printf(\"loop completed\");\n    return 0;\n}\n\n```\n",
  "votes": "1",
  "answers": 0,
  "views": "689",
  "tags": [
    "disassembly",
    "debugging",
    "radare2"
  ],
  "user": "tarun14110",
  "time": "Jul 30, 2019 at 7:13",
  "comments": [
    {
      "user": "bart1e",
      "text": "Could you clarify how you set breakpoints?",
      "time": null
    },
    {
      "user": "tarun14110",
      "text": "using raise(SIGINT) in the C program to set the breakpoint.",
      "time": null
    },
    {
      "user": "bart1e",
      "text": "Can you show this program?",
      "time": null
    },
    {
      "user": "tarun14110",
      "text": "@bart1e added the code.",
      "time": null
    },
    {
      "user": "bart1e",
      "text": "raise(SIGINT) will send to your program SIGINT signal (it's like pressing CTRL+C - it will terminate your application if no handler for SIGINT is registered). If you want to set breakpoint in C, you can use asm(\"int $3\") in GCC, or db address in r2.",
      "time": null
    }
  ],
  "answers_data": []
}