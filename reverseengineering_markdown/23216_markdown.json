{
  "title": "What is the header 'X-Goog-Spatula'?",
  "link": "https://reverseengineering.stackexchange.com/questions/23216/what-is-the-header-x-goog-spatula",
  "content": "I am blackboxing an android app to write an API for it. Many of the HTTP requests sent include a mysterious header with the name X-Goog-Spatula. If I do not include this structure, the request is not successful due to 'being unauthenticated', however I can find no information on the internet as to what it is or what it does, and I feel uncomfortable about adding the existing values I've recorded so far to the public client API, because I do not want to ship an API that could either expire in the future, or accidentally expose secrets that I shouldn't. Likewise for the same reason I won't be including actual data here (Unless anyone here can provide good arguments as to why it should be included).\n\nInspection of the structure so far as concluded that it is a base64-encoded protobuf structure, which contains several mystery values, that are as-yet unknown. An outline of the structure is:\n\n```\n{\n  \"string\": {\n    <name of app>,\n    <20 byte base64-encoded string>\n  },\n  \"string\": {\n    <32 byte string>,\n  },\n  \"variant\": <9 byte number>,\n  \"variant\": <9 byte number>,\n  \"string\": {\n    <89 byte string>\n  }\n}\n\n```\nAs I stated earlier, I can find no references on the internet to it, aside from these (all on Github):\n\nDoes anyone have any documentation on this, an idea of what it is, or alternatively, what can I do to find out what it is?\n\n",
  "votes": "2",
  "answers": 0,
  "views": "698",
  "tags": [
    "android",
    "unpacking",
    "deobfuscation",
    "networking"
  ],
  "user": "Alexandria",
  "time": "Feb 7, 2020 at 23:53",
  "comments": [
    {
      "user": "Robert",
      "text": "I have seen some references to this header in the Google Services for Android (e.g. available in the OpenGApps pico package) in detail in the GMSCore. Internally it is some times called a \"key-less authentication header\".",
      "time": null
    },
    {
      "user": "i336_",
      "text": "While in what I suspect was a near-identical situation to yours a little while ago (re app black-boxing) I crashed into this header. I reached the conclusion that its purpose is in distinguishing \"real\" Android devices from emulators, and presumably then fingerprinting real devices well enough that \"rogue\" fingerprints can be reliably exiled to Siberia.",
      "time": null
    },
    {
      "user": "i336_",
      "text": "One of the reasons I gave up was the suspicion that the code generating the key is likely similar to the JavaScript-based interstitial pages you sometimes see generated by certain popular CDNs - such JS code is largely script-generated and has an entire team behind keeping it highly entropic. Couple Java, a very good obfuscation team and probably an even bigger security team and... well, my interest was in making an API too, and these considerations  kind of scared me off. (+1 for social psych engineering.) Poke me if you like (see profile) and I can share the small amount of progress I made",
      "time": null
    }
  ],
  "answers_data": []
}