{
  "title": "IDA pro apply .dif back to database",
  "link": "https://reverseengineering.stackexchange.com/questions/11824/ida-pro-apply-dif-back-to-database",
  "content": "I've modified program database in IDA Pro and then created a .dif file with File -> Produce File -> Create DIF File...\n\nAfter that I've reverted all my changes to database. Is there a way to apply changes from .dif file back?\n\nThanks\n\n",
  "votes": "0",
  "answers": 1,
  "views": "642",
  "tags": [
    "ida"
  ],
  "user": "Yaki Khadafi",
  "time": "Jan 22, 2016 at 14:44",
  "comments": [],
  "answers_data": [
    {
      "content": "As far as I understand the .dif file is built as follows - after some initial meaningless lines it contains something like this:\n\noffset_in_file: initial_byte current_byte\n\nSo applying the differences to the idb should be easy with simple python function as follows:\n\n```\n#not tested, not checked, not ran even once\n#beware of errors, use on your own risk\nimport idaapi\nimport idc\n\ndef apply_dif_file(dif_file_name):\n    f = open(dif_file_name, \"r\")\n    for l in f:\n        if l.find(\":\") == -1:\n            continue\n        splitted = l.split()\n        off_in_file = splitted[0]\n        initial_byte = splitted[1]\n        new_byte = splitted[2]\n\n        #Converting offset to integer\n        #After that converting it to the ea\n        offset = int(off_in_file.replace(\":\", \"\"), 16)\n        ea = idaapi.get_fileregion_ea(offset)\n        #converting new byte\n        new_byte_num = int(new_byte, 16)\n\n        idc.PatchByte(ea, new_byte_num)\n    f.close()\n\n```\nGood luck, note the latest edits.\n\n",
      "votes": "1",
      "user": "w s",
      "time": "Jan 24, 2016 at 9:18",
      "is_accepted": false,
      "comments": [
        {
          "user": "Yaki Khadafi",
          "text": "wrapped your code  - added a file selector and some logging  gist.github.com/Dramacydal/2dd5ae1a5502191f8e01",
          "time": null
        }
      ]
    }
  ]
}