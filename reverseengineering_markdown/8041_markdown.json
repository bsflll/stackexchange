{
  "title": "Binwalk showing only the header as the full size of the binary",
  "link": "https://reverseengineering.stackexchange.com/questions/8041/binwalk-showing-only-the-header-as-the-full-size-of-the-binary",
  "content": "I'm trying to decompile and analyze the firmware for a D-Link router. I downloaded the firmware from their website, but when I run binwalk on it, I get:\n\n```\nDECIMAL     HEX         DESCRIPTION\n-------------------------------------------------------------------------------------------------------\n0           0x0         Ubicom firmware header, checksum: 0xCDED3035, image size: 1441792\n\n```\nwhich is the complete size of the actual binary:\n\n```\n-rw-r--r-- 1 root root 1441792 Jun 10  2013 firmware.bin\n\n```\nSo I assume that means binwalk wasn't able to find any tags to delimit the different parts of file right? \n\nI tried taking a hexdump next and looking for asterisks. I found a few, but no real apparent tags could be found.\n\nIs it possible the binary is encrypted or obfuscated in some way? What would be my next step here?\n\n",
  "votes": "0",
  "answers": 1,
  "views": "1k",
  "tags": [
    "disassembly",
    "firmware"
  ],
  "user": "nopcorn",
  "time": "Jan 17, 2015 at 4:13",
  "comments": [],
  "answers_data": [
    {
      "content": "That is correct. Given the size of the firmware image, I'd guess that this is not a Linux based firmware, but probably an RTOS (IIRC, Ubicom had their own RTOS called IPOS).\n\nTry doing an entropy analysis (binwalk -E) and running strings on the firmware image. Low/medium entropy and the presence of ASCII strings would suggest that the firmware is not encrypted or compressed.\n\nYou can also try binwalk -A to search for common opcodes (Ubicom32 opcodes are supported), and will give you an idea if there are valid executable instructions in the firmware image.\n\n",
      "votes": "3",
      "user": "devttys0",
      "time": "Jan 18, 2015 at 15:32",
      "is_accepted": false,
      "comments": []
    }
  ]
}