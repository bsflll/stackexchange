{
  "title": "How can I convert the following disassembly code to pseudo code or C code?",
  "link": "https://reverseengineering.stackexchange.com/questions/20926/how-can-i-convert-the-following-disassembly-code-to-pseudo-code-or-c-code",
  "content": "I used IDA pro to get the following disassembly code. I am having difficulty converting it into the equivalent c code.\n\n```\nmov dword ptr [ebp-8], 1\nmov dword ptr [ebp-4], 0\nloc_401014:\n cmp dword ptr [ebp-4], 4\n jge short loc_40102E\n mov eax, [ebp-8]\n add eax, [ebp-4]\n mov [ebp-8], eax\n mov ecx, [ebp-4]\n add ecx, 1\n mov [ebp-4], ecx\n jmp short loc_401014\nloc_40102E:\n\n```\n",
  "votes": "-1",
  "answers": 1,
  "views": "1k",
  "tags": [
    "disassembly",
    "x86",
    "c"
  ],
  "user": "Varun Ravindra",
  "time": "Mar 19, 2019 at 22:31",
  "comments": [],
  "answers_data": [
    {
      "content": "This C code compiles to the equivalent of your assembly code:\n\n```\nvoid f() {\n    int b = 1;\n    for (int a = 0; a<4; ++a) {\n        b = b + a;\n    }\n    // disassembly finishes here but maybe there's something like below\n    // return b;\n}\n\n```\nThe output on Compiler Explorer switches [ebp-8] and [ebp-4] and uses eax rather than ecx to increment the loop variable but it looks equivalent to what you wanted.\n\n",
      "votes": "2",
      "user": "booto",
      "time": "Mar 20, 2019 at 8:43",
      "is_accepted": false,
      "comments": [
        {
          "user": "sudhackar",
          "text": "Please copy the code here when you write answers so that the answer is still relevant even when godbolt is down.",
          "time": null
        },
        {
          "user": "Varun Ravindra",
          "text": "thank you. @booto can you give me some tips as to how can I convert this? Is there any tool?",
          "time": null
        },
        {
          "user": "booto",
          "text": "Compiler Explorer is pretty good - you can write C/C++ in the left pane and see the resulting assembly in the right. You can change the target compiler/architecture or the flags being passed to the compiler, or add multiple panes with other compilers. Are you familar with x86? The Intel Software Developer Manuals are a verbose reference, but you can probably find briefer summaries. I'm not familiar with tools that will automatically do the conversion for you.",
          "time": null
        }
      ]
    }
  ]
}