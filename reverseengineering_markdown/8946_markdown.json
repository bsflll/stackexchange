{
  "title": "Working with unsupported binary formats",
  "link": "https://reverseengineering.stackexchange.com/questions/8946/working-with-unsupported-binary-formats",
  "content": "Sometimes I can't start debugging binary due to being unsupported format for example in IDA. For example I found a Nintendo 3DS game and want to debug it. But the problem is that I can't start debugging because IDA doesn't know this binary format. \n\nWhat should I do to tell the debugger the structure of the binary (what  text structure, etc)? \n\n",
  "votes": "1",
  "answers": 1,
  "views": "571",
  "tags": [
    "ida",
    "disassembly",
    "binary-analysis",
    "debugging",
    "reassembly"
  ],
  "user": "user2779060",
  "time": "Apr 2, 2018 at 10:47",
  "comments": [
    {
      "user": "Maurice",
      "text": "You can always load your target manually as a Binary file, and define the Processor type and Loading address.  But, if you are familiar with the specific file format, then writing a Loader is probably the best option.  There is a full chapter on Loader Modules in the (nostarch.com/idapro2.htm](IDA Pro Book)",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "There are two separate issue:\n\nNintendo 3DS is ARM11, so there's a processor module in IDA. As for loader you'll have to search if somebody made one or implement it yourself. As for 3DS debugger plugin for IDA, I highly doubt it exists.\n\n",
      "votes": "1",
      "user": "Anton Kukoba",
      "time": "Apr 3, 2018 at 8:35",
      "is_accepted": false,
      "comments": []
    }
  ]
}