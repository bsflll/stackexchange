{
  "title": "IDA Pro converting to instruction functionality: how to automate.",
  "link": "https://reverseengineering.stackexchange.com/questions/3388/ida-pro-converting-to-instruction-functionality-how-to-automate",
  "content": "I am loading various files that read into IDA as binary. Once I have the GUI in front of me I am able to go through the segments and hit \"c\" in order to convert to instruction/code.\n\nHowever, I am primarily trying to do all my ida work via linux terminal (using the command line ./idal -B input-file). \nIs there a command line flag, or another method, to automate the generating of instructions from the binary files? Or is this something I will have to manually do every time?\n\n",
  "votes": "4",
  "answers": 2,
  "views": "4k",
  "tags": [
    "ida",
    "linux",
    "ida-plugin",
    "idapython"
  ],
  "user": "user3119546",
  "time": "Jan 7, 2014 at 13:58",
  "comments": [
    {
      "user": "user3119546",
      "text": "For additional information: I am running IDA 6.5 on linux ubuntu 12.10. I am primarily looking at MBR files.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I would do something like this in IDAPython:\n\n```\n# I didn't check this code, please use carefully !This code will pass through all defined segments and will try to make code on any unexplored area\n# IDAPython documentation is at https://www.hex-rays.com/products/ida/support/idapython_docs/\n\nimport idautils\nimport idc\n\nfor ea in idautils.Segments():\n    segend = idc.GetSegmentAttr(ea, idc.SEGATTR_END)\n    start = ea\n    while start < segend:\n        idc.MakeCode(start)\n        start = idc.FindUnexplored(start+1, idc.SEARCH_DOWN)\n\n```\nYou can run it with -S command line switch as stated in previous answer\n\n",
      "votes": "3",
      "user": "w s",
      "time": "Jan 7, 2014 at 15:08",
      "is_accepted": true,
      "comments": [
        {
          "user": "user3119546",
          "text": "@w s So this seems to work when I run it via IDA GUI (going to file -> script file) and importing it that way. However, when I run it via terminal line with the -S flag. It comes out without the translated instructions. Is it something wrong with the way I am calling ida?   ./idal -B ~/Desktop/test_binary.dump -S script.py?",
          "time": null
        },
        {
          "user": "user3119546",
          "text": "SOLVED: In order to have a command line switch recognized you need to have it appear before the file to be analysed.",
          "time": null
        }
      ]
    },
    {
      "content": "You can use specify an IDC script on the command line via the -S switch, with which you can try calling AnalyzeArea(); if that doesn't work, you can use MakeCode().\n\n",
      "votes": "2",
      "user": "Jason Geffner",
      "time": "Jan 7, 2014 at 14:09",
      "is_accepted": false,
      "comments": [
        {
          "user": "user3119546",
          "text": "Do you recommend any tutorials on IDC scripting?",
          "time": null
        },
        {
          "user": "Jason Geffner",
          "text": "hex-rays.com/products/ida/support/tutorials/idc",
          "time": null
        }
      ]
    }
  ]
}