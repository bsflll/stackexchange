{
  "title": "Does psVar[-6] refer to 6*sizeof(psVar) bytes before psVar? Can you avoid the negative index?",
  "link": "https://reverseengineering.stackexchange.com/questions/29453/does-psvar-6-refer-to-6sizeofpsvar-bytes-before-psvar-can-you-avoid-the-ne",
  "content": "In this decompiled code, does psVar8[-6] refer to 6*sizeof(psVar8) == 12 bytes before psVar8?\n\n```\npsVar8 = (short *)(&DAT_1412345b4 + named_index * 0x20);\ndo {\n  if (psVar8[-6] == 0) break;\n  // ...\n} while (lVar10 < 6);\n\n```\nIt would seem more intuitive to me if the position of psVar8 was earlier to avoid the negative index. Is there a way to change this in the decompiled code, or a reason not to?\n\nI'm attaching the entire loop in case that is important to the question:\n\n```\n    do {\n      if (psVar8[-6] == 0) break;\n      if (psVar8[-6] == 4) {\n        named_variable = 0;\n        if (0 < *psVar8) {\n          named_variable = (int)*psVar8;\n        }\n        iVar4 = 0x1d;\n        if (named_variable < 0x1d) {\n          iVar4 = named_variable;\n        }\n        *(undefined2 *)(&DAT_145678900 + (longlong)iVar4 * 2) = 1;\n      }\n      lVar10 += 1;\n      psVar8 = psVar8 + 1;\n    } while (lVar10 < 6);\n\n```\n",
  "votes": "0",
  "answers": 1,
  "views": "86",
  "tags": [
    "c",
    "ghidra",
    "pointer"
  ],
  "user": "Anna",
  "time": "Oct 25, 2021 at 10:13",
  "comments": [
    {
      "user": "blabb",
      "text": "no sizeof() does not come in play it is an index into an array look at David Heffermans Answer in this query",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "I think you are running into a case of \"shifted pointers\". For various reasons the compiler might generate code where a pointer to the middle of a struct is returned. There is a Ghidra PR for this, but this isn't merged yet and still has various issues, IDA discusses this feature here\n\n",
      "votes": "2",
      "user": "Florian Magin",
      "time": "Oct 28, 2021 at 8:55",
      "is_accepted": true,
      "comments": []
    }
  ]
}