{
  "title": "Off-By-One handler addresses for ARM Coretex ISR tables",
  "link": "https://reverseengineering.stackexchange.com/questions/33388/off-by-one-handler-addresses-for-arm-coretex-isr-tables",
  "content": "I'm attempting to reverse engineer the firmware from a GD32F303 microprocessor (this is a STM32 clone). In attempting to follow the on-reset control flow, I'm hitting a few things that confuse me:\n\n\n\nThe Flash for these microprocessors is mapped at 0x0800_0000 (mirrored at 0x0000_0000). 0x0000_0004/0x0800_0004 is the primary reset handler:\n\n\n\nWhat I'm stuck on is the fact that all the handlers seem to point at the actual handler function +1 (the names in the listing above are mine).\n\nLooking at the code at 0x0800_05B9:\n\n\n\nGhidra flat out refuses to disassemble starting at 0x05B9, but if you start at 0x05B8 you get a sensible result (cpsid, or disable interrupts).\n\nBasically, the question I have is why do all the interrupt vectors seem to be off by 1? Given ARM thumb mode is 16 bit, how can you even jump to an address that is not even?\n\nWhat is the proper way to interpret this Interrupt Vector Table?\n\n",
  "votes": "0",
  "answers": 1,
  "views": "38",
  "tags": [
    "arm",
    "thumb",
    "microprocessors",
    "coretex"
  ],
  "user": "Fake Name",
  "time": "Feb 16 at 3:34",
  "comments": [],
  "answers_data": [
    {
      "content": "So of course, in following some further assembly later on, I came across the bx opcode:\n\nhttps://stackoverflow.com/a/27084896/268006\n\nI'd still like to run down exactly how the vector table is handled, but it seems reasonable that it uses a similar mechanism, where the LSB is actually a flag to determine whether to continue execution in thumb mode or normal ARM assembly.\n\nFurther, clearing the ghidra disassembly for the reset handler and re-disassembling it with thumb mode produces a disassembly that no longer has the weird undefined1 fields:\n\n\n\nWe instead get a couple of local constants loaded into registers, and then a bx.\n\n",
      "votes": "0",
      "user": "Fake Name",
      "time": "Feb 16 at 20:10",
      "is_accepted": false,
      "comments": [
        {
          "user": "the busybee",
          "text": "See my answer on Stack Overflow, this is a general and well-known feature.",
          "time": null
        },
        {
          "user": "Fake Name",
          "text": "@thebusybee - Yeah, I don't know what I was thinking when I wrote that.",
          "time": null
        }
      ]
    }
  ]
}