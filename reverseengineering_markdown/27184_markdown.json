{
  "title": "How to deal with IDA auto-analysis analyzing invalid paths?",
  "link": "https://reverseengineering.stackexchange.com/questions/27184/how-to-deal-with-ida-auto-analysis-analyzing-invalid-paths",
  "content": "Obfuscation techniques such as opaque predicates often trick IDA's auto-analysis into creating incorrect or contradicting interpretations of the code under analysis.\n\nThere is some mention of controlling IDA's auto-analysis via hooks on the IDA website, however I cannot find other references to this online.\n\nIn my case, I have a list of known-valid branches and I want IDA to \"prefer\" these branches during auto-analysis in order to avoid sp-analysis and invalid decompilation issues.\n\nI have been able to essentially mimic this functionality by scripting my own analysis pass that ignores non- known-valid branches, but I wonder if there is an easier way.\n\n",
  "votes": "1",
  "answers": 1,
  "views": "319",
  "tags": [
    "ida",
    "idapython",
    "deobfuscation"
  ],
  "user": "P. Private",
  "time": "Mar 8, 2021 at 6:45",
  "comments": [],
  "answers_data": [
    {
      "content": "Last time I had that a problem like that, I loaded the executable with auto-analysis disabled, then ran a script that detected valid and invalid branches, and patched the valid branches to be non-conditional and nopped out the invalid branches. After that, I just enabled auto-analysis, and as the invalid branches were removed, the analysis results were fine.\n\nOf course, this depends on being able to find the valid and invalid branch instructions, not just their targets. I am unsure what you mean by \"a list of known-valid branches\", but in case you know the location of the valid branch instructions, or you can write a simple analyzer that detects the patterns with invalid branches, a preprocessor might be a good way to handle the problem.\n\n",
      "votes": "0",
      "user": "Michael Karcher",
      "time": "Mar 23, 2021 at 17:58",
      "is_accepted": true,
      "comments": [
        {
          "user": "Rolf Rolles",
          "text": "I've used techniques like these in situations like these. Here are two of my publications that explain them, and provide source code: msreverseengineering.com/blog/2015/6/29/… msreverseengineering.com/blog/2018/1/23/…",
          "time": null
        }
      ]
    }
  ]
}