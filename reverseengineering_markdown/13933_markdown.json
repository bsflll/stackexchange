{
  "title": "How is linux loaded into a closed platform that has been hacked?",
  "link": "https://reverseengineering.stackexchange.com/questions/13933/how-is-linux-loaded-into-a-closed-platform-that-has-been-hacked",
  "content": "Today I have a question which may be a little uncertain. How would you \"port\" the Linux OS to a new platform? \nFor example; The nintendo 3ds or the PS4, are consoles which have been recently \"hacked\", this means you can run your own unsigned code. So basically, hackers usually port Linux to demonstrate they have full control over the software (usually this is a \"Live\" version of linux since they still can't sign it so even though they can write it to the NAND the bootloader won't load it, since it only runs signed code.\n\nI guess, I may be wrong, they just get a very stripped, linux kernel source code, modify things like the video output (since PC output is completely different from those consoles obviously) and compile it with a cross-compiler for that platform (well the same one they use to compile their programs), and they create some kind of \"loader\" which will load the OS into memory. Actually I'm just making assumptions from what I've seen, so obviously I'm blind in lots of things.\n\nYour help is greatly appreciated\n\nCheers,\nPedro.\n\n",
  "votes": "0",
  "answers": 1,
  "views": "99",
  "tags": [
    "linux"
  ],
  "user": "78dtat78da",
  "time": "Nov 15, 2016 at 14:21",
  "comments": [],
  "answers_data": [
    {
      "content": "Your question could be split into two:\n\nAnswers below:\n\n",
      "votes": "1",
      "user": "Vladislav Ivanov",
      "time": "Nov 15, 2016 at 8:22",
      "is_accepted": true,
      "comments": [
        {
          "user": "78dtat78da",
          "text": "Great answer @johndoe . I'll probably accept it, I just have a few questions; Can you point me to some resources that describe all that process of copying into memory, setting boot parameters etc (if it is a \"teachable\" thing). Also, what do you mean with \"On most CPUs with memory protection it's only enabled by OS kernel after the loader has already run.\" What is enabled? Thanks.",
          "time": null
        },
        {
          "user": "Vladislav Ivanov",
          "text": "@PedroJavierFern√°ndez 1. Regarding boot process: it highly depends on a hardware platform. For embedded devices, look up u-boot (in many cases it acts as a second stage bootloader after the very initial ROM code is executed by the chip). In modern PCs, UEFI firmware loads a bootloader EFI image into memory. 2. I should have worded that better. Memory protection is initially disabled and the bootloader puts the boot image to an absolute offset in memory.",
          "time": null
        },
        {
          "user": "78dtat78da",
          "text": "thanks. I still have some questions. 1. You are talking about a kind of bootloader (u boot) this is interesting to learn how to code your own loader, but what linux version shall it load? I'm not too much into Linux, I know there are different versions. Which one would be the one that best fits a system with small resources like those mentioned above? 2. Can you point to to some general information about how Linux works? I would like to learn about it. The aim of this comes from the question, shall I only load the Linux kernel or something else too? Since I don't know too much Im lost",
          "time": null
        }
      ]
    }
  ]
}