{
  "title": "Viewing an exported DLL function in OllyDbg - garbage code",
  "link": "https://reverseengineering.stackexchange.com/questions/6104/viewing-an-exported-dll-function-in-ollydbg-garbage-code",
  "content": "Being rather new to the concept of RE, I wanted to try and take a look at the assembly code in one DLL that I know exports some functions.\n\nFirst, I used this tool - http://www.nirsoft.net/utils/dll_export_viewer.html - to obtain a list of exports within said DLL. These are some of the functions:\n\n```\nGI_Call 0x100590a7  0x000590a7  2 (0x2) mydll.dll   I:\\test\\mydll.dll   Exported Function   \nGI_CleanReturnStack 0x10058eae  0x00058eae  3 (0x3) mydll.dll  I:\\test\\mydll.dll    Exported Function   \nGI_Cmd_Argc 0x10058bd4  0x00058bd4  4 (0x4) mydll.dll   I:\\test\\mydll.dll   Exported Function   \nGI_Cmd_Argc_sv  0x10059593  0x00059593  5 (0x5) mydll.dll   I:\\test\\mydll.dll   Exported Function   \n\n```\nWhen I, however, load the DLL up in OllyDbg and browse to any of these addresses, I get instructions that don't really resemble a beginning of a function, for example GI_Call:\n\n```\n100590A7     10E9                ADC CL,CH\n100590A9     CE                  INTO\n100590AA     FC                  CLD\n100590AB     FFFF                ???                                                        ; Unknown command\n100590AD     FF75 10             PUSH DWORD PTR SS:[EBP+10]\n100590B0     8D45 FC             LEA EAX,DWORD PTR SS:[EBP-4]\n100590B3     50                  PUSH EAX\n100590B4     57                  PUSH EDI\n\n```\nWhat's even more puzzling is that once I scroll up/down, the code actually changes - there's no\n\n```\n100590A7     10E9                ADC CL,CH\n\n```\nanymore, it changes to a completely different instruction, also that address is gone.\n\nAm I doing something wrong? Or is the DLL possibly encrypted? Though if it is, how could DLL Export Viewer dump the exports so easily?\n\n",
  "votes": "2",
  "answers": 1,
  "views": "6k",
  "tags": [
    "disassembly",
    "ollydbg",
    "dll",
    "functions"
  ],
  "user": "user4520",
  "time": "Aug 21, 2014 at 7:21",
  "comments": [],
  "answers_data": [
    {
      "content": "Your library might get loaded to a location that's completely different from the one it wants to be loaded at, i.e. the address in the header, due to ASLR.\n\nAlso, when loading a DLL, Ollydbg doesn't load the DLL directly; instead, it uses loaddll.exe. Which means, it starts the executable, but the breakpoint it sets is before loaddll has a chance to, well, load the DLL.\n\nTry the following:\n\nThe reason for your 'disappearing' instruction is that it's the middle of another instruction. Consider this function start:\n\n```\n10001280 > 53               PUSH EBX\n10001281   56               PUSH ESI\n10001282   57               PUSH EDI\n10001283   8B7C24 10        MOV EDI,DWORD PTR SS:[ESP+10]\n10001287   8BF1             MOV ESI,ECX\n10001289   3BF7             CMP ESI,EDI\n1000128B   0F94C3           SETE BL\n1000128E   84DB             TEST BL,BL\n10001290   75 32            JNZ SHORT 100012C4\n\n```\nThe byte at 10001284, 0x7c, is part of the instruction at 1001283. But if you disassemble from 10001284,\n\n```\n10001284   7C 24            JL SHORT 100012AA\n10001286   108B F13BF70F    ADC BYTE PTR DS:[EBX+FF73BF1],CL\n1000128C   94               XCHG EAX,ESP\n1000128D   C3               RETN\n1000128E   84DB             TEST BL,BL\n10001290   75 32            JNZ SHORT 100012C4\n\n```\nThe wrong bytes get interpreted as instructions. Once you scroll up a few rows, Ollydbg syncs correctly again - and shows the 'real' instructions.\n\n",
      "votes": "3",
      "user": "perror",
      "time": "Aug 21, 2014 at 8:20",
      "is_accepted": true,
      "comments": [
        {
          "user": "user4520",
          "text": "Thanks, that made it clear. I'll remember to upvote as soon as I get 15 rep.",
          "time": null
        },
        {
          "user": "user4520",
          "text": "Finally upvoted :)",
          "time": null
        }
      ]
    }
  ]
}