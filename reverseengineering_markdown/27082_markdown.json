{
  "title": "Objdump -S without assembly",
  "link": "https://reverseengineering.stackexchange.com/questions/27082/objdump-s-without-assembly",
  "content": "I compiled my c source code and got an elf.\n\nI use \"objdump -Sl\" but don't need the assembly instructions.\n\nIs there a way to use objdump without the assembly part (or other tool)?\n\nfor example, now i get this:\n\n```\n**/home/test/src/main.c:764\n{\n    return OPERATE_ON;\n}\nelse\n{\n    return OPERATE_OFF;**\n 102:   ed88        li  v1,8\n 103:   0044 1818   movn    v1,a0,v0\n 104:   3042 0000   addiu   v0,v0,0\n 108:   c845        sw  v0,20(sp)\n 10a:   41a7 1000   lui a3,0x1000\n 10e:   3040 02fc   li  v0,764\n\n```\nbut I only care about the c code:\n\n```\n    **/home/test/src/main.c:764\n{\n    return OPERATE_ON;\n}\nelse\n{\n    return OPERATE_OFF;**\n\n```\n*I know it's possible with tee or regex, but I don't want the assembly instruction at all to make the objdump work faster\n\nThanks\n\n",
  "votes": "0",
  "answers": 1,
  "views": "95",
  "tags": [
    "assembly",
    "objdump"
  ],
  "user": "iii2",
  "time": "Feb 23, 2021 at 19:41",
  "comments": [],
  "answers_data": [
    {
      "content": "If you don't need assembly, just read the source file (main.c). objdump is a debug tool and by using it you can check what assembly instructions correspond to source lines. If you don't need this functionality, why are you using objdump at all?\n\n",
      "votes": "1",
      "user": "Igor Skochinsky",
      "time": "Feb 23, 2021 at 21:16",
      "is_accepted": false,
      "comments": [
        {
          "user": "iii2",
          "text": "I work on a large legacy code with complicated complication and flags. with objdump I can ignore parts of the code that hasn't been complied for the coonfiguration.",
          "time": null
        }
      ]
    }
  ]
}