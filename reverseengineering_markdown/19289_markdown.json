{
  "title": "VirtualProtect failed to revert protections on mrdata section of ntdll, why?",
  "link": "https://reverseengineering.stackexchange.com/questions/19289/virtualprotect-failed-to-revert-protections-on-mrdata-section-of-ntdll-why",
  "content": "i perform a loop in assembly where i am parsing the sections of ntdll change their memory permissions with VirtualProtect and then revert them back to their original permissions. the code looks like this:\n\n```\n\nlea eax, [OldProtect]\npush eax                      //here it will store the old protection value\npush PAGE_EXECUTE_READWRITE\npush dwSize                   //size of section\npush lpAddress                //start address of section\ncall Virtual_Alloc\n...\nblahblah\n...\nlea eax, [OldProtect]\npush eax\npush OldProtect               //the protection value to revert\npush dwSize                   //size of section               \npush lpAddress                //address of section             \ncall Virtual_Protect\n\n```\nThe loop runs correctly on the first three sections .text, .RT and .data which have initial memory permissions ER, ER, RW respectively.\n\nThe problem is that the in the next section which is the .mrdata section and it is readable only, the memory protection changed succesfully from R to ERW. But When i try to revert back to the old protection the return value is 0x00000050 in eax and i get an exception. \n\nWhat i want to ask is  why? Is this a false use of VirtualProtect? Or has something to do with the .mrdata section\n\n",
  "votes": "1",
  "answers": 1,
  "views": "819",
  "tags": [
    "windows",
    "assembly",
    "memory",
    "dll",
    "protection"
  ],
  "user": "n1h1l",
  "time": "Sep 8, 2018 at 0:43",
  "comments": [
    {
      "user": "Abigail",
      "text": "a non zero return value from VirtualProtect would indicate success according to the microsoft docs. maybe we need more info about the exception and some reproducible code.",
      "time": null
    }
  ],
  "answers_data": [
    {
      "content": "Oook i think i i found an answer but i didn't try it and needs more research, it seems there is a special Windows API function used to change protections on .mrdata called LdrProtectMrdata( bProtect )\n\nsource: http://mohamoha.club/2017/12/23/Bypass_CFG_Through_MRDATA/\n\n",
      "votes": "1",
      "user": "n1h1l",
      "time": "Sep 8, 2018 at 15:04",
      "is_accepted": false,
      "comments": []
    }
  ]
}