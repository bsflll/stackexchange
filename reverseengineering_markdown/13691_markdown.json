{
  "title": "How does serial number is checked in this crackme?",
  "link": "https://reverseengineering.stackexchange.com/questions/13691/how-does-serial-number-is-checked-in-this-crackme",
  "content": "I am trying to reverse engineer a crackme exe. I have managed to find the function that checks serial number based on email input. So, 4 arguments are pushed to the stack (esp) which are the input values and their lengths.\n\nIllustration using IDA:\n\n \n\nStack view using OllyDbg after function gets called:\n\n\n\nOf course, I am able to make the program show \"Serial is valid\" using either Run to cursor command or setting al to 0x1. However, my the aim is to somehow extract the correct serial number from program. My digging into sub_402B10 gave that neither the length of email nor serial can be greater than 255(correct me if said wrong),\n\n\n\nbut nothing further. I only see there some xor's shiftings in loops. So my question is how can the sub_402B10 function can return a boolean value considering there is not any strcmp-like function. Could someone provide useful information how the serial checking can be carried out by the program?\n\nI know this post will be closed or put on hold as  off-topic but I have spent my 4 days on going through every byte of sub_402B10 and looking the changes in stack and registers. Please, at least, give a direction to me, I've ran out of keywords to search on google.\n\nHere is the executable file. It has .txt format since google drive did't let me upload it otherwise.\n\n",
  "votes": "0",
  "answers": 1,
  "views": "2k",
  "tags": [
    "ida",
    "ollydbg",
    "crackme"
  ],
  "user": "Orkhan Alikhanov",
  "time": "Oct 10, 2016 at 23:15",
  "comments": [],
  "answers_data": [
    {
      "content": "To summarize your current effort: So you have accomplished to find WHERE the magic is happening. But you didn't DEMYSTIFY the magic itself.\n\nIn detail, you shouldn't expect a simple strcmp-like serial checking method. If you step back for a second, you will probably realize that a simple strcmp-like comparison would be far too easy, right? This is probably only the case in some basic tutorials like this one.\n\nTo cite your question: \n\nThat is exactly what is your job, so you have to understand all the xor, shift and loop magic and how it generates the final 0x1 output.\n\nSo you have two choices to proceed:\n\nPerhaps you should take a look at some tutorials, to get a feeling of cracking a keygenme: Infosec.\n\nHope this helps and points you in the right direction!\n\n",
      "votes": "2",
      "user": "knx",
      "time": "Oct 11, 2016 at 9:43",
      "is_accepted": false,
      "comments": [
        {
          "user": "Orkhan Alikhanov",
          "text": "Thanks for your answer. It is not homework. It is from Kaspersky's expired crackme challenge. By the way is it possible for  program to not store the generated serial. Comparing them differently. I have given link to the executable. Check it out if you are interested.",
          "time": null
        }
      ]
    }
  ]
}