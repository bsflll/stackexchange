{
  "title": "Emulate TP-Link WR841N using Qemu",
  "link": "https://reverseengineering.stackexchange.com/questions/8095/emulate-tp-link-wr841n-using-qemu",
  "content": "I have downloaded a few different versions of the firmware from the TP-Link website. I've been piecing together details on how to achieve this but I'm missing some key points. \n\nFollowing instructions from devttys0 and their great blog, used binwalk to unpack the firmware.\n\nFollowing some details picked up from this previous question [Emulate TP-LINK WR740N with QEMU I've attempted to bot using the Malta debian kernel.\n\nThe issue I've had with the previous question was that there was never a final example of the arguments supplied to Qemu.\n\n```\nqemu-system-mips -M malta -kernel '/media/sf__share/vmlinux-2.6.32-5-4kc-malta' -nographic -append \"init=/sbin/init root=/dev/sda console=ttyS0,115200\" -hda 'myFileSystem.img'\n\n```\nas well as (init=/bin/sh):\n\n```\nqemu-system-mips -M malta -kernel '/media/sf__share/vmlinux-2.6.32-5-4kc-malta' -nographic -append \"init=/bin/sh root=/dev/sda console=ttyS0,115200\" -hda 'myFileSystem.img'\n\n```\nIn almost all cases I get:\n\n```\nWarning: unable to open an initial console.\n\n```\nI'm happy to accept some pointers on what I might be missing?\n\nMy objective is to create an emulated MIPS Linux instance with the rootfs extracted from the firmware image. I then have further plans, but outside the scope of my initial issues.\n\n",
  "votes": "5",
  "answers": 0,
  "views": "2k",
  "tags": [
    "mips",
    "qemu",
    "emulation"
  ],
  "user": "elgringo",
  "time": "Jan 26, 2015 at 13:11",
  "comments": [],
  "answers_data": []
}