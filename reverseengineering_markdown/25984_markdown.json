{
  "title": "find cheat engine pointers in ghidra",
  "link": "https://reverseengineering.stackexchange.com/questions/25984/find-cheat-engine-pointers-in-ghidra",
  "content": "I find a pointer of my health so a function would have made the pointer and put the health in it (tell me if I'm wrong) how do I look for the function?\n\nNote,\nas comments point out: health - I talk about a games health. So Health points. I want to find the function that handles this.\n\n",
  "votes": "3",
  "answers": 2,
  "views": "2k",
  "tags": [
    "memory",
    "assembly"
  ],
  "user": "Hacker Boy",
  "time": "Jan 17, 2023 at 10:28",
  "comments": [],
  "answers_data": [
    {
      "content": "Not sure if I understand you correctly. If you want to find a function that edits your player health (and possibly find a static address of for example player class) you can just simply right click the address of health you found, then click Find out what writes to this address. All addresses (in the middle of some function) that written to your health will be listed.\n\n\n\nYou can then copy the address that belongs to some function and inspect the function in for example Ghidra.\n\n",
      "votes": "2",
      "user": "morsisko",
      "time": "Sep 27, 2020 at 12:44",
      "is_accepted": false,
      "comments": [
        {
          "user": "Jane",
          "text": "This is a great answer.",
          "time": null
        }
      ]
    },
    {
      "content": "Correct me if I'm wrong about my understanding of what you want to achieve:\nFind a specific memory address in a running application(I assume a game? becuase you're talking about health, so I guess health-points?)\nIf so, have you found the address already in cheat engine?\nIf yes, you can search for strings/values in both Cheat Engine and in Ghidra.\n\ndescribed in this article, Ghidra code analysis\n\n```\nInvestigate a String Reference\nFigure 13: View string references\n\n```\n",
      "votes": "1",
      "user": "Jane",
      "time": "Sep 27, 2020 at 11:56",
      "is_accepted": false,
      "comments": []
    }
  ]
}