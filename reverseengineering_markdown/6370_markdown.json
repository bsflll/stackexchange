{
  "title": "Debug Android Native Code without source",
  "link": "https://reverseengineering.stackexchange.com/questions/6370/debug-android-native-code-without-source",
  "content": "Id like to debug (to log function calls) native ARM Android Code in a shared library. So far I got no source and tried to disassemble it with IDA, but its hard to track all the calls down to a specific function.\nSo I came up with IDA's android_server, which didnt work(not breaking on breakpoints, pausing takes me always to the same loop, cant step through) and Android NDK's gbdserver using as remote GDB Debugger in IDA based on that http://forum.xda-developers.com/showpost.php?p=35602033&postcount=5 which results in the same. Using NDK's gdbserver and cli gdb didnt work, cause it requires the (source) project folder.\nThats why Id like to ask if there is  a way to debug native code w/o source or tracking down the calls is possible?\n(in this case nearly all of the app runs on native code/the funcs Id like to track arent called directly over JNI)\n\n",
  "votes": "2",
  "answers": 0,
  "views": "3k",
  "tags": [
    "ida",
    "debugging",
    "gdb",
    "android"
  ],
  "user": "Tearsdontfalls",
  "time": "Oct 3, 2014 at 20:11",
  "comments": [
    {
      "user": "Guntram Blohm",
      "text": "You don't need the source to run gdb. There are some commands that rely on source/symbols, like disassemble, but you can use commands like x/20i <address> instead. My answer to reverseengineering.stackexchange.com/questions/4216/â€¦ might help you.",
      "time": null
    }
  ],
  "answers_data": []
}